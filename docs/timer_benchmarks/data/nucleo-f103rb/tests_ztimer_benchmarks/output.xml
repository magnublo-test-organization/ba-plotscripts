<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2 (Python 3.7.3 on linux)" generated="20201030 15:54:50.249" rpa="false">
<suite id="s1" name="tests_ztimer_benchmarks" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 15:54:51.512" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 15:54:51.529" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 15:54:52.372" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 15:54:51.508" endtime="20201030 15:54:52.374"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 15:54:55.380" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20201030 15:54:52.376" endtime="20201030 15:54:55.381"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.505" endtime="20201030 15:54:55.384"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:55.390" endtime="20201030 15:54:55.661"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:55.386" endtime="20201030 15:54:55.662"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:55.677" endtime="20201030 15:54:55.691"></status>
</kw>
<msg timestamp="20201030 15:54:55.691" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['(): This is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Succe...</msg>
<status status="PASS" starttime="20201030 15:54:55.675" endtime="20201030 15:54:55.692"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:55.694" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['(): This is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Succe...</msg>
<status status="PASS" starttime="20201030 15:54:55.692" endtime="20201030 15:54:55.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:54:55.698" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:54:55.696" endtime="20201030 15:54:55.698"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:55.672" endtime="20201030 15:54:55.699"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:55.669" endtime="20201030 15:54:55.700"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:55.668" endtime="20201030 15:54:55.700"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:54:55.704" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:54:55.703" endtime="20201030 15:54:55.705"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:55.701" endtime="20201030 15:54:55.705"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:55.667" endtime="20201030 15:54:55.705"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:55.666" endtime="20201030 15:54:55.705"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:55.706" endtime="20201030 15:54:55.708"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:55.664" endtime="20201030 15:54:55.708"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:55.709" endtime="20201030 15:54:55.711"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:55.662" endtime="20201030 15:54:55.712"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.502" endtime="20201030 15:54:55.712"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:55.719" endtime="20201030 15:54:55.738"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:55.717" endtime="20201030 15:54:55.739"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:55.756" endtime="20201030 15:54:55.770"></status>
</kw>
<msg timestamp="20201030 15:54:55.771" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:55.754" endtime="20201030 15:54:55.771"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:55.774" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:55.772" endtime="20201030 15:54:55.774"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:54:55.777" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:54:55.775" endtime="20201030 15:54:55.777"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:55.751" endtime="20201030 15:54:55.778"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:55.748" endtime="20201030 15:54:55.779"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:55.746" endtime="20201030 15:54:55.779"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:54:55.783" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:54:55.782" endtime="20201030 15:54:55.783"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:55.780" endtime="20201030 15:54:55.784"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:55.745" endtime="20201030 15:54:55.784"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:55.744" endtime="20201030 15:54:55.784"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:55.785" endtime="20201030 15:54:55.786"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:55.742" endtime="20201030 15:54:55.787"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:55.740" endtime="20201030 15:54:55.788"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:55.716" endtime="20201030 15:54:55.788"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:55.796" endtime="20201030 15:54:55.806"></status>
</kw>
<msg timestamp="20201030 15:54:55.807" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:55.794" endtime="20201030 15:54:55.807"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:55.809" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:55.808" endtime="20201030 15:54:55.810"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:55.810" endtime="20201030 15:54:55.812"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:55.791" endtime="20201030 15:54:55.813"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:55.789" endtime="20201030 15:54:55.814"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:55.818" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201030 15:54:55.817" endtime="20201030 15:54:55.819"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:55.821" level="INFO">VALUE: ztimer</msg>
<status status="PASS" starttime="20201030 15:54:55.820" endtime="20201030 15:54:55.821"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:55.814" endtime="20201030 15:54:55.822"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:54:55.712" endtime="20201030 15:54:55.822" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 15:54:50.524" endtime="20201030 15:54:55.826"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 15:54:55.889" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 15:54:55.899" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 15:54:56.786" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 15:54:55.887" endtime="20201030 15:54:56.788"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 15:54:59.796" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20201030 15:54:56.791" endtime="20201030 15:54:59.797"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:55.886" endtime="20201030 15:54:59.799"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:59.803" endtime="20201030 15:55:00.166"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.800" endtime="20201030 15:55:00.168"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:00.199" endtime="20201030 15:55:00.219"></status>
</kw>
<msg timestamp="20201030 15:55:00.221" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:00.195" endtime="20201030 15:55:00.221"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:00.228" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:00.223" endtime="20201030 15:55:00.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:55:00.236" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:55:00.231" endtime="20201030 15:55:00.237"></status>
</kw>
<status status="FAIL" starttime="20201030 15:55:00.189" endtime="20201030 15:55:00.239"></status>
</kw>
<status status="FAIL" starttime="20201030 15:55:00.183" endtime="20201030 15:55:00.241"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.180" endtime="20201030 15:55:00.241"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:55:00.250" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:55:00.248" endtime="20201030 15:55:00.251"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.243" endtime="20201030 15:55:00.251"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.178" endtime="20201030 15:55:00.252"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.176" endtime="20201030 15:55:00.252"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:00.254" endtime="20201030 15:55:00.257"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.173" endtime="20201030 15:55:00.259"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:00.261" endtime="20201030 15:55:00.265"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.170" endtime="20201030 15:55:00.267"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:55.884" endtime="20201030 15:55:00.267"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:00.282" endtime="20201030 15:55:00.304"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.278" endtime="20201030 15:55:00.306"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:00.407" endtime="20201030 15:55:00.427"></status>
</kw>
<msg timestamp="20201030 15:55:00.429" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:00.403" endtime="20201030 15:55:00.429"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:00.436" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:00.431" endtime="20201030 15:55:00.437"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:55:00.443" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:55:00.438" endtime="20201030 15:55:00.444"></status>
</kw>
<status status="FAIL" starttime="20201030 15:55:00.396" endtime="20201030 15:55:00.446"></status>
</kw>
<status status="FAIL" starttime="20201030 15:55:00.323" endtime="20201030 15:55:00.448"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.321" endtime="20201030 15:55:00.448"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:55:00.457" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:55:00.455" endtime="20201030 15:55:00.458"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.450" endtime="20201030 15:55:00.458"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.319" endtime="20201030 15:55:00.458"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.317" endtime="20201030 15:55:00.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:00.461" endtime="20201030 15:55:00.464"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.312" endtime="20201030 15:55:00.466"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.308" endtime="20201030 15:55:00.468"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.275" endtime="20201030 15:55:00.468"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:00.492" endtime="20201030 15:55:00.507"></status>
</kw>
<msg timestamp="20201030 15:55:00.508" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:00.488" endtime="20201030 15:55:00.508"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:00.514" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:00.510" endtime="20201030 15:55:00.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:00.517" endtime="20201030 15:55:00.521"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.480" endtime="20201030 15:55:00.523"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.475" endtime="20201030 15:55:00.524"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:00.544" endtime="20201030 15:55:00.906"></status>
</kw>
<msg timestamp="20201030 15:55:00.912" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.201285069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.201298083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:00.540" endtime="20201030 15:55:00.913"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:00.925" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.201285069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.201298083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:00.914" endtime="20201030 15:55:00.926"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:00.927" endtime="20201030 15:55:00.931"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.531" endtime="20201030 15:55:00.933"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.526" endtime="20201030 15:55:00.934"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:00.943" level="INFO">${RESULT} = [{'diff': 1.3013999999977877e-05}, {'diff': 1.2541000000004798e-05}, {'diff': 1.580500000000762e-05}, {'diff': 8.805000000000618e-06}, {'diff': 6.805999999998091e-06}, {'diff': 9.139000000019104e-06},...</msg>
<status status="PASS" starttime="20201030 15:55:00.936" endtime="20201030 15:55:00.944"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:55:00.952" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.3013999999977877e-05, 1.2541000000004798e-05, 1.580500000000762e-05, 8.805000000000618e-06, 6.805999999998091e-06, 9.139000000019104e-06, 5.58400000000292e-06, 1.6820000000000723e-05, 1.11...</msg>
<status status="PASS" starttime="20201030 15:55:00.946" endtime="20201030 15:55:00.952"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:00.962" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:55:00.960" endtime="20201030 15:55:00.963"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:00.967" level="INFO">VALUE: [1.3013999999977877e-05, 1.2541000000004798e-05, 1.580500000000762e-05, 8.805000000000618e-06, 6.805999999998091e-06, 9.139000000019104e-06, 5.58400000000292e-06, 1.6820000000000723e-05, 1.1138999999993349e-05, 1.2916000000001704e-05, 9.459000000017204e-06, 1.4916999999975422e-05, 1.515299999998998e-05, 1.0499999999996623e-05, 8.305000000013996e-06, 9.916999999998177e-06, 1.156899999998906e-05, 1.0249999999989434e-05, 1.0874999999993529e-05, 5.596999999996077e-06, 1.2694000000007533e-05, 1.1139000000021104e-05, 1.580500000000762e-05, 1.388899999998916e-05, 1.2041999999989894e-05]</msg>
<status status="PASS" starttime="20201030 15:55:00.964" endtime="20201030 15:55:00.968"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.953" endtime="20201030 15:55:00.969"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:00.979" endtime="20201030 15:55:01.000"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.974" endtime="20201030 15:55:01.002"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.972" endtime="20201030 15:55:01.003"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.472" endtime="20201030 15:55:01.003"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.471" endtime="20201030 15:55:01.004"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:01.024" endtime="20201030 15:55:01.038"></status>
</kw>
<msg timestamp="20201030 15:55:01.039" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:01.021" endtime="20201030 15:55:01.040"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:01.045" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:01.041" endtime="20201030 15:55:01.046"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:01.048" endtime="20201030 15:55:01.051"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.014" endtime="20201030 15:55:01.053"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.009" endtime="20201030 15:55:01.054"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:01.072" endtime="20201030 15:55:01.414"></status>
</kw>
<msg timestamp="20201030 15:55:01.420" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036243139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036255611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:01.068" endtime="20201030 15:55:01.420"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:01.435" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036243139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036255611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:01.423" endtime="20201030 15:55:01.436"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:01.438" endtime="20201030 15:55:01.444"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.060" endtime="20201030 15:55:01.446"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.056" endtime="20201030 15:55:01.448"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:01.460" level="INFO">${RESULT} = [{'diff': 1.2471999999999483e-05}, {'diff': 1.2249999999998373e-05}, {'diff': 1.2903000000001608e-05}, {'diff': 9.458000000003852e-06}, {'diff': 1.0222000000004172e-05}, {'diff': 1.2820000000003662e-0...</msg>
<status status="PASS" starttime="20201030 15:55:01.450" endtime="20201030 15:55:01.461"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:55:01.471" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.2471999999999483e-05, 1.2249999999998373e-05, 1.2903000000001608e-05, 9.458000000003852e-06, 1.0222000000004172e-05, 1.2820000000003662e-05, 1.5028000000000263e-05, 1.1347000000001828e-05,...</msg>
<status status="PASS" starttime="20201030 15:55:01.463" endtime="20201030 15:55:01.472"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:01.482" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:55:01.479" endtime="20201030 15:55:01.482"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:01.487" level="INFO">VALUE: [1.2471999999999483e-05, 1.2249999999998373e-05, 1.2903000000001608e-05, 9.458000000003852e-06, 1.0222000000004172e-05, 1.2820000000003662e-05, 1.5028000000000263e-05, 1.1347000000001828e-05, 5.139000000001226e-06, 1.6930000000005274e-05, 1.2249999999998373e-05, 8.167000000003366e-06, 1.2485999999999053e-05, 1.3472999999999957e-05, 1.5000000000001124e-05, 1.2471999999999483e-05, 1.0486999999996527e-05, 1.0388999999999537e-05, 1.634699999999989e-05, 7.79200000000646e-06, 1.584699999999939e-05, 1.1930999999999747e-05, 1.0458000000004852e-05, 8.889000000004976e-06, 1.4250000000000373e-05]</msg>
<status status="PASS" starttime="20201030 15:55:01.484" endtime="20201030 15:55:01.488"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.473" endtime="20201030 15:55:01.489"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:01.499" endtime="20201030 15:55:01.520"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.494" endtime="20201030 15:55:01.522"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.492" endtime="20201030 15:55:01.523"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.006" endtime="20201030 15:55:01.523"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.005" endtime="20201030 15:55:01.524"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:01.544" endtime="20201030 15:55:01.557"></status>
</kw>
<msg timestamp="20201030 15:55:01.558" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:01.541" endtime="20201030 15:55:01.558"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:01.564" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:01.560" endtime="20201030 15:55:01.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:01.566" endtime="20201030 15:55:01.571"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.533" endtime="20201030 15:55:01.573"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.529" endtime="20201030 15:55:01.575"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:01.594" endtime="20201030 15:55:01.935"></status>
</kw>
<msg timestamp="20201030 15:55:01.939" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036147472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036156944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:01.590" endtime="20201030 15:55:01.940"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:01.952" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036147472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036156944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:01.942" endtime="20201030 15:55:01.953"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:01.954" endtime="20201030 15:55:01.958"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.582" endtime="20201030 15:55:01.960"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.576" endtime="20201030 15:55:01.961"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:01.970" level="INFO">${RESULT} = [{'diff': 9.472000000003422e-06}, {'diff': 1.558299999999957e-05}, {'diff': 1.0943999999998844e-05}, {'diff': 1.2596999999996139e-05}, {'diff': 1.2722999999999207e-05}, {'diff': 1.1139000000000288e-05...</msg>
<status status="PASS" starttime="20201030 15:55:01.963" endtime="20201030 15:55:01.971"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:55:01.978" level="INFO">${GPIO_OVERHEAD} = {'diff': [9.472000000003422e-06, 1.558299999999957e-05, 1.0943999999998844e-05, 1.2596999999996139e-05, 1.2722999999999207e-05, 1.1139000000000288e-05, 1.0792000000002522e-05, 1.180499999999668e-05, 1...</msg>
<status status="PASS" starttime="20201030 15:55:01.972" endtime="20201030 15:55:01.979"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:01.988" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:55:01.986" endtime="20201030 15:55:01.989"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:01.993" level="INFO">VALUE: [9.472000000003422e-06, 1.558299999999957e-05, 1.0943999999998844e-05, 1.2596999999996139e-05, 1.2722999999999207e-05, 1.1139000000000288e-05, 1.0792000000002522e-05, 1.180499999999668e-05, 1.0861000000000898e-05, 1.1139000000000288e-05, 8.985999999995553e-06, 1.5361000000005398e-05, 1.0124999999999718e-05, 9.583000000000508e-06, 6.02800000000514e-06, 8.374999999997967e-06, 1.1694999999999067e-05, 8.679999999997023e-06, 1.8055999999995465e-05, 1.3347000000003828e-05, 1.3041999999997833e-05, 9.055000000000868e-06, 1.2987000000005966e-05, 8.471999999995483e-06, 9.583999999999981e-06]</msg>
<status status="PASS" starttime="20201030 15:55:01.991" endtime="20201030 15:55:01.994"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.980" endtime="20201030 15:55:01.996"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:02.005" endtime="20201030 15:55:02.027"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.001" endtime="20201030 15:55:02.029"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.998" endtime="20201030 15:55:02.030"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.526" endtime="20201030 15:55:02.030"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.524" endtime="20201030 15:55:02.031"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:02.051" endtime="20201030 15:55:02.065"></status>
</kw>
<msg timestamp="20201030 15:55:02.066" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:02.048" endtime="20201030 15:55:02.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:02.072" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:02.068" endtime="20201030 15:55:02.073"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:02.076" endtime="20201030 15:55:02.083"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.040" endtime="20201030 15:55:02.086"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.036" endtime="20201030 15:55:02.089"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:02.121" endtime="20201030 15:55:02.459"></status>
</kw>
<msg timestamp="20201030 15:55:02.464" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036280889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036295569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:02.115" endtime="20201030 15:55:02.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:02.477" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036280889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036295569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:02.466" endtime="20201030 15:55:02.478"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:02.480" endtime="20201030 15:55:02.484"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.102" endtime="20201030 15:55:02.486"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.093" endtime="20201030 15:55:02.487"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:02.497" level="INFO">${RESULT} = [{'diff': 1.4680000000003024e-05}, {'diff': 9.985999999996553e-06}, {'diff': 1.0819000000002188e-05}, {'diff': 1.0694000000005532e-05}, {'diff': 1.5236000000001804e-05}, {'diff': 1.5249999999994435e-0...</msg>
<status status="PASS" starttime="20201030 15:55:02.489" endtime="20201030 15:55:02.497"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:55:02.506" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.4680000000003024e-05, 9.985999999996553e-06, 1.0819000000002188e-05, 1.0694000000005532e-05, 1.5236000000001804e-05, 1.5249999999994435e-05, 1.569499999999613e-05, 9.014000000001632e-06, 4...</msg>
<status status="PASS" starttime="20201030 15:55:02.499" endtime="20201030 15:55:02.506"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:02.517" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:55:02.514" endtime="20201030 15:55:02.517"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:02.522" level="INFO">VALUE: [1.4680000000003024e-05, 9.985999999996553e-06, 1.0819000000002188e-05, 1.0694000000005532e-05, 1.5236000000001804e-05, 1.5249999999994435e-05, 1.569499999999613e-05, 9.014000000001632e-06, 4.903000000000546e-06, 1.0374999999999968e-05, 1.3000000000006062e-05, 8.486000000001992e-06, 1.3805999999998153e-05, 1.4263999999999943e-05, 1.5819999999999723e-05, 1.1999999999998123e-05, 6.235999999999742e-06, 9.806000000001092e-06, 1.3792000000005522e-05, 7.250000000000312e-06, 1.0707999999998163e-05, 1.5041999999999833e-05, 1.691699999999824e-05, 9.860999999999898e-06, 9.693999999997593e-06]</msg>
<status status="PASS" starttime="20201030 15:55:02.519" endtime="20201030 15:55:02.523"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.508" endtime="20201030 15:55:02.524"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:02.535" endtime="20201030 15:55:02.559"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.530" endtime="20201030 15:55:02.561"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.527" endtime="20201030 15:55:02.563"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.032" endtime="20201030 15:55:02.564"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.031" endtime="20201030 15:55:02.565"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:02.601" endtime="20201030 15:55:02.616"></status>
</kw>
<msg timestamp="20201030 15:55:02.617" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:02.595" endtime="20201030 15:55:02.618"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:02.624" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:02.620" endtime="20201030 15:55:02.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:02.627" endtime="20201030 15:55:02.631"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.583" endtime="20201030 15:55:02.632"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.575" endtime="20201030 15:55:02.634"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:02.652" endtime="20201030 15:55:02.989"></status>
</kw>
<msg timestamp="20201030 15:55:02.994" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.058145208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.058156903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:02.648" endtime="20201030 15:55:02.994"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:03.007" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.058145208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.058156903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:02.996" endtime="20201030 15:55:03.008"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:03.010" endtime="20201030 15:55:03.014"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.641" endtime="20201030 15:55:03.016"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.636" endtime="20201030 15:55:03.017"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:03.027" level="INFO">${RESULT} = [{'diff': 1.1695000000006006e-05}, {'diff': 1.1583000000002508e-05}, {'diff': 1.1584000000001982e-05}, {'diff': 1.1042000000002772e-05}, {'diff': 1.0139000000006226e-05}, {'diff': 6.583999999996981e-0...</msg>
<status status="PASS" starttime="20201030 15:55:03.019" endtime="20201030 15:55:03.028"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:55:03.036" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.1695000000006006e-05, 1.1583000000002508e-05, 1.1584000000001982e-05, 1.1042000000002772e-05, 1.0139000000006226e-05, 6.583999999996981e-06, 9.250000000002312e-06, 1.180499999999668e-05, 1...</msg>
<status status="PASS" starttime="20201030 15:55:03.029" endtime="20201030 15:55:03.036"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:03.047" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:55:03.044" endtime="20201030 15:55:03.048"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:03.052" level="INFO">VALUE: [1.1695000000006006e-05, 1.1583000000002508e-05, 1.1584000000001982e-05, 1.1042000000002772e-05, 1.0139000000006226e-05, 6.583999999996981e-06, 9.250000000002312e-06, 1.180499999999668e-05, 1.729099999999567e-05, 9.486000000002992e-06, 1.4236000000000804e-05, 1.0139000000006226e-05, 1.1833000000002758e-05, 1.0236000000003742e-05, 1.0472000000004422e-05, 9.360999999999398e-06, 6.83400000000417e-06, 1.3361000000003398e-05, 1.481899999999925e-05, 7.681000000002436e-06, 1.3139000000002288e-05, 1.2235999999998803e-05, 1.7236000000003804e-05, 9.513999999995193e-06, 1.0568999999994999e-05]</msg>
<status status="PASS" starttime="20201030 15:55:03.049" endtime="20201030 15:55:03.053"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.038" endtime="20201030 15:55:03.055"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:03.065" endtime="20201030 15:55:03.087"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.060" endtime="20201030 15:55:03.089"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.058" endtime="20201030 15:55:03.090"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.569" endtime="20201030 15:55:03.091"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.567" endtime="20201030 15:55:03.091"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:03.113" endtime="20201030 15:55:03.132"></status>
</kw>
<msg timestamp="20201030 15:55:03.134" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:03.110" endtime="20201030 15:55:03.134"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:03.146" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:03.139" endtime="20201030 15:55:03.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:03.151" endtime="20201030 15:55:03.160"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.102" endtime="20201030 15:55:03.162"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.097" endtime="20201030 15:55:03.166"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:03.184" endtime="20201030 15:55:03.523"></status>
</kw>
<msg timestamp="20201030 15:55:03.528" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038827625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038842764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:03.181" endtime="20201030 15:55:03.528"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:03.541" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038827625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038842764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:03.530" endtime="20201030 15:55:03.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:03.544" endtime="20201030 15:55:03.548"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.173" endtime="20201030 15:55:03.550"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.167" endtime="20201030 15:55:03.551"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:03.561" level="INFO">${RESULT} = [{'diff': 1.5139000000004288e-05}, {'diff': 9.583000000000508e-06}, {'diff': 7.804999999999618e-06}, {'diff': 7.195000000001506e-06}, {'diff': 1.5583999999999043e-05}, {'diff': 8.055999999999341e-06},...</msg>
<status status="PASS" starttime="20201030 15:55:03.553" endtime="20201030 15:55:03.561"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:55:03.569" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.5139000000004288e-05, 9.583000000000508e-06, 7.804999999999618e-06, 7.195000000001506e-06, 1.5583999999999043e-05, 8.055999999999341e-06, 1.3472000000000484e-05, 1.3403000000002108e-05, 7....</msg>
<status status="PASS" starttime="20201030 15:55:03.563" endtime="20201030 15:55:03.570"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:03.580" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:55:03.578" endtime="20201030 15:55:03.581"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:03.586" level="INFO">VALUE: [1.5139000000004288e-05, 9.583000000000508e-06, 7.804999999999618e-06, 7.195000000001506e-06, 1.5583999999999043e-05, 8.055999999999341e-06, 1.3472000000000484e-05, 1.3403000000002108e-05, 7.0279999999992016e-06, 1.5139000000004288e-05, 1.4916999999996239e-05, 1.6027999999994325e-05, 1.0361000000000398e-05, 1.4916999999996239e-05, 1.0041999999994833e-05, 1.0486000000003992e-05, 1.2597000000003078e-05, 8.221999999995233e-06, 1.1361000000001398e-05, 1.0806000000002092e-05, 9.236000000002742e-06, 1.4374999999997029e-05, 1.4389000000003538e-05, 1.3472000000000484e-05, 9.583999999999981e-06]</msg>
<status status="PASS" starttime="20201030 15:55:03.583" endtime="20201030 15:55:03.587"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.571" endtime="20201030 15:55:03.588"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:03.598" endtime="20201030 15:55:03.621"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.594" endtime="20201030 15:55:03.623"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.591" endtime="20201030 15:55:03.623"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.093" endtime="20201030 15:55:03.624"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.092" endtime="20201030 15:55:03.624"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:03.646" endtime="20201030 15:55:03.660"></status>
</kw>
<msg timestamp="20201030 15:55:03.661" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:03.643" endtime="20201030 15:55:03.662"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:03.668" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:03.664" endtime="20201030 15:55:03.669"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:03.670" endtime="20201030 15:55:03.675"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.635" endtime="20201030 15:55:03.676"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.630" endtime="20201030 15:55:03.678"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:03.696" endtime="20201030 15:55:04.046"></status>
</kw>
<msg timestamp="20201030 15:55:04.050" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038688125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038697278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:03.692" endtime="20201030 15:55:04.051"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:04.064" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038688125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038697278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:04.053" endtime="20201030 15:55:04.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:04.066" endtime="20201030 15:55:04.070"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.684" endtime="20201030 15:55:04.072"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.679" endtime="20201030 15:55:04.074"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:04.083" level="INFO">${RESULT} = [{'diff': 9.153000000004796e-06}, {'diff': 1.3680000000002024e-05}, {'diff': 1.1542000000003272e-05}, {'diff': 1.0013999999995693e-05}, {'diff': 1.602700000000179e-05}, {'diff': 1.0471999999997483e-05...</msg>
<status status="PASS" starttime="20201030 15:55:04.075" endtime="20201030 15:55:04.084"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:55:04.091" level="INFO">${GPIO_OVERHEAD} = {'diff': [9.153000000004796e-06, 1.3680000000002024e-05, 1.1542000000003272e-05, 1.0013999999995693e-05, 1.602700000000179e-05, 1.0471999999997483e-05, 8.916999999997177e-06, 9.013999999994693e-06, 1....</msg>
<status status="PASS" starttime="20201030 15:55:04.085" endtime="20201030 15:55:04.092"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:04.103" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:55:04.100" endtime="20201030 15:55:04.104"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:04.109" level="INFO">VALUE: [9.153000000004796e-06, 1.3680000000002024e-05, 1.1542000000003272e-05, 1.0013999999995693e-05, 1.602700000000179e-05, 1.0471999999997483e-05, 8.916999999997177e-06, 9.013999999994693e-06, 1.3041999999997833e-05, 1.4902999999996669e-05, 1.3583000000004508e-05, 1.1027999999996263e-05, 1.2597000000003078e-05, 1.0583000000001508e-05, 1.0916999999999177e-05, 6.763999999999382e-06, 1.8693999999999655e-05, 1.7750000000003874e-05, 6.554999999998368e-06, 1.326299999999947e-05, 1.0374999999999968e-05, 1.2249999999998373e-05, 1.2041999999996833e-05, 1.0138999999999287e-05, 9.707999999997163e-06]</msg>
<status status="PASS" starttime="20201030 15:55:04.106" endtime="20201030 15:55:04.109"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.094" endtime="20201030 15:55:04.111"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:04.121" endtime="20201030 15:55:04.143"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.116" endtime="20201030 15:55:04.145"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.114" endtime="20201030 15:55:04.146"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.626" endtime="20201030 15:55:04.146"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.625" endtime="20201030 15:55:04.147"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:04.169" endtime="20201030 15:55:04.183"></status>
</kw>
<msg timestamp="20201030 15:55:04.184" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:04.165" endtime="20201030 15:55:04.184"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:04.191" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:04.186" endtime="20201030 15:55:04.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:04.193" endtime="20201030 15:55:04.197"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.158" endtime="20201030 15:55:04.199"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.153" endtime="20201030 15:55:04.200"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:04.218" endtime="20201030 15:55:04.558"></status>
</kw>
<msg timestamp="20201030 15:55:04.562" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038673736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038684681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:04.215" endtime="20201030 15:55:04.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:04.575" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038673736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038684681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:04.565" endtime="20201030 15:55:04.576"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:04.578" endtime="20201030 15:55:04.582"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.207" endtime="20201030 15:55:04.584"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.202" endtime="20201030 15:55:04.586"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:04.599" level="INFO">${RESULT} = [{'diff': 1.0944999999998317e-05}, {'diff': 8.264000000000882e-06}, {'diff': 1.280499999999768e-05}, {'diff': 1.2708000000000164e-05}, {'diff': 1.5792000000000583e-05}, {'diff': 8.264000000000882e-06}...</msg>
<status status="PASS" starttime="20201030 15:55:04.588" endtime="20201030 15:55:04.601"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:55:04.613" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.0944999999998317e-05, 8.264000000000882e-06, 1.280499999999768e-05, 1.2708000000000164e-05, 1.5792000000000583e-05, 8.264000000000882e-06, 1.4305999999998653e-05, 1.2806000000004092e-05, 1...</msg>
<status status="PASS" starttime="20201030 15:55:04.604" endtime="20201030 15:55:04.614"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:04.631" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:55:04.627" endtime="20201030 15:55:04.632"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:04.637" level="INFO">VALUE: [1.0944999999998317e-05, 8.264000000000882e-06, 1.280499999999768e-05, 1.2708000000000164e-05, 1.5792000000000583e-05, 8.264000000000882e-06, 1.4305999999998653e-05, 1.2806000000004092e-05, 1.759700000000114e-05, 1.1570000000002412e-05, 1.7693999999998655e-05, 1.3361000000003398e-05, 1.5917000000004178e-05, 1.58889999999981e-05, 1.2819999999996723e-05, 9.374999999998967e-06, 5.805999999997091e-06, 9.792000000001522e-06, 1.1584000000001982e-05, 1.455499999999943e-05, 1.1791999999996583e-05, 1.204099999999736e-05, 1.201299999999822e-05, 1.2584000000002982e-05, 9.929999999998274e-06]</msg>
<status status="PASS" starttime="20201030 15:55:04.634" endtime="20201030 15:55:04.637"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.617" endtime="20201030 15:55:04.639"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:04.649" endtime="20201030 15:55:04.670"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.644" endtime="20201030 15:55:04.672"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.642" endtime="20201030 15:55:04.673"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.149" endtime="20201030 15:55:04.673"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.148" endtime="20201030 15:55:04.674"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:04.694" endtime="20201030 15:55:04.707"></status>
</kw>
<msg timestamp="20201030 15:55:04.709" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:04.691" endtime="20201030 15:55:04.709"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:04.715" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:04.711" endtime="20201030 15:55:04.715"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:04.717" endtime="20201030 15:55:04.721"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.683" endtime="20201030 15:55:04.722"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.679" endtime="20201030 15:55:04.724"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:04.740" endtime="20201030 15:55:05.054"></status>
</kw>
<msg timestamp="20201030 15:55:05.059" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036026819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036041333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:04.737" endtime="20201030 15:55:05.059"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:05.071" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036026819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036041333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:05.061" endtime="20201030 15:55:05.072"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:05.074" endtime="20201030 15:55:05.078"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.730" endtime="20201030 15:55:05.079"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.725" endtime="20201030 15:55:05.081"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:05.090" level="INFO">${RESULT} = [{'diff': 1.4514000000000193e-05}, {'diff': 1.1291999999996083e-05}, {'diff': 8.236000000001742e-06}, {'diff': 1.0235999999996803e-05}, {'diff': 1.459699999999814e-05}, {'diff': 1.1805000000003618e-05...</msg>
<status status="PASS" starttime="20201030 15:55:05.082" endtime="20201030 15:55:05.090"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:55:05.097" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.4514000000000193e-05, 1.1291999999996083e-05, 8.236000000001742e-06, 1.0235999999996803e-05, 1.459699999999814e-05, 1.1805000000003618e-05, 6.8330000000046964e-06, 1.2360999999995459e-05, ...</msg>
<status status="PASS" starttime="20201030 15:55:05.092" endtime="20201030 15:55:05.097"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:05.114" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:55:05.112" endtime="20201030 15:55:05.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:05.119" level="INFO">VALUE: [1.4514000000000193e-05, 1.1291999999996083e-05, 8.236000000001742e-06, 1.0235999999996803e-05, 1.459699999999814e-05, 1.1805000000003618e-05, 6.8330000000046964e-06, 1.2360999999995459e-05, 7.1379999999968136e-06, 1.3334000000003732e-05, 1.0471999999997483e-05, 7.916000000003642e-06, 9.152999999997857e-06, 1.3736000000000304e-05, 9.471999999996483e-06, 9.680999999997497e-06, 9.374999999998967e-06, 1.504100000000036e-05, 9.792000000001522e-06, 1.2360999999995459e-05, 1.3360999999996459e-05, 8.486000000001992e-06, 6.805999999998091e-06, 1.3596999999997139e-05, 1.1458999999998387e-05]</msg>
<status status="PASS" starttime="20201030 15:55:05.117" endtime="20201030 15:55:05.120"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:05.099" endtime="20201030 15:55:05.122"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:05.131" endtime="20201030 15:55:05.152"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:05.127" endtime="20201030 15:55:05.154"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:05.124" endtime="20201030 15:55:05.155"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.676" endtime="20201030 15:55:05.156"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.674" endtime="20201030 15:55:05.156"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:05.177" endtime="20201030 15:55:05.190"></status>
</kw>
<msg timestamp="20201030 15:55:05.191" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:05.173" endtime="20201030 15:55:05.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:05.197" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:05.193" endtime="20201030 15:55:05.198"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:05.199" endtime="20201030 15:55:05.203"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:05.166" endtime="20201030 15:55:05.205"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:05.161" endtime="20201030 15:55:05.206"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:05.223" endtime="20201030 15:55:05.542"></status>
</kw>
<msg timestamp="20201030 15:55:05.551" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036356194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036372569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:05.219" endtime="20201030 15:55:05.552"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:05.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036356194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036372569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:05.554" endtime="20201030 15:55:05.576"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:05.578" endtime="20201030 15:55:05.585"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:05.212" endtime="20201030 15:55:05.587"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:05.208" endtime="20201030 15:55:05.589"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:05.598" level="INFO">${RESULT} = [{'diff': 1.637499999999903e-05}, {'diff': 1.4915999999996765e-05}, {'diff': 8.235999999994803e-06}, {'diff': 1.502700000000079e-05}, {'diff': 1.3694000000001594e-05}, {'diff': 1.737500000000003e-05},...</msg>
<status status="PASS" starttime="20201030 15:55:05.590" endtime="20201030 15:55:05.598"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:55:05.605" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.637499999999903e-05, 1.4915999999996765e-05, 8.235999999994803e-06, 1.502700000000079e-05, 1.3694000000001594e-05, 1.737500000000003e-05, 1.616699999999749e-05, 1.0750000000003812e-05, 1.1...</msg>
<status status="PASS" starttime="20201030 15:55:05.600" endtime="20201030 15:55:05.605"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:05.616" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:55:05.613" endtime="20201030 15:55:05.616"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:05.621" level="INFO">VALUE: [1.637499999999903e-05, 1.4915999999996765e-05, 8.235999999994803e-06, 1.502700000000079e-05, 1.3694000000001594e-05, 1.737500000000003e-05, 1.616699999999749e-05, 1.0750000000003812e-05, 1.1805000000003618e-05, 6.360999999996397e-06, 1.0806000000002092e-05, 1.1070000000001912e-05, 1.3930000000002274e-05, 1.302699999999879e-05, 1.2889000000002038e-05, 1.3152000000002384e-05, 7.666999999995927e-06, 1.0250000000003312e-05, 9.179999999997523e-06, 1.1361000000001398e-05, 8.610999999998648e-06, 1.1028000000003202e-05, 1.2902000000002134e-05, 9.443999999997343e-06, 1.2805999999997153e-05]</msg>
<status status="PASS" starttime="20201030 15:55:05.618" endtime="20201030 15:55:05.621"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:05.607" endtime="20201030 15:55:05.623"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:05.633" endtime="20201030 15:55:05.655"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:05.629" endtime="20201030 15:55:05.657"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:05.626" endtime="20201030 15:55:05.658"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:05.158" endtime="20201030 15:55:05.658"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:05.157" endtime="20201030 15:55:05.659"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:05.691" endtime="20201030 15:55:05.722"></status>
</kw>
<msg timestamp="20201030 15:55:05.728" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:05.681" endtime="20201030 15:55:05.730"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:05.753" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:05.737" endtime="20201030 15:55:05.754"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:05.756" endtime="20201030 15:55:05.761"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:05.669" endtime="20201030 15:55:05.763"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:05.664" endtime="20201030 15:55:05.764"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:05.782" endtime="20201030 15:55:06.100"></status>
</kw>
<msg timestamp="20201030 15:55:06.104" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.052460222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.052466389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:05.778" endtime="20201030 15:55:06.105"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:06.117" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.052460222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.052466389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:06.107" endtime="20201030 15:55:06.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:06.119" endtime="20201030 15:55:06.123"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:05.771" endtime="20201030 15:55:06.125"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:05.766" endtime="20201030 15:55:06.127"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:06.136" level="INFO">${RESULT} = [{'diff': 6.167000000001366e-06}, {'diff': 8.916999999997177e-06}, {'diff': 1.57089999999957e-05}, {'diff': 8.694000000003532e-06}, {'diff': 9.987000000002966e-06}, {'diff': 1.1916000000000704e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:55:06.128" endtime="20201030 15:55:06.137"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:55:06.148" level="INFO">${GPIO_OVERHEAD} = {'diff': [6.167000000001366e-06, 8.916999999997177e-06, 1.57089999999957e-05, 8.694000000003532e-06, 9.987000000002966e-06, 1.1916000000000704e-05, 1.1597000000002078e-05, 1.4250000000000373e-05, 1.07...</msg>
<status status="PASS" starttime="20201030 15:55:06.139" endtime="20201030 15:55:06.149"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:06.160" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:55:06.157" endtime="20201030 15:55:06.160"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:06.165" level="INFO">VALUE: [6.167000000001366e-06, 8.916999999997177e-06, 1.57089999999957e-05, 8.694000000003532e-06, 9.987000000002966e-06, 1.1916000000000704e-05, 1.1597000000002078e-05, 1.4250000000000373e-05, 1.0792000000002522e-05, 1.2070000000002912e-05, 1.736100000000046e-05, 1.581900000000025e-05, 1.1486000000004992e-05, 1.0028000000002202e-05, 1.0013999999995693e-05, 1.2153000000000858e-05, 1.3945000000001317e-05, 1.1653000000000358e-05, 1.2250000000005312e-05, 7.471999999994483e-06, 9.402999999998107e-06, 1.2361000000002398e-05, 1.0084000000000481e-05, 1.1583000000002508e-05, 1.0028000000002202e-05]</msg>
<status status="PASS" starttime="20201030 15:55:06.162" endtime="20201030 15:55:06.166"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:06.150" endtime="20201030 15:55:06.167"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:06.176" endtime="20201030 15:55:06.198"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:06.172" endtime="20201030 15:55:06.200"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:06.170" endtime="20201030 15:55:06.200"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:05.660" endtime="20201030 15:55:06.201"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:05.659" endtime="20201030 15:55:06.201"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:06.222" endtime="20201030 15:55:06.236"></status>
</kw>
<msg timestamp="20201030 15:55:06.237" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:06.219" endtime="20201030 15:55:06.237"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:06.243" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:06.239" endtime="20201030 15:55:06.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:06.246" endtime="20201030 15:55:06.249"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:06.212" endtime="20201030 15:55:06.251"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:06.207" endtime="20201030 15:55:06.253"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:06.269" endtime="20201030 15:55:06.591"></status>
</kw>
<msg timestamp="20201030 15:55:06.595" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036334583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036352792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:06.266" endtime="20201030 15:55:06.595"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:06.607" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036334583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036352792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:06.597" endtime="20201030 15:55:06.608"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:06.610" endtime="20201030 15:55:06.614"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:06.259" endtime="20201030 15:55:06.615"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:06.254" endtime="20201030 15:55:06.617"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:06.626" level="INFO">${RESULT} = [{'diff': 1.8209000000005138e-05}, {'diff': 1.0916999999999177e-05}, {'diff': 8.707999999996163e-06}, {'diff': 1.2568999999997e-05}, {'diff': 1.0263999999995943e-05}, {'diff': 8.708000000003102e-06}, ...</msg>
<status status="PASS" starttime="20201030 15:55:06.618" endtime="20201030 15:55:06.626"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:55:06.633" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.8209000000005138e-05, 1.0916999999999177e-05, 8.707999999996163e-06, 1.2568999999997e-05, 1.0263999999995943e-05, 8.708000000003102e-06, 6.360999999996397e-06, 1.5943999999996905e-05, 1.47...</msg>
<status status="PASS" starttime="20201030 15:55:06.628" endtime="20201030 15:55:06.634"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:06.644" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:55:06.641" endtime="20201030 15:55:06.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:06.649" level="INFO">VALUE: [1.8209000000005138e-05, 1.0916999999999177e-05, 8.707999999996163e-06, 1.2568999999997e-05, 1.0263999999995943e-05, 8.708000000003102e-06, 6.360999999996397e-06, 1.5943999999996905e-05, 1.4778000000000013e-05, 1.1249999999997373e-05, 1.2263999999997943e-05, 8.195000000002506e-06, 1.181899999999625e-05, 1.2403000000001108e-05, 1.3931000000001748e-05, 1.2472999999998957e-05, 1.0875000000000468e-05, 1.1791000000004048e-05, 1.1361000000001398e-05, 1.1707999999999164e-05, 8.639000000004726e-06, 1.8457999999998975e-05, 9.583000000000508e-06, 1.2306000000003592e-05, 1.0319000000001688e-05]</msg>
<status status="PASS" starttime="20201030 15:55:06.646" endtime="20201030 15:55:06.650"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:06.635" endtime="20201030 15:55:06.651"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:06.665" endtime="20201030 15:55:06.691"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:06.656" endtime="20201030 15:55:06.693"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:06.654" endtime="20201030 15:55:06.694"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:06.203" endtime="20201030 15:55:06.694"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:06.202" endtime="20201030 15:55:06.695"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:06.719" endtime="20201030 15:55:06.732"></status>
</kw>
<msg timestamp="20201030 15:55:06.733" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:06.715" endtime="20201030 15:55:06.734"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:06.739" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:06.735" endtime="20201030 15:55:06.740"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:06.742" endtime="20201030 15:55:06.746"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:06.708" endtime="20201030 15:55:06.747"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:06.701" endtime="20201030 15:55:06.749"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:06.766" endtime="20201030 15:55:07.081"></status>
</kw>
<msg timestamp="20201030 15:55:07.086" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043224833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043238667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:06.763" endtime="20201030 15:55:07.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:07.098" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043224833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043238667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:07.088" endtime="20201030 15:55:07.099"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:07.101" endtime="20201030 15:55:07.106"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:06.756" endtime="20201030 15:55:07.108"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:06.750" endtime="20201030 15:55:07.109"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:07.118" level="INFO">${RESULT} = [{'diff': 1.3834000000004232e-05}, {'diff': 1.3569999999997473e-05}, {'diff': 1.5250000000001374e-05}, {'diff': 9.403000000005046e-06}, {'diff': 9.360999999999398e-06}, {'diff': 1.2681000000000497e-05...</msg>
<status status="PASS" starttime="20201030 15:55:07.111" endtime="20201030 15:55:07.118"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:55:07.125" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.3834000000004232e-05, 1.3569999999997473e-05, 1.5250000000001374e-05, 9.403000000005046e-06, 9.360999999999398e-06, 1.2681000000000497e-05, 1.4236000000000804e-05, 1.5917000000004178e-05, ...</msg>
<status status="PASS" starttime="20201030 15:55:07.120" endtime="20201030 15:55:07.126"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:07.136" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:55:07.133" endtime="20201030 15:55:07.137"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:07.141" level="INFO">VALUE: [1.3834000000004232e-05, 1.3569999999997473e-05, 1.5250000000001374e-05, 9.403000000005046e-06, 9.360999999999398e-06, 1.2681000000000497e-05, 1.4236000000000804e-05, 1.5917000000004178e-05, 1.6028000000001263e-05, 1.0569999999994473e-05, 7.8200000000056e-06, 1.1249999999997373e-05, 8.694000000003532e-06, 9.709000000003576e-06, 1.526300000000147e-05, 1.569499999999613e-05, 8.569999999999411e-06, 1.758300000000157e-05, 1.3125000000002718e-05, 8.500000000001562e-06, 1.481899999999925e-05, 1.1027000000003728e-05, 1.4361000000004398e-05, 8.777000000001478e-06, 8.514000000001132e-06]</msg>
<status status="PASS" starttime="20201030 15:55:07.138" endtime="20201030 15:55:07.142"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.127" endtime="20201030 15:55:07.143"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:07.153" endtime="20201030 15:55:07.174"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.148" endtime="20201030 15:55:07.176"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.146" endtime="20201030 15:55:07.177"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:06.697" endtime="20201030 15:55:07.177"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:06.696" endtime="20201030 15:55:07.178"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:07.198" endtime="20201030 15:55:07.212"></status>
</kw>
<msg timestamp="20201030 15:55:07.213" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:07.195" endtime="20201030 15:55:07.213"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:07.219" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:07.215" endtime="20201030 15:55:07.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:07.221" endtime="20201030 15:55:07.225"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.188" endtime="20201030 15:55:07.227"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.183" endtime="20201030 15:55:07.228"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:07.245" endtime="20201030 15:55:07.557"></status>
</kw>
<msg timestamp="20201030 15:55:07.562" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036199778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036211597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:07.241" endtime="20201030 15:55:07.562"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:07.574" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036199778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036211597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:07.564" endtime="20201030 15:55:07.575"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:07.577" endtime="20201030 15:55:07.582"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.234" endtime="20201030 15:55:07.584"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.230" endtime="20201030 15:55:07.585"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:07.594" level="INFO">${RESULT} = [{'diff': 1.181899999999625e-05}, {'diff': 1.3013999999998693e-05}, {'diff': 1.791699999999924e-05}, {'diff': 5.221999999999172e-06}, {'diff': 1.1930000000000274e-05}, {'diff': 1.3736000000000304e-05}...</msg>
<status status="PASS" starttime="20201030 15:55:07.587" endtime="20201030 15:55:07.595"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:55:07.601" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.181899999999625e-05, 1.3013999999998693e-05, 1.791699999999924e-05, 5.221999999999172e-06, 1.1930000000000274e-05, 1.3736000000000304e-05, 1.2139000000001288e-05, 1.3681000000001498e-05, 1...</msg>
<status status="PASS" starttime="20201030 15:55:07.596" endtime="20201030 15:55:07.602"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:07.612" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:55:07.609" endtime="20201030 15:55:07.613"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:07.617" level="INFO">VALUE: [1.181899999999625e-05, 1.3013999999998693e-05, 1.791699999999924e-05, 5.221999999999172e-06, 1.1930000000000274e-05, 1.3736000000000304e-05, 1.2139000000001288e-05, 1.3681000000001498e-05, 1.3917000000002178e-05, 1.1582999999995569e-05, 1.4153000000002858e-05, 7.707999999995163e-06, 1.6958000000004414e-05, 1.6695000000004068e-05, 9.486000000002992e-06, 7.582999999998508e-06, 1.4486000000001054e-05, 9.944999999997317e-06, 7.805999999999091e-06, 1.2693999999993655e-05, 1.7027999999995325e-05, 6.361999999995871e-06, 1.4138999999996349e-05, 1.2472999999998957e-05, 1.5915999999997765e-05]</msg>
<status status="PASS" starttime="20201030 15:55:07.615" endtime="20201030 15:55:07.618"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.603" endtime="20201030 15:55:07.620"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:07.629" endtime="20201030 15:55:07.651"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.625" endtime="20201030 15:55:07.652"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.622" endtime="20201030 15:55:07.653"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.180" endtime="20201030 15:55:07.654"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.179" endtime="20201030 15:55:07.654"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:07.675" endtime="20201030 15:55:07.687"></status>
</kw>
<msg timestamp="20201030 15:55:07.689" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:07.671" endtime="20201030 15:55:07.689"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:07.695" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:07.691" endtime="20201030 15:55:07.696"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:07.697" endtime="20201030 15:55:07.701"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.664" endtime="20201030 15:55:07.702"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.659" endtime="20201030 15:55:07.704"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:07.721" endtime="20201030 15:55:08.040"></status>
</kw>
<msg timestamp="20201030 15:55:08.045" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036275139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0362845, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:55:07.717" endtime="20201030 15:55:08.046"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:08.058" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036275139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0362845, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:55:08.048" endtime="20201030 15:55:08.059"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:08.060" endtime="20201030 15:55:08.066"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.710" endtime="20201030 15:55:08.068"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.705" endtime="20201030 15:55:08.069"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:08.078" level="INFO">${RESULT} = [{'diff': 9.360999999999398e-06}, {'diff': 9.347999999999301e-06}, {'diff': 1.2139000000001288e-05}, {'diff': 9.819999999993723e-06}, {'diff': 8.138999999997287e-06}, {'diff': 9.250000000002312e-06}, ...</msg>
<status status="PASS" starttime="20201030 15:55:08.071" endtime="20201030 15:55:08.078"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:55:08.085" level="INFO">${GPIO_OVERHEAD} = {'diff': [9.360999999999398e-06, 9.347999999999301e-06, 1.2139000000001288e-05, 9.819999999993723e-06, 8.138999999997287e-06, 9.250000000002312e-06, 9.624999999999218e-06, 7.361000000004336e-06, 1.547...</msg>
<status status="PASS" starttime="20201030 15:55:08.080" endtime="20201030 15:55:08.086"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:08.095" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:55:08.093" endtime="20201030 15:55:08.097"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:08.101" level="INFO">VALUE: [9.360999999999398e-06, 9.347999999999301e-06, 1.2139000000001288e-05, 9.819999999993723e-06, 8.138999999997287e-06, 9.250000000002312e-06, 9.624999999999218e-06, 7.361000000004336e-06, 1.5472000000002484e-05, 1.481899999999925e-05, 7.0279999999992016e-06, 9.693999999997593e-06, 1.202699999999779e-05, 9.110999999999148e-06, 6.805000000005557e-06, 1.4374999999997029e-05, 1.3486000000000054e-05, 9.360999999999398e-06, 9.693999999997593e-06, 1.459699999999814e-05, 7.805999999999091e-06, 1.4555999999998903e-05, 6.472000000000422e-06, 1.0694999999998067e-05, 8.806000000000092e-06]</msg>
<status status="PASS" starttime="20201030 15:55:08.098" endtime="20201030 15:55:08.102"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.087" endtime="20201030 15:55:08.103"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:08.113" endtime="20201030 15:55:08.134"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.108" endtime="20201030 15:55:08.136"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.106" endtime="20201030 15:55:08.137"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.656" endtime="20201030 15:55:08.137"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.655" endtime="20201030 15:55:08.138"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:08.158" endtime="20201030 15:55:08.171"></status>
</kw>
<msg timestamp="20201030 15:55:08.172" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:08.154" endtime="20201030 15:55:08.172"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:08.178" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:08.174" endtime="20201030 15:55:08.179"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:08.181" endtime="20201030 15:55:08.184"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.147" endtime="20201030 15:55:08.186"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.143" endtime="20201030 15:55:08.187"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:08.204" endtime="20201030 15:55:08.518"></status>
</kw>
<msg timestamp="20201030 15:55:08.522" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035885861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035899347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:08.201" endtime="20201030 15:55:08.523"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:08.535" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035885861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035899347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:08.524" endtime="20201030 15:55:08.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:08.537" endtime="20201030 15:55:08.542"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.193" endtime="20201030 15:55:08.544"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.189" endtime="20201030 15:55:08.545"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:08.554" level="INFO">${RESULT} = [{'diff': 1.3486000000000054e-05}, {'diff': 7.916999999996177e-06}, {'diff': 1.1152999999999857e-05}, {'diff': 1.4764000000000443e-05}, {'diff': 8.457999999995913e-06}, {'diff': 1.730499999999524e-05}...</msg>
<status status="PASS" starttime="20201030 15:55:08.547" endtime="20201030 15:55:08.555"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:55:08.562" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.3486000000000054e-05, 7.916999999996177e-06, 1.1152999999999857e-05, 1.4764000000000443e-05, 8.457999999995913e-06, 1.730499999999524e-05, 9.028000000001202e-06, 1.5569999999999473e-05, 1....</msg>
<status status="PASS" starttime="20201030 15:55:08.557" endtime="20201030 15:55:08.562"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:08.572" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:55:08.570" endtime="20201030 15:55:08.573"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:08.578" level="INFO">VALUE: [1.3486000000000054e-05, 7.916999999996177e-06, 1.1152999999999857e-05, 1.4764000000000443e-05, 8.457999999995913e-06, 1.730499999999524e-05, 9.028000000001202e-06, 1.5569999999999473e-05, 1.1250000000004312e-05, 1.0138999999999287e-05, 5.805999999997091e-06, 1.3235999999999803e-05, 1.6806000000001153e-05, 1.3138999999995349e-05, 1.3263999999998943e-05, 1.1430999999999247e-05, 1.2041999999996833e-05, 1.404099999999936e-05, 1.1457999999998913e-05, 9.360999999999398e-06, 1.4347000000004828e-05, 1.840300000000017e-05, 6.694000000001532e-06, 7.473000000000896e-06, 1.4472000000001484e-05]</msg>
<status status="PASS" starttime="20201030 15:55:08.575" endtime="20201030 15:55:08.578"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.563" endtime="20201030 15:55:08.580"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:08.589" endtime="20201030 15:55:08.611"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.585" endtime="20201030 15:55:08.613"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.583" endtime="20201030 15:55:08.613"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.139" endtime="20201030 15:55:08.614"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.138" endtime="20201030 15:55:08.614"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:08.635" endtime="20201030 15:55:08.649"></status>
</kw>
<msg timestamp="20201030 15:55:08.650" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:08.631" endtime="20201030 15:55:08.651"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:08.657" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:08.653" endtime="20201030 15:55:08.657"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:08.659" endtime="20201030 15:55:08.663"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.624" endtime="20201030 15:55:08.664"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.619" endtime="20201030 15:55:08.666"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:08.682" endtime="20201030 15:55:08.993"></status>
</kw>
<msg timestamp="20201030 15:55:08.998" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036395097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036403778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:08.679" endtime="20201030 15:55:08.999"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:09.013" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036395097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036403778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:09.001" endtime="20201030 15:55:09.014"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:09.016" endtime="20201030 15:55:09.022"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.672" endtime="20201030 15:55:09.023"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.667" endtime="20201030 15:55:09.025"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:09.034" level="INFO">${RESULT} = [{'diff': 8.680999999996497e-06}, {'diff': 8.930000000004212e-06}, {'diff': 9.917000000005116e-06}, {'diff': 1.5137999999997875e-05}, {'diff': 7.860999999997897e-06}, {'diff': 1.1375000000000968e-05},...</msg>
<status status="PASS" starttime="20201030 15:55:09.026" endtime="20201030 15:55:09.034"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:55:09.041" level="INFO">${GPIO_OVERHEAD} = {'diff': [8.680999999996497e-06, 8.930000000004212e-06, 9.917000000005116e-06, 1.5137999999997875e-05, 7.860999999997897e-06, 1.1375000000000968e-05, 1.4250000000000373e-05, 1.2013999999997693e-05, 1....</msg>
<status status="PASS" starttime="20201030 15:55:09.036" endtime="20201030 15:55:09.041"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:09.051" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:55:09.049" endtime="20201030 15:55:09.052"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:09.057" level="INFO">VALUE: [8.680999999996497e-06, 8.930000000004212e-06, 9.917000000005116e-06, 1.5137999999997875e-05, 7.860999999997897e-06, 1.1375000000000968e-05, 1.4250000000000373e-05, 1.2013999999997693e-05, 1.0471999999997483e-05, 1.3139000000002288e-05, 1.2472999999998957e-05, 1.3722000000000734e-05, 1.8028000000003264e-05, 1.687499999999953e-05, 7.833999999998231e-06, 1.5028000000000263e-05, 1.6167000000004428e-05, 1.1582999999995569e-05, 1.0917000000006116e-05, 1.1806000000003092e-05, 1.409699999999764e-05, 1.1375000000000968e-05, 1.3402000000002634e-05, 1.0777999999996013e-05, 1.381899999999825e-05]</msg>
<status status="PASS" starttime="20201030 15:55:09.053" endtime="20201030 15:55:09.058"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.043" endtime="20201030 15:55:09.059"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:09.069" endtime="20201030 15:55:09.090"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.064" endtime="20201030 15:55:09.092"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.062" endtime="20201030 15:55:09.093"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.616" endtime="20201030 15:55:09.093"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.615" endtime="20201030 15:55:09.094"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:09.114" endtime="20201030 15:55:09.128"></status>
</kw>
<msg timestamp="20201030 15:55:09.129" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:09.111" endtime="20201030 15:55:09.129"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:09.135" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:09.131" endtime="20201030 15:55:09.136"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:09.137" endtime="20201030 15:55:09.141"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.103" endtime="20201030 15:55:09.143"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.099" endtime="20201030 15:55:09.144"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:09.161" endtime="20201030 15:55:09.472"></status>
</kw>
<msg timestamp="20201030 15:55:09.476" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036066278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036077847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:09.157" endtime="20201030 15:55:09.476"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:09.488" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036066278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036077847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:09.478" endtime="20201030 15:55:09.489"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:09.491" endtime="20201030 15:55:09.496"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.150" endtime="20201030 15:55:09.498"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.146" endtime="20201030 15:55:09.500"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:09.509" level="INFO">${RESULT} = [{'diff': 1.1569000000002938e-05}, {'diff': 1.1791999999996583e-05}, {'diff': 1.562499999999828e-05}, {'diff': 1.5694000000003594e-05}, {'diff': 8.153000000003796e-06}, {'diff': 1.2056000000003342e-05...</msg>
<status status="PASS" starttime="20201030 15:55:09.501" endtime="20201030 15:55:09.509"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:55:09.516" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.1569000000002938e-05, 1.1791999999996583e-05, 1.562499999999828e-05, 1.5694000000003594e-05, 8.153000000003796e-06, 1.2056000000003342e-05, 1.658300000000057e-05, 8.901999999998134e-06, 1....</msg>
<status status="PASS" starttime="20201030 15:55:09.511" endtime="20201030 15:55:09.517"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:09.527" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:55:09.525" endtime="20201030 15:55:09.528"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:09.533" level="INFO">VALUE: [1.1569000000002938e-05, 1.1791999999996583e-05, 1.562499999999828e-05, 1.5694000000003594e-05, 8.153000000003796e-06, 1.2056000000003342e-05, 1.658300000000057e-05, 8.901999999998134e-06, 1.0916999999999177e-05, 8.777000000001478e-06, 1.0347000000000828e-05, 6.0829999999970075e-06, 1.0249999999996373e-05, 5.59800000000249e-06, 1.426300000000047e-05, 1.1569000000002938e-05, 1.2264000000004882e-05, 1.2472999999998957e-05, 1.3916000000002704e-05, 1.636099999999946e-05, 9.806000000001092e-06, 9.694999999997067e-06, 9.930999999997747e-06, 9.249999999995373e-06, 9.138999999998287e-06]</msg>
<status status="PASS" starttime="20201030 15:55:09.530" endtime="20201030 15:55:09.534"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.518" endtime="20201030 15:55:09.536"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:09.546" endtime="20201030 15:55:09.567"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.541" endtime="20201030 15:55:09.569"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.539" endtime="20201030 15:55:09.570"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.095" endtime="20201030 15:55:09.570"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.094" endtime="20201030 15:55:09.571"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:09.591" endtime="20201030 15:55:09.606"></status>
</kw>
<msg timestamp="20201030 15:55:09.607" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:09.588" endtime="20201030 15:55:09.607"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:09.614" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:09.609" endtime="20201030 15:55:09.616"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:09.618" endtime="20201030 15:55:09.622"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.580" endtime="20201030 15:55:09.624"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.576" endtime="20201030 15:55:09.627"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:09.646" endtime="20201030 15:55:09.959"></status>
</kw>
<msg timestamp="20201030 15:55:09.964" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037484111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037491236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:09.643" endtime="20201030 15:55:09.964"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:09.976" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037484111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037491236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:09.966" endtime="20201030 15:55:09.977"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:09.979" endtime="20201030 15:55:09.984"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.634" endtime="20201030 15:55:09.986"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.629" endtime="20201030 15:55:09.987"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:09.996" level="INFO">${RESULT} = [{'diff': 7.124999999996717e-06}, {'diff': 1.4694999999995129e-05}, {'diff': 1.668099999999756e-05}, {'diff': 1.1236000000004742e-05}, {'diff': 9.791000000002048e-06}, {'diff': 1.4917000000003178e-05}...</msg>
<status status="PASS" starttime="20201030 15:55:09.989" endtime="20201030 15:55:09.997"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:55:10.004" level="INFO">${GPIO_OVERHEAD} = {'diff': [7.124999999996717e-06, 1.4694999999995129e-05, 1.668099999999756e-05, 1.1236000000004742e-05, 9.791000000002048e-06, 1.4917000000003178e-05, 6.443999999994343e-06, 9.459000000003326e-06, 1.1...</msg>
<status status="PASS" starttime="20201030 15:55:09.998" endtime="20201030 15:55:10.004"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:10.014" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:55:10.011" endtime="20201030 15:55:10.014"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:10.020" level="INFO">VALUE: [7.124999999996717e-06, 1.4694999999995129e-05, 1.668099999999756e-05, 1.1236000000004742e-05, 9.791000000002048e-06, 1.4917000000003178e-05, 6.443999999994343e-06, 9.459000000003326e-06, 1.1598000000001552e-05, 1.1249999999997373e-05, 1.2902999999994669e-05, 1.561099999999871e-05, 1.3139000000002288e-05, 1.2764000000005382e-05, 1.1443999999999344e-05, 1.2556000000003842e-05, 1.5249999999994435e-05, 7.0829999999980076e-06, 1.4959000000001887e-05, 1.202699999999779e-05, 1.3806000000005092e-05, 1.0487000000003466e-05, 7.916000000003642e-06, 1.4916999999996239e-05, 8.360999999998397e-06]</msg>
<status status="PASS" starttime="20201030 15:55:10.016" endtime="20201030 15:55:10.020"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:10.005" endtime="20201030 15:55:10.022"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:10.031" endtime="20201030 15:55:10.053"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:10.027" endtime="20201030 15:55:10.054"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:10.024" endtime="20201030 15:55:10.055"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.572" endtime="20201030 15:55:10.056"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.571" endtime="20201030 15:55:10.056"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:10.077" endtime="20201030 15:55:10.090"></status>
</kw>
<msg timestamp="20201030 15:55:10.091" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:10.073" endtime="20201030 15:55:10.091"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:10.097" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:10.093" endtime="20201030 15:55:10.098"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:10.100" endtime="20201030 15:55:10.103"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:10.066" endtime="20201030 15:55:10.105"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:10.061" endtime="20201030 15:55:10.106"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:10.123" endtime="20201030 15:55:10.436"></status>
</kw>
<msg timestamp="20201030 15:55:10.440" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035896861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035905875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:10.119" endtime="20201030 15:55:10.440"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:10.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035896861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035905875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:10.442" endtime="20201030 15:55:10.453"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:10.454" endtime="20201030 15:55:10.460"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:10.112" endtime="20201030 15:55:10.461"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:10.108" endtime="20201030 15:55:10.463"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:10.472" level="INFO">${RESULT} = [{'diff': 9.013999999994693e-06}, {'diff': 1.4375000000003968e-05}, {'diff': 8.778000000000952e-06}, {'diff': 1.0929999999999274e-05}, {'diff': 1.226299999999847e-05}, {'diff': 1.0361000000000398e-05}...</msg>
<status status="PASS" starttime="20201030 15:55:10.464" endtime="20201030 15:55:10.472"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:55:10.479" level="INFO">${GPIO_OVERHEAD} = {'diff': [9.013999999994693e-06, 1.4375000000003968e-05, 8.778000000000952e-06, 1.0929999999999274e-05, 1.226299999999847e-05, 1.0361000000000398e-05, 1.6915999999998765e-05, 1.536099999999846e-05, 7....</msg>
<status status="PASS" starttime="20201030 15:55:10.474" endtime="20201030 15:55:10.480"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:10.489" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:55:10.487" endtime="20201030 15:55:10.490"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:10.494" level="INFO">VALUE: [9.013999999994693e-06, 1.4375000000003968e-05, 8.778000000000952e-06, 1.0929999999999274e-05, 1.226299999999847e-05, 1.0361000000000398e-05, 1.6915999999998765e-05, 1.536099999999846e-05, 7.139000000003226e-06, 9.374999999998967e-06, 1.5249999999994435e-05, 1.5917000000004178e-05, 8.707999999996163e-06, 1.180499999999668e-05, 6.916000000002642e-06, 1.2264000000004882e-05, 1.2805999999997153e-05, 1.0902999999999607e-05, 1.1499999999997623e-05, 1.5472000000002484e-05, 1.0028000000002202e-05, 1.6305999999993714e-05, 1.0750000000003812e-05, 1.6917000000005178e-05, 1.0457999999997913e-05]</msg>
<status status="PASS" starttime="20201030 15:55:10.492" endtime="20201030 15:55:10.500"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:10.481" endtime="20201030 15:55:10.502"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:10.511" endtime="20201030 15:55:10.533"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:10.507" endtime="20201030 15:55:10.535"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:10.505" endtime="20201030 15:55:10.535"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:10.058" endtime="20201030 15:55:10.536"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:10.057" endtime="20201030 15:55:10.536"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.469" endtime="20201030 15:55:10.537"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:55:00.268" endtime="20201030 15:55:10.538" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:10.556" endtime="20201030 15:55:10.578"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:10.552" endtime="20201030 15:55:10.580"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:10.614" endtime="20201030 15:55:10.633"></status>
</kw>
<msg timestamp="20201030 15:55:10.634" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:10.610" endtime="20201030 15:55:10.634"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:10.640" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:10.636" endtime="20201030 15:55:10.641"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:55:10.647" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:55:10.643" endtime="20201030 15:55:10.648"></status>
</kw>
<status status="FAIL" starttime="20201030 15:55:10.602" endtime="20201030 15:55:10.649"></status>
</kw>
<status status="FAIL" starttime="20201030 15:55:10.596" endtime="20201030 15:55:10.651"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:10.593" endtime="20201030 15:55:10.652"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:55:10.659" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:55:10.658" endtime="20201030 15:55:10.660"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:10.654" endtime="20201030 15:55:10.661"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:10.592" endtime="20201030 15:55:10.661"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:10.590" endtime="20201030 15:55:10.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:10.663" endtime="20201030 15:55:10.667"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:10.586" endtime="20201030 15:55:10.668"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:10.581" endtime="20201030 15:55:10.670"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:10.549" endtime="20201030 15:55:10.670"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:10.692" endtime="20201030 15:55:10.707"></status>
</kw>
<msg timestamp="20201030 15:55:10.708" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:10.689" endtime="20201030 15:55:10.709"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:10.715" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:10.711" endtime="20201030 15:55:10.715"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:10.717" endtime="20201030 15:55:10.721"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:10.682" endtime="20201030 15:55:10.722"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:10.677" endtime="20201030 15:55:10.724"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:10.740" endtime="20201030 15:55:11.098"></status>
</kw>
<msg timestamp="20201030 15:55:11.106" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.128017083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.128018806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:10.737" endtime="20201030 15:55:11.107"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:11.126" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.128017083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.128018806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:11.109" endtime="20201030 15:55:11.127"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:11.129" endtime="20201030 15:55:11.133"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:10.730" endtime="20201030 15:55:11.134"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:10.725" endtime="20201030 15:55:11.136"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:11.147" level="INFO">${RESULT} = [{'diff': 1.7230000000090229e-06}, {'diff': 1.7229999999812673e-06}, {'diff': 1.6660000000112696e-06}, {'diff': 1.7220000000095492e-06}, {'diff': 1.7360000000021802e-06}, {'diff': 7.777999999986074e-0...</msg>
<status status="PASS" starttime="20201030 15:55:11.138" endtime="20201030 15:55:11.148"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:55:11.159" level="INFO">${OVERHEAD} = {'diff': [1.7230000000090229e-06, 1.7229999999812673e-06, 1.6660000000112696e-06, 1.7220000000095492e-06, 1.7360000000021802e-06, 7.777999999986074e-06, 1.7220000000095492e-06, 1.7220000000095492e-06,...</msg>
<status status="PASS" starttime="20201030 15:55:11.150" endtime="20201030 15:55:11.160"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:11.170" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:55:11.168" endtime="20201030 15:55:11.171"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:11.176" level="INFO">VALUE: [1.7230000000090229e-06, 1.7229999999812673e-06, 1.6660000000112696e-06, 1.7220000000095492e-06, 1.7360000000021802e-06, 7.777999999986074e-06, 1.7220000000095492e-06, 1.7220000000095492e-06, 1.6669999999829876e-06, 1.7219999999817936e-06, 1.7360000000021802e-06, 1.7370000000016539e-06, 1.7220000000095492e-06, 1.7219999999817936e-06, 1.7089999999886363e-06, 1.7360000000021802e-06, 1.7220000000095492e-06, 1.7220000000095492e-06, 1.7220000000095492e-06, 1.7219999999817936e-06, 1.7499999999948113e-06, 1.7090000000163919e-06, 1.6810000000033742e-06, 1.7220000000095492e-06, 1.7220000000095492e-06, 1.7079999999891626e-06, 1.7219999999817936e-06, 1.7770000000083552e-06, 1.6800000000039006e-06, 1.7230000000090229e-06, 1.7360000000021802e-06, 1.7220000000095492e-06, 1.7220000000095492e-06, 1.7220000000095492e-06, 1.7360000000021802e-06, 1.7220000000095492e-06, 1.7220000000095492e-06, 1.7220000000095492e-06, 1.7089999999886363e-06, 1.7360000000021802e-06, 1.7910000000009862e-06, 1.7220000000095492e-06, 1.7639999999874423e-06, 1.7080000000169182e-06, 1.7220000000095492e-06, 1.7080000000169182e-06, 1.7080000000169182e-06, 1.7360000000021802e-06, 1.7220000000095492e-06, 1.7780000000078289e-06]</msg>
<status status="PASS" starttime="20201030 15:55:11.173" endtime="20201030 15:55:11.177"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.161" endtime="20201030 15:55:11.179"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:11.189" endtime="20201030 15:55:11.211"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.184" endtime="20201030 15:55:11.213"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.181" endtime="20201030 15:55:11.213"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:10.674" endtime="20201030 15:55:11.214"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:10.673" endtime="20201030 15:55:11.214"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:11.238" endtime="20201030 15:55:11.252"></status>
</kw>
<msg timestamp="20201030 15:55:11.253" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:11.234" endtime="20201030 15:55:11.254"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:11.260" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:11.256" endtime="20201030 15:55:11.261"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:11.263" endtime="20201030 15:55:11.267"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.225" endtime="20201030 15:55:11.268"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.220" endtime="20201030 15:55:11.270"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:11.288" endtime="20201030 15:55:11.647"></status>
</kw>
<msg timestamp="20201030 15:55:11.654" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040766347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040768042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:11.285" endtime="20201030 15:55:11.655"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:11.673" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040766347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040768042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:11.657" endtime="20201030 15:55:11.674"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:11.675" endtime="20201030 15:55:11.679"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.277" endtime="20201030 15:55:11.681"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.272" endtime="20201030 15:55:11.682"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:11.692" level="INFO">${RESULT} = [{'diff': 1.6949999999960053e-06}, {'diff': 1.7360000000021802e-06}, {'diff': 1.7220000000026103e-06}, {'diff': 1.7359999999952413e-06}, {'diff': 1.7089999999955752e-06}, {'diff': 1.7220000000026103e-...</msg>
<status status="PASS" starttime="20201030 15:55:11.684" endtime="20201030 15:55:11.693"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:55:11.702" level="INFO">${OVERHEAD} = {'diff': [1.6949999999960053e-06, 1.7360000000021802e-06, 1.7220000000026103e-06, 1.7359999999952413e-06, 1.7089999999955752e-06, 1.7220000000026103e-06, 1.6810000000033742e-06, 1.7220000000026103e-06...</msg>
<status status="PASS" starttime="20201030 15:55:11.694" endtime="20201030 15:55:11.702"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:11.712" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:55:11.710" endtime="20201030 15:55:11.712"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:11.717" level="INFO">VALUE: [1.6949999999960053e-06, 1.7360000000021802e-06, 1.7220000000026103e-06, 1.7359999999952413e-06, 1.7089999999955752e-06, 1.7220000000026103e-06, 1.6810000000033742e-06, 1.7220000000026103e-06, 1.6669999999968654e-06, 1.7360000000021802e-06, 1.723000000002084e-06, 1.7079999999961015e-06, 1.6659999999973918e-06, 1.722999999995145e-06, 1.7500000000017502e-06, 1.7370000000016539e-06, 1.7219999999956714e-06, 1.723000000002084e-06, 1.723000000002084e-06, 1.7089999999955752e-06, 1.723000000002084e-06, 1.7500000000017502e-06, 1.7630000000018464e-06, 1.723000000002084e-06, 1.7219999999956714e-06, 1.7219999999956714e-06, 1.7220000000026103e-06, 1.7219999999956714e-06, 1.6670000000038043e-06, 1.7220000000026103e-06, 1.7370000000016539e-06, 1.723000000002084e-06, 1.6810000000033742e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7220000000026103e-06, 1.723000000002084e-06, 1.7770000000014163e-06, 1.7219999999956714e-06, 1.7359999999952413e-06, 1.7360000000021802e-06, 1.7359999999952413e-06, 1.7220000000026103e-06, 1.7359999999952413e-06, 1.7220000000026103e-06, 1.723000000002084e-06, 1.7079999999961015e-06, 1.7080000000030404e-06, 1.7360000000021802e-06, 1.76400000000132e-06]</msg>
<status status="PASS" starttime="20201030 15:55:11.714" endtime="20201030 15:55:11.718"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.704" endtime="20201030 15:55:11.720"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:11.729" endtime="20201030 15:55:11.751"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.725" endtime="20201030 15:55:11.752"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.722" endtime="20201030 15:55:11.753"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.216" endtime="20201030 15:55:11.754"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.215" endtime="20201030 15:55:11.755"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:11.783" endtime="20201030 15:55:11.798"></status>
</kw>
<msg timestamp="20201030 15:55:11.799" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:11.773" endtime="20201030 15:55:11.800"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:11.805" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:11.801" endtime="20201030 15:55:11.806"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:11.808" endtime="20201030 15:55:11.813"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.766" endtime="20201030 15:55:11.815"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.761" endtime="20201030 15:55:11.817"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:11.836" endtime="20201030 15:55:12.218"></status>
</kw>
<msg timestamp="20201030 15:55:12.228" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045829542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04583125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:55:11.832" endtime="20201030 15:55:12.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:12.248" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045829542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04583125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:55:12.230" endtime="20201030 15:55:12.249"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:12.250" endtime="20201030 15:55:12.254"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.824" endtime="20201030 15:55:12.256"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.818" endtime="20201030 15:55:12.258"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:12.269" level="INFO">${RESULT} = [{'diff': 1.7079999999961015e-06}, {'diff': 1.7499999999948113e-06}, {'diff': 1.709000000002514e-06}, {'diff': 1.7220000000026103e-06}, {'diff': 1.6530000000042344e-06}, {'diff': 1.723000000002084e-06...</msg>
<status status="PASS" starttime="20201030 15:55:12.259" endtime="20201030 15:55:12.270"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:55:12.279" level="INFO">${OVERHEAD} = {'diff': [1.7079999999961015e-06, 1.7499999999948113e-06, 1.709000000002514e-06, 1.7220000000026103e-06, 1.6530000000042344e-06, 1.723000000002084e-06, 1.7219999999956714e-06, 1.7080000000030404e-06, ...</msg>
<status status="PASS" starttime="20201030 15:55:12.271" endtime="20201030 15:55:12.280"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:12.290" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:55:12.288" endtime="20201030 15:55:12.291"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:12.296" level="INFO">VALUE: [1.7079999999961015e-06, 1.7499999999948113e-06, 1.709000000002514e-06, 1.7220000000026103e-06, 1.6530000000042344e-06, 1.723000000002084e-06, 1.7219999999956714e-06, 1.7080000000030404e-06, 1.7219999999956714e-06, 1.7219999999956714e-06, 1.6669999999968654e-06, 1.7080000000030404e-06, 1.6949999999960053e-06, 1.7220000000026103e-06, 1.77800000000089e-06, 1.7220000000026103e-06, 1.7769999999944774e-06, 1.7220000000026103e-06, 1.7499999999948113e-06, 1.7079999999961015e-06, 1.7080000000030404e-06, 1.7219999999956714e-06, 1.7360000000021802e-06, 1.7220000000026103e-06, 1.723000000002084e-06, 1.7219999999956714e-06, 1.7220000000026103e-06, 1.77800000000089e-06, 1.7079999999961015e-06, 1.7080000000030404e-06, 1.7220000000026103e-06, 1.7360000000021802e-06, 1.709000000002514e-06, 1.723000000002084e-06, 1.7370000000016539e-06, 1.7360000000021802e-06, 1.722999999995145e-06, 1.7219999999956714e-06, 1.7080000000030404e-06, 1.723000000002084e-06, 1.7219999999956714e-06, 1.7360000000021802e-06, 1.76400000000132e-06, 1.7220000000026103e-06, 1.723000000002084e-06, 1.6810000000033742e-06, 1.7220000000026103e-06, 1.7220000000026103e-06, 1.7220000000026103e-06, 1.6529999999972955e-06]</msg>
<status status="PASS" starttime="20201030 15:55:12.293" endtime="20201030 15:55:12.297"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.281" endtime="20201030 15:55:12.299"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:12.311" endtime="20201030 15:55:12.334"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.305" endtime="20201030 15:55:12.335"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.301" endtime="20201030 15:55:12.336"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.757" endtime="20201030 15:55:12.337"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.756" endtime="20201030 15:55:12.337"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:12.359" endtime="20201030 15:55:12.374"></status>
</kw>
<msg timestamp="20201030 15:55:12.376" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:12.355" endtime="20201030 15:55:12.376"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:12.383" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:12.378" endtime="20201030 15:55:12.383"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:12.385" endtime="20201030 15:55:12.389"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.348" endtime="20201030 15:55:12.391"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.343" endtime="20201030 15:55:12.392"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:12.410" endtime="20201030 15:55:12.779"></status>
</kw>
<msg timestamp="20201030 15:55:12.787" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040054083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040055764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:12.406" endtime="20201030 15:55:12.788"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:12.807" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040054083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040055764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:12.790" endtime="20201030 15:55:12.808"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:12.810" endtime="20201030 15:55:12.814"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.399" endtime="20201030 15:55:12.815"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.394" endtime="20201030 15:55:12.817"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:12.828" level="INFO">${RESULT} = [{'diff': 1.6810000000033742e-06}, {'diff': 1.7219999999956714e-06}, {'diff': 1.6949999999960053e-06}, {'diff': 1.7219999999956714e-06}, {'diff': 1.709000000002514e-06}, {'diff': 1.7219999999956714e-0...</msg>
<status status="PASS" starttime="20201030 15:55:12.819" endtime="20201030 15:55:12.829"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:55:12.840" level="INFO">${OVERHEAD} = {'diff': [1.6810000000033742e-06, 1.7219999999956714e-06, 1.6949999999960053e-06, 1.7219999999956714e-06, 1.709000000002514e-06, 1.7219999999956714e-06, 1.7080000000030404e-06, 1.7219999999956714e-06,...</msg>
<status status="PASS" starttime="20201030 15:55:12.830" endtime="20201030 15:55:12.840"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:12.851" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:55:12.848" endtime="20201030 15:55:12.851"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:12.856" level="INFO">VALUE: [1.6810000000033742e-06, 1.7219999999956714e-06, 1.6949999999960053e-06, 1.7219999999956714e-06, 1.709000000002514e-06, 1.7219999999956714e-06, 1.7080000000030404e-06, 1.7219999999956714e-06, 1.7359999999952413e-06, 1.77800000000089e-06, 1.7220000000026103e-06, 1.6670000000038043e-06, 1.7080000000030404e-06, 1.7219999999956714e-06, 1.7220000000026103e-06, 1.7089999999955752e-06, 1.7630000000018464e-06, 1.6950000000029442e-06, 1.723000000002084e-06, 1.7220000000026103e-06, 1.7360000000021802e-06, 1.7220000000026103e-06, 1.736999999994715e-06, 1.7079999999961015e-06, 1.722999999995145e-06, 1.7220000000026103e-06, 1.6659999999973918e-06, 1.7220000000026103e-06, 1.7079999999961015e-06, 1.7079999999961015e-06, 1.722999999995145e-06, 1.7220000000026103e-06, 1.7080000000030404e-06, 1.6809999999964353e-06, 1.7360000000021802e-06, 1.7220000000026103e-06, 1.722999999995145e-06, 1.7079999999961015e-06, 1.7220000000026103e-06, 1.7080000000030404e-06, 1.7359999999952413e-06, 1.7219999999956714e-06, 1.709000000002514e-06, 1.723000000002084e-06, 1.7220000000026103e-06, 1.7360000000021802e-06, 1.722999999995145e-06, 1.7089999999955752e-06, 1.7219999999956714e-06, 1.7219999999956714e-06]</msg>
<status status="PASS" starttime="20201030 15:55:12.853" endtime="20201030 15:55:12.858"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.842" endtime="20201030 15:55:12.860"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:12.870" endtime="20201030 15:55:12.892"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.865" endtime="20201030 15:55:12.894"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.862" endtime="20201030 15:55:12.894"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.339" endtime="20201030 15:55:12.895"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.338" endtime="20201030 15:55:12.896"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:12.917" endtime="20201030 15:55:12.933"></status>
</kw>
<msg timestamp="20201030 15:55:12.934" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:12.914" endtime="20201030 15:55:12.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:12.941" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:12.937" endtime="20201030 15:55:12.942"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:12.943" endtime="20201030 15:55:12.948"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.906" endtime="20201030 15:55:12.949"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.901" endtime="20201030 15:55:12.951"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:12.969" endtime="20201030 15:55:13.352"></status>
</kw>
<msg timestamp="20201030 15:55:13.359" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039715764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039717486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:12.965" endtime="20201030 15:55:13.360"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:13.378" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039715764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039717486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:13.362" endtime="20201030 15:55:13.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:13.381" endtime="20201030 15:55:13.385"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.957" endtime="20201030 15:55:13.386"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.952" endtime="20201030 15:55:13.388"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:13.398" level="INFO">${RESULT} = [{'diff': 1.7220000000026103e-06}, {'diff': 1.7359999999952413e-06}, {'diff': 1.7220000000026103e-06}, {'diff': 1.723000000002084e-06}, {'diff': 1.7079999999961015e-06}, {'diff': 1.7770000000014163e-0...</msg>
<status status="PASS" starttime="20201030 15:55:13.390" endtime="20201030 15:55:13.399"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:55:13.410" level="INFO">${OVERHEAD} = {'diff': [1.7220000000026103e-06, 1.7359999999952413e-06, 1.7220000000026103e-06, 1.723000000002084e-06, 1.7079999999961015e-06, 1.7770000000014163e-06, 1.7219999999956714e-06, 1.7079999999961015e-06,...</msg>
<status status="PASS" starttime="20201030 15:55:13.401" endtime="20201030 15:55:13.410"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:13.420" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:55:13.418" endtime="20201030 15:55:13.421"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:13.426" level="INFO">VALUE: [1.7220000000026103e-06, 1.7359999999952413e-06, 1.7220000000026103e-06, 1.723000000002084e-06, 1.7079999999961015e-06, 1.7770000000014163e-06, 1.7219999999956714e-06, 1.7079999999961015e-06, 1.77800000000089e-06, 1.7219999999956714e-06, 1.77800000000089e-06, 1.7219999999956714e-06, 1.7219999999956714e-06, 1.7080000000030404e-06, 1.777999999993951e-06, 1.7219999999956714e-06, 1.7360000000021802e-06, 1.7089999999955752e-06, 1.723000000002084e-06, 1.7220000000026103e-06, 1.7219999999956714e-06, 1.76400000000132e-06, 1.77800000000089e-06, 1.723000000002084e-06, 1.76400000000132e-06, 1.7220000000026103e-06, 1.6529999999972955e-06, 1.6530000000042344e-06, 1.7089999999955752e-06, 1.7219999999956714e-06, 1.7220000000026103e-06, 1.777999999993951e-06, 1.7220000000026103e-06, 1.7079999999961015e-06, 1.6669999999968654e-06, 1.7360000000021802e-06, 1.7219999999956714e-06, 1.709000000002514e-06, 1.6810000000033742e-06, 1.7079999999961015e-06, 1.6670000000038043e-06, 1.7219999999956714e-06, 1.7080000000030404e-06, 1.7360000000021802e-06, 1.7219999999956714e-06, 1.76400000000132e-06, 1.7079999999961015e-06, 1.723000000002084e-06, 1.7219999999956714e-06, 1.7220000000026103e-06]</msg>
<status status="PASS" starttime="20201030 15:55:13.422" endtime="20201030 15:55:13.427"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:13.412" endtime="20201030 15:55:13.429"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:13.439" endtime="20201030 15:55:13.460"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:13.434" endtime="20201030 15:55:13.462"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:13.432" endtime="20201030 15:55:13.463"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.897" endtime="20201030 15:55:13.463"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.896" endtime="20201030 15:55:13.464"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:13.484" endtime="20201030 15:55:13.499"></status>
</kw>
<msg timestamp="20201030 15:55:13.500" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:13.481" endtime="20201030 15:55:13.501"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:13.507" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:13.502" endtime="20201030 15:55:13.507"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:13.509" endtime="20201030 15:55:13.513"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:13.474" endtime="20201030 15:55:13.514"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:13.469" endtime="20201030 15:55:13.516"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:13.533" endtime="20201030 15:55:13.892"></status>
</kw>
<msg timestamp="20201030 15:55:13.899" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037969583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037971306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:13.529" endtime="20201030 15:55:13.900"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:13.918" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037969583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037971306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:13.902" endtime="20201030 15:55:13.919"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:13.920" endtime="20201030 15:55:13.924"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:13.522" endtime="20201030 15:55:13.926"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:13.517" endtime="20201030 15:55:13.928"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:13.938" level="INFO">${RESULT} = [{'diff': 1.723000000002084e-06}, {'diff': 1.7220000000026103e-06}, {'diff': 1.7219999999956714e-06}, {'diff': 1.7359999999952413e-06}, {'diff': 1.7079999999961015e-06}, {'diff': 1.7220000000026103e-0...</msg>
<status status="PASS" starttime="20201030 15:55:13.929" endtime="20201030 15:55:13.939"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:55:13.948" level="INFO">${OVERHEAD} = {'diff': [1.723000000002084e-06, 1.7220000000026103e-06, 1.7219999999956714e-06, 1.7359999999952413e-06, 1.7079999999961015e-06, 1.7220000000026103e-06, 1.7910000000009862e-06, 1.723000000002084e-06, ...</msg>
<status status="PASS" starttime="20201030 15:55:13.940" endtime="20201030 15:55:13.948"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:13.958" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:55:13.956" endtime="20201030 15:55:13.959"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:13.963" level="INFO">VALUE: [1.723000000002084e-06, 1.7220000000026103e-06, 1.7219999999956714e-06, 1.7359999999952413e-06, 1.7079999999961015e-06, 1.7220000000026103e-06, 1.7910000000009862e-06, 1.723000000002084e-06, 1.7219999999956714e-06, 1.6529999999972955e-06, 1.7220000000026103e-06, 1.7080000000030404e-06, 1.709000000002514e-06, 1.7220000000026103e-06, 1.7220000000026103e-06, 1.7219999999956714e-06, 1.7089999999955752e-06, 1.723000000002084e-06, 1.7080000000030404e-06, 1.7220000000026103e-06, 1.7220000000026103e-06, 1.709000000002514e-06, 1.7080000000030404e-06, 1.7219999999956714e-06, 1.7219999999956714e-06, 1.7219999999956714e-06, 1.736999999994715e-06, 1.6949999999960053e-06, 1.7220000000026103e-06, 1.7079999999961015e-06, 1.7080000000030404e-06, 1.7220000000026103e-06, 1.7219999999956714e-06, 1.7220000000026103e-06, 1.7360000000021802e-06, 1.7220000000026103e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7220000000026103e-06, 1.7359999999952413e-06, 1.7080000000030404e-06, 1.7220000000026103e-06, 1.6940000000034705e-06, 1.723000000002084e-06, 1.77800000000089e-06, 1.6949999999960053e-06, 1.7079999999961015e-06, 1.6950000000029442e-06, 1.7080000000030404e-06, 1.7360000000021802e-06]</msg>
<status status="PASS" starttime="20201030 15:55:13.960" endtime="20201030 15:55:13.965"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:13.949" endtime="20201030 15:55:13.967"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:13.976" endtime="20201030 15:55:13.998"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:13.972" endtime="20201030 15:55:14.000"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:13.969" endtime="20201030 15:55:14.001"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:13.465" endtime="20201030 15:55:14.001"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:13.464" endtime="20201030 15:55:14.002"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:14.022" endtime="20201030 15:55:14.037"></status>
</kw>
<msg timestamp="20201030 15:55:14.039" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:14.019" endtime="20201030 15:55:14.039"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:14.045" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:14.041" endtime="20201030 15:55:14.046"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:14.047" endtime="20201030 15:55:14.053"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.012" endtime="20201030 15:55:14.054"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.007" endtime="20201030 15:55:14.056"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:14.073" endtime="20201030 15:55:14.428"></status>
</kw>
<msg timestamp="20201030 15:55:14.436" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037816958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037818681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:14.069" endtime="20201030 15:55:14.437"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:14.456" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037816958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037818681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:14.439" endtime="20201030 15:55:14.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:14.459" endtime="20201030 15:55:14.463"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.062" endtime="20201030 15:55:14.465"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.057" endtime="20201030 15:55:14.467"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:14.478" level="INFO">${RESULT} = [{'diff': 1.723000000002084e-06}, {'diff': 1.7360000000021802e-06}, {'diff': 1.7219999999956714e-06}, {'diff': 1.7079999999961015e-06}, {'diff': 1.709000000002514e-06}, {'diff': 1.7219999999956714e-06...</msg>
<status status="PASS" starttime="20201030 15:55:14.468" endtime="20201030 15:55:14.478"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:55:14.488" level="INFO">${OVERHEAD} = {'diff': [1.723000000002084e-06, 1.7360000000021802e-06, 1.7219999999956714e-06, 1.7079999999961015e-06, 1.709000000002514e-06, 1.7219999999956714e-06, 1.723000000002084e-06, 1.7220000000026103e-06, 1...</msg>
<status status="PASS" starttime="20201030 15:55:14.480" endtime="20201030 15:55:14.489"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:14.499" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:55:14.497" endtime="20201030 15:55:14.500"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:14.505" level="INFO">VALUE: [1.723000000002084e-06, 1.7360000000021802e-06, 1.7219999999956714e-06, 1.7079999999961015e-06, 1.709000000002514e-06, 1.7219999999956714e-06, 1.723000000002084e-06, 1.7220000000026103e-06, 1.7220000000026103e-06, 1.7079999999961015e-06, 1.722999999995145e-06, 1.7220000000026103e-06, 1.6799999999969617e-06, 1.723000000002084e-06, 1.7219999999956714e-06, 1.7359999999952413e-06, 1.709000000002514e-06, 1.7360000000021802e-06, 1.7500000000017502e-06, 1.76400000000132e-06, 1.7080000000030404e-06, 1.7770000000014163e-06, 1.7080000000030404e-06, 1.7080000000030404e-06, 1.723000000002084e-06, 1.709000000002514e-06, 1.77800000000089e-06, 1.7219999999956714e-06, 1.7639999999943812e-06, 1.7220000000026103e-06, 1.7079999999961015e-06, 1.7220000000026103e-06, 1.723000000002084e-06, 1.7220000000026103e-06, 1.7360000000021802e-06, 1.7219999999956714e-06, 1.709000000002514e-06, 1.7080000000030404e-06, 1.7360000000021802e-06, 1.7220000000026103e-06, 1.7360000000021802e-06, 1.7219999999956714e-06, 1.7219999999956714e-06, 1.7920000000004599e-06, 1.723000000002084e-06, 1.723000000002084e-06, 1.7080000000030404e-06, 1.7220000000026103e-06, 1.7220000000026103e-06, 1.7079999999961015e-06]</msg>
<status status="PASS" starttime="20201030 15:55:14.502" endtime="20201030 15:55:14.507"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.490" endtime="20201030 15:55:14.508"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:14.520" endtime="20201030 15:55:14.542"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.514" endtime="20201030 15:55:14.544"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.511" endtime="20201030 15:55:14.544"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.003" endtime="20201030 15:55:14.545"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.002" endtime="20201030 15:55:14.546"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:14.567" endtime="20201030 15:55:14.583"></status>
</kw>
<msg timestamp="20201030 15:55:14.584" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:14.564" endtime="20201030 15:55:14.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:14.591" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:14.587" endtime="20201030 15:55:14.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:14.593" endtime="20201030 15:55:14.598"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.556" endtime="20201030 15:55:14.599"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.551" endtime="20201030 15:55:14.601"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:14.619" endtime="20201030 15:55:14.987"></status>
</kw>
<msg timestamp="20201030 15:55:14.994" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039522972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039524681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:14.615" endtime="20201030 15:55:14.995"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:15.014" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039522972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039524681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:14.997" endtime="20201030 15:55:15.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:15.017" endtime="20201030 15:55:15.023"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.607" endtime="20201030 15:55:15.025"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.602" endtime="20201030 15:55:15.027"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:15.039" level="INFO">${RESULT} = [{'diff': 1.7089999999955752e-06}, {'diff': 1.7219999999956714e-06}, {'diff': 1.7079999999961015e-06}, {'diff': 1.722999999995145e-06}, {'diff': 1.7639999999943812e-06}, {'diff': 1.7220000000026103e-0...</msg>
<status status="PASS" starttime="20201030 15:55:15.029" endtime="20201030 15:55:15.040"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:55:15.050" level="INFO">${OVERHEAD} = {'diff': [1.7089999999955752e-06, 1.7219999999956714e-06, 1.7079999999961015e-06, 1.722999999995145e-06, 1.7639999999943812e-06, 1.7220000000026103e-06, 1.7220000000026103e-06, 1.7220000000026103e-06,...</msg>
<status status="PASS" starttime="20201030 15:55:15.041" endtime="20201030 15:55:15.051"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:15.061" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:55:15.059" endtime="20201030 15:55:15.062"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:15.067" level="INFO">VALUE: [1.7089999999955752e-06, 1.7219999999956714e-06, 1.7079999999961015e-06, 1.722999999995145e-06, 1.7639999999943812e-06, 1.7220000000026103e-06, 1.7220000000026103e-06, 1.7220000000026103e-06, 1.7080000000030404e-06, 1.7219999999956714e-06, 1.77800000000089e-06, 1.7220000000026103e-06, 1.6940000000034705e-06, 1.7219999999956714e-06, 1.7359999999952413e-06, 1.7920000000004599e-06, 1.7220000000026103e-06, 1.7359999999952413e-06, 1.6799999999969617e-06, 1.7219999999956714e-06, 1.7220000000026103e-06, 1.6530000000042344e-06, 1.7220000000026103e-06, 1.7220000000026103e-06, 1.7079999999961015e-06, 1.6950000000029442e-06, 1.7220000000026103e-06, 1.7220000000026103e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.722999999995145e-06, 1.6939999999965316e-06, 1.7079999999961015e-06, 1.7219999999956714e-06, 1.7360000000021802e-06, 1.722999999995145e-06, 1.7220000000026103e-06, 1.7360000000021802e-06, 1.7219999999956714e-06, 1.7769999999944774e-06, 1.7920000000004599e-06, 1.6669999999968654e-06, 1.7219999999956714e-06, 1.7220000000026103e-06, 1.7220000000026103e-06, 1.7220000000026103e-06, 1.7220000000026103e-06, 1.7219999999956714e-06, 1.7080000000030404e-06, 1.7360000000021802e-06]</msg>
<status status="PASS" starttime="20201030 15:55:15.064" endtime="20201030 15:55:15.069"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:15.052" endtime="20201030 15:55:15.071"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:15.081" endtime="20201030 15:55:15.103"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:15.076" endtime="20201030 15:55:15.105"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:15.073" endtime="20201030 15:55:15.106"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.548" endtime="20201030 15:55:15.106"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.547" endtime="20201030 15:55:15.107"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:15.130" endtime="20201030 15:55:15.146"></status>
</kw>
<msg timestamp="20201030 15:55:15.147" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:15.126" endtime="20201030 15:55:15.148"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:15.154" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:15.150" endtime="20201030 15:55:15.154"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:15.156" endtime="20201030 15:55:15.160"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:15.117" endtime="20201030 15:55:15.162"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:15.112" endtime="20201030 15:55:15.164"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:15.188" endtime="20201030 15:55:15.555"></status>
</kw>
<msg timestamp="20201030 15:55:15.563" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04121975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041221472, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:55:15.183" endtime="20201030 15:55:15.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:15.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04121975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041221472, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:55:15.565" endtime="20201030 15:55:15.583"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:15.585" endtime="20201030 15:55:15.589"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:15.173" endtime="20201030 15:55:15.591"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:15.166" endtime="20201030 15:55:15.593"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:15.604" level="INFO">${RESULT} = [{'diff': 1.7220000000026103e-06}, {'diff': 1.7220000000026103e-06}, {'diff': 1.723000000002084e-06}, {'diff': 1.7089999999955752e-06}, {'diff': 1.7089999999955752e-06}, {'diff': 1.7219999999956714e-0...</msg>
<status status="PASS" starttime="20201030 15:55:15.594" endtime="20201030 15:55:15.604"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:55:15.616" level="INFO">${OVERHEAD} = {'diff': [1.7220000000026103e-06, 1.7220000000026103e-06, 1.723000000002084e-06, 1.7089999999955752e-06, 1.7089999999955752e-06, 1.7219999999956714e-06, 1.723000000002084e-06, 1.7220000000026103e-06, ...</msg>
<status status="PASS" starttime="20201030 15:55:15.606" endtime="20201030 15:55:15.616"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:15.627" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:55:15.624" endtime="20201030 15:55:15.628"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:15.633" level="INFO">VALUE: [1.7220000000026103e-06, 1.7220000000026103e-06, 1.723000000002084e-06, 1.7089999999955752e-06, 1.7089999999955752e-06, 1.7219999999956714e-06, 1.723000000002084e-06, 1.7220000000026103e-06, 1.7220000000026103e-06, 1.7089999999955752e-06, 1.7360000000021802e-06, 1.7080000000030404e-06, 1.7219999999956714e-06, 1.7219999999956714e-06, 1.7220000000026103e-06, 1.6940000000034705e-06, 1.6940000000034705e-06, 1.7079999999961015e-06, 1.7080000000030404e-06, 1.7080000000030404e-06, 1.7220000000026103e-06, 1.7080000000030404e-06, 1.7220000000026103e-06, 1.7220000000026103e-06, 1.7359999999952413e-06, 1.7639999999943812e-06, 1.7359999999952413e-06, 1.7360000000021802e-06, 1.7219999999956714e-06, 1.722999999995145e-06, 1.723000000002084e-06, 1.77800000000089e-06, 1.76400000000132e-06, 1.7219999999956714e-06, 1.7080000000030404e-06, 1.7220000000026103e-06, 1.7360000000021802e-06, 1.7220000000026103e-06, 1.7920000000004599e-06, 1.7499999999948113e-06, 1.7370000000016539e-06, 1.722999999995145e-06, 1.723000000002084e-06, 1.7219999999956714e-06, 1.723000000002084e-06, 1.736999999994715e-06, 1.7220000000026103e-06, 1.7089999999955752e-06, 1.7220000000026103e-06, 1.7220000000026103e-06]</msg>
<status status="PASS" starttime="20201030 15:55:15.629" endtime="20201030 15:55:15.639"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:15.618" endtime="20201030 15:55:15.641"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:15.651" endtime="20201030 15:55:15.673"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:15.647" endtime="20201030 15:55:15.675"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:15.644" endtime="20201030 15:55:15.676"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:15.109" endtime="20201030 15:55:15.677"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:15.108" endtime="20201030 15:55:15.677"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:15.699" endtime="20201030 15:55:15.714"></status>
</kw>
<msg timestamp="20201030 15:55:15.716" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:15.695" endtime="20201030 15:55:15.716"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:15.723" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:15.718" endtime="20201030 15:55:15.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:15.726" endtime="20201030 15:55:15.731"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:15.688" endtime="20201030 15:55:15.733"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:15.682" endtime="20201030 15:55:15.735"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:15.754" endtime="20201030 15:55:16.135"></status>
</kw>
<msg timestamp="20201030 15:55:16.146" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039818931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039820653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:15.750" endtime="20201030 15:55:16.147"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:16.167" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039818931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039820653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:16.150" endtime="20201030 15:55:16.168"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:16.170" endtime="20201030 15:55:16.174"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:15.742" endtime="20201030 15:55:16.176"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:15.736" endtime="20201030 15:55:16.177"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:16.189" level="INFO">${RESULT} = [{'diff': 1.7219999999956714e-06}, {'diff': 1.7360000000021802e-06}, {'diff': 1.7370000000016539e-06}, {'diff': 1.7219999999956714e-06}, {'diff': 1.7360000000021802e-06}, {'diff': 1.7219999999956714e-...</msg>
<status status="PASS" starttime="20201030 15:55:16.179" endtime="20201030 15:55:16.189"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:55:16.199" level="INFO">${OVERHEAD} = {'diff': [1.7219999999956714e-06, 1.7360000000021802e-06, 1.7370000000016539e-06, 1.7219999999956714e-06, 1.7360000000021802e-06, 1.7219999999956714e-06, 1.7220000000026103e-06, 1.7359999999952413e-06...</msg>
<status status="PASS" starttime="20201030 15:55:16.191" endtime="20201030 15:55:16.199"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:16.210" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:55:16.207" endtime="20201030 15:55:16.210"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:16.215" level="INFO">VALUE: [1.7219999999956714e-06, 1.7360000000021802e-06, 1.7370000000016539e-06, 1.7219999999956714e-06, 1.7360000000021802e-06, 1.7219999999956714e-06, 1.7220000000026103e-06, 1.7359999999952413e-06, 1.7219999999956714e-06, 1.7220000000026103e-06, 1.77800000000089e-06, 1.7360000000021802e-06, 1.7219999999956714e-06, 1.7219999999956714e-06, 1.7220000000026103e-06, 1.8060000000000298e-06, 1.7080000000030404e-06, 1.7500000000017502e-06, 1.722999999995145e-06, 1.7080000000030404e-06, 1.7220000000026103e-06, 1.7080000000030404e-06, 1.7220000000026103e-06, 1.7360000000021802e-06, 1.7220000000026103e-06, 1.7089999999955752e-06, 1.723000000002084e-06, 1.709000000002514e-06, 1.723000000002084e-06, 1.7500000000017502e-06, 1.7220000000026103e-06, 1.7360000000021802e-06, 1.7080000000030404e-06, 1.723000000002084e-06, 1.7220000000026103e-06, 1.7769999999944774e-06, 1.709000000002514e-06, 1.77800000000089e-06, 1.7499999999948113e-06, 1.723000000002084e-06, 1.7219999999956714e-06, 1.76400000000132e-06, 1.7080000000030404e-06, 1.7219999999956714e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7079999999961015e-06, 1.6529999999972955e-06, 1.7220000000026103e-06]</msg>
<status status="PASS" starttime="20201030 15:55:16.212" endtime="20201030 15:55:16.217"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.201" endtime="20201030 15:55:16.219"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:16.229" endtime="20201030 15:55:16.251"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.224" endtime="20201030 15:55:16.253"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.221" endtime="20201030 15:55:16.254"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:15.679" endtime="20201030 15:55:16.254"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:15.678" endtime="20201030 15:55:16.255"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:16.277" endtime="20201030 15:55:16.294"></status>
</kw>
<msg timestamp="20201030 15:55:16.295" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:16.273" endtime="20201030 15:55:16.296"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:16.302" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:16.297" endtime="20201030 15:55:16.302"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:16.304" endtime="20201030 15:55:16.308"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.265" endtime="20201030 15:55:16.310"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.260" endtime="20201030 15:55:16.311"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:16.330" endtime="20201030 15:55:16.700"></status>
</kw>
<msg timestamp="20201030 15:55:16.707" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039877444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039879153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:16.327" endtime="20201030 15:55:16.708"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:16.728" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039877444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039879153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:16.710" endtime="20201030 15:55:16.729"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:16.731" endtime="20201030 15:55:16.735"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.318" endtime="20201030 15:55:16.737"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.313" endtime="20201030 15:55:16.739"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:16.750" level="INFO">${RESULT} = [{'diff': 1.709000000002514e-06}, {'diff': 1.723000000002084e-06}, {'diff': 1.7360000000021802e-06}, {'diff': 1.7220000000026103e-06}, {'diff': 1.76400000000132e-06}, {'diff': 1.7500000000017502e-06},...</msg>
<status status="PASS" starttime="20201030 15:55:16.740" endtime="20201030 15:55:16.750"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:55:16.761" level="INFO">${OVERHEAD} = {'diff': [1.709000000002514e-06, 1.723000000002084e-06, 1.7360000000021802e-06, 1.7220000000026103e-06, 1.76400000000132e-06, 1.7500000000017502e-06, 1.6939999999965316e-06, 1.7359999999952413e-06, 1....</msg>
<status status="PASS" starttime="20201030 15:55:16.752" endtime="20201030 15:55:16.761"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:16.772" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:55:16.769" endtime="20201030 15:55:16.773"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:16.778" level="INFO">VALUE: [1.709000000002514e-06, 1.723000000002084e-06, 1.7360000000021802e-06, 1.7220000000026103e-06, 1.76400000000132e-06, 1.7500000000017502e-06, 1.6939999999965316e-06, 1.7359999999952413e-06, 1.7219999999956714e-06, 1.7219999999956714e-06, 1.7220000000026103e-06, 1.723000000002084e-06, 1.7080000000030404e-06, 1.77800000000089e-06, 1.7360000000021802e-06, 1.7089999999955752e-06, 1.7360000000021802e-06, 1.7500000000017502e-06, 1.7360000000021802e-06, 1.76400000000132e-06, 1.7360000000021802e-06, 1.7089999999955752e-06, 1.7080000000030404e-06, 1.709000000002514e-06, 1.7079999999961015e-06, 1.7219999999956714e-06, 1.7360000000021802e-06, 1.7220000000026103e-06, 1.7219999999956714e-06, 1.7359999999952413e-06, 1.7500000000017502e-06, 1.7500000000017502e-06, 1.7220000000026103e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7770000000014163e-06, 1.7219999999956714e-06, 1.723000000002084e-06, 1.7220000000026103e-06, 1.7219999999956714e-06, 1.7500000000017502e-06, 1.7080000000030404e-06, 1.7360000000021802e-06, 1.7219999999956714e-06, 1.777999999993951e-06, 1.7089999999955752e-06, 1.7080000000030404e-06, 1.7219999999956714e-06, 1.723000000002084e-06, 1.76400000000132e-06]</msg>
<status status="PASS" starttime="20201030 15:55:16.775" endtime="20201030 15:55:16.780"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.763" endtime="20201030 15:55:16.782"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:16.794" endtime="20201030 15:55:16.816"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.787" endtime="20201030 15:55:16.818"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.785" endtime="20201030 15:55:16.818"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.257" endtime="20201030 15:55:16.819"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.256" endtime="20201030 15:55:16.820"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:16.842" endtime="20201030 15:55:16.857"></status>
</kw>
<msg timestamp="20201030 15:55:16.858" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:16.838" endtime="20201030 15:55:16.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:16.865" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:16.860" endtime="20201030 15:55:16.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:16.867" endtime="20201030 15:55:16.871"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.830" endtime="20201030 15:55:16.873"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.825" endtime="20201030 15:55:16.874"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:16.892" endtime="20201030 15:55:17.257"></status>
</kw>
<msg timestamp="20201030 15:55:17.266" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039851583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039853306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:16.889" endtime="20201030 15:55:17.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:17.288" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039851583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039853306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:17.269" endtime="20201030 15:55:17.289"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:17.291" endtime="20201030 15:55:17.295"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.881" endtime="20201030 15:55:17.297"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.876" endtime="20201030 15:55:17.298"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:17.309" level="INFO">${RESULT} = [{'diff': 1.722999999995145e-06}, {'diff': 1.7500000000017502e-06}, {'diff': 1.7499999999948113e-06}, {'diff': 1.77800000000089e-06}, {'diff': 1.723000000002084e-06}, {'diff': 1.7080000000030404e-06},...</msg>
<status status="PASS" starttime="20201030 15:55:17.300" endtime="20201030 15:55:17.310"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:55:17.326" level="INFO">${OVERHEAD} = {'diff': [1.722999999995145e-06, 1.7500000000017502e-06, 1.7499999999948113e-06, 1.77800000000089e-06, 1.723000000002084e-06, 1.7080000000030404e-06, 1.709000000002514e-06, 1.76400000000132e-06, 1.721...</msg>
<status status="PASS" starttime="20201030 15:55:17.311" endtime="20201030 15:55:17.327"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:17.337" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:55:17.334" endtime="20201030 15:55:17.338"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:17.343" level="INFO">VALUE: [1.722999999995145e-06, 1.7500000000017502e-06, 1.7499999999948113e-06, 1.77800000000089e-06, 1.723000000002084e-06, 1.7080000000030404e-06, 1.709000000002514e-06, 1.76400000000132e-06, 1.7219999999956714e-06, 1.7910000000009862e-06, 1.7080000000030404e-06, 1.7080000000030404e-06, 1.723000000002084e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7220000000026103e-06, 1.6669999999968654e-06, 1.722999999995145e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.77800000000089e-06, 1.723000000002084e-06, 1.7220000000026103e-06, 1.723000000002084e-06, 1.7359999999952413e-06, 1.722999999995145e-06, 1.7220000000026103e-06, 1.7219999999956714e-06, 1.7089999999955752e-06, 1.709000000002514e-06, 1.6669999999968654e-06, 1.7220000000026103e-06, 1.7220000000026103e-06, 1.7080000000030404e-06, 1.723000000002084e-06, 1.7220000000026103e-06, 1.77800000000089e-06, 1.7089999999955752e-06, 1.7360000000021802e-06, 1.7219999999956714e-06, 1.7770000000014163e-06, 1.7219999999956714e-06, 1.723000000002084e-06, 1.7360000000021802e-06, 1.723000000002084e-06, 1.7219999999956714e-06, 1.7359999999952413e-06, 1.7360000000021802e-06, 1.77800000000089e-06]</msg>
<status status="PASS" starttime="20201030 15:55:17.339" endtime="20201030 15:55:17.345"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.328" endtime="20201030 15:55:17.346"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:17.356" endtime="20201030 15:55:17.379"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.352" endtime="20201030 15:55:17.380"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.349" endtime="20201030 15:55:17.381"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.821" endtime="20201030 15:55:17.382"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.820" endtime="20201030 15:55:17.382"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:17.404" endtime="20201030 15:55:17.420"></status>
</kw>
<msg timestamp="20201030 15:55:17.422" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:17.401" endtime="20201030 15:55:17.422"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:17.428" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:17.424" endtime="20201030 15:55:17.429"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:17.431" endtime="20201030 15:55:17.435"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.393" endtime="20201030 15:55:17.436"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.388" endtime="20201030 15:55:17.438"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:17.456" endtime="20201030 15:55:17.805"></status>
</kw>
<msg timestamp="20201030 15:55:17.812" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040387042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040388792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:17.452" endtime="20201030 15:55:17.813"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:17.831" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040387042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040388792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:17.815" endtime="20201030 15:55:17.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:17.834" endtime="20201030 15:55:17.838"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.445" endtime="20201030 15:55:17.839"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.439" endtime="20201030 15:55:17.841"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:17.851" level="INFO">${RESULT} = [{'diff': 1.7500000000017502e-06}, {'diff': 1.7219999999956714e-06}, {'diff': 1.7220000000026103e-06}, {'diff': 1.6939999999965316e-06}, {'diff': 1.6809999999964353e-06}, {'diff': 1.7220000000026103e-...</msg>
<status status="PASS" starttime="20201030 15:55:17.842" endtime="20201030 15:55:17.852"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:55:17.862" level="INFO">${OVERHEAD} = {'diff': [1.7500000000017502e-06, 1.7219999999956714e-06, 1.7220000000026103e-06, 1.6939999999965316e-06, 1.6809999999964353e-06, 1.7220000000026103e-06, 1.7219999999956714e-06, 1.7220000000026103e-06...</msg>
<status status="PASS" starttime="20201030 15:55:17.853" endtime="20201030 15:55:17.863"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:17.872" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:55:17.870" endtime="20201030 15:55:17.873"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:17.878" level="INFO">VALUE: [1.7500000000017502e-06, 1.7219999999956714e-06, 1.7220000000026103e-06, 1.6939999999965316e-06, 1.6809999999964353e-06, 1.7220000000026103e-06, 1.7219999999956714e-06, 1.7220000000026103e-06, 1.7080000000030404e-06, 1.7360000000021802e-06, 1.7080000000030404e-06, 1.7079999999961015e-06, 1.7089999999955752e-06, 1.7360000000021802e-06, 1.723000000002084e-06, 1.7220000000026103e-06, 1.6939999999965316e-06, 1.7360000000021802e-06, 1.7089999999955752e-06, 1.7220000000026103e-06, 1.7220000000026103e-06, 1.7089999999955752e-06, 1.6390000000046645e-06, 1.7220000000026103e-06, 1.7360000000021802e-06, 1.6810000000033742e-06, 1.7079999999961015e-06, 1.7359999999952413e-06, 1.6659999999973918e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.723000000002084e-06, 1.7219999999956714e-06, 1.7360000000021802e-06, 1.7089999999955752e-06, 1.7220000000026103e-06, 1.7219999999956714e-06, 1.7910000000009862e-06, 1.7220000000026103e-06, 1.709000000002514e-06, 1.709000000002514e-06, 1.7220000000026103e-06, 1.7220000000026103e-06, 1.7219999999956714e-06, 1.7219999999956714e-06, 1.7360000000021802e-06, 1.7220000000026103e-06, 1.7219999999956714e-06, 1.7220000000026103e-06, 1.7360000000021802e-06]</msg>
<status status="PASS" starttime="20201030 15:55:17.875" endtime="20201030 15:55:17.879"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.864" endtime="20201030 15:55:17.881"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:17.890" endtime="20201030 15:55:17.912"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.886" endtime="20201030 15:55:17.914"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.883" endtime="20201030 15:55:17.914"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.384" endtime="20201030 15:55:17.915"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.383" endtime="20201030 15:55:17.915"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:17.936" endtime="20201030 15:55:17.950"></status>
</kw>
<msg timestamp="20201030 15:55:17.952" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:17.932" endtime="20201030 15:55:17.952"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:17.958" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:17.954" endtime="20201030 15:55:17.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:17.960" endtime="20201030 15:55:17.964"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.925" endtime="20201030 15:55:17.966"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.920" endtime="20201030 15:55:17.967"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:17.983" endtime="20201030 15:55:18.334"></status>
</kw>
<msg timestamp="20201030 15:55:18.342" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037176125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037177833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:17.980" endtime="20201030 15:55:18.342"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:18.360" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037176125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037177833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:18.344" endtime="20201030 15:55:18.361"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:18.363" endtime="20201030 15:55:18.367"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.973" endtime="20201030 15:55:18.368"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.968" endtime="20201030 15:55:18.370"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:18.380" level="INFO">${RESULT} = [{'diff': 1.7080000000030404e-06}, {'diff': 1.7079999999961015e-06}, {'diff': 1.7220000000026103e-06}, {'diff': 1.7219999999956714e-06}, {'diff': 1.7220000000026103e-06}, {'diff': 1.7220000000026103e-...</msg>
<status status="PASS" starttime="20201030 15:55:18.371" endtime="20201030 15:55:18.380"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:55:18.389" level="INFO">${OVERHEAD} = {'diff': [1.7080000000030404e-06, 1.7079999999961015e-06, 1.7220000000026103e-06, 1.7219999999956714e-06, 1.7220000000026103e-06, 1.7220000000026103e-06, 1.6659999999973918e-06, 1.722999999995145e-06,...</msg>
<status status="PASS" starttime="20201030 15:55:18.382" endtime="20201030 15:55:18.390"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:18.399" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:55:18.397" endtime="20201030 15:55:18.400"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:18.405" level="INFO">VALUE: [1.7080000000030404e-06, 1.7079999999961015e-06, 1.7220000000026103e-06, 1.7219999999956714e-06, 1.7220000000026103e-06, 1.7220000000026103e-06, 1.6659999999973918e-06, 1.722999999995145e-06, 1.7360000000021802e-06, 1.7080000000030404e-06, 1.7089999999955752e-06, 1.7220000000026103e-06, 1.7220000000026103e-06, 1.7360000000021802e-06, 1.723000000002084e-06, 1.77800000000089e-06, 1.7219999999956714e-06, 1.7089999999955752e-06, 1.6389999999977256e-06, 1.7220000000026103e-06, 1.709000000002514e-06, 1.7080000000030404e-06, 1.7360000000021802e-06, 1.7220000000026103e-06, 1.7219999999956714e-06, 1.7220000000026103e-06, 1.709000000002514e-06, 1.7219999999956714e-06, 1.7360000000021802e-06, 1.7219999999956714e-06, 1.7219999999956714e-06, 1.7360000000021802e-06, 1.7500000000017502e-06, 1.7219999999956714e-06, 1.7370000000016539e-06, 1.6940000000034705e-06, 1.7220000000026103e-06, 1.7769999999944774e-06, 1.7220000000026103e-06, 1.7499999999948113e-06, 1.7220000000026103e-06, 1.7219999999956714e-06, 1.7219999999956714e-06, 1.7359999999952413e-06, 1.6529999999972955e-06, 1.6529999999972955e-06, 1.7080000000030404e-06, 1.7220000000026103e-06, 1.7089999999955752e-06, 1.723000000002084e-06]</msg>
<status status="PASS" starttime="20201030 15:55:18.402" endtime="20201030 15:55:18.406"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.391" endtime="20201030 15:55:18.408"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:18.417" endtime="20201030 15:55:18.439"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.413" endtime="20201030 15:55:18.441"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.410" endtime="20201030 15:55:18.441"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.917" endtime="20201030 15:55:18.442"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.916" endtime="20201030 15:55:18.442"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:18.463" endtime="20201030 15:55:18.478"></status>
</kw>
<msg timestamp="20201030 15:55:18.479" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:18.460" endtime="20201030 15:55:18.480"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:18.485" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:18.481" endtime="20201030 15:55:18.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:18.488" endtime="20201030 15:55:18.493"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.452" endtime="20201030 15:55:18.495"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.448" endtime="20201030 15:55:18.496"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:18.513" endtime="20201030 15:55:18.870"></status>
</kw>
<msg timestamp="20201030 15:55:18.877" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03776475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037766472, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:55:18.509" endtime="20201030 15:55:18.877"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:18.895" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03776475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037766472, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:55:18.879" endtime="20201030 15:55:18.896"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:18.898" endtime="20201030 15:55:18.902"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.502" endtime="20201030 15:55:18.903"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.497" endtime="20201030 15:55:18.905"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:18.915" level="INFO">${RESULT} = [{'diff': 1.7220000000026103e-06}, {'diff': 1.7080000000030404e-06}, {'diff': 1.7359999999952413e-06}, {'diff': 1.7360000000021802e-06}, {'diff': 1.7079999999961015e-06}, {'diff': 1.7770000000014163e-...</msg>
<status status="PASS" starttime="20201030 15:55:18.906" endtime="20201030 15:55:18.916"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:55:18.924" level="INFO">${OVERHEAD} = {'diff': [1.7220000000026103e-06, 1.7080000000030404e-06, 1.7359999999952413e-06, 1.7360000000021802e-06, 1.7079999999961015e-06, 1.7770000000014163e-06, 1.7360000000021802e-06, 1.723000000002084e-06,...</msg>
<status status="PASS" starttime="20201030 15:55:18.917" endtime="20201030 15:55:18.925"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:18.934" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:55:18.932" endtime="20201030 15:55:18.935"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:18.940" level="INFO">VALUE: [1.7220000000026103e-06, 1.7080000000030404e-06, 1.7359999999952413e-06, 1.7360000000021802e-06, 1.7079999999961015e-06, 1.7770000000014163e-06, 1.7360000000021802e-06, 1.723000000002084e-06, 1.7359999999952413e-06, 1.6950000000029442e-06, 1.7220000000026103e-06, 1.7220000000026103e-06, 1.7219999999956714e-06, 1.7219999999956714e-06, 1.7219999999956714e-06, 1.7219999999956714e-06, 1.7359999999952413e-06, 1.6949999999960053e-06, 1.7220000000026103e-06, 1.7220000000026103e-06, 1.7360000000021802e-06, 1.7220000000026103e-06, 1.7360000000021802e-06, 1.709000000002514e-06, 1.723000000002084e-06, 1.7220000000026103e-06, 1.7219999999956714e-06, 1.7079999999961015e-06, 1.7360000000021802e-06, 1.7220000000026103e-06, 1.723000000002084e-06, 1.77800000000089e-06, 1.7219999999956714e-06, 1.7220000000026103e-06, 1.7219999999956714e-06, 1.723000000002084e-06, 1.723000000002084e-06, 1.723000000002084e-06, 1.723000000002084e-06, 1.7219999999956714e-06, 1.7220000000026103e-06, 1.7220000000026103e-06, 1.7360000000021802e-06, 1.7079999999961015e-06, 1.6810000000033742e-06, 1.7220000000026103e-06, 1.7360000000021802e-06, 1.723000000002084e-06, 1.7219999999956714e-06, 1.736999999994715e-06]</msg>
<status status="PASS" starttime="20201030 15:55:18.937" endtime="20201030 15:55:18.942"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.926" endtime="20201030 15:55:18.943"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:18.954" endtime="20201030 15:55:18.976"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.948" endtime="20201030 15:55:18.977"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.946" endtime="20201030 15:55:18.978"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.444" endtime="20201030 15:55:18.979"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.443" endtime="20201030 15:55:18.979"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:19.000" endtime="20201030 15:55:19.015"></status>
</kw>
<msg timestamp="20201030 15:55:19.016" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:18.996" endtime="20201030 15:55:19.016"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:19.022" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:19.018" endtime="20201030 15:55:19.023"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:19.024" endtime="20201030 15:55:19.028"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.989" endtime="20201030 15:55:19.030"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.984" endtime="20201030 15:55:19.031"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:19.048" endtime="20201030 15:55:19.382"></status>
</kw>
<msg timestamp="20201030 15:55:19.389" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037462111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037463833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:19.044" endtime="20201030 15:55:19.390"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:19.408" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037462111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037463833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:19.391" endtime="20201030 15:55:19.409"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:19.410" endtime="20201030 15:55:19.414"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.037" endtime="20201030 15:55:19.416"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.032" endtime="20201030 15:55:19.417"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:19.428" level="INFO">${RESULT} = [{'diff': 1.7220000000026103e-06}, {'diff': 1.7220000000026103e-06}, {'diff': 1.7079999999961015e-06}, {'diff': 1.7220000000026103e-06}, {'diff': 1.6950000000029442e-06}, {'diff': 1.7080000000030404e-...</msg>
<status status="PASS" starttime="20201030 15:55:19.419" endtime="20201030 15:55:19.428"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:55:19.438" level="INFO">${OVERHEAD} = {'diff': [1.7220000000026103e-06, 1.7220000000026103e-06, 1.7079999999961015e-06, 1.7220000000026103e-06, 1.6950000000029442e-06, 1.7080000000030404e-06, 1.7360000000021802e-06, 1.7360000000021802e-06...</msg>
<status status="PASS" starttime="20201030 15:55:19.430" endtime="20201030 15:55:19.439"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:19.449" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:55:19.446" endtime="20201030 15:55:19.449"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:19.454" level="INFO">VALUE: [1.7220000000026103e-06, 1.7220000000026103e-06, 1.7079999999961015e-06, 1.7220000000026103e-06, 1.6950000000029442e-06, 1.7080000000030404e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7080000000030404e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.6949999999960053e-06, 1.7500000000017502e-06, 1.77800000000089e-06, 1.7080000000030404e-06, 1.7219999999956714e-06, 1.7360000000021802e-06, 1.723000000002084e-06, 1.7360000000021802e-06, 1.6809999999964353e-06, 1.7370000000016539e-06, 1.77800000000089e-06, 1.7220000000026103e-06, 1.6529999999972955e-06, 1.7220000000026103e-06, 1.6950000000029442e-06, 1.7920000000004599e-06, 1.7220000000026103e-06, 1.6810000000033742e-06, 1.777999999993951e-06, 1.7360000000021802e-06, 1.7920000000004599e-06, 1.7220000000026103e-06, 1.7219999999956714e-06, 1.7359999999952413e-06, 1.7220000000026103e-06, 1.7360000000021802e-06, 1.7220000000026103e-06, 1.6530000000042344e-06, 1.709000000002514e-06, 1.7080000000030404e-06, 1.7220000000026103e-06, 1.7080000000030404e-06, 1.7080000000030404e-06, 1.7219999999956714e-06, 1.7080000000030404e-06, 1.7220000000026103e-06, 1.7220000000026103e-06, 1.7219999999956714e-06, 1.77800000000089e-06]</msg>
<status status="PASS" starttime="20201030 15:55:19.451" endtime="20201030 15:55:19.456"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.440" endtime="20201030 15:55:19.457"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:19.467" endtime="20201030 15:55:19.489"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.462" endtime="20201030 15:55:19.490"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.460" endtime="20201030 15:55:19.491"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.981" endtime="20201030 15:55:19.492"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.980" endtime="20201030 15:55:19.492"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:19.512" endtime="20201030 15:55:19.527"></status>
</kw>
<msg timestamp="20201030 15:55:19.528" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:19.509" endtime="20201030 15:55:19.528"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:19.534" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:19.530" endtime="20201030 15:55:19.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:19.536" endtime="20201030 15:55:19.540"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.502" endtime="20201030 15:55:19.542"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.497" endtime="20201030 15:55:19.543"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:19.560" endtime="20201030 15:55:19.890"></status>
</kw>
<msg timestamp="20201030 15:55:19.897" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037246153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037247806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:19.557" endtime="20201030 15:55:19.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:19.916" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037246153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037247806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:19.900" endtime="20201030 15:55:19.917"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:19.918" endtime="20201030 15:55:19.922"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.549" endtime="20201030 15:55:19.924"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.544" endtime="20201030 15:55:19.925"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:19.936" level="INFO">${RESULT} = [{'diff': 1.6530000000042344e-06}, {'diff': 1.7220000000026103e-06}, {'diff': 1.7079999999961015e-06}, {'diff': 1.7360000000021802e-06}, {'diff': 1.722999999995145e-06}, {'diff': 1.6810000000033742e-0...</msg>
<status status="PASS" starttime="20201030 15:55:19.927" endtime="20201030 15:55:19.936"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:55:19.947" level="INFO">${OVERHEAD} = {'diff': [1.6530000000042344e-06, 1.7220000000026103e-06, 1.7079999999961015e-06, 1.7360000000021802e-06, 1.722999999995145e-06, 1.6810000000033742e-06, 1.7220000000026103e-06, 1.6669999999968654e-06,...</msg>
<status status="PASS" starttime="20201030 15:55:19.938" endtime="20201030 15:55:19.948"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:19.957" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:55:19.955" endtime="20201030 15:55:19.958"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:19.963" level="INFO">VALUE: [1.6530000000042344e-06, 1.7220000000026103e-06, 1.7079999999961015e-06, 1.7360000000021802e-06, 1.722999999995145e-06, 1.6810000000033742e-06, 1.7220000000026103e-06, 1.6669999999968654e-06, 1.7220000000026103e-06, 1.7080000000030404e-06, 1.7080000000030404e-06, 1.7360000000021802e-06, 1.77800000000089e-06, 1.7220000000026103e-06, 1.7360000000021802e-06, 1.6950000000029442e-06, 1.7220000000026103e-06, 1.77800000000089e-06, 1.7220000000026103e-06, 1.709000000002514e-06, 1.7219999999956714e-06, 1.6669999999968654e-06, 1.7219999999956714e-06, 1.7219999999956714e-06, 1.7360000000021802e-06, 1.7079999999961015e-06, 1.722999999995145e-06, 1.7220000000026103e-06, 1.7770000000014163e-06, 1.722999999995145e-06, 1.7219999999956714e-06, 1.7220000000026103e-06, 1.7219999999956714e-06, 1.7089999999955752e-06, 1.6670000000038043e-06, 1.7499999999948113e-06, 1.77800000000089e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7219999999956714e-06, 1.7080000000030404e-06, 1.709000000002514e-06, 1.6949999999960053e-06, 1.7360000000021802e-06, 1.7080000000030404e-06, 1.7220000000026103e-06, 1.6810000000033742e-06, 1.6939999999965316e-06, 1.7219999999956714e-06, 1.7220000000026103e-06]</msg>
<status status="PASS" starttime="20201030 15:55:19.960" endtime="20201030 15:55:19.964"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.949" endtime="20201030 15:55:19.966"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:19.975" endtime="20201030 15:55:19.997"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.971" endtime="20201030 15:55:19.999"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.969" endtime="20201030 15:55:19.999"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.494" endtime="20201030 15:55:20.000"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.493" endtime="20201030 15:55:20.001"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:20.021" endtime="20201030 15:55:20.035"></status>
</kw>
<msg timestamp="20201030 15:55:20.037" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:20.018" endtime="20201030 15:55:20.037"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:20.043" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:20.039" endtime="20201030 15:55:20.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:20.045" endtime="20201030 15:55:20.049"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.010" endtime="20201030 15:55:20.050"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.006" endtime="20201030 15:55:20.052"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:20.069" endtime="20201030 15:55:20.462"></status>
</kw>
<msg timestamp="20201030 15:55:20.470" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037209194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037210903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:20.065" endtime="20201030 15:55:20.470"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:20.488" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037209194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037210903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:20.472" endtime="20201030 15:55:20.489"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:20.491" endtime="20201030 15:55:20.495"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.058" endtime="20201030 15:55:20.497"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.053" endtime="20201030 15:55:20.498"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:20.508" level="INFO">${RESULT} = [{'diff': 1.7089999999955752e-06}, {'diff': 1.7089999999955752e-06}, {'diff': 1.7220000000026103e-06}, {'diff': 1.7079999999961015e-06}, {'diff': 1.7220000000026103e-06}, {'diff': 1.7079999999961015e-...</msg>
<status status="PASS" starttime="20201030 15:55:20.500" endtime="20201030 15:55:20.509"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:55:20.518" level="INFO">${OVERHEAD} = {'diff': [1.7089999999955752e-06, 1.7089999999955752e-06, 1.7220000000026103e-06, 1.7079999999961015e-06, 1.7220000000026103e-06, 1.7079999999961015e-06, 1.7359999999952413e-06, 1.77800000000089e-06, ...</msg>
<status status="PASS" starttime="20201030 15:55:20.510" endtime="20201030 15:55:20.518"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:20.528" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:55:20.526" endtime="20201030 15:55:20.529"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:20.533" level="INFO">VALUE: [1.7089999999955752e-06, 1.7089999999955752e-06, 1.7220000000026103e-06, 1.7079999999961015e-06, 1.7220000000026103e-06, 1.7079999999961015e-06, 1.7359999999952413e-06, 1.77800000000089e-06, 1.7359999999952413e-06, 1.7360000000021802e-06, 1.7219999999956714e-06, 1.7360000000021802e-06, 1.7080000000030404e-06, 1.7219999999956714e-06, 1.7079999999961015e-06, 1.6670000000038043e-06, 1.7080000000030404e-06, 1.7219999999956714e-06, 1.7080000000030404e-06, 1.7220000000026103e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7500000000017502e-06, 1.7220000000026103e-06, 1.7770000000014163e-06, 1.7079999999961015e-06, 1.7079999999961015e-06, 1.7219999999956714e-06, 1.7220000000026103e-06, 1.7909999999940474e-06, 1.77800000000089e-06, 1.7220000000026103e-06, 1.7220000000026103e-06, 1.7220000000026103e-06, 1.7089999999955752e-06, 1.7220000000026103e-06, 1.7360000000021802e-06, 1.7220000000026103e-06, 1.7219999999956714e-06, 1.7219999999956714e-06, 1.7080000000030404e-06, 1.7219999999956714e-06, 1.7220000000026103e-06, 1.7079999999961015e-06, 1.7220000000026103e-06, 1.7219999999956714e-06, 1.7080000000030404e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7220000000026103e-06]</msg>
<status status="PASS" starttime="20201030 15:55:20.530" endtime="20201030 15:55:20.535"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.520" endtime="20201030 15:55:20.537"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:20.546" endtime="20201030 15:55:20.568"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.542" endtime="20201030 15:55:20.570"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.539" endtime="20201030 15:55:20.570"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.002" endtime="20201030 15:55:20.571"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.001" endtime="20201030 15:55:20.571"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:20.592" endtime="20201030 15:55:20.608"></status>
</kw>
<msg timestamp="20201030 15:55:20.609" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:20.588" endtime="20201030 15:55:20.610"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:20.616" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:20.611" endtime="20201030 15:55:20.616"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:20.618" endtime="20201030 15:55:20.622"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.581" endtime="20201030 15:55:20.623"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.576" endtime="20201030 15:55:20.625"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:20.641" endtime="20201030 15:55:20.976"></status>
</kw>
<msg timestamp="20201030 15:55:20.983" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038913208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038914931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:20.638" endtime="20201030 15:55:20.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:21.002" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038913208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038914931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:20.985" endtime="20201030 15:55:21.003"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:21.004" endtime="20201030 15:55:21.008"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.631" endtime="20201030 15:55:21.010"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.626" endtime="20201030 15:55:21.011"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:21.021" level="INFO">${RESULT} = [{'diff': 1.723000000002084e-06}, {'diff': 1.7220000000026103e-06}, {'diff': 1.791999999993521e-06}, {'diff': 1.7220000000026103e-06}, {'diff': 1.7219999999956714e-06}, {'diff': 1.7219999999956714e-06...</msg>
<status status="PASS" starttime="20201030 15:55:21.013" endtime="20201030 15:55:21.022"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:55:21.031" level="INFO">${OVERHEAD} = {'diff': [1.723000000002084e-06, 1.7220000000026103e-06, 1.791999999993521e-06, 1.7220000000026103e-06, 1.7219999999956714e-06, 1.7219999999956714e-06, 1.7359999999952413e-06, 1.7079999999961015e-06, ...</msg>
<status status="PASS" starttime="20201030 15:55:21.024" endtime="20201030 15:55:21.032"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:21.043" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:55:21.040" endtime="20201030 15:55:21.044"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:21.050" level="INFO">VALUE: [1.723000000002084e-06, 1.7220000000026103e-06, 1.791999999993521e-06, 1.7220000000026103e-06, 1.7219999999956714e-06, 1.7219999999956714e-06, 1.7359999999952413e-06, 1.7079999999961015e-06, 1.7359999999952413e-06, 1.723000000002084e-06, 1.7220000000026103e-06, 1.7220000000026103e-06, 1.77800000000089e-06, 1.7219999999956714e-06, 1.723000000002084e-06, 1.6669999999968654e-06, 1.7220000000026103e-06, 1.723000000002084e-06, 1.6670000000038043e-06, 1.7220000000026103e-06, 1.791999999993521e-06, 1.7220000000026103e-06, 1.7079999999961015e-06, 1.777999999993951e-06, 1.7080000000030404e-06, 1.7089999999955752e-06, 1.7220000000026103e-06, 1.7219999999956714e-06, 1.7220000000026103e-06, 1.77800000000089e-06, 1.7220000000026103e-06, 1.709000000002514e-06, 1.7220000000026103e-06, 1.7079999999961015e-06, 1.7079999999961015e-06, 1.709000000002514e-06, 1.7220000000026103e-06, 1.7220000000026103e-06, 1.77800000000089e-06, 1.723000000002084e-06, 1.723000000002084e-06, 1.7219999999956714e-06, 1.7089999999955752e-06, 1.709000000002514e-06, 1.7079999999961015e-06, 1.723000000002084e-06, 1.7219999999956714e-06, 1.77800000000089e-06, 1.7220000000026103e-06, 1.7220000000026103e-06]</msg>
<status status="PASS" starttime="20201030 15:55:21.046" endtime="20201030 15:55:21.052"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.033" endtime="20201030 15:55:21.053"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:21.064" endtime="20201030 15:55:21.086"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.058" endtime="20201030 15:55:21.088"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.056" endtime="20201030 15:55:21.088"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.573" endtime="20201030 15:55:21.089"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.572" endtime="20201030 15:55:21.089"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:21.110" endtime="20201030 15:55:21.125"></status>
</kw>
<msg timestamp="20201030 15:55:21.126" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:21.107" endtime="20201030 15:55:21.127"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:21.132" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:21.128" endtime="20201030 15:55:21.133"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:21.135" endtime="20201030 15:55:21.138"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.099" endtime="20201030 15:55:21.140"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.094" endtime="20201030 15:55:21.141"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:21.158" endtime="20201030 15:55:21.497"></status>
</kw>
<msg timestamp="20201030 15:55:21.504" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037725458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037727236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:21.155" endtime="20201030 15:55:21.504"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:21.522" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037725458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037727236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:21.506" endtime="20201030 15:55:21.523"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:21.525" endtime="20201030 15:55:21.529"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.148" endtime="20201030 15:55:21.530"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.143" endtime="20201030 15:55:21.532"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:21.542" level="INFO">${RESULT} = [{'diff': 1.777999999993951e-06}, {'diff': 1.7080000000030404e-06}, {'diff': 1.722999999995145e-06}, {'diff': 1.7220000000026103e-06}, {'diff': 1.7080000000030404e-06}, {'diff': 1.7220000000026103e-06...</msg>
<status status="PASS" starttime="20201030 15:55:21.533" endtime="20201030 15:55:21.543"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:55:21.553" level="INFO">${OVERHEAD} = {'diff': [1.777999999993951e-06, 1.7080000000030404e-06, 1.722999999995145e-06, 1.7220000000026103e-06, 1.7080000000030404e-06, 1.7220000000026103e-06, 1.7500000000017502e-06, 1.7220000000026103e-06, ...</msg>
<status status="PASS" starttime="20201030 15:55:21.544" endtime="20201030 15:55:21.554"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:21.564" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:55:21.561" endtime="20201030 15:55:21.564"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:21.569" level="INFO">VALUE: [1.777999999993951e-06, 1.7080000000030404e-06, 1.722999999995145e-06, 1.7220000000026103e-06, 1.7080000000030404e-06, 1.7220000000026103e-06, 1.7500000000017502e-06, 1.7220000000026103e-06, 1.7220000000026103e-06, 1.6670000000038043e-06, 1.723000000002084e-06, 1.7360000000021802e-06, 1.77800000000089e-06, 1.6669999999968654e-06, 1.7220000000026103e-06, 1.7080000000030404e-06, 1.7080000000030404e-06, 1.722999999995145e-06, 1.7770000000014163e-06, 1.7360000000021802e-06, 1.722999999995145e-06, 1.6669999999968654e-06, 1.6809999999964353e-06, 1.6809999999964353e-06, 1.7220000000026103e-06, 1.7219999999956714e-06, 1.723000000002084e-06, 1.7220000000026103e-06, 1.77800000000089e-06, 1.7219999999956714e-06, 1.7360000000021802e-06, 1.7219999999956714e-06, 1.7079999999961015e-06, 1.7080000000030404e-06, 1.7220000000026103e-06, 1.722999999995145e-06, 1.7360000000021802e-06, 1.7359999999952413e-06, 1.7220000000026103e-06, 1.7079999999961015e-06, 1.7079999999961015e-06, 1.7500000000017502e-06, 1.7220000000026103e-06, 1.723000000002084e-06, 1.6940000000034705e-06, 1.7359999999952413e-06, 1.722999999995145e-06, 1.723000000002084e-06, 1.7360000000021802e-06, 1.7220000000026103e-06]</msg>
<status status="PASS" starttime="20201030 15:55:21.566" endtime="20201030 15:55:21.571"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.555" endtime="20201030 15:55:21.572"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:21.582" endtime="20201030 15:55:21.603"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.577" endtime="20201030 15:55:21.605"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.575" endtime="20201030 15:55:21.606"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.091" endtime="20201030 15:55:21.606"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.090" endtime="20201030 15:55:21.607"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:10.671" endtime="20201030 15:55:21.607"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:55:10.543" endtime="20201030 15:55:21.609" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:21.626" endtime="20201030 15:55:21.647"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.622" endtime="20201030 15:55:21.649"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:21.682" endtime="20201030 15:55:21.700"></status>
</kw>
<msg timestamp="20201030 15:55:21.702" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:21.679" endtime="20201030 15:55:21.702"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:21.708" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:21.704" endtime="20201030 15:55:21.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:55:21.715" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:55:21.711" endtime="20201030 15:55:21.715"></status>
</kw>
<status status="FAIL" starttime="20201030 15:55:21.672" endtime="20201030 15:55:21.717"></status>
</kw>
<status status="FAIL" starttime="20201030 15:55:21.665" endtime="20201030 15:55:21.719"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.663" endtime="20201030 15:55:21.720"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:55:21.727" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:55:21.726" endtime="20201030 15:55:21.730"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.721" endtime="20201030 15:55:21.730"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.661" endtime="20201030 15:55:21.731"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.659" endtime="20201030 15:55:21.731"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:21.733" endtime="20201030 15:55:21.736"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.655" endtime="20201030 15:55:21.738"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.650" endtime="20201030 15:55:21.739"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.619" endtime="20201030 15:55:21.740"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:21.762" endtime="20201030 15:55:21.785"></status>
</kw>
<msg timestamp="20201030 15:55:21.787" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:21.759" endtime="20201030 15:55:21.787"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:21.793" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:21.789" endtime="20201030 15:55:21.794"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:21.796" endtime="20201030 15:55:21.800"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.752" endtime="20201030 15:55:21.801"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.746" endtime="20201030 15:55:21.803"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:21.807" endtime="20201030 15:55:21.812"></status>
</kw>
<msg timestamp="20201030 15:55:21.813" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201030 15:55:21.804" endtime="20201030 15:55:21.813"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:21.823" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 15:55:21.821" endtime="20201030 15:55:21.824"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:21.827" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 15:55:21.825" endtime="20201030 15:55:21.828"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.815" endtime="20201030 15:55:21.830"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:21.839" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 15:55:21.837" endtime="20201030 15:55:21.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:21.844" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 15:55:21.842" endtime="20201030 15:55:21.845"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.831" endtime="20201030 15:55:21.846"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:21.863" endtime="20201030 15:55:22.214"></status>
</kw>
<msg timestamp="20201030 15:55:22.221" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.129881903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.129887472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:21.859" endtime="20201030 15:55:22.221"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:22.239" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.129881903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.129887472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:22.223" endtime="20201030 15:55:22.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:22.242" endtime="20201030 15:55:22.246"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.852" endtime="20201030 15:55:22.247"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.847" endtime="20201030 15:55:22.249"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:22.259" level="INFO">${RESULT} = [{'diff': 5.569000000010815e-06}, {'diff': 6.583000000004446e-06}, {'diff': 6.56899999998406e-06}, {'diff': 6.611000000017464e-06}, {'diff': 6.639000000002726e-06}, {'diff': 6.583000000004446e-06}, {'...</msg>
<status status="PASS" starttime="20201030 15:55:22.250" endtime="20201030 15:55:22.260"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:55:22.274" level="INFO">${OVERHEAD} = {'diff': [5.569000000010815e-06, 6.583000000004446e-06, 6.56899999998406e-06, 6.611000000017464e-06, 6.639000000002726e-06, 6.583000000004446e-06, 6.56899999998406e-06, 6.485999999999992e-06, 6.568999...</msg>
<status status="PASS" starttime="20201030 15:55:22.261" endtime="20201030 15:55:22.275"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:22.285" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201030 15:55:22.283" endtime="20201030 15:55:22.286"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:22.291" level="INFO">VALUE: [5.569000000010815e-06, 6.583000000004446e-06, 6.56899999998406e-06, 6.611000000017464e-06, 6.639000000002726e-06, 6.583000000004446e-06, 6.56899999998406e-06, 6.485999999999992e-06, 6.56899999998406e-06, 6.569000000011815e-06, 6.5699999999835335e-06, 6.555000000019184e-06, 6.56899999998406e-06, 6.570000000011289e-06, 6.556000000018658e-06, 6.5839999999761645e-06, 6.583000000004446e-06, 6.582999999976691e-06, 6.5699999999835335e-06, 6.554999999991429e-06, 6.6109999999897084e-06, 6.569000000011815e-06, 6.5969999999970774e-06, 6.554999999991429e-06, 6.570000000011289e-06, 6.556000000018658e-06, 6.5559999999909024e-06, 6.6249999999823395e-06, 6.556000000018658e-06, 6.569000000011815e-06, 6.570000000011289e-06, 6.555000000019184e-06, 6.570000000011289e-06, 6.569000000011815e-06, 6.570000000011289e-06, 6.583000000004446e-06, 6.597999999996551e-06, 6.56899999998406e-06, 6.570000000011289e-06, 6.639000000002726e-06, 6.5559999999909024e-06, 6.583000000004446e-06, 6.6249999999823395e-06, 6.5559999999909024e-06, 6.570000000011289e-06, 6.6109999999897084e-06, 6.56899999998406e-06, 6.554999999991429e-06, 6.582999999976691e-06, 6.583000000004446e-06]</msg>
<status status="PASS" starttime="20201030 15:55:22.288" endtime="20201030 15:55:22.292"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.276" endtime="20201030 15:55:22.294"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:22.303" endtime="20201030 15:55:22.325"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.299" endtime="20201030 15:55:22.327"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.297" endtime="20201030 15:55:22.327"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.741" endtime="20201030 15:55:22.328"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:55:21.613" endtime="20201030 15:55:22.330" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:22.347" endtime="20201030 15:55:22.368"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.343" endtime="20201030 15:55:22.370"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:22.413" endtime="20201030 15:55:22.434"></status>
</kw>
<msg timestamp="20201030 15:55:22.435" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:22.407" endtime="20201030 15:55:22.436"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:22.442" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:22.438" endtime="20201030 15:55:22.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:55:22.448" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:55:22.444" endtime="20201030 15:55:22.449"></status>
</kw>
<status status="FAIL" starttime="20201030 15:55:22.398" endtime="20201030 15:55:22.451"></status>
</kw>
<status status="FAIL" starttime="20201030 15:55:22.390" endtime="20201030 15:55:22.453"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.386" endtime="20201030 15:55:22.453"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:55:22.461" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:55:22.460" endtime="20201030 15:55:22.462"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.455" endtime="20201030 15:55:22.463"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.383" endtime="20201030 15:55:22.463"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.381" endtime="20201030 15:55:22.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:22.465" endtime="20201030 15:55:22.469"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.376" endtime="20201030 15:55:22.470"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.372" endtime="20201030 15:55:22.472"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.340" endtime="20201030 15:55:22.472"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:22.495" endtime="20201030 15:55:22.548"></status>
</kw>
<msg timestamp="20201030 15:55:22.549" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:22.491" endtime="20201030 15:55:22.549"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:22.555" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:22.551" endtime="20201030 15:55:22.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:22.558" endtime="20201030 15:55:22.562"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.484" endtime="20201030 15:55:22.564"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.478" endtime="20201030 15:55:22.565"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:22.570" endtime="20201030 15:55:22.574"></status>
</kw>
<msg timestamp="20201030 15:55:22.576" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201030 15:55:22.567" endtime="20201030 15:55:22.576"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:22.586" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 15:55:22.583" endtime="20201030 15:55:22.586"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:22.590" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 15:55:22.588" endtime="20201030 15:55:22.591"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.577" endtime="20201030 15:55:22.592"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:22.602" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 15:55:22.600" endtime="20201030 15:55:22.603"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:22.607" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 15:55:22.604" endtime="20201030 15:55:22.607"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.594" endtime="20201030 15:55:22.609"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:22.626" endtime="20201030 15:55:22.976"></status>
</kw>
<msg timestamp="20201030 15:55:22.984" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.141648597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.141661556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:22.622" endtime="20201030 15:55:22.984"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:23.002" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.141648597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.141661556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:22.986" endtime="20201030 15:55:23.003"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:23.005" endtime="20201030 15:55:23.009"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.615" endtime="20201030 15:55:23.010"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.610" endtime="20201030 15:55:23.012"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:23.022" level="INFO">${RESULT} = [{'diff': 1.2959000000006826e-05}, {'diff': 1.987500000000253e-05}, {'diff': 1.9846999999989512e-05}, {'diff': 1.9847000000017267e-05}, {'diff': 1.9846999999989512e-05}, {'diff': 1.9860999999982143e-0...</msg>
<status status="PASS" starttime="20201030 15:55:23.013" endtime="20201030 15:55:23.022"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:55:23.032" level="INFO">${OVERHEAD} = {'diff': [1.2959000000006826e-05, 1.987500000000253e-05, 1.9846999999989512e-05, 1.9847000000017267e-05, 1.9846999999989512e-05, 1.9860999999982143e-05, 1.987500000000253e-05, 1.9847000000017267e-05, ...</msg>
<status status="PASS" starttime="20201030 15:55:23.024" endtime="20201030 15:55:23.032"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:23.043" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201030 15:55:23.040" endtime="20201030 15:55:23.043"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:23.048" level="INFO">VALUE: [1.2959000000006826e-05, 1.987500000000253e-05, 1.9846999999989512e-05, 1.9847000000017267e-05, 1.9846999999989512e-05, 1.9860999999982143e-05, 1.987500000000253e-05, 1.9847000000017267e-05, 1.9889000000022916e-05, 1.983299999999688e-05, 1.9889000000022916e-05, 1.9860999999982143e-05, 1.98610000000099e-05, 1.9860999999982143e-05, 1.9916000000008705e-05, 1.9862000000009372e-05, 1.9847999999988986e-05, 1.9862000000009372e-05, 1.987500000000253e-05, 1.9847000000017267e-05, 1.9901999999988318e-05, 1.9846999999989512e-05, 1.987500000000253e-05, 1.9916999999980423e-05, 1.9846999999989512e-05, 1.9930000000001336e-05, 1.987500000000253e-05, 1.983299999999688e-05, 1.98610000000099e-05, 1.9874999999974774e-05, 1.9846999999989512e-05, 1.987500000000253e-05, 1.9860999999982143e-05, 1.993100000000081e-05, 1.9847000000017267e-05, 1.987500000000253e-05, 1.9777999999998075e-05, 1.9846999999989512e-05, 1.9861999999981617e-05, 1.9847000000017267e-05, 1.9860999999982143e-05, 1.9862000000009372e-05, 1.987500000000253e-05, 1.987500000000253e-05, 1.987500000000253e-05, 1.987500000000253e-05, 1.9847999999988986e-05, 1.987500000000253e-05, 1.983299999999688e-05, 1.9862000000009372e-05]</msg>
<status status="PASS" starttime="20201030 15:55:23.045" endtime="20201030 15:55:23.050"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.033" endtime="20201030 15:55:23.051"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:23.061" endtime="20201030 15:55:23.084"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.057" endtime="20201030 15:55:23.086"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.054" endtime="20201030 15:55:23.087"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.473" endtime="20201030 15:55:23.088"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:55:22.334" endtime="20201030 15:55:23.090" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:23.113" endtime="20201030 15:55:23.136"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.107" endtime="20201030 15:55:23.137"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:23.173" endtime="20201030 15:55:23.191"></status>
</kw>
<msg timestamp="20201030 15:55:23.192" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:23.169" endtime="20201030 15:55:23.193"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:23.199" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:23.194" endtime="20201030 15:55:23.199"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:55:23.205" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:55:23.201" endtime="20201030 15:55:23.206"></status>
</kw>
<status status="FAIL" starttime="20201030 15:55:23.162" endtime="20201030 15:55:23.208"></status>
</kw>
<status status="FAIL" starttime="20201030 15:55:23.155" endtime="20201030 15:55:23.209"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.153" endtime="20201030 15:55:23.210"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:55:23.218" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:55:23.217" endtime="20201030 15:55:23.219"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.212" endtime="20201030 15:55:23.219"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.151" endtime="20201030 15:55:23.220"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.147" endtime="20201030 15:55:23.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:23.222" endtime="20201030 15:55:23.225"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.143" endtime="20201030 15:55:23.227"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.139" endtime="20201030 15:55:23.228"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.103" endtime="20201030 15:55:23.229"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:23.251" endtime="20201030 15:55:23.373"></status>
</kw>
<msg timestamp="20201030 15:55:23.374" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:23.248" endtime="20201030 15:55:23.375"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:23.382" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:23.377" endtime="20201030 15:55:23.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:23.386" endtime="20201030 15:55:23.392"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.241" endtime="20201030 15:55:23.394"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.235" endtime="20201030 15:55:23.396"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:23.401" endtime="20201030 15:55:23.408"></status>
</kw>
<msg timestamp="20201030 15:55:23.409" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201030 15:55:23.398" endtime="20201030 15:55:23.410"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:23.422" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 15:55:23.419" endtime="20201030 15:55:23.423"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:23.428" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 15:55:23.425" endtime="20201030 15:55:23.429"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.411" endtime="20201030 15:55:23.431"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:23.441" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 15:55:23.438" endtime="20201030 15:55:23.443"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:23.447" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 15:55:23.445" endtime="20201030 15:55:23.448"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.432" endtime="20201030 15:55:23.450"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:23.467" endtime="20201030 15:55:23.816"></status>
</kw>
<msg timestamp="20201030 15:55:23.823" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.131144875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.131167556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:23.463" endtime="20201030 15:55:23.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:23.841" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.131144875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.131167556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:23.826" endtime="20201030 15:55:23.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:23.844" endtime="20201030 15:55:23.848"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.455" endtime="20201030 15:55:23.849"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.451" endtime="20201030 15:55:23.851"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:23.861" level="INFO">${RESULT} = [{'diff': 2.268099999999662e-05}, {'diff': 3.573600000000843e-05}, {'diff': 3.5708999999994884e-05}, {'diff': 3.569500000000225e-05}, {'diff': 3.5708999999994884e-05}, {'diff': 3.569500000000225e-05},...</msg>
<status status="PASS" starttime="20201030 15:55:23.852" endtime="20201030 15:55:23.862"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:55:23.871" level="INFO">${OVERHEAD} = {'diff': [2.268099999999662e-05, 3.573600000000843e-05, 3.5708999999994884e-05, 3.569500000000225e-05, 3.5708999999994884e-05, 3.569500000000225e-05, 3.5693999999975023e-05, 3.565199999999713e-05, 3.5...</msg>
<status status="PASS" starttime="20201030 15:55:23.863" endtime="20201030 15:55:23.871"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:23.882" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201030 15:55:23.879" endtime="20201030 15:55:23.882"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:23.887" level="INFO">VALUE: [2.268099999999662e-05, 3.573600000000843e-05, 3.5708999999994884e-05, 3.569500000000225e-05, 3.5708999999994884e-05, 3.569500000000225e-05, 3.5693999999975023e-05, 3.565199999999713e-05, 3.565199999999713e-05, 3.570799999999541e-05, 3.569400000000278e-05, 3.572199999998804e-05, 3.5804999999999865e-05, 3.570799999999541e-05, 3.570799999999541e-05, 3.573600000000843e-05, 3.570799999999541e-05, 3.5791000000007234e-05, 3.572199999998804e-05, 3.566700000001699e-05, 3.570799999999541e-05, 3.570799999999541e-05, 3.573600000000843e-05, 3.572300000001527e-05, 3.572199999998804e-05, 3.5722999999987515e-05, 3.570799999999541e-05, 3.570799999999541e-05, 3.570799999999541e-05, 3.5708999999994884e-05, 3.569500000000225e-05, 3.572199999998804e-05, 3.569500000000225e-05, 3.569500000000225e-05, 3.570799999999541e-05, 3.570799999999541e-05, 3.575000000000106e-05, 3.57220000000158e-05, 3.57220000000158e-05, 3.5708999999994884e-05, 3.570799999999541e-05, 3.573600000000843e-05, 3.563900000000397e-05, 3.572199999998804e-05, 3.572199999998804e-05, 3.5708999999994884e-05, 3.566599999998976e-05, 3.569400000000278e-05, 3.57220000000158e-05, 3.5708999999994884e-05]</msg>
<status status="PASS" starttime="20201030 15:55:23.884" endtime="20201030 15:55:23.889"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.872" endtime="20201030 15:55:23.890"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:23.901" endtime="20201030 15:55:23.923"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.895" endtime="20201030 15:55:23.924"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.893" endtime="20201030 15:55:23.925"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.230" endtime="20201030 15:55:23.926"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:55:23.095" endtime="20201030 15:55:23.927" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:23.944" endtime="20201030 15:55:23.966"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.941" endtime="20201030 15:55:23.968"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:24.002" endtime="20201030 15:55:24.021"></status>
</kw>
<msg timestamp="20201030 15:55:24.022" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:23.998" endtime="20201030 15:55:24.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:24.029" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:24.024" endtime="20201030 15:55:24.029"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:55:24.035" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:55:24.031" endtime="20201030 15:55:24.036"></status>
</kw>
<status status="FAIL" starttime="20201030 15:55:23.991" endtime="20201030 15:55:24.038"></status>
</kw>
<status status="FAIL" starttime="20201030 15:55:23.984" endtime="20201030 15:55:24.039"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.981" endtime="20201030 15:55:24.040"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:55:24.048" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:55:24.046" endtime="20201030 15:55:24.049"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.042" endtime="20201030 15:55:24.049"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.979" endtime="20201030 15:55:24.051"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.978" endtime="20201030 15:55:24.051"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:24.053" endtime="20201030 15:55:24.058"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.973" endtime="20201030 15:55:24.060"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.969" endtime="20201030 15:55:24.062"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.938" endtime="20201030 15:55:24.063"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:24.087" endtime="20201030 15:55:24.111"></status>
</kw>
<msg timestamp="20201030 15:55:24.112" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:24.082" endtime="20201030 15:55:24.113"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:24.119" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:24.115" endtime="20201030 15:55:24.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:24.122" endtime="20201030 15:55:24.126"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.074" endtime="20201030 15:55:24.127"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.069" endtime="20201030 15:55:24.129"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:24.133" endtime="20201030 15:55:24.138"></status>
</kw>
<msg timestamp="20201030 15:55:24.139" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201030 15:55:24.131" endtime="20201030 15:55:24.140"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:24.152" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 15:55:24.150" endtime="20201030 15:55:24.153"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:24.159" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 15:55:24.155" endtime="20201030 15:55:24.160"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.141" endtime="20201030 15:55:24.162"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:24.174" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 15:55:24.171" endtime="20201030 15:55:24.176"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:24.181" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 15:55:24.178" endtime="20201030 15:55:24.182"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.163" endtime="20201030 15:55:24.184"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:24.202" endtime="20201030 15:55:24.596"></status>
</kw>
<msg timestamp="20201030 15:55:24.606" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.135917736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.135923694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:24.199" endtime="20201030 15:55:24.607"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:24.625" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.135917736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.135923694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:24.609" endtime="20201030 15:55:24.626"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:24.628" endtime="20201030 15:55:24.632"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.191" endtime="20201030 15:55:24.633"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.186" endtime="20201030 15:55:24.635"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:24.645" level="INFO">${RESULT} = [{'diff': 5.958000000000352e-06}, {'diff': 5.9589999999998255e-06}, {'diff': 5.9450000000071945e-06}, {'diff': 6.0139999999986316e-06}, {'diff': 5.958000000000352e-06}, {'diff': 5.971999999992983e-06}...</msg>
<status status="PASS" starttime="20201030 15:55:24.637" endtime="20201030 15:55:24.646"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:55:24.656" level="INFO">${OVERHEAD} = {'diff': [5.958000000000352e-06, 5.9589999999998255e-06, 5.9450000000071945e-06, 6.0139999999986316e-06, 5.958000000000352e-06, 5.971999999992983e-06, 5.944999999979439e-06, 5.9589999999998255e-06, 5....</msg>
<status status="PASS" starttime="20201030 15:55:24.647" endtime="20201030 15:55:24.657"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:24.668" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201030 15:55:24.666" endtime="20201030 15:55:24.669"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:24.673" level="INFO">VALUE: [5.958000000000352e-06, 5.9589999999998255e-06, 5.9450000000071945e-06, 6.0139999999986316e-06, 5.958000000000352e-06, 5.971999999992983e-06, 5.944999999979439e-06, 5.9589999999998255e-06, 5.944000000007721e-06, 6.0000000000060005e-06, 6.026999999991789e-06, 5.916999999994177e-06, 5.958000000000352e-06, 6.0000000000060005e-06, 6.0000000000060005e-06, 5.944000000007721e-06, 5.9589999999998255e-06, 5.985999999985614e-06, 5.971999999992983e-06, 5.915999999994703e-06, 5.958000000000352e-06, 5.958000000000352e-06, 5.958000000000352e-06, 5.958000000000352e-06, 5.915999999994703e-06, 5.9589999999998255e-06, 6.0000000000060005e-06, 5.971999999992983e-06, 5.971999999992983e-06, 5.944000000007721e-06, 5.958000000000352e-06, 5.958000000000352e-06, 5.958000000000352e-06, 5.9589999999998255e-06, 5.958000000000352e-06, 5.958000000000352e-06, 5.958000000000352e-06, 6.042000000011649e-06, 5.971999999992983e-06, 5.9589999999998255e-06, 5.971999999992983e-06, 5.957999999972596e-06, 5.9729999999924566e-06, 6.0139999999986316e-06, 5.944000000007721e-06, 5.9310000000145635e-06, 5.9589999999998255e-06, 5.9450000000071945e-06, 5.958000000000352e-06, 5.9729999999924566e-06]</msg>
<status status="PASS" starttime="20201030 15:55:24.670" endtime="20201030 15:55:24.675"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.658" endtime="20201030 15:55:24.676"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:24.686" endtime="20201030 15:55:24.707"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.681" endtime="20201030 15:55:24.709"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.679" endtime="20201030 15:55:24.710"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.064" endtime="20201030 15:55:24.710"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:55:23.932" endtime="20201030 15:55:24.712" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:24.729" endtime="20201030 15:55:24.751"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.726" endtime="20201030 15:55:24.753"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:24.786" endtime="20201030 15:55:24.804"></status>
</kw>
<msg timestamp="20201030 15:55:24.805" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:24.782" endtime="20201030 15:55:24.806"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:24.812" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:24.808" endtime="20201030 15:55:24.813"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:55:24.819" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:55:24.814" endtime="20201030 15:55:24.819"></status>
</kw>
<status status="FAIL" starttime="20201030 15:55:24.775" endtime="20201030 15:55:24.821"></status>
</kw>
<status status="FAIL" starttime="20201030 15:55:24.769" endtime="20201030 15:55:24.823"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.766" endtime="20201030 15:55:24.825"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:55:24.837" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:55:24.836" endtime="20201030 15:55:24.838"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.830" endtime="20201030 15:55:24.839"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.764" endtime="20201030 15:55:24.840"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.763" endtime="20201030 15:55:24.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:24.843" endtime="20201030 15:55:24.847"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.759" endtime="20201030 15:55:24.850"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.754" endtime="20201030 15:55:24.852"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.723" endtime="20201030 15:55:24.853"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:24.884" endtime="20201030 15:55:24.939"></status>
</kw>
<msg timestamp="20201030 15:55:24.940" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:24.881" endtime="20201030 15:55:24.941"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:24.947" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:24.942" endtime="20201030 15:55:24.948"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:24.950" endtime="20201030 15:55:24.954"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.873" endtime="20201030 15:55:24.955"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.863" endtime="20201030 15:55:24.957"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:24.961" endtime="20201030 15:55:24.966"></status>
</kw>
<msg timestamp="20201030 15:55:24.967" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201030 15:55:24.958" endtime="20201030 15:55:24.968"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:24.977" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 15:55:24.975" endtime="20201030 15:55:24.978"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:24.982" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 15:55:24.980" endtime="20201030 15:55:24.983"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.969" endtime="20201030 15:55:24.984"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:24.994" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 15:55:24.992" endtime="20201030 15:55:24.995"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:24.999" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 15:55:24.996" endtime="20201030 15:55:24.999"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.986" endtime="20201030 15:55:25.001"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:25.020" endtime="20201030 15:55:25.380"></status>
</kw>
<msg timestamp="20201030 15:55:25.387" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.148718944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.148730889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:25.016" endtime="20201030 15:55:25.387"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:25.405" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.148718944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.148730889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:25.389" endtime="20201030 15:55:25.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:25.407" endtime="20201030 15:55:25.411"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.008" endtime="20201030 15:55:25.412"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.003" endtime="20201030 15:55:25.414"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:25.424" level="INFO">${RESULT} = [{'diff': 1.1945000000013195e-05}, {'diff': 1.1986999999991088e-05}, {'diff': 1.2000000000012001e-05}, {'diff': 1.1930999999992808e-05}, {'diff': 1.194499999998544e-05}, {'diff': 1.1944000000013721e-0...</msg>
<status status="PASS" starttime="20201030 15:55:25.416" endtime="20201030 15:55:25.425"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:55:25.435" level="INFO">${OVERHEAD} = {'diff': [1.1945000000013195e-05, 1.1986999999991088e-05, 1.2000000000012001e-05, 1.1930999999992808e-05, 1.194499999998544e-05, 1.1944000000013721e-05, 1.1959000000005826e-05, 1.1943999999985966e-05,...</msg>
<status status="PASS" starttime="20201030 15:55:25.427" endtime="20201030 15:55:25.436"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:25.447" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201030 15:55:25.444" endtime="20201030 15:55:25.447"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:25.452" level="INFO">VALUE: [1.1945000000013195e-05, 1.1986999999991088e-05, 1.2000000000012001e-05, 1.1930999999992808e-05, 1.194499999998544e-05, 1.1944000000013721e-05, 1.1959000000005826e-05, 1.1943999999985966e-05, 1.1959000000005826e-05, 1.1944000000013721e-05, 1.1929999999993335e-05, 1.1943999999985966e-05, 1.1943999999985966e-05, 1.1987000000018844e-05, 1.1930999999992808e-05, 1.1945000000013195e-05, 1.1929999999993335e-05, 1.194499999998544e-05, 1.1943999999985966e-05, 1.1944000000013721e-05, 1.1958000000006352e-05, 1.1944000000013721e-05, 1.1971999999998983e-05, 1.1945000000013195e-05, 1.1958000000006352e-05, 1.1945000000013195e-05, 1.1958000000006352e-05, 1.1943999999985966e-05, 1.2014000000004632e-05, 1.194499999998544e-05, 1.1944000000013721e-05, 1.1930999999992808e-05, 1.1943999999985966e-05, 1.1958000000006352e-05, 1.1902000000008073e-05, 1.1958000000006352e-05, 1.1931000000020564e-05, 1.1958000000006352e-05, 1.1945000000013195e-05, 1.1943999999985966e-05, 1.1972000000026739e-05, 1.1930999999992808e-05, 1.1902000000008073e-05, 1.1944000000013721e-05, 1.1958000000006352e-05, 1.1929999999993335e-05, 1.1959000000005826e-05, 1.2000000000012001e-05, 1.1944000000013721e-05, 1.1929999999993335e-05]</msg>
<status status="PASS" starttime="20201030 15:55:25.449" endtime="20201030 15:55:25.454"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.437" endtime="20201030 15:55:25.455"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:25.465" endtime="20201030 15:55:25.487"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.460" endtime="20201030 15:55:25.489"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.458" endtime="20201030 15:55:25.490"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.856" endtime="20201030 15:55:25.490"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:55:24.717" endtime="20201030 15:55:25.492" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:25.512" endtime="20201030 15:55:25.534"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.508" endtime="20201030 15:55:25.537"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:25.572" endtime="20201030 15:55:25.591"></status>
</kw>
<msg timestamp="20201030 15:55:25.592" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:25.568" endtime="20201030 15:55:25.593"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:25.599" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:25.595" endtime="20201030 15:55:25.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:55:25.606" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:55:25.601" endtime="20201030 15:55:25.606"></status>
</kw>
<status status="FAIL" starttime="20201030 15:55:25.561" endtime="20201030 15:55:25.608"></status>
</kw>
<status status="FAIL" starttime="20201030 15:55:25.554" endtime="20201030 15:55:25.610"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.552" endtime="20201030 15:55:25.610"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:55:25.618" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:55:25.617" endtime="20201030 15:55:25.619"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.612" endtime="20201030 15:55:25.620"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.550" endtime="20201030 15:55:25.620"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.548" endtime="20201030 15:55:25.620"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:25.622" endtime="20201030 15:55:25.625"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.544" endtime="20201030 15:55:25.627"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.538" endtime="20201030 15:55:25.628"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.504" endtime="20201030 15:55:25.629"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:25.652" endtime="20201030 15:55:25.775"></status>
</kw>
<msg timestamp="20201030 15:55:25.776" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:25.648" endtime="20201030 15:55:25.776"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:25.782" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:25.778" endtime="20201030 15:55:25.784"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:25.785" endtime="20201030 15:55:25.790"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.641" endtime="20201030 15:55:25.791"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.635" endtime="20201030 15:55:25.793"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:25.797" endtime="20201030 15:55:25.803"></status>
</kw>
<msg timestamp="20201030 15:55:25.804" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201030 15:55:25.794" endtime="20201030 15:55:25.804"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:25.816" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 15:55:25.813" endtime="20201030 15:55:25.817"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:25.822" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 15:55:25.819" endtime="20201030 15:55:25.822"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.806" endtime="20201030 15:55:25.824"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:25.836" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 15:55:25.833" endtime="20201030 15:55:25.837"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:25.841" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 15:55:25.839" endtime="20201030 15:55:25.842"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.826" endtime="20201030 15:55:25.844"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:25.864" endtime="20201030 15:55:26.218"></status>
</kw>
<msg timestamp="20201030 15:55:26.225" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.133635611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.133653806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:25.860" endtime="20201030 15:55:26.226"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:26.244" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.133635611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.133653806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:26.228" endtime="20201030 15:55:26.245"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:26.247" endtime="20201030 15:55:26.251"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.851" endtime="20201030 15:55:26.253"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.846" endtime="20201030 15:55:26.255"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:26.267" level="INFO">${RESULT} = [{'diff': 1.8195000000026385e-05}, {'diff': 1.8249999999997435e-05}, {'diff': 1.8193999999999155e-05}, {'diff': 1.8180000000006524e-05}, {'diff': 1.820899999999126e-05}, {'diff': 1.8193999999999155e-0...</msg>
<status status="PASS" starttime="20201030 15:55:26.257" endtime="20201030 15:55:26.268"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:55:26.278" level="INFO">${OVERHEAD} = {'diff': [1.8195000000026385e-05, 1.8249999999997435e-05, 1.8193999999999155e-05, 1.8180000000006524e-05, 1.820899999999126e-05, 1.8193999999999155e-05, 1.8193999999999155e-05, 1.8125000000007718e-05,...</msg>
<status status="PASS" starttime="20201030 15:55:26.270" endtime="20201030 15:55:26.279"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:26.290" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201030 15:55:26.287" endtime="20201030 15:55:26.290"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:26.295" level="INFO">VALUE: [1.8195000000026385e-05, 1.8249999999997435e-05, 1.8193999999999155e-05, 1.8180000000006524e-05, 1.820899999999126e-05, 1.8193999999999155e-05, 1.8193999999999155e-05, 1.8125000000007718e-05, 1.8222000000012173e-05, 1.822299999998389e-05, 1.820899999999126e-05, 1.813900000000035e-05, 1.819499999999863e-05, 1.820899999999126e-05, 1.8193999999999155e-05, 1.8249999999997435e-05, 1.8207999999991786e-05, 1.8181000000005998e-05, 1.8221999999984417e-05, 1.8223000000011647e-05, 1.8208000000019542e-05, 1.8208000000019542e-05, 1.822299999998389e-05, 1.8208000000019542e-05, 1.8193999999999155e-05, 1.8193999999999155e-05, 1.8236000000004804e-05, 1.8193999999999155e-05, 1.8153000000020736e-05, 1.8193999999999155e-05, 1.8222000000012173e-05, 1.8208000000019542e-05, 1.8221999999984417e-05, 1.8222000000012173e-05, 1.8221999999984417e-05, 1.8207999999991786e-05, 1.822299999998389e-05, 1.8236000000004804e-05, 1.813900000000035e-05, 1.8207999999991786e-05, 1.8193999999999155e-05, 1.8193999999999155e-05, 1.820899999999126e-05, 1.8180000000006524e-05, 1.8180000000006524e-05, 1.8193999999999155e-05, 1.8208000000019542e-05, 1.8181000000005998e-05, 1.819499999999863e-05, 1.8193999999999155e-05]</msg>
<status status="PASS" starttime="20201030 15:55:26.292" endtime="20201030 15:55:26.297"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.280" endtime="20201030 15:55:26.298"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:26.308" endtime="20201030 15:55:26.330"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.303" endtime="20201030 15:55:26.331"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.301" endtime="20201030 15:55:26.332"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.630" endtime="20201030 15:55:26.333"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:55:25.497" endtime="20201030 15:55:26.334" critical="yes"></status>
</test>
<test id="s1-s2-t9" name="Measure Add Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:26.351" endtime="20201030 15:55:26.373"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.348" endtime="20201030 15:55:26.375"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:26.416" endtime="20201030 15:55:26.435"></status>
</kw>
<msg timestamp="20201030 15:55:26.436" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:26.412" endtime="20201030 15:55:26.436"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:26.442" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:26.438" endtime="20201030 15:55:26.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:55:26.449" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:55:26.445" endtime="20201030 15:55:26.450"></status>
</kw>
<status status="FAIL" starttime="20201030 15:55:26.404" endtime="20201030 15:55:26.451"></status>
</kw>
<status status="FAIL" starttime="20201030 15:55:26.397" endtime="20201030 15:55:26.453"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.395" endtime="20201030 15:55:26.454"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:55:26.462" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:55:26.460" endtime="20201030 15:55:26.462"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.456" endtime="20201030 15:55:26.463"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.393" endtime="20201030 15:55:26.463"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.384" endtime="20201030 15:55:26.464"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:26.465" endtime="20201030 15:55:26.469"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.380" endtime="20201030 15:55:26.470"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.376" endtime="20201030 15:55:26.472"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.345" endtime="20201030 15:55:26.472"></status>
</kw>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 15:55:26.481" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 15:55:26.498" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 15:55:27.424" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 15:55:26.478" endtime="20201030 15:55:27.426"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 15:55:30.431" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20201030 15:55:27.428" endtime="20201030 15:55:30.432"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.474" endtime="20201030 15:55:30.434"></status>
</kw>
<kw name="${n} IN RANGE [ 1 | 51 ]" type="for">
<kw name="${n} = 1" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:30.459" endtime="20201030 15:55:30.470"></status>
</kw>
<msg timestamp="20201030 15:55:30.472" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:30.455" endtime="20201030 15:55:30.472"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:30.478" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:30.474" endtime="20201030 15:55:30.479"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:30.480" endtime="20201030 15:55:30.484"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.448" endtime="20201030 15:55:30.486"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.442" endtime="20201030 15:55:30.487"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:30.504" endtime="20201030 15:55:30.856"></status>
</kw>
<msg timestamp="20201030 15:55:30.864" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.973314111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.050280222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:30.501" endtime="20201030 15:55:30.864"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:30.882" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.973314111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.050280222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:30.866" endtime="20201030 15:55:30.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:30.885" endtime="20201030 15:55:30.889"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.493" endtime="20201030 15:55:30.890"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.489" endtime="20201030 15:55:30.892"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:30.901" level="INFO">${PHILIP_RES} = [{'diff': 0.07696611100000006}, {'diff': 5.805999999886069e-06}, {'diff': 5.819000000073515e-06}, {'diff': 5.818999999185337e-06}, {'diff': 5.819000000073515e-06}, {'diff': 5.874999999377906e-06}, {'d...</msg>
<status status="PASS" starttime="20201030 15:55:30.893" endtime="20201030 15:55:30.902"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:30.911" level="INFO">${RESULT} = {'diff': [0.07696611100000006, 5.805999999886069e-06, 5.819000000073515e-06, 5.818999999185337e-06, 5.819000000073515e-06, 5.874999999377906e-06, 5.820000000156256e-06, 5.750000000581679e-06, 5.804999...</msg>
<status status="PASS" starttime="20201030 15:55:30.903" endtime="20201030 15:55:30.911"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:30.921" level="INFO">NAME: 1-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:30.919" endtime="20201030 15:55:30.922"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:30.927" level="INFO">VALUE: [0.07696611100000006, 5.805999999886069e-06, 5.819000000073515e-06, 5.818999999185337e-06, 5.819000000073515e-06, 5.874999999377906e-06, 5.820000000156256e-06, 5.750000000581679e-06, 5.804999999803329e-06, 5.820000000156256e-06, 5.889000000536271e-06, 5.805000000691507e-06, 5.819000000073515e-06, 5.847999999808451e-06, 5.820000000156256e-06, 5.818999999185337e-06, 5.804999999803329e-06, 5.820000000156256e-06, 5.820000000156256e-06, 5.819999999268077e-06, 5.833000000343702e-06, 5.819000000073515e-06, 5.820000000156256e-06, 5.806000000774247e-06, 5.778000000233874e-06, 5.833000000343702e-06, 5.820000000156256e-06, 5.847000000613889e-06, 5.819000000073515e-06, 5.818999999185337e-06, 5.819000000073515e-06, 5.819999999268077e-06, 5.860999999995897e-06, 5.805000000691507e-06, 5.819000000073515e-06, 5.8340000004264425e-06, 5.820000000156256e-06, 5.7499999996935e-06, 5.804999999803329e-06, 5.763999999963687e-06, 5.8469999997257105e-06, 5.832999999455524e-06, 5.888999999648092e-06, 5.8469999997257105e-06, 5.820000000156256e-06, 5.819000000073515e-06, 5.79100000042132e-06, 5.860999999995897e-06, 5.833999999538264e-06, 5.833000000343702e-06, 5.819000000073515e-06]</msg>
<status status="PASS" starttime="20201030 15:55:30.924" endtime="20201030 15:55:30.928"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.913" endtime="20201030 15:55:30.929"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:30.939" endtime="20201030 15:55:30.960"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.934" endtime="20201030 15:55:30.962"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.932" endtime="20201030 15:55:30.962"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.438" endtime="20201030 15:55:30.963"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.437" endtime="20201030 15:55:30.963"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:30.993" endtime="20201030 15:55:31.005"></status>
</kw>
<msg timestamp="20201030 15:55:31.007" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:30.990" endtime="20201030 15:55:31.007"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:31.013" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:31.009" endtime="20201030 15:55:31.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:31.015" endtime="20201030 15:55:31.020"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.983" endtime="20201030 15:55:31.022"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.969" endtime="20201030 15:55:31.023"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:31.040" endtime="20201030 15:55:31.383"></status>
</kw>
<msg timestamp="20201030 15:55:31.391" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045395875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045405167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:31.037" endtime="20201030 15:55:31.391"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:31.409" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045395875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045405167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:31.393" endtime="20201030 15:55:31.410"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:31.412" endtime="20201030 15:55:31.416"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.029" endtime="20201030 15:55:31.417"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.025" endtime="20201030 15:55:31.419"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:31.428" level="INFO">${PHILIP_RES} = [{'diff': 9.292000000001022e-06}, {'diff': 9.333999999999731e-06}, {'diff': 9.360999999999398e-06}, {'diff': 9.360999999999398e-06}, {'diff': 9.346999999999828e-06}, {'diff': 9.360999999999398e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:55:31.420" endtime="20201030 15:55:31.428"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:31.437" level="INFO">${RESULT} = {'diff': [9.292000000001022e-06, 9.333999999999731e-06, 9.360999999999398e-06, 9.360999999999398e-06, 9.346999999999828e-06, 9.360999999999398e-06, 9.361000000006336e-06, 9.374999999998967e-06, 9.3050...</msg>
<status status="PASS" starttime="20201030 15:55:31.430" endtime="20201030 15:55:31.438"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:31.448" level="INFO">NAME: 2-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:31.446" endtime="20201030 15:55:31.449"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:31.453" level="INFO">VALUE: [9.292000000001022e-06, 9.333999999999731e-06, 9.360999999999398e-06, 9.360999999999398e-06, 9.346999999999828e-06, 9.360999999999398e-06, 9.361000000006336e-06, 9.374999999998967e-06, 9.305000000001118e-06, 9.360999999999398e-06, 9.347999999999301e-06, 9.374999999998967e-06, 9.403000000005046e-06, 9.417000000004616e-06, 9.360999999999398e-06, 9.360999999999398e-06, 9.346999999999828e-06, 9.374999999998967e-06, 9.430999999997247e-06, 9.360999999999398e-06, 9.347999999999301e-06, 9.346999999999828e-06, 9.374999999998967e-06, 9.360999999999398e-06, 9.361999999998871e-06, 9.34800000000624e-06, 9.374999999998967e-06, 9.430999999997247e-06, 9.360999999999398e-06, 9.361999999998871e-06, 9.346999999999828e-06, 9.360999999999398e-06, 9.374999999998967e-06, 9.346999999999828e-06, 9.320000000000161e-06, 9.360999999999398e-06, 9.443999999997343e-06, 9.375000000005906e-06, 9.360999999999398e-06, 9.347999999999301e-06, 9.374999999998967e-06, 9.374999999998967e-06, 9.346999999999828e-06, 9.319000000000688e-06, 9.36200000000581e-06, 9.374999999998967e-06, 9.415999999998204e-06, 9.374999999998967e-06, 9.402999999998107e-06, 9.333999999999731e-06]</msg>
<status status="PASS" starttime="20201030 15:55:31.450" endtime="20201030 15:55:31.454"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.439" endtime="20201030 15:55:31.456"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:31.467" endtime="20201030 15:55:31.488"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.461" endtime="20201030 15:55:31.490"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.458" endtime="20201030 15:55:31.491"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.966" endtime="20201030 15:55:31.492"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.964" endtime="20201030 15:55:31.492"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:31.514" endtime="20201030 15:55:31.525"></status>
</kw>
<msg timestamp="20201030 15:55:31.526" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:31.511" endtime="20201030 15:55:31.527"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:31.532" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:31.528" endtime="20201030 15:55:31.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:31.535" endtime="20201030 15:55:31.539"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.503" endtime="20201030 15:55:31.540"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.498" endtime="20201030 15:55:31.542"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:31.558" endtime="20201030 15:55:31.893"></status>
</kw>
<msg timestamp="20201030 15:55:31.900" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037753333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037766417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:31.555" endtime="20201030 15:55:31.901"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:31.919" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037753333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037766417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:31.903" endtime="20201030 15:55:31.920"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:31.921" endtime="20201030 15:55:31.925"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.548" endtime="20201030 15:55:31.927"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.543" endtime="20201030 15:55:31.928"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:31.938" level="INFO">${PHILIP_RES} = [{'diff': 1.3083999999996543e-05}, {'diff': 1.3111000000003148e-05}, {'diff': 1.3097000000003578e-05}, {'diff': 1.3111000000003148e-05}, {'diff': 1.3110999999996209e-05}, {'diff': 1.3138999999995349e-...</msg>
<status status="PASS" starttime="20201030 15:55:31.930" endtime="20201030 15:55:31.938"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:31.949" level="INFO">${RESULT} = {'diff': [1.3083999999996543e-05, 1.3111000000003148e-05, 1.3097000000003578e-05, 1.3111000000003148e-05, 1.3110999999996209e-05, 1.3138999999995349e-05, 1.3096999999996639e-05, 1.3098000000003052e-05...</msg>
<status status="PASS" starttime="20201030 15:55:31.940" endtime="20201030 15:55:31.949"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:31.959" level="INFO">NAME: 3-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:31.957" endtime="20201030 15:55:31.960"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:31.964" level="INFO">VALUE: [1.3083999999996543e-05, 1.3111000000003148e-05, 1.3097000000003578e-05, 1.3111000000003148e-05, 1.3110999999996209e-05, 1.3138999999995349e-05, 1.3096999999996639e-05, 1.3098000000003052e-05, 1.3111000000003148e-05, 1.301299999999922e-05, 1.30689999999975e-05, 1.3124999999995779e-05, 1.308299999999707e-05, 1.308299999999707e-05, 1.3112000000002622e-05, 1.3097000000003578e-05, 1.308299999999707e-05, 1.304099999999836e-05, 1.3110999999996209e-05, 1.3153000000001858e-05, 1.3097000000003578e-05, 1.3097000000003578e-05, 1.3098000000003052e-05, 1.30689999999975e-05, 1.3124999999995779e-05, 1.3167000000001428e-05, 1.3096999999996639e-05, 1.3125000000002718e-05, 1.3097000000003578e-05, 1.3098000000003052e-05, 1.3027999999998263e-05, 1.305499999999793e-05, 1.3110999999996209e-05, 1.3041999999997833e-05, 1.3083000000004008e-05, 1.3098000000003052e-05, 1.3098000000003052e-05, 1.3096999999996639e-05, 1.304099999999836e-05, 1.3110999999996209e-05, 1.3097000000003578e-05, 1.3097000000003578e-05, 1.3097000000003578e-05, 1.3097999999996113e-05, 1.3097999999996113e-05, 1.3096999999996639e-05, 1.305499999999793e-05, 1.3111000000003148e-05, 1.3097000000003578e-05, 1.308299999999707e-05]</msg>
<status status="PASS" starttime="20201030 15:55:31.961" endtime="20201030 15:55:31.965"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.950" endtime="20201030 15:55:31.967"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:31.977" endtime="20201030 15:55:31.999"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.973" endtime="20201030 15:55:32.001"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.970" endtime="20201030 15:55:32.001"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.494" endtime="20201030 15:55:32.002"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.493" endtime="20201030 15:55:32.002"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:32.024" endtime="20201030 15:55:32.036"></status>
</kw>
<msg timestamp="20201030 15:55:32.037" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:32.021" endtime="20201030 15:55:32.037"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:32.043" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:32.039" endtime="20201030 15:55:32.044"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:32.045" endtime="20201030 15:55:32.049"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.014" endtime="20201030 15:55:32.051"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.008" endtime="20201030 15:55:32.052"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:32.069" endtime="20201030 15:55:32.414"></status>
</kw>
<msg timestamp="20201030 15:55:32.422" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037482889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037499972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:32.066" endtime="20201030 15:55:32.423"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:32.443" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037482889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037499972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:32.425" endtime="20201030 15:55:32.444"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:32.446" endtime="20201030 15:55:32.451"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.058" endtime="20201030 15:55:32.453"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.054" endtime="20201030 15:55:32.456"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:32.467" level="INFO">${PHILIP_RES} = [{'diff': 1.708300000000107e-05}, {'diff': 1.7014000000002694e-05}, {'diff': 1.7056000000001403e-05}, {'diff': 1.702699999999585e-05}, {'diff': 1.7027999999995325e-05}, {'diff': 1.704100000000236e-05}...</msg>
<status status="PASS" starttime="20201030 15:55:32.458" endtime="20201030 15:55:32.468"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:32.481" level="INFO">${RESULT} = {'diff': [1.708300000000107e-05, 1.7014000000002694e-05, 1.7056000000001403e-05, 1.702699999999585e-05, 1.7027999999995325e-05, 1.704100000000236e-05, 1.7070000000000973e-05, 1.7056000000001403e-05, 1...</msg>
<status status="PASS" starttime="20201030 15:55:32.470" endtime="20201030 15:55:32.482"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:32.494" level="INFO">NAME: 4-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:32.491" endtime="20201030 15:55:32.496"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:32.502" level="INFO">VALUE: [1.708300000000107e-05, 1.7014000000002694e-05, 1.7056000000001403e-05, 1.702699999999585e-05, 1.7027999999995325e-05, 1.704100000000236e-05, 1.7070000000000973e-05, 1.7056000000001403e-05, 1.7014000000002694e-05, 1.702700000000279e-05, 1.711100000000021e-05, 1.7042000000001833e-05, 1.7042000000001833e-05, 1.7027999999995325e-05, 1.702699999999585e-05, 1.7028000000002264e-05, 1.6972000000003984e-05, 1.6972000000003984e-05, 1.6986000000003554e-05, 1.7042000000001833e-05, 1.704100000000236e-05, 1.7013999999995755e-05, 1.6957999999997475e-05, 1.6999999999996185e-05, 1.6986000000003554e-05, 1.708300000000107e-05, 1.705500000000193e-05, 1.7042000000001833e-05, 1.7014000000002694e-05, 1.7014000000002694e-05, 1.704100000000236e-05, 1.7027999999995325e-05, 1.7027999999995325e-05, 1.7027999999995325e-05, 1.711100000000021e-05, 1.6986000000003554e-05, 1.701300000000322e-05, 1.702700000000279e-05, 1.7028000000002264e-05, 1.7028000000002264e-05, 1.7027999999995325e-05, 1.702699999999585e-05, 1.7041999999994895e-05, 1.7042000000001833e-05, 1.7028000000002264e-05, 1.7042000000001833e-05, 1.702700000000279e-05, 1.705500000000193e-05, 1.7014000000002694e-05, 1.7028000000002264e-05]</msg>
<status status="PASS" starttime="20201030 15:55:32.497" endtime="20201030 15:55:32.504"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.483" endtime="20201030 15:55:32.506"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:32.518" endtime="20201030 15:55:32.541"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.513" endtime="20201030 15:55:32.543"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.509" endtime="20201030 15:55:32.544"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.004" endtime="20201030 15:55:32.545"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.003" endtime="20201030 15:55:32.546"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:32.574" endtime="20201030 15:55:32.588"></status>
</kw>
<msg timestamp="20201030 15:55:32.589" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:32.569" endtime="20201030 15:55:32.590"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:32.597" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:32.592" endtime="20201030 15:55:32.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:32.601" endtime="20201030 15:55:32.605"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.560" endtime="20201030 15:55:32.607"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.553" endtime="20201030 15:55:32.608"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:32.625" endtime="20201030 15:55:32.966"></status>
</kw>
<msg timestamp="20201030 15:55:32.973" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046265417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046286569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:32.622" endtime="20201030 15:55:32.974"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:32.992" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046265417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046286569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:32.976" endtime="20201030 15:55:32.993"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:32.995" endtime="20201030 15:55:32.999"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.614" endtime="20201030 15:55:33.001"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.609" endtime="20201030 15:55:33.002"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:33.012" level="INFO">${PHILIP_RES} = [{'diff': 2.1151999999996507e-05}, {'diff': 2.112499999999684e-05}, {'diff': 2.111100000000421e-05}, {'diff': 2.116700000000249e-05}, {'diff': 2.1152000000003446e-05}, {'diff': 2.118100000000206e-05},...</msg>
<status status="PASS" starttime="20201030 15:55:33.004" endtime="20201030 15:55:33.012"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:33.021" level="INFO">${RESULT} = {'diff': [2.1151999999996507e-05, 2.112499999999684e-05, 2.111100000000421e-05, 2.116700000000249e-05, 2.1152000000003446e-05, 2.118100000000206e-05, 2.118100000000206e-05, 2.116700000000249e-05, 2.11...</msg>
<status status="PASS" starttime="20201030 15:55:33.014" endtime="20201030 15:55:33.022"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:33.032" level="INFO">NAME: 5-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:33.029" endtime="20201030 15:55:33.032"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:33.037" level="INFO">VALUE: [2.1151999999996507e-05, 2.112499999999684e-05, 2.111100000000421e-05, 2.116700000000249e-05, 2.1152000000003446e-05, 2.118100000000206e-05, 2.118100000000206e-05, 2.116700000000249e-05, 2.116700000000249e-05, 2.113899999999641e-05, 2.115299999999598e-05, 2.113899999999641e-05, 2.1165999999996077e-05, 2.118100000000206e-05, 2.115300000000292e-05, 2.1152000000003446e-05, 2.115300000000292e-05, 2.115300000000292e-05, 2.1084000000004544e-05, 2.118100000000206e-05, 2.122300000000077e-05, 2.111099999999727e-05, 2.113899999999641e-05, 2.1165999999996077e-05, 2.115299999999598e-05, 2.116699999999555e-05, 2.115300000000292e-05, 2.10969999999977e-05, 2.111100000000421e-05, 2.115300000000292e-05, 2.1166000000003016e-05, 2.115300000000292e-05, 2.113900000000335e-05, 2.115300000000292e-05, 2.1151999999996507e-05, 2.113899999999641e-05, 2.113899999999641e-05, 2.113899999999641e-05, 2.113899999999641e-05, 2.113900000000335e-05, 2.113900000000335e-05, 2.116700000000249e-05, 2.1166000000003016e-05, 2.116700000000249e-05, 2.116700000000249e-05, 2.113900000000335e-05, 2.1165999999996077e-05, 2.115299999999598e-05, 2.115299999999598e-05, 2.108299999999813e-05]</msg>
<status status="PASS" starttime="20201030 15:55:33.034" endtime="20201030 15:55:33.039"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.023" endtime="20201030 15:55:33.041"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:33.050" endtime="20201030 15:55:33.072"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.046" endtime="20201030 15:55:33.073"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.043" endtime="20201030 15:55:33.074"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.548" endtime="20201030 15:55:33.075"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.547" endtime="20201030 15:55:33.075"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:33.101" endtime="20201030 15:55:33.114"></status>
</kw>
<msg timestamp="20201030 15:55:33.115" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:33.097" endtime="20201030 15:55:33.116"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:33.122" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:33.118" endtime="20201030 15:55:33.122"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:33.124" endtime="20201030 15:55:33.129"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.089" endtime="20201030 15:55:33.131"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.081" endtime="20201030 15:55:33.133"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:33.150" endtime="20201030 15:55:33.504"></status>
</kw>
<msg timestamp="20201030 15:55:33.512" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041007153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041032611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:33.146" endtime="20201030 15:55:33.512"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:33.532" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041007153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041032611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:33.514" endtime="20201030 15:55:33.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:33.534" endtime="20201030 15:55:33.539"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.139" endtime="20201030 15:55:33.540"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.134" endtime="20201030 15:55:33.542"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:33.552" level="INFO">${PHILIP_RES} = [{'diff': 2.5457999999999037e-05}, {'diff': 2.5471999999998607e-05}, {'diff': 2.5457999999999037e-05}, {'diff': 2.5528000000003825e-05}, {'diff': 2.5512999999997843e-05}, {'diff': 2.5457999999999037e-...</msg>
<status status="PASS" starttime="20201030 15:55:33.544" endtime="20201030 15:55:33.552"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:33.562" level="INFO">${RESULT} = {'diff': [2.5457999999999037e-05, 2.5471999999998607e-05, 2.5457999999999037e-05, 2.5528000000003825e-05, 2.5512999999997843e-05, 2.5457999999999037e-05, 2.5471999999998607e-05, 2.5485999999998177e-05...</msg>
<status status="PASS" starttime="20201030 15:55:33.554" endtime="20201030 15:55:33.563"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:33.573" level="INFO">NAME: 6-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:33.571" endtime="20201030 15:55:33.574"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:33.579" level="INFO">VALUE: [2.5457999999999037e-05, 2.5471999999998607e-05, 2.5457999999999037e-05, 2.5528000000003825e-05, 2.5512999999997843e-05, 2.5457999999999037e-05, 2.5471999999998607e-05, 2.5485999999998177e-05, 2.5471999999998607e-05, 2.545899999999851e-05, 2.547299999999808e-05, 2.5486000000005116e-05, 2.5485999999998177e-05, 2.5485999999998177e-05, 2.5513999999997317e-05, 2.5457999999999037e-05, 2.5457999999999037e-05, 2.5471999999998607e-05, 2.5457999999999037e-05, 2.5472000000005546e-05, 2.5443999999999467e-05, 2.5514000000004255e-05, 2.540300000000023e-05, 2.5485999999998177e-05, 2.5458000000005976e-05, 2.5471999999998607e-05, 2.545899999999851e-05, 2.5472000000005546e-05, 2.548699999999765e-05, 2.548699999999765e-05, 2.545899999999851e-05, 2.547299999999808e-05, 2.5486000000005116e-05, 2.5513999999997317e-05, 2.5457999999999037e-05, 2.5457999999999037e-05, 2.5471999999998607e-05, 2.5471999999998607e-05, 2.5527999999996887e-05, 2.5471999999998607e-05, 2.5486000000005116e-05, 2.5471999999998607e-05, 2.5485999999998177e-05, 2.5471999999998607e-05, 2.5485999999998177e-05, 2.5471999999998607e-05, 2.545899999999851e-05, 2.547299999999808e-05, 2.547300000000502e-05, 2.547299999999808e-05]</msg>
<status status="PASS" starttime="20201030 15:55:33.576" endtime="20201030 15:55:33.581"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.564" endtime="20201030 15:55:33.583"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:33.595" endtime="20201030 15:55:33.617"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.588" endtime="20201030 15:55:33.619"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.586" endtime="20201030 15:55:33.619"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.077" endtime="20201030 15:55:33.620"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.076" endtime="20201030 15:55:33.620"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:33.644" endtime="20201030 15:55:33.658"></status>
</kw>
<msg timestamp="20201030 15:55:33.660" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:33.640" endtime="20201030 15:55:33.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:33.669" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:33.664" endtime="20201030 15:55:33.670"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:33.672" endtime="20201030 15:55:33.681"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.632" endtime="20201030 15:55:33.685"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.627" endtime="20201030 15:55:33.687"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:33.712" endtime="20201030 15:55:34.073"></status>
</kw>
<msg timestamp="20201030 15:55:34.081" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039916028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039946014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:33.708" endtime="20201030 15:55:34.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:34.101" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039916028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039946014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:34.084" endtime="20201030 15:55:34.102"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:34.104" endtime="20201030 15:55:34.108"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.696" endtime="20201030 15:55:34.109"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.689" endtime="20201030 15:55:34.111"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:34.121" level="INFO">${PHILIP_RES} = [{'diff': 2.9986000000002677e-05}, {'diff': 2.9985999999995738e-05}, {'diff': 2.997199999999617e-05}, {'diff': 2.9986000000002677e-05}, {'diff': 2.9986999999995212e-05}, {'diff': 2.9999999999995308e-0...</msg>
<status status="PASS" starttime="20201030 15:55:34.113" endtime="20201030 15:55:34.121"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:34.132" level="INFO">${RESULT} = {'diff': [2.9986000000002677e-05, 2.9985999999995738e-05, 2.997199999999617e-05, 2.9986000000002677e-05, 2.9986999999995212e-05, 2.9999999999995308e-05, 3.0014000000001817e-05, 3.0041000000001483e-05,...</msg>
<status status="PASS" starttime="20201030 15:55:34.123" endtime="20201030 15:55:34.133"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:34.144" level="INFO">NAME: 7-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:34.142" endtime="20201030 15:55:34.145"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:34.150" level="INFO">VALUE: [2.9986000000002677e-05, 2.9985999999995738e-05, 2.997199999999617e-05, 2.9986000000002677e-05, 2.9986999999995212e-05, 2.9999999999995308e-05, 3.0014000000001817e-05, 3.0041000000001483e-05, 2.99579999999966e-05, 2.9972000000003107e-05, 2.9986000000002677e-05, 2.9985999999995738e-05, 3.0027000000001913e-05, 2.9986000000002677e-05, 2.997199999999617e-05, 3.0000000000002247e-05, 3.0014000000001817e-05, 2.9972999999995642e-05, 3.0000000000002247e-05, 2.9986000000002677e-05, 2.9958000000003537e-05, 2.9999999999995308e-05, 3.0000000000002247e-05, 3.0000000000002247e-05, 2.9985999999995738e-05, 2.9986000000002677e-05, 2.9972000000003107e-05, 2.9999999999995308e-05, 2.9986000000002677e-05, 2.9972000000003107e-05, 2.9986999999995212e-05, 3.0000000000002247e-05, 2.9986000000002677e-05, 2.9972999999995642e-05, 2.997199999999617e-05, 2.9986000000002677e-05, 3.0000000000002247e-05, 2.9999999999995308e-05, 2.997300000000258e-05, 2.9972000000003107e-05, 2.9999999999995308e-05, 2.9986000000002677e-05, 2.9986000000002677e-05, 2.9986999999995212e-05, 2.9986000000002677e-05, 2.9986000000002677e-05, 2.9985999999995738e-05, 2.9986000000002677e-05, 2.9986000000002677e-05, 3.0014000000001817e-05]</msg>
<status status="PASS" starttime="20201030 15:55:34.147" endtime="20201030 15:55:34.152"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.134" endtime="20201030 15:55:34.153"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:34.164" endtime="20201030 15:55:34.186"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.159" endtime="20201030 15:55:34.188"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.156" endtime="20201030 15:55:34.188"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.623" endtime="20201030 15:55:34.189"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.621" endtime="20201030 15:55:34.189"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:34.213" endtime="20201030 15:55:34.228"></status>
</kw>
<msg timestamp="20201030 15:55:34.229" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:34.209" endtime="20201030 15:55:34.230"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:34.236" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:34.232" endtime="20201030 15:55:34.237"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:34.238" endtime="20201030 15:55:34.243"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.202" endtime="20201030 15:55:34.244"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.196" endtime="20201030 15:55:34.246"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:34.264" endtime="20201030 15:55:34.624"></status>
</kw>
<msg timestamp="20201030 15:55:34.632" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040018667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040053361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:34.260" endtime="20201030 15:55:34.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:34.652" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040018667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040053361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:34.634" endtime="20201030 15:55:34.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:34.654" endtime="20201030 15:55:34.659"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.252" endtime="20201030 15:55:34.660"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.247" endtime="20201030 15:55:34.662"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:34.672" level="INFO">${PHILIP_RES} = [{'diff': 3.469400000000178e-05}, {'diff': 3.4638999999996034e-05}, {'diff': 3.472200000000092e-05}, {'diff': 3.469500000000125e-05}, {'diff': 3.475000000000006e-05}, {'diff': 3.468100000000168e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:55:34.664" endtime="20201030 15:55:34.672"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:34.684" level="INFO">${RESULT} = {'diff': [3.469400000000178e-05, 3.4638999999996034e-05, 3.472200000000092e-05, 3.469500000000125e-05, 3.475000000000006e-05, 3.468100000000168e-05, 3.469400000000178e-05, 3.472200000000092e-05, 3.468...</msg>
<status status="PASS" starttime="20201030 15:55:34.674" endtime="20201030 15:55:34.684"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:34.695" level="INFO">NAME: 8-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:34.693" endtime="20201030 15:55:34.696"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:34.701" level="INFO">VALUE: [3.469400000000178e-05, 3.4638999999996034e-05, 3.472200000000092e-05, 3.469500000000125e-05, 3.475000000000006e-05, 3.468100000000168e-05, 3.469400000000178e-05, 3.472200000000092e-05, 3.468100000000168e-05, 3.467999999999527e-05, 3.472200000000092e-05, 3.470800000000135e-05, 3.4694999999994314e-05, 3.469400000000178e-05, 3.469500000000125e-05, 3.472199999999398e-05, 3.468100000000168e-05, 3.466600000000264e-05, 3.472300000000039e-05, 3.469400000000178e-05, 3.469500000000125e-05, 3.469400000000178e-05, 3.463900000000297e-05, 3.467999999999527e-05, 3.473600000000049e-05, 3.476399999999963e-05, 3.4694999999994314e-05, 3.469400000000178e-05, 3.468100000000168e-05, 3.472199999999398e-05, 3.469500000000125e-05, 3.470800000000135e-05, 3.470900000000082e-05, 3.469400000000178e-05, 3.470900000000082e-05, 3.467999999999527e-05, 3.469500000000125e-05, 3.469400000000178e-05, 3.469500000000125e-05, 3.469400000000178e-05, 3.4694999999994314e-05, 3.469400000000178e-05, 3.470800000000135e-05, 3.4680999999994744e-05, 3.468000000000221e-05, 3.470800000000135e-05, 3.469399999999484e-05, 3.469500000000125e-05, 3.468000000000221e-05, 3.470900000000082e-05]</msg>
<status status="PASS" starttime="20201030 15:55:34.698" endtime="20201030 15:55:34.703"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.686" endtime="20201030 15:55:34.704"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:34.714" endtime="20201030 15:55:34.737"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.710" endtime="20201030 15:55:34.739"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.707" endtime="20201030 15:55:34.739"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.192" endtime="20201030 15:55:34.740"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.190" endtime="20201030 15:55:34.740"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:34.764" endtime="20201030 15:55:34.778"></status>
</kw>
<msg timestamp="20201030 15:55:34.779" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:34.760" endtime="20201030 15:55:34.780"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:34.786" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:34.782" endtime="20201030 15:55:34.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:34.789" endtime="20201030 15:55:34.793"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.753" endtime="20201030 15:55:34.794"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.747" endtime="20201030 15:55:34.796"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:34.814" endtime="20201030 15:55:35.176"></status>
</kw>
<msg timestamp="20201030 15:55:35.184" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039873403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039912972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:34.810" endtime="20201030 15:55:35.184"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:35.204" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039873403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039912972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:35.186" endtime="20201030 15:55:35.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:35.206" endtime="20201030 15:55:35.210"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.803" endtime="20201030 15:55:35.212"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.798" endtime="20201030 15:55:35.214"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:35.224" level="INFO">${PHILIP_RES} = [{'diff': 3.9568999999996246e-05}, {'diff': 3.9583000000002755e-05}, {'diff': 3.9610999999994956e-05}, {'diff': 3.95980000000018e-05}, {'diff': 3.9568999999996246e-05}, {'diff': 3.9597000000002325e-05...</msg>
<status status="PASS" starttime="20201030 15:55:35.215" endtime="20201030 15:55:35.224"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:35.234" level="INFO">${RESULT} = {'diff': [3.9568999999996246e-05, 3.9583000000002755e-05, 3.9610999999994956e-05, 3.95980000000018e-05, 3.9568999999996246e-05, 3.9597000000002325e-05, 3.9583000000002755e-05, 3.9611000000001895e-05, ...</msg>
<status status="PASS" starttime="20201030 15:55:35.226" endtime="20201030 15:55:35.234"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:35.245" level="INFO">NAME: 9-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:35.243" endtime="20201030 15:55:35.246"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:35.251" level="INFO">VALUE: [3.9568999999996246e-05, 3.9583000000002755e-05, 3.9610999999994956e-05, 3.95980000000018e-05, 3.9568999999996246e-05, 3.9597000000002325e-05, 3.9583000000002755e-05, 3.9611000000001895e-05, 3.961200000000137e-05, 3.9582999999995816e-05, 3.9597000000002325e-05, 3.9610999999994956e-05, 3.9597000000002325e-05, 3.961199999999443e-05, 3.958400000000223e-05, 3.9596999999995386e-05, 3.9625000000001465e-05, 3.9568999999996246e-05, 3.957000000000266e-05, 3.958400000000223e-05, 3.9611000000001895e-05, 3.9583000000002755e-05, 3.9596999999995386e-05, 3.9611000000001895e-05, 3.958399999999529e-05, 3.9583000000002755e-05, 3.9596999999995386e-05, 3.9625000000001465e-05, 3.9597000000002325e-05, 3.95980000000018e-05, 3.9597000000002325e-05, 3.9596999999995386e-05, 3.9597000000002325e-05, 3.952799999999701e-05, 3.961200000000137e-05, 3.9653000000000604e-05, 3.9625000000001465e-05, 3.9610999999994956e-05, 3.9597000000002325e-05, 3.958399999999529e-05, 3.961200000000137e-05, 3.9625000000001465e-05, 3.9625000000001465e-05, 3.9611000000001895e-05, 3.9625000000001465e-05, 3.95980000000018e-05, 3.9610999999994956e-05, 3.9611000000001895e-05, 3.9582999999995816e-05, 3.9583000000002755e-05]</msg>
<status status="PASS" starttime="20201030 15:55:35.248" endtime="20201030 15:55:35.253"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.236" endtime="20201030 15:55:35.256"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:35.273" endtime="20201030 15:55:35.300"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.265" endtime="20201030 15:55:35.301"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.260" endtime="20201030 15:55:35.302"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.743" endtime="20201030 15:55:35.303"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.741" endtime="20201030 15:55:35.304"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:35.327" endtime="20201030 15:55:35.343"></status>
</kw>
<msg timestamp="20201030 15:55:35.344" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:35.324" endtime="20201030 15:55:35.344"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:35.351" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:35.346" endtime="20201030 15:55:35.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:35.353" endtime="20201030 15:55:35.364"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.316" endtime="20201030 15:55:35.366"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.310" endtime="20201030 15:55:35.368"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:35.386" endtime="20201030 15:55:35.748"></status>
</kw>
<msg timestamp="20201030 15:55:35.756" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043938889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043983583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:35.382" endtime="20201030 15:55:35.756"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:35.776" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043938889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043983583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:35.758" endtime="20201030 15:55:35.777"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:35.778" endtime="20201030 15:55:35.782"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.374" endtime="20201030 15:55:35.784"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.369" endtime="20201030 15:55:35.786"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:35.796" level="INFO">${PHILIP_RES} = [{'diff': 4.46939999999979e-05}, {'diff': 4.46939999999979e-05}, {'diff': 4.470799999999747e-05}, {'diff': 4.4709000000003885e-05}, {'diff': 4.472200000000398e-05}, {'diff': 4.470800000000441e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:55:35.787" endtime="20201030 15:55:35.796"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:35.806" level="INFO">${RESULT} = {'diff': [4.46939999999979e-05, 4.46939999999979e-05, 4.470799999999747e-05, 4.4709000000003885e-05, 4.472200000000398e-05, 4.470800000000441e-05, 4.46939999999979e-05, 4.472199999999704e-05, 4.469499...</msg>
<status status="PASS" starttime="20201030 15:55:35.798" endtime="20201030 15:55:35.806"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:35.817" level="INFO">NAME: 10-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:35.815" endtime="20201030 15:55:35.818"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:35.823" level="INFO">VALUE: [4.46939999999979e-05, 4.46939999999979e-05, 4.470799999999747e-05, 4.4709000000003885e-05, 4.472200000000398e-05, 4.470800000000441e-05, 4.46939999999979e-05, 4.472199999999704e-05, 4.4694999999997376e-05, 4.4694999999997376e-05, 4.46939999999979e-05, 4.46939999999979e-05, 4.470799999999747e-05, 4.4709000000003885e-05, 4.4709000000003885e-05, 4.468000000000527e-05, 4.469400000000484e-05, 4.472200000000398e-05, 4.4723000000003454e-05, 4.4694999999997376e-05, 4.470799999999747e-05, 4.46939999999979e-05, 4.473599999999661e-05, 4.4694999999997376e-05, 4.4680999999997806e-05, 4.470799999999747e-05, 4.469400000000484e-05, 4.469400000000484e-05, 4.4695000000004315e-05, 4.4695000000004315e-05, 4.46939999999979e-05, 4.470799999999747e-05, 4.46939999999979e-05, 4.4694999999997376e-05, 4.4694999999997376e-05, 4.467999999999833e-05, 4.472199999999704e-05, 4.470799999999747e-05, 4.4681000000004745e-05, 4.4695000000004315e-05, 4.46660000000057e-05, 4.470799999999747e-05, 4.46939999999979e-05, 4.4680999999997806e-05, 4.4708999999996946e-05, 4.467999999999833e-05, 4.473599999999661e-05, 4.470799999999747e-05, 4.4680999999997806e-05, 4.472200000000398e-05]</msg>
<status status="PASS" starttime="20201030 15:55:35.820" endtime="20201030 15:55:35.825"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.808" endtime="20201030 15:55:35.827"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:35.838" endtime="20201030 15:55:35.860"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.832" endtime="20201030 15:55:35.862"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.829" endtime="20201030 15:55:35.863"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.306" endtime="20201030 15:55:35.863"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.305" endtime="20201030 15:55:35.864"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:35.888" endtime="20201030 15:55:35.903"></status>
</kw>
<msg timestamp="20201030 15:55:35.904" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:35.884" endtime="20201030 15:55:35.905"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:35.911" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:35.907" endtime="20201030 15:55:35.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:35.914" endtime="20201030 15:55:35.918"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.877" endtime="20201030 15:55:35.919"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.871" endtime="20201030 15:55:35.921"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:35.939" endtime="20201030 15:55:36.302"></status>
</kw>
<msg timestamp="20201030 15:55:36.309" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040360694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040410694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:35.935" endtime="20201030 15:55:36.310"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:36.329" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040360694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040410694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:36.312" endtime="20201030 15:55:36.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:36.331" endtime="20201030 15:55:36.335"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.927" endtime="20201030 15:55:36.337"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.922" endtime="20201030 15:55:36.339"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:36.349" level="INFO">${PHILIP_RES} = [{'diff': 4.999999999999449e-05}, {'diff': 4.9917000000003486e-05}, {'diff': 5.000000000000143e-05}, {'diff': 5.000000000000143e-05}, {'diff': 4.99869999999944e-05}, {'diff': 4.998600000000186e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:55:36.340" endtime="20201030 15:55:36.349"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:36.360" level="INFO">${RESULT} = {'diff': [4.999999999999449e-05, 4.9917000000003486e-05, 5.000000000000143e-05, 5.000000000000143e-05, 4.99869999999944e-05, 4.998600000000186e-05, 4.998600000000186e-05, 5.000000000000143e-05, 4.9985...</msg>
<status status="PASS" starttime="20201030 15:55:36.351" endtime="20201030 15:55:36.361"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:36.372" level="INFO">NAME: 11-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:36.369" endtime="20201030 15:55:36.372"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:36.377" level="INFO">VALUE: [4.999999999999449e-05, 4.9917000000003486e-05, 5.000000000000143e-05, 5.000000000000143e-05, 4.99869999999944e-05, 4.998600000000186e-05, 4.998600000000186e-05, 5.000000000000143e-05, 4.998599999999492e-05, 5.000000000000143e-05, 5.004100000000067e-05, 4.997200000000229e-05, 5.000000000000143e-05, 4.994499999999569e-05, 4.998600000000186e-05, 5.000000000000143e-05, 4.998600000000186e-05, 4.998599999999492e-05, 5.0014000000001e-05, 5.0014000000001e-05, 4.998600000000186e-05, 4.993099999999612e-05, 5.004100000000067e-05, 5.000000000000143e-05, 5.0014000000001e-05, 4.998600000000186e-05, 4.999999999999449e-05, 4.990299999999698e-05, 4.998600000000186e-05, 4.998600000000186e-05, 4.993099999999612e-05, 4.998599999999492e-05, 4.9917000000003486e-05, 5.000000000000143e-05, 5.000000000000143e-05, 4.998599999999492e-05, 4.9971999999995353e-05, 4.997200000000229e-05, 5.000000000000143e-05, 4.998600000000186e-05, 4.998599999999492e-05, 5.002800000000057e-05, 5.000000000000143e-05, 4.9943999999996214e-05, 4.9971999999995353e-05, 4.9971999999995353e-05, 4.995800000000272e-05, 4.998600000000186e-05, 5.000000000000143e-05, 4.998599999999492e-05]</msg>
<status status="PASS" starttime="20201030 15:55:36.374" endtime="20201030 15:55:36.379"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.362" endtime="20201030 15:55:36.381"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:36.391" endtime="20201030 15:55:36.414"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.386" endtime="20201030 15:55:36.416"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.384" endtime="20201030 15:55:36.416"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.866" endtime="20201030 15:55:36.417"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.865" endtime="20201030 15:55:36.418"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:36.442" endtime="20201030 15:55:36.458"></status>
</kw>
<msg timestamp="20201030 15:55:36.459" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:36.438" endtime="20201030 15:55:36.460"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:36.466" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:36.462" endtime="20201030 15:55:36.467"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:36.468" endtime="20201030 15:55:36.472"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.430" endtime="20201030 15:55:36.474"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.424" endtime="20201030 15:55:36.476"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:36.493" endtime="20201030 15:55:36.855"></status>
</kw>
<msg timestamp="20201030 15:55:36.863" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040926181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040981653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:36.490" endtime="20201030 15:55:36.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:36.882" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040926181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040981653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:36.865" endtime="20201030 15:55:36.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:36.885" endtime="20201030 15:55:36.889"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.482" endtime="20201030 15:55:36.891"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.477" endtime="20201030 15:55:36.892"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:36.903" level="INFO">${PHILIP_RES} = [{'diff': 5.5472000000000854e-05}, {'diff': 5.5499999999999994e-05}, {'diff': 5.547300000000033e-05}, {'diff': 5.545900000000076e-05}, {'diff': 5.5472000000000854e-05}, {'diff': 5.5472000000000854e-05...</msg>
<status status="PASS" starttime="20201030 15:55:36.894" endtime="20201030 15:55:36.903"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:36.915" level="INFO">${RESULT} = {'diff': [5.5472000000000854e-05, 5.5499999999999994e-05, 5.547300000000033e-05, 5.545900000000076e-05, 5.5472000000000854e-05, 5.5472000000000854e-05, 5.5472000000000854e-05, 5.5444000000001714e-05, ...</msg>
<status status="PASS" starttime="20201030 15:55:36.905" endtime="20201030 15:55:36.915"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:36.926" level="INFO">NAME: 12-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:36.923" endtime="20201030 15:55:36.927"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:36.932" level="INFO">VALUE: [5.5472000000000854e-05, 5.5499999999999994e-05, 5.547300000000033e-05, 5.545900000000076e-05, 5.5472000000000854e-05, 5.5472000000000854e-05, 5.5472000000000854e-05, 5.5444000000001714e-05, 5.5457999999994345e-05, 5.5499999999999994e-05, 5.5499999999999994e-05, 5.5486000000000424e-05, 5.54869999999999e-05, 5.5486000000000424e-05, 5.5527999999999134e-05, 5.5486000000000424e-05, 5.5486000000000424e-05, 5.5486000000000424e-05, 5.5486000000000424e-05, 5.5499999999999994e-05, 5.5472000000000854e-05, 5.547300000000033e-05, 5.545900000000076e-05, 5.5472000000000854e-05, 5.5486000000000424e-05, 5.5499999999999994e-05, 5.5472000000000854e-05, 5.5472000000000854e-05, 5.5513999999999564e-05, 5.5472000000000854e-05, 5.5499999999999994e-05, 5.545900000000076e-05, 5.5458000000001284e-05, 5.5472000000000854e-05, 5.5444000000001714e-05, 5.540299999999554e-05, 5.5499999999999994e-05, 5.5513999999999564e-05, 5.544500000000119e-05, 5.547300000000033e-05, 5.547300000000033e-05, 5.5513999999999564e-05, 5.5472000000000854e-05, 5.5499999999999994e-05, 5.543100000000162e-05, 5.5472000000000854e-05, 5.5458000000001284e-05, 5.5471999999993915e-05, 5.5472000000000854e-05, 5.547300000000033e-05]</msg>
<status status="PASS" starttime="20201030 15:55:36.928" endtime="20201030 15:55:36.933"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.917" endtime="20201030 15:55:36.935"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:36.945" endtime="20201030 15:55:36.968"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.940" endtime="20201030 15:55:36.969"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.938" endtime="20201030 15:55:36.970"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.420" endtime="20201030 15:55:36.971"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.419" endtime="20201030 15:55:36.971"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:36.995" endtime="20201030 15:55:37.011"></status>
</kw>
<msg timestamp="20201030 15:55:37.013" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:36.991" endtime="20201030 15:55:37.013"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:37.019" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:37.015" endtime="20201030 15:55:37.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:37.022" endtime="20201030 15:55:37.026"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.983" endtime="20201030 15:55:37.028"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.978" endtime="20201030 15:55:37.029"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:37.047" endtime="20201030 15:55:37.422"></status>
</kw>
<msg timestamp="20201030 15:55:37.430" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039951111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040012319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:37.043" endtime="20201030 15:55:37.431"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:37.450" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039951111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040012319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:37.433" endtime="20201030 15:55:37.451"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:37.453" endtime="20201030 15:55:37.458"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.036" endtime="20201030 15:55:37.460"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.031" endtime="20201030 15:55:37.461"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:37.471" level="INFO">${PHILIP_RES} = [{'diff': 6.12080000000001e-05}, {'diff': 6.118100000000043e-05}, {'diff': 6.112499999999521e-05}, {'diff': 6.115300000000129e-05}, {'diff': 6.115300000000129e-05}, {'diff': 6.115300000000129e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:55:37.463" endtime="20201030 15:55:37.471"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:37.481" level="INFO">${RESULT} = {'diff': [6.12080000000001e-05, 6.118100000000043e-05, 6.112499999999521e-05, 6.115300000000129e-05, 6.115300000000129e-05, 6.115300000000129e-05, 6.113900000000172e-05, 6.115300000000129e-05, 6.11530...</msg>
<status status="PASS" starttime="20201030 15:55:37.473" endtime="20201030 15:55:37.482"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:37.492" level="INFO">NAME: 13-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:37.490" endtime="20201030 15:55:37.493"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:37.498" level="INFO">VALUE: [6.12080000000001e-05, 6.118100000000043e-05, 6.112499999999521e-05, 6.115300000000129e-05, 6.115300000000129e-05, 6.115300000000129e-05, 6.113900000000172e-05, 6.115300000000129e-05, 6.115300000000129e-05, 6.116700000000086e-05, 6.116700000000086e-05, 6.115300000000129e-05, 6.116700000000086e-05, 6.113900000000172e-05, 6.118100000000043e-05, 6.115300000000129e-05, 6.119400000000053e-05, 6.123599999999924e-05, 6.116700000000086e-05, 6.116700000000086e-05, 6.115300000000129e-05, 6.113900000000172e-05, 6.116600000000139e-05, 6.116700000000086e-05, 6.115300000000129e-05, 6.115300000000129e-05, 6.112500000000215e-05, 6.115300000000129e-05, 6.107000000000334e-05, 6.115300000000129e-05, 6.112500000000215e-05, 6.115300000000129e-05, 6.115200000000182e-05, 6.115300000000129e-05, 6.116700000000086e-05, 6.119400000000053e-05, 6.119400000000053e-05, 6.115300000000129e-05, 6.116700000000086e-05, 6.118000000000096e-05, 6.115300000000129e-05, 6.113900000000172e-05, 6.115300000000129e-05, 6.116600000000139e-05, 6.111100000000258e-05, 6.116600000000139e-05, 6.116600000000139e-05, 6.115300000000129e-05, 6.115300000000129e-05, 6.115300000000129e-05]</msg>
<status status="PASS" starttime="20201030 15:55:37.495" endtime="20201030 15:55:37.500"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.483" endtime="20201030 15:55:37.502"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:37.512" endtime="20201030 15:55:37.534"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.508" endtime="20201030 15:55:37.536"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.505" endtime="20201030 15:55:37.537"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.973" endtime="20201030 15:55:37.538"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.972" endtime="20201030 15:55:37.538"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:37.562" endtime="20201030 15:55:37.580"></status>
</kw>
<msg timestamp="20201030 15:55:37.581" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:37.558" endtime="20201030 15:55:37.581"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:37.588" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:37.583" endtime="20201030 15:55:37.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:37.590" endtime="20201030 15:55:37.596"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.550" endtime="20201030 15:55:37.597"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.544" endtime="20201030 15:55:37.599"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:37.617" endtime="20201030 15:55:37.978"></status>
</kw>
<msg timestamp="20201030 15:55:37.986" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039967042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040034069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:37.613" endtime="20201030 15:55:37.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:38.005" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039967042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040034069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:37.988" endtime="20201030 15:55:38.006"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:38.008" endtime="20201030 15:55:38.012"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.606" endtime="20201030 15:55:38.014"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.601" endtime="20201030 15:55:38.016"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:38.026" level="INFO">${PHILIP_RES} = [{'diff': 6.702699999999728e-05}, {'diff': 6.698600000000499e-05}, {'diff': 6.709699999999513e-05}, {'diff': 6.704200000000327e-05}, {'diff': 6.701399999999719e-05}, {'diff': 6.702699999999728e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:55:38.017" endtime="20201030 15:55:38.026"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:38.036" level="INFO">${RESULT} = {'diff': [6.702699999999728e-05, 6.698600000000499e-05, 6.709699999999513e-05, 6.704200000000327e-05, 6.701399999999719e-05, 6.702699999999728e-05, 6.704200000000327e-05, 6.699999999999762e-05, 6.7028...</msg>
<status status="PASS" starttime="20201030 15:55:38.028" endtime="20201030 15:55:38.036"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:38.047" level="INFO">NAME: 14-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:38.045" endtime="20201030 15:55:38.048"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:38.053" level="INFO">VALUE: [6.702699999999728e-05, 6.698600000000499e-05, 6.709699999999513e-05, 6.704200000000327e-05, 6.701399999999719e-05, 6.702699999999728e-05, 6.704200000000327e-05, 6.699999999999762e-05, 6.70280000000037e-05, 6.706899999999599e-05, 6.70700000000024e-05, 6.704199999999633e-05, 6.704200000000327e-05, 6.704099999999685e-05, 6.704199999999633e-05, 6.70280000000037e-05, 6.704199999999633e-05, 6.704100000000379e-05, 6.708299999999556e-05, 6.700000000000456e-05, 6.699999999999762e-05, 6.704100000000379e-05, 6.704099999999685e-05, 6.705600000000284e-05, 6.705600000000284e-05, 6.705499999999642e-05, 6.70280000000037e-05, 6.702799999999676e-05, 6.705600000000284e-05, 6.702799999999676e-05, 6.704100000000379e-05, 6.702799999999676e-05, 6.704199999999633e-05, 6.705499999999642e-05, 6.701299999999771e-05, 6.700000000000456e-05, 6.702799999999676e-05, 6.705600000000284e-05, 6.701399999999719e-05, 6.704100000000379e-05, 6.702799999999676e-05, 6.701400000000413e-05, 6.70280000000037e-05, 6.701399999999719e-05, 6.70280000000037e-05, 6.704199999999633e-05, 6.70280000000037e-05, 6.701399999999719e-05, 6.701400000000413e-05, 6.701399999999719e-05]</msg>
<status status="PASS" starttime="20201030 15:55:38.050" endtime="20201030 15:55:38.055"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.038" endtime="20201030 15:55:38.057"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:38.068" endtime="20201030 15:55:38.090"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.062" endtime="20201030 15:55:38.092"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.059" endtime="20201030 15:55:38.093"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.540" endtime="20201030 15:55:38.094"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.539" endtime="20201030 15:55:38.094"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:38.118" endtime="20201030 15:55:38.136"></status>
</kw>
<msg timestamp="20201030 15:55:38.137" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:38.114" endtime="20201030 15:55:38.138"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:38.144" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:38.139" endtime="20201030 15:55:38.144"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:38.146" endtime="20201030 15:55:38.150"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.106" endtime="20201030 15:55:38.152"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.101" endtime="20201030 15:55:38.154"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:38.172" endtime="20201030 15:55:38.537"></status>
</kw>
<msg timestamp="20201030 15:55:38.544" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039878681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039951764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:38.168" endtime="20201030 15:55:38.544"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:38.562" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039878681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039951764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:38.546" endtime="20201030 15:55:38.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:38.565" endtime="20201030 15:55:38.569"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.161" endtime="20201030 15:55:38.570"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.155" endtime="20201030 15:55:38.572"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:38.581" level="INFO">${PHILIP_RES} = [{'diff': 7.308300000000156e-05}, {'diff': 7.308400000000104e-05}, {'diff': 7.312499999999333e-05}, {'diff': 7.316699999999898e-05}, {'diff': 7.309700000000113e-05}, {'diff': 7.311200000000018e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:55:38.574" endtime="20201030 15:55:38.582"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:38.592" level="INFO">${RESULT} = {'diff': [7.308300000000156e-05, 7.308400000000104e-05, 7.312499999999333e-05, 7.316699999999898e-05, 7.309700000000113e-05, 7.311200000000018e-05, 7.315299999999941e-05, 7.31110000000007e-05, 7.30700...</msg>
<status status="PASS" starttime="20201030 15:55:38.583" endtime="20201030 15:55:38.593"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:38.603" level="INFO">NAME: 15-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:38.600" endtime="20201030 15:55:38.604"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:38.608" level="INFO">VALUE: [7.308300000000156e-05, 7.308400000000104e-05, 7.312499999999333e-05, 7.316699999999898e-05, 7.309700000000113e-05, 7.311200000000018e-05, 7.315299999999941e-05, 7.31110000000007e-05, 7.307000000000147e-05, 7.309800000000061e-05, 7.308300000000156e-05, 7.31110000000007e-05, 7.309700000000113e-05, 7.308400000000104e-05, 7.31110000000007e-05, 7.308300000000156e-05, 7.31110000000007e-05, 7.309800000000061e-05, 7.308299999999462e-05, 7.31110000000007e-05, 7.304200000000233e-05, 7.312500000000027e-05, 7.308300000000156e-05, 7.31110000000007e-05, 7.309700000000113e-05, 7.309800000000061e-05, 7.304100000000285e-05, 7.31110000000007e-05, 7.31110000000007e-05, 7.311200000000018e-05, 7.309700000000113e-05, 7.31110000000007e-05, 7.312500000000027e-05, 7.31110000000007e-05, 7.312500000000027e-05, 7.308299999999462e-05, 7.315299999999941e-05, 7.309800000000061e-05, 7.309700000000113e-05, 7.30969999999942e-05, 7.31110000000007e-05, 7.311200000000018e-05, 7.308300000000156e-05, 7.30969999999942e-05, 7.312500000000027e-05, 7.311200000000018e-05, 7.308300000000156e-05, 7.31110000000007e-05, 7.315199999999994e-05, 7.31110000000007e-05]</msg>
<status status="PASS" starttime="20201030 15:55:38.605" endtime="20201030 15:55:38.610"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.594" endtime="20201030 15:55:38.612"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:38.621" endtime="20201030 15:55:38.643"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.617" endtime="20201030 15:55:38.645"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.614" endtime="20201030 15:55:38.645"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.096" endtime="20201030 15:55:38.646"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.095" endtime="20201030 15:55:38.646"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:38.669" endtime="20201030 15:55:38.687"></status>
</kw>
<msg timestamp="20201030 15:55:38.688" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:38.665" endtime="20201030 15:55:38.689"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:38.695" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:38.691" endtime="20201030 15:55:38.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:38.697" endtime="20201030 15:55:38.701"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.658" endtime="20201030 15:55:38.702"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.652" endtime="20201030 15:55:38.704"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:38.721" endtime="20201030 15:55:39.061"></status>
</kw>
<msg timestamp="20201030 15:55:39.068" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037931944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038011278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:38.718" endtime="20201030 15:55:39.069"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:39.087" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037931944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038011278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:39.071" endtime="20201030 15:55:39.088"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:39.089" endtime="20201030 15:55:39.093"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.710" endtime="20201030 15:55:39.095"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.705" endtime="20201030 15:55:39.097"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:39.106" level="INFO">${PHILIP_RES} = [{'diff': 7.933400000000035e-05}, {'diff': 7.936100000000001e-05}, {'diff': 7.936199999999949e-05}, {'diff': 7.940299999999872e-05}, {'diff': 7.936100000000001e-05}, {'diff': 7.940299999999872e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:55:39.098" endtime="20201030 15:55:39.107"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:39.120" level="INFO">${RESULT} = {'diff': [7.933400000000035e-05, 7.936100000000001e-05, 7.936199999999949e-05, 7.940299999999872e-05, 7.936100000000001e-05, 7.940299999999872e-05, 7.937499999999958e-05, 7.944399999999796e-05, 7.9430...</msg>
<status status="PASS" starttime="20201030 15:55:39.109" endtime="20201030 15:55:39.120"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:39.131" level="INFO">NAME: 16-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:39.128" endtime="20201030 15:55:39.131"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:39.136" level="INFO">VALUE: [7.933400000000035e-05, 7.936100000000001e-05, 7.936199999999949e-05, 7.940299999999872e-05, 7.936100000000001e-05, 7.940299999999872e-05, 7.937499999999958e-05, 7.944399999999796e-05, 7.943000000000533e-05, 7.93190000000013e-05, 7.936100000000001e-05, 7.936100000000001e-05, 7.938899999999915e-05, 7.937499999999958e-05, 7.940299999999872e-05, 7.936100000000001e-05, 7.934700000000044e-05, 7.940199999999925e-05, 7.937499999999958e-05, 7.94169999999983e-05, 7.937499999999958e-05, 7.936100000000001e-05, 7.933400000000035e-05, 7.937499999999958e-05, 7.942999999999839e-05, 7.934700000000044e-05, 7.938899999999915e-05, 7.936100000000001e-05, 7.936100000000001e-05, 7.937499999999958e-05, 7.938899999999915e-05, 7.936100000000001e-05, 7.937499999999958e-05, 7.937499999999958e-05, 7.934799999999992e-05, 7.93890000000061e-05, 7.937499999999958e-05, 7.929200000000164e-05, 7.934700000000044e-05, 7.937499999999958e-05, 7.936100000000001e-05, 7.930500000000174e-05, 7.93890000000061e-05, 7.936100000000001e-05, 7.936100000000001e-05, 7.937499999999958e-05, 7.937499999999958e-05, 7.938899999999915e-05, 7.940299999999872e-05, 7.941599999999882e-05]</msg>
<status status="PASS" starttime="20201030 15:55:39.133" endtime="20201030 15:55:39.138"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.122" endtime="20201030 15:55:39.139"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:39.149" endtime="20201030 15:55:39.171"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.145" endtime="20201030 15:55:39.173"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.142" endtime="20201030 15:55:39.173"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.648" endtime="20201030 15:55:39.174"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.647" endtime="20201030 15:55:39.174"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:39.197" endtime="20201030 15:55:39.216"></status>
</kw>
<msg timestamp="20201030 15:55:39.218" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:39.193" endtime="20201030 15:55:39.218"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:39.224" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:39.220" endtime="20201030 15:55:39.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:39.226" endtime="20201030 15:55:39.230"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.186" endtime="20201030 15:55:39.232"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.181" endtime="20201030 15:55:39.233"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:39.250" endtime="20201030 15:55:39.604"></status>
</kw>
<msg timestamp="20201030 15:55:39.611" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038115194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038201042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:39.247" endtime="20201030 15:55:39.612"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:39.630" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038115194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038201042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:39.614" endtime="20201030 15:55:39.630"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:39.636" endtime="20201030 15:55:39.640"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.239" endtime="20201030 15:55:39.641"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.234" endtime="20201030 15:55:39.643"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:39.652" level="INFO">${PHILIP_RES} = [{'diff': 8.584799999999948e-05}, {'diff': 8.58050000000013e-05}, {'diff': 8.583300000000044e-05}, {'diff': 8.582000000000034e-05}, {'diff': 8.583300000000044e-05}, {'diff': 8.583300000000044e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:55:39.644" endtime="20201030 15:55:39.653"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:39.662" level="INFO">${RESULT} = {'diff': [8.584799999999948e-05, 8.58050000000013e-05, 8.583300000000044e-05, 8.582000000000034e-05, 8.583300000000044e-05, 8.583300000000044e-05, 8.581899999999393e-05, 8.588899999999872e-05, 8.5847e...</msg>
<status status="PASS" starttime="20201030 15:55:39.654" endtime="20201030 15:55:39.662"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:39.672" level="INFO">NAME: 17-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:39.670" endtime="20201030 15:55:39.673"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:39.678" level="INFO">VALUE: [8.584799999999948e-05, 8.58050000000013e-05, 8.583300000000044e-05, 8.582000000000034e-05, 8.583300000000044e-05, 8.583300000000044e-05, 8.581899999999393e-05, 8.588899999999872e-05, 8.5847e-05, 8.583300000000044e-05, 8.580600000000077e-05, 8.577800000000163e-05, 8.583300000000044e-05, 8.583300000000044e-05, 8.584799999999948e-05, 8.581900000000087e-05, 8.5847e-05, 8.580600000000077e-05, 8.582000000000034e-05, 8.581900000000087e-05, 8.581900000000087e-05, 8.587499999999915e-05, 8.581900000000087e-05, 8.579099999999479e-05, 8.577800000000163e-05, 8.5847e-05, 8.581900000000087e-05, 8.583300000000044e-05, 8.582000000000034e-05, 8.590199999999881e-05, 8.583300000000044e-05, 8.58199999999934e-05, 8.583300000000044e-05, 8.5847e-05, 8.583300000000044e-05, 8.583399999999991e-05, 8.583300000000044e-05, 8.583300000000044e-05, 8.580600000000077e-05, 8.583300000000044e-05, 8.581900000000087e-05, 8.583300000000044e-05, 8.584799999999948e-05, 8.581900000000087e-05, 8.583300000000044e-05, 8.583399999999991e-05, 8.580600000000077e-05, 8.581900000000087e-05, 8.5847e-05, 8.583399999999991e-05]</msg>
<status status="PASS" starttime="20201030 15:55:39.674" endtime="20201030 15:55:39.679"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.663" endtime="20201030 15:55:39.681"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:39.690" endtime="20201030 15:55:39.712"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.686" endtime="20201030 15:55:39.713"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.683" endtime="20201030 15:55:39.714"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.177" endtime="20201030 15:55:39.715"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.175" endtime="20201030 15:55:39.715"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:39.737" endtime="20201030 15:55:39.756"></status>
</kw>
<msg timestamp="20201030 15:55:39.758" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:39.734" endtime="20201030 15:55:39.758"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:39.764" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:39.760" endtime="20201030 15:55:39.764"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:39.766" endtime="20201030 15:55:39.771"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.726" endtime="20201030 15:55:39.773"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.721" endtime="20201030 15:55:39.774"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:39.791" endtime="20201030 15:55:40.130"></status>
</kw>
<msg timestamp="20201030 15:55:40.137" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037255319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037347792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:39.788" endtime="20201030 15:55:40.137"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:40.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037255319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037347792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:40.139" endtime="20201030 15:55:40.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:40.158" endtime="20201030 15:55:40.161"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.781" endtime="20201030 15:55:40.163"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.776" endtime="20201030 15:55:40.165"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:40.174" level="INFO">${PHILIP_RES} = [{'diff': 9.24729999999957e-05}, {'diff': 9.247199999999622e-05}, {'diff': 9.249999999999536e-05}, {'diff': 9.24859999999958e-05}, {'diff': 9.247199999999622e-05}, {'diff': 9.24859999999958e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 15:55:40.166" endtime="20201030 15:55:40.174"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:40.184" level="INFO">${RESULT} = {'diff': [9.24729999999957e-05, 9.247199999999622e-05, 9.249999999999536e-05, 9.24859999999958e-05, 9.247199999999622e-05, 9.24859999999958e-05, 9.248699999999527e-05, 9.24859999999958e-05, 9.24859999...</msg>
<status status="PASS" starttime="20201030 15:55:40.176" endtime="20201030 15:55:40.184"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:40.194" level="INFO">NAME: 18-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:40.192" endtime="20201030 15:55:40.195"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:40.200" level="INFO">VALUE: [9.24729999999957e-05, 9.247199999999622e-05, 9.249999999999536e-05, 9.24859999999958e-05, 9.247199999999622e-05, 9.24859999999958e-05, 9.248699999999527e-05, 9.24859999999958e-05, 9.24859999999958e-05, 9.247199999999622e-05, 9.247199999999622e-05, 9.25000000000023e-05, 9.245900000000307e-05, 9.247200000000316e-05, 9.248600000000273e-05, 9.248600000000273e-05, 9.247200000000316e-05, 9.251400000000187e-05, 9.252800000000144e-05, 9.25000000000023e-05, 9.240199999999837e-05, 9.247200000000316e-05, 9.248600000000273e-05, 9.248600000000273e-05, 9.25000000000023e-05, 9.245800000000359e-05, 9.248600000000273e-05, 9.248600000000273e-05, 9.251400000000187e-05, 9.248600000000273e-05, 9.24870000000022e-05, 9.248600000000273e-05, 9.248600000000273e-05, 9.248600000000273e-05, 9.254100000000154e-05, 9.245899999999613e-05, 9.24870000000022e-05, 9.245799999999665e-05, 9.24859999999958e-05, 9.24859999999958e-05, 9.240299999999785e-05, 9.245899999999613e-05, 9.245799999999665e-05, 9.254200000000101e-05, 9.242999999999751e-05, 9.255500000000111e-05, 9.24859999999958e-05, 9.245899999999613e-05, 9.238899999999828e-05, 9.255599999999364e-05]</msg>
<status status="PASS" starttime="20201030 15:55:40.197" endtime="20201030 15:55:40.201"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.185" endtime="20201030 15:55:40.203"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:40.214" endtime="20201030 15:55:40.236"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.208" endtime="20201030 15:55:40.238"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.206" endtime="20201030 15:55:40.238"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.717" endtime="20201030 15:55:40.239"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.716" endtime="20201030 15:55:40.239"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:40.261" endtime="20201030 15:55:40.283"></status>
</kw>
<msg timestamp="20201030 15:55:40.284" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:40.258" endtime="20201030 15:55:40.284"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:40.290" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:40.286" endtime="20201030 15:55:40.291"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:40.292" endtime="20201030 15:55:40.296"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.251" endtime="20201030 15:55:40.298"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.245" endtime="20201030 15:55:40.299"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:40.316" endtime="20201030 15:55:40.661"></status>
</kw>
<msg timestamp="20201030 15:55:40.668" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037743958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037843292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:40.313" endtime="20201030 15:55:40.668"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:40.686" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037743958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037843292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:40.670" endtime="20201030 15:55:40.687"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:40.688" endtime="20201030 15:55:40.692"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.306" endtime="20201030 15:55:40.694"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.301" endtime="20201030 15:55:40.695"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:40.705" level="INFO">${PHILIP_RES} = [{'diff': 9.933399999999953e-05}, {'diff': 9.931900000000049e-05}, {'diff': 9.934700000000657e-05}, {'diff': 9.933300000000006e-05}, {'diff': 9.931900000000049e-05}, {'diff': 9.93479999999991e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:55:40.697" endtime="20201030 15:55:40.705"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:40.720" level="INFO">${RESULT} = {'diff': [9.933399999999953e-05, 9.931900000000049e-05, 9.934700000000657e-05, 9.933300000000006e-05, 9.931900000000049e-05, 9.93479999999991e-05, 9.933300000000006e-05, 9.933300000000006e-05, 9.93330...</msg>
<status status="PASS" starttime="20201030 15:55:40.707" endtime="20201030 15:55:40.720"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:40.730" level="INFO">NAME: 19-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:40.728" endtime="20201030 15:55:40.731"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:40.736" level="INFO">VALUE: [9.933399999999953e-05, 9.931900000000049e-05, 9.934700000000657e-05, 9.933300000000006e-05, 9.931900000000049e-05, 9.93479999999991e-05, 9.933300000000006e-05, 9.933300000000006e-05, 9.933300000000006e-05, 9.931899999999355e-05, 9.933399999999953e-05, 9.930500000000092e-05, 9.93060000000004e-05, 9.934699999999963e-05, 9.931900000000049e-05, 9.931999999999996e-05, 9.927799999999432e-05, 9.925000000000211e-05, 9.931900000000049e-05, 9.937500000000571e-05, 9.931999999999996e-05, 9.933300000000006e-05, 9.931999999999996e-05, 9.931899999999355e-05, 9.933300000000006e-05, 9.933399999999953e-05, 9.933300000000006e-05, 9.926400000000168e-05, 9.931900000000049e-05, 9.933300000000006e-05, 9.934700000000657e-05, 9.931900000000049e-05, 9.938899999999834e-05, 9.930500000000092e-05, 9.934699999999963e-05, 9.934699999999963e-05, 9.930500000000092e-05, 9.933400000000647e-05, 9.933300000000006e-05, 9.933300000000006e-05, 9.93609999999992e-05, 9.934699999999963e-05, 9.933399999999953e-05, 9.930500000000092e-05, 9.934699999999963e-05, 9.934699999999963e-05, 9.938899999999834e-05, 9.929199999999389e-05, 9.931900000000049e-05, 9.933300000000006e-05]</msg>
<status status="PASS" starttime="20201030 15:55:40.733" endtime="20201030 15:55:40.738"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.722" endtime="20201030 15:55:40.739"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:40.749" endtime="20201030 15:55:40.770"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.744" endtime="20201030 15:55:40.772"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.742" endtime="20201030 15:55:40.773"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.241" endtime="20201030 15:55:40.773"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.240" endtime="20201030 15:55:40.774"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:40.796" endtime="20201030 15:55:40.817"></status>
</kw>
<msg timestamp="20201030 15:55:40.818" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:40.792" endtime="20201030 15:55:40.819"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:40.824" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:40.820" endtime="20201030 15:55:40.825"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:40.827" endtime="20201030 15:55:40.830"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.785" endtime="20201030 15:55:40.832"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.780" endtime="20201030 15:55:40.834"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:40.850" endtime="20201030 15:55:41.191"></status>
</kw>
<msg timestamp="20201030 15:55:41.197" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037585167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037691528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:40.847" endtime="20201030 15:55:41.198"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:41.215" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037585167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037691528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:41.200" endtime="20201030 15:55:41.216"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:41.217" endtime="20201030 15:55:41.221"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.840" endtime="20201030 15:55:41.223"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.835" endtime="20201030 15:55:41.224"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:41.234" level="INFO">${PHILIP_RES} = [{'diff': 0.00010636099999999926}, {'diff': 0.00010636099999999926}, {'diff': 0.00010632000000000003}, {'diff': 0.00010637499999999883}, {'diff': 0.00010636099999999926}, {'diff': 0.000106429999999997...</msg>
<status status="PASS" starttime="20201030 15:55:41.226" endtime="20201030 15:55:41.234"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:41.245" level="INFO">${RESULT} = {'diff': [0.00010636099999999926, 0.00010636099999999926, 0.00010632000000000003, 0.00010637499999999883, 0.00010636099999999926, 0.00010642999999999764, 0.00010630600000000046, 0.00010640300000000491...</msg>
<status status="PASS" starttime="20201030 15:55:41.236" endtime="20201030 15:55:41.245"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:41.255" level="INFO">NAME: 20-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:41.253" endtime="20201030 15:55:41.256"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:41.261" level="INFO">VALUE: [0.00010636099999999926, 0.00010636099999999926, 0.00010632000000000003, 0.00010637499999999883, 0.00010636099999999926, 0.00010642999999999764, 0.00010630600000000046, 0.00010640300000000491, 0.0001063610000000062, 0.00010640299999999797, 0.00010634699999999969, 0.00010636099999999926, 0.00010638900000000534, 0.00010643099999999711, 0.00010630500000000098, 0.00010640299999999797, 0.00010637500000000577, 0.00010643099999999711, 0.00010630500000000098, 0.00010640299999999797, 0.00010637499999999883, 0.00010640299999999797, 0.00010637499999999883, 0.00010638799999999893, 0.00010637500000000577, 0.00010637499999999883, 0.0001064019999999985, 0.00010632000000000003, 0.00010638900000000534, 0.00010636099999999926, 0.0001063889999999984, 0.00010636099999999926, 0.0001063889999999984, 0.00010638900000000534, 0.00010637499999999883, 0.00010634699999999969, 0.00010636099999999926, 0.00010633300000000012, 0.00010643099999999711, 0.00010636099999999926, 0.0001063889999999984, 0.00010637500000000577, 0.00010640299999999797, 0.00010636099999999926, 0.0001063889999999984, 0.00010637500000000577, 0.00010637499999999883, 0.00010636099999999926, 0.00010637499999999883, 0.00010638900000000534]</msg>
<status status="PASS" starttime="20201030 15:55:41.258" endtime="20201030 15:55:41.262"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.247" endtime="20201030 15:55:41.264"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:41.274" endtime="20201030 15:55:41.295"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.269" endtime="20201030 15:55:41.297"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.267" endtime="20201030 15:55:41.298"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.776" endtime="20201030 15:55:41.298"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.775" endtime="20201030 15:55:41.299"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:41.321" endtime="20201030 15:55:41.342"></status>
</kw>
<msg timestamp="20201030 15:55:41.343" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:41.317" endtime="20201030 15:55:41.344"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:41.350" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:41.346" endtime="20201030 15:55:41.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:41.352" endtime="20201030 15:55:41.356"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.310" endtime="20201030 15:55:41.358"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.305" endtime="20201030 15:55:41.359"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:41.376" endtime="20201030 15:55:41.725"></status>
</kw>
<msg timestamp="20201030 15:55:41.731" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037592722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037706361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:41.373" endtime="20201030 15:55:41.732"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:41.749" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037592722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037706361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:41.733" endtime="20201030 15:55:41.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:41.751" endtime="20201030 15:55:41.755"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.365" endtime="20201030 15:55:41.756"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.361" endtime="20201030 15:55:41.758"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:41.767" level="INFO">${PHILIP_RES} = [{'diff': 0.00011363899999999871}, {'diff': 0.00011361099999999957}, {'diff': 0.000113597}, {'diff': 0.00011366699999999785}, {'diff': 0.00011358300000000043}, {'diff': 0.00011366599999999838}, {'diff...</msg>
<status status="PASS" starttime="20201030 15:55:41.760" endtime="20201030 15:55:41.768"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:41.776" level="INFO">${RESULT} = {'diff': [0.00011363899999999871, 0.00011361099999999957, 0.000113597, 0.00011366699999999785, 0.00011358300000000043, 0.00011366599999999838, 0.000113597, 0.00011362499999999914, 0.000113624999999999...</msg>
<status status="PASS" starttime="20201030 15:55:41.769" endtime="20201030 15:55:41.777"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:41.787" level="INFO">NAME: 21-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:41.784" endtime="20201030 15:55:41.788"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:41.792" level="INFO">VALUE: [0.00011363899999999871, 0.00011361099999999957, 0.000113597, 0.00011366699999999785, 0.00011358300000000043, 0.00011366599999999838, 0.000113597, 0.00011362499999999914, 0.00011362499999999914, 0.00011352799999999469, 0.00011361099999999957, 0.00011361099999999957, 0.00011359799999999948, 0.00011361099999999957, 0.00011362500000000608, 0.00011362499999999914, 0.00011361099999999957, 0.00011361099999999957, 0.00011363799999999924, 0.00011361099999999957, 0.000113597, 0.00011361099999999957, 0.00011362499999999914, 0.0001135550000000013, 0.00011357000000000034, 0.00011359799999999948, 0.00011361099999999957, 0.00011362499999999914, 0.00011369500000000393, 0.000113597, 0.000113597, 0.00011359799999999948, 0.000113597, 0.00011361099999999957, 0.00011367999999999795, 0.000113597, 0.00011361099999999957, 0.00011361099999999957, 0.00011361099999999957, 0.00011362499999999914, 0.000113597, 0.00011361099999999957, 0.00011362499999999914, 0.000113597, 0.00011361199999999905, 0.00011362499999999914, 0.00011358300000000043, 0.00011366699999999785, 0.00011361099999999957, 0.00011361099999999957]</msg>
<status status="PASS" starttime="20201030 15:55:41.789" endtime="20201030 15:55:41.798"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.778" endtime="20201030 15:55:41.801"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:41.811" endtime="20201030 15:55:41.833"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.807" endtime="20201030 15:55:41.834"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.804" endtime="20201030 15:55:41.835"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.301" endtime="20201030 15:55:41.836"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.300" endtime="20201030 15:55:41.836"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:41.858" endtime="20201030 15:55:41.881"></status>
</kw>
<msg timestamp="20201030 15:55:41.882" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:41.854" endtime="20201030 15:55:41.883"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:41.888" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:41.884" endtime="20201030 15:55:41.889"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:41.891" endtime="20201030 15:55:41.894"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.847" endtime="20201030 15:55:41.896"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.842" endtime="20201030 15:55:41.898"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:41.914" endtime="20201030 15:55:42.269"></status>
</kw>
<msg timestamp="20201030 15:55:42.275" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039025125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039146194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:41.911" endtime="20201030 15:55:42.276"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:42.292" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039025125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039146194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:42.278" endtime="20201030 15:55:42.293"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:42.295" endtime="20201030 15:55:42.299"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.904" endtime="20201030 15:55:42.300"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.899" endtime="20201030 15:55:42.302"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:42.311" level="INFO">${PHILIP_RES} = [{'diff': 0.00012106900000000143}, {'diff': 0.00012102800000000219}, {'diff': 0.00012105600000000133}, {'diff': 0.00012104200000000176}, {'diff': 0.00012105600000000133}, {'diff': 0.000121014000000002...</msg>
<status status="PASS" starttime="20201030 15:55:42.303" endtime="20201030 15:55:42.311"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:42.320" level="INFO">${RESULT} = {'diff': [0.00012106900000000143, 0.00012102800000000219, 0.00012105600000000133, 0.00012104200000000176, 0.00012105600000000133, 0.00012101400000000262, 0.00012104200000000176, 0.00012104200000000176...</msg>
<status status="PASS" starttime="20201030 15:55:42.313" endtime="20201030 15:55:42.321"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:42.331" level="INFO">NAME: 22-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:42.328" endtime="20201030 15:55:42.331"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:42.336" level="INFO">VALUE: [0.00012106900000000143, 0.00012102800000000219, 0.00012105600000000133, 0.00012104200000000176, 0.00012105600000000133, 0.00012101400000000262, 0.00012104200000000176, 0.00012104200000000176, 0.00012102800000000219, 0.00012102800000000219, 0.00012104200000000176, 0.00012104200000000176, 0.00012104200000000176, 0.00012102800000000219, 0.00012104200000000176, 0.00012104200000000176, 0.00012104200000000176, 0.00012104200000000176, 0.00012100000000000305, 0.00012102800000000219, 0.00012104200000000176, 0.00012105600000000133, 0.0001211249999999997, 0.00012104200000000176, 0.00012102800000000219, 0.00012102800000000219, 0.00012102800000000219, 0.00012102800000000219, 0.00012104200000000176, 0.00012105600000000133, 0.00012101400000000262, 0.00012102800000000219, 0.00012105600000000133, 0.00012105600000000133, 0.00012105600000000133, 0.00012104200000000176, 0.00012104200000000176, 0.00012099999999999611, 0.00012105600000000133, 0.00012105500000000186, 0.00012104100000000229, 0.00012105499999999492, 0.00012104100000000229, 0.00012104199999999482, 0.00012104200000000176, 0.00012104099999999535, 0.00012106900000000143, 0.00012099999999999611, 0.00012106900000000143, 0.00012099999999999611]</msg>
<status status="PASS" starttime="20201030 15:55:42.333" endtime="20201030 15:55:42.337"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.322" endtime="20201030 15:55:42.339"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:42.350" endtime="20201030 15:55:42.372"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.344" endtime="20201030 15:55:42.373"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.342" endtime="20201030 15:55:42.374"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.838" endtime="20201030 15:55:42.375"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.837" endtime="20201030 15:55:42.375"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:42.397" endtime="20201030 15:55:42.420"></status>
</kw>
<msg timestamp="20201030 15:55:42.421" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:42.393" endtime="20201030 15:55:42.422"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:42.428" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:42.424" endtime="20201030 15:55:42.428"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:42.430" endtime="20201030 15:55:42.434"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.386" endtime="20201030 15:55:42.435"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.381" endtime="20201030 15:55:42.437"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:42.453" endtime="20201030 15:55:42.783"></status>
</kw>
<msg timestamp="20201030 15:55:42.789" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037074222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037202931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:42.450" endtime="20201030 15:55:42.790"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:42.807" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037074222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037202931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:42.792" endtime="20201030 15:55:42.808"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:42.809" endtime="20201030 15:55:42.813"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.443" endtime="20201030 15:55:42.815"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.438" endtime="20201030 15:55:42.816"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:42.825" level="INFO">${PHILIP_RES} = [{'diff': 0.00012870900000000463}, {'diff': 0.0001287360000000043}, {'diff': 0.00012866699999999898}, {'diff': 0.0001286529999999994}, {'diff': 0.00012859700000000113}, {'diff': 0.00012866699999999898...</msg>
<status status="PASS" starttime="20201030 15:55:42.818" endtime="20201030 15:55:42.826"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:42.836" level="INFO">${RESULT} = {'diff': [0.00012870900000000463, 0.0001287360000000043, 0.00012866699999999898, 0.0001286529999999994, 0.00012859700000000113, 0.00012866699999999898, 0.00012861099999999376, 0.0001286529999999994, 0...</msg>
<status status="PASS" starttime="20201030 15:55:42.827" endtime="20201030 15:55:42.836"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:42.846" level="INFO">NAME: 23-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:42.844" endtime="20201030 15:55:42.847"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:42.852" level="INFO">VALUE: [0.00012870900000000463, 0.0001287360000000043, 0.00012866699999999898, 0.0001286529999999994, 0.00012859700000000113, 0.00012866699999999898, 0.00012861099999999376, 0.0001286529999999994, 0.00012867999999999907, 0.00012866699999999898, 0.00012865199999999993, 0.00012865300000000635, 0.0001286529999999994, 0.00012866699999999898, 0.00012866699999999898, 0.00012872299999999726, 0.00012866699999999898, 0.00012866699999999898, 0.00012866699999999898, 0.0001286529999999994, 0.0001286529999999994, 0.00012869399999999864, 0.00012868100000000549, 0.00012866699999999898, 0.00012866699999999898, 0.0001286529999999994, 0.00012867999999999907, 0.00012872200000000472, 0.00012863899999999984, 0.0001286529999999994, 0.00012867999999999907, 0.00012869499999999812, 0.00012862500000000027, 0.0001287230000000042, 0.00012868099999999855, 0.0001286659999999995, 0.0001287079999999982, 0.00012866699999999898, 0.00012865300000000635, 0.00012865199999999993, 0.00012869499999999812, 0.00012866699999999898, 0.0001286529999999994, 0.00012866700000000592, 0.00012867999999999907, 0.00012872199999999778, 0.0001286659999999995, 0.00012862500000000027, 0.00012865199999999993, 0.00012868100000000549]</msg>
<status status="PASS" starttime="20201030 15:55:42.849" endtime="20201030 15:55:42.853"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.838" endtime="20201030 15:55:42.855"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:42.864" endtime="20201030 15:55:42.886"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.860" endtime="20201030 15:55:42.887"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.857" endtime="20201030 15:55:42.888"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.377" endtime="20201030 15:55:42.889"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.376" endtime="20201030 15:55:42.889"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:42.911" endtime="20201030 15:55:42.934"></status>
</kw>
<msg timestamp="20201030 15:55:42.936" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:42.908" endtime="20201030 15:55:42.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:42.942" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:42.938" endtime="20201030 15:55:42.942"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:42.944" endtime="20201030 15:55:42.948"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.900" endtime="20201030 15:55:42.950"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.895" endtime="20201030 15:55:42.951"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:42.968" endtime="20201030 15:55:43.303"></status>
</kw>
<msg timestamp="20201030 15:55:43.309" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037060347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037196806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:42.964" endtime="20201030 15:55:43.310"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:43.327" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037060347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037196806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:43.312" endtime="20201030 15:55:43.328"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:43.329" endtime="20201030 15:55:43.333"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.957" endtime="20201030 15:55:43.335"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.952" endtime="20201030 15:55:43.336"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:43.345" level="INFO">${PHILIP_RES} = [{'diff': 0.0001364589999999985}, {'diff': 0.00013644399999999945}, {'diff': 0.0001364860000000051}, {'diff': 0.00013648599999999816}, {'diff': 0.00013654199999999644}, {'diff': 0.00013648599999999816...</msg>
<status status="PASS" starttime="20201030 15:55:43.338" endtime="20201030 15:55:43.346"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:43.356" level="INFO">${RESULT} = {'diff': [0.0001364589999999985, 0.00013644399999999945, 0.0001364860000000051, 0.00013648599999999816, 0.00013654199999999644, 0.00013648599999999816, 0.0001364719999999986, 0.0001364860000000051, 0....</msg>
<status status="PASS" starttime="20201030 15:55:43.348" endtime="20201030 15:55:43.357"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:43.367" level="INFO">NAME: 24-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:43.365" endtime="20201030 15:55:43.368"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:43.372" level="INFO">VALUE: [0.0001364589999999985, 0.00013644399999999945, 0.0001364860000000051, 0.00013648599999999816, 0.00013654199999999644, 0.00013648599999999816, 0.0001364719999999986, 0.0001364860000000051, 0.00013648599999999816, 0.0001364719999999986, 0.00013648599999999816, 0.00013647200000000553, 0.00013649999999999773, 0.0001364719999999986, 0.00013649999999999773, 0.0001364860000000051, 0.0001364719999999986, 0.00013648599999999816, 0.00013648599999999816, 0.0001364860000000051, 0.00013644500000000587, 0.00013648699999999764, 0.00013649999999999773, 0.0001365139999999973, 0.0001364860000000051, 0.00013648599999999816, 0.00013644399999999945, 0.00013644399999999945, 0.0001364860000000051, 0.00013643099999999936, 0.00013648599999999816, 0.00013648599999999816, 0.0001364719999999986, 0.00013648700000000458, 0.00013648599999999816, 0.00013648599999999816, 0.0001364719999999986, 0.0001364860000000051, 0.00013648699999999764, 0.00013649999999999773, 0.0001364719999999986, 0.0001364860000000051, 0.00013651400000000424, 0.0001364719999999986, 0.00013649999999999773, 0.00013644499999999893, 0.0001364589999999985, 0.00013648599999999816, 0.00013652799999999687, 0.00013640300000000022]</msg>
<status status="PASS" starttime="20201030 15:55:43.369" endtime="20201030 15:55:43.374"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.358" endtime="20201030 15:55:43.376"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:43.385" endtime="20201030 15:55:43.407"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.381" endtime="20201030 15:55:43.408"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.378" endtime="20201030 15:55:43.409"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.891" endtime="20201030 15:55:43.410"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.890" endtime="20201030 15:55:43.410"></status>
</kw>
<kw name="${n} = 25" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:43.432" endtime="20201030 15:55:43.456"></status>
</kw>
<msg timestamp="20201030 15:55:43.457" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:43.428" endtime="20201030 15:55:43.457"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:43.463" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:43.459" endtime="20201030 15:55:43.464"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:43.465" endtime="20201030 15:55:43.469"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.421" endtime="20201030 15:55:43.471"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.416" endtime="20201030 15:55:43.472"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:43.489" endtime="20201030 15:55:43.827"></status>
</kw>
<msg timestamp="20201030 15:55:43.834" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03707025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037214764, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:55:43.485" endtime="20201030 15:55:43.834"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:43.851" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03707025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037214764, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:55:43.836" endtime="20201030 15:55:43.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:43.853" endtime="20201030 15:55:43.857"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.478" endtime="20201030 15:55:43.859"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.473" endtime="20201030 15:55:43.860"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:43.870" level="INFO">${PHILIP_RES} = [{'diff': 0.00014451399999999837}, {'diff': 0.0001444999999999988}, {'diff': 0.00014451399999999837}, {'diff': 0.0001445129999999989}, {'diff': 0.0001445140000000053}, {'diff': 0.0001444999999999988},...</msg>
<status status="PASS" starttime="20201030 15:55:43.862" endtime="20201030 15:55:43.870"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:43.879" level="INFO">${RESULT} = {'diff': [0.00014451399999999837, 0.0001444999999999988, 0.00014451399999999837, 0.0001445129999999989, 0.0001445140000000053, 0.0001444999999999988, 0.00014448599999999923, 0.00014448599999999923, 0....</msg>
<status status="PASS" starttime="20201030 15:55:43.872" endtime="20201030 15:55:43.879"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:43.889" level="INFO">NAME: 25-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:43.887" endtime="20201030 15:55:43.890"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:43.895" level="INFO">VALUE: [0.00014451399999999837, 0.0001444999999999988, 0.00014451399999999837, 0.0001445129999999989, 0.0001445140000000053, 0.0001444999999999988, 0.00014448599999999923, 0.00014448599999999923, 0.0001444869999999987, 0.00014450000000000573, 0.00014448599999999923, 0.0001445140000000053, 0.00014451399999999837, 0.00014456899999999717, 0.00014448599999999923, 0.00014456899999999717, 0.00014454200000000444, 0.00014448599999999923, 0.0001444999999999988, 0.0001444999999999988, 0.00014451399999999837, 0.0001444999999999988, 0.00014448599999999923, 0.00014445899999999956, 0.00014448599999999923, 0.00014452799999999794, 0.0001444999999999988, 0.00014448599999999923, 0.00014448599999999923, 0.00014448599999999923, 0.00014450000000000573, 0.0001444999999999988, 0.00014451399999999837, 0.0001444999999999988, 0.000144445, 0.0001445140000000053, 0.00014447199999999966, 0.00014450000000000573, 0.00014451399999999837, 0.000144445, 0.00014451399999999837, 0.00014448599999999923, 0.00014448600000000617, 0.00014456999999999665, 0.00014451399999999837, 0.0001444999999999988, 0.00014443100000000042, 0.0001444999999999988, 0.00014448599999999923, 0.00014451300000000583]</msg>
<status status="PASS" starttime="20201030 15:55:43.892" endtime="20201030 15:55:43.896"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.881" endtime="20201030 15:55:43.898"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:43.907" endtime="20201030 15:55:43.929"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.903" endtime="20201030 15:55:43.931"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.900" endtime="20201030 15:55:43.931"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.412" endtime="20201030 15:55:43.932"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.411" endtime="20201030 15:55:43.932"></status>
</kw>
<kw name="${n} = 26" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:43.954" endtime="20201030 15:55:43.980"></status>
</kw>
<msg timestamp="20201030 15:55:43.981" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:43.951" endtime="20201030 15:55:43.981"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:43.987" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:43.983" endtime="20201030 15:55:43.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:43.990" endtime="20201030 15:55:43.993"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.943" endtime="20201030 15:55:43.995"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.938" endtime="20201030 15:55:43.996"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:44.013" endtime="20201030 15:55:44.348"></status>
</kw>
<msg timestamp="20201030 15:55:44.355" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038575778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038728403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:44.010" endtime="20201030 15:55:44.355"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:44.372" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038575778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038728403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:44.357" endtime="20201030 15:55:44.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:44.374" endtime="20201030 15:55:44.378"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.003" endtime="20201030 15:55:44.380"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.998" endtime="20201030 15:55:44.381"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:44.390" level="INFO">${PHILIP_RES} = [{'diff': 0.00015262500000000345}, {'diff': 0.00015272200000000097}, {'diff': 0.0001527080000000014}, {'diff': 0.00015270900000000087}, {'diff': 0.00015269400000000183}, {'diff': 0.0001527360000000005...</msg>
<status status="PASS" starttime="20201030 15:55:44.383" endtime="20201030 15:55:44.391"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:44.399" level="INFO">${RESULT} = {'diff': [0.00015262500000000345, 0.00015272200000000097, 0.0001527080000000014, 0.00015270900000000087, 0.00015269400000000183, 0.00015273600000000054, 0.00015270900000000087, 0.0001526950000000013, ...</msg>
<status status="PASS" starttime="20201030 15:55:44.392" endtime="20201030 15:55:44.400"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:44.410" level="INFO">NAME: 26-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:44.408" endtime="20201030 15:55:44.411"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:44.415" level="INFO">VALUE: [0.00015262500000000345, 0.00015272200000000097, 0.0001527080000000014, 0.00015270900000000087, 0.00015269400000000183, 0.00015273600000000054, 0.00015270900000000087, 0.0001526950000000013, 0.0001527080000000014, 0.00015272200000000097, 0.00015270900000000087, 0.0001527500000000001, 0.00015272200000000097, 0.00015270900000000087, 0.0001526950000000013, 0.00015266599999999575, 0.00015270900000000087, 0.0001526950000000013, 0.0001526939999999949, 0.0001526939999999949, 0.00015270899999999393, 0.0001526939999999949, 0.0001526939999999949, 0.0001527229999999935, 0.00015270900000000087, 0.00015272200000000097, 0.00015273600000000054, 0.00015272300000000044, 0.0001527080000000014, 0.0001527080000000014, 0.00015272300000000044, 0.0001527080000000014, 0.00015272200000000097, 0.00015268000000000226, 0.0001527080000000014, 0.0001527080000000014, 0.00015272200000000097, 0.0001526950000000013, 0.00015272200000000097, 0.00015268000000000226, 0.00015268000000000226, 0.00015268100000000173, 0.0001527080000000014, 0.00015272200000000097, 0.00015276399999999968, 0.00015272200000000097, 0.0001527080000000014, 0.00015270900000000087, 0.00015269400000000183, 0.00015279199999999882]</msg>
<status status="PASS" starttime="20201030 15:55:44.412" endtime="20201030 15:55:44.417"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.401" endtime="20201030 15:55:44.419"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:44.430" endtime="20201030 15:55:44.451"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.424" endtime="20201030 15:55:44.453"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.421" endtime="20201030 15:55:44.453"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.934" endtime="20201030 15:55:44.454"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.933" endtime="20201030 15:55:44.454"></status>
</kw>
<kw name="${n} = 27" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:44.476" endtime="20201030 15:55:44.502"></status>
</kw>
<msg timestamp="20201030 15:55:44.503" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:44.473" endtime="20201030 15:55:44.503"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:44.509" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:44.505" endtime="20201030 15:55:44.510"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:44.512" endtime="20201030 15:55:44.515"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.466" endtime="20201030 15:55:44.517"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.460" endtime="20201030 15:55:44.519"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:44.535" endtime="20201030 15:55:44.872"></status>
</kw>
<msg timestamp="20201030 15:55:44.879" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037089972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037251097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:44.532" endtime="20201030 15:55:44.880"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:44.897" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037089972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037251097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:44.881" endtime="20201030 15:55:44.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:44.899" endtime="20201030 15:55:44.903"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.524" endtime="20201030 15:55:44.904"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.520" endtime="20201030 15:55:44.906"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:44.915" level="INFO">${PHILIP_RES} = [{'diff': 0.00016112499999999808}, {'diff': 0.0001611109999999985}, {'diff': 0.00016113799999999817}, {'diff': 0.00016111100000000544}, {'diff': 0.00016113899999999765}, {'diff': 0.0001610969999999989...</msg>
<status status="PASS" starttime="20201030 15:55:44.907" endtime="20201030 15:55:44.915"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:44.926" level="INFO">${RESULT} = {'diff': [0.00016112499999999808, 0.0001611109999999985, 0.00016113799999999817, 0.00016111100000000544, 0.00016113899999999765, 0.00016109699999999894, 0.00016115300000000415, 0.00016112499999999808,...</msg>
<status status="PASS" starttime="20201030 15:55:44.917" endtime="20201030 15:55:44.926"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:44.936" level="INFO">NAME: 27-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:44.934" endtime="20201030 15:55:44.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:44.941" level="INFO">VALUE: [0.00016112499999999808, 0.0001611109999999985, 0.00016113799999999817, 0.00016111100000000544, 0.00016113899999999765, 0.00016109699999999894, 0.00016115300000000415, 0.00016112499999999808, 0.0001611109999999985, 0.00016109699999999894, 0.0001611109999999985, 0.00016112499999999808, 0.0001611109999999985, 0.00016109699999999894, 0.00016113899999999765, 0.00016106999999999927, 0.0001611109999999985, 0.0001611109999999985, 0.00016109699999999894, 0.00016112499999999808, 0.00016111199999999798, 0.00016111100000000544, 0.0001610559999999997, 0.00016115299999999722, 0.0001611109999999985, 0.0001611109999999985, 0.00016109699999999894, 0.00016109700000000587, 0.0001611109999999985, 0.00016112499999999808, 0.00016111100000000544, 0.00016112499999999808, 0.0001611109999999985, 0.00016106999999999927, 0.0001611109999999985, 0.00016109699999999894, 0.00016104200000000013, 0.00016112499999999808, 0.0001610559999999997, 0.00016112500000000501, 0.0001611109999999985, 0.0001611109999999985, 0.0001611810000000033, 0.00016115299999999722, 0.00016108299999999937, 0.00016113900000000458, 0.0001610979999999984, 0.0001611109999999985, 0.00016111100000000544, 0.00016113799999999817]</msg>
<status status="PASS" starttime="20201030 15:55:44.938" endtime="20201030 15:55:44.943"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.927" endtime="20201030 15:55:44.944"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:44.954" endtime="20201030 15:55:44.975"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.950" endtime="20201030 15:55:44.977"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.947" endtime="20201030 15:55:44.978"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.457" endtime="20201030 15:55:44.978"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.455" endtime="20201030 15:55:44.979"></status>
</kw>
<kw name="${n} = 28" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:45.000" endtime="20201030 15:55:45.026"></status>
</kw>
<msg timestamp="20201030 15:55:45.027" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:44.997" endtime="20201030 15:55:45.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:45.034" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:45.030" endtime="20201030 15:55:45.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:45.036" endtime="20201030 15:55:45.040"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.990" endtime="20201030 15:55:45.041"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.985" endtime="20201030 15:55:45.043"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:45.059" endtime="20201030 15:55:45.436"></status>
</kw>
<msg timestamp="20201030 15:55:45.443" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037244431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037414139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:45.056" endtime="20201030 15:55:45.444"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:45.462" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037244431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037414139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:45.446" endtime="20201030 15:55:45.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:45.464" endtime="20201030 15:55:45.469"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.049" endtime="20201030 15:55:45.471"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.044" endtime="20201030 15:55:45.472"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:45.482" level="INFO">${PHILIP_RES} = [{'diff': 0.00016970799999999758}, {'diff': 0.00016965299999999878}, {'diff': 0.00016969400000000495}, {'diff': 0.0001696949999999975}, {'diff': 0.00016970799999999758}, {'diff': 0.0001697220000000041...</msg>
<status status="PASS" starttime="20201030 15:55:45.474" endtime="20201030 15:55:45.483"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:45.494" level="INFO">${RESULT} = {'diff': [0.00016970799999999758, 0.00016965299999999878, 0.00016969400000000495, 0.0001696949999999975, 0.00016970799999999758, 0.0001697220000000041, 0.00016972300000000357, 0.00016970799999999758, ...</msg>
<status status="PASS" starttime="20201030 15:55:45.484" endtime="20201030 15:55:45.494"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:45.505" level="INFO">NAME: 28-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:45.503" endtime="20201030 15:55:45.506"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:45.511" level="INFO">VALUE: [0.00016970799999999758, 0.00016965299999999878, 0.00016969400000000495, 0.0001696949999999975, 0.00016970799999999758, 0.0001697220000000041, 0.00016972300000000357, 0.00016970799999999758, 0.00016973600000000366, 0.00016969400000000495, 0.00016972199999999715, 0.00016968099999999792, 0.00016970800000000452, 0.0001696949999999975, 0.00016970799999999758, 0.00016970799999999758, 0.000169709000000004, 0.0001697499999999963, 0.00016970799999999758, 0.00016969400000000495, 0.00016970799999999758, 0.00016970899999999706, 0.00016972199999999715, 0.00016970800000000452, 0.00016972199999999715, 0.00016972199999999715, 0.00016972300000000357, 0.0001697499999999963, 0.00016970899999999706, 0.0001697220000000041, 0.00016970800000000452, 0.00016966699999999835, 0.00016970799999999758, 0.0001697220000000041, 0.00016972199999999715, 0.00016972199999999715, 0.00016966700000000529, 0.0001697220000000041, 0.00016972199999999715, 0.00016970899999999706, 0.0001697220000000041, 0.00016976399999999586, 0.00016970799999999758, 0.0001697220000000041, 0.000169709000000004, 0.00016972199999999715, 0.0001696949999999975, 0.00016970800000000452, 0.00016970799999999758, 0.00016973599999999672]</msg>
<status status="PASS" starttime="20201030 15:55:45.508" endtime="20201030 15:55:45.513"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.496" endtime="20201030 15:55:45.514"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:45.525" endtime="20201030 15:55:45.547"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.520" endtime="20201030 15:55:45.549"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.517" endtime="20201030 15:55:45.550"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.981" endtime="20201030 15:55:45.551"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.980" endtime="20201030 15:55:45.551"></status>
</kw>
<kw name="${n} = 29" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:45.575" endtime="20201030 15:55:45.602"></status>
</kw>
<msg timestamp="20201030 15:55:45.603" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:45.571" endtime="20201030 15:55:45.604"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:45.610" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:45.606" endtime="20201030 15:55:45.611"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:45.613" endtime="20201030 15:55:45.617"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.563" endtime="20201030 15:55:45.618"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.557" endtime="20201030 15:55:45.620"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:45.638" endtime="20201030 15:55:46.018"></status>
</kw>
<msg timestamp="20201030 15:55:46.025" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040324181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040502694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:45.634" endtime="20201030 15:55:46.026"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:46.044" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040324181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040502694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:46.027" endtime="20201030 15:55:46.044"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:46.046" endtime="20201030 15:55:46.051"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.627" endtime="20201030 15:55:46.052"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.622" endtime="20201030 15:55:46.054"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:46.064" level="INFO">${PHILIP_RES} = [{'diff': 0.0001785129999999982}, {'diff': 0.00017858400000000246}, {'diff': 0.0001784999999999981}, {'diff': 0.0001785140000000046}, {'diff': 0.0001784720000000059}, {'diff': 0.00017851300000000514},...</msg>
<status status="PASS" starttime="20201030 15:55:46.056" endtime="20201030 15:55:46.064"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:46.074" level="INFO">${RESULT} = {'diff': [0.0001785129999999982, 0.00017858400000000246, 0.0001784999999999981, 0.0001785140000000046, 0.0001784720000000059, 0.00017851300000000514, 0.00017854200000000375, 0.00017851399999999767, 0....</msg>
<status status="PASS" starttime="20201030 15:55:46.066" endtime="20201030 15:55:46.074"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:46.085" level="INFO">NAME: 29-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:46.082" endtime="20201030 15:55:46.086"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:46.091" level="INFO">VALUE: [0.0001785129999999982, 0.00017858400000000246, 0.0001784999999999981, 0.0001785140000000046, 0.0001784720000000059, 0.00017851300000000514, 0.00017854200000000375, 0.00017851399999999767, 0.00017854199999999681, 0.0001784999999999981, 0.0001784999999999981, 0.00017844399999999982, 0.00017848599999999853, 0.00017848600000000547, 0.00017850000000000504, 0.00017850000000000504, 0.00017852699999999777, 0.0001784999999999981, 0.00017848599999999853, 0.00017852799999999724, 0.0001784999999999981, 0.0001784999999999981, 0.00017851399999999767, 0.0001784999999999981, 0.0001785140000000046, 0.00017855500000000385, 0.00017852699999999777, 0.00017848599999999853, 0.00017848599999999853, 0.00017844399999999982, 0.0001784999999999981, 0.00017848599999999853, 0.0001785129999999982, 0.0001784999999999981, 0.00017847199999999896, 0.00017850000000000504, 0.0001784999999999981, 0.00017852699999999777, 0.00017848599999999853, 0.00017843000000000026, 0.00017851399999999767, 0.00017848599999999853, 0.00017851399999999767, 0.0001785129999999982, 0.00017850000000000504, 0.0001785140000000046, 0.00017854200000000375, 0.0001784999999999981, 0.00017843000000000026, 0.00017855599999999638]</msg>
<status status="PASS" starttime="20201030 15:55:46.087" endtime="20201030 15:55:46.092"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.076" endtime="20201030 15:55:46.094"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:46.104" endtime="20201030 15:55:46.126"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.099" endtime="20201030 15:55:46.128"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.097" endtime="20201030 15:55:46.129"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.553" endtime="20201030 15:55:46.130"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.552" endtime="20201030 15:55:46.130"></status>
</kw>
<kw name="${n} = 30" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:46.153" endtime="20201030 15:55:46.183"></status>
</kw>
<msg timestamp="20201030 15:55:46.184" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:46.150" endtime="20201030 15:55:46.185"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:46.191" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:46.187" endtime="20201030 15:55:46.192"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:46.193" endtime="20201030 15:55:46.197"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.142" endtime="20201030 15:55:46.199"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.136" endtime="20201030 15:55:46.201"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:46.218" endtime="20201030 15:55:46.587"></status>
</kw>
<msg timestamp="20201030 15:55:46.594" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041452972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041640444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:46.215" endtime="20201030 15:55:46.595"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:46.613" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041452972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041640444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:46.597" endtime="20201030 15:55:46.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:46.615" endtime="20201030 15:55:46.619"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.207" endtime="20201030 15:55:46.621"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.202" endtime="20201030 15:55:46.623"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:46.633" level="INFO">${PHILIP_RES} = [{'diff': 0.00018747200000000103}, {'diff': 0.0001875279999999993}, {'diff': 0.0001874719999999941}, {'diff': 0.00018751399999999974}, {'diff': 0.00018750000000000017}, {'diff': 0.0001874860000000006}...</msg>
<status status="PASS" starttime="20201030 15:55:46.625" endtime="20201030 15:55:46.633"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:46.643" level="INFO">${RESULT} = {'diff': [0.00018747200000000103, 0.0001875279999999993, 0.0001874719999999941, 0.00018751399999999974, 0.00018750000000000017, 0.0001874860000000006, 0.00018750000000000017, 0.0001874860000000006, 0....</msg>
<status status="PASS" starttime="20201030 15:55:46.635" endtime="20201030 15:55:46.643"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:46.654" level="INFO">NAME: 30-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:46.651" endtime="20201030 15:55:46.654"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:46.659" level="INFO">VALUE: [0.00018747200000000103, 0.0001875279999999993, 0.0001874719999999941, 0.00018751399999999974, 0.00018750000000000017, 0.0001874860000000006, 0.00018750000000000017, 0.0001874860000000006, 0.00018750000000000017, 0.00018745800000000146, 0.00018747200000000103, 0.0001874860000000006, 0.00018750000000000017, 0.00018750000000000017, 0.00018745800000000146, 0.0001874860000000006, 0.0001874860000000006, 0.0001874440000000019, 0.00018750000000000017, 0.0001875279999999993, 0.00018744399999999495, 0.0001874860000000006, 0.00018750000000000017, 0.00018743000000000232, 0.00018748599999999366, 0.0001874860000000006, 0.0001874860000000006, 0.00018747200000000103, 0.00018752699999999983, 0.00018747200000000103, 0.0001874860000000006, 0.000187458999999994, 0.00018747200000000103, 0.0001874860000000006, 0.00018747200000000103, 0.00018750000000000017, 0.00018750000000000017, 0.00018750000000000017, 0.00018751300000000026, 0.00018747200000000103, 0.00018747200000000103, 0.0001874310000000018, 0.0001874860000000006, 0.0001875279999999993, 0.0001874310000000018, 0.00018747200000000103, 0.00018750000000000017, 0.00018750000000000017, 0.0001874860000000006, 0.0001874029999999957]</msg>
<status status="PASS" starttime="20201030 15:55:46.656" endtime="20201030 15:55:46.661"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.644" endtime="20201030 15:55:46.663"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:46.675" endtime="20201030 15:55:46.698"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.668" endtime="20201030 15:55:46.700"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.666" endtime="20201030 15:55:46.700"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.132" endtime="20201030 15:55:46.701"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.131" endtime="20201030 15:55:46.701"></status>
</kw>
<kw name="${n} = 31" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:46.725" endtime="20201030 15:55:46.754"></status>
</kw>
<msg timestamp="20201030 15:55:46.756" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:46.721" endtime="20201030 15:55:46.756"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:46.763" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:46.758" endtime="20201030 15:55:46.763"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:46.765" endtime="20201030 15:55:46.769"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.713" endtime="20201030 15:55:46.771"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.708" endtime="20201030 15:55:46.772"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:46.791" endtime="20201030 15:55:47.152"></status>
</kw>
<msg timestamp="20201030 15:55:47.159" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040957236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041153917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:46.787" endtime="20201030 15:55:47.159"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:47.177" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040957236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041153917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:47.161" endtime="20201030 15:55:47.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:47.180" endtime="20201030 15:55:47.184"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.779" endtime="20201030 15:55:47.186"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.774" endtime="20201030 15:55:47.188"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:47.197" level="INFO">${PHILIP_RES} = [{'diff': 0.00019668099999999716}, {'diff': 0.00019669399999999726}, {'diff': 0.00019669399999999726}, {'diff': 0.00019666700000000453}, {'diff': 0.0001966810000000041}, {'diff': 0.0001966670000000045...</msg>
<status status="PASS" starttime="20201030 15:55:47.189" endtime="20201030 15:55:47.198"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:47.209" level="INFO">${RESULT} = {'diff': [0.00019668099999999716, 0.00019669399999999726, 0.00019669399999999726, 0.00019666700000000453, 0.0001966810000000041, 0.00019666700000000453, 0.0001966799999999977, 0.00019666599999999812, ...</msg>
<status status="PASS" starttime="20201030 15:55:47.200" endtime="20201030 15:55:47.209"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:47.220" level="INFO">NAME: 31-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:47.217" endtime="20201030 15:55:47.221"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:47.226" level="INFO">VALUE: [0.00019668099999999716, 0.00019669399999999726, 0.00019669399999999726, 0.00019666700000000453, 0.0001966810000000041, 0.00019666700000000453, 0.0001966799999999977, 0.00019666599999999812, 0.00019665299999999802, 0.00019669499999999673, 0.0001966810000000041, 0.00019668000000000463, 0.0001967360000000029, 0.00019668099999999716, 0.0001966940000000042, 0.0001966799999999977, 0.0001966799999999977, 0.00019665299999999802, 0.00019666700000000453, 0.00019672200000000334, 0.0001966799999999977, 0.0001966799999999977, 0.0001966669999999976, 0.0001966669999999976, 0.0001966669999999976, 0.00019666600000000506, 0.0001966810000000041, 0.00019670900000000324, 0.0001966669999999976, 0.00019665299999999802, 0.0001966799999999977, 0.0001966669999999976, 0.00019666700000000453, 0.00019669500000000367, 0.0001966799999999977, 0.00019666599999999812, 0.0001966669999999976, 0.00019668099999999716, 0.00019665299999999802, 0.0001966940000000042, 0.00019668000000000463, 0.0001966810000000041, 0.00019668099999999716, 0.0001966799999999977, 0.00019665199999999855, 0.00019662499999999888, 0.00019665300000000496, 0.00019666700000000453, 0.00019666700000000453, 0.00019666599999999812]</msg>
<status status="PASS" starttime="20201030 15:55:47.222" endtime="20201030 15:55:47.232"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.211" endtime="20201030 15:55:47.234"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:47.244" endtime="20201030 15:55:47.266"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.240" endtime="20201030 15:55:47.268"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.237" endtime="20201030 15:55:47.269"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.704" endtime="20201030 15:55:47.270"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.702" endtime="20201030 15:55:47.270"></status>
</kw>
<kw name="${n} = 32" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:47.293" endtime="20201030 15:55:47.323"></status>
</kw>
<msg timestamp="20201030 15:55:47.325" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:47.290" endtime="20201030 15:55:47.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:47.331" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:47.327" endtime="20201030 15:55:47.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:47.334" endtime="20201030 15:55:47.338"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.282" endtime="20201030 15:55:47.340"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.277" endtime="20201030 15:55:47.341"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:47.359" endtime="20201030 15:55:47.733"></status>
</kw>
<msg timestamp="20201030 15:55:47.740" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040023319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040229347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:47.356" endtime="20201030 15:55:47.740"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:47.758" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040023319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040229347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:47.742" endtime="20201030 15:55:47.759"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:47.761" endtime="20201030 15:55:47.765"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.348" endtime="20201030 15:55:47.767"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.343" endtime="20201030 15:55:47.769"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:47.779" level="INFO">${PHILIP_RES} = [{'diff': 0.000206027999999997}, {'diff': 0.00020605599999999613}, {'diff': 0.00020608300000000274}, {'diff': 0.00020602800000000393}, {'diff': 0.00020601299999999795}, {'diff': 0.00020605599999999613...</msg>
<status status="PASS" starttime="20201030 15:55:47.771" endtime="20201030 15:55:47.780"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:47.792" level="INFO">${RESULT} = {'diff': [0.000206027999999997, 0.00020605599999999613, 0.00020608300000000274, 0.00020602800000000393, 0.00020601299999999795, 0.00020605599999999613, 0.00020609699999999537, 0.00020605600000000307, ...</msg>
<status status="PASS" starttime="20201030 15:55:47.782" endtime="20201030 15:55:47.792"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:47.803" level="INFO">NAME: 32-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:47.801" endtime="20201030 15:55:47.804"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:47.809" level="INFO">VALUE: [0.000206027999999997, 0.00020605599999999613, 0.00020608300000000274, 0.00020602800000000393, 0.00020601299999999795, 0.00020605599999999613, 0.00020609699999999537, 0.00020605600000000307, 0.00020605600000000307, 0.0002060550000000036, 0.0002060699999999957, 0.00020606899999999623, 0.00020605600000000307, 0.00020599999999999785, 0.0002060420000000035, 0.00020598599999999828, 0.00020605599999999613, 0.00020605499999999666, 0.0002060550000000036, 0.0002060550000000036, 0.00020605499999999666, 0.0002060699999999957, 0.0002060829999999958, 0.00020607000000000264, 0.00020604100000000403, 0.00020605600000000307, 0.0002060829999999958, 0.00020605499999999666, 0.00020605600000000307, 0.00020606900000000317, 0.0002060420000000035, 0.00020608300000000274, 0.00020608399999999527, 0.00020605499999999666, 0.0002060420000000035, 0.0002060420000000035, 0.0002060420000000035, 0.00020605599999999613, 0.0002060409999999971, 0.00020602800000000393, 0.00020604100000000403, 0.00020605600000000307, 0.00020598599999999828, 0.00020605599999999613, 0.0002060420000000035, 0.0002060420000000035, 0.00020602700000000446, 0.00020598599999999828, 0.00020604199999999656, 0.0002060409999999971]</msg>
<status status="PASS" starttime="20201030 15:55:47.806" endtime="20201030 15:55:47.811"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.794" endtime="20201030 15:55:47.813"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:47.823" endtime="20201030 15:55:47.845"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.818" endtime="20201030 15:55:47.847"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.815" endtime="20201030 15:55:47.848"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.272" endtime="20201030 15:55:47.848"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.271" endtime="20201030 15:55:47.849"></status>
</kw>
<kw name="${n} = 33" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:47.872" endtime="20201030 15:55:47.903"></status>
</kw>
<msg timestamp="20201030 15:55:47.904" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:47.868" endtime="20201030 15:55:47.905"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:47.911" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:47.907" endtime="20201030 15:55:47.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:47.913" endtime="20201030 15:55:47.917"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.861" endtime="20201030 15:55:47.919"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.855" endtime="20201030 15:55:47.922"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:47.940" endtime="20201030 15:55:48.311"></status>
</kw>
<msg timestamp="20201030 15:55:48.318" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039912417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040128056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:47.936" endtime="20201030 15:55:48.318"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:48.337" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039912417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040128056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:48.320" endtime="20201030 15:55:48.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:48.339" endtime="20201030 15:55:48.343"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.928" endtime="20201030 15:55:48.345"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.923" endtime="20201030 15:55:48.347"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:48.357" level="INFO">${PHILIP_RES} = [{'diff': 0.00021563900000000358}, {'diff': 0.00021563899999999664}, {'diff': 0.000215625000000004}, {'diff': 0.00021559699999999793}, {'diff': 0.0002155689999999988}, {'diff': 0.00021563900000000358}...</msg>
<status status="PASS" starttime="20201030 15:55:48.348" endtime="20201030 15:55:48.357"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:48.366" level="INFO">${RESULT} = {'diff': [0.00021563900000000358, 0.00021563899999999664, 0.000215625000000004, 0.00021559699999999793, 0.0002155689999999988, 0.00021563900000000358, 0.0002156109999999975, 0.000215625000000004, 0.00...</msg>
<status status="PASS" starttime="20201030 15:55:48.359" endtime="20201030 15:55:48.367"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:48.377" level="INFO">NAME: 33-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:48.375" endtime="20201030 15:55:48.378"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:48.383" level="INFO">VALUE: [0.00021563900000000358, 0.00021563899999999664, 0.000215625000000004, 0.00021559699999999793, 0.0002155689999999988, 0.00021563900000000358, 0.0002156109999999975, 0.000215625000000004, 0.00021566699999999578, 0.0002156109999999975, 0.0002156120000000039, 0.0002156109999999975, 0.0002156120000000039, 0.00021563900000000358, 0.00021562499999999707, 0.000215625000000004, 0.0002156109999999975, 0.00021562499999999707, 0.00021561100000000444, 0.00021562499999999707, 0.00021561100000000444, 0.00021562499999999707, 0.00021563899999999664, 0.000215625000000004, 0.00021559699999999793, 0.00021561199999999697, 0.00021566700000000272, 0.00021563899999999664, 0.00021563900000000358, 0.00021563899999999664, 0.00021559699999999793, 0.00021565200000000367, 0.0002156109999999975, 0.00021561100000000444, 0.000215625000000004, 0.00021563899999999664, 0.0002156120000000039, 0.00021559699999999793, 0.0002155979999999974, 0.00021561100000000444, 0.00021566699999999578, 0.000215625000000004, 0.00021563900000000358, 0.00021563899999999664, 0.00021559700000000487, 0.00021568099999999535, 0.00021569399999999544, 0.00021558400000000477, 0.00021559699999999793, 0.0002156120000000039]</msg>
<status status="PASS" starttime="20201030 15:55:48.380" endtime="20201030 15:55:48.385"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.368" endtime="20201030 15:55:48.387"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:48.397" endtime="20201030 15:55:48.419"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.392" endtime="20201030 15:55:48.421"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.390" endtime="20201030 15:55:48.422"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.851" endtime="20201030 15:55:48.422"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.850" endtime="20201030 15:55:48.423"></status>
</kw>
<kw name="${n} = 34" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:48.447" endtime="20201030 15:55:48.480"></status>
</kw>
<msg timestamp="20201030 15:55:48.481" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:48.443" endtime="20201030 15:55:48.482"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:48.488" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:48.484" endtime="20201030 15:55:48.489"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:48.491" endtime="20201030 15:55:48.495"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.435" endtime="20201030 15:55:48.496"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.430" endtime="20201030 15:55:48.498"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:48.516" endtime="20201030 15:55:48.804"></status>
</kw>
<msg timestamp="20201030 15:55:48.807" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041867889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042093292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:48.512" endtime="20201030 15:55:48.807"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:48.815" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041867889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042093292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:48.808" endtime="20201030 15:55:48.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:48.817" endtime="20201030 15:55:48.819"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.504" endtime="20201030 15:55:48.819"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.499" endtime="20201030 15:55:48.820"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:48.827" level="INFO">${PHILIP_RES} = [{'diff': 0.00022540299999999902}, {'diff': 0.00022538899999999945}, {'diff': 0.00022537499999999988}, {'diff': 0.00022537499999999988}, {'diff': 0.00022537499999999988}, {'diff': 0.000225389000000006...</msg>
<status status="PASS" starttime="20201030 15:55:48.821" endtime="20201030 15:55:48.828"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:48.837" level="INFO">${RESULT} = {'diff': [0.00022540299999999902, 0.00022538899999999945, 0.00022537499999999988, 0.00022537499999999988, 0.00022537499999999988, 0.0002253890000000064, 0.00022537499999999988, 0.00022540299999999902,...</msg>
<status status="PASS" starttime="20201030 15:55:48.830" endtime="20201030 15:55:48.838"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:48.849" level="INFO">NAME: 34-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:48.846" endtime="20201030 15:55:48.849"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:48.854" level="INFO">VALUE: [0.00022540299999999902, 0.00022538899999999945, 0.00022537499999999988, 0.00022537499999999988, 0.00022537499999999988, 0.0002253890000000064, 0.00022537499999999988, 0.00022540299999999902, 0.00022540199999999955, 0.00022538899999999945, 0.00022537499999999988, 0.00022534700000000074, 0.00022538899999999945, 0.00022538899999999945, 0.00022538899999999945, 0.00022537499999999988, 0.00022537499999999988, 0.0002253610000000003, 0.00022537499999999988, 0.00022540199999999955, 0.00022540299999999902, 0.00022537499999999988, 0.00022538899999999945, 0.00022538899999999945, 0.00022545799999999783, 0.00022534700000000074, 0.00022538899999999945, 0.0002253610000000003, 0.00022538799999999998, 0.00022538899999999945, 0.0002253610000000003, 0.00022538899999999945, 0.00022537499999999988, 0.00022538899999999945, 0.00022537499999999988, 0.00022538899999999945, 0.00022538899999999945, 0.0002254589999999973, 0.00022529100000000246, 0.00022538799999999998, 0.0002254299999999987, 0.0002253610000000003, 0.00022538899999999945, 0.00022540299999999902, 0.00022536199999999978, 0.00022541599999999912, 0.00022538899999999945, 0.0002253890000000064, 0.00022540300000000596, 0.00022537499999999294]</msg>
<status status="PASS" starttime="20201030 15:55:48.851" endtime="20201030 15:55:48.856"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.839" endtime="20201030 15:55:48.858"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:48.869" endtime="20201030 15:55:48.892"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.863" endtime="20201030 15:55:48.893"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.861" endtime="20201030 15:55:48.894"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.425" endtime="20201030 15:55:48.895"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.424" endtime="20201030 15:55:48.895"></status>
</kw>
<kw name="${n} = 35" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:48.918" endtime="20201030 15:55:48.950"></status>
</kw>
<msg timestamp="20201030 15:55:48.951" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:48.915" endtime="20201030 15:55:48.952"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:48.958" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:48.954" endtime="20201030 15:55:48.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:48.960" endtime="20201030 15:55:48.964"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.907" endtime="20201030 15:55:48.966"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.902" endtime="20201030 15:55:48.968"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:48.986" endtime="20201030 15:55:49.369"></status>
</kw>
<msg timestamp="20201030 15:55:49.375" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039576319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039811681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:48.982" endtime="20201030 15:55:49.376"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:49.393" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039576319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039811681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:49.378" endtime="20201030 15:55:49.394"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:49.395" endtime="20201030 15:55:49.399"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.974" endtime="20201030 15:55:49.401"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.969" endtime="20201030 15:55:49.404"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:49.414" level="INFO">${PHILIP_RES} = [{'diff': 0.00023536200000000285}, {'diff': 0.00023534699999999686}, {'diff': 0.00023534699999999686}, {'diff': 0.0002353470000000038}, {'diff': 0.00023534699999999686}, {'diff': 0.0002353200000000041...</msg>
<status status="PASS" starttime="20201030 15:55:49.406" endtime="20201030 15:55:49.415"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:49.427" level="INFO">${RESULT} = {'diff': [0.00023536200000000285, 0.00023534699999999686, 0.00023534699999999686, 0.0002353470000000038, 0.00023534699999999686, 0.00023532000000000414, 0.0002353470000000038, 0.0002353329999999973, 0...</msg>
<status status="PASS" starttime="20201030 15:55:49.417" endtime="20201030 15:55:49.428"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:49.440" level="INFO">NAME: 35-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:49.437" endtime="20201030 15:55:49.441"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:49.447" level="INFO">VALUE: [0.00023536200000000285, 0.00023534699999999686, 0.00023534699999999686, 0.0002353470000000038, 0.00023534699999999686, 0.00023532000000000414, 0.0002353470000000038, 0.0002353329999999973, 0.0002353470000000038, 0.000235374999999996, 0.00023531899999999772, 0.0002353890000000025, 0.00023533399999999677, 0.00023536100000000337, 0.00023533399999999677, 0.00023534799999999634, 0.0002353340000000037, 0.00023529199999999806, 0.0002353470000000038, 0.0002353470000000038, 0.00023531899999999772, 0.0002353470000000038, 0.00023538899999999557, 0.0002353329999999973, 0.00023531900000000466, 0.00023534699999999686, 0.0002353470000000038, 0.0002353340000000037, 0.00023533399999999677, 0.00023534800000000328, 0.00023534699999999686, 0.00023534699999999686, 0.0002353470000000038, 0.0002353329999999973, 0.0002353470000000038, 0.00023536100000000337, 0.0002353329999999973, 0.00023533300000000423, 0.0002353329999999973, 0.00023531900000000466, 0.00023533300000000423, 0.0002353199999999972, 0.000235292000000005, 0.00023531899999999772, 0.00023534799999999634, 0.00023536100000000337, 0.00023534699999999686, 0.00023536100000000337, 0.00023537500000000294, 0.0002353329999999973]</msg>
<status status="PASS" starttime="20201030 15:55:49.443" endtime="20201030 15:55:49.449"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.429" endtime="20201030 15:55:49.451"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:49.462" endtime="20201030 15:55:49.485"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.457" endtime="20201030 15:55:49.487"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.454" endtime="20201030 15:55:49.488"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.897" endtime="20201030 15:55:49.489"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.896" endtime="20201030 15:55:49.489"></status>
</kw>
<kw name="${n} = 36" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:49.516" endtime="20201030 15:55:49.548"></status>
</kw>
<msg timestamp="20201030 15:55:49.550" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:49.512" endtime="20201030 15:55:49.550"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:49.557" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:49.552" endtime="20201030 15:55:49.558"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:49.560" endtime="20201030 15:55:49.565"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.503" endtime="20201030 15:55:49.569"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.497" endtime="20201030 15:55:49.572"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:49.592" endtime="20201030 15:55:49.930"></status>
</kw>
<msg timestamp="20201030 15:55:49.937" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044349361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044594833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:49.588" endtime="20201030 15:55:49.937"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:49.954" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044349361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044594833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:49.939" endtime="20201030 15:55:49.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:49.956" endtime="20201030 15:55:49.960"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.579" endtime="20201030 15:55:49.962"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.573" endtime="20201030 15:55:49.963"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:49.972" level="INFO">${PHILIP_RES} = [{'diff': 0.0002454720000000035}, {'diff': 0.00024548599999999615}, {'diff': 0.00024551400000000223}, {'diff': 0.00024551400000000223}, {'diff': 0.00024554099999999496}, {'diff': 0.0002455130000000027...</msg>
<status status="PASS" starttime="20201030 15:55:49.965" endtime="20201030 15:55:49.973"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:49.983" level="INFO">${RESULT} = {'diff': [0.0002454720000000035, 0.00024548599999999615, 0.00024551400000000223, 0.00024551400000000223, 0.00024554099999999496, 0.00024551300000000276, 0.0002454860000000031, 0.0002454999999999957, 0...</msg>
<status status="PASS" starttime="20201030 15:55:49.974" endtime="20201030 15:55:49.984"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:49.994" level="INFO">NAME: 36-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:49.992" endtime="20201030 15:55:49.995"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:49.999" level="INFO">VALUE: [0.0002454720000000035, 0.00024548599999999615, 0.00024551400000000223, 0.00024551400000000223, 0.00024554099999999496, 0.00024551300000000276, 0.0002454860000000031, 0.0002454999999999957, 0.00024550000000000266, 0.00024550000000000266, 0.0002454869999999956, 0.00024550000000000266, 0.00024550000000000266, 0.0002454999999999957, 0.00024544500000000385, 0.00024551300000000276, 0.00024548599999999615, 0.00024550000000000266, 0.00024550000000000266, 0.0002454999999999957, 0.00024556900000000104, 0.00024550000000000266, 0.0002454999999999957, 0.0002454999999999957, 0.0002455280000000018, 0.0002454999999999957, 0.00024548599999999615, 0.0002455280000000018, 0.000245457999999997, 0.0002455280000000018, 0.0002454720000000035, 0.00024551400000000223, 0.0002454999999999957, 0.00024550000000000266, 0.00024550000000000266, 0.0002454999999999957, 0.0002455700000000005, 0.00024550000000000266, 0.00024551400000000223, 0.00024551400000000223, 0.0002454999999999957, 0.0002454309999999904, 0.00024552799999999486, 0.0002454860000000031, 0.0002454860000000031, 0.0002454999999999957, 0.00024547300000000993, 0.00024544399999999744, 0.0002454999999999957, 0.0002455000000000096]</msg>
<status status="PASS" starttime="20201030 15:55:49.996" endtime="20201030 15:55:50.001"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.985" endtime="20201030 15:55:50.002"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:50.012" endtime="20201030 15:55:50.033"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.007" endtime="20201030 15:55:50.035"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.005" endtime="20201030 15:55:50.036"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.492" endtime="20201030 15:55:50.036"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.490" endtime="20201030 15:55:50.037"></status>
</kw>
<kw name="${n} = 37" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:50.058" endtime="20201030 15:55:50.092"></status>
</kw>
<msg timestamp="20201030 15:55:50.093" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:50.055" endtime="20201030 15:55:50.094"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:50.100" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:50.096" endtime="20201030 15:55:50.100"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:50.102" endtime="20201030 15:55:50.106"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.048" endtime="20201030 15:55:50.108"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.043" endtime="20201030 15:55:50.109"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:50.125" endtime="20201030 15:55:50.464"></status>
</kw>
<msg timestamp="20201030 15:55:50.471" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037090514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037346361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:50.122" endtime="20201030 15:55:50.471"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:50.488" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037090514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037346361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:50.473" endtime="20201030 15:55:50.489"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:50.491" endtime="20201030 15:55:50.495"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.115" endtime="20201030 15:55:50.496"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.110" endtime="20201030 15:55:50.498"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:50.507" level="INFO">${PHILIP_RES} = [{'diff': 0.0002558470000000035}, {'diff': 0.00025586100000000306}, {'diff': 0.0002558609999999961}, {'diff': 0.0002558609999999961}, {'diff': 0.0002558199999999969}, {'diff': 0.00025586100000000306},...</msg>
<status status="PASS" starttime="20201030 15:55:50.499" endtime="20201030 15:55:50.508"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:50.516" level="INFO">${RESULT} = {'diff': [0.0002558470000000035, 0.00025586100000000306, 0.0002558609999999961, 0.0002558609999999961, 0.0002558199999999969, 0.00025586100000000306, 0.0002558470000000035, 0.00025586100000000306, 0.0...</msg>
<status status="PASS" starttime="20201030 15:55:50.509" endtime="20201030 15:55:50.517"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:50.527" level="INFO">NAME: 37-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:50.525" endtime="20201030 15:55:50.528"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:50.532" level="INFO">VALUE: [0.0002558470000000035, 0.00025586100000000306, 0.0002558609999999961, 0.0002558609999999961, 0.0002558199999999969, 0.00025586100000000306, 0.0002558470000000035, 0.00025586100000000306, 0.00025590300000000177, 0.00025584699999999655, 0.0002558609999999961, 0.000255832999999997, 0.000255847999999996, 0.0002558470000000035, 0.00025577700000000564, 0.00025584800000000296, 0.0002558330000000039, 0.00025583399999999645, 0.000255832999999997, 0.0002558189999999974, 0.00025584800000000296, 0.0002558470000000035, 0.00025586100000000306, 0.0002559020000000023, 0.00025584699999999655, 0.00025588899999999526, 0.000255832999999997, 0.00025580499999999784, 0.0002558340000000034, 0.0002558470000000035, 0.00025586100000000306, 0.00025584699999999655, 0.0002557639999999986, 0.0002557769999999987, 0.00025584699999999655, 0.00025587500000000263, 0.0002558340000000034, 0.0002558470000000035, 0.0002558470000000035, 0.00025584699999999655, 0.00025584699999999655, 0.00025580499999999784, 0.0002557920000000047, 0.00025581900000000435, 0.00025584800000000296, 0.0002558199999999969, 0.0002558609999999961, 0.0002558609999999961, 0.00025584699999999655, 0.00025584800000000296]</msg>
<status status="PASS" starttime="20201030 15:55:50.529" endtime="20201030 15:55:50.534"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.518" endtime="20201030 15:55:50.536"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:50.545" endtime="20201030 15:55:50.566"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.541" endtime="20201030 15:55:50.568"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.538" endtime="20201030 15:55:50.569"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.039" endtime="20201030 15:55:50.569"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.038" endtime="20201030 15:55:50.570"></status>
</kw>
<kw name="${n} = 38" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:50.592" endtime="20201030 15:55:50.627"></status>
</kw>
<msg timestamp="20201030 15:55:50.628" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:50.588" endtime="20201030 15:55:50.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:50.634" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:50.630" endtime="20201030 15:55:50.635"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:50.637" endtime="20201030 15:55:50.640"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.581" endtime="20201030 15:55:50.642"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.576" endtime="20201030 15:55:50.643"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:50.660" endtime="20201030 15:55:51.003"></status>
</kw>
<msg timestamp="20201030 15:55:51.010" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038838236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039104611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:50.657" endtime="20201030 15:55:51.011"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:51.028" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038838236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039104611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:51.013" endtime="20201030 15:55:51.028"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:51.030" endtime="20201030 15:55:51.034"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.649" endtime="20201030 15:55:51.036"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.645" endtime="20201030 15:55:51.037"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:51.046" level="INFO">${PHILIP_RES} = [{'diff': 0.00026637499999999925}, {'diff': 0.0002664029999999984}, {'diff': 0.00026638900000000576}, {'diff': 0.0002663479999999996}, {'diff': 0.0002664029999999984}, {'diff': 0.00026637499999999925}...</msg>
<status status="PASS" starttime="20201030 15:55:51.039" endtime="20201030 15:55:51.047"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:51.055" level="INFO">${RESULT} = {'diff': [0.00026637499999999925, 0.0002664029999999984, 0.00026638900000000576, 0.0002663479999999996, 0.0002664029999999984, 0.00026637499999999925, 0.0002664579999999972, 0.0002663889999999988, 0.0...</msg>
<status status="PASS" starttime="20201030 15:55:51.048" endtime="20201030 15:55:51.056"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:51.066" level="INFO">NAME: 38-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:51.064" endtime="20201030 15:55:51.067"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:51.071" level="INFO">VALUE: [0.00026637499999999925, 0.0002664029999999984, 0.00026638900000000576, 0.0002663479999999996, 0.0002664029999999984, 0.00026637499999999925, 0.0002664579999999972, 0.0002663889999999988, 0.0002664019999999989, 0.00026644500000000404, 0.00026637499999999925, 0.00026637499999999925, 0.000266430000000005, 0.0002664019999999989, 0.00026644400000000457, 0.00026631900000000097, 0.00026641699999999796, 0.0002663889999999988, 0.00026637499999999925, 0.00026638900000000576, 0.0002663470000000001, 0.0002664029999999984, 0.0002664029999999984, 0.0002663889999999988, 0.00026638799999999935, 0.0002664029999999984, 0.00026638900000000576, 0.0002663889999999988, 0.0002664029999999984, 0.0002664019999999989, 0.00026637499999999925, 0.00026640300000000533, 0.0002663609999999997, 0.0002664159999999985, 0.00026637499999999925, 0.00026637499999999925, 0.0002663750000000062, 0.0002663889999999988, 0.0002663889999999988, 0.00026636199999999915, 0.0002664029999999984, 0.0002663889999999988, 0.0002663889999999988, 0.0002663889999999988, 0.0002663889999999988, 0.00026637499999999925, 0.00026637499999999925, 0.0002664029999999984, 0.00026640300000000533, 0.00026640200000000586]</msg>
<status status="PASS" starttime="20201030 15:55:51.068" endtime="20201030 15:55:51.073"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.057" endtime="20201030 15:55:51.075"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:51.089" endtime="20201030 15:55:51.111"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.080" endtime="20201030 15:55:51.113"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.077" endtime="20201030 15:55:51.114"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.572" endtime="20201030 15:55:51.114"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.571" endtime="20201030 15:55:51.115"></status>
</kw>
<kw name="${n} = 39" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:51.136" endtime="20201030 15:55:51.171"></status>
</kw>
<msg timestamp="20201030 15:55:51.172" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:51.133" endtime="20201030 15:55:51.173"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:51.179" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:51.174" endtime="20201030 15:55:51.179"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:51.181" endtime="20201030 15:55:51.185"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.126" endtime="20201030 15:55:51.186"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.121" endtime="20201030 15:55:51.188"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:51.204" endtime="20201030 15:55:51.552"></status>
</kw>
<msg timestamp="20201030 15:55:51.559" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037383, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037660097, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:55:51.201" endtime="20201030 15:55:51.559"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:51.576" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037383, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037660097, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:55:51.561" endtime="20201030 15:55:51.577"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:51.579" endtime="20201030 15:55:51.582"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.194" endtime="20201030 15:55:51.584"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.189" endtime="20201030 15:55:51.585"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:51.594" level="INFO">${PHILIP_RES} = [{'diff': 0.000277096999999997}, {'diff': 0.0002771249999999961}, {'diff': 0.0002771249999999961}, {'diff': 0.00027716599999999536}, {'diff': 0.0002771389999999957}, {'diff': 0.0002771110000000035}, {...</msg>
<status status="PASS" starttime="20201030 15:55:51.587" endtime="20201030 15:55:51.595"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:51.605" level="INFO">${RESULT} = {'diff': [0.000277096999999997, 0.0002771249999999961, 0.0002771249999999961, 0.00027716599999999536, 0.0002771389999999957, 0.0002771110000000035, 0.00027713900000000263, 0.00027712500000000306, 0.00...</msg>
<status status="PASS" starttime="20201030 15:55:51.597" endtime="20201030 15:55:51.605"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:51.615" level="INFO">NAME: 39-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:51.613" endtime="20201030 15:55:51.616"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:51.621" level="INFO">VALUE: [0.000277096999999997, 0.0002771249999999961, 0.0002771249999999961, 0.00027716599999999536, 0.0002771389999999957, 0.0002771110000000035, 0.00027713900000000263, 0.00027712500000000306, 0.0002771110000000035, 0.00027712500000000306, 0.0002771249999999961, 0.0002771249999999961, 0.0002771389999999957, 0.00027711099999999655, 0.00027711199999999603, 0.00027712500000000306, 0.00027712500000000306, 0.0002771110000000035, 0.0002771110000000035, 0.00027712500000000306, 0.0002771389999999957, 0.00027715299999999526, 0.000277096999999997, 0.0002771389999999957, 0.0002771110000000035, 0.0002771110000000035, 0.00027712500000000306, 0.00027712500000000306, 0.0002771530000000022, 0.0002771249999999961, 0.0002771389999999957, 0.00027711099999999655, 0.0002771249999999961, 0.00027712500000000306, 0.00027713900000000263, 0.00027712500000000306, 0.00027707000000000426, 0.00027712500000000306, 0.00027713800000000316, 0.0002771249999999961, 0.0002771249999999961, 0.00027715299999999526, 0.0002771249999999961, 0.00027718000000000187, 0.0002771950000000009, 0.00027712500000000306, 0.00027713900000000263, 0.0002771660000000023, 0.00027713900000000263, 0.0002771389999999957]</msg>
<status status="PASS" starttime="20201030 15:55:51.618" endtime="20201030 15:55:51.622"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.607" endtime="20201030 15:55:51.624"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:51.634" endtime="20201030 15:55:51.656"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.629" endtime="20201030 15:55:51.658"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.627" endtime="20201030 15:55:51.659"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.117" endtime="20201030 15:55:51.659"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.116" endtime="20201030 15:55:51.660"></status>
</kw>
<kw name="${n} = 40" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:51.682" endtime="20201030 15:55:51.718"></status>
</kw>
<msg timestamp="20201030 15:55:51.719" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:51.679" endtime="20201030 15:55:51.720"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:51.726" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:51.722" endtime="20201030 15:55:51.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:51.728" endtime="20201030 15:55:51.732"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.671" endtime="20201030 15:55:51.733"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.666" endtime="20201030 15:55:51.735"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:51.751" endtime="20201030 15:55:52.100"></status>
</kw>
<msg timestamp="20201030 15:55:52.107" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037807319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038095333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:51.748" endtime="20201030 15:55:52.107"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:52.124" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037807319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038095333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:52.109" endtime="20201030 15:55:52.125"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:52.127" endtime="20201030 15:55:52.131"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.741" endtime="20201030 15:55:52.132"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.736" endtime="20201030 15:55:52.134"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:52.143" level="INFO">${PHILIP_RES} = [{'diff': 0.0002880140000000031}, {'diff': 0.00028805500000000234}, {'diff': 0.00028801399999999616}, {'diff': 0.0002880419999999953}, {'diff': 0.00028804100000000277}, {'diff': 0.00028805500000000234...</msg>
<status status="PASS" starttime="20201030 15:55:52.135" endtime="20201030 15:55:52.143"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:52.154" level="INFO">${RESULT} = {'diff': [0.0002880140000000031, 0.00028805500000000234, 0.00028801399999999616, 0.0002880419999999953, 0.00028804100000000277, 0.00028805500000000234, 0.00028804200000000224, 0.0002880560000000018, 0...</msg>
<status status="PASS" starttime="20201030 15:55:52.145" endtime="20201030 15:55:52.154"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:52.164" level="INFO">NAME: 40-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:52.162" endtime="20201030 15:55:52.165"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:52.170" level="INFO">VALUE: [0.0002880140000000031, 0.00028805500000000234, 0.00028801399999999616, 0.0002880419999999953, 0.00028804100000000277, 0.00028805500000000234, 0.00028804200000000224, 0.0002880560000000018, 0.0002880690000000019, 0.00028801399999999616, 0.0002880549999999954, 0.0002880700000000014, 0.0002880560000000018, 0.00028805500000000234, 0.00028804100000000277, 0.0002880980000000005, 0.00028806999999999444, 0.0002880690000000019, 0.00028805500000000234, 0.0002880140000000031, 0.0002880560000000018, 0.0002880830000000015, 0.0002880549999999954, 0.00028802799999999573, 0.0002880560000000018, 0.0002880560000000018, 0.0002880560000000018, 0.0002880690000000019, 0.00028806899999999497, 0.00028806999999999444, 0.00028802800000000267, 0.00028805500000000234, 0.00028805500000000234, 0.00028804200000000224, 0.00028801399999999616, 0.00028805599999999487, 0.00028805500000000234, 0.00028804200000000224, 0.0002880700000000014, 0.00028798600000000396, 0.0002880270000000032, 0.0002880980000000005, 0.00028805599999999487, 0.0002879999999999966, 0.0002880560000000018, 0.0002880690000000019, 0.00028808400000000095, 0.00028805599999999487, 0.00028805600000000875, 0.0002880549999999954]</msg>
<status status="PASS" starttime="20201030 15:55:52.167" endtime="20201030 15:55:52.171"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.156" endtime="20201030 15:55:52.173"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:52.182" endtime="20201030 15:55:52.204"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.178" endtime="20201030 15:55:52.206"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.175" endtime="20201030 15:55:52.206"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.662" endtime="20201030 15:55:52.207"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.661" endtime="20201030 15:55:52.207"></status>
</kw>
<kw name="${n} = 41" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:52.229" endtime="20201030 15:55:52.266"></status>
</kw>
<msg timestamp="20201030 15:55:52.267" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:52.226" endtime="20201030 15:55:52.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:52.273" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:52.269" endtime="20201030 15:55:52.274"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:52.275" endtime="20201030 15:55:52.279"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.219" endtime="20201030 15:55:52.280"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.213" endtime="20201030 15:55:52.282"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:52.299" endtime="20201030 15:55:52.649"></status>
</kw>
<msg timestamp="20201030 15:55:52.655" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03761775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037916944, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:55:52.295" endtime="20201030 15:55:52.656"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:52.673" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03761775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037916944, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:55:52.658" endtime="20201030 15:55:52.673"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:52.675" endtime="20201030 15:55:52.679"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.288" endtime="20201030 15:55:52.681"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.283" endtime="20201030 15:55:52.682"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:52.691" level="INFO">${PHILIP_RES} = [{'diff': 0.0002991940000000026}, {'diff': 0.00029918100000000253}, {'diff': 0.0002991939999999957}, {'diff': 0.00029918000000000305}, {'diff': 0.0002991950000000021}, {'diff': 0.000299166999999996}, ...</msg>
<status status="PASS" starttime="20201030 15:55:52.684" endtime="20201030 15:55:52.692"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:52.700" level="INFO">${RESULT} = {'diff': [0.0002991940000000026, 0.00029918100000000253, 0.0002991939999999957, 0.00029918000000000305, 0.0002991950000000021, 0.000299166999999996, 0.0002991940000000026, 0.0002991809999999956, 0.000...</msg>
<status status="PASS" starttime="20201030 15:55:52.693" endtime="20201030 15:55:52.701"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:52.711" level="INFO">NAME: 41-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:52.709" endtime="20201030 15:55:52.712"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:52.716" level="INFO">VALUE: [0.0002991940000000026, 0.00029918100000000253, 0.0002991939999999957, 0.00029918000000000305, 0.0002991950000000021, 0.000299166999999996, 0.0002991940000000026, 0.0002991809999999956, 0.0002991809999999956, 0.0002991660000000035, 0.0002991809999999956, 0.0002991950000000021, 0.00029918000000000305, 0.0002991809999999956, 0.0002991249999999973, 0.00029918000000000305, 0.0002991799999999961, 0.00029911099999999774, 0.0002992640000000005, 0.0002992080000000022, 0.00029918100000000253, 0.00029923600000000133, 0.00029920799999999526, 0.00029918100000000253, 0.00029918000000000305, 0.0002991799999999961, 0.00029916700000000296, 0.0002991249999999973, 0.0002991939999999957, 0.0002992500000000009, 0.0002991809999999956, 0.00029916599999999655, 0.00029916700000000296, 0.0002991809999999956, 0.00029916599999999655, 0.0002991390000000038, 0.00029919499999999516, 0.00029916599999999655, 0.00029918100000000253, 0.0002991809999999956, 0.00029918000000000305, 0.0002991940000000026, 0.00029920899999999473, 0.0002991940000000026, 0.00029918000000000305, 0.0002991809999999956, 0.00029918100000000253, 0.0002991660000000035, 0.0002991809999999956, 0.00029919399999998875]</msg>
<status status="PASS" starttime="20201030 15:55:52.713" endtime="20201030 15:55:52.722"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.702" endtime="20201030 15:55:52.724"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:52.734" endtime="20201030 15:55:52.756"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.729" endtime="20201030 15:55:52.757"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.727" endtime="20201030 15:55:52.758"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.209" endtime="20201030 15:55:52.759"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.208" endtime="20201030 15:55:52.759"></status>
</kw>
<kw name="${n} = 42" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:52.781" endtime="20201030 15:55:52.820"></status>
</kw>
<msg timestamp="20201030 15:55:52.821" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:52.777" endtime="20201030 15:55:52.822"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:52.828" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:52.823" endtime="20201030 15:55:52.828"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:52.830" endtime="20201030 15:55:52.834"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.770" endtime="20201030 15:55:52.835"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.765" endtime="20201030 15:55:52.837"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:52.853" endtime="20201030 15:55:53.173"></status>
</kw>
<msg timestamp="20201030 15:55:53.180" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039175819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039486306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:52.850" endtime="20201030 15:55:53.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:53.198" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039175819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039486306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:53.182" endtime="20201030 15:55:53.198"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:53.200" endtime="20201030 15:55:53.204"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.843" endtime="20201030 15:55:53.205"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.838" endtime="20201030 15:55:53.207"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:53.216" level="INFO">${PHILIP_RES} = [{'diff': 0.0003104869999999982}, {'diff': 0.0003104999999999983}, {'diff': 0.00031051399999999785}, {'diff': 0.0003105140000000048}, {'diff': 0.0003104870000000051}, {'diff': 0.0003105000000000052}, ...</msg>
<status status="PASS" starttime="20201030 15:55:53.208" endtime="20201030 15:55:53.217"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:53.225" level="INFO">${RESULT} = {'diff': [0.0003104869999999982, 0.0003104999999999983, 0.00031051399999999785, 0.0003105140000000048, 0.0003104870000000051, 0.0003105000000000052, 0.0003105140000000048, 0.00031051399999999785, 0.00...</msg>
<status status="PASS" starttime="20201030 15:55:53.218" endtime="20201030 15:55:53.226"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:53.236" level="INFO">NAME: 42-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:53.233" endtime="20201030 15:55:53.236"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:53.241" level="INFO">VALUE: [0.0003104869999999982, 0.0003104999999999983, 0.00031051399999999785, 0.0003105140000000048, 0.0003104870000000051, 0.0003105000000000052, 0.0003105140000000048, 0.00031051399999999785, 0.00031056899999999665, 0.0003104859999999987, 0.00031051399999999785, 0.00031047199999999914, 0.0003104859999999987, 0.0003104999999999983, 0.00031052800000000436, 0.0003105140000000048, 0.0003104309999999999, 0.0003105409999999975, 0.000310541999999997, 0.0003105129999999984, 0.0003104859999999987, 0.0003104999999999983, 0.00031051399999999785, 0.0003105140000000048, 0.0003104720000000061, 0.0003105000000000052, 0.00031051399999999785, 0.0003104999999999983, 0.00031051399999999785, 0.00031051399999999785, 0.00031051399999999785, 0.00031051399999999785, 0.00031051399999999785, 0.000310459000000006, 0.0003105000000000052, 0.0003105140000000048, 0.0003104999999999983, 0.0003104859999999987, 0.0003104869999999982, 0.00031051399999999785, 0.0003104999999999983, 0.0003104999999999983, 0.0003105130000000053, 0.0003105279999999905, 0.00031049999999999134, 0.0003104859999999987, 0.00031056899999999665, 0.00031049999999999134, 0.0003104859999999987, 0.0003105140000000117]</msg>
<status status="PASS" starttime="20201030 15:55:53.238" endtime="20201030 15:55:53.243"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.227" endtime="20201030 15:55:53.244"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:53.255" endtime="20201030 15:55:53.277"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.249" endtime="20201030 15:55:53.279"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.247" endtime="20201030 15:55:53.279"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.761" endtime="20201030 15:55:53.280"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.760" endtime="20201030 15:55:53.280"></status>
</kw>
<kw name="${n} = 43" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:53.302" endtime="20201030 15:55:53.340"></status>
</kw>
<msg timestamp="20201030 15:55:53.342" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:53.299" endtime="20201030 15:55:53.342"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:53.348" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:53.344" endtime="20201030 15:55:53.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:53.350" endtime="20201030 15:55:53.354"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.292" endtime="20201030 15:55:53.356"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.286" endtime="20201030 15:55:53.357"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:53.373" endtime="20201030 15:55:53.710"></status>
</kw>
<msg timestamp="20201030 15:55:53.716" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037295889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037617931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:53.370" endtime="20201030 15:55:53.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:53.733" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037295889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037617931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:53.718" endtime="20201030 15:55:53.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:53.736" endtime="20201030 15:55:53.740"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.363" endtime="20201030 15:55:53.741"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.358" endtime="20201030 15:55:53.743"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:53.752" level="INFO">${PHILIP_RES} = [{'diff': 0.00032204200000000155}, {'diff': 0.00032201399999999547}, {'diff': 0.00032205500000000165}, {'diff': 0.0003219999999999959}, {'diff': 0.0003220140000000024}, {'diff': 0.00032204200000000155...</msg>
<status status="PASS" starttime="20201030 15:55:53.744" endtime="20201030 15:55:53.752"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:53.762" level="INFO">${RESULT} = {'diff': [0.00032204200000000155, 0.00032201399999999547, 0.00032205500000000165, 0.0003219999999999959, 0.0003220140000000024, 0.00032204200000000155, 0.00032202699999999557, 0.0003220410000000021, 0...</msg>
<status status="PASS" starttime="20201030 15:55:53.754" endtime="20201030 15:55:53.763"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:53.773" level="INFO">NAME: 43-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:53.771" endtime="20201030 15:55:53.774"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:53.778" level="INFO">VALUE: [0.00032204200000000155, 0.00032201399999999547, 0.00032205500000000165, 0.0003219999999999959, 0.0003220140000000024, 0.00032204200000000155, 0.00032202699999999557, 0.0003220410000000021, 0.0003220140000000024, 0.0003219999999999959, 0.00032200000000000284, 0.00032201399999999547, 0.0003220560000000011, 0.0003219999999999959, 0.00032200000000000284, 0.00032204200000000155, 0.00032201399999999547, 0.0003220140000000024, 0.00032202799999999504, 0.00032200000000000284, 0.000322028000000002, 0.0003219730000000032, 0.000322028000000002, 0.0003220690000000012, 0.000322028000000002, 0.0003220549999999947, 0.0003220140000000024, 0.0003220410000000021, 0.0003219999999999959, 0.0003220270000000025, 0.0003220140000000024, 0.0003220140000000024, 0.00032204200000000155, 0.00032201399999999547, 0.0003220140000000024, 0.00032201399999999547, 0.00032200000000000284, 0.00032204200000000155, 0.00032202799999999504, 0.0003220140000000024, 0.00032201399999999547, 0.000322028000000002, 0.00032201399999999547, 0.000322028000000002, 0.000322028000000002, 0.0003219730000000032, 0.00032204099999999514, 0.00032201400000000935, 0.00032200000000000284, 0.00032204099999999514]</msg>
<status status="PASS" starttime="20201030 15:55:53.775" endtime="20201030 15:55:53.780"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.764" endtime="20201030 15:55:53.782"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:53.791" endtime="20201030 15:55:53.812"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.787" endtime="20201030 15:55:53.814"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.784" endtime="20201030 15:55:53.815"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.282" endtime="20201030 15:55:53.816"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.281" endtime="20201030 15:55:53.816"></status>
</kw>
<kw name="${n} = 44" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:53.838" endtime="20201030 15:55:53.878"></status>
</kw>
<msg timestamp="20201030 15:55:53.879" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:53.834" endtime="20201030 15:55:53.879"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:53.885" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:53.881" endtime="20201030 15:55:53.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:53.887" endtime="20201030 15:55:53.891"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.827" endtime="20201030 15:55:53.893"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.822" endtime="20201030 15:55:53.894"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:53.911" endtime="20201030 15:55:54.283"></status>
</kw>
<msg timestamp="20201030 15:55:54.290" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037256569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037590292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:53.908" endtime="20201030 15:55:54.290"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:54.308" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037256569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037590292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:54.292" endtime="20201030 15:55:54.309"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:54.311" endtime="20201030 15:55:54.315"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.900" endtime="20201030 15:55:54.317"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.896" endtime="20201030 15:55:54.319"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:54.328" level="INFO">${PHILIP_RES} = [{'diff': 0.0003337229999999941}, {'diff': 0.00033373600000000114}, {'diff': 0.00033373600000000114}, {'diff': 0.00033372199999999463}, {'diff': 0.0003336530000000032}, {'diff': 0.0003337220000000016}...</msg>
<status status="PASS" starttime="20201030 15:55:54.320" endtime="20201030 15:55:54.329"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:54.340" level="INFO">${RESULT} = {'diff': [0.0003337229999999941, 0.00033373600000000114, 0.00033373600000000114, 0.00033372199999999463, 0.0003336530000000032, 0.0003337220000000016, 0.0003337359999999942, 0.00033373600000000114, 0....</msg>
<status status="PASS" starttime="20201030 15:55:54.331" endtime="20201030 15:55:54.341"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:54.352" level="INFO">NAME: 44-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:54.349" endtime="20201030 15:55:54.352"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:54.357" level="INFO">VALUE: [0.0003337229999999941, 0.00033373600000000114, 0.00033373600000000114, 0.00033372199999999463, 0.0003336530000000032, 0.0003337220000000016, 0.0003337359999999942, 0.00033373600000000114, 0.0003337500000000007, 0.00033370799999999506, 0.0003337500000000007, 0.00033373600000000114, 0.00033377799999999985, 0.00033373600000000114, 0.00033370799999999506, 0.0003337370000000006, 0.0003337090000000015, 0.0003337359999999942, 0.00033373600000000114, 0.00033373600000000114, 0.0003336809999999954, 0.0003337220000000016, 0.00033369400000000243, 0.00033373600000000114, 0.00033373600000000114, 0.00033373600000000114, 0.0003338189999999991, 0.00033369400000000243, 0.00033373600000000114, 0.000333708000000002, 0.0003337500000000007, 0.0003337359999999942, 0.00033373600000000114, 0.00033373600000000114, 0.000333805999999999, 0.00033372300000000105, 0.0003337500000000007, 0.0003337090000000015, 0.0003337090000000015, 0.00033373600000000114, 0.0003337220000000016, 0.00033373600000000114, 0.00033372199999999463, 0.0003337499999999938, 0.00033373600000000114, 0.00033373600000000114, 0.0003337220000000085, 0.00033373600000000114, 0.0003337779999999929, 0.00033366599999999635]</msg>
<status status="PASS" starttime="20201030 15:55:54.354" endtime="20201030 15:55:54.359"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.342" endtime="20201030 15:55:54.361"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:54.371" endtime="20201030 15:55:54.393"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.366" endtime="20201030 15:55:54.395"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.364" endtime="20201030 15:55:54.396"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.818" endtime="20201030 15:55:54.397"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.817" endtime="20201030 15:55:54.397"></status>
</kw>
<kw name="${n} = 45" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:54.420" endtime="20201030 15:55:54.460"></status>
</kw>
<msg timestamp="20201030 15:55:54.462" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:54.417" endtime="20201030 15:55:54.462"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:54.468" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:54.464" endtime="20201030 15:55:54.469"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:54.471" endtime="20201030 15:55:54.475"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.409" endtime="20201030 15:55:54.477"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.403" endtime="20201030 15:55:54.478"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:54.496" endtime="20201030 15:55:54.860"></status>
</kw>
<msg timestamp="20201030 15:55:54.867" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039805597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04015125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:55:54.492" endtime="20201030 15:55:54.867"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:54.885" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039805597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04015125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:55:54.869" endtime="20201030 15:55:54.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:54.888" endtime="20201030 15:55:54.892"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.485" endtime="20201030 15:55:54.894"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.480" endtime="20201030 15:55:54.896"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:54.905" level="INFO">${PHILIP_RES} = [{'diff': 0.0003456530000000013}, {'diff': 0.00034563799999999534}, {'diff': 0.00034562499999999524}, {'diff': 0.0003456250000000022}, {'diff': 0.00034563900000000175}, {'diff': 0.0003456250000000022}...</msg>
<status status="PASS" starttime="20201030 15:55:54.897" endtime="20201030 15:55:54.906"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:54.915" level="INFO">${RESULT} = {'diff': [0.0003456530000000013, 0.00034563799999999534, 0.00034562499999999524, 0.0003456250000000022, 0.00034563900000000175, 0.0003456250000000022, 0.00034563900000000175, 0.00034561099999999567, 0...</msg>
<status status="PASS" starttime="20201030 15:55:54.908" endtime="20201030 15:55:54.916"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:54.926" level="INFO">NAME: 45-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:54.924" endtime="20201030 15:55:54.927"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:54.932" level="INFO">VALUE: [0.0003456530000000013, 0.00034563799999999534, 0.00034562499999999524, 0.0003456250000000022, 0.00034563900000000175, 0.0003456250000000022, 0.00034563900000000175, 0.00034561099999999567, 0.0003456670000000009, 0.00034563900000000175, 0.0003456530000000013, 0.00034563900000000175, 0.0003456250000000022, 0.0003456530000000013, 0.00034558299999999653, 0.0003456250000000022, 0.0003456530000000013, 0.0003456530000000013, 0.00034563900000000175, 0.0003456250000000022, 0.00034563799999999534, 0.00034563900000000175, 0.0003456250000000022, 0.00034565200000000185, 0.00034568100000000046, 0.00034561099999999567, 0.000345583999999996, 0.0003456250000000022, 0.00034563900000000175, 0.0003456530000000013, 0.0003456250000000022, 0.00034563900000000175, 0.00034562499999999524, 0.0003456389999999948, 0.00034565200000000185, 0.0003456110000000026, 0.0003456250000000022, 0.00034562499999999524, 0.0003456250000000022, 0.00034558299999999653, 0.0003456250000000022, 0.0003456250000000022, 0.00034565200000000185, 0.0003456389999999948, 0.0003456390000000087, 0.0003456389999999948, 0.0003456530000000013, 0.00034568100000000046, 0.0003456250000000022, 0.0003456390000000087]</msg>
<status status="PASS" starttime="20201030 15:55:54.929" endtime="20201030 15:55:54.934"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.917" endtime="20201030 15:55:54.936"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:54.946" endtime="20201030 15:55:54.968"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.941" endtime="20201030 15:55:54.970"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.938" endtime="20201030 15:55:54.971"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.399" endtime="20201030 15:55:54.972"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.398" endtime="20201030 15:55:54.972"></status>
</kw>
<kw name="${n} = 46" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:54.997" endtime="20201030 15:55:55.040"></status>
</kw>
<msg timestamp="20201030 15:55:55.041" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:54.993" endtime="20201030 15:55:55.042"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:55.048" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:55.044" endtime="20201030 15:55:55.049"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:55.051" endtime="20201030 15:55:55.055"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.985" endtime="20201030 15:55:55.057"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.979" endtime="20201030 15:55:55.058"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:55.076" endtime="20201030 15:55:55.437"></status>
</kw>
<msg timestamp="20201030 15:55:55.444" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043767958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044125681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:55.072" endtime="20201030 15:55:55.445"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:55.463" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043767958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044125681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:55.447" endtime="20201030 15:55:55.464"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:55.466" endtime="20201030 15:55:55.470"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.064" endtime="20201030 15:55:55.471"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.059" endtime="20201030 15:55:55.473"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:55.482" level="INFO">${PHILIP_RES} = [{'diff': 0.0003577229999999973}, {'diff': 0.00035766700000000595}, {'diff': 0.0003577359999999974}, {'diff': 0.0003577500000000039}, {'diff': 0.0003577359999999974}, {'diff': 0.00035765199999999997},...</msg>
<status status="PASS" starttime="20201030 15:55:55.474" endtime="20201030 15:55:55.483"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:55.492" level="INFO">${RESULT} = {'diff': [0.0003577229999999973, 0.00035766700000000595, 0.0003577359999999974, 0.0003577500000000039, 0.0003577359999999974, 0.00035765199999999997, 0.0003578060000000022, 0.00035765299999999944, 0.0...</msg>
<status status="PASS" starttime="20201030 15:55:55.485" endtime="20201030 15:55:55.493"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:55.504" level="INFO">NAME: 46-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:55.501" endtime="20201030 15:55:55.504"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:55.509" level="INFO">VALUE: [0.0003577229999999973, 0.00035766700000000595, 0.0003577359999999974, 0.0003577500000000039, 0.0003577359999999974, 0.00035765199999999997, 0.0003578060000000022, 0.00035765299999999944, 0.00035773600000000433, 0.00035773600000000433, 0.00035779199999999567, 0.0003577920000000026, 0.00035776399999999653, 0.0003577359999999974, 0.0003577500000000039, 0.0003577359999999974, 0.00035777800000000304, 0.00035773699999999686, 0.0003577359999999974, 0.0003577500000000039, 0.0003577229999999973, 0.00035773600000000433, 0.0003577500000000039, 0.0003577909999999962, 0.0003577080000000052, 0.0003577219999999978, 0.00035774999999999696, 0.00035773600000000433, 0.0003577359999999974, 0.0003577500000000039, 0.00035772200000000476, 0.00035772200000000476, 0.0003577359999999974, 0.0003576799999999991, 0.0003577500000000039, 0.00035777800000000304, 0.00035770800000001213, 0.00035776399999999653, 0.0003577500000000039, 0.00035774999999999, 0.00035774999999999, 0.0003576950000000051, 0.00035772200000000476, 0.00035772200000000476, 0.0003577359999999974, 0.0003577219999999909, 0.0003577359999999974, 0.0003577359999999974, 0.0003577359999999974, 0.00035772200000000476]</msg>
<status status="PASS" starttime="20201030 15:55:55.506" endtime="20201030 15:55:55.511"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.494" endtime="20201030 15:55:55.513"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:55.524" endtime="20201030 15:55:55.547"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.518" endtime="20201030 15:55:55.549"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.516" endtime="20201030 15:55:55.549"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.974" endtime="20201030 15:55:55.550"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.973" endtime="20201030 15:55:55.550"></status>
</kw>
<kw name="${n} = 47" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:55.574" endtime="20201030 15:55:55.616"></status>
</kw>
<msg timestamp="20201030 15:55:55.618" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:55.570" endtime="20201030 15:55:55.618"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:55.624" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:55.620" endtime="20201030 15:55:55.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:55.627" endtime="20201030 15:55:55.631"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.562" endtime="20201030 15:55:55.632"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.557" endtime="20201030 15:55:55.634"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:55.652" endtime="20201030 15:55:56.013"></status>
</kw>
<msg timestamp="20201030 15:55:56.020" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039842444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040212528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:55.648" endtime="20201030 15:55:56.021"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:56.040" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039842444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040212528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:56.023" endtime="20201030 15:55:56.041"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:56.042" endtime="20201030 15:55:56.047"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.640" endtime="20201030 15:55:56.049"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.635" endtime="20201030 15:55:56.050"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:56.060" level="INFO">${PHILIP_RES} = [{'diff': 0.0003700839999999997}, {'diff': 0.0003700280000000014}, {'diff': 0.00037001400000000184}, {'diff': 0.00037001400000000184}, {'diff': 0.0003700280000000014}, {'diff': 0.0003700969999999998},...</msg>
<status status="PASS" starttime="20201030 15:55:56.052" endtime="20201030 15:55:56.061"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:56.071" level="INFO">${RESULT} = {'diff': [0.0003700839999999997, 0.0003700280000000014, 0.00037001400000000184, 0.00037001400000000184, 0.0003700280000000014, 0.0003700969999999998, 0.0003700410000000015, 0.00037001400000000184, 0.0...</msg>
<status status="PASS" starttime="20201030 15:55:56.062" endtime="20201030 15:55:56.072"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:56.083" level="INFO">NAME: 47-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:56.080" endtime="20201030 15:55:56.083"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:56.088" level="INFO">VALUE: [0.0003700839999999997, 0.0003700280000000014, 0.00037001400000000184, 0.00037001400000000184, 0.0003700280000000014, 0.0003700969999999998, 0.0003700410000000015, 0.00037001400000000184, 0.0003700280000000014, 0.00037002799999999447, 0.00036998599999999576, 0.00037004099999999457, 0.00037001400000000184, 0.00037002700000000194, 0.0003700280000000014, 0.0003700280000000014, 0.0003700280000000014, 0.000370042000000001, 0.000370042000000001, 0.0003700280000000014, 0.0003700280000000014, 0.00036999999999999533, 0.0003700139999999949, 0.00037002799999999447, 0.0003700139999999949, 0.0003699719999999962, 0.00037000000000000227, 0.0003700550000000011, 0.00037001400000000184, 0.00037002700000000194, 0.00037001400000000184, 0.00037001400000000184, 0.0003700839999999997, 0.00037001400000000184, 0.000370042000000001, 0.00037005499999999414, 0.000370026999999995, 0.00037002800000000835, 0.000370026999999995, 0.00037002800000000835, 0.00037002799999999447, 0.00037002799999999447, 0.00037002799999999447, 0.00037001399999998796, 0.000370042000000001, 0.00037001400000000184, 0.00037001400000000184, 0.000370055000000008, 0.00037002800000000835, 0.00037001300000000237]</msg>
<status status="PASS" starttime="20201030 15:55:56.085" endtime="20201030 15:55:56.090"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.073" endtime="20201030 15:55:56.092"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:56.102" endtime="20201030 15:55:56.124"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.097" endtime="20201030 15:55:56.126"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.094" endtime="20201030 15:55:56.127"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.553" endtime="20201030 15:55:56.127"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.551" endtime="20201030 15:55:56.128"></status>
</kw>
<kw name="${n} = 48" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:56.151" endtime="20201030 15:55:56.194"></status>
</kw>
<msg timestamp="20201030 15:55:56.195" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:56.148" endtime="20201030 15:55:56.196"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:56.202" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:56.198" endtime="20201030 15:55:56.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:56.204" endtime="20201030 15:55:56.209"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.140" endtime="20201030 15:55:56.210"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.134" endtime="20201030 15:55:56.212"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:56.230" endtime="20201030 15:55:56.591"></status>
</kw>
<msg timestamp="20201030 15:55:56.598" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039924417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040306903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:56.226" endtime="20201030 15:55:56.599"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:56.617" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039924417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040306903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:56.601" endtime="20201030 15:55:56.618"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:56.620" endtime="20201030 15:55:56.624"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.218" endtime="20201030 15:55:56.626"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.213" endtime="20201030 15:55:56.627"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:56.637" level="INFO">${PHILIP_RES} = [{'diff': 0.0003824860000000013}, {'diff': 0.0003824299999999961}, {'diff': 0.00038251400000000046}, {'diff': 0.00038251400000000046}, {'diff': 0.00038251400000000046}, {'diff': 0.0003825559999999992}...</msg>
<status status="PASS" starttime="20201030 15:55:56.629" endtime="20201030 15:55:56.637"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:56.653" level="INFO">${RESULT} = {'diff': [0.0003824860000000013, 0.0003824299999999961, 0.00038251400000000046, 0.00038251400000000046, 0.00038251400000000046, 0.0003825559999999992, 0.00038249999999999396, 0.0003825139999999935, 0....</msg>
<status status="PASS" starttime="20201030 15:55:56.639" endtime="20201030 15:55:56.653"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:56.664" level="INFO">NAME: 48-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:56.662" endtime="20201030 15:55:56.665"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:56.670" level="INFO">VALUE: [0.0003824860000000013, 0.0003824299999999961, 0.00038251400000000046, 0.00038251400000000046, 0.00038251400000000046, 0.0003825559999999992, 0.00038249999999999396, 0.0003825139999999935, 0.0003824439999999957, 0.00038252800000000003, 0.00038251400000000046, 0.00038254100000000013, 0.00038251400000000046, 0.0003825000000000009, 0.0003825560000000061, 0.00038252800000000003, 0.0003825000000000009, 0.0003825000000000009, 0.00038251400000000046, 0.0003825000000000009, 0.00038254100000000013, 0.0003825000000000009, 0.0003825419999999996, 0.0003824860000000013, 0.0003824860000000013, 0.00038256899999999927, 0.00038251400000000046, 0.000382513000000001, 0.0003825000000000009, 0.00038252800000000003, 0.00038251400000000046, 0.00038251400000000046, 0.00038252800000000003, 0.0003825559999999992, 0.00038249999999999396, 0.0003825279999999931, 0.00038251400000000046, 0.0003824860000000013, 0.00038251400000000046, 0.00038250000000000783, 0.000382528000000007, 0.00038251400000000046, 0.00038249999999999396, 0.00038249999999999396, 0.000382528000000007, 0.0003825419999999996, 0.00038254100000000013, 0.00038251400000000046, 0.000382513000000001, 0.00038251400000000046]</msg>
<status status="PASS" starttime="20201030 15:55:56.667" endtime="20201030 15:55:56.671"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.655" endtime="20201030 15:55:56.673"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:56.683" endtime="20201030 15:55:56.706"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.679" endtime="20201030 15:55:56.707"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.676" endtime="20201030 15:55:56.708"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.130" endtime="20201030 15:55:56.709"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.129" endtime="20201030 15:55:56.709"></status>
</kw>
<kw name="${n} = 49" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:56.732" endtime="20201030 15:55:56.776"></status>
</kw>
<msg timestamp="20201030 15:55:56.777" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:56.729" endtime="20201030 15:55:56.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:56.784" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:56.779" endtime="20201030 15:55:56.784"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:56.786" endtime="20201030 15:55:56.790"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.721" endtime="20201030 15:55:56.792"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.716" endtime="20201030 15:55:56.793"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:56.811" endtime="20201030 15:55:57.177"></status>
</kw>
<msg timestamp="20201030 15:55:57.184" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039762181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040157417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:56.808" endtime="20201030 15:55:57.185"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:57.202" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039762181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040157417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:57.187" endtime="20201030 15:55:57.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:57.205" endtime="20201030 15:55:57.209"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.800" endtime="20201030 15:55:57.211"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.795" endtime="20201030 15:55:57.213"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:57.222" level="INFO">${PHILIP_RES} = [{'diff': 0.0003952360000000002}, {'diff': 0.0003952079999999941}, {'diff': 0.00039520800000000106}, {'diff': 0.00039520900000000053}, {'diff': 0.000395179999999995}, {'diff': 0.0003951810000000014}, ...</msg>
<status status="PASS" starttime="20201030 15:55:57.214" endtime="20201030 15:55:57.223"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:57.228" level="INFO">${RESULT} = {'diff': [0.0003952360000000002, 0.0003952079999999941, 0.00039520800000000106, 0.00039520900000000053, 0.000395179999999995, 0.0003951810000000014, 0.00039520800000000106, 0.0003952089999999936, 0.00...</msg>
<status status="PASS" starttime="20201030 15:55:57.224" endtime="20201030 15:55:57.228"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:57.233" level="INFO">NAME: 49-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:57.232" endtime="20201030 15:55:57.233"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:57.236" level="INFO">VALUE: [0.0003952360000000002, 0.0003952079999999941, 0.00039520800000000106, 0.00039520900000000053, 0.000395179999999995, 0.0003951810000000014, 0.00039520800000000106, 0.0003952089999999936, 0.00039524999999999977, 0.0003951810000000014, 0.00039519399999999455, 0.0003951810000000014, 0.0003951800000000019, 0.000395194999999994, 0.00039513799999999627, 0.0003951810000000014, 0.00039518099999999445, 0.00039520800000000106, 0.00039520800000000106, 0.000395179999999995, 0.0003952360000000002, 0.00039520800000000106, 0.00039515300000000225, 0.0003951659999999954, 0.00039519500000000096, 0.00039520800000000106, 0.00039519500000000096, 0.00039520800000000106, 0.0003951810000000014, 0.00039522200000000063, 0.00039519500000000096, 0.0003951800000000019, 0.0003951940000000015, 0.0003951940000000015, 0.0003951940000000015, 0.00039519500000000096, 0.0003951939999999876, 0.0003952079999999941, 0.0003951940000000015, 0.00039512500000001005, 0.0003951940000000015, 0.0003952089999999936, 0.0003951940000000015, 0.00039519500000000096, 0.0003951940000000015, 0.00039519500000000096, 0.000395208000000008, 0.00039519500000000096, 0.0003951940000000015, 0.0003951389999999888]</msg>
<status status="PASS" starttime="20201030 15:55:57.234" endtime="20201030 15:55:57.237"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.229" endtime="20201030 15:55:57.237"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:57.242" endtime="20201030 15:55:57.261"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.240" endtime="20201030 15:55:57.262"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.239" endtime="20201030 15:55:57.263"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.711" endtime="20201030 15:55:57.263"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.710" endtime="20201030 15:55:57.263"></status>
</kw>
<kw name="${n} = 50" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:57.274" endtime="20201030 15:55:57.318"></status>
</kw>
<msg timestamp="20201030 15:55:57.318" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:57.272" endtime="20201030 15:55:57.318"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:57.321" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:57.319" endtime="20201030 15:55:57.322"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:57.322" endtime="20201030 15:55:57.324"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.269" endtime="20201030 15:55:57.325"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.266" endtime="20201030 15:55:57.326"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:57.344" endtime="20201030 15:55:57.705"></status>
</kw>
<msg timestamp="20201030 15:55:57.712" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022678625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023086667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:57.340" endtime="20201030 15:55:57.713"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:57.731" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022678625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023086667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:57.715" endtime="20201030 15:55:57.732"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:57.733" endtime="20201030 15:55:57.737"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.333" endtime="20201030 15:55:57.739"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.328" endtime="20201030 15:55:57.741"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:57.750" level="INFO">${PHILIP_RES} = [{'diff': 0.0004080420000000008}, {'diff': 0.0004080560000000004}, {'diff': 0.00040808300000000006}, {'diff': 0.0004080690000000005}, {'diff': 0.00040802800000000125}, {'diff': 0.00040808300000000006}...</msg>
<status status="PASS" starttime="20201030 15:55:57.742" endtime="20201030 15:55:57.751"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:57.760" level="INFO">${RESULT} = {'diff': [0.0004080420000000008, 0.0004080560000000004, 0.00040808300000000006, 0.0004080690000000005, 0.00040802800000000125, 0.00040808300000000006, 0.0004080690000000005, 0.00040806999999999996, 0....</msg>
<status status="PASS" starttime="20201030 15:55:57.753" endtime="20201030 15:55:57.761"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:57.772" level="INFO">NAME: 50-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:57.769" endtime="20201030 15:55:57.772"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:57.777" level="INFO">VALUE: [0.0004080420000000008, 0.0004080560000000004, 0.00040808300000000006, 0.0004080690000000005, 0.00040802800000000125, 0.00040808300000000006, 0.0004080690000000005, 0.00040806999999999996, 0.00040808300000000006, 0.0004080140000000017, 0.00040806999999999996, 0.00040806999999999996, 0.0004080690000000005, 0.0004080830000000035, 0.00040808399999999606, 0.000408068999999997, 0.000408068999999997, 0.00040804199999999735, 0.000408084000000003, 0.00040805600000000386, 0.00040806900000000396, 0.00040811099999999573, 0.0004080829999999966, 0.0004080559999999969, 0.0004080699999999965, 0.0004080699999999965, 0.0004080830000000035, 0.00040811100000000267, 0.00040805600000000386, 0.00040807000000000343, 0.000408068999999997, 0.00040804199999999735, 0.00040808399999999606, 0.0004080829999999966, 0.00040805499999999745, 0.00040807000000000343, 0.0004080970000000031, 0.0004080550000000044, 0.0004080559999999969, 0.0004080699999999965, 0.00040811099999999573, 0.000408068999999997, 0.0004080699999999965, 0.0004080830000000035, 0.0004080970000000031, 0.00040807000000000343, 0.00040812500000000224, 0.00040809699999999616, 0.0004080699999999965, 0.0004080699999999965]</msg>
<status status="PASS" starttime="20201030 15:55:57.774" endtime="20201030 15:55:57.783"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.762" endtime="20201030 15:55:57.785"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:57.797" endtime="20201030 15:55:57.819"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.791" endtime="20201030 15:55:57.821"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.788" endtime="20201030 15:55:57.821"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.264" endtime="20201030 15:55:57.822"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.264" endtime="20201030 15:55:57.823"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.435" endtime="20201030 15:55:57.823"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:55:26.339" endtime="20201030 15:55:57.825" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 15:54:55.832" endtime="20201030 15:55:57.849"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 15:55:58.034" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 15:55:58.050" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 15:55:58.873" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 15:55:58.031" endtime="20201030 15:55:58.874"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 15:56:01.880" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20201030 15:55:58.877" endtime="20201030 15:56:01.882"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:58.028" endtime="20201030 15:56:01.883"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:01.888" endtime="20201030 15:56:02.225"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:01.885" endtime="20201030 15:56:02.227"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:02.257" endtime="20201030 15:56:02.279"></status>
</kw>
<msg timestamp="20201030 15:56:02.280" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['(): This is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Succe...</msg>
<status status="PASS" starttime="20201030 15:56:02.253" endtime="20201030 15:56:02.280"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:02.286" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['(): This is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Succe...</msg>
<status status="PASS" starttime="20201030 15:56:02.282" endtime="20201030 15:56:02.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:56:02.293" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:56:02.289" endtime="20201030 15:56:02.294"></status>
</kw>
<status status="FAIL" starttime="20201030 15:56:02.247" endtime="20201030 15:56:02.296"></status>
</kw>
<status status="FAIL" starttime="20201030 15:56:02.242" endtime="20201030 15:56:02.297"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.239" endtime="20201030 15:56:02.298"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:56:02.308" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:56:02.306" endtime="20201030 15:56:02.309"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.300" endtime="20201030 15:56:02.309"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.237" endtime="20201030 15:56:02.309"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.235" endtime="20201030 15:56:02.310"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:02.311" endtime="20201030 15:56:02.315"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.232" endtime="20201030 15:56:02.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:02.318" endtime="20201030 15:56:02.322"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.229" endtime="20201030 15:56:02.323"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:58.025" endtime="20201030 15:56:02.325"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:02.339" endtime="20201030 15:56:02.360"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.335" endtime="20201030 15:56:02.362"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:02.411" endtime="20201030 15:56:02.438"></status>
</kw>
<msg timestamp="20201030 15:56:02.439" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:02.407" endtime="20201030 15:56:02.440"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:02.448" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:02.442" endtime="20201030 15:56:02.449"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:56:02.458" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:56:02.451" endtime="20201030 15:56:02.459"></status>
</kw>
<status status="FAIL" starttime="20201030 15:56:02.397" endtime="20201030 15:56:02.461"></status>
</kw>
<status status="FAIL" starttime="20201030 15:56:02.388" endtime="20201030 15:56:02.464"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.384" endtime="20201030 15:56:02.465"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:56:02.476" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:56:02.474" endtime="20201030 15:56:02.477"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.467" endtime="20201030 15:56:02.478"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.381" endtime="20201030 15:56:02.479"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.374" endtime="20201030 15:56:02.479"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:02.481" endtime="20201030 15:56:02.486"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.369" endtime="20201030 15:56:02.488"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.364" endtime="20201030 15:56:02.491"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.332" endtime="20201030 15:56:02.492"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:02.529" endtime="20201030 15:56:02.548"></status>
</kw>
<msg timestamp="20201030 15:56:02.550" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:02.524" endtime="20201030 15:56:02.551"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:02.559" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:02.553" endtime="20201030 15:56:02.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:02.562" endtime="20201030 15:56:02.567"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.512" endtime="20201030 15:56:02.570"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.504" endtime="20201030 15:56:02.572"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:02.596" endtime="20201030 15:56:02.954"></status>
</kw>
<msg timestamp="20201030 15:56:02.961" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.184348833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.184365986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:02.590" endtime="20201030 15:56:02.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:02.980" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.184348833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.184365986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:02.963" endtime="20201030 15:56:02.981"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:02.983" endtime="20201030 15:56:02.987"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.581" endtime="20201030 15:56:02.988"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.574" endtime="20201030 15:56:02.990"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:03.000" level="INFO">${RESULT} = [{'diff': 1.7153000000019736e-05}, {'diff': 1.755500000000243e-05}, {'diff': 1.713899999999935e-05}, {'diff': 1.8054999999989052e-05}, {'diff': 1.7833000000022636e-05}, {'diff': 1.7556000000001903e-05...</msg>
<status status="PASS" starttime="20201030 15:56:02.991" endtime="20201030 15:56:03.001"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:03.010" level="INFO">${ACCURACY} = {'diff': [1.7153000000019736e-05, 1.755500000000243e-05, 1.713899999999935e-05, 1.8054999999989052e-05, 1.7833000000022636e-05, 1.7556000000001903e-05, 1.7513999999996255e-05, 1.7917000000006178e-05, ...</msg>
<status status="PASS" starttime="20201030 15:56:03.002" endtime="20201030 15:56:03.010"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:03.021" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201030 15:56:03.019" endtime="20201030 15:56:03.022"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:03.028" level="INFO">VALUE: [1.7153000000019736e-05, 1.755500000000243e-05, 1.713899999999935e-05, 1.8054999999989052e-05, 1.7833000000022636e-05, 1.7556000000001903e-05, 1.7513999999996255e-05, 1.7917000000006178e-05, 1.78610000000079e-05, 1.705600000001528e-05, 1.78610000000079e-05, 1.7207999999990786e-05, 1.761100000000071e-05, 1.7444999999977062e-05, 1.7263999999989066e-05, 1.7444999999977062e-05, 1.7137999999999876e-05, 1.7527999999988886e-05, 1.737499999998615e-05, 1.7556000000001903e-05, 1.78610000000079e-05, 1.7612000000000183e-05, 1.7929999999999335e-05, 1.7207999999990786e-05, 1.7735999999990426e-05, 1.7236000000003804e-05, 1.7917000000006178e-05, 1.8041999999995895e-05, 1.761100000000071e-05, 1.6999999999989246e-05, 1.788899999999316e-05, 1.7124999999978963e-05, 1.7679999999992146e-05, 1.7791999999988706e-05, 1.7764000000003444e-05, 1.7665999999999515e-05, 1.7431000000012187e-05, 1.7917000000006178e-05, 1.7791999999988706e-05, 1.7735999999990426e-05, 1.7639000000013727e-05, 1.7181000000004998e-05, 1.7014000000009633e-05, 1.7332999999980503e-05, 1.7277999999981697e-05, 1.7917000000006178e-05, 1.7791999999988706e-05, 1.730600000002247e-05, 1.794499999999144e-05, 1.7569999999994534e-05]</msg>
<status status="PASS" starttime="20201030 15:56:03.024" endtime="20201030 15:56:03.031"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.012" endtime="20201030 15:56:03.033"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:03.045" endtime="20201030 15:56:03.067"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.040" endtime="20201030 15:56:03.070"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.036" endtime="20201030 15:56:03.070"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.498" endtime="20201030 15:56:03.071"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.496" endtime="20201030 15:56:03.071"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:03.098" endtime="20201030 15:56:03.115"></status>
</kw>
<msg timestamp="20201030 15:56:03.117" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:03.094" endtime="20201030 15:56:03.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:03.123" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:03.119" endtime="20201030 15:56:03.123"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:03.125" endtime="20201030 15:56:03.129"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.086" endtime="20201030 15:56:03.140"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.080" endtime="20201030 15:56:03.141"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:03.158" endtime="20201030 15:56:03.527"></status>
</kw>
<msg timestamp="20201030 15:56:03.534" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045178681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045195958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:03.155" endtime="20201030 15:56:03.534"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:03.552" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045178681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045195958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:03.536" endtime="20201030 15:56:03.553"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:03.555" endtime="20201030 15:56:03.559"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.148" endtime="20201030 15:56:03.560"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.142" endtime="20201030 15:56:03.562"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:03.572" level="INFO">${RESULT} = [{'diff': 1.727700000000304e-05}, {'diff': 1.783300000000182e-05}, {'diff': 1.7917000000006178e-05}, {'diff': 1.7735999999997365e-05}, {'diff': 1.7457999999997975e-05}, {'diff': 1.754100000000286e-05}...</msg>
<status status="PASS" starttime="20201030 15:56:03.564" endtime="20201030 15:56:03.573"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:03.583" level="INFO">${ACCURACY} = {'diff': [1.727700000000304e-05, 1.783300000000182e-05, 1.7917000000006178e-05, 1.7735999999997365e-05, 1.7457999999997975e-05, 1.754100000000286e-05, 1.791699999999924e-05, 1.7986000000004554e-05, 1....</msg>
<status status="PASS" starttime="20201030 15:56:03.574" endtime="20201030 15:56:03.584"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:03.594" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201030 15:56:03.592" endtime="20201030 15:56:03.595"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:03.600" level="INFO">VALUE: [1.727700000000304e-05, 1.783300000000182e-05, 1.7917000000006178e-05, 1.7735999999997365e-05, 1.7457999999997975e-05, 1.754100000000286e-05, 1.791699999999924e-05, 1.7986000000004554e-05, 1.73889999999996e-05, 1.761100000000071e-05, 1.7207999999997725e-05, 1.7721999999997795e-05, 1.7972000000004984e-05, 1.7792000000002584e-05, 1.765299999999942e-05, 1.7443999999998405e-05, 1.765299999999942e-05, 1.781900000000225e-05, 1.7556000000001903e-05, 1.73889999999996e-05, 1.6985999999996615e-05, 1.7528000000002764e-05, 1.741699999999874e-05, 1.6985999999996615e-05, 1.7721999999997795e-05, 1.7014000000002694e-05, 1.7749999999996935e-05, 1.7763999999996505e-05, 1.729100000000261e-05, 1.7042000000001833e-05, 1.7556000000001903e-05, 1.786100000000096e-05, 1.7098000000000113e-05, 1.7042000000001833e-05, 1.7028000000002264e-05, 1.7444000000005344e-05, 1.711100000000021e-05, 1.705500000000193e-05, 1.7167000000005428e-05, 1.734699999999395e-05, 1.737500000000003e-05, 1.7208000000004664e-05, 1.7471999999997545e-05, 1.7222000000004234e-05, 1.754100000000286e-05, 1.77769999999966e-05, 1.7264000000002944e-05, 1.731900000000175e-05, 1.7221999999997295e-05, 1.756899999999506e-05]</msg>
<status status="PASS" starttime="20201030 15:56:03.597" endtime="20201030 15:56:03.601"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.585" endtime="20201030 15:56:03.603"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:03.613" endtime="20201030 15:56:03.634"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.608" endtime="20201030 15:56:03.636"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.606" endtime="20201030 15:56:03.637"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.074" endtime="20201030 15:56:03.637"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.072" endtime="20201030 15:56:03.638"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:03.660" endtime="20201030 15:56:03.678"></status>
</kw>
<msg timestamp="20201030 15:56:03.680" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:03.657" endtime="20201030 15:56:03.680"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:03.686" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:03.682" endtime="20201030 15:56:03.687"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:03.689" endtime="20201030 15:56:03.692"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.650" endtime="20201030 15:56:03.694"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.644" endtime="20201030 15:56:03.696"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:03.712" endtime="20201030 15:56:04.078"></status>
</kw>
<msg timestamp="20201030 15:56:04.086" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040855472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040873431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:03.709" endtime="20201030 15:56:04.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:04.104" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040855472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040873431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:04.088" endtime="20201030 15:56:04.105"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:04.107" endtime="20201030 15:56:04.111"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.701" endtime="20201030 15:56:04.113"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.697" endtime="20201030 15:56:04.114"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:04.125" level="INFO">${RESULT} = [{'diff': 1.7959000000004888e-05}, {'diff': 1.7235999999996865e-05}, {'diff': 1.693099999999781e-05}, {'diff': 1.7514000000003194e-05}, {'diff': 1.77769999999966e-05}, {'diff': 1.7444000000005344e-05}...</msg>
<status status="PASS" starttime="20201030 15:56:04.116" endtime="20201030 15:56:04.125"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:04.136" level="INFO">${ACCURACY} = {'diff': [1.7959000000004888e-05, 1.7235999999996865e-05, 1.693099999999781e-05, 1.7514000000003194e-05, 1.77769999999966e-05, 1.7444000000005344e-05, 1.7000000000003124e-05, 1.7499999999996685e-05, 1...</msg>
<status status="PASS" starttime="20201030 15:56:04.127" endtime="20201030 15:56:04.137"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:04.148" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201030 15:56:04.145" endtime="20201030 15:56:04.148"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:04.153" level="INFO">VALUE: [1.7959000000004888e-05, 1.7235999999996865e-05, 1.693099999999781e-05, 1.7514000000003194e-05, 1.77769999999966e-05, 1.7444000000005344e-05, 1.7000000000003124e-05, 1.7499999999996685e-05, 1.7985999999997615e-05, 1.705500000000193e-05, 1.7665999999999515e-05, 1.7943999999998905e-05, 1.7931000000005748e-05, 1.7735999999997365e-05, 1.7457999999997975e-05, 1.755499999999549e-05, 1.7541999999995395e-05, 1.7221999999997295e-05, 1.7221999999997295e-05, 1.713899999999935e-05, 1.786100000000096e-05, 1.737500000000003e-05, 1.7445000000004818e-05, 1.791699999999924e-05, 1.70690000000015e-05, 1.737500000000003e-05, 1.7221999999997295e-05, 1.7527999999995825e-05, 1.737500000000003e-05, 1.7778000000003014e-05, 1.754100000000286e-05, 1.766699999999899e-05, 1.6999999999996185e-05, 1.761100000000071e-05, 1.7943999999998905e-05, 1.7959000000004888e-05, 1.7848000000000863e-05, 1.7137999999999876e-05, 1.7612000000000183e-05, 1.7915999999999765e-05, 1.7862000000000433e-05, 1.763899999999985e-05, 1.7777999999996075e-05, 1.77769999999966e-05, 1.7513999999996255e-05, 1.755499999999549e-05, 1.7041999999994895e-05, 1.73889999999996e-05, 1.7194000000005094e-05, 1.6999999999996185e-05]</msg>
<status status="PASS" starttime="20201030 15:56:04.150" endtime="20201030 15:56:04.154"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:04.138" endtime="20201030 15:56:04.156"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:04.165" endtime="20201030 15:56:04.187"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:04.161" endtime="20201030 15:56:04.189"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:04.158" endtime="20201030 15:56:04.189"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.640" endtime="20201030 15:56:04.190"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.639" endtime="20201030 15:56:04.190"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:04.214" endtime="20201030 15:56:04.233"></status>
</kw>
<msg timestamp="20201030 15:56:04.234" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:04.210" endtime="20201030 15:56:04.234"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:04.240" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:04.236" endtime="20201030 15:56:04.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:04.242" endtime="20201030 15:56:04.247"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:04.203" endtime="20201030 15:56:04.248"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:04.197" endtime="20201030 15:56:04.250"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:04.267" endtime="20201030 15:56:04.627"></status>
</kw>
<msg timestamp="20201030 15:56:04.635" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042408806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042425972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:04.263" endtime="20201030 15:56:04.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:04.655" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042408806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042425972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:04.638" endtime="20201030 15:56:04.656"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:04.658" endtime="20201030 15:56:04.662"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:04.256" endtime="20201030 15:56:04.663"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:04.251" endtime="20201030 15:56:04.665"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:04.677" level="INFO">${RESULT} = [{'diff': 1.7165999999999015e-05}, {'diff': 1.7443999999998405e-05}, {'diff': 1.7457999999997975e-05}, {'diff': 1.7221999999997295e-05}, {'diff': 1.7000000000003124e-05}, {'diff': 1.7263999999996005e-...</msg>
<status status="PASS" starttime="20201030 15:56:04.667" endtime="20201030 15:56:04.677"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:04.687" level="INFO">${ACCURACY} = {'diff': [1.7165999999999015e-05, 1.7443999999998405e-05, 1.7457999999997975e-05, 1.7221999999997295e-05, 1.7000000000003124e-05, 1.7263999999996005e-05, 1.7514000000003194e-05, 1.7485999999997115e-05...</msg>
<status status="PASS" starttime="20201030 15:56:04.679" endtime="20201030 15:56:04.687"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:04.698" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201030 15:56:04.696" endtime="20201030 15:56:04.699"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:04.704" level="INFO">VALUE: [1.7165999999999015e-05, 1.7443999999998405e-05, 1.7457999999997975e-05, 1.7221999999997295e-05, 1.7000000000003124e-05, 1.7263999999996005e-05, 1.7514000000003194e-05, 1.7485999999997115e-05, 1.7028000000002264e-05, 1.7444000000005344e-05, 1.733300000000132e-05, 1.7235999999996865e-05, 1.7014000000002694e-05, 1.7735999999997365e-05, 1.712499999999978e-05, 1.719499999999763e-05, 1.794499999999838e-05, 1.768099999999856e-05, 1.709700000000064e-05, 1.7584000000001043e-05, 1.783300000000182e-05, 1.752699999999635e-05, 1.733300000000132e-05, 1.763899999999985e-05, 1.766699999999899e-05, 1.7749999999996935e-05, 1.734699999999395e-05, 1.773699999999684e-05, 1.712499999999978e-05, 1.762500000000028e-05, 1.7915999999999765e-05, 1.731900000000175e-05, 1.734700000000089e-05, 1.7915999999999765e-05, 1.7750000000003874e-05, 1.7665999999999515e-05, 1.6985999999996615e-05, 1.7679999999999085e-05, 1.7485999999997115e-05, 1.7027999999995325e-05, 1.709700000000064e-05, 1.786100000000096e-05, 1.7278000000002514e-05, 1.794499999999838e-05, 1.786099999999402e-05, 1.715299999999892e-05, 1.7028000000002264e-05, 1.740299999999917e-05, 1.794499999999838e-05, 1.7721999999997795e-05]</msg>
<status status="PASS" starttime="20201030 15:56:04.701" endtime="20201030 15:56:04.705"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:04.689" endtime="20201030 15:56:04.707"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:04.717" endtime="20201030 15:56:04.739"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:04.712" endtime="20201030 15:56:04.741"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:04.709" endtime="20201030 15:56:04.742"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:04.192" endtime="20201030 15:56:04.742"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:04.191" endtime="20201030 15:56:04.743"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:04.768" endtime="20201030 15:56:04.791"></status>
</kw>
<msg timestamp="20201030 15:56:04.792" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:04.764" endtime="20201030 15:56:04.793"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:04.799" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:04.795" endtime="20201030 15:56:04.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:04.802" endtime="20201030 15:56:04.806"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:04.757" endtime="20201030 15:56:04.808"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:04.750" endtime="20201030 15:56:04.809"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:04.828" endtime="20201030 15:56:05.194"></status>
</kw>
<msg timestamp="20201030 15:56:05.203" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048657389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048674903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:04.824" endtime="20201030 15:56:05.204"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:05.229" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048657389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048674903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:05.206" endtime="20201030 15:56:05.230"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:05.232" endtime="20201030 15:56:05.237"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:04.816" endtime="20201030 15:56:05.238"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:04.811" endtime="20201030 15:56:05.240"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:05.250" level="INFO">${RESULT} = [{'diff': 1.7513999999996255e-05}, {'diff': 1.718099999999806e-05}, {'diff': 1.78890000000001e-05}, {'diff': 1.733299999999438e-05}, {'diff': 1.7957999999998475e-05}, {'diff': 1.7527999999995825e-05},...</msg>
<status status="PASS" starttime="20201030 15:56:05.241" endtime="20201030 15:56:05.251"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:05.260" level="INFO">${ACCURACY} = {'diff': [1.7513999999996255e-05, 1.718099999999806e-05, 1.78890000000001e-05, 1.733299999999438e-05, 1.7957999999998475e-05, 1.7527999999995825e-05, 1.7528000000002764e-05, 1.7792000000002584e-05, 1....</msg>
<status status="PASS" starttime="20201030 15:56:05.252" endtime="20201030 15:56:05.260"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:05.271" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201030 15:56:05.269" endtime="20201030 15:56:05.272"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:05.277" level="INFO">VALUE: [1.7513999999996255e-05, 1.718099999999806e-05, 1.78890000000001e-05, 1.733299999999438e-05, 1.7957999999998475e-05, 1.7527999999995825e-05, 1.7528000000002764e-05, 1.7792000000002584e-05, 1.7764000000003444e-05, 1.744499999999788e-05, 1.7347999999993424e-05, 1.7514000000003194e-05, 1.722299999999677e-05, 1.766699999999899e-05, 1.737500000000003e-05, 1.7541999999995395e-05, 1.7915999999999765e-05, 1.776300000000397e-05, 1.7209000000004138e-05, 1.713899999999935e-05, 1.7750000000003874e-05, 1.7139000000006288e-05, 1.7388000000000126e-05, 1.755499999999549e-05, 1.713899999999935e-05, 1.7401999999999695e-05, 1.7514000000003194e-05, 1.758300000000157e-05, 1.7735999999997365e-05, 1.737500000000003e-05, 1.7417000000005678e-05, 1.7943999999998905e-05, 1.73889999999996e-05, 1.7235999999996865e-05, 1.765299999999942e-05, 1.7929999999999335e-05, 1.7139000000006288e-05, 1.78890000000001e-05, 1.758300000000157e-05, 1.73889999999996e-05, 1.783300000000182e-05, 1.768099999999856e-05, 1.790299999999967e-05, 1.694499999999738e-05, 1.762500000000028e-05, 1.793099999999881e-05, 1.740299999999917e-05, 1.741699999999874e-05, 1.7348000000000363e-05, 1.790299999999967e-05]</msg>
<status status="PASS" starttime="20201030 15:56:05.273" endtime="20201030 15:56:05.278"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.262" endtime="20201030 15:56:05.279"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:05.291" endtime="20201030 15:56:05.313"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.284" endtime="20201030 15:56:05.315"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.282" endtime="20201030 15:56:05.316"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:04.746" endtime="20201030 15:56:05.316"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:04.744" endtime="20201030 15:56:05.317"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:05.341" endtime="20201030 15:56:05.359"></status>
</kw>
<msg timestamp="20201030 15:56:05.360" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:05.337" endtime="20201030 15:56:05.361"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:05.366" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:05.362" endtime="20201030 15:56:05.367"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:05.369" endtime="20201030 15:56:05.373"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.330" endtime="20201030 15:56:05.374"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.324" endtime="20201030 15:56:05.376"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:05.393" endtime="20201030 15:56:05.733"></status>
</kw>
<msg timestamp="20201030 15:56:05.741" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04287275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042890333, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:56:05.389" endtime="20201030 15:56:05.741"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:05.759" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04287275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042890333, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:56:05.743" endtime="20201030 15:56:05.760"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:05.762" endtime="20201030 15:56:05.766"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.382" endtime="20201030 15:56:05.768"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.377" endtime="20201030 15:56:05.769"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:05.780" level="INFO">${RESULT} = [{'diff': 1.758300000000157e-05}, {'diff': 1.713899999999935e-05}, {'diff': 1.7972000000004984e-05}, {'diff': 1.786100000000096e-05}, {'diff': 1.7221999999997295e-05}, {'diff': 1.7665999999999515e-05}...</msg>
<status status="PASS" starttime="20201030 15:56:05.771" endtime="20201030 15:56:05.780"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:05.790" level="INFO">${ACCURACY} = {'diff': [1.758300000000157e-05, 1.713899999999935e-05, 1.7972000000004984e-05, 1.786100000000096e-05, 1.7221999999997295e-05, 1.7665999999999515e-05, 1.780500000000268e-05, 1.768099999999856e-05, 1.7...</msg>
<status status="PASS" starttime="20201030 15:56:05.782" endtime="20201030 15:56:05.791"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:05.802" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201030 15:56:05.799" endtime="20201030 15:56:05.802"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:05.807" level="INFO">VALUE: [1.758300000000157e-05, 1.713899999999935e-05, 1.7972000000004984e-05, 1.786100000000096e-05, 1.7221999999997295e-05, 1.7665999999999515e-05, 1.780500000000268e-05, 1.768099999999856e-05, 1.7929999999999335e-05, 1.759700000000114e-05, 1.7485999999997115e-05, 1.7541999999995395e-05, 1.7707999999998225e-05, 1.7055999999994464e-05, 1.715299999999892e-05, 1.786100000000096e-05, 1.704100000000236e-05, 1.7556000000001903e-05, 1.7735999999997365e-05, 1.795899999999795e-05, 1.6986000000003554e-05, 1.794499999999838e-05, 1.7555999999994965e-05, 1.7500000000003624e-05, 1.7137999999999876e-05, 1.7973000000004458e-05, 1.7056000000001403e-05, 1.768099999999856e-05, 1.759700000000114e-05, 1.772299999999727e-05, 1.779099999999617e-05, 1.781900000000225e-05, 1.77769999999966e-05, 1.729100000000261e-05, 1.713899999999935e-05, 1.7444000000005344e-05, 1.7235999999996865e-05, 1.755500000000243e-05, 1.7153000000005858e-05, 1.7957999999998475e-05, 1.7792000000002584e-05, 1.7862000000000433e-05, 1.7707999999998225e-05, 1.755500000000243e-05, 1.7693999999998655e-05, 1.715299999999892e-05, 1.7277999999995575e-05, 1.7764000000003444e-05, 1.7292000000002083e-05, 1.7222000000004234e-05]</msg>
<status status="PASS" starttime="20201030 15:56:05.804" endtime="20201030 15:56:05.809"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.792" endtime="20201030 15:56:05.810"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:05.820" endtime="20201030 15:56:05.842"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.816" endtime="20201030 15:56:05.843"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.813" endtime="20201030 15:56:05.844"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.319" endtime="20201030 15:56:05.845"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.318" endtime="20201030 15:56:05.845"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:05.868" endtime="20201030 15:56:05.887"></status>
</kw>
<msg timestamp="20201030 15:56:05.888" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:05.865" endtime="20201030 15:56:05.889"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:05.894" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:05.890" endtime="20201030 15:56:05.895"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:05.897" endtime="20201030 15:56:05.901"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.857" endtime="20201030 15:56:05.902"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.852" endtime="20201030 15:56:05.904"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:05.920" endtime="20201030 15:56:06.347"></status>
</kw>
<msg timestamp="20201030 15:56:06.355" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041465708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041483319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:05.917" endtime="20201030 15:56:06.356"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:06.376" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041465708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041483319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:06.358" endtime="20201030 15:56:06.377"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:06.379" endtime="20201030 15:56:06.383"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.910" endtime="20201030 15:56:06.385"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.905" endtime="20201030 15:56:06.387"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:06.398" level="INFO">${RESULT} = [{'diff': 1.761100000000071e-05}, {'diff': 1.7014000000002694e-05}, {'diff': 1.7943999999998905e-05}, {'diff': 1.78890000000001e-05}, {'diff': 1.7986000000004554e-05}, {'diff': 1.7722000000004734e-05}...</msg>
<status status="PASS" starttime="20201030 15:56:06.389" endtime="20201030 15:56:06.399"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:06.410" level="INFO">${ACCURACY} = {'diff': [1.761100000000071e-05, 1.7014000000002694e-05, 1.7943999999998905e-05, 1.78890000000001e-05, 1.7986000000004554e-05, 1.7722000000004734e-05, 1.786100000000096e-05, 1.708300000000107e-05, 1.7...</msg>
<status status="PASS" starttime="20201030 15:56:06.400" endtime="20201030 15:56:06.411"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:06.422" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201030 15:56:06.419" endtime="20201030 15:56:06.423"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:06.428" level="INFO">VALUE: [1.761100000000071e-05, 1.7014000000002694e-05, 1.7943999999998905e-05, 1.78890000000001e-05, 1.7986000000004554e-05, 1.7722000000004734e-05, 1.786100000000096e-05, 1.708300000000107e-05, 1.7055999999994464e-05, 1.7014000000002694e-05, 1.780500000000268e-05, 1.7778000000003014e-05, 1.7570000000001473e-05, 1.736100000000046e-05, 1.7555999999994965e-05, 1.6999999999996185e-05, 1.7291999999995145e-05, 1.7736000000004304e-05, 1.763899999999985e-05, 1.7320000000001223e-05, 1.713899999999935e-05, 1.763899999999985e-05, 1.7721999999997795e-05, 1.7056000000001403e-05, 1.7013999999995755e-05, 1.73889999999996e-05, 1.755499999999549e-05, 1.762500000000028e-05, 1.7137999999999876e-05, 1.797299999999752e-05, 1.7556000000001903e-05, 1.7334000000000793e-05, 1.765299999999942e-05, 1.7721999999997795e-05, 1.797299999999752e-05, 1.70690000000015e-05, 1.7457999999997975e-05, 1.7222000000004234e-05, 1.713899999999935e-05, 1.8027999999996325e-05, 1.7514000000003194e-05, 1.709700000000064e-05, 1.7457999999997975e-05, 1.737500000000003e-05, 1.7013999999995755e-05, 1.7778000000003014e-05, 1.7457999999997975e-05, 1.736099999999352e-05, 1.7221999999997295e-05, 1.756899999999506e-05]</msg>
<status status="PASS" starttime="20201030 15:56:06.424" endtime="20201030 15:56:06.430"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:06.412" endtime="20201030 15:56:06.431"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:06.441" endtime="20201030 15:56:06.464"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:06.437" endtime="20201030 15:56:06.466"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:06.434" endtime="20201030 15:56:06.466"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.847" endtime="20201030 15:56:06.467"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.846" endtime="20201030 15:56:06.467"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:06.492" endtime="20201030 15:56:06.510"></status>
</kw>
<msg timestamp="20201030 15:56:06.512" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:06.488" endtime="20201030 15:56:06.512"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:06.518" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:06.514" endtime="20201030 15:56:06.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:06.521" endtime="20201030 15:56:06.525"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:06.481" endtime="20201030 15:56:06.527"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:06.474" endtime="20201030 15:56:06.528"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:06.546" endtime="20201030 15:56:06.908"></status>
</kw>
<msg timestamp="20201030 15:56:06.916" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044045944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044063778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:06.542" endtime="20201030 15:56:06.917"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:06.937" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044045944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044063778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:06.919" endtime="20201030 15:56:06.937"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:06.939" endtime="20201030 15:56:06.943"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:06.535" endtime="20201030 15:56:06.945"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:06.530" endtime="20201030 15:56:06.947"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:06.968" level="INFO">${RESULT} = [{'diff': 1.7834000000001293e-05}, {'diff': 1.7334000000000793e-05}, {'diff': 1.766699999999899e-05}, {'diff': 1.793099999999881e-05}, {'diff': 1.7445000000004818e-05}, {'diff': 1.7334000000000793e-05...</msg>
<status status="PASS" starttime="20201030 15:56:06.949" endtime="20201030 15:56:06.969"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:06.979" level="INFO">${ACCURACY} = {'diff': [1.7834000000001293e-05, 1.7334000000000793e-05, 1.766699999999899e-05, 1.793099999999881e-05, 1.7445000000004818e-05, 1.7334000000000793e-05, 1.766699999999899e-05, 1.759700000000114e-05, 1....</msg>
<status status="PASS" starttime="20201030 15:56:06.971" endtime="20201030 15:56:06.980"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:06.995" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201030 15:56:06.991" endtime="20201030 15:56:06.997"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:07.004" level="INFO">VALUE: [1.7834000000001293e-05, 1.7334000000000793e-05, 1.766699999999899e-05, 1.793099999999881e-05, 1.7445000000004818e-05, 1.7334000000000793e-05, 1.766699999999899e-05, 1.759700000000114e-05, 1.7152000000006384e-05, 1.70690000000015e-05, 1.763899999999985e-05, 1.7915999999999765e-05, 1.7749999999996935e-05, 1.712499999999978e-05, 1.759700000000114e-05, 1.733300000000132e-05, 1.7153000000005858e-05, 1.7792000000002584e-05, 1.733299999999438e-05, 1.791699999999924e-05, 1.7971999999998045e-05, 1.7555999999994965e-05, 1.765299999999942e-05, 1.711100000000021e-05, 1.7707999999998225e-05, 1.713899999999935e-05, 1.763899999999985e-05, 1.7777999999996075e-05, 1.759700000000114e-05, 1.733299999999438e-05, 1.7570000000001473e-05, 1.7903000000006608e-05, 1.706899999999456e-05, 1.781899999999531e-05, 1.7027999999995325e-05, 1.784700000000139e-05, 1.7777999999996075e-05, 1.7055999999994464e-05, 1.7570000000001473e-05, 1.7556000000001903e-05, 1.7221999999997295e-05, 1.787500000000053e-05, 1.797299999999752e-05, 1.737500000000003e-05, 1.740299999999917e-05, 1.731899999999481e-05, 1.713899999999935e-05, 1.7445000000004818e-05, 1.7569000000002e-05, 1.744499999999788e-05]</msg>
<status status="PASS" starttime="20201030 15:56:06.999" endtime="20201030 15:56:07.006"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:06.982" endtime="20201030 15:56:07.008"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:07.018" endtime="20201030 15:56:07.040"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.014" endtime="20201030 15:56:07.042"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.011" endtime="20201030 15:56:07.042"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:06.470" endtime="20201030 15:56:07.043"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:06.468" endtime="20201030 15:56:07.043"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:07.066" endtime="20201030 15:56:07.085"></status>
</kw>
<msg timestamp="20201030 15:56:07.086" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:07.063" endtime="20201030 15:56:07.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:07.092" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:07.088" endtime="20201030 15:56:07.093"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:07.094" endtime="20201030 15:56:07.100"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.056" endtime="20201030 15:56:07.101"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.050" endtime="20201030 15:56:07.103"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:07.119" endtime="20201030 15:56:07.463"></status>
</kw>
<msg timestamp="20201030 15:56:07.470" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041162569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041179722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:07.116" endtime="20201030 15:56:07.470"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:07.489" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041162569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041179722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:07.472" endtime="20201030 15:56:07.490"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:07.491" endtime="20201030 15:56:07.495"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.109" endtime="20201030 15:56:07.497"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.104" endtime="20201030 15:56:07.498"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:07.509" level="INFO">${RESULT} = [{'diff': 1.715299999999892e-05}, {'diff': 1.7000000000003124e-05}, {'diff': 1.7943999999998905e-05}, {'diff': 1.7221999999997295e-05}, {'diff': 1.791699999999924e-05}, {'diff': 1.709700000000064e-05}...</msg>
<status status="PASS" starttime="20201030 15:56:07.500" endtime="20201030 15:56:07.510"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:07.519" level="INFO">${ACCURACY} = {'diff': [1.715299999999892e-05, 1.7000000000003124e-05, 1.7943999999998905e-05, 1.7221999999997295e-05, 1.791699999999924e-05, 1.709700000000064e-05, 1.791699999999924e-05, 1.6999999999996185e-05, 1....</msg>
<status status="PASS" starttime="20201030 15:56:07.511" endtime="20201030 15:56:07.519"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:07.530" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201030 15:56:07.528" endtime="20201030 15:56:07.531"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:07.535" level="INFO">VALUE: [1.715299999999892e-05, 1.7000000000003124e-05, 1.7943999999998905e-05, 1.7221999999997295e-05, 1.791699999999924e-05, 1.709700000000064e-05, 1.791699999999924e-05, 1.6999999999996185e-05, 1.737500000000003e-05, 1.793099999999881e-05, 1.713899999999935e-05, 1.763899999999985e-05, 1.7458000000004914e-05, 1.793099999999881e-05, 1.7750000000003874e-05, 1.7943999999998905e-05, 1.762500000000028e-05, 1.765299999999942e-05, 1.7806000000002153e-05, 1.744499999999788e-05, 1.712499999999978e-05, 1.7986000000004554e-05, 1.7056000000001403e-05, 1.6985999999996615e-05, 1.73889999999996e-05, 1.7153000000005858e-05, 1.7250000000003374e-05, 1.701300000000322e-05, 1.7235999999996865e-05, 1.7263999999996005e-05, 1.755500000000243e-05, 1.7263999999996005e-05, 1.7013999999995755e-05, 1.704100000000236e-05, 1.731900000000175e-05, 1.712499999999978e-05, 1.734699999999395e-05, 1.786100000000096e-05, 1.7250000000003374e-05, 1.737500000000003e-05, 1.754100000000286e-05, 1.754100000000286e-05, 1.787500000000053e-05, 1.7320000000001223e-05, 1.708300000000107e-05, 1.762500000000028e-05, 1.783299999999488e-05, 1.7471999999997545e-05, 1.731900000000175e-05, 1.7931000000005748e-05]</msg>
<status status="PASS" starttime="20201030 15:56:07.532" endtime="20201030 15:56:07.537"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.521" endtime="20201030 15:56:07.539"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:07.550" endtime="20201030 15:56:07.572"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.544" endtime="20201030 15:56:07.573"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.541" endtime="20201030 15:56:07.574"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.045" endtime="20201030 15:56:07.575"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.044" endtime="20201030 15:56:07.575"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:07.598" endtime="20201030 15:56:07.617"></status>
</kw>
<msg timestamp="20201030 15:56:07.618" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:07.595" endtime="20201030 15:56:07.618"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:07.624" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:07.620" endtime="20201030 15:56:07.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:07.627" endtime="20201030 15:56:07.630"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.588" endtime="20201030 15:56:07.632"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.582" endtime="20201030 15:56:07.634"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:07.651" endtime="20201030 15:56:08.001"></status>
</kw>
<msg timestamp="20201030 15:56:08.008" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041847917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041865861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:07.647" endtime="20201030 15:56:08.009"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:08.027" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041847917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041865861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:08.010" endtime="20201030 15:56:08.028"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:08.030" endtime="20201030 15:56:08.034"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.640" endtime="20201030 15:56:08.035"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.635" endtime="20201030 15:56:08.037"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:08.047" level="INFO">${RESULT} = [{'diff': 1.7943999999998905e-05}, {'diff': 1.7014000000002694e-05}, {'diff': 1.7055999999994464e-05}, {'diff': 1.7556000000001903e-05}, {'diff': 1.791699999999924e-05}, {'diff': 1.716699999999849e-05...</msg>
<status status="PASS" starttime="20201030 15:56:08.038" endtime="20201030 15:56:08.048"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:08.058" level="INFO">${ACCURACY} = {'diff': [1.7943999999998905e-05, 1.7014000000002694e-05, 1.7055999999994464e-05, 1.7556000000001903e-05, 1.791699999999924e-05, 1.716699999999849e-05, 1.7098000000000113e-05, 1.7917000000006178e-05, ...</msg>
<status status="PASS" starttime="20201030 15:56:08.050" endtime="20201030 15:56:08.059"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:08.069" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201030 15:56:08.067" endtime="20201030 15:56:08.070"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:08.075" level="INFO">VALUE: [1.7943999999998905e-05, 1.7014000000002694e-05, 1.7055999999994464e-05, 1.7556000000001903e-05, 1.791699999999924e-05, 1.716699999999849e-05, 1.7098000000000113e-05, 1.7917000000006178e-05, 1.7334000000000793e-05, 1.712499999999978e-05, 1.784700000000139e-05, 1.7320000000001223e-05, 1.7000000000003124e-05, 1.715299999999892e-05, 1.736100000000046e-05, 1.7000000000003124e-05, 1.7792000000002584e-05, 1.7514000000003194e-05, 1.72089999999972e-05, 1.7499999999996685e-05, 1.7764000000003444e-05, 1.7709000000004638e-05, 1.7556000000001903e-05, 1.7306000000001653e-05, 1.7707999999998225e-05, 1.736100000000046e-05, 1.7013999999995755e-05, 1.729099999999567e-05, 1.759700000000114e-05, 1.7639000000006788e-05, 1.713899999999935e-05, 1.7458000000004914e-05, 1.708300000000107e-05, 1.7527999999995825e-05, 1.713899999999935e-05, 1.7527999999995825e-05, 1.7013999999995755e-05, 1.7513999999996255e-05, 1.786100000000096e-05, 1.713899999999935e-05, 1.7236000000003804e-05, 1.731899999999481e-05, 1.7014000000002694e-05, 1.7944000000005844e-05, 1.7235999999996865e-05, 1.7917000000006178e-05, 1.708300000000107e-05, 1.7485999999997115e-05, 1.7485999999997115e-05, 1.7028000000002264e-05]</msg>
<status status="PASS" starttime="20201030 15:56:08.072" endtime="20201030 15:56:08.077"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:08.060" endtime="20201030 15:56:08.078"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:08.104" endtime="20201030 15:56:08.130"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:08.084" endtime="20201030 15:56:08.132"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:08.081" endtime="20201030 15:56:08.132"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.577" endtime="20201030 15:56:08.133"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.576" endtime="20201030 15:56:08.133"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:08.157" endtime="20201030 15:56:08.175"></status>
</kw>
<msg timestamp="20201030 15:56:08.176" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:08.153" endtime="20201030 15:56:08.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:08.182" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:08.178" endtime="20201030 15:56:08.183"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:08.185" endtime="20201030 15:56:08.189"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:08.146" endtime="20201030 15:56:08.190"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:08.140" endtime="20201030 15:56:08.192"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:08.209" endtime="20201030 15:56:08.547"></status>
</kw>
<msg timestamp="20201030 15:56:08.554" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045353528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045371833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:08.205" endtime="20201030 15:56:08.554"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:08.573" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045353528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045371833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:08.556" endtime="20201030 15:56:08.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:08.575" endtime="20201030 15:56:08.579"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:08.198" endtime="20201030 15:56:08.581"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:08.193" endtime="20201030 15:56:08.582"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:08.593" level="INFO">${RESULT} = [{'diff': 1.830500000000318e-05}, {'diff': 1.9069999999996035e-05}, {'diff': 1.855499999999649e-05}, {'diff': 1.863900000000085e-05}, {'diff': 1.8888000000001626e-05}, {'diff': 1.8471999999998545e-05}...</msg>
<status status="PASS" starttime="20201030 15:56:08.584" endtime="20201030 15:56:08.593"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:08.604" level="INFO">${ACCURACY} = {'diff': [1.830500000000318e-05, 1.9069999999996035e-05, 1.855499999999649e-05, 1.863900000000085e-05, 1.8888000000001626e-05, 1.8471999999998545e-05, 1.855499999999649e-05, 1.887500000000153e-05, 1.8...</msg>
<status status="PASS" starttime="20201030 15:56:08.595" endtime="20201030 15:56:08.605"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:08.616" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201030 15:56:08.613" endtime="20201030 15:56:08.616"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:08.621" level="INFO">VALUE: [1.830500000000318e-05, 1.9069999999996035e-05, 1.855499999999649e-05, 1.863900000000085e-05, 1.8888000000001626e-05, 1.8471999999998545e-05, 1.855499999999649e-05, 1.887500000000153e-05, 1.8722000000005734e-05, 1.812500000000078e-05, 1.8777999999997075e-05, 1.811100000000121e-05, 1.883299999999588e-05, 1.8777999999997075e-05, 1.868099999999956e-05, 1.8069999999995034e-05, 1.890300000000067e-05, 1.8693999999999655e-05, 1.8305999999995715e-05, 1.8320000000002223e-05, 1.868099999999956e-05, 1.88890000000011e-05, 1.8749999999997935e-05, 1.8736000000005304e-05, 1.865300000000042e-05, 1.8306000000002653e-05, 1.891700000000024e-05, 1.8221999999998295e-05, 1.804100000000336e-05, 1.88890000000011e-05, 1.8445000000005818e-05, 1.8263999999997005e-05, 1.837500000000103e-05, 1.8834000000002293e-05, 1.87089999999987e-05, 1.8334000000001793e-05, 1.7999999999997185e-05, 1.8457999999998975e-05, 1.8042000000002834e-05, 1.809700000000164e-05, 1.8693999999999655e-05, 1.8207999999998725e-05, 1.8514000000004194e-05, 1.866699999999999e-05, 1.8569000000003e-05, 1.8292000000003084e-05, 1.831900000000275e-05, 1.890300000000067e-05, 1.8457999999998975e-05, 1.8666000000000516e-05]</msg>
<status status="PASS" starttime="20201030 15:56:08.618" endtime="20201030 15:56:08.627"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:08.606" endtime="20201030 15:56:08.629"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:08.638" endtime="20201030 15:56:08.660"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:08.634" endtime="20201030 15:56:08.662"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:08.631" endtime="20201030 15:56:08.663"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:08.136" endtime="20201030 15:56:08.663"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:08.134" endtime="20201030 15:56:08.664"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:08.687" endtime="20201030 15:56:08.705"></status>
</kw>
<msg timestamp="20201030 15:56:08.706" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:08.683" endtime="20201030 15:56:08.707"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:08.712" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:08.708" endtime="20201030 15:56:08.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:08.715" endtime="20201030 15:56:08.719"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:08.676" endtime="20201030 15:56:08.720"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:08.670" endtime="20201030 15:56:08.722"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:08.739" endtime="20201030 15:56:09.078"></status>
</kw>
<msg timestamp="20201030 15:56:09.086" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041638944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041658819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:08.735" endtime="20201030 15:56:09.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:09.105" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041638944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041658819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:09.088" endtime="20201030 15:56:09.106"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:09.107" endtime="20201030 15:56:09.111"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:08.728" endtime="20201030 15:56:09.113"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:08.723" endtime="20201030 15:56:09.114"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:09.125" level="INFO">${RESULT} = [{'diff': 1.987500000000253e-05}, {'diff': 1.9319999999996285e-05}, {'diff': 1.9223000000005708e-05}, {'diff': 1.9721999999999795e-05}, {'diff': 1.8999999999998185e-05}, {'diff': 1.9847999999995924e-0...</msg>
<status status="PASS" starttime="20201030 15:56:09.116" endtime="20201030 15:56:09.125"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:09.134" level="INFO">${ACCURACY} = {'diff': [1.987500000000253e-05, 1.9319999999996285e-05, 1.9223000000005708e-05, 1.9721999999999795e-05, 1.8999999999998185e-05, 1.9847999999995924e-05, 1.8957999999999475e-05, 1.9652000000001946e-05,...</msg>
<status status="PASS" starttime="20201030 15:56:09.127" endtime="20201030 15:56:09.135"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:09.145" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201030 15:56:09.143" endtime="20201030 15:56:09.146"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:09.151" level="INFO">VALUE: [1.987500000000253e-05, 1.9319999999996285e-05, 1.9223000000005708e-05, 1.9721999999999795e-05, 1.8999999999998185e-05, 1.9847999999995924e-05, 1.8957999999999475e-05, 1.9652000000001946e-05, 1.8999999999998185e-05, 1.961100000000271e-05, 1.956899999999706e-05, 1.912499999999484e-05, 1.911100000000221e-05, 1.9249999999998435e-05, 1.934700000000289e-05, 1.9221999999999295e-05, 1.987500000000253e-05, 1.981899999999731e-05, 1.9305999999996715e-05, 1.9194000000000155e-05, 1.9221999999999295e-05, 1.937499999999509e-05, 1.990300000000167e-05, 1.9485999999999115e-05, 1.986100000000296e-05, 1.913900000000135e-05, 1.990300000000167e-05, 1.947299999999902e-05, 1.941700000000074e-05, 1.9708000000000225e-05, 1.9749999999998935e-05, 1.9305999999996715e-05, 1.9084000000002543e-05, 1.9084000000002543e-05, 1.9013999999997755e-05, 1.911099999999527e-05, 1.922299999999877e-05, 1.913900000000135e-05, 1.9500000000005624e-05, 1.9680000000001086e-05, 1.9666000000001516e-05, 1.927700000000504e-05, 1.954099999999792e-05, 1.915300000000092e-05, 1.909700000000264e-05, 1.9207999999999725e-05, 1.961099999999577e-05, 1.9221999999999295e-05, 1.987500000000253e-05, 1.9930000000001336e-05]</msg>
<status status="PASS" starttime="20201030 15:56:09.148" endtime="20201030 15:56:09.152"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.136" endtime="20201030 15:56:09.154"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:09.164" endtime="20201030 15:56:09.185"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.159" endtime="20201030 15:56:09.187"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.157" endtime="20201030 15:56:09.188"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:08.666" endtime="20201030 15:56:09.188"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:08.664" endtime="20201030 15:56:09.189"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:09.212" endtime="20201030 15:56:09.234"></status>
</kw>
<msg timestamp="20201030 15:56:09.235" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:09.209" endtime="20201030 15:56:09.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:09.241" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:09.237" endtime="20201030 15:56:09.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:09.244" endtime="20201030 15:56:09.248"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.201" endtime="20201030 15:56:09.249"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.195" endtime="20201030 15:56:09.251"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:09.268" endtime="20201030 15:56:09.625"></status>
</kw>
<msg timestamp="20201030 15:56:09.633" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043355694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043376208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:09.264" endtime="20201030 15:56:09.633"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:09.653" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043355694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043376208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:09.635" endtime="20201030 15:56:09.654"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:09.656" endtime="20201030 15:56:09.660"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.257" endtime="20201030 15:56:09.661"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.252" endtime="20201030 15:56:09.663"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:09.674" level="INFO">${RESULT} = [{'diff': 2.0513999999999255e-05}, {'diff': 2.0194000000001155e-05}, {'diff': 2.034699999999695e-05}, {'diff': 1.9999999999999185e-05}, {'diff': 2.0263999999999005e-05}, {'diff': 2.0444000000001405e-0...</msg>
<status status="PASS" starttime="20201030 15:56:09.665" endtime="20201030 15:56:09.675"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:09.684" level="INFO">${ACCURACY} = {'diff': [2.0513999999999255e-05, 2.0194000000001155e-05, 2.034699999999695e-05, 1.9999999999999185e-05, 2.0263999999999005e-05, 2.0444000000001405e-05, 2.055499999999849e-05, 2.033299999999738e-05, 1...</msg>
<status status="PASS" starttime="20201030 15:56:09.676" endtime="20201030 15:56:09.685"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:09.696" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201030 15:56:09.694" endtime="20201030 15:56:09.697"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:09.702" level="INFO">VALUE: [2.0513999999999255e-05, 2.0194000000001155e-05, 2.034699999999695e-05, 1.9999999999999185e-05, 2.0263999999999005e-05, 2.0444000000001405e-05, 2.055499999999849e-05, 2.033299999999738e-05, 1.9985999999999615e-05, 2.018100000000106e-05, 1.9999999999999185e-05, 2.0069999999997035e-05, 2.019499999999369e-05, 2.0291999999998145e-05, 2.033299999999738e-05, 2.066700000000199e-05, 2.068100000000156e-05, 2.0541999999998395e-05, 2.011099999999627e-05, 2.070899999999376e-05, 2.0013999999998755e-05, 2.0486000000000115e-05, 2.063900000000285e-05, 1.9999999999999185e-05, 2.069500000000113e-05, 2.0722000000000795e-05, 1.9999999999999185e-05, 2.083300000000482e-05, 2.068100000000156e-05, 2.0887999999996687e-05, 2.0736000000000365e-05, 2.0499999999999685e-05, 2.0887999999996687e-05, 2.0180000000001586e-05, 2.0444000000001405e-05, 2.0486000000000115e-05, 2.0763999999999505e-05, 2.058299999999763e-05, 2.006899999999756e-05, 2.0749999999999935e-05, 2.058299999999763e-05, 2.0444000000001405e-05, 2.066700000000199e-05, 1.9958000000000475e-05, 2.0069999999997035e-05, 2.0527999999998825e-05, 2.013900000000235e-05, 2.0943999999994967e-05, 2.066699999999505e-05, 2.037500000000303e-05]</msg>
<status status="PASS" starttime="20201030 15:56:09.699" endtime="20201030 15:56:09.704"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.686" endtime="20201030 15:56:09.705"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:09.717" endtime="20201030 15:56:09.740"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.711" endtime="20201030 15:56:09.741"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.708" endtime="20201030 15:56:09.742"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.191" endtime="20201030 15:56:09.743"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.190" endtime="20201030 15:56:09.743"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:09.767" endtime="20201030 15:56:09.788"></status>
</kw>
<msg timestamp="20201030 15:56:09.789" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:09.764" endtime="20201030 15:56:09.790"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:09.796" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:09.792" endtime="20201030 15:56:09.797"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:09.798" endtime="20201030 15:56:09.802"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.756" endtime="20201030 15:56:09.804"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.750" endtime="20201030 15:56:09.806"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:09.823" endtime="20201030 15:56:10.194"></status>
</kw>
<msg timestamp="20201030 15:56:10.202" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044169653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044191389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:09.820" endtime="20201030 15:56:10.202"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:10.221" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044169653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044191389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:10.204" endtime="20201030 15:56:10.222"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:10.224" endtime="20201030 15:56:10.228"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.812" endtime="20201030 15:56:10.230"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.807" endtime="20201030 15:56:10.231"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:10.243" level="INFO">${RESULT} = [{'diff': 2.1735999999994426e-05}, {'diff': 2.169499999999519e-05}, {'diff': 2.116699999999555e-05}, {'diff': 2.1819999999998785e-05}, {'diff': 2.129099999999967e-05}, {'diff': 2.1236000000000865e-05}...</msg>
<status status="PASS" starttime="20201030 15:56:10.233" endtime="20201030 15:56:10.244"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:10.259" level="INFO">${ACCURACY} = {'diff': [2.1735999999994426e-05, 2.169499999999519e-05, 2.116699999999555e-05, 2.1819999999998785e-05, 2.129099999999967e-05, 2.1236000000000865e-05, 2.1333999999997855e-05, 2.1847999999997925e-05, 2...</msg>
<status status="PASS" starttime="20201030 15:56:10.246" endtime="20201030 15:56:10.260"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:10.271" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201030 15:56:10.268" endtime="20201030 15:56:10.272"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:10.277" level="INFO">VALUE: [2.1735999999994426e-05, 2.169499999999519e-05, 2.116699999999555e-05, 2.1819999999998785e-05, 2.129099999999967e-05, 2.1236000000000865e-05, 2.1333999999997855e-05, 2.1847999999997925e-05, 2.187500000000453e-05, 2.112499999999684e-05, 2.156899999999906e-05, 2.105499999999899e-05, 2.181899999999931e-05, 2.1444000000002406e-05, 2.1443999999995467e-05, 2.1041999999998895e-05, 2.2028000000000325e-05, 2.102699999999985e-05, 2.181899999999931e-05, 2.111100000000421e-05, 2.190300000000367e-05, 2.1430000000002836e-05, 2.188899999999716e-05, 2.111100000000421e-05, 2.1042000000005834e-05, 2.131899999999881e-05, 2.188899999999716e-05, 2.155499999999949e-05, 2.183299999999888e-05, 2.1305999999998715e-05, 2.168100000000256e-05, 2.144500000000188e-05, 2.186099999999802e-05, 2.17090000000017e-05, 2.1819999999998785e-05, 2.1527999999999825e-05, 2.18890000000041e-05, 2.180499999999974e-05, 2.140300000000317e-05, 2.1097999999997175e-05, 2.1555999999998965e-05, 2.115300000000292e-05, 2.112499999999684e-05, 2.1236000000000865e-05, 2.1333999999997855e-05, 2.111100000000421e-05, 2.131899999999881e-05, 2.1250000000000435e-05, 2.180499999999974e-05, 2.186100000000496e-05]</msg>
<status status="PASS" starttime="20201030 15:56:10.273" endtime="20201030 15:56:10.279"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:10.261" endtime="20201030 15:56:10.280"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:10.291" endtime="20201030 15:56:10.313"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:10.286" endtime="20201030 15:56:10.315"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:10.283" endtime="20201030 15:56:10.315"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.745" endtime="20201030 15:56:10.316"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.744" endtime="20201030 15:56:10.316"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:10.341" endtime="20201030 15:56:10.360"></status>
</kw>
<msg timestamp="20201030 15:56:10.361" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:10.337" endtime="20201030 15:56:10.361"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:10.368" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:10.363" endtime="20201030 15:56:10.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:10.370" endtime="20201030 15:56:10.374"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:10.329" endtime="20201030 15:56:10.376"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:10.323" endtime="20201030 15:56:10.377"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:10.395" endtime="20201030 15:56:10.767"></status>
</kw>
<msg timestamp="20201030 15:56:10.774" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043656417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043679417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:10.392" endtime="20201030 15:56:10.775"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:10.794" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043656417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043679417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:10.777" endtime="20201030 15:56:10.795"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:10.797" endtime="20201030 15:56:10.801"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:10.384" endtime="20201030 15:56:10.803"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:10.379" endtime="20201030 15:56:10.804"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:10.815" level="INFO">${RESULT} = [{'diff': 2.2999999999995246e-05}, {'diff': 2.20969999999987e-05}, {'diff': 2.265299999999748e-05}, {'diff': 2.2262999999994593e-05}, {'diff': 2.222300000000177e-05}, {'diff': 2.288899999999816e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:56:10.806" endtime="20201030 15:56:10.816"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:10.827" level="INFO">${ACCURACY} = {'diff': [2.2999999999995246e-05, 2.20969999999987e-05, 2.265299999999748e-05, 2.2262999999994593e-05, 2.222300000000177e-05, 2.288899999999816e-05, 2.2583999999999105e-05, 2.2292000000000145e-05, 2.2...</msg>
<status status="PASS" starttime="20201030 15:56:10.818" endtime="20201030 15:56:10.828"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:10.839" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201030 15:56:10.837" endtime="20201030 15:56:10.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:10.845" level="INFO">VALUE: [2.2999999999995246e-05, 2.20969999999987e-05, 2.265299999999748e-05, 2.2262999999994593e-05, 2.222300000000177e-05, 2.288899999999816e-05, 2.2583999999999105e-05, 2.2292000000000145e-05, 2.2112000000004683e-05, 2.268100000000356e-05, 2.220899999999526e-05, 2.280500000000074e-05, 2.2887999999998687e-05, 2.2222000000002295e-05, 2.280500000000074e-05, 2.1986000000001615e-05, 2.233299999999938e-05, 2.281900000000031e-05, 2.1971999999995107e-05, 2.279100000000117e-05, 2.25969999999992e-05, 2.20969999999987e-05, 2.236099999999852e-05, 2.286100000000596e-05, 2.2292000000000145e-05, 2.283299999999988e-05, 2.2528000000000825e-05, 2.233299999999938e-05, 2.212499999999784e-05, 2.212499999999784e-05, 2.25969999999992e-05, 2.2194000000003156e-05, 2.2833999999999355e-05, 2.2401999999997757e-05, 2.2708000000003226e-05, 2.284699999999945e-05, 2.268099999999662e-05, 2.266700000000399e-05, 2.244500000000288e-05, 2.2986000000002615e-05, 2.2320000000006224e-05, 2.2721999999995857e-05, 2.2278000000000575e-05, 2.231899999999981e-05, 2.238899999999766e-05, 2.2750000000001935e-05, 2.252700000000135e-05, 2.2792000000000645e-05, 2.2415999999997327e-05, 2.2680000000004086e-05]</msg>
<status status="PASS" starttime="20201030 15:56:10.842" endtime="20201030 15:56:10.847"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:10.829" endtime="20201030 15:56:10.848"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:10.859" endtime="20201030 15:56:10.881"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:10.854" endtime="20201030 15:56:10.883"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:10.851" endtime="20201030 15:56:10.883"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:10.319" endtime="20201030 15:56:10.884"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:10.317" endtime="20201030 15:56:10.884"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:10.909" endtime="20201030 15:56:10.930"></status>
</kw>
<msg timestamp="20201030 15:56:10.931" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:10.906" endtime="20201030 15:56:10.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:10.938" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:10.933" endtime="20201030 15:56:10.939"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:10.940" endtime="20201030 15:56:10.944"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:10.898" endtime="20201030 15:56:10.946"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:10.892" endtime="20201030 15:56:10.948"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:10.965" endtime="20201030 15:56:11.314"></status>
</kw>
<msg timestamp="20201030 15:56:11.321" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044579208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044602625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:10.962" endtime="20201030 15:56:11.322"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:11.340" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044579208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044602625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:11.323" endtime="20201030 15:56:11.340"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:11.342" endtime="20201030 15:56:11.346"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:10.954" endtime="20201030 15:56:11.348"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:10.949" endtime="20201030 15:56:11.349"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:11.359" level="INFO">${RESULT} = [{'diff': 2.34169999999978e-05}, {'diff': 2.3584000000000105e-05}, {'diff': 2.336099999999952e-05}, {'diff': 2.3194000000004156e-05}, {'diff': 2.3584000000000105e-05}, {'diff': 2.2999999999995246e-05}...</msg>
<status status="PASS" starttime="20201030 15:56:11.351" endtime="20201030 15:56:11.360"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:11.369" level="INFO">${ACCURACY} = {'diff': [2.34169999999978e-05, 2.3584000000000105e-05, 2.336099999999952e-05, 2.3194000000004156e-05, 2.3584000000000105e-05, 2.2999999999995246e-05, 2.3292000000001145e-05, 2.3306000000000715e-05, 2...</msg>
<status status="PASS" starttime="20201030 15:56:11.362" endtime="20201030 15:56:11.369"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:11.380" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201030 15:56:11.377" endtime="20201030 15:56:11.380"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:11.385" level="INFO">VALUE: [2.34169999999978e-05, 2.3584000000000105e-05, 2.336099999999952e-05, 2.3194000000004156e-05, 2.3584000000000105e-05, 2.2999999999995246e-05, 2.3292000000001145e-05, 2.3306000000000715e-05, 2.3471999999996607e-05, 2.3347999999999425e-05, 2.3250000000002435e-05, 2.3236000000002865e-05, 2.3014000000001755e-05, 2.32090000000032e-05, 2.362499999999934e-05, 2.3957999999997537e-05, 2.388899999999916e-05, 2.313899999999841e-05, 2.3749999999995997e-05, 2.355500000000149e-05, 2.337499999999909e-05, 2.386100000000002e-05, 2.312499999999884e-05, 2.302700000000185e-05, 2.3915999999998827e-05, 2.311099999999927e-05, 2.3499999999995747e-05, 2.355500000000149e-05, 2.355500000000149e-05, 2.3013999999994816e-05, 2.383300000000088e-05, 2.3249999999995496e-05, 2.361099999999977e-05, 2.3014000000001755e-05, 2.3556000000000965e-05, 2.311099999999927e-05, 2.3485999999996177e-05, 2.3083999999999605e-05, 2.395899999999701e-05, 2.319499999999669e-05, 2.344500000000388e-05, 2.3570000000000535e-05, 2.3028000000001325e-05, 2.368100000000456e-05, 2.3513999999995316e-05, 2.337499999999909e-05, 2.386100000000002e-05, 2.312499999999884e-05, 2.3542000000001395e-05, 2.312500000000578e-05]</msg>
<status status="PASS" starttime="20201030 15:56:11.382" endtime="20201030 15:56:11.387"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.371" endtime="20201030 15:56:11.388"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:11.398" endtime="20201030 15:56:11.419"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.393" endtime="20201030 15:56:11.421"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.391" endtime="20201030 15:56:11.422"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:10.887" endtime="20201030 15:56:11.422"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:10.885" endtime="20201030 15:56:11.423"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:11.446" endtime="20201030 15:56:11.466"></status>
</kw>
<msg timestamp="20201030 15:56:11.468" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:11.442" endtime="20201030 15:56:11.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:11.474" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:11.470" endtime="20201030 15:56:11.474"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:11.476" endtime="20201030 15:56:11.480"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.435" endtime="20201030 15:56:11.481"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.429" endtime="20201030 15:56:11.483"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:11.500" endtime="20201030 15:56:11.842"></status>
</kw>
<msg timestamp="20201030 15:56:11.849" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042616083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042640153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:11.496" endtime="20201030 15:56:11.850"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:11.868" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042616083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042640153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:11.852" endtime="20201030 15:56:11.869"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:11.870" endtime="20201030 15:56:11.874"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.489" endtime="20201030 15:56:11.876"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.484" endtime="20201030 15:56:11.877"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:11.888" level="INFO">${RESULT} = [{'diff': 2.4070000000001035e-05}, {'diff': 2.4915999999999827e-05}, {'diff': 2.419499999999769e-05}, {'diff': 2.4444000000005406e-05}, {'diff': 2.4735999999997427e-05}, {'diff': 2.468099999999862e-05...</msg>
<status status="PASS" starttime="20201030 15:56:11.879" endtime="20201030 15:56:11.888"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:11.898" level="INFO">${ACCURACY} = {'diff': [2.4070000000001035e-05, 2.4915999999999827e-05, 2.419499999999769e-05, 2.4444000000005406e-05, 2.4735999999997427e-05, 2.468099999999862e-05, 2.4750000000003936e-05, 2.419499999999769e-05, 2...</msg>
<status status="PASS" starttime="20201030 15:56:11.890" endtime="20201030 15:56:11.898"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:11.909" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201030 15:56:11.906" endtime="20201030 15:56:11.910"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:11.914" level="INFO">VALUE: [2.4070000000001035e-05, 2.4915999999999827e-05, 2.419499999999769e-05, 2.4444000000005406e-05, 2.4735999999997427e-05, 2.468099999999862e-05, 2.4750000000003936e-05, 2.419499999999769e-05, 2.4526999999996413e-05, 2.433300000000138e-05, 2.408300000000113e-05, 2.4040999999995483e-05, 2.455500000000249e-05, 2.415299999999898e-05, 2.4278000000002575e-05, 2.4222000000004296e-05, 2.4598000000000675e-05, 2.487500000000059e-05, 2.415300000000592e-05, 2.419500000000463e-05, 2.434700000000095e-05, 2.486100000000102e-05, 2.495899999999801e-05, 2.466699999999905e-05, 2.458300000000163e-05, 2.4070000000001035e-05, 2.4791999999995706e-05, 2.44169999999988e-05, 2.440299999999923e-05, 2.4528000000002825e-05, 2.4749999999996997e-05, 2.4777999999996136e-05, 2.4848000000000925e-05, 2.4957999999998537e-05, 2.4679999999999147e-05, 2.4277999999995636e-05, 2.4915999999999827e-05, 2.434700000000095e-05, 2.497300000000452e-05, 2.415299999999898e-05, 2.4777999999996136e-05, 2.461100000000077e-05, 2.454100000000292e-05, 2.4929999999999397e-05, 2.4193999999998217e-05, 2.4721999999997857e-05, 2.3999999999996247e-05, 2.429100000000267e-05, 2.495899999999801e-05, 2.490299999999973e-05]</msg>
<status status="PASS" starttime="20201030 15:56:11.911" endtime="20201030 15:56:11.916"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.899" endtime="20201030 15:56:11.918"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:11.929" endtime="20201030 15:56:11.950"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.923" endtime="20201030 15:56:11.952"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.920" endtime="20201030 15:56:11.953"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.425" endtime="20201030 15:56:11.953"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.424" endtime="20201030 15:56:11.954"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:11.977" endtime="20201030 15:56:11.996"></status>
</kw>
<msg timestamp="20201030 15:56:11.997" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:11.973" endtime="20201030 15:56:11.997"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:12.003" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:11.999" endtime="20201030 15:56:12.004"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:12.006" endtime="20201030 15:56:12.010"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.966" endtime="20201030 15:56:12.011"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.960" endtime="20201030 15:56:12.013"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:12.030" endtime="20201030 15:56:12.369"></status>
</kw>
<msg timestamp="20201030 15:56:12.377" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041613431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041638764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:12.026" endtime="20201030 15:56:12.377"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:12.395" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041613431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041638764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:12.379" endtime="20201030 15:56:12.396"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:12.398" endtime="20201030 15:56:12.402"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.019" endtime="20201030 15:56:12.403"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.014" endtime="20201030 15:56:12.405"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:12.415" level="INFO">${RESULT} = [{'diff': 2.533300000000238e-05}, {'diff': 2.540300000000023e-05}, {'diff': 2.5235999999997927e-05}, {'diff': 2.511100000000127e-05}, {'diff': 2.588900000000116e-05}, {'diff': 2.5514000000004255e-05},...</msg>
<status status="PASS" starttime="20201030 15:56:12.407" endtime="20201030 15:56:12.416"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:12.426" level="INFO">${ACCURACY} = {'diff': [2.533300000000238e-05, 2.540300000000023e-05, 2.5235999999997927e-05, 2.511100000000127e-05, 2.588900000000116e-05, 2.5514000000004255e-05, 2.5485999999998177e-05, 2.543099999999937e-05, 2.5...</msg>
<status status="PASS" starttime="20201030 15:56:12.417" endtime="20201030 15:56:12.427"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:12.437" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201030 15:56:12.435" endtime="20201030 15:56:12.438"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:12.443" level="INFO">VALUE: [2.533300000000238e-05, 2.540300000000023e-05, 2.5235999999997927e-05, 2.511100000000127e-05, 2.588900000000116e-05, 2.5514000000004255e-05, 2.5485999999998177e-05, 2.543099999999937e-05, 2.570899999999876e-05, 2.5805999999996276e-05, 2.5584000000002105e-05, 2.5388999999993722e-05, 2.5556000000002965e-05, 2.5292000000003145e-05, 2.5291999999996206e-05, 2.5778000000004075e-05, 2.5556000000002965e-05, 2.5638000000001437e-05, 2.522299999999783e-05, 2.5556000000002965e-05, 2.508300000000213e-05, 2.5528000000003825e-05, 2.5985999999998677e-05, 2.5764000000004506e-05, 2.5207999999998787e-05, 2.556900000000306e-05, 2.538900000000066e-05, 2.5013999999996817e-05, 2.534700000000195e-05, 2.5750000000004936e-05, 2.5888999999994222e-05, 2.587500000000159e-05, 2.5443999999999467e-05, 2.511100000000127e-05, 2.595899999999901e-05, 2.5569999999995596e-05, 2.5610999999994832e-05, 2.5193999999999217e-05, 2.4985999999997677e-05, 2.520899999999826e-05, 2.566700000000005e-05, 2.595899999999901e-05, 2.5152000000000507e-05, 2.5027999999996386e-05, 2.5193999999999217e-05, 2.590300000000073e-05, 2.5708000000006226e-05, 2.518099999999912e-05, 2.5000000000004186e-05, 2.558300000000263e-05]</msg>
<status status="PASS" starttime="20201030 15:56:12.440" endtime="20201030 15:56:12.445"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.428" endtime="20201030 15:56:12.446"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:12.456" endtime="20201030 15:56:12.478"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.451" endtime="20201030 15:56:12.479"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.449" endtime="20201030 15:56:12.480"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.956" endtime="20201030 15:56:12.481"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.955" endtime="20201030 15:56:12.481"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:12.504" endtime="20201030 15:56:12.523"></status>
</kw>
<msg timestamp="20201030 15:56:12.524" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:12.501" endtime="20201030 15:56:12.524"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:12.530" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:12.526" endtime="20201030 15:56:12.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:12.532" endtime="20201030 15:56:12.537"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.493" endtime="20201030 15:56:12.538"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.487" endtime="20201030 15:56:12.540"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:12.558" endtime="20201030 15:56:12.897"></status>
</kw>
<msg timestamp="20201030 15:56:12.904" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041677556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041704125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:12.554" endtime="20201030 15:56:12.904"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:12.923" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041677556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041704125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:12.906" endtime="20201030 15:56:12.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:12.925" endtime="20201030 15:56:12.929"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.546" endtime="20201030 15:56:12.931"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.541" endtime="20201030 15:56:12.932"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:12.943" level="INFO">${RESULT} = [{'diff': 2.656900000000406e-05}, {'diff': 2.6221999999999357e-05}, {'diff': 2.6000000000005186e-05}, {'diff': 2.7013999999998817e-05}, {'diff': 2.6166000000001077e-05}, {'diff': 2.666599999999464e-05...</msg>
<status status="PASS" starttime="20201030 15:56:12.934" endtime="20201030 15:56:12.943"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:12.961" level="INFO">${ACCURACY} = {'diff': [2.656900000000406e-05, 2.6221999999999357e-05, 2.6000000000005186e-05, 2.7013999999998817e-05, 2.6166000000001077e-05, 2.666599999999464e-05, 2.616700000000055e-05, 2.6042000000003895e-05, 2...</msg>
<status status="PASS" starttime="20201030 15:56:12.946" endtime="20201030 15:56:12.961"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:12.974" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201030 15:56:12.971" endtime="20201030 15:56:12.975"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:12.980" level="INFO">VALUE: [2.656900000000406e-05, 2.6221999999999357e-05, 2.6000000000005186e-05, 2.7013999999998817e-05, 2.6166000000001077e-05, 2.666599999999464e-05, 2.616700000000055e-05, 2.6042000000003895e-05, 2.6332999999996443e-05, 2.6735999999999427e-05, 2.665300000000148e-05, 2.638900000000166e-05, 2.6708000000000287e-05, 2.6471999999999607e-05, 2.618100000000012e-05, 2.633300000000338e-05, 2.6332999999996443e-05, 2.6221999999999357e-05, 2.666700000000105e-05, 2.611100000000227e-05, 2.6014000000004756e-05, 2.611100000000227e-05, 2.6290999999997733e-05, 2.6819999999996846e-05, 2.6819999999996846e-05, 2.6957999999993598e-05, 2.648700000000559e-05, 2.612500000000184e-05, 2.6012999999998343e-05, 2.6332999999996443e-05, 2.6458000000000037e-05, 2.688799999999575e-05, 2.6250000000005436e-05, 2.6471999999999607e-05, 2.637500000000209e-05, 2.6958000000000537e-05, 2.6791999999997707e-05, 2.6540999999997983e-05, 2.6792000000004645e-05, 2.6514000000005256e-05, 2.6583999999996166e-05, 2.690300000000173e-05, 2.5985999999998677e-05, 2.5999999999998247e-05, 2.6888999999995222e-05, 2.5999999999998247e-05, 2.6721999999999857e-05, 2.6179999999993708e-05, 2.6556000000003965e-05, 2.6333999999995916e-05]</msg>
<status status="PASS" starttime="20201030 15:56:12.976" endtime="20201030 15:56:12.982"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.963" endtime="20201030 15:56:12.984"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:12.995" endtime="20201030 15:56:13.018"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.990" endtime="20201030 15:56:13.019"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.988" endtime="20201030 15:56:13.020"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.483" endtime="20201030 15:56:13.021"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.482" endtime="20201030 15:56:13.021"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:13.044" endtime="20201030 15:56:13.063"></status>
</kw>
<msg timestamp="20201030 15:56:13.064" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:13.041" endtime="20201030 15:56:13.065"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:13.070" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:13.067" endtime="20201030 15:56:13.071"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:13.073" endtime="20201030 15:56:13.077"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:13.033" endtime="20201030 15:56:13.078"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:13.028" endtime="20201030 15:56:13.080"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:13.097" endtime="20201030 15:56:13.450"></status>
</kw>
<msg timestamp="20201030 15:56:13.458" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041713472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041740889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:13.094" endtime="20201030 15:56:13.458"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:13.478" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041713472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041740889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:13.460" endtime="20201030 15:56:13.479"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:13.480" endtime="20201030 15:56:13.484"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:13.086" endtime="20201030 15:56:13.486"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:13.081" endtime="20201030 15:56:13.488"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:13.499" level="INFO">${RESULT} = [{'diff': 2.74170000000018e-05}, {'diff': 2.7499999999999747e-05}, {'diff': 2.7805999999998277e-05}, {'diff': 2.7070000000004035e-05}, {'diff': 2.7527999999998887e-05}, {'diff': 2.7276999999999163e-05...</msg>
<status status="PASS" starttime="20201030 15:56:13.489" endtime="20201030 15:56:13.500"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:13.509" level="INFO">${ACCURACY} = {'diff': [2.74170000000018e-05, 2.7499999999999747e-05, 2.7805999999998277e-05, 2.7070000000004035e-05, 2.7527999999998887e-05, 2.7276999999999163e-05, 2.7541999999998457e-05, 2.7291999999998207e-05, ...</msg>
<status status="PASS" starttime="20201030 15:56:13.501" endtime="20201030 15:56:13.510"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:13.521" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201030 15:56:13.518" endtime="20201030 15:56:13.522"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:13.527" level="INFO">VALUE: [2.74170000000018e-05, 2.7499999999999747e-05, 2.7805999999998277e-05, 2.7070000000004035e-05, 2.7527999999998887e-05, 2.7276999999999163e-05, 2.7541999999998457e-05, 2.7291999999998207e-05, 2.7528000000005826e-05, 2.7777999999999137e-05, 2.768100000000162e-05, 2.7500000000006686e-05, 2.794500000000144e-05, 2.7334000000003855e-05, 2.6999999999999247e-05, 2.7346999999997013e-05, 2.7763000000000093e-05, 2.7804999999998803e-05, 2.7193999999994278e-05, 2.75970000000042e-05, 2.7708000000001287e-05, 2.7054999999998053e-05, 2.7027999999998387e-05, 2.7486000000000177e-05, 2.7832999999997943e-05, 2.7722000000000857e-05, 2.7458000000001037e-05, 2.787500000000359e-05, 2.738900000000266e-05, 2.7582999999997693e-05, 2.7472000000000607e-05, 2.7458000000001037e-05, 2.766700000000205e-05, 2.743100000000137e-05, 2.747300000000008e-05, 2.747300000000008e-05, 2.7277000000006102e-05, 2.7541999999998457e-05, 2.7777999999999137e-05, 2.7611999999996306e-05, 2.7041000000005422e-05, 2.7222000000000357e-05, 2.770900000000076e-05, 2.761100000000377e-05, 2.7540999999998983e-05, 2.7763000000000093e-05, 2.7264000000006006e-05, 2.7540999999998983e-05, 2.734700000000395e-05, 2.7096999999996763e-05]</msg>
<status status="PASS" starttime="20201030 15:56:13.523" endtime="20201030 15:56:13.528"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:13.511" endtime="20201030 15:56:13.530"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:13.540" endtime="20201030 15:56:13.563"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:13.536" endtime="20201030 15:56:13.565"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:13.533" endtime="20201030 15:56:13.566"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:13.023" endtime="20201030 15:56:13.566"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:13.022" endtime="20201030 15:56:13.567"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:13.592" endtime="20201030 15:56:13.614"></status>
</kw>
<msg timestamp="20201030 15:56:13.616" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:13.589" endtime="20201030 15:56:13.616"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:13.622" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:13.618" endtime="20201030 15:56:13.623"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:13.625" endtime="20201030 15:56:13.629"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:13.581" endtime="20201030 15:56:13.631"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:13.574" endtime="20201030 15:56:13.632"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:13.650" endtime="20201030 15:56:14.020"></status>
</kw>
<msg timestamp="20201030 15:56:14.028" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047537819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047566653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:13.647" endtime="20201030 15:56:14.029"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:14.048" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047537819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047566653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:14.031" endtime="20201030 15:56:14.049"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:14.051" endtime="20201030 15:56:14.055"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:13.639" endtime="20201030 15:56:14.057"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:13.634" endtime="20201030 15:56:14.058"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:14.069" level="INFO">${RESULT} = [{'diff': 2.8833999999998416e-05}, {'diff': 2.8570000000005535e-05}, {'diff': 2.894500000000244e-05}, {'diff': 2.822300000000083e-05}, {'diff': 2.812500000000384e-05}, {'diff': 2.822300000000083e-05},...</msg>
<status status="PASS" starttime="20201030 15:56:14.060" endtime="20201030 15:56:14.070"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:14.079" level="INFO">${ACCURACY} = {'diff': [2.8833999999998416e-05, 2.8570000000005535e-05, 2.894500000000244e-05, 2.822300000000083e-05, 2.812500000000384e-05, 2.822300000000083e-05, 2.8568999999999123e-05, 2.8638999999996972e-05, 2....</msg>
<status status="PASS" starttime="20201030 15:56:14.072" endtime="20201030 15:56:14.080"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:14.091" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201030 15:56:14.089" endtime="20201030 15:56:14.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:14.097" level="INFO">VALUE: [2.8833999999998416e-05, 2.8570000000005535e-05, 2.894500000000244e-05, 2.822300000000083e-05, 2.812500000000384e-05, 2.822300000000083e-05, 2.8568999999999123e-05, 2.8638999999996972e-05, 2.8096999999997763e-05, 2.8152000000003508e-05, 2.8736000000001427e-05, 2.838900000000366e-05, 2.8208000000001787e-05, 2.8083999999997666e-05, 2.8971999999995168e-05, 2.8846999999998513e-05, 2.8818999999999373e-05, 2.8110999999997333e-05, 2.8568999999999123e-05, 2.892999999999646e-05, 2.834700000000495e-05, 2.8208000000001787e-05, 2.8569999999998597e-05, 2.8264000000000067e-05, 2.8541999999999457e-05, 2.8624999999997403e-05, 2.843100000000237e-05, 2.8652999999996542e-05, 2.8610999999997833e-05, 2.845900000000151e-05, 2.8026999999999913e-05, 2.8638999999996972e-05, 2.8444999999995002e-05, 2.843100000000237e-05, 2.843100000000237e-05, 2.8874999999997653e-05, 2.8874999999997653e-05, 2.8221999999994418e-05, 2.8388999999996722e-05, 2.8554999999999553e-05, 2.8930000000003397e-05, 2.8041999999998957e-05, 2.8290999999999733e-05, 2.8888999999997222e-05, 2.8540999999999983e-05, 2.834700000000495e-05, 2.840300000000323e-05, 2.8708000000002287e-05, 2.866700000000305e-05, 2.8180999999995182e-05]</msg>
<status status="PASS" starttime="20201030 15:56:14.094" endtime="20201030 15:56:14.103"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.081" endtime="20201030 15:56:14.105"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:14.117" endtime="20201030 15:56:14.139"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.111" endtime="20201030 15:56:14.141"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.108" endtime="20201030 15:56:14.142"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:13.569" endtime="20201030 15:56:14.142"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:13.568" endtime="20201030 15:56:14.143"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:14.168" endtime="20201030 15:56:14.187"></status>
</kw>
<msg timestamp="20201030 15:56:14.188" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:14.164" endtime="20201030 15:56:14.189"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:14.195" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:14.190" endtime="20201030 15:56:14.196"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:14.197" endtime="20201030 15:56:14.202"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.156" endtime="20201030 15:56:14.203"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.150" endtime="20201030 15:56:14.205"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:14.222" endtime="20201030 15:56:14.594"></status>
</kw>
<msg timestamp="20201030 15:56:14.602" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044058194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044087847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:14.219" endtime="20201030 15:56:14.603"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:14.623" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044058194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044087847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:14.605" endtime="20201030 15:56:14.623"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:14.625" endtime="20201030 15:56:14.630"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.211" endtime="20201030 15:56:14.632"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.206" endtime="20201030 15:56:14.633"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:14.645" level="INFO">${RESULT} = [{'diff': 2.9652999999997542e-05}, {'diff': 2.9694000000003717e-05}, {'diff': 2.9319999999999347e-05}, {'diff': 2.9819000000000373e-05}, {'diff': 2.9805000000000803e-05}, {'diff': 2.9208000000002787e-...</msg>
<status status="PASS" starttime="20201030 15:56:14.635" endtime="20201030 15:56:14.645"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:14.657" level="INFO">${ACCURACY} = {'diff': [2.9652999999997542e-05, 2.9694000000003717e-05, 2.9319999999999347e-05, 2.9819000000000373e-05, 2.9805000000000803e-05, 2.9208000000002787e-05, 2.966599999999764e-05, 2.9874999999998653e-05,...</msg>
<status status="PASS" starttime="20201030 15:56:14.647" endtime="20201030 15:56:14.657"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:14.668" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201030 15:56:14.666" endtime="20201030 15:56:14.669"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:14.674" level="INFO">VALUE: [2.9652999999997542e-05, 2.9694000000003717e-05, 2.9319999999999347e-05, 2.9819000000000373e-05, 2.9805000000000803e-05, 2.9208000000002787e-05, 2.966599999999764e-05, 2.9874999999998653e-05, 2.9777000000001663e-05, 2.9888999999998223e-05, 2.913900000000441e-05, 2.9888999999998223e-05, 2.9652999999997542e-05, 2.9666999999997112e-05, 2.9666000000004578e-05, 2.9110999999998333e-05, 2.9666999999997112e-05, 2.9597999999998736e-05, 2.9402999999997292e-05, 2.988900000000516e-05, 2.9222000000002357e-05, 2.9222000000002357e-05, 2.9110999999998333e-05, 2.9792000000000707e-05, 2.9666999999997112e-05, 2.9792000000000707e-05, 2.966700000000405e-05, 2.922300000000183e-05, 2.9014000000000817e-05, 2.9596999999999263e-05, 2.9847999999998986e-05, 2.9778000000001137e-05, 2.9582999999999693e-05, 2.9318999999999873e-05, 2.9416000000004328e-05, 2.9832999999999943e-05, 2.9360999999998583e-05, 2.9500000000001747e-05, 2.9068999999999623e-05, 2.9819000000000373e-05, 2.9638999999997973e-05, 2.9236000000001927e-05, 2.9000000000001247e-05, 2.922199999999542e-05, 2.9888999999998223e-05, 2.9611999999998306e-05, 2.987500000000559e-05, 2.9346999999999013e-05, 2.9264000000001067e-05, 2.9055999999999527e-05]</msg>
<status status="PASS" starttime="20201030 15:56:14.671" endtime="20201030 15:56:14.676"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.658" endtime="20201030 15:56:14.678"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:14.688" endtime="20201030 15:56:14.710"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.683" endtime="20201030 15:56:14.712"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.680" endtime="20201030 15:56:14.713"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.145" endtime="20201030 15:56:14.713"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.144" endtime="20201030 15:56:14.714"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:14.738" endtime="20201030 15:56:14.759"></status>
</kw>
<msg timestamp="20201030 15:56:14.760" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:14.735" endtime="20201030 15:56:14.761"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:14.767" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:14.763" endtime="20201030 15:56:14.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:14.769" endtime="20201030 15:56:14.773"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.727" endtime="20201030 15:56:14.775"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.721" endtime="20201030 15:56:14.777"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:14.794" endtime="20201030 15:56:15.166"></status>
</kw>
<msg timestamp="20201030 15:56:15.174" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044121889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044152764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:14.791" endtime="20201030 15:56:15.174"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:15.193" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044121889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044152764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:15.176" endtime="20201030 15:56:15.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:15.196" endtime="20201030 15:56:15.200"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.783" endtime="20201030 15:56:15.202"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.778" endtime="20201030 15:56:15.203"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:15.214" level="INFO">${RESULT} = [{'diff': 3.087499999999965e-05}, {'diff': 3.0222000000003357e-05}, {'diff': 3.0292000000001207e-05}, {'diff': 3.0042000000000957e-05}, {'diff': 3.0388999999998723e-05}, {'diff': 3.088899999999922e-05...</msg>
<status status="PASS" starttime="20201030 15:56:15.205" endtime="20201030 15:56:15.215"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:15.227" level="INFO">${ACCURACY} = {'diff': [3.087499999999965e-05, 3.0222000000003357e-05, 3.0292000000001207e-05, 3.0042000000000957e-05, 3.0388999999998723e-05, 3.088899999999922e-05, 3.088899999999922e-05, 3.0847999999999987e-05, 3...</msg>
<status status="PASS" starttime="20201030 15:56:15.217" endtime="20201030 15:56:15.228"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:15.241" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201030 15:56:15.238" endtime="20201030 15:56:15.242"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:15.248" level="INFO">VALUE: [3.087499999999965e-05, 3.0222000000003357e-05, 3.0292000000001207e-05, 3.0042000000000957e-05, 3.0388999999998723e-05, 3.088899999999922e-05, 3.088899999999922e-05, 3.0847999999999987e-05, 3.082000000000085e-05, 3.063899999999897e-05, 3.0416999999997862e-05, 3.07779999999952e-05, 3.056900000000112e-05, 3.0444000000004467e-05, 3.066600000000558e-05, 3.0000000000002247e-05, 3.0347000000000013e-05, 3.076399999999563e-05, 3.066599999999864e-05, 3.090299999999879e-05, 3.09579999999976e-05, 3.086100000000008e-05, 3.0110999999999333e-05, 3.0596999999993324e-05, 3.0250000000002497e-05, 3.06249999999994e-05, 3.065299999999854e-05, 3.0292000000001207e-05, 3.0597999999999737e-05, 3.0070000000000097e-05, 3.054200000000146e-05, 3.05700000000006e-05, 3.011100000000627e-05, 3.074999999999606e-05, 3.097300000000358e-05, 3.020900000000326e-05, 3.076400000000257e-05, 3.0847999999999987e-05, 3.054200000000146e-05, 3.0458000000004037e-05, 3.0222999999995892e-05, 3.016700000000455e-05, 3.020799999999685e-05, 3.0500000000002747e-05, 3.0360999999999583e-05, 3.054100000000198e-05, 2.9916000000004828e-05, 3.055500000000155e-05, 2.99579999999966e-05, 3.056900000000112e-05]</msg>
<status status="PASS" starttime="20201030 15:56:15.244" endtime="20201030 15:56:15.250"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:15.230" endtime="20201030 15:56:15.253"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:15.265" endtime="20201030 15:56:15.289"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:15.260" endtime="20201030 15:56:15.291"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:15.256" endtime="20201030 15:56:15.292"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.716" endtime="20201030 15:56:15.293"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.715" endtime="20201030 15:56:15.293"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:15.318" endtime="20201030 15:56:15.338"></status>
</kw>
<msg timestamp="20201030 15:56:15.339" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:15.314" endtime="20201030 15:56:15.339"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:15.345" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:15.341" endtime="20201030 15:56:15.346"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:15.348" endtime="20201030 15:56:15.352"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:15.307" endtime="20201030 15:56:15.354"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:15.300" endtime="20201030 15:56:15.356"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:15.373" endtime="20201030 15:56:15.747"></status>
</kw>
<msg timestamp="20201030 15:56:15.754" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045047431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045079056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:15.370" endtime="20201030 15:56:15.755"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:15.774" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045047431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045079056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:15.757" endtime="20201030 15:56:15.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:15.777" endtime="20201030 15:56:15.781"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:15.362" endtime="20201030 15:56:15.783"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:15.357" endtime="20201030 15:56:15.784"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:15.796" level="INFO">${RESULT} = [{'diff': 3.16250000000004e-05}, {'diff': 3.190200000000032e-05}, {'diff': 3.1862000000000557e-05}, {'diff': 3.138899999999972e-05}, {'diff': 3.191599999999989e-05}, {'diff': 3.131900000000187e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:56:15.786" endtime="20201030 15:56:15.796"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:15.806" level="INFO">${ACCURACY} = {'diff': [3.16250000000004e-05, 3.190200000000032e-05, 3.1862000000000557e-05, 3.138899999999972e-05, 3.191599999999989e-05, 3.131900000000187e-05, 3.111100000000033e-05, 3.105500000000205e-05, 3.1679...</msg>
<status status="PASS" starttime="20201030 15:56:15.798" endtime="20201030 15:56:15.806"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:15.817" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201030 15:56:15.815" endtime="20201030 15:56:15.818"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:15.823" level="INFO">VALUE: [3.16250000000004e-05, 3.190200000000032e-05, 3.1862000000000557e-05, 3.138899999999972e-05, 3.191599999999989e-05, 3.131900000000187e-05, 3.111100000000033e-05, 3.105500000000205e-05, 3.167999999999921e-05, 3.115300000000598e-05, 3.166599999999964e-05, 3.151400000000332e-05, 3.156900000000212e-05, 3.129199999999527e-05, 3.130600000000178e-05, 3.168099999999868e-05, 3.102800000000239e-05, 3.116699999999861e-05, 3.163899999999997e-05, 3.129199999999527e-05, 3.154200000000246e-05, 3.1444999999998e-05, 3.130599999999484e-05, 3.1804999999995864e-05, 3.1527000000003413e-05, 3.186100000000108e-05, 3.184700000000151e-05, 3.122200000000436e-05, 3.1790999999996294e-05, 3.197199999999817e-05, 3.172199999999792e-05, 3.183300000000194e-05, 3.122200000000436e-05, 3.100000000000325e-05, 3.173600000000443e-05, 3.113899999999947e-05, 3.108300000000119e-05, 3.118099999999818e-05, 3.115299999999904e-05, 3.133400000000092e-05, 3.17779999999962e-05, 3.133300000000144e-05, 3.102799999999545e-05, 3.16250000000004e-05, 3.176400000000357e-05, 3.152800000000289e-05, 3.186100000000108e-05, 3.14170000000058e-05, 3.181999999999491e-05, 3.191599999999989e-05]</msg>
<status status="PASS" starttime="20201030 15:56:15.820" endtime="20201030 15:56:15.825"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:15.808" endtime="20201030 15:56:15.827"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:15.837" endtime="20201030 15:56:15.859"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:15.832" endtime="20201030 15:56:15.861"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:15.829" endtime="20201030 15:56:15.862"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:15.295" endtime="20201030 15:56:15.862"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:15.294" endtime="20201030 15:56:15.863"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:15.887" endtime="20201030 15:56:15.908"></status>
</kw>
<msg timestamp="20201030 15:56:15.910" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:15.883" endtime="20201030 15:56:15.910"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:15.916" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:15.912" endtime="20201030 15:56:15.917"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:15.919" endtime="20201030 15:56:15.923"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:15.876" endtime="20201030 15:56:15.925"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:15.870" endtime="20201030 15:56:15.926"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:15.944" endtime="20201030 15:56:16.321"></status>
</kw>
<msg timestamp="20201030 15:56:16.329" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0453675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045400361, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:56:15.940" endtime="20201030 15:56:16.330"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:16.349" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0453675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045400361, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:56:16.331" endtime="20201030 15:56:16.350"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:16.351" endtime="20201030 15:56:16.356"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:15.933" endtime="20201030 15:56:16.357"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:15.928" endtime="20201030 15:56:16.359"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:16.370" level="INFO">${RESULT} = [{'diff': 3.286100000000208e-05}, {'diff': 3.249999999999781e-05}, {'diff': 3.23050000000033e-05}, {'diff': 3.266700000000011e-05}, {'diff': 3.211100000000133e-05}, {'diff': 3.243099999999943e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:56:16.361" endtime="20201030 15:56:16.371"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:16.380" level="INFO">${ACCURACY} = {'diff': [3.286100000000208e-05, 3.249999999999781e-05, 3.23050000000033e-05, 3.266700000000011e-05, 3.211100000000133e-05, 3.243099999999943e-05, 3.270899999999882e-05, 3.290300000000079e-05, 3.21110...</msg>
<status status="PASS" starttime="20201030 15:56:16.372" endtime="20201030 15:56:16.381"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:16.392" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201030 15:56:16.389" endtime="20201030 15:56:16.393"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:16.398" level="INFO">VALUE: [3.286100000000208e-05, 3.249999999999781e-05, 3.23050000000033e-05, 3.266700000000011e-05, 3.211100000000133e-05, 3.243099999999943e-05, 3.270899999999882e-05, 3.290300000000079e-05, 3.211100000000133e-05, 3.2124999999993964e-05, 3.232000000000235e-05, 3.201400000000382e-05, 3.2304999999996364e-05, 3.277800000000414e-05, 3.255600000000303e-05, 3.211100000000133e-05, 3.205600000000253e-05, 3.238799999999431e-05, 3.281900000000337e-05, 3.238900000000072e-05, 3.205500000000305e-05, 3.2346999999995074e-05, 3.248599999999824e-05, 3.211100000000133e-05, 3.226399999999713e-05, 3.222199999999842e-05, 3.222199999999842e-05, 3.199999999999731e-05, 3.222199999999842e-05, 3.279200000000371e-05, 3.199999999999731e-05, 3.233300000000244e-05, 3.27779999999972e-05, 3.21250000000009e-05, 3.255599999999609e-05, 3.282000000000285e-05, 3.202800000000339e-05, 3.201400000000382e-05, 3.209800000000124e-05, 3.211100000000133e-05, 3.290300000000079e-05, 3.199999999999731e-05, 3.288900000000122e-05, 3.247199999999867e-05, 3.297199999999917e-05, 3.215300000000004e-05, 3.233300000000244e-05, 3.242999999999996e-05, 3.213900000000047e-05, 3.2568999999996184e-05]</msg>
<status status="PASS" starttime="20201030 15:56:16.394" endtime="20201030 15:56:16.399"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:16.382" endtime="20201030 15:56:16.401"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:16.413" endtime="20201030 15:56:16.435"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:16.407" endtime="20201030 15:56:16.437"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:16.404" endtime="20201030 15:56:16.438"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:15.865" endtime="20201030 15:56:16.439"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:15.864" endtime="20201030 15:56:16.439"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:16.463" endtime="20201030 15:56:16.484"></status>
</kw>
<msg timestamp="20201030 15:56:16.486" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:16.460" endtime="20201030 15:56:16.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:16.492" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:16.488" endtime="20201030 15:56:16.493"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:16.495" endtime="20201030 15:56:16.499"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:16.452" endtime="20201030 15:56:16.500"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:16.446" endtime="20201030 15:56:16.502"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:16.520" endtime="20201030 15:56:16.891"></status>
</kw>
<msg timestamp="20201030 15:56:16.899" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043826472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043860222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:16.517" endtime="20201030 15:56:16.899"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:16.918" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043826472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043860222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:16.901" endtime="20201030 15:56:16.919"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:16.921" endtime="20201030 15:56:16.925"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:16.509" endtime="20201030 15:56:16.927"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:16.503" endtime="20201030 15:56:16.929"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:16.940" level="INFO">${RESULT} = [{'diff': 3.374999999999906e-05}, {'diff': 3.3290999999997795e-05}, {'diff': 3.3874999999995714e-05}, {'diff': 3.337500000000215e-05}, {'diff': 3.3624999999995464e-05}, {'diff': 3.331999999999641e-05}...</msg>
<status status="PASS" starttime="20201030 15:56:16.930" endtime="20201030 15:56:16.940"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:16.951" level="INFO">${ACCURACY} = {'diff': [3.374999999999906e-05, 3.3290999999997795e-05, 3.3874999999995714e-05, 3.337500000000215e-05, 3.3624999999995464e-05, 3.331999999999641e-05, 3.319400000000028e-05, 3.322199999999942e-05, 3.3...</msg>
<status status="PASS" starttime="20201030 15:56:16.942" endtime="20201030 15:56:16.952"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:16.963" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201030 15:56:16.960" endtime="20201030 15:56:16.964"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:16.969" level="INFO">VALUE: [3.374999999999906e-05, 3.3290999999997795e-05, 3.3874999999995714e-05, 3.337500000000215e-05, 3.3624999999995464e-05, 3.331999999999641e-05, 3.319400000000028e-05, 3.322199999999942e-05, 3.3166999999993674e-05, 3.348600000000618e-05, 3.299999999999831e-05, 3.3082999999996254e-05, 3.3916999999994424e-05, 3.298599999999874e-05, 3.390300000000179e-05, 3.3124999999994964e-05, 3.299999999999831e-05, 3.37779999999982e-05, 3.323699999999846e-05, 3.39450000000005e-05, 3.3082999999996254e-05, 3.30700000000031e-05, 3.351399999999838e-05, 3.3916999999994424e-05, 3.368000000000121e-05, 3.34580000000001e-05, 3.34580000000001e-05, 3.393000000000146e-05, 3.319400000000028e-05, 3.365300000000154e-05, 3.352799999999795e-05, 3.384700000000351e-05, 3.301399999999788e-05, 3.3124999999994964e-05, 3.3332999999996504e-05, 3.340300000000129e-05, 3.323599999999899e-05, 3.302799999999745e-05, 3.391700000000136e-05, 3.308400000000267e-05, 3.320899999999932e-05, 3.299999999999831e-05, 3.356999999999666e-05, 3.322300000000583e-05, 3.3582999999996754e-05, 3.3790999999998295e-05, 3.3082999999996254e-05, 3.298599999999874e-05, 3.322199999999942e-05, 3.3805000000004803e-05]</msg>
<status status="PASS" starttime="20201030 15:56:16.965" endtime="20201030 15:56:16.970"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:16.953" endtime="20201030 15:56:16.972"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:16.982" endtime="20201030 15:56:17.005"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:16.977" endtime="20201030 15:56:17.006"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:16.975" endtime="20201030 15:56:17.007"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:16.441" endtime="20201030 15:56:17.008"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:16.440" endtime="20201030 15:56:17.008"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:17.032" endtime="20201030 15:56:17.053"></status>
</kw>
<msg timestamp="20201030 15:56:17.054" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:17.029" endtime="20201030 15:56:17.055"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:17.061" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:17.057" endtime="20201030 15:56:17.062"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:17.063" endtime="20201030 15:56:17.068"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:17.021" endtime="20201030 15:56:17.069"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:17.015" endtime="20201030 15:56:17.071"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:17.089" endtime="20201030 15:56:17.458"></status>
</kw>
<msg timestamp="20201030 15:56:17.466" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043864889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043899181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:17.085" endtime="20201030 15:56:17.467"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:17.486" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043864889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043899181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:17.468" endtime="20201030 15:56:17.487"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:17.488" endtime="20201030 15:56:17.492"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:17.078" endtime="20201030 15:56:17.494"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:17.072" endtime="20201030 15:56:17.496"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:17.507" level="INFO">${RESULT} = [{'diff': 3.429200000000521e-05}, {'diff': 3.4790999999999295e-05}, {'diff': 3.4054999999998115e-05}, {'diff': 3.4596999999997324e-05}, {'diff': 3.434700000000401e-05}, {'diff': 3.475000000000006e-05}...</msg>
<status status="PASS" starttime="20201030 15:56:17.497" endtime="20201030 15:56:17.507"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:17.519" level="INFO">${ACCURACY} = {'diff': [3.429200000000521e-05, 3.4790999999999295e-05, 3.4054999999998115e-05, 3.4596999999997324e-05, 3.434700000000401e-05, 3.475000000000006e-05, 3.398599999999974e-05, 3.444400000000153e-05, 3.4...</msg>
<status status="PASS" starttime="20201030 15:56:17.509" endtime="20201030 15:56:17.519"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:17.531" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201030 15:56:17.528" endtime="20201030 15:56:17.531"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:17.536" level="INFO">VALUE: [3.429200000000521e-05, 3.4790999999999295e-05, 3.4054999999998115e-05, 3.4596999999997324e-05, 3.434700000000401e-05, 3.475000000000006e-05, 3.398599999999974e-05, 3.444400000000153e-05, 3.42500000000065e-05, 3.454199999999852e-05, 3.426399999999913e-05, 3.497200000000117e-05, 3.4944999999994564e-05, 3.454199999999852e-05, 3.490300000000279e-05, 3.451399999999938e-05, 3.430599999999784e-05, 3.473600000000049e-05, 3.49450000000015e-05, 3.424999999999956e-05, 3.430600000000478e-05, 3.484800000000399e-05, 3.4138000000003e-05, 3.429199999999827e-05, 3.4445000000001e-05, 3.466700000000211e-05, 3.494400000000203e-05, 3.4068999999997684e-05, 3.451399999999938e-05, 3.44580000000011e-05, 3.449999999999981e-05, 3.434700000000401e-05, 3.444400000000153e-05, 3.444400000000153e-05, 3.433300000000444e-05, 3.405599999999759e-05, 3.42779999999987e-05, 3.477800000000614e-05, 3.423599999999999e-05, 3.4346999999997074e-05, 3.455599999999809e-05, 3.4124999999995964e-05, 3.4402999999995354e-05, 3.493100000000193e-05, 3.402799999999845e-05, 3.437500000000315e-05, 3.455599999999809e-05, 3.429199999999827e-05, 3.4026999999998975e-05, 3.4276999999999225e-05]</msg>
<status status="PASS" starttime="20201030 15:56:17.533" endtime="20201030 15:56:17.538"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:17.521" endtime="20201030 15:56:17.540"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:17.550" endtime="20201030 15:56:17.572"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:17.545" endtime="20201030 15:56:17.574"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:17.542" endtime="20201030 15:56:17.575"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:17.010" endtime="20201030 15:56:17.576"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:17.009" endtime="20201030 15:56:17.576"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:17.600" endtime="20201030 15:56:17.621"></status>
</kw>
<msg timestamp="20201030 15:56:17.622" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:17.597" endtime="20201030 15:56:17.623"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:17.629" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:17.624" endtime="20201030 15:56:17.630"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:17.631" endtime="20201030 15:56:17.636"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:17.589" endtime="20201030 15:56:17.637"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:17.583" endtime="20201030 15:56:17.639"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:17.656" endtime="20201030 15:56:18.036"></status>
</kw>
<msg timestamp="20201030 15:56:18.044" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043595333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043631319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:17.653" endtime="20201030 15:56:18.045"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:18.064" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043595333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043631319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:18.047" endtime="20201030 15:56:18.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:18.067" endtime="20201030 15:56:18.071"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:17.645" endtime="20201030 15:56:18.073"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:17.640" endtime="20201030 15:56:18.074"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:18.086" level="INFO">${RESULT} = [{'diff': 3.598600000000174e-05}, {'diff': 3.5388999999996784e-05}, {'diff': 3.526400000000013e-05}, {'diff': 3.5902999999996854e-05}, {'diff': 3.506999999999816e-05}, {'diff': 3.588900000000422e-05},...</msg>
<status status="PASS" starttime="20201030 15:56:18.076" endtime="20201030 15:56:18.086"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:18.096" level="INFO">${ACCURACY} = {'diff': [3.598600000000174e-05, 3.5388999999996784e-05, 3.526400000000013e-05, 3.5902999999996854e-05, 3.506999999999816e-05, 3.588900000000422e-05, 3.519500000000175e-05, 3.5554999999999615e-05, 3.5...</msg>
<status status="PASS" starttime="20201030 15:56:18.088" endtime="20201030 15:56:18.096"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:18.107" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201030 15:56:18.105" endtime="20201030 15:56:18.108"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:18.113" level="INFO">VALUE: [3.598600000000174e-05, 3.5388999999996784e-05, 3.526400000000013e-05, 3.5902999999996854e-05, 3.506999999999816e-05, 3.588900000000422e-05, 3.519500000000175e-05, 3.5554999999999615e-05, 3.5610999999997894e-05, 3.565200000000407e-05, 3.5110999999997394e-05, 3.502800000000639e-05, 3.5124999999996964e-05, 3.541700000000286e-05, 3.5638999999997034e-05, 3.5541000000000045e-05, 3.5610999999997894e-05, 3.555599999999909e-05, 3.497199999999423e-05, 3.551400000000038e-05, 3.525000000000056e-05, 3.579199999999977e-05, 3.540300000000329e-05, 3.550000000000081e-05, 3.526400000000013e-05, 3.515300000000304e-05, 3.520900000000132e-05, 3.5054999999999115e-05, 3.598600000000174e-05, 3.591600000000389e-05, 3.561100000000483e-05, 3.522300000000089e-05, 3.538799999999731e-05, 3.519400000000228e-05, 3.568000000000321e-05, 3.5026999999999975e-05, 3.523600000000099e-05, 3.502799999999945e-05, 3.5527000000000475e-05, 3.566600000000364e-05, 3.5832999999999005e-05, 3.5110999999997394e-05, 3.520800000000185e-05, 3.542999999999602e-05, 3.5832999999999005e-05, 3.551400000000038e-05, 3.565300000000354e-05, 3.573599999999455e-05, 3.511100000000433e-05, 3.6012999999994466e-05]</msg>
<status status="PASS" starttime="20201030 15:56:18.110" endtime="20201030 15:56:18.115"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.098" endtime="20201030 15:56:18.117"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:18.127" endtime="20201030 15:56:18.149"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.122" endtime="20201030 15:56:18.151"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.119" endtime="20201030 15:56:18.151"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:17.578" endtime="20201030 15:56:18.152"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:17.577" endtime="20201030 15:56:18.153"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:18.177" endtime="20201030 15:56:18.199"></status>
</kw>
<msg timestamp="20201030 15:56:18.200" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:18.173" endtime="20201030 15:56:18.201"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:18.207" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:18.203" endtime="20201030 15:56:18.208"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:18.210" endtime="20201030 15:56:18.214"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.166" endtime="20201030 15:56:18.215"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.159" endtime="20201030 15:56:18.217"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:18.235" endtime="20201030 15:56:18.576"></status>
</kw>
<msg timestamp="20201030 15:56:18.583" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045218583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045254653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:18.231" endtime="20201030 15:56:18.583"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:18.601" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045218583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045254653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:18.585" endtime="20201030 15:56:18.602"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:18.604" endtime="20201030 15:56:18.608"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.223" endtime="20201030 15:56:18.609"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.218" endtime="20201030 15:56:18.611"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:18.621" level="INFO">${RESULT} = [{'diff': 3.606999999999916e-05}, {'diff': 3.6958999999996134e-05}, {'diff': 3.633399999999898e-05}, {'diff': 3.634800000000549e-05}, {'diff': 3.647300000000214e-05}, {'diff': 3.601400000000088e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:56:18.612" endtime="20201030 15:56:18.622"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:18.631" level="INFO">${ACCURACY} = {'diff': [3.606999999999916e-05, 3.6958999999996134e-05, 3.633399999999898e-05, 3.634800000000549e-05, 3.647300000000214e-05, 3.601400000000088e-05, 3.6332999999999505e-05, 3.641599999999745e-05, 3.64...</msg>
<status status="PASS" starttime="20201030 15:56:18.623" endtime="20201030 15:56:18.631"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:18.642" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201030 15:56:18.640" endtime="20201030 15:56:18.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:18.647" level="INFO">VALUE: [3.606999999999916e-05, 3.6958999999996134e-05, 3.633399999999898e-05, 3.634800000000549e-05, 3.647300000000214e-05, 3.601400000000088e-05, 3.6332999999999505e-05, 3.641599999999745e-05, 3.641600000000439e-05, 3.688799999999881e-05, 3.666600000000464e-05, 3.6332999999999505e-05, 3.670800000000335e-05, 3.6916999999997424e-05, 3.602800000000045e-05, 3.622200000000242e-05, 3.644400000000353e-05, 3.675000000000206e-05, 3.672199999999598e-05, 3.600000000000131e-05, 3.644400000000353e-05, 3.681999999999991e-05, 3.654200000000052e-05, 3.6652999999997604e-05, 3.6888999999998284e-05, 3.622199999999548e-05, 3.6902999999997854e-05, 3.6582999999999755e-05, 3.658399999999923e-05, 3.619400000000328e-05, 3.605599999999959e-05, 3.620800000000285e-05, 3.6346999999999074e-05, 3.640300000000429e-05, 3.67780000000012e-05, 3.679200000000077e-05, 3.619399999999634e-05, 3.61250000000049e-05, 3.67780000000012e-05, 3.601400000000088e-05, 3.6318999999999935e-05, 3.6138999999997534e-05, 3.640300000000429e-05, 3.686100000000608e-05, 3.6902999999997854e-05, 3.600000000000131e-05, 3.595799999999566e-05, 3.654200000000052e-05, 3.649999999999487e-05, 3.637500000000515e-05]</msg>
<status status="PASS" starttime="20201030 15:56:18.644" endtime="20201030 15:56:18.649"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.633" endtime="20201030 15:56:18.650"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:18.661" endtime="20201030 15:56:18.683"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.656" endtime="20201030 15:56:18.685"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.653" endtime="20201030 15:56:18.685"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.155" endtime="20201030 15:56:18.686"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.154" endtime="20201030 15:56:18.686"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:18.710" endtime="20201030 15:56:18.730"></status>
</kw>
<msg timestamp="20201030 15:56:18.731" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:18.707" endtime="20201030 15:56:18.732"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:18.738" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:18.733" endtime="20201030 15:56:18.739"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:18.740" endtime="20201030 15:56:18.744"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.700" endtime="20201030 15:56:18.746"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.694" endtime="20201030 15:56:18.748"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:18.765" endtime="20201030 15:56:19.104"></status>
</kw>
<msg timestamp="20201030 15:56:19.112" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042308875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042346056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:18.761" endtime="20201030 15:56:19.112"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:19.131" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042308875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042346056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:19.114" endtime="20201030 15:56:19.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:19.134" endtime="20201030 15:56:19.138"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.754" endtime="20201030 15:56:19.140"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.749" endtime="20201030 15:56:19.141"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:19.152" level="INFO">${RESULT} = [{'diff': 3.7180999999997244e-05}, {'diff': 3.7110999999999394e-05}, {'diff': 3.7610999999999895e-05}, {'diff': 3.765199999999913e-05}, {'diff': 3.7888999999999284e-05}, {'diff': 3.795799999999766e-05...</msg>
<status status="PASS" starttime="20201030 15:56:19.143" endtime="20201030 15:56:19.153"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:19.164" level="INFO">${ACCURACY} = {'diff': [3.7180999999997244e-05, 3.7110999999999394e-05, 3.7610999999999895e-05, 3.765199999999913e-05, 3.7888999999999284e-05, 3.795799999999766e-05, 3.7652999999998604e-05, 3.7555000000001615e-05, ...</msg>
<status status="PASS" starttime="20201030 15:56:19.155" endtime="20201030 15:56:19.164"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:19.176" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201030 15:56:19.173" endtime="20201030 15:56:19.177"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:19.182" level="INFO">VALUE: [3.7180999999997244e-05, 3.7110999999999394e-05, 3.7610999999999895e-05, 3.765199999999913e-05, 3.7888999999999284e-05, 3.795799999999766e-05, 3.7652999999998604e-05, 3.7555000000001615e-05, 3.7360999999999644e-05, 3.7874999999999714e-05, 3.7874999999999714e-05, 3.747200000000367e-05, 3.777799999999526e-05, 3.7944999999997564e-05, 3.705600000000059e-05, 3.7610999999999895e-05, 3.747200000000367e-05, 3.725000000000256e-05, 3.7888999999999284e-05, 3.770900000000382e-05, 3.750000000000281e-05, 3.7888999999999284e-05, 3.7374999999999214e-05, 3.6986999999995274e-05, 3.700000000000231e-05, 3.76659999999987e-05, 3.76659999999987e-05, 3.7388999999998784e-05, 3.774999999999612e-05, 3.71659999999982e-05, 3.7818999999994496e-05, 3.7110999999999394e-05, 3.770800000000435e-05, 3.726400000000213e-05, 3.74580000000041e-05, 3.7652999999998604e-05, 3.7416999999997924e-05, 3.7916999999998424e-05, 3.7194999999996814e-05, 3.774999999999612e-05, 3.7458999999996634e-05, 3.7444999999997064e-05, 3.7124999999998964e-05, 3.747300000000314e-05, 3.747200000000367e-05, 3.7680999999997744e-05, 3.736100000000658e-05, 3.7555000000001615e-05, 3.7333000000000505e-05, 3.7347000000000075e-05]</msg>
<status status="PASS" starttime="20201030 15:56:19.178" endtime="20201030 15:56:19.188"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.166" endtime="20201030 15:56:19.190"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:19.200" endtime="20201030 15:56:19.222"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.195" endtime="20201030 15:56:19.224"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.192" endtime="20201030 15:56:19.224"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.688" endtime="20201030 15:56:19.225"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.687" endtime="20201030 15:56:19.226"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:19.250" endtime="20201030 15:56:19.270"></status>
</kw>
<msg timestamp="20201030 15:56:19.271" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:19.246" endtime="20201030 15:56:19.272"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:19.278" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:19.274" endtime="20201030 15:56:19.279"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:19.281" endtime="20201030 15:56:19.285"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.239" endtime="20201030 15:56:19.286"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.232" endtime="20201030 15:56:19.288"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:19.306" endtime="20201030 15:56:19.664"></status>
</kw>
<msg timestamp="20201030 15:56:19.672" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043513069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043551306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:19.302" endtime="20201030 15:56:19.672"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:19.691" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043513069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043551306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:19.674" endtime="20201030 15:56:19.692"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:19.694" endtime="20201030 15:56:19.698"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.294" endtime="20201030 15:56:19.700"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.289" endtime="20201030 15:56:19.701"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:19.712" level="INFO">${RESULT} = [{'diff': 3.8236999999996524e-05}, {'diff': 3.849999999999687e-05}, {'diff': 3.85980000000008e-05}, {'diff': 3.89580000000056e-05}, {'diff': 3.8333000000001505e-05}, {'diff': 3.892999999999952e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:56:19.703" endtime="20201030 15:56:19.713"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:19.724" level="INFO">${ACCURACY} = {'diff': [3.8236999999996524e-05, 3.849999999999687e-05, 3.85980000000008e-05, 3.89580000000056e-05, 3.8333000000001505e-05, 3.892999999999952e-05, 3.8875000000000715e-05, 3.82780000000027e-05, 3.8166...</msg>
<status status="PASS" starttime="20201030 15:56:19.715" endtime="20201030 15:56:19.725"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:19.736" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201030 15:56:19.734" endtime="20201030 15:56:19.737"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:19.742" level="INFO">VALUE: [3.8236999999996524e-05, 3.849999999999687e-05, 3.85980000000008e-05, 3.89580000000056e-05, 3.8333000000001505e-05, 3.892999999999952e-05, 3.8875000000000715e-05, 3.82780000000027e-05, 3.8166999999998674e-05, 3.8347000000001075e-05, 3.820800000000485e-05, 3.873599999999755e-05, 3.898600000000474e-05, 3.8347000000001075e-05, 3.854199999999558e-05, 3.854199999999558e-05, 3.8375000000000214e-05, 3.8332999999994566e-05, 3.8874999999993776e-05, 3.855600000000209e-05, 3.8208999999997384e-05, 3.8222999999996954e-05, 3.823700000000346e-05, 3.855599999999515e-05, 3.855599999999515e-05, 3.800000000000331e-05, 3.8625000000000465e-05, 3.8777000000003725e-05, 3.8818999999995496e-05, 3.873600000000449e-05, 3.826400000000313e-05, 3.8611000000000895e-05, 3.8082999999994316e-05, 3.8347000000001075e-05, 3.8152999999999104e-05, 3.8430999999998494e-05, 3.84580000000051e-05, 3.8124999999999964e-05, 3.8402999999999354e-05, 3.79859999999968e-05, 3.823599999999705e-05, 3.827799999999576e-05, 3.855599999999515e-05, 3.799999999999637e-05, 3.8526999999996536e-05, 3.8652999999999604e-05, 3.8790999999996356e-05, 3.8166999999998674e-05, 3.845799999999816e-05, 3.865200000000013e-05]</msg>
<status status="PASS" starttime="20201030 15:56:19.739" endtime="20201030 15:56:19.744"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.727" endtime="20201030 15:56:19.745"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:19.756" endtime="20201030 15:56:19.781"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.751" endtime="20201030 15:56:19.783"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.748" endtime="20201030 15:56:19.784"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.228" endtime="20201030 15:56:19.784"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.227" endtime="20201030 15:56:19.785"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:19.811" endtime="20201030 15:56:19.831"></status>
</kw>
<msg timestamp="20201030 15:56:19.833" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:19.807" endtime="20201030 15:56:19.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:19.839" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:19.835" endtime="20201030 15:56:19.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:19.842" endtime="20201030 15:56:19.846"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.799" endtime="20201030 15:56:19.848"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.792" endtime="20201030 15:56:19.849"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:19.867" endtime="20201030 15:56:20.241"></status>
</kw>
<msg timestamp="20201030 15:56:20.249" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04852325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048562431, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:56:19.863" endtime="20201030 15:56:20.250"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:20.269" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04852325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048562431, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:56:20.251" endtime="20201030 15:56:20.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:20.271" endtime="20201030 15:56:20.275"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.856" endtime="20201030 15:56:20.277"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.851" endtime="20201030 15:56:20.279"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:20.290" level="INFO">${RESULT} = [{'diff': 3.918100000000618e-05}, {'diff': 3.9833000000003005e-05}, {'diff': 3.9262999999997716e-05}, {'diff': 3.9027000000003975e-05}, {'diff': 3.944399999999959e-05}, {'diff': 3.994400000000009e-05}...</msg>
<status status="PASS" starttime="20201030 15:56:20.280" endtime="20201030 15:56:20.290"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:20.300" level="INFO">${ACCURACY} = {'diff': [3.918100000000618e-05, 3.9833000000003005e-05, 3.9262999999997716e-05, 3.9027000000003975e-05, 3.944399999999959e-05, 3.994400000000009e-05, 3.9903000000000854e-05, 3.9875000000001715e-05, 3...</msg>
<status status="PASS" starttime="20201030 15:56:20.292" endtime="20201030 15:56:20.300"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:20.312" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201030 15:56:20.309" endtime="20201030 15:56:20.312"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:20.318" level="INFO">VALUE: [3.918100000000618e-05, 3.9833000000003005e-05, 3.9262999999997716e-05, 3.9027000000003975e-05, 3.944399999999959e-05, 3.994400000000009e-05, 3.9903000000000854e-05, 3.9875000000001715e-05, 3.9583000000002755e-05, 3.948600000000524e-05, 3.9875000000001715e-05, 3.9694999999999314e-05, 3.954200000000352e-05, 3.9444999999999064e-05, 3.951399999999744e-05, 3.9360999999994706e-05, 3.9208999999998384e-05, 3.9430999999999494e-05, 3.9111000000001395e-05, 3.89859999999978e-05, 3.970799999999941e-05, 3.9972999999998704e-05, 3.954200000000352e-05, 3.950000000000481e-05, 3.972199999999898e-05, 3.9111000000001395e-05, 3.9653000000000604e-05, 3.994400000000009e-05, 3.9361000000001645e-05, 3.9554999999996676e-05, 3.917999999999977e-05, 3.9569000000003185e-05, 3.9694999999999314e-05, 3.9653000000000604e-05, 3.972200000000592e-05, 3.922200000000542e-05, 3.9111000000001395e-05, 3.9110999999994456e-05, 3.9403000000000354e-05, 3.980600000000334e-05, 3.9111000000001395e-05, 3.954199999999658e-05, 3.9722999999998454e-05, 3.901399999999694e-05, 3.923600000000499e-05, 3.922300000000489e-05, 3.990200000000138e-05, 3.9762999999998216e-05, 3.9389000000000784e-05, 3.9833000000003005e-05]</msg>
<status status="PASS" starttime="20201030 15:56:20.314" endtime="20201030 15:56:20.319"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.302" endtime="20201030 15:56:20.321"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:20.331" endtime="20201030 15:56:20.353"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.326" endtime="20201030 15:56:20.355"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.324" endtime="20201030 15:56:20.356"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.788" endtime="20201030 15:56:20.357"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.786" endtime="20201030 15:56:20.357"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:20.382" endtime="20201030 15:56:20.404"></status>
</kw>
<msg timestamp="20201030 15:56:20.405" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:20.378" endtime="20201030 15:56:20.406"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:20.412" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:20.407" endtime="20201030 15:56:20.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:20.414" endtime="20201030 15:56:20.418"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.370" endtime="20201030 15:56:20.420"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.364" endtime="20201030 15:56:20.421"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:20.439" endtime="20201030 15:56:20.808"></status>
</kw>
<msg timestamp="20201030 15:56:20.815" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045590292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045630597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:20.436" endtime="20201030 15:56:20.816"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:20.836" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045590292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045630597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:20.818" endtime="20201030 15:56:20.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:20.838" endtime="20201030 15:56:20.842"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.428" endtime="20201030 15:56:20.844"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.423" endtime="20201030 15:56:20.846"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:20.857" level="INFO">${RESULT} = [{'diff': 4.0305000000004365e-05}, {'diff': 4.0888999999995346e-05}, {'diff': 4.0167000000000674e-05}, {'diff': 4.0388999999994846e-05}, {'diff': 4.027799999999776e-05}, {'diff': 4.079199999999783e-05...</msg>
<status status="PASS" starttime="20201030 15:56:20.847" endtime="20201030 15:56:20.857"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:20.867" level="INFO">${ACCURACY} = {'diff': [4.0305000000004365e-05, 4.0888999999995346e-05, 4.0167000000000674e-05, 4.0388999999994846e-05, 4.027799999999776e-05, 4.079199999999783e-05, 3.997199999999923e-05, 4.0097000000002825e-05, 4...</msg>
<status status="PASS" starttime="20201030 15:56:20.859" endtime="20201030 15:56:20.867"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:20.879" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201030 15:56:20.876" endtime="20201030 15:56:20.879"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:20.884" level="INFO">VALUE: [4.0305000000004365e-05, 4.0888999999995346e-05, 4.0167000000000674e-05, 4.0388999999994846e-05, 4.027799999999776e-05, 4.079199999999783e-05, 3.997199999999923e-05, 4.0097000000002825e-05, 4.055600000000409e-05, 4.0110999999995456e-05, 4.0681000000000744e-05, 4.056999999999672e-05, 4.0833000000004005e-05, 4.005600000000359e-05, 4.0458999999999634e-05, 4.0610999999995956e-05, 4.0874999999995776e-05, 4.034800000000255e-05, 4.050000000000581e-05, 4.086199999999568e-05, 4.023600000000599e-05, 4.0431000000000494e-05, 4.090199999999544e-05, 4.0290999999997856e-05, 4.049999999999887e-05, 4.0569000000004185e-05, 4.0889000000002285e-05, 3.99859999999988e-05, 4.022199999999948e-05, 4.0153000000001104e-05, 4.0388999999994846e-05, 4.0833000000004005e-05, 4.056999999999672e-05, 4.022199999999948e-05, 4.0874999999995776e-05, 4.0194999999999814e-05, 3.999999999999837e-05, 4.054200000000452e-05, 3.999999999999837e-05, 4.0125000000001965e-05, 4.0012999999998466e-05, 3.9972999999998704e-05, 4.022199999999948e-05, 4.054199999999758e-05, 4.090200000000238e-05, 4.066599999999476e-05, 4.0346999999996136e-05, 4.030600000000384e-05, 4.0346999999996136e-05, 4.0375000000002215e-05]</msg>
<status status="PASS" starttime="20201030 15:56:20.881" endtime="20201030 15:56:20.886"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.869" endtime="20201030 15:56:20.888"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:20.904" endtime="20201030 15:56:20.926"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.893" endtime="20201030 15:56:20.928"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.891" endtime="20201030 15:56:20.929"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.359" endtime="20201030 15:56:20.929"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.358" endtime="20201030 15:56:20.930"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:20.954" endtime="20201030 15:56:20.975"></status>
</kw>
<msg timestamp="20201030 15:56:20.976" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:20.951" endtime="20201030 15:56:20.977"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:20.983" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:20.978" endtime="20201030 15:56:20.983"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:20.985" endtime="20201030 15:56:20.989"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.943" endtime="20201030 15:56:20.991"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.937" endtime="20201030 15:56:20.993"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:21.010" endtime="20201030 15:56:21.399"></status>
</kw>
<msg timestamp="20201030 15:56:21.408" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043563778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043605625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:21.007" endtime="20201030 15:56:21.409"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:21.433" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043563778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043605625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:21.411" endtime="20201030 15:56:21.434"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:21.437" endtime="20201030 15:56:21.442"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.999" endtime="20201030 15:56:21.445"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.994" endtime="20201030 15:56:21.448"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:21.462" level="INFO">${RESULT} = [{'diff': 4.1847000000004575e-05}, {'diff': 4.1846999999997636e-05}, {'diff': 4.126399999999919e-05}, {'diff': 4.102799999999851e-05}, {'diff': 4.1709000000000884e-05}, {'diff': 4.165200000000313e-05}...</msg>
<status status="PASS" starttime="20201030 15:56:21.450" endtime="20201030 15:56:21.463"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:21.479" level="INFO">${ACCURACY} = {'diff': [4.1847000000004575e-05, 4.1846999999997636e-05, 4.126399999999919e-05, 4.102799999999851e-05, 4.1709000000000884e-05, 4.165200000000313e-05, 4.175000000000012e-05, 4.1667000000002175e-05, 4....</msg>
<status status="PASS" starttime="20201030 15:56:21.466" endtime="20201030 15:56:21.480"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:21.491" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201030 15:56:21.489" endtime="20201030 15:56:21.492"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:21.497" level="INFO">VALUE: [4.1847000000004575e-05, 4.1846999999997636e-05, 4.126399999999919e-05, 4.102799999999851e-05, 4.1709000000000884e-05, 4.165200000000313e-05, 4.175000000000012e-05, 4.1667000000002175e-05, 4.126399999999919e-05, 4.1776999999999787e-05, 4.181999999999797e-05, 4.117999999999483e-05, 4.145800000000116e-05, 4.145800000000116e-05, 4.1653000000002605e-05, 4.1568999999998246e-05, 4.104199999999808e-05, 4.1167000000001674e-05, 4.1333000000004505e-05, 4.1111000000003395e-05, 4.197200000000123e-05, 4.17780000000062e-05, 4.14860000000003e-05, 4.181999999999797e-05, 4.1832999999998066e-05, 4.156999999999772e-05, 4.1374999999996276e-05, 4.1276999999999286e-05, 4.1639000000003035e-05, 4.105600000000459e-05, 4.1375000000003215e-05, 4.1931000000001994e-05, 4.168000000000227e-05, 4.1375000000003215e-05, 4.1125000000002965e-05, 4.175000000000012e-05, 4.1541000000006045e-05, 4.168000000000227e-05, 4.1139000000002535e-05, 4.1375000000003215e-05, 4.1874999999996776e-05, 4.201399999999994e-05, 4.179199999999883e-05, 4.126399999999919e-05, 4.155600000000509e-05, 4.101399999999894e-05, 4.108400000000373e-05, 4.1639000000003035e-05, 4.1236999999999524e-05, 4.175000000000012e-05]</msg>
<status status="PASS" starttime="20201030 15:56:21.494" endtime="20201030 15:56:21.499"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.481" endtime="20201030 15:56:21.501"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:21.511" endtime="20201030 15:56:21.533"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.506" endtime="20201030 15:56:21.534"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.503" endtime="20201030 15:56:21.535"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.932" endtime="20201030 15:56:21.536"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.931" endtime="20201030 15:56:21.536"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:21.561" endtime="20201030 15:56:21.581"></status>
</kw>
<msg timestamp="20201030 15:56:21.582" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:21.557" endtime="20201030 15:56:21.582"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:21.589" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:21.584" endtime="20201030 15:56:21.589"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:21.591" endtime="20201030 15:56:21.595"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.549" endtime="20201030 15:56:21.597"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.543" endtime="20201030 15:56:21.598"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:21.616" endtime="20201030 15:56:21.975"></status>
</kw>
<msg timestamp="20201030 15:56:21.982" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043349458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043391778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:21.612" endtime="20201030 15:56:21.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:22.002" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043349458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043391778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:21.985" endtime="20201030 15:56:22.003"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:22.005" endtime="20201030 15:56:22.009"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.605" endtime="20201030 15:56:22.011"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.600" endtime="20201030 15:56:22.012"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:22.023" level="INFO">${RESULT} = [{'diff': 4.231999999999847e-05}, {'diff': 4.272200000000198e-05}, {'diff': 4.2332999999998566e-05}, {'diff': 4.234799999999761e-05}, {'diff': 4.2096999999997886e-05}, {'diff': 4.2040999999999606e-05}...</msg>
<status status="PASS" starttime="20201030 15:56:22.014" endtime="20201030 15:56:22.024"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:22.036" level="INFO">${ACCURACY} = {'diff': [4.231999999999847e-05, 4.272200000000198e-05, 4.2332999999998566e-05, 4.234799999999761e-05, 4.2096999999997886e-05, 4.2040999999999606e-05, 4.284799999999811e-05, 4.2959000000002134e-05, 4....</msg>
<status status="PASS" starttime="20201030 15:56:22.026" endtime="20201030 15:56:22.036"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:22.047" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201030 15:56:22.045" endtime="20201030 15:56:22.048"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:22.053" level="INFO">VALUE: [4.231999999999847e-05, 4.272200000000198e-05, 4.2332999999998566e-05, 4.234799999999761e-05, 4.2096999999997886e-05, 4.2040999999999606e-05, 4.284799999999811e-05, 4.2959000000002134e-05, 4.215199999999669e-05, 4.2125000000003965e-05, 4.288800000000481e-05, 4.243000000000302e-05, 4.26660000000037e-05, 4.250000000000087e-05, 4.250000000000087e-05, 4.2653000000003605e-05, 4.2430999999995556e-05, 4.272200000000198e-05, 4.2903000000003855e-05, 4.2667000000003175e-05, 4.2846999999998636e-05, 4.204199999999908e-05, 4.2638999999997096e-05, 4.254199999999958e-05, 4.2917000000003425e-05, 4.2430999999995556e-05, 4.269400000000284e-05, 4.242999999999608e-05, 4.2332999999998566e-05, 4.2223000000000954e-05, 4.2554999999999676e-05, 4.273600000000155e-05, 4.202799999999951e-05, 4.222200000000148e-05, 4.2541000000000107e-05, 4.2153000000003105e-05, 4.202799999999951e-05, 4.2860999999998206e-05, 4.294400000000309e-05, 4.227799999999976e-05, 4.2346999999998136e-05, 4.255599999999915e-05, 4.276400000000069e-05, 4.2332999999998566e-05, 4.255599999999915e-05, 4.226400000000019e-05, 4.234799999999761e-05, 4.2459000000001634e-05, 4.2209000000001384e-05, 4.2040999999999606e-05]</msg>
<status status="PASS" starttime="20201030 15:56:22.050" endtime="20201030 15:56:22.055"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.038" endtime="20201030 15:56:22.056"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:22.066" endtime="20201030 15:56:22.089"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.062" endtime="20201030 15:56:22.090"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.059" endtime="20201030 15:56:22.091"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.539" endtime="20201030 15:56:22.092"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.537" endtime="20201030 15:56:22.092"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:22.116" endtime="20201030 15:56:22.137"></status>
</kw>
<msg timestamp="20201030 15:56:22.138" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:22.113" endtime="20201030 15:56:22.139"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:22.145" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:22.141" endtime="20201030 15:56:22.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:22.147" endtime="20201030 15:56:22.152"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.105" endtime="20201030 15:56:22.153"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.099" endtime="20201030 15:56:22.155"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:22.173" endtime="20201030 15:56:22.535"></status>
</kw>
<msg timestamp="20201030 15:56:22.542" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043479306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043522375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:22.169" endtime="20201030 15:56:22.543"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:22.562" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043479306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043522375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:22.545" endtime="20201030 15:56:22.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:22.565" endtime="20201030 15:56:22.569"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.161" endtime="20201030 15:56:22.570"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.156" endtime="20201030 15:56:22.572"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:22.583" level="INFO">${RESULT} = [{'diff': 4.3068999999999746e-05}, {'diff': 4.3124999999998026e-05}, {'diff': 4.3611000000005895e-05}, {'diff': 4.3332999999999566e-05}, {'diff': 4.3680999999996806e-05}, {'diff': 4.377800000000126e-0...</msg>
<status status="PASS" starttime="20201030 15:56:22.574" endtime="20201030 15:56:22.584"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:22.594" level="INFO">${ACCURACY} = {'diff': [4.3068999999999746e-05, 4.3124999999998026e-05, 4.3611000000005895e-05, 4.3332999999999566e-05, 4.3680999999996806e-05, 4.377800000000126e-05, 4.3610999999998956e-05, 4.3125000000004965e-05,...</msg>
<status status="PASS" starttime="20201030 15:56:22.585" endtime="20201030 15:56:22.594"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:22.605" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201030 15:56:22.603" endtime="20201030 15:56:22.606"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:22.611" level="INFO">VALUE: [4.3068999999999746e-05, 4.3124999999998026e-05, 4.3611000000005895e-05, 4.3332999999999566e-05, 4.3680999999996806e-05, 4.377800000000126e-05, 4.3610999999998956e-05, 4.3125000000004965e-05, 4.333399999999904e-05, 4.3723000000002454e-05, 4.333399999999904e-05, 4.3374999999998276e-05, 4.366599999999776e-05, 4.3388999999997846e-05, 4.3347000000006075e-05, 4.34860000000023e-05, 4.3902999999997916e-05, 4.3096999999998886e-05, 4.379100000000136e-05, 4.3110999999998456e-05, 4.3124999999998026e-05, 4.302800000000051e-05, 4.3624999999998526e-05, 4.3653000000004605e-05, 4.309799999999836e-05, 4.401400000000194e-05, 4.373600000000255e-05, 4.3666999999997236e-05, 4.3624999999998526e-05, 4.3902999999997916e-05, 4.3416999999996986e-05, 4.31939999999964e-05, 4.36660000000047e-05, 4.31939999999964e-05, 4.368000000000427e-05, 4.352800000000101e-05, 4.344400000000359e-05, 4.373599999999561e-05, 4.3819000000000496e-05, 4.300000000000137e-05, 4.377800000000126e-05, 4.343000000000402e-05, 4.379200000000083e-05, 4.372200000000298e-05, 4.3638999999998096e-05, 4.3124999999998026e-05, 4.38060000000004e-05, 4.301400000000094e-05, 4.3610999999998956e-05, 4.352799999999407e-05]</msg>
<status status="PASS" starttime="20201030 15:56:22.608" endtime="20201030 15:56:22.613"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.595" endtime="20201030 15:56:22.614"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:22.624" endtime="20201030 15:56:22.647"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.620" endtime="20201030 15:56:22.649"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.617" endtime="20201030 15:56:22.649"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.094" endtime="20201030 15:56:22.650"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.093" endtime="20201030 15:56:22.650"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:22.675" endtime="20201030 15:56:22.698"></status>
</kw>
<msg timestamp="20201030 15:56:22.699" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:22.671" endtime="20201030 15:56:22.699"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:22.705" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:22.701" endtime="20201030 15:56:22.706"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:22.708" endtime="20201030 15:56:22.712"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.663" endtime="20201030 15:56:22.714"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.657" endtime="20201030 15:56:22.715"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:22.733" endtime="20201030 15:56:23.093"></status>
</kw>
<msg timestamp="20201030 15:56:23.101" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045416319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045460986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:22.730" endtime="20201030 15:56:23.101"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:23.121" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045416319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045460986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:23.103" endtime="20201030 15:56:23.122"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:23.123" endtime="20201030 15:56:23.128"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.722" endtime="20201030 15:56:23.129"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.717" endtime="20201030 15:56:23.131"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:23.142" level="INFO">${RESULT} = [{'diff': 4.4667000000005175e-05}, {'diff': 4.4874999999999776e-05}, {'diff': 4.4610999999999956e-05}, {'diff': 4.4360999999999706e-05}, {'diff': 4.4638999999999096e-05}, {'diff': 4.447199999999679e-0...</msg>
<status status="PASS" starttime="20201030 15:56:23.133" endtime="20201030 15:56:23.142"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:23.152" level="INFO">${ACCURACY} = {'diff': [4.4667000000005175e-05, 4.4874999999999776e-05, 4.4610999999999956e-05, 4.4360999999999706e-05, 4.4638999999999096e-05, 4.447199999999679e-05, 4.454200000000158e-05, 4.4110999999999456e-05, ...</msg>
<status status="PASS" starttime="20201030 15:56:23.144" endtime="20201030 15:56:23.153"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:23.164" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201030 15:56:23.161" endtime="20201030 15:56:23.165"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:23.170" level="INFO">VALUE: [4.4667000000005175e-05, 4.4874999999999776e-05, 4.4610999999999956e-05, 4.4360999999999706e-05, 4.4638999999999096e-05, 4.447199999999679e-05, 4.454200000000158e-05, 4.4110999999999456e-05, 4.4959000000004135e-05, 4.445799999999722e-05, 4.4472999999996266e-05, 4.451400000000244e-05, 4.4374999999999276e-05, 4.4111000000006395e-05, 4.427700000000229e-05, 4.445799999999722e-05, 4.423599999999611e-05, 4.426400000000219e-05, 4.4583000000000816e-05, 4.4374999999999276e-05, 4.4096999999999886e-05, 4.459799999999986e-05, 4.420800000000391e-05, 4.4624999999999526e-05, 4.4861000000000206e-05, 4.483400000000054e-05, 4.4445000000004065e-05, 4.449999999999593e-05, 4.455600000000115e-05, 4.455600000000115e-05, 4.4680999999997806e-05, 4.486199999999968e-05, 4.482000000000097e-05, 4.4944999999997626e-05, 4.4110999999999456e-05, 4.417999999999783e-05, 4.476399999999575e-05, 4.423599999999611e-05, 4.417999999999783e-05, 4.400000000000237e-05, 4.422199999999654e-05, 4.400000000000237e-05, 4.4653000000005605e-05, 4.4124999999999026e-05, 4.4110999999999456e-05, 4.495799999999772e-05, 4.4110999999999456e-05, 4.457000000000072e-05, 4.4902999999998916e-05, 4.4959000000004135e-05]</msg>
<status status="PASS" starttime="20201030 15:56:23.166" endtime="20201030 15:56:23.171"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.154" endtime="20201030 15:56:23.173"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:23.185" endtime="20201030 15:56:23.207"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.179" endtime="20201030 15:56:23.209"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.176" endtime="20201030 15:56:23.210"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.652" endtime="20201030 15:56:23.210"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.651" endtime="20201030 15:56:23.211"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:23.235" endtime="20201030 15:56:23.256"></status>
</kw>
<msg timestamp="20201030 15:56:23.257" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:23.232" endtime="20201030 15:56:23.258"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:23.264" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:23.260" endtime="20201030 15:56:23.265"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:23.267" endtime="20201030 15:56:23.271"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.224" endtime="20201030 15:56:23.272"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.218" endtime="20201030 15:56:23.274"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:23.292" endtime="20201030 15:56:23.650"></status>
</kw>
<msg timestamp="20201030 15:56:23.658" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043802583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043848444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:23.288" endtime="20201030 15:56:23.659"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:23.678" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043802583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043848444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:23.661" endtime="20201030 15:56:23.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:23.681" endtime="20201030 15:56:23.685"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.281" endtime="20201030 15:56:23.686"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.276" endtime="20201030 15:56:23.688"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:23.699" level="INFO">${RESULT} = [{'diff': 4.5861000000001206e-05}, {'diff': 4.522200000000448e-05}, {'diff': 4.5597000000001386e-05}, {'diff': 4.595799999999872e-05}, {'diff': 4.5945000000005565e-05}, {'diff': 4.5431000000005495e-05...</msg>
<status status="PASS" starttime="20201030 15:56:23.690" endtime="20201030 15:56:23.699"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:23.710" level="INFO">${ACCURACY} = {'diff': [4.5861000000001206e-05, 4.522200000000448e-05, 4.5597000000001386e-05, 4.595799999999872e-05, 4.5945000000005565e-05, 4.5431000000005495e-05, 4.555499999999574e-05, 4.523600000000405e-05, 4....</msg>
<status status="PASS" starttime="20201030 15:56:23.701" endtime="20201030 15:56:23.711"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:23.722" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201030 15:56:23.720" endtime="20201030 15:56:23.723"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:23.729" level="INFO">VALUE: [4.5861000000001206e-05, 4.522200000000448e-05, 4.5597000000001386e-05, 4.595799999999872e-05, 4.5945000000005565e-05, 4.5431000000005495e-05, 4.555499999999574e-05, 4.523600000000405e-05, 4.49860000000038e-05, 4.5944999999998626e-05, 4.501400000000294e-05, 4.5625000000000526e-05, 4.5444999999998126e-05, 4.5472999999997266e-05, 4.533400000000104e-05, 4.5472999999997266e-05, 4.4958999999997196e-05, 4.552700000000354e-05, 4.575000000000412e-05, 4.500000000000337e-05, 4.552800000000301e-05, 4.5583000000001817e-05, 4.5611000000000956e-05, 4.5416999999998986e-05, 4.5402999999999416e-05, 4.577799999999632e-05, 4.5237000000003524e-05, 4.5319000000001997e-05, 4.5333000000001566e-05, 4.545799999999822e-05, 4.499999999999643e-05, 4.5347000000001136e-05, 4.5388999999999846e-05, 4.558400000000129e-05, 4.522200000000448e-05, 4.557000000000172e-05, 4.5666999999999236e-05, 4.582000000000197e-05, 4.53060000000019e-05, 4.5666999999999236e-05, 4.502700000000304e-05, 4.567999999999933e-05, 4.5138999999999596e-05, 4.54860000000043e-05, 4.522199999999754e-05, 4.576399999999675e-05, 4.595799999999872e-05, 4.524999999999668e-05, 4.5138999999999596e-05, 4.5916999999999486e-05]</msg>
<status status="PASS" starttime="20201030 15:56:23.725" endtime="20201030 15:56:23.730"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.712" endtime="20201030 15:56:23.732"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:23.742" endtime="20201030 15:56:23.764"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.737" endtime="20201030 15:56:23.766"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.735" endtime="20201030 15:56:23.767"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.213" endtime="20201030 15:56:23.767"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.212" endtime="20201030 15:56:23.768"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:23.792" endtime="20201030 15:56:23.813"></status>
</kw>
<msg timestamp="20201030 15:56:23.814" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:23.789" endtime="20201030 15:56:23.814"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:23.820" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:23.816" endtime="20201030 15:56:23.821"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:23.823" endtime="20201030 15:56:23.827"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.781" endtime="20201030 15:56:23.829"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.775" endtime="20201030 15:56:23.830"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:23.848" endtime="20201030 15:56:24.208"></status>
</kw>
<msg timestamp="20201030 15:56:24.216" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043808167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043854806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:23.845" endtime="20201030 15:56:24.216"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:24.235" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043808167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043854806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:24.218" endtime="20201030 15:56:24.236"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:24.238" endtime="20201030 15:56:24.242"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.837" endtime="20201030 15:56:24.244"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.832" endtime="20201030 15:56:24.245"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:24.256" level="INFO">${RESULT} = [{'diff': 4.6639000000001096e-05}, {'diff': 4.679099999999742e-05}, {'diff': 4.695799999999972e-05}, {'diff': 4.6915999999994074e-05}, {'diff': 4.648599999999836e-05}, {'diff': 4.626399999999725e-05},...</msg>
<status status="PASS" starttime="20201030 15:56:24.247" endtime="20201030 15:56:24.257"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:24.268" level="INFO">${ACCURACY} = {'diff': [4.6639000000001096e-05, 4.679099999999742e-05, 4.695799999999972e-05, 4.6915999999994074e-05, 4.648599999999836e-05, 4.626399999999725e-05, 4.691600000000101e-05, 4.652800000000401e-05, 4.68...</msg>
<status status="PASS" starttime="20201030 15:56:24.259" endtime="20201030 15:56:24.269"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:24.280" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201030 15:56:24.278" endtime="20201030 15:56:24.281"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:24.290" level="INFO">VALUE: [4.6639000000001096e-05, 4.679099999999742e-05, 4.695799999999972e-05, 4.6915999999994074e-05, 4.648599999999836e-05, 4.626399999999725e-05, 4.691600000000101e-05, 4.652800000000401e-05, 4.683300000000307e-05, 4.658299999999588e-05, 4.622199999999854e-05, 4.6903000000000916e-05, 4.6708999999998946e-05, 4.622199999999854e-05, 4.657000000000272e-05, 4.68469999999957e-05, 4.61939999999994e-05, 4.665200000000119e-05, 4.677700000000479e-05, 4.683400000000254e-05, 4.615200000000069e-05, 4.654200000000358e-05, 4.672200000000598e-05, 4.655500000000368e-05, 4.617999999999983e-05, 4.6389000000000846e-05, 4.636099999999477e-05, 4.602800000000351e-05, 4.643000000000008e-05, 4.693000000000058e-05, 4.6403000000000416e-05, 4.644399999999965e-05, 4.6944999999999626e-05, 4.690299999999398e-05, 4.6695000000006315e-05, 4.632000000000247e-05, 4.612499999999409e-05, 4.6375000000001276e-05, 4.60269999999971e-05, 4.656900000000325e-05, 4.661099999999502e-05, 4.601300000000447e-05, 4.648599999999836e-05, 4.695799999999972e-05, 4.655500000000368e-05, 4.6139000000000596e-05, 4.659699999999545e-05, 4.679199999999689e-05, 4.6694999999999376e-05, 4.61939999999994e-05]</msg>
<status status="PASS" starttime="20201030 15:56:24.284" endtime="20201030 15:56:24.293"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.270" endtime="20201030 15:56:24.295"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:24.305" endtime="20201030 15:56:24.327"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.300" endtime="20201030 15:56:24.329"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.298" endtime="20201030 15:56:24.330"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.770" endtime="20201030 15:56:24.331"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.769" endtime="20201030 15:56:24.331"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:24.356" endtime="20201030 15:56:24.377"></status>
</kw>
<msg timestamp="20201030 15:56:24.378" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:24.352" endtime="20201030 15:56:24.378"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:24.384" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:24.380" endtime="20201030 15:56:24.385"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:24.387" endtime="20201030 15:56:24.391"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.344" endtime="20201030 15:56:24.393"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.338" endtime="20201030 15:56:24.394"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:24.412" endtime="20201030 15:56:24.766"></status>
</kw>
<msg timestamp="20201030 15:56:24.770" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044131931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044179042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:24.408" endtime="20201030 15:56:24.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:24.779" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044131931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044179042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:24.771" endtime="20201030 15:56:24.779"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:24.780" endtime="20201030 15:56:24.782"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.401" endtime="20201030 15:56:24.783"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.396" endtime="20201030 15:56:24.783"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:24.788" level="INFO">${RESULT} = [{'diff': 4.7111000000002456e-05}, {'diff': 4.7917000000001486e-05}, {'diff': 4.7125000000002026e-05}, {'diff': 4.7415999999994574e-05}, {'diff': 4.748599999999936e-05}, {'diff': 4.757000000000372e-05...</msg>
<status status="PASS" starttime="20201030 15:56:24.784" endtime="20201030 15:56:24.789"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:24.793" level="INFO">${ACCURACY} = {'diff': [4.7111000000002456e-05, 4.7917000000001486e-05, 4.7125000000002026e-05, 4.7415999999994574e-05, 4.748599999999936e-05, 4.757000000000372e-05, 4.7681000000000806e-05, 4.7915999999995074e-05, ...</msg>
<status status="PASS" starttime="20201030 15:56:24.789" endtime="20201030 15:56:24.793"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:24.798" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201030 15:56:24.797" endtime="20201030 15:56:24.799"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:24.801" level="INFO">VALUE: [4.7111000000002456e-05, 4.7917000000001486e-05, 4.7125000000002026e-05, 4.7415999999994574e-05, 4.748599999999936e-05, 4.757000000000372e-05, 4.7681000000000806e-05, 4.7915999999995074e-05, 4.7889000000002346e-05, 4.756899999999731e-05, 4.7111000000002456e-05, 4.7389000000001846e-05, 4.708300000000332e-05, 4.7875000000002776e-05, 4.736099999999577e-05, 4.727799999999782e-05, 4.756899999999731e-05, 4.755499999999774e-05, 4.723599999999911e-05, 4.7986999999999336e-05, 4.773600000000655e-05, 4.749999999999893e-05, 4.756999999999678e-05, 4.794400000000115e-05, 4.7403000000001416e-05, 4.7931000000001056e-05, 4.711099999999552e-05, 4.755600000000415e-05, 4.772200000000004e-05, 4.704099999999767e-05, 4.723599999999911e-05, 4.794400000000115e-05, 4.7611000000002957e-05, 4.758400000000329e-05, 4.7097000000002887e-05, 4.7403000000001416e-05, 4.795800000000072e-05, 4.74860000000063e-05, 4.73060000000039e-05, 4.7889000000002346e-05, 4.699999999999843e-05, 4.7458999999999696e-05, 4.774999999999918e-05, 4.783299999999713e-05, 4.699999999999843e-05, 4.779099999999842e-05, 4.747199999999979e-05, 4.766600000000176e-05, 4.755499999999774e-05, 4.716600000000126e-05]</msg>
<status status="PASS" starttime="20201030 15:56:24.799" endtime="20201030 15:56:24.802"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.794" endtime="20201030 15:56:24.803"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:24.807" endtime="20201030 15:56:24.827"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.805" endtime="20201030 15:56:24.828"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.804" endtime="20201030 15:56:24.828"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.333" endtime="20201030 15:56:24.828"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.332" endtime="20201030 15:56:24.829"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:24.840" endtime="20201030 15:56:24.858"></status>
</kw>
<msg timestamp="20201030 15:56:24.858" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:24.838" endtime="20201030 15:56:24.858"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:24.861" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:24.859" endtime="20201030 15:56:24.862"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:24.862" endtime="20201030 15:56:24.864"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.835" endtime="20201030 15:56:24.865"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.832" endtime="20201030 15:56:24.866"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:24.874" endtime="20201030 15:56:25.222"></status>
</kw>
<msg timestamp="20201030 15:56:25.230" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025858681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025906778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:24.872" endtime="20201030 15:56:25.230"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:25.249" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025858681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025906778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:25.232" endtime="20201030 15:56:25.250"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:25.252" endtime="20201030 15:56:25.256"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.869" endtime="20201030 15:56:25.258"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.867" endtime="20201030 15:56:25.259"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:25.270" level="INFO">${RESULT} = [{'diff': 4.809699999999695e-05}, {'diff': 4.799999999999943e-05}, {'diff': 4.861100000000049e-05}, {'diff': 4.838899999999938e-05}, {'diff': 4.88469999999977e-05}, {'diff': 4.848600000000036e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:56:25.261" endtime="20201030 15:56:25.271"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:25.281" level="INFO">${ACCURACY} = {'diff': [4.809699999999695e-05, 4.799999999999943e-05, 4.861100000000049e-05, 4.838899999999938e-05, 4.88469999999977e-05, 4.848600000000036e-05, 4.80000000000029e-05, 4.813899999999913e-05, 4.834699...</msg>
<status status="PASS" starttime="20201030 15:56:25.273" endtime="20201030 15:56:25.281"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:25.292" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201030 15:56:25.290" endtime="20201030 15:56:25.293"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:25.298" level="INFO">VALUE: [4.809699999999695e-05, 4.799999999999943e-05, 4.861100000000049e-05, 4.838899999999938e-05, 4.88469999999977e-05, 4.848600000000036e-05, 4.80000000000029e-05, 4.813899999999913e-05, 4.83469999999972e-05, 4.808300000000085e-05, 4.894400000000215e-05, 4.847200000000079e-05, 4.805599999999771e-05, 4.886100000000074e-05, 4.831899999999806e-05, 4.88469999999977e-05, 4.877799999999932e-05, 4.849999999999993e-05, 4.891699999999902e-05, 4.858299999999788e-05, 4.852800000000254e-05, 4.838899999999938e-05, 4.8139000000002596e-05, 4.826299999999978e-05, 4.866599999999929e-05, 4.8445000000001126e-05, 4.833400000000057e-05, 4.8431000000001556e-05, 4.822200000000054e-05, 4.808299999999738e-05, 4.824999999999968e-05, 4.863899999999963e-05, 4.826399999999925e-05, 4.845800000000122e-05, 4.831900000000153e-05, 4.894399999999868e-05, 4.799999999999943e-05, 4.893099999999859e-05, 4.8125000000003026e-05, 4.8181000000001306e-05, 4.8208999999996976e-05, 4.863899999999963e-05, 4.833400000000057e-05, 4.854199999999864e-05, 4.799999999999943e-05, 4.849999999999993e-05, 4.867999999999886e-05, 4.85269999999996e-05, 4.827799999999882e-05, 4.811099999999999e-05]</msg>
<status status="PASS" starttime="20201030 15:56:25.295" endtime="20201030 15:56:25.300"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.283" endtime="20201030 15:56:25.302"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:25.313" endtime="20201030 15:56:25.336"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.307" endtime="20201030 15:56:25.337"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.304" endtime="20201030 15:56:25.338"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.830" endtime="20201030 15:56:25.339"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.829" endtime="20201030 15:56:25.339"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:25.363" endtime="20201030 15:56:25.384"></status>
</kw>
<msg timestamp="20201030 15:56:25.385" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:25.360" endtime="20201030 15:56:25.385"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:25.391" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:25.387" endtime="20201030 15:56:25.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:25.394" endtime="20201030 15:56:25.398"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.352" endtime="20201030 15:56:25.400"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.346" endtime="20201030 15:56:25.401"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:25.419" endtime="20201030 15:56:25.779"></status>
</kw>
<msg timestamp="20201030 15:56:25.787" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043470208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043519722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:25.416" endtime="20201030 15:56:25.787"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:25.807" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043470208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043519722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:25.789" endtime="20201030 15:56:25.808"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:25.809" endtime="20201030 15:56:25.813"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.408" endtime="20201030 15:56:25.815"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.403" endtime="20201030 15:56:25.817"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:25.828" level="INFO">${RESULT} = [{'diff': 4.951399999999356e-05}, {'diff': 4.912499999999709e-05}, {'diff': 4.908299999999838e-05}, {'diff': 4.977800000000032e-05}, {'diff': 4.936099999999777e-05}, {'diff': 4.905599999999871e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:56:25.818" endtime="20201030 15:56:25.828"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:25.840" level="INFO">${ACCURACY} = {'diff': [4.951399999999356e-05, 4.912499999999709e-05, 4.908299999999838e-05, 4.977800000000032e-05, 4.936099999999777e-05, 4.905599999999871e-05, 4.902799999999957e-05, 4.9445000000002126e-05, 4.909...</msg>
<status status="PASS" starttime="20201030 15:56:25.830" endtime="20201030 15:56:25.840"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:25.851" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201030 15:56:25.849" endtime="20201030 15:56:25.852"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:25.857" level="INFO">VALUE: [4.951399999999356e-05, 4.912499999999709e-05, 4.908299999999838e-05, 4.977800000000032e-05, 4.936099999999777e-05, 4.905599999999871e-05, 4.902799999999957e-05, 4.9445000000002126e-05, 4.909699999999795e-05, 4.955599999999921e-05, 4.937499999999734e-05, 4.922200000000154e-05, 4.955599999999921e-05, 4.973600000000161e-05, 4.9665999999996824e-05, 4.929099999999992e-05, 4.9445000000002126e-05, 4.9653000000003666e-05, 4.979199999999989e-05, 4.975000000000118e-05, 4.904199999999914e-05, 4.911100000000446e-05, 4.9139000000003596e-05, 4.93469999999982e-05, 4.933299999999863e-05, 4.91669999999958e-05, 4.904099999999967e-05, 4.948599999999442e-05, 4.988899999999741e-05, 4.901300000000053e-05, 4.975000000000118e-05, 4.962499999999759e-05, 5.000000000000143e-05, 5.000000000000143e-05, 5.005599999999971e-05, 4.9221999999994603e-05, 4.952800000000007e-05, 4.929099999999992e-05, 4.968000000000333e-05, 4.986099999999827e-05, 4.9139000000003596e-05, 4.933299999999863e-05, 4.9903000000003916e-05, 4.980599999999946e-05, 4.943099999999562e-05, 4.902800000000651e-05, 4.909800000000436e-05, 4.9415999999996574e-05, 4.954199999999964e-05, 4.981999999999903e-05]</msg>
<status status="PASS" starttime="20201030 15:56:25.854" endtime="20201030 15:56:25.859"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.842" endtime="20201030 15:56:25.861"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:25.871" endtime="20201030 15:56:25.893"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.866" endtime="20201030 15:56:25.895"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.863" endtime="20201030 15:56:25.895"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.341" endtime="20201030 15:56:25.896"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.340" endtime="20201030 15:56:25.896"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:25.921" endtime="20201030 15:56:25.942"></status>
</kw>
<msg timestamp="20201030 15:56:25.943" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:25.917" endtime="20201030 15:56:25.943"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:25.950" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:25.945" endtime="20201030 15:56:25.951"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:25.952" endtime="20201030 15:56:25.957"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.909" endtime="20201030 15:56:25.959"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.903" endtime="20201030 15:56:25.960"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:25.979" endtime="20201030 15:56:26.341"></status>
</kw>
<msg timestamp="20201030 15:56:26.349" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043568167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043618917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:25.975" endtime="20201030 15:56:26.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:26.369" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043568167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043618917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:26.352" endtime="20201030 15:56:26.370"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:26.372" endtime="20201030 15:56:26.376"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.967" endtime="20201030 15:56:26.378"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.962" endtime="20201030 15:56:26.379"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:26.390" level="INFO">${RESULT} = [{'diff': 5.075000000000218e-05}, {'diff': 5.027799999999388e-05}, {'diff': 5.01940000000034e-05}, {'diff': 5.0417000000003986e-05}, {'diff': 5.091600000000501e-05}, {'diff': 4.998600000000186e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:56:26.381" endtime="20201030 15:56:26.391"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:26.407" level="INFO">${ACCURACY} = {'diff': [5.075000000000218e-05, 5.027799999999388e-05, 5.01940000000034e-05, 5.0417000000003986e-05, 5.091600000000501e-05, 4.998600000000186e-05, 5.091600000000501e-05, 5.01940000000034e-05, 5.02360...</msg>
<status status="PASS" starttime="20201030 15:56:26.393" endtime="20201030 15:56:26.407"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:26.420" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201030 15:56:26.417" endtime="20201030 15:56:26.421"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:26.427" level="INFO">VALUE: [5.075000000000218e-05, 5.027799999999388e-05, 5.01940000000034e-05, 5.0417000000003986e-05, 5.091600000000501e-05, 4.998600000000186e-05, 5.091600000000501e-05, 5.01940000000034e-05, 5.023600000000211e-05, 5.000000000000143e-05, 5.061099999999902e-05, 5.051399999999456e-05, 5.084700000000664e-05, 5.088900000000535e-05, 5.058399999999935e-05, 5.029199999999345e-05, 5.044499999999619e-05, 5.0721999999996104e-05, 5.051399999999456e-05, 5.0637999999998684e-05, 5.0235999999995173e-05, 5.031999999999953e-05, 5.0389000000004847e-05, 5.008299999999938e-05, 5.031900000000006e-05, 5.0693999999996964e-05, 5.011099999999852e-05, 5.022200000000254e-05, 5.011099999999852e-05, 5.023600000000211e-05, 5.06669999999973e-05, 5.06669999999973e-05, 5.072299999999558e-05, 5.0721999999996104e-05, 5.031999999999953e-05, 5.027800000000082e-05, 5.004200000000014e-05, 5.084799999999917e-05, 5.0193999999996464e-05, 5.063899999999816e-05, 5.0401999999998004e-05, 5.068000000000433e-05, 5.0901999999998504e-05, 5.033299999999963e-05, 5.0471999999995854e-05, 5.0679999999997394e-05, 5.065299999999773e-05, 4.995800000000272e-05, 5.087499999999884e-05, 5.061099999999902e-05]</msg>
<status status="PASS" starttime="20201030 15:56:26.423" endtime="20201030 15:56:26.429"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:26.409" endtime="20201030 15:56:26.431"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:26.442" endtime="20201030 15:56:26.464"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:26.437" endtime="20201030 15:56:26.466"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:26.434" endtime="20201030 15:56:26.467"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.899" endtime="20201030 15:56:26.467"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.897" endtime="20201030 15:56:26.468"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:26.492" endtime="20201030 15:56:26.513"></status>
</kw>
<msg timestamp="20201030 15:56:26.514" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:26.489" endtime="20201030 15:56:26.515"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:26.521" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:26.517" endtime="20201030 15:56:26.522"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:26.523" endtime="20201030 15:56:26.528"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:26.481" endtime="20201030 15:56:26.529"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:26.475" endtime="20201030 15:56:26.531"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:26.549" endtime="20201030 15:56:26.912"></status>
</kw>
<msg timestamp="20201030 15:56:26.919" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044102125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044153889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:26.545" endtime="20201030 15:56:26.920"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:26.939" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044102125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044153889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:26.922" endtime="20201030 15:56:26.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:26.942" endtime="20201030 15:56:26.946"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:26.538" endtime="20201030 15:56:26.948"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:26.533" endtime="20201030 15:56:26.949"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:26.960" level="INFO">${RESULT} = [{'diff': 5.176400000000275e-05}, {'diff': 5.120800000000397e-05}, {'diff': 5.1667000000005237e-05}, {'diff': 5.111099999999952e-05}, {'diff': 5.18340000000006e-05}, {'diff': 5.176399999999581e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:56:26.951" endtime="20201030 15:56:26.961"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:26.971" level="INFO">${ACCURACY} = {'diff': [5.176400000000275e-05, 5.120800000000397e-05, 5.1667000000005237e-05, 5.111099999999952e-05, 5.18340000000006e-05, 5.176399999999581e-05, 5.162499999999959e-05, 5.1445000000004126e-05, 5.127...</msg>
<status status="PASS" starttime="20201030 15:56:26.963" endtime="20201030 15:56:26.971"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:26.983" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201030 15:56:26.980" endtime="20201030 15:56:26.984"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:26.989" level="INFO">VALUE: [5.176400000000275e-05, 5.120800000000397e-05, 5.1667000000005237e-05, 5.111099999999952e-05, 5.18340000000006e-05, 5.176399999999581e-05, 5.162499999999959e-05, 5.1445000000004126e-05, 5.127800000000182e-05, 5.127800000000182e-05, 5.1457999999997284e-05, 5.1457999999997284e-05, 5.1887999999999934e-05, 5.161100000000002e-05, 5.155500000000174e-05, 5.155500000000174e-05, 5.106899999999387e-05, 5.15140000000025e-05, 5.136099999999977e-05, 5.1971999999997354e-05, 5.1431000000004556e-05, 5.13340000000001e-05, 5.161100000000002e-05, 5.1999999999996493e-05, 5.157000000000078e-05, 5.134699999999326e-05, 5.187499999999984e-05, 5.158300000000088e-05, 5.111099999999952e-05, 5.10549999999943e-05, 5.127700000000235e-05, 5.101399999999506e-05, 5.111099999999952e-05, 5.138899999999891e-05, 5.156900000000131e-05, 5.1235999999996173e-05, 5.150000000000293e-05, 5.154200000000164e-05, 5.1014000000002e-05, 5.145800000000422e-05, 5.1667000000005237e-05, 5.136099999999977e-05, 5.186100000000027e-05, 5.188900000000635e-05, 5.137499999999934e-05, 5.0985999999995923e-05, 5.162499999999959e-05, 5.104200000000114e-05, 5.1179999999997894e-05, 5.15549999999948e-05]</msg>
<status status="PASS" starttime="20201030 15:56:26.985" endtime="20201030 15:56:26.991"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:26.973" endtime="20201030 15:56:26.993"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:27.003" endtime="20201030 15:56:27.026"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:26.998" endtime="20201030 15:56:27.028"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:26.995" endtime="20201030 15:56:27.028"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:26.470" endtime="20201030 15:56:27.029"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:26.469" endtime="20201030 15:56:27.030"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:27.054" endtime="20201030 15:56:27.077"></status>
</kw>
<msg timestamp="20201030 15:56:27.078" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:27.051" endtime="20201030 15:56:27.079"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:27.085" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:27.081" endtime="20201030 15:56:27.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:27.088" endtime="20201030 15:56:27.092"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:27.043" endtime="20201030 15:56:27.094"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:27.037" endtime="20201030 15:56:27.095"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:27.113" endtime="20201030 15:56:27.460"></status>
</kw>
<msg timestamp="20201030 15:56:27.468" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045518194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045570264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:27.109" endtime="20201030 15:56:27.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:27.486" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045518194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045570264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:27.470" endtime="20201030 15:56:27.487"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:27.489" endtime="20201030 15:56:27.492"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:27.102" endtime="20201030 15:56:27.494"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:27.097" endtime="20201030 15:56:27.496"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:27.506" level="INFO">${RESULT} = [{'diff': 5.207000000000128e-05}, {'diff': 5.293099999999912e-05}, {'diff': 5.208400000000085e-05}, {'diff': 5.212500000000009e-05}, {'diff': 5.2138000000000184e-05}, {'diff': 5.237500000000034e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:56:27.497" endtime="20201030 15:56:27.506"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:27.515" level="INFO">${ACCURACY} = {'diff': [5.207000000000128e-05, 5.293099999999912e-05, 5.208400000000085e-05, 5.212500000000009e-05, 5.2138000000000184e-05, 5.237500000000034e-05, 5.263900000000016e-05, 5.2679999999999394e-05, 5.22...</msg>
<status status="PASS" starttime="20201030 15:56:27.508" endtime="20201030 15:56:27.516"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:27.526" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201030 15:56:27.524" endtime="20201030 15:56:27.527"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:27.531" level="INFO">VALUE: [5.207000000000128e-05, 5.293099999999912e-05, 5.208400000000085e-05, 5.212500000000009e-05, 5.2138000000000184e-05, 5.237500000000034e-05, 5.263900000000016e-05, 5.2679999999999394e-05, 5.226300000000378e-05, 5.213899999999966e-05, 5.294499999999869e-05, 5.2943999999999214e-05, 5.204200000000214e-05, 5.261100000000102e-05, 5.1985999999996924e-05, 5.262500000000059e-05, 5.213899999999966e-05, 5.288900000000041e-05, 5.2485999999997424e-05, 5.227799999999588e-05, 5.275000000000418e-05, 5.2499999999996994e-05, 5.241699999999905e-05, 5.2665999999999824e-05, 5.2735999999997674e-05, 5.25270000000036e-05, 5.261100000000102e-05, 5.2235999999997174e-05, 5.250000000000393e-05, 5.265299999999973e-05, 5.204099999999573e-05, 5.236100000000077e-05, 5.280599999999552e-05, 5.219499999999794e-05, 5.200000000000343e-05, 5.2181000000005306e-05, 5.215299999999923e-05, 5.263900000000016e-05, 5.23340000000011e-05, 5.2209000000004446e-05, 5.279200000000289e-05, 5.261100000000102e-05, 5.2763999999996813e-05, 5.259700000000145e-05, 5.256900000000231e-05, 5.1999999999996493e-05, 5.2165999999999324e-05, 5.238899999999991e-05, 5.234699999999426e-05, 5.223600000000411e-05]</msg>
<status status="PASS" starttime="20201030 15:56:27.528" endtime="20201030 15:56:27.533"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:27.517" endtime="20201030 15:56:27.535"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:27.546" endtime="20201030 15:56:27.567"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:27.540" endtime="20201030 15:56:27.569"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:27.537" endtime="20201030 15:56:27.570"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:27.032" endtime="20201030 15:56:27.570"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:27.030" endtime="20201030 15:56:27.571"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:27.593" endtime="20201030 15:56:27.613"></status>
</kw>
<msg timestamp="20201030 15:56:27.614" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:27.590" endtime="20201030 15:56:27.615"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:27.621" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:27.617" endtime="20201030 15:56:27.621"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:27.623" endtime="20201030 15:56:27.627"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:27.583" endtime="20201030 15:56:27.628"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:27.577" endtime="20201030 15:56:27.630"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:27.647" endtime="20201030 15:56:27.980"></status>
</kw>
<msg timestamp="20201030 15:56:27.987" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040946972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041000083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:27.643" endtime="20201030 15:56:27.987"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:28.006" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040946972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041000083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:27.989" endtime="20201030 15:56:28.007"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:28.008" endtime="20201030 15:56:28.012"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:27.636" endtime="20201030 15:56:28.013"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:27.631" endtime="20201030 15:56:28.015"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:28.026" level="INFO">${RESULT} = [{'diff': 5.311100000000152e-05}, {'diff': 5.383300000000313e-05}, {'diff': 5.356899999999637e-05}, {'diff': 5.383300000000313e-05}, {'diff': 5.3721999999999104e-05}, {'diff': 5.306899999999587e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:56:28.017" endtime="20201030 15:56:28.026"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:28.037" level="INFO">${ACCURACY} = {'diff': [5.311100000000152e-05, 5.383300000000313e-05, 5.356899999999637e-05, 5.383300000000313e-05, 5.3721999999999104e-05, 5.306899999999587e-05, 5.311099999999458e-05, 5.312500000000109e-05, 5.345...</msg>
<status status="PASS" starttime="20201030 15:56:28.028" endtime="20201030 15:56:28.038"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:28.049" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201030 15:56:28.046" endtime="20201030 15:56:28.049"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:28.054" level="INFO">VALUE: [5.311100000000152e-05, 5.383300000000313e-05, 5.356899999999637e-05, 5.383300000000313e-05, 5.3721999999999104e-05, 5.306899999999587e-05, 5.311099999999458e-05, 5.312500000000109e-05, 5.3457999999999284e-05, 5.337500000000134e-05, 5.33340000000021e-05, 5.350000000000493e-05, 5.33470000000022e-05, 5.38749999999949e-05, 5.33340000000021e-05, 5.343099999999962e-05, 5.384799999999523e-05, 5.322299999999808e-05, 5.311199999999405e-05, 5.2999999999997494e-05, 5.356899999999637e-05, 5.3443999999999714e-05, 5.387500000000184e-05, 5.388900000000141e-05, 5.322200000000554e-05, 5.333300000000263e-05, 5.369499999999944e-05, 5.330500000000349e-05, 5.312499999999415e-05, 5.3777999999997383e-05, 5.359799999999498e-05, 5.3513999999997564e-05, 5.336200000000124e-05, 5.3707999999999534e-05, 5.3763999999997814e-05, 5.331899999999612e-05, 5.363900000000116e-05, 5.30549999999963e-05, 5.311100000000152e-05, 5.3013999999997063e-05, 5.3221999999998604e-05, 5.359700000000245e-05, 5.338900000000091e-05, 5.3777999999997383e-05, 5.369499999999944e-05, 5.3221999999998604e-05, 5.333300000000263e-05, 5.302800000000357e-05, 5.376400000000475e-05, 5.3459000000005696e-05]</msg>
<status status="PASS" starttime="20201030 15:56:28.051" endtime="20201030 15:56:28.056"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:28.039" endtime="20201030 15:56:28.057"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:28.067" endtime="20201030 15:56:28.088"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:28.062" endtime="20201030 15:56:28.090"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:28.060" endtime="20201030 15:56:28.091"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:27.573" endtime="20201030 15:56:28.091"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:27.572" endtime="20201030 15:56:28.092"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:28.114" endtime="20201030 15:56:28.135"></status>
</kw>
<msg timestamp="20201030 15:56:28.136" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:28.111" endtime="20201030 15:56:28.137"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:28.142" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:28.139" endtime="20201030 15:56:28.143"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:28.145" endtime="20201030 15:56:28.149"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:28.104" endtime="20201030 15:56:28.150"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:28.098" endtime="20201030 15:56:28.152"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:28.168" endtime="20201030 15:56:28.457"></status>
</kw>
<msg timestamp="20201030 15:56:28.461" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041417208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041471944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:28.165" endtime="20201030 15:56:28.461"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:28.469" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041417208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041471944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:28.462" endtime="20201030 15:56:28.469"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:28.470" endtime="20201030 15:56:28.472"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:28.158" endtime="20201030 15:56:28.473"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:28.153" endtime="20201030 15:56:28.473"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:28.478" level="INFO">${RESULT} = [{'diff': 5.4735999999999674e-05}, {'diff': 5.43470000000032e-05}, {'diff': 5.4027999999997633e-05}, {'diff': 5.412500000000209e-05}, {'diff': 5.436099999999583e-05}, {'diff': 5.411099999999558e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:56:28.474" endtime="20201030 15:56:28.478"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:28.483" level="INFO">${ACCURACY} = {'diff': [5.4735999999999674e-05, 5.43470000000032e-05, 5.4027999999997633e-05, 5.412500000000209e-05, 5.436099999999583e-05, 5.411099999999558e-05, 5.452699999999866e-05, 5.4221999999999604e-05, 5.48...</msg>
<status status="PASS" starttime="20201030 15:56:28.479" endtime="20201030 15:56:28.484"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:28.489" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201030 15:56:28.488" endtime="20201030 15:56:28.489"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:28.491" level="INFO">VALUE: [5.4735999999999674e-05, 5.43470000000032e-05, 5.4027999999997633e-05, 5.412500000000209e-05, 5.436099999999583e-05, 5.411099999999558e-05, 5.452699999999866e-05, 5.4221999999999604e-05, 5.488900000000241e-05, 5.4541999999997703e-05, 5.412500000000209e-05, 5.463900000000216e-05, 5.4541999999997703e-05, 5.454200000000464e-05, 5.411099999999558e-05, 5.4444000000000714e-05, 5.483300000000413e-05, 5.412500000000209e-05, 5.4915999999995135e-05, 5.486100000000327e-05, 5.4014000000005e-05, 5.4777999999998384e-05, 5.456899999999737e-05, 5.43470000000032e-05, 5.4527999999998134e-05, 5.411100000000252e-05, 5.405600000000371e-05, 5.419499999999994e-05, 5.405600000000371e-05, 5.4013999999998064e-05, 5.473699999999915e-05, 5.409799999999548e-05, 5.433299999999669e-05, 5.454099999999823e-05, 5.4638000000002684e-05, 5.4680000000001394e-05, 5.490300000000198e-05, 5.437500000000234e-05, 5.4916000000002074e-05, 5.412500000000209e-05, 5.404200000000414e-05, 5.4485999999999424e-05, 5.437500000000234e-05, 5.482000000000403e-05, 5.459699999999651e-05, 5.43340000000031e-05, 5.440299999999454e-05, 5.490300000000198e-05, 5.3999999999998494e-05, 5.43340000000031e-05]</msg>
<status status="PASS" starttime="20201030 15:56:28.490" endtime="20201030 15:56:28.492"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:28.484" endtime="20201030 15:56:28.494"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:28.503" endtime="20201030 15:56:28.525"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:28.499" endtime="20201030 15:56:28.527"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:28.497" endtime="20201030 15:56:28.527"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:28.094" endtime="20201030 15:56:28.528"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:28.093" endtime="20201030 15:56:28.528"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:28.551" endtime="20201030 15:56:28.572"></status>
</kw>
<msg timestamp="20201030 15:56:28.573" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:28.548" endtime="20201030 15:56:28.573"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:28.579" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:28.575" endtime="20201030 15:56:28.580"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:28.582" endtime="20201030 15:56:28.585"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:28.541" endtime="20201030 15:56:28.587"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:28.535" endtime="20201030 15:56:28.589"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:28.605" endtime="20201030 15:56:28.941"></status>
</kw>
<msg timestamp="20201030 15:56:28.949" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041102681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04115775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:56:28.602" endtime="20201030 15:56:28.949"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:28.968" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041102681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04115775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:56:28.951" endtime="20201030 15:56:28.968"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:28.970" endtime="20201030 15:56:28.974"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:28.595" endtime="20201030 15:56:28.975"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:28.590" endtime="20201030 15:56:28.977"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:28.987" level="INFO">${RESULT} = [{'diff': 5.506899999999787e-05}, {'diff': 5.531999999999759e-05}, {'diff': 5.533299999999769e-05}, {'diff': 5.5263999999999314e-05}, {'diff': 5.4999999999999494e-05}, {'diff': 5.5263999999999314e-05}...</msg>
<status status="PASS" starttime="20201030 15:56:28.978" endtime="20201030 15:56:28.988"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:28.997" level="INFO">${ACCURACY} = {'diff': [5.506899999999787e-05, 5.531999999999759e-05, 5.533299999999769e-05, 5.5263999999999314e-05, 5.4999999999999494e-05, 5.5263999999999314e-05, 5.588900000000341e-05, 5.588899999999647e-05, 5.5...</msg>
<status status="PASS" starttime="20201030 15:56:28.989" endtime="20201030 15:56:28.997"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:29.008" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201030 15:56:29.006" endtime="20201030 15:56:29.009"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:29.013" level="INFO">VALUE: [5.506899999999787e-05, 5.531999999999759e-05, 5.533299999999769e-05, 5.5263999999999314e-05, 5.4999999999999494e-05, 5.5263999999999314e-05, 5.588900000000341e-05, 5.588899999999647e-05, 5.5901999999996566e-05, 5.5166000000002324e-05, 5.595900000000126e-05, 5.505500000000524e-05, 5.5486000000000424e-05, 5.5263999999999314e-05, 5.5986000000000924e-05, 5.537500000000334e-05, 5.5555999999998273e-05, 5.587500000000384e-05, 5.5041999999998203e-05, 5.5555999999998273e-05, 5.526299999999984e-05, 5.586099999999733e-05, 5.5777999999999384e-05, 5.588899999999647e-05, 5.543100000000162e-05, 5.55549999999988e-05, 5.533299999999769e-05, 5.556899999999837e-05, 5.577699999999991e-05, 5.5499999999999994e-05, 5.5013999999999064e-05, 5.58749999999969e-05, 5.519500000000094e-05, 5.5443999999994775e-05, 5.588900000000341e-05, 5.538899999999597e-05, 5.5708000000001534e-05, 5.51670000000018e-05, 5.5777999999999384e-05, 5.4999999999999494e-05, 5.5457999999994345e-05, 5.576300000000034e-05, 5.5750000000000244e-05, 5.536099999999683e-05, 5.5943999999995275e-05, 5.506900000000481e-05, 5.590299999999604e-05, 5.53749999999964e-05, 5.5736000000000674e-05, 5.581900000000556e-05]</msg>
<status status="PASS" starttime="20201030 15:56:29.010" endtime="20201030 15:56:29.015"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:28.999" endtime="20201030 15:56:29.016"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:29.026" endtime="20201030 15:56:29.047"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:29.021" endtime="20201030 15:56:29.049"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:29.019" endtime="20201030 15:56:29.050"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:28.530" endtime="20201030 15:56:29.051"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:28.529" endtime="20201030 15:56:29.051"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:29.075" endtime="20201030 15:56:29.098"></status>
</kw>
<msg timestamp="20201030 15:56:29.099" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:29.071" endtime="20201030 15:56:29.100"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:29.105" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:29.101" endtime="20201030 15:56:29.106"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:29.108" endtime="20201030 15:56:29.111"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:29.064" endtime="20201030 15:56:29.113"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:29.058" endtime="20201030 15:56:29.114"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:29.131" endtime="20201030 15:56:29.464"></status>
</kw>
<msg timestamp="20201030 15:56:29.472" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044665542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044722208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:29.128" endtime="20201030 15:56:29.472"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:29.490" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044665542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044722208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:29.474" endtime="20201030 15:56:29.491"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:29.493" endtime="20201030 15:56:29.496"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:29.120" endtime="20201030 15:56:29.498"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:29.116" endtime="20201030 15:56:29.499"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:29.510" level="INFO">${RESULT} = [{'diff': 5.6665999999996886e-05}, {'diff': 5.662499999999765e-05}, {'diff': 5.663899999999722e-05}, {'diff': 5.662499999999765e-05}, {'diff': 5.634699999999826e-05}, {'diff': 5.6443999999995775e-05},...</msg>
<status status="PASS" starttime="20201030 15:56:29.501" endtime="20201030 15:56:29.510"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:29.519" level="INFO">${ACCURACY} = {'diff': [5.6665999999996886e-05, 5.662499999999765e-05, 5.663899999999722e-05, 5.662499999999765e-05, 5.634699999999826e-05, 5.6443999999995775e-05, 5.688899999999747e-05, 5.6666000000003824e-05, 5.6...</msg>
<status status="PASS" starttime="20201030 15:56:29.512" endtime="20201030 15:56:29.520"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:29.530" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201030 15:56:29.528" endtime="20201030 15:56:29.531"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:29.536" level="INFO">VALUE: [5.6665999999996886e-05, 5.662499999999765e-05, 5.663899999999722e-05, 5.662499999999765e-05, 5.634699999999826e-05, 5.6443999999995775e-05, 5.688899999999747e-05, 5.6666000000003824e-05, 5.6514000000000564e-05, 5.5972000000001354e-05, 5.6444000000002714e-05, 5.634699999999826e-05, 5.6291999999999454e-05, 5.6541999999999704e-05, 5.638900000000391e-05, 5.6722000000002104e-05, 5.66670000000033e-05, 5.61670000000028e-05, 5.6264000000000314e-05, 5.609799999999748e-05, 5.6014000000000064e-05, 5.687500000000484e-05, 5.602700000000016e-05, 5.609699999999801e-05, 5.6471999999994915e-05, 5.6165999999996385e-05, 5.611099999999758e-05, 5.612499999999715e-05, 5.633299999999869e-05, 5.684699999999876e-05, 5.7014000000001064e-05, 5.6514000000000564e-05, 5.6221999999994665e-05, 5.644499999999525e-05, 5.613900000000366e-05, 5.644500000000219e-05, 5.608399999999791e-05, 5.6236000000001174e-05, 5.6416000000003574e-05, 5.6222000000001604e-05, 5.6750000000001244e-05, 5.663900000000416e-05, 5.6665999999996886e-05, 5.683299999999919e-05, 5.684799999999823e-05, 5.6555999999999274e-05, 5.682000000000603e-05, 5.665299999999679e-05, 5.6791999999999954e-05, 5.7014000000001064e-05]</msg>
<status status="PASS" starttime="20201030 15:56:29.532" endtime="20201030 15:56:29.542"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:29.521" endtime="20201030 15:56:29.543"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:29.554" endtime="20201030 15:56:29.576"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:29.549" endtime="20201030 15:56:29.578"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:29.546" endtime="20201030 15:56:29.578"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:29.053" endtime="20201030 15:56:29.579"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:29.052" endtime="20201030 15:56:29.579"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:29.602" endtime="20201030 15:56:29.623"></status>
</kw>
<msg timestamp="20201030 15:56:29.624" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:29.599" endtime="20201030 15:56:29.625"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:29.631" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:29.627" endtime="20201030 15:56:29.632"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:29.633" endtime="20201030 15:56:29.637"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:29.592" endtime="20201030 15:56:29.639"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:29.586" endtime="20201030 15:56:29.640"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:29.657" endtime="20201030 15:56:30.007"></status>
</kw>
<msg timestamp="20201030 15:56:30.014" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041171319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041228944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:29.653" endtime="20201030 15:56:30.014"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:30.032" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041171319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041228944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:30.016" endtime="20201030 15:56:30.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:30.035" endtime="20201030 15:56:30.039"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:29.646" endtime="20201030 15:56:30.040"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:29.642" endtime="20201030 15:56:30.042"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:30.052" level="INFO">${RESULT} = [{'diff': 5.762499999999865e-05}, {'diff': 5.7665999999997886e-05}, {'diff': 5.712499999999815e-05}, {'diff': 5.711099999999858e-05}, {'diff': 5.7721999999996165e-05}, {'diff': 5.6985999999994985e-05}...</msg>
<status status="PASS" starttime="20201030 15:56:30.043" endtime="20201030 15:56:30.053"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:30.063" level="INFO">${ACCURACY} = {'diff': [5.762499999999865e-05, 5.7665999999997886e-05, 5.712499999999815e-05, 5.711099999999858e-05, 5.7721999999996165e-05, 5.6985999999994985e-05, 5.761099999999908e-05, 5.7986000000002924e-05, 5....</msg>
<status status="PASS" starttime="20201030 15:56:30.054" endtime="20201030 15:56:30.063"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:30.074" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201030 15:56:30.072" endtime="20201030 15:56:30.074"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:30.079" level="INFO">VALUE: [5.762499999999865e-05, 5.7665999999997886e-05, 5.712499999999815e-05, 5.711099999999858e-05, 5.7721999999996165e-05, 5.6985999999994985e-05, 5.761099999999908e-05, 5.7986000000002924e-05, 5.7736000000002674e-05, 5.733299999999969e-05, 5.7500000000001994e-05, 5.743099999999668e-05, 5.7278000000000884e-05, 5.7000000000001494e-05, 5.7333999999999163e-05, 5.7722000000003104e-05, 5.7457999999996345e-05, 5.78749999999989e-05, 5.7194000000003464e-05, 5.709699999999901e-05, 5.709700000000595e-05, 5.711099999999858e-05, 5.76670000000043e-05, 5.7583999999999413e-05, 5.7792000000000954e-05, 5.7527999999994195e-05, 5.7735999999995735e-05, 5.784699999999976e-05, 5.788899999999847e-05, 5.7778000000001384e-05, 5.702700000000116e-05, 5.7901999999998566e-05, 5.7221999999995665e-05, 5.7429999999997206e-05, 5.7971999999996415e-05, 5.7806000000000524e-05, 5.7193999999996525e-05, 5.766699999999736e-05, 5.768099999999693e-05, 5.7236000000002174e-05, 5.769500000000344e-05, 5.7792000000000954e-05, 5.7000000000001494e-05, 5.7750000000002244e-05, 5.734799999999873e-05, 5.74870000000019e-05, 5.7472000000002854e-05, 5.7042000000000204e-05, 5.7457999999996345e-05, 5.777700000000191e-05]</msg>
<status status="PASS" starttime="20201030 15:56:30.076" endtime="20201030 15:56:30.081"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:30.065" endtime="20201030 15:56:30.083"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:30.093" endtime="20201030 15:56:30.114"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:30.088" endtime="20201030 15:56:30.116"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:30.085" endtime="20201030 15:56:30.117"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:29.581" endtime="20201030 15:56:30.118"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:29.580" endtime="20201030 15:56:30.118"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:30.141" endtime="20201030 15:56:30.162"></status>
</kw>
<msg timestamp="20201030 15:56:30.163" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:30.137" endtime="20201030 15:56:30.163"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:30.169" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:30.165" endtime="20201030 15:56:30.170"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:30.172" endtime="20201030 15:56:30.175"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:30.130" endtime="20201030 15:56:30.177"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:30.124" endtime="20201030 15:56:30.178"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:30.195" endtime="20201030 15:56:30.529"></status>
</kw>
<msg timestamp="20201030 15:56:30.537" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041285736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041344708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:30.192" endtime="20201030 15:56:30.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:30.555" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041285736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041344708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:30.539" endtime="20201030 15:56:30.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:30.557" endtime="20201030 15:56:30.561"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:30.184" endtime="20201030 15:56:30.563"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:30.180" endtime="20201030 15:56:30.564"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:30.574" level="INFO">${RESULT} = [{'diff': 5.8971999999997415e-05}, {'diff': 5.8457999999997345e-05}, {'diff': 5.888899999999947e-05}, {'diff': 5.8485999999996485e-05}, {'diff': 5.8000000000002494e-05}, {'diff': 5.85550000000018e-05}...</msg>
<status status="PASS" starttime="20201030 15:56:30.566" endtime="20201030 15:56:30.575"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:30.586" level="INFO">${ACCURACY} = {'diff': [5.8971999999997415e-05, 5.8457999999997345e-05, 5.888899999999947e-05, 5.8485999999996485e-05, 5.8000000000002494e-05, 5.85550000000018e-05, 5.8582999999994e-05, 5.888899999999947e-05, 5.823...</msg>
<status status="PASS" starttime="20201030 15:56:30.577" endtime="20201030 15:56:30.586"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:30.597" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201030 15:56:30.594" endtime="20201030 15:56:30.597"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:30.602" level="INFO">VALUE: [5.8971999999997415e-05, 5.8457999999997345e-05, 5.888899999999947e-05, 5.8485999999996485e-05, 5.8000000000002494e-05, 5.85550000000018e-05, 5.8582999999994e-05, 5.888899999999947e-05, 5.8236000000003174e-05, 5.8222000000003604e-05, 5.816699999999786e-05, 5.809700000000001e-05, 5.837500000000634e-05, 5.8014000000002064e-05, 5.836099999999983e-05, 5.8582999999994e-05, 5.88619999999998e-05, 5.8165999999998386e-05, 5.862499999999965e-05, 5.8179999999997956e-05, 5.808300000000044e-05, 5.80550000000013e-05, 5.8264000000002314e-05, 5.809700000000001e-05, 5.8056000000000774e-05, 5.8236000000003174e-05, 5.813899999999872e-05, 5.8249999999995805e-05, 5.8042000000001204e-05, 5.88749999999999e-05, 5.890300000000598e-05, 5.8834000000000664e-05, 5.838899999999897e-05, 5.8985999999996985e-05, 5.838899999999897e-05, 5.863899999999922e-05, 5.811099999999958e-05, 5.880500000000205e-05, 5.8943999999998276e-05, 5.856899999999443e-05, 5.8764000000002814e-05, 5.888899999999947e-05, 5.815299999999829e-05, 5.8306000000001024e-05, 5.8194999999997e-05, 5.840299999999854e-05, 5.8500000000002994e-05, 5.836099999999983e-05, 5.79870000000024e-05, 5.879099999999554e-05]</msg>
<status status="PASS" starttime="20201030 15:56:30.599" endtime="20201030 15:56:30.604"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:30.588" endtime="20201030 15:56:30.605"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:30.615" endtime="20201030 15:56:30.637"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:30.610" endtime="20201030 15:56:30.638"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:30.608" endtime="20201030 15:56:30.639"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:30.120" endtime="20201030 15:56:30.640"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:30.119" endtime="20201030 15:56:30.640"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:30.663" endtime="20201030 15:56:30.684"></status>
</kw>
<msg timestamp="20201030 15:56:30.685" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:30.659" endtime="20201030 15:56:30.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:30.691" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:30.687" endtime="20201030 15:56:30.692"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:30.693" endtime="20201030 15:56:30.697"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:30.652" endtime="20201030 15:56:30.699"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:30.646" endtime="20201030 15:56:30.700"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:30.717" endtime="20201030 15:56:31.052"></status>
</kw>
<msg timestamp="20201030 15:56:31.059" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041668708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041727861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:30.713" endtime="20201030 15:56:31.060"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:31.078" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041668708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041727861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:31.062" endtime="20201030 15:56:31.079"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:31.080" endtime="20201030 15:56:31.084"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:30.706" endtime="20201030 15:56:31.086"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:30.702" endtime="20201030 15:56:31.087"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:31.098" level="INFO">${RESULT} = [{'diff': 5.915299999999929e-05}, {'diff': 5.9292000000002454e-05}, {'diff': 5.9735999999997735e-05}, {'diff': 5.963899999999328e-05}, {'diff': 5.9334000000001164e-05}, {'diff': 5.8999999999996555e-05...</msg>
<status status="PASS" starttime="20201030 15:56:31.089" endtime="20201030 15:56:31.098"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:31.107" level="INFO">${ACCURACY} = {'diff': [5.915299999999929e-05, 5.9292000000002454e-05, 5.9735999999997735e-05, 5.963899999999328e-05, 5.9334000000001164e-05, 5.8999999999996555e-05, 5.995900000000526e-05, 5.9000000000003494e-05, 5...</msg>
<status status="PASS" starttime="20201030 15:56:31.100" endtime="20201030 15:56:31.108"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:31.118" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201030 15:56:31.116" endtime="20201030 15:56:31.119"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:31.124" level="INFO">VALUE: [5.915299999999929e-05, 5.9292000000002454e-05, 5.9735999999997735e-05, 5.963899999999328e-05, 5.9334000000001164e-05, 5.8999999999996555e-05, 5.995900000000526e-05, 5.9000000000003494e-05, 5.986100000000133e-05, 5.904099999999579e-05, 5.9457999999998346e-05, 5.930499999999561e-05, 5.93750000000004e-05, 5.9013999999996125e-05, 5.962500000000065e-05, 5.9792000000002954e-05, 5.9042000000002204e-05, 5.956900000000237e-05, 5.9264000000003314e-05, 5.9027999999995695e-05, 5.9055999999994835e-05, 5.9764000000003814e-05, 5.90550000000023e-05, 5.9556000000002274e-05, 5.9570000000001844e-05, 5.89870000000034e-05, 5.9180000000005895e-05, 5.954100000000323e-05, 5.956899999999543e-05, 5.965300000000673e-05, 5.93750000000004e-05, 5.955499999999586e-05, 5.9778000000003384e-05, 5.9556000000002274e-05, 5.943100000000562e-05, 5.9750000000004244e-05, 5.938899999999997e-05, 5.913899999999972e-05, 5.8999999999996555e-05, 5.9834000000001664e-05, 5.923699999999671e-05, 5.915299999999929e-05, 5.954100000000323e-05, 5.95550000000028e-05, 5.912500000000015e-05, 5.90550000000023e-05, 5.9735999999997735e-05, 5.9457999999998346e-05, 5.9292000000002454e-05, 5.913899999999972e-05]</msg>
<status status="PASS" starttime="20201030 15:56:31.121" endtime="20201030 15:56:31.126"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:31.109" endtime="20201030 15:56:31.127"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:31.137" endtime="20201030 15:56:31.159"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:31.133" endtime="20201030 15:56:31.161"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:31.130" endtime="20201030 15:56:31.162"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:30.642" endtime="20201030 15:56:31.162"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:30.641" endtime="20201030 15:56:31.163"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:31.185" endtime="20201030 15:56:31.212"></status>
</kw>
<msg timestamp="20201030 15:56:31.213" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:31.182" endtime="20201030 15:56:31.213"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:31.219" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:31.215" endtime="20201030 15:56:31.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:31.222" endtime="20201030 15:56:31.225"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:31.175" endtime="20201030 15:56:31.227"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:31.169" endtime="20201030 15:56:31.228"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:31.245" endtime="20201030 15:56:31.587"></status>
</kw>
<msg timestamp="20201030 15:56:31.595" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047184153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047244125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:31.242" endtime="20201030 15:56:31.595"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:31.613" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047184153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047244125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:31.597" endtime="20201030 15:56:31.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:31.616" endtime="20201030 15:56:31.620"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:31.234" endtime="20201030 15:56:31.621"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:31.230" endtime="20201030 15:56:31.623"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:31.633" level="INFO">${RESULT} = [{'diff': 5.9971999999998415e-05}, {'diff': 6.00829999999955e-05}, {'diff': 6.015300000000029e-05}, {'diff': 6.0542000000003704e-05}, {'diff': 6.0055999999995835e-05}, {'diff': 6.0971999999999416e-05}...</msg>
<status status="PASS" starttime="20201030 15:56:31.624" endtime="20201030 15:56:31.634"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:31.643" level="INFO">${ACCURACY} = {'diff': [5.9971999999998415e-05, 6.00829999999955e-05, 6.015300000000029e-05, 6.0542000000003704e-05, 6.0055999999995835e-05, 6.0971999999999416e-05, 6.0791999999997015e-05, 6.044499999999925e-05, 6....</msg>
<status status="PASS" starttime="20201030 15:56:31.635" endtime="20201030 15:56:31.643"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:31.653" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201030 15:56:31.651" endtime="20201030 15:56:31.654"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:31.659" level="INFO">VALUE: [5.9971999999998415e-05, 6.00829999999955e-05, 6.015300000000029e-05, 6.0542000000003704e-05, 6.0055999999995835e-05, 6.0971999999999416e-05, 6.0791999999997015e-05, 6.044499999999925e-05, 6.094499999999975e-05, 6.0902000000001566e-05, 6.0708000000006535e-05, 6.0207999999999096e-05, 6.055499999999686e-05, 6.0971999999999416e-05, 6.00550000000033e-05, 6.092999999999377e-05, 6.031899999999618e-05, 6.0805999999996585e-05, 6.090300000000104e-05, 6.0777999999997445e-05, 6.0570000000002844e-05, 6.0070000000002344e-05, 6.052699999999772e-05, 6.0194999999999e-05, 6.0112000000001053e-05, 6.0112000000001053e-05, 5.9999999999997555e-05, 6.0777999999997445e-05, 6.0430000000000206e-05, 6.0264000000004314e-05, 6.031900000000312e-05, 5.9999999999997555e-05, 6.086099999999539e-05, 6.034699999999532e-05, 6.0443999999999776e-05, 6.0514000000004564e-05, 6.0916000000001136e-05, 6.065300000000079e-05, 6.016699999999986e-05, 6.0792000000003954e-05, 6.0112000000001053e-05, 6.0749999999998305e-05, 6.09159999999942e-05, 6.079099999999754e-05, 6.08750000000019e-05, 6.013900000000072e-05, 6.038900000000097e-05, 6.03750000000014e-05, 6.0721999999999166e-05, 6.006900000000287e-05]</msg>
<status status="PASS" starttime="20201030 15:56:31.656" endtime="20201030 15:56:31.660"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:31.644" endtime="20201030 15:56:31.662"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:31.673" endtime="20201030 15:56:31.695"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:31.667" endtime="20201030 15:56:31.697"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:31.665" endtime="20201030 15:56:31.697"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:31.165" endtime="20201030 15:56:31.698"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:31.163" endtime="20201030 15:56:31.698"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:31.721" endtime="20201030 15:56:31.742"></status>
</kw>
<msg timestamp="20201030 15:56:31.743" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:31.718" endtime="20201030 15:56:31.743"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:31.749" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:31.745" endtime="20201030 15:56:31.750"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:31.751" endtime="20201030 15:56:31.755"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:31.710" endtime="20201030 15:56:31.757"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:31.704" endtime="20201030 15:56:31.758"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:31.775" endtime="20201030 15:56:32.120"></status>
</kw>
<msg timestamp="20201030 15:56:32.127" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041267347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041329264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:31.771" endtime="20201030 15:56:32.128"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:32.146" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041267347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041329264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:32.129" endtime="20201030 15:56:32.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:32.148" endtime="20201030 15:56:32.152"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:31.764" endtime="20201030 15:56:32.154"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:31.760" endtime="20201030 15:56:32.155"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:32.166" level="INFO">${RESULT} = [{'diff': 6.191699999999467e-05}, {'diff': 6.1582999999997e-05}, {'diff': 6.105599999999684e-05}, {'diff': 6.162499999999571e-05}, {'diff': 6.166700000000136e-05}, {'diff': 6.133299999999675e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:56:32.157" endtime="20201030 15:56:32.167"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:32.177" level="INFO">${ACCURACY} = {'diff': [6.191699999999467e-05, 6.1582999999997e-05, 6.105599999999684e-05, 6.162499999999571e-05, 6.166700000000136e-05, 6.133299999999675e-05, 6.148599999999949e-05, 6.106900000000387e-05, 6.190300...</msg>
<status status="PASS" starttime="20201030 15:56:32.168" endtime="20201030 15:56:32.178"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:32.189" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201030 15:56:32.186" endtime="20201030 15:56:32.189"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:32.194" level="INFO">VALUE: [6.191699999999467e-05, 6.1582999999997e-05, 6.105599999999684e-05, 6.162499999999571e-05, 6.166700000000136e-05, 6.133299999999675e-05, 6.148599999999949e-05, 6.106900000000387e-05, 6.190300000000204e-05, 6.144500000000025e-05, 6.198599999999999e-05, 6.098699999999846e-05, 6.19029999999951e-05, 6.12499999999988e-05, 6.197200000000042e-05, 6.195800000000085e-05, 6.138899999999503e-05, 6.123599999999924e-05, 6.180499999999811e-05, 6.0999999999998555e-05, 6.148599999999949e-05, 6.198599999999999e-05, 6.149999999999906e-05, 6.187499999999596e-05, 6.155600000000427e-05, 6.113899999999478e-05, 6.120899999999957e-05, 6.18479999999963e-05, 6.161200000000255e-05, 6.133399999999622e-05, 6.161199999999561e-05, 6.115200000000182e-05, 6.18750000000029e-05, 6.145800000000035e-05, 6.126399999999838e-05, 6.141600000000164e-05, 6.116700000000086e-05, 6.120899999999957e-05, 6.148599999999949e-05, 6.109699999999607e-05, 6.112499999999521e-05, 6.176400000000581e-05, 6.107000000000334e-05, 6.148599999999949e-05, 6.111099999999564e-05, 6.134700000000326e-05, 6.18750000000029e-05, 6.130499999999761e-05, 6.179099999999854e-05, 6.176399999999888e-05]</msg>
<status status="PASS" starttime="20201030 15:56:32.191" endtime="20201030 15:56:32.196"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:32.179" endtime="20201030 15:56:32.197"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:32.207" endtime="20201030 15:56:32.228"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:32.202" endtime="20201030 15:56:32.230"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:32.200" endtime="20201030 15:56:32.231"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:31.700" endtime="20201030 15:56:32.231"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:31.699" endtime="20201030 15:56:32.232"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:32.255" endtime="20201030 15:56:32.276"></status>
</kw>
<msg timestamp="20201030 15:56:32.277" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:32.251" endtime="20201030 15:56:32.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:32.283" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:32.280" endtime="20201030 15:56:32.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:32.286" endtime="20201030 15:56:32.289"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:32.244" endtime="20201030 15:56:32.291"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:32.238" endtime="20201030 15:56:32.293"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:32.309" endtime="20201030 15:56:32.656"></status>
</kw>
<msg timestamp="20201030 15:56:32.663" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041358486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041420958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:32.306" endtime="20201030 15:56:32.664"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:32.682" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041358486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041420958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:32.666" endtime="20201030 15:56:32.683"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:32.685" endtime="20201030 15:56:32.688"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:32.299" endtime="20201030 15:56:32.690"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:32.294" endtime="20201030 15:56:32.691"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:32.702" level="INFO">${RESULT} = [{'diff': 6.247200000000092e-05}, {'diff': 6.294500000000175e-05}, {'diff': 6.23479999999968e-05}, {'diff': 6.23479999999968e-05}, {'diff': 6.199999999999956e-05}, {'diff': 6.226399999999938e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:56:32.693" endtime="20201030 15:56:32.702"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:32.713" level="INFO">${ACCURACY} = {'diff': [6.247200000000092e-05, 6.294500000000175e-05, 6.23479999999968e-05, 6.23479999999968e-05, 6.199999999999956e-05, 6.226399999999938e-05, 6.245800000000135e-05, 6.22499999999998e-05, 6.2263999...</msg>
<status status="PASS" starttime="20201030 15:56:32.704" endtime="20201030 15:56:32.713"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:32.724" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201030 15:56:32.722" endtime="20201030 15:56:32.724"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:32.729" level="INFO">VALUE: [6.247200000000092e-05, 6.294500000000175e-05, 6.23479999999968e-05, 6.23479999999968e-05, 6.199999999999956e-05, 6.226399999999938e-05, 6.245800000000135e-05, 6.22499999999998e-05, 6.226399999999938e-05, 6.238900000000297e-05, 6.272200000000117e-05, 6.204099999999879e-05, 6.293100000000218e-05, 6.294400000000228e-05, 6.198599999999999e-05, 6.209799999999654e-05, 6.25279999999992e-05, 6.2195000000001e-05, 6.263899999999628e-05, 6.244500000000125e-05, 6.268100000000193e-05, 6.240300000000254e-05, 6.22499999999998e-05, 6.298600000000099e-05, 6.212500000000315e-05, 6.277799999999945e-05, 6.279200000000595e-05, 6.286099999999739e-05, 6.286099999999739e-05, 6.215299999999535e-05, 6.230599999999809e-05, 6.277799999999945e-05, 6.272200000000117e-05, 6.284800000000423e-05, 6.288899999999653e-05, 6.294500000000175e-05, 6.277799999999945e-05, 6.258300000000494e-05, 6.24300000000022e-05, 6.234699999999732e-05, 6.277699999999997e-05, 6.283300000000519e-05, 6.263899999999628e-05, 6.212500000000315e-05, 6.254199999999877e-05, 6.209800000000348e-05, 6.28750000000039e-05, 6.297299999999395e-05, 6.255599999999834e-05, 6.23200000000046e-05]</msg>
<status status="PASS" starttime="20201030 15:56:32.726" endtime="20201030 15:56:32.731"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:32.715" endtime="20201030 15:56:32.732"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:32.742" endtime="20201030 15:56:32.764"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:32.738" endtime="20201030 15:56:32.765"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:32.735" endtime="20201030 15:56:32.766"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:32.234" endtime="20201030 15:56:32.767"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:32.233" endtime="20201030 15:56:32.767"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:32.790" endtime="20201030 15:56:32.811"></status>
</kw>
<msg timestamp="20201030 15:56:32.812" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:32.786" endtime="20201030 15:56:32.812"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:32.818" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:32.814" endtime="20201030 15:56:32.819"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:32.820" endtime="20201030 15:56:32.824"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:32.779" endtime="20201030 15:56:32.826"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:32.773" endtime="20201030 15:56:32.827"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:32.844" endtime="20201030 15:56:33.160"></status>
</kw>
<msg timestamp="20201030 15:56:33.164" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041333806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041397444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:32.840" endtime="20201030 15:56:33.164"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:33.172" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041333806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041397444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:33.165" endtime="20201030 15:56:33.172"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:33.173" endtime="20201030 15:56:33.175"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:32.833" endtime="20201030 15:56:33.176"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:32.829" endtime="20201030 15:56:33.177"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:33.181" level="INFO">${RESULT} = [{'diff': 6.363799999999781e-05}, {'diff': 6.301400000000013e-05}, {'diff': 6.309699999999807e-05}, {'diff': 6.383299999999925e-05}, {'diff': 6.358300000000594e-05}, {'diff': 6.32080000000021e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:56:33.177" endtime="20201030 15:56:33.182"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:33.186" level="INFO">${ACCURACY} = {'diff': [6.363799999999781e-05, 6.301400000000013e-05, 6.309699999999807e-05, 6.383299999999925e-05, 6.358300000000594e-05, 6.32080000000021e-05, 6.329100000000004e-05, 6.345799999999541e-05, 6.34439...</msg>
<status status="PASS" starttime="20201030 15:56:33.183" endtime="20201030 15:56:33.187"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:33.192" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201030 15:56:33.191" endtime="20201030 15:56:33.192"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:33.195" level="INFO">VALUE: [6.363799999999781e-05, 6.301400000000013e-05, 6.309699999999807e-05, 6.383299999999925e-05, 6.358300000000594e-05, 6.32080000000021e-05, 6.329100000000004e-05, 6.345799999999541e-05, 6.344399999999584e-05, 6.333299999999875e-05, 6.39029999999971e-05, 6.35699999999989e-05, 6.34029999999966e-05, 6.383399999999873e-05, 6.39029999999971e-05, 6.380500000000011e-05, 6.322200000000167e-05, 6.354100000000029e-05, 6.301400000000013e-05, 6.376400000000088e-05, 6.338899999999703e-05, 6.362500000000465e-05, 6.322199999999473e-05, 6.363900000000422e-05, 6.391699999999667e-05, 6.388899999999753e-05, 6.344500000000225e-05, 6.381999999999916e-05, 6.386100000000533e-05, 6.32080000000021e-05, 6.327799999999995e-05, 6.302700000000022e-05, 6.376299999999446e-05, 6.362500000000465e-05, 6.311099999999764e-05, 6.318000000000296e-05, 6.337499999999746e-05, 6.304199999999927e-05, 6.388899999999753e-05, 6.348600000000149e-05, 6.38750000000049e-05, 6.327700000000047e-05, 6.304199999999927e-05, 6.362500000000465e-05, 6.313899999999678e-05, 6.365299999999685e-05, 6.350000000000106e-05, 6.380500000000011e-05, 6.384699999999882e-05, 6.342999999999627e-05]</msg>
<status status="PASS" starttime="20201030 15:56:33.193" endtime="20201030 15:56:33.196"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:33.187" endtime="20201030 15:56:33.197"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:33.201" endtime="20201030 15:56:33.221"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:33.199" endtime="20201030 15:56:33.222"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:33.198" endtime="20201030 15:56:33.222"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:32.769" endtime="20201030 15:56:33.222"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:32.768" endtime="20201030 15:56:33.222"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:33.233" endtime="20201030 15:56:33.254"></status>
</kw>
<msg timestamp="20201030 15:56:33.255" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:33.232" endtime="20201030 15:56:33.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:33.261" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:33.257" endtime="20201030 15:56:33.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:33.263" endtime="20201030 15:56:33.267"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:33.228" endtime="20201030 15:56:33.269"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:33.226" endtime="20201030 15:56:33.271"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:33.287" endtime="20201030 15:56:33.627"></status>
</kw>
<msg timestamp="20201030 15:56:33.634" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025346986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025411528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:33.284" endtime="20201030 15:56:33.635"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:33.653" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025346986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025411528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:33.637" endtime="20201030 15:56:33.654"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:33.656" endtime="20201030 15:56:33.660"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:33.277" endtime="20201030 15:56:33.661"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:33.272" endtime="20201030 15:56:33.663"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:33.673" level="INFO">${RESULT} = [{'diff': 6.454200000000077e-05}, {'diff': 6.404200000000027e-05}, {'diff': 6.404200000000027e-05}, {'diff': 6.433299999999975e-05}, {'diff': 6.44029999999976e-05}, {'diff': 6.500000000000256e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:56:33.664" endtime="20201030 15:56:33.674"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:33.683" level="INFO">${ACCURACY} = {'diff': [6.454200000000077e-05, 6.404200000000027e-05, 6.404200000000027e-05, 6.433299999999975e-05, 6.44029999999976e-05, 6.500000000000256e-05, 6.444499999999978e-05, 6.498599999999952e-05, 6.40830...</msg>
<status status="PASS" starttime="20201030 15:56:33.675" endtime="20201030 15:56:33.683"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:33.694" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201030 15:56:33.692" endtime="20201030 15:56:33.695"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:33.699" level="INFO">VALUE: [6.454200000000077e-05, 6.404200000000027e-05, 6.404200000000027e-05, 6.433299999999975e-05, 6.44029999999976e-05, 6.500000000000256e-05, 6.444499999999978e-05, 6.498599999999952e-05, 6.408300000000297e-05, 6.44440000000003e-05, 6.434699999999932e-05, 6.465200000000185e-05, 6.477800000000145e-05, 6.411099999999864e-05, 6.4889000000002e-05, 6.411100000000211e-05, 6.495800000000038e-05, 6.468100000000046e-05, 6.458399999999948e-05, 6.411200000000158e-05, 6.412500000000168e-05, 6.488899999999853e-05, 6.480500000000111e-05, 6.486099999999939e-05, 6.445799999999988e-05, 6.406899999999993e-05, 6.437500000000193e-05, 6.4889000000002e-05, 6.413899999999778e-05, 6.4583e-05, 6.409699999999907e-05, 6.43890000000015e-05, 6.483399999999973e-05, 6.479200000000102e-05, 6.480600000000059e-05, 6.459699999999957e-05, 6.429199999999705e-05, 6.402700000000122e-05, 6.488899999999853e-05, 6.441600000000117e-05, 6.44020000000016e-05, 6.400000000000156e-05, 6.42080000000031e-05, 6.468000000000099e-05, 6.44440000000003e-05, 6.4195000000003e-05, 6.465300000000132e-05, 6.486099999999939e-05, 6.431999999999966e-05, 6.490300000000157e-05]</msg>
<status status="PASS" starttime="20201030 15:56:33.696" endtime="20201030 15:56:33.701"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:33.685" endtime="20201030 15:56:33.703"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:33.714" endtime="20201030 15:56:33.735"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:33.708" endtime="20201030 15:56:33.737"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:33.705" endtime="20201030 15:56:33.738"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:33.223" endtime="20201030 15:56:33.739"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:33.223" endtime="20201030 15:56:33.739"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:33.762" endtime="20201030 15:56:33.782"></status>
</kw>
<msg timestamp="20201030 15:56:33.784" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:33.759" endtime="20201030 15:56:33.784"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:33.790" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:33.786" endtime="20201030 15:56:33.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:33.792" endtime="20201030 15:56:33.796"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:33.751" endtime="20201030 15:56:33.798"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:33.745" endtime="20201030 15:56:33.799"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:33.816" endtime="20201030 15:56:34.155"></status>
</kw>
<msg timestamp="20201030 15:56:34.163" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041611583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041676694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:33.813" endtime="20201030 15:56:34.163"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:34.181" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041611583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041676694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:34.165" endtime="20201030 15:56:34.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:34.184" endtime="20201030 15:56:34.188"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:33.806" endtime="20201030 15:56:34.189"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:33.801" endtime="20201030 15:56:34.191"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:34.202" level="INFO">${RESULT} = [{'diff': 6.511099999999964e-05}, {'diff': 6.566699999999842e-05}, {'diff': 6.545900000000382e-05}, {'diff': 6.501299999999571e-05}, {'diff': 6.576299999999646e-05}, {'diff': 6.580500000000211e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:56:34.192" endtime="20201030 15:56:34.202"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:34.213" level="INFO">${ACCURACY} = {'diff': [6.511099999999964e-05, 6.566699999999842e-05, 6.545900000000382e-05, 6.501299999999571e-05, 6.576299999999646e-05, 6.580500000000211e-05, 6.520799999999716e-05, 6.577800000000245e-05, 6.5347...</msg>
<status status="PASS" starttime="20201030 15:56:34.204" endtime="20201030 15:56:34.214"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:34.225" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201030 15:56:34.222" endtime="20201030 15:56:34.226"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:34.231" level="INFO">VALUE: [6.511099999999964e-05, 6.566699999999842e-05, 6.545900000000382e-05, 6.501299999999571e-05, 6.576299999999646e-05, 6.580500000000211e-05, 6.520799999999716e-05, 6.577800000000245e-05, 6.534700000000032e-05, 6.572200000000417e-05, 6.533400000000023e-05, 6.587499999999996e-05, 6.566699999999842e-05, 6.501400000000213e-05, 6.536199999999937e-05, 6.52229999999962e-05, 6.555600000000134e-05, 6.588899999999953e-05, 6.518000000000496e-05, 6.529100000000204e-05, 6.50830000000005e-05, 6.538899999999903e-05, 6.579100000000254e-05, 6.513900000000572e-05, 6.520899999999663e-05, 6.598599999999705e-05, 6.554200000000177e-05, 6.500000000000256e-05, 6.501399999999519e-05, 6.55700000000009e-05, 6.538899999999903e-05, 6.579200000000202e-05, 6.499999999999562e-05, 6.537499999999946e-05, 6.54159999999987e-05, 6.586099999999345e-05, 6.595900000000432e-05, 6.52500000000028e-05, 6.566700000000536e-05, 6.581999999999422e-05, 6.59029999999991e-05, 6.548600000000349e-05, 6.577800000000245e-05, 6.57359999999968e-05, 6.544499999999731e-05, 6.555600000000134e-05, 6.577800000000245e-05, 6.59159999999992e-05, 6.504100000000179e-05, 6.52630000000029e-05]</msg>
<status status="PASS" starttime="20201030 15:56:34.227" endtime="20201030 15:56:34.233"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:34.215" endtime="20201030 15:56:34.234"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:34.244" endtime="20201030 15:56:34.266"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:34.239" endtime="20201030 15:56:34.267"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:34.237" endtime="20201030 15:56:34.268"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:33.741" endtime="20201030 15:56:34.269"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:33.740" endtime="20201030 15:56:34.269"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:34.292" endtime="20201030 15:56:34.313"></status>
</kw>
<msg timestamp="20201030 15:56:34.314" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:34.289" endtime="20201030 15:56:34.315"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:34.321" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:34.317" endtime="20201030 15:56:34.321"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:34.323" endtime="20201030 15:56:34.327"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:34.282" endtime="20201030 15:56:34.328"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:34.276" endtime="20201030 15:56:34.330"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:34.347" endtime="20201030 15:56:34.687"></status>
</kw>
<msg timestamp="20201030 15:56:34.694" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041622208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041688389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:34.343" endtime="20201030 15:56:34.695"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:34.713" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041622208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041688389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:34.696" endtime="20201030 15:56:34.714"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:34.716" endtime="20201030 15:56:34.719"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:34.336" endtime="20201030 15:56:34.721"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:34.331" endtime="20201030 15:56:34.722"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:34.733" level="INFO">${RESULT} = [{'diff': 6.618099999999849e-05}, {'diff': 6.684700000000182e-05}, {'diff': 6.629199999999558e-05}, {'diff': 6.647300000000439e-05}, {'diff': 6.697199999999848e-05}, {'diff': 6.634700000000132e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:56:34.724" endtime="20201030 15:56:34.733"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:34.744" level="INFO">${ACCURACY} = {'diff': [6.618099999999849e-05, 6.684700000000182e-05, 6.629199999999558e-05, 6.647300000000439e-05, 6.697199999999848e-05, 6.634700000000132e-05, 6.600000000000356e-05, 6.654200000000277e-05, 6.6444...</msg>
<status status="PASS" starttime="20201030 15:56:34.735" endtime="20201030 15:56:34.745"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:34.756" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201030 15:56:34.753" endtime="20201030 15:56:34.756"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:34.761" level="INFO">VALUE: [6.618099999999849e-05, 6.684700000000182e-05, 6.629199999999558e-05, 6.647300000000439e-05, 6.697199999999848e-05, 6.634700000000132e-05, 6.600000000000356e-05, 6.654200000000277e-05, 6.644400000000578e-05, 6.64029999999996e-05, 6.667999999999952e-05, 6.674999999999737e-05, 6.697200000000542e-05, 6.605600000000184e-05, 6.668100000000593e-05, 6.616700000000586e-05, 6.63480000000008e-05, 6.658299999999506e-05, 6.65280000000032e-05, 6.644399999999884e-05, 6.692999999999977e-05, 6.668000000000646e-05, 6.691699999999967e-05, 6.615299999999935e-05, 6.604099999999585e-05, 6.601399999999619e-05, 6.672199999999823e-05, 6.615299999999935e-05, 6.649999999999712e-05, 6.691699999999967e-05, 6.63480000000008e-05, 6.698599999999805e-05, 6.615299999999935e-05, 6.624999999999687e-05, 6.6583000000002e-05, 6.644399999999884e-05, 6.69300000000067e-05, 6.620799999999816e-05, 6.661100000000114e-05, 6.667999999999952e-05, 6.616699999999892e-05, 6.629199999999558e-05, 6.666700000000636e-05, 6.615299999999935e-05, 6.645900000000482e-05, 6.691699999999967e-05, 6.665299999999985e-05, 6.620900000000457e-05, 6.613899999999978e-05, 6.652700000000372e-05]</msg>
<status status="PASS" starttime="20201030 15:56:34.758" endtime="20201030 15:56:34.766"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:34.746" endtime="20201030 15:56:34.768"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:34.778" endtime="20201030 15:56:34.799"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:34.773" endtime="20201030 15:56:34.801"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:34.771" endtime="20201030 15:56:34.802"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:34.271" endtime="20201030 15:56:34.802"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:34.270" endtime="20201030 15:56:34.803"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:34.826" endtime="20201030 15:56:34.847"></status>
</kw>
<msg timestamp="20201030 15:56:34.848" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:34.822" endtime="20201030 15:56:34.848"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:34.854" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:34.850" endtime="20201030 15:56:34.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:34.857" endtime="20201030 15:56:34.860"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:34.815" endtime="20201030 15:56:34.862"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:34.809" endtime="20201030 15:56:34.863"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:34.880" endtime="20201030 15:56:35.221"></status>
</kw>
<msg timestamp="20201030 15:56:35.229" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041499583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041567556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:34.877" endtime="20201030 15:56:35.229"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:35.248" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041499583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041567556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:35.231" endtime="20201030 15:56:35.249"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:35.251" endtime="20201030 15:56:35.255"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:34.870" endtime="20201030 15:56:35.257"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:34.865" endtime="20201030 15:56:35.258"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:35.269" level="INFO">${RESULT} = [{'diff': 6.797299999999895e-05}, {'diff': 6.752699999999778e-05}, {'diff': 6.744499999999931e-05}, {'diff': 6.730500000000361e-05}, {'diff': 6.704099999999685e-05}, {'diff': 6.777700000000497e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:56:35.260" endtime="20201030 15:56:35.270"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:35.279" level="INFO">${ACCURACY} = {'diff': [6.797299999999895e-05, 6.752699999999778e-05, 6.744499999999931e-05, 6.730500000000361e-05, 6.704099999999685e-05, 6.777700000000497e-05, 6.788900000000153e-05, 6.745799999999941e-05, 6.7931...</msg>
<status status="PASS" starttime="20201030 15:56:35.271" endtime="20201030 15:56:35.279"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:35.290" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201030 15:56:35.288" endtime="20201030 15:56:35.291"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:35.296" level="INFO">VALUE: [6.797299999999895e-05, 6.752699999999778e-05, 6.744499999999931e-05, 6.730500000000361e-05, 6.704099999999685e-05, 6.777700000000497e-05, 6.788900000000153e-05, 6.745799999999941e-05, 6.793100000000024e-05, 6.724999999999787e-05, 6.75559999999964e-05, 6.795799999999991e-05, 6.749999999999812e-05, 6.722200000000567e-05, 6.715300000000035e-05, 6.747199999999898e-05, 6.736200000000137e-05, 6.763900000000128e-05, 6.699999999999762e-05, 6.777699999999803e-05, 6.722199999999873e-05, 6.733299999999581e-05, 6.745799999999941e-05, 6.726399999999744e-05, 6.772199999999923e-05, 6.733300000000275e-05, 6.71109999999947e-05, 6.75559999999964e-05, 6.738900000000103e-05, 6.75559999999964e-05, 6.704200000000327e-05, 6.75979999999951e-05, 6.770799999999966e-05, 6.800000000000556e-05, 6.788899999999459e-05, 6.712499999999427e-05, 6.71109999999947e-05, 6.727799999999701e-05, 6.79030000000011e-05, 6.698599999999805e-05, 6.77229999999987e-05, 6.758399999999554e-05, 6.724999999999787e-05, 6.715300000000035e-05, 6.72229999999982e-05, 6.700000000000456e-05, 6.766700000000042e-05, 6.743000000000027e-05, 6.770799999999966e-05, 6.731899999999624e-05]</msg>
<status status="PASS" starttime="20201030 15:56:35.292" endtime="20201030 15:56:35.297"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:35.281" endtime="20201030 15:56:35.299"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:35.309" endtime="20201030 15:56:35.330"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:35.304" endtime="20201030 15:56:35.332"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:35.301" endtime="20201030 15:56:35.333"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:34.805" endtime="20201030 15:56:35.333"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:34.804" endtime="20201030 15:56:35.334"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:35.364" endtime="20201030 15:56:35.395"></status>
</kw>
<msg timestamp="20201030 15:56:35.397" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:35.353" endtime="20201030 15:56:35.397"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:35.406" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:35.400" endtime="20201030 15:56:35.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:35.408" endtime="20201030 15:56:35.412"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:35.346" endtime="20201030 15:56:35.414"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:35.340" endtime="20201030 15:56:35.416"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:35.433" endtime="20201030 15:56:35.804"></status>
</kw>
<msg timestamp="20201030 15:56:35.812" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.051909208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.051977972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:35.430" endtime="20201030 15:56:35.812"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:35.831" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.051909208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.051977972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:35.814" endtime="20201030 15:56:35.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:35.834" endtime="20201030 15:56:35.838"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:35.422" endtime="20201030 15:56:35.840"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:35.417" endtime="20201030 15:56:35.841"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:35.852" level="INFO">${RESULT} = [{'diff': 6.876399999999894e-05}, {'diff': 6.816600000000145e-05}, {'diff': 6.80700000000034e-05}, {'diff': 6.848599999999955e-05}, {'diff': 6.854199999999783e-05}, {'diff': 6.838900000000203e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:56:35.843" endtime="20201030 15:56:35.853"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:35.863" level="INFO">${ACCURACY} = {'diff': [6.876399999999894e-05, 6.816600000000145e-05, 6.80700000000034e-05, 6.848599999999955e-05, 6.854199999999783e-05, 6.838900000000203e-05, 6.798599999999905e-05, 6.82359999999993e-05, 6.891699...</msg>
<status status="PASS" starttime="20201030 15:56:35.855" endtime="20201030 15:56:35.863"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:35.874" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201030 15:56:35.872" endtime="20201030 15:56:35.875"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:35.880" level="INFO">VALUE: [6.876399999999894e-05, 6.816600000000145e-05, 6.80700000000034e-05, 6.848599999999955e-05, 6.854199999999783e-05, 6.838900000000203e-05, 6.798599999999905e-05, 6.82359999999993e-05, 6.891699999999473e-05, 6.838900000000203e-05, 6.847199999999998e-05, 6.806999999999647e-05, 6.89160000000022e-05, 6.890200000000263e-05, 6.801400000000513e-05, 6.801400000000513e-05, 6.847199999999998e-05, 6.80830000000035e-05, 6.867999999999458e-05, 6.881999999999722e-05, 6.822200000000667e-05, 6.893100000000124e-05, 6.894500000000081e-05, 6.863900000000228e-05, 6.848599999999955e-05, 6.886100000000339e-05, 6.870800000000066e-05, 6.833400000000323e-05, 6.874999999999937e-05, 6.872200000000023e-05, 6.850000000000606e-05, 6.855499999999792e-05, 6.849999999999912e-05, 6.877799999999851e-05, 6.824999999999887e-05, 6.883400000000373e-05, 6.842999999999433e-05, 6.869500000000056e-05, 6.888899999999559e-05, 6.865300000000185e-05, 6.811200000000212e-05, 6.830600000000409e-05, 6.847199999999998e-05, 6.820799999999322e-05, 6.805499999999742e-05, 6.870800000000066e-05, 6.876399999999894e-05, 6.799999999999862e-05, 6.811100000000264e-05, 6.868099999999405e-05]</msg>
<status status="PASS" starttime="20201030 15:56:35.877" endtime="20201030 15:56:35.882"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:35.864" endtime="20201030 15:56:35.884"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:35.895" endtime="20201030 15:56:35.918"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:35.889" endtime="20201030 15:56:35.920"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:35.886" endtime="20201030 15:56:35.920"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:35.336" endtime="20201030 15:56:35.921"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:35.335" endtime="20201030 15:56:35.921"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:35.946" endtime="20201030 15:56:35.968"></status>
</kw>
<msg timestamp="20201030 15:56:35.969" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:35.942" endtime="20201030 15:56:35.969"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:35.976" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:35.971" endtime="20201030 15:56:35.976"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:35.978" endtime="20201030 15:56:35.982"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:35.934" endtime="20201030 15:56:35.984"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:35.928" endtime="20201030 15:56:35.985"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:36.003" endtime="20201030 15:56:36.376"></status>
</kw>
<msg timestamp="20201030 15:56:36.384" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043620542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043690389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:36.000" endtime="20201030 15:56:36.384"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:36.403" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043620542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043690389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:36.386" endtime="20201030 15:56:36.404"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:36.406" endtime="20201030 15:56:36.410"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:35.992" endtime="20201030 15:56:36.412"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:35.987" endtime="20201030 15:56:36.414"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:36.425" level="INFO">${RESULT} = [{'diff': 6.984700000000482e-05}, {'diff': 6.895900000000038e-05}, {'diff': 6.987499999999702e-05}, {'diff': 6.908399999999704e-05}, {'diff': 6.937499999999652e-05}, {'diff': 6.990199999999669e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:56:36.415" endtime="20201030 15:56:36.425"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:36.441" level="INFO">${ACCURACY} = {'diff': [6.984700000000482e-05, 6.895900000000038e-05, 6.987499999999702e-05, 6.908399999999704e-05, 6.937499999999652e-05, 6.990199999999669e-05, 6.927699999999953e-05, 6.927800000000595e-05, 6.9846...</msg>
<status status="PASS" starttime="20201030 15:56:36.427" endtime="20201030 15:56:36.441"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:36.453" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201030 15:56:36.450" endtime="20201030 15:56:36.453"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:36.459" level="INFO">VALUE: [6.984700000000482e-05, 6.895900000000038e-05, 6.987499999999702e-05, 6.908399999999704e-05, 6.937499999999652e-05, 6.990199999999669e-05, 6.927699999999953e-05, 6.927800000000595e-05, 6.984699999999788e-05, 6.956900000000543e-05, 6.991700000000267e-05, 6.997200000000148e-05, 6.911100000000364e-05, 6.963900000000328e-05, 6.947200000000098e-05, 6.908399999999704e-05, 6.912499999999627e-05, 6.963799999999687e-05, 6.920900000000063e-05, 6.927699999999953e-05, 6.899999999999962e-05, 6.950000000000012e-05, 6.909700000000407e-05, 6.968000000000252e-05, 6.901400000000613e-05, 6.92360000000003e-05, 6.943100000000174e-05, 6.938899999999609e-05, 6.91109999999967e-05, 6.90700000000044e-05, 6.901399999999919e-05, 6.926399999999944e-05, 6.901399999999919e-05, 6.940200000000313e-05, 6.954099999999935e-05, 6.97909999999996e-05, 6.926400000000638e-05, 6.954099999999935e-05, 6.924999999999987e-05, 6.972200000000123e-05, 6.936099999999695e-05, 6.901399999999919e-05, 6.983399999999779e-05, 6.952799999999926e-05, 6.988900000000353e-05, 6.940299999999566e-05, 6.926399999999944e-05, 6.934700000000432e-05, 6.977700000000003e-05, 6.961100000000414e-05]</msg>
<status status="PASS" starttime="20201030 15:56:36.455" endtime="20201030 15:56:36.460"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:36.443" endtime="20201030 15:56:36.462"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:36.472" endtime="20201030 15:56:36.494"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:36.467" endtime="20201030 15:56:36.496"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:36.465" endtime="20201030 15:56:36.497"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:35.924" endtime="20201030 15:56:36.497"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:35.922" endtime="20201030 15:56:36.498"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:36.522" endtime="20201030 15:56:36.544"></status>
</kw>
<msg timestamp="20201030 15:56:36.546" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:36.519" endtime="20201030 15:56:36.546"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:36.552" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:36.548" endtime="20201030 15:56:36.553"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:36.555" endtime="20201030 15:56:36.559"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:36.511" endtime="20201030 15:56:36.561"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:36.504" endtime="20201030 15:56:36.562"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:36.580" endtime="20201030 15:56:36.939"></status>
</kw>
<msg timestamp="20201030 15:56:36.947" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043876611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043947069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:36.577" endtime="20201030 15:56:36.948"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:36.967" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043876611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043947069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:36.949" endtime="20201030 15:56:36.968"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:36.970" endtime="20201030 15:56:36.974"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:36.569" endtime="20201030 15:56:36.976"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:36.564" endtime="20201030 15:56:36.977"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:36.988" level="INFO">${RESULT} = [{'diff': 7.045799999999547e-05}, {'diff': 7.05559999999994e-05}, {'diff': 7.044500000000231e-05}, {'diff': 7.012500000000421e-05}, {'diff': 7.048600000000155e-05}, {'diff': 7.055499999999992e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:56:36.979" endtime="20201030 15:56:36.989"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:37.000" level="INFO">${ACCURACY} = {'diff': [7.045799999999547e-05, 7.05559999999994e-05, 7.044500000000231e-05, 7.012500000000421e-05, 7.048600000000155e-05, 7.055499999999992e-05, 7.040299999999666e-05, 7.070800000000266e-05, 7.04439...</msg>
<status status="PASS" starttime="20201030 15:56:36.990" endtime="20201030 15:56:37.001"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:37.012" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201030 15:56:37.010" endtime="20201030 15:56:37.013"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:37.018" level="INFO">VALUE: [7.045799999999547e-05, 7.05559999999994e-05, 7.044500000000231e-05, 7.012500000000421e-05, 7.048600000000155e-05, 7.055499999999992e-05, 7.040299999999666e-05, 7.070800000000266e-05, 7.04439999999959e-05, 7.001400000000019e-05, 7.008299999999856e-05, 7.015300000000335e-05, 7.029199999999958e-05, 7.066699999999648e-05, 7.051299999999427e-05, 7.079099999999366e-05, 7.075000000000137e-05, 7.081999999999922e-05, 7.012500000000421e-05, 7.020799999999522e-05, 7.045800000000241e-05, 7.025000000000087e-05, 7.09030000000041e-05, 7.069500000000256e-05, 7.063899999999734e-05, 7.012500000000421e-05, 7.023599999999436e-05, 7.01109999999977e-05, 7.023700000000077e-05, 7.033399999999829e-05, 7.002700000000028e-05, 7.095800000000291e-05, 7.033300000000575e-05, 7.034699999999838e-05, 7.076400000000094e-05, 7.01109999999977e-05, 7.050000000000112e-05, 7.077799999999357e-05, 7.102799999999382e-05, 7.05559999999994e-05, 7.083399999999879e-05, 7.041699999999623e-05, 6.999999999999368e-05, 7.05559999999994e-05, 7.062499999999777e-05, 7.062499999999777e-05, 7.045799999999547e-05, 7.090199999999769e-05, 7.018000000000302e-05, 7.00559999999989e-05]</msg>
<status status="PASS" starttime="20201030 15:56:37.015" endtime="20201030 15:56:37.020"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:37.002" endtime="20201030 15:56:37.021"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:37.031" endtime="20201030 15:56:37.053"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:37.027" endtime="20201030 15:56:37.055"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:37.024" endtime="20201030 15:56:37.056"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:36.500" endtime="20201030 15:56:37.057"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:36.499" endtime="20201030 15:56:37.057"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:37.082" endtime="20201030 15:56:37.104"></status>
</kw>
<msg timestamp="20201030 15:56:37.105" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:37.078" endtime="20201030 15:56:37.106"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:37.112" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:37.107" endtime="20201030 15:56:37.113"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:37.114" endtime="20201030 15:56:37.118"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:37.071" endtime="20201030 15:56:37.120"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:37.064" endtime="20201030 15:56:37.122"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:37.139" endtime="20201030 15:56:37.501"></status>
</kw>
<msg timestamp="20201030 15:56:37.509" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044241097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044312389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:37.136" endtime="20201030 15:56:37.509"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:37.529" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044241097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044312389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:37.511" endtime="20201030 15:56:37.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:37.531" endtime="20201030 15:56:37.535"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:37.128" endtime="20201030 15:56:37.537"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:37.123" endtime="20201030 15:56:37.539"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:37.550" level="INFO">${RESULT} = [{'diff': 7.129200000000058e-05}, {'diff': 7.179200000000108e-05}, {'diff': 7.122200000000273e-05}, {'diff': 7.112500000000521e-05}, {'diff': 7.19160000000052e-05}, {'diff': 7.144500000000331e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:56:37.540" endtime="20201030 15:56:37.550"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:37.560" level="INFO">${ACCURACY} = {'diff': [7.129200000000058e-05, 7.179200000000108e-05, 7.122200000000273e-05, 7.112500000000521e-05, 7.19160000000052e-05, 7.144500000000331e-05, 7.162499999999877e-05, 7.145799999999647e-05, 7.15699...</msg>
<status status="PASS" starttime="20201030 15:56:37.552" endtime="20201030 15:56:37.560"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:37.572" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201030 15:56:37.569" endtime="20201030 15:56:37.572"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:37.578" level="INFO">VALUE: [7.129200000000058e-05, 7.179200000000108e-05, 7.122200000000273e-05, 7.112500000000521e-05, 7.19160000000052e-05, 7.144500000000331e-05, 7.162499999999877e-05, 7.145799999999647e-05, 7.156999999999997e-05, 7.14439999999969e-05, 7.162499999999877e-05, 7.112500000000521e-05, 7.159699999999963e-05, 7.112500000000521e-05, 7.165299999999791e-05, 7.158399999999954e-05, 7.120900000000263e-05, 7.166700000000442e-05, 7.097300000000195e-05, 7.166600000000495e-05, 7.190199999999869e-05, 7.190199999999869e-05, 7.181900000000074e-05, 7.101400000000119e-05, 7.166599999999801e-05, 7.166700000000442e-05, 7.129200000000058e-05, 7.122200000000273e-05, 7.19030000000051e-05, 7.187499999999902e-05, 7.188899999999859e-05, 7.187499999999902e-05, 7.111100000000564e-05, 7.163900000000528e-05, 7.186099999999945e-05, 7.183300000000031e-05, 7.16109999999992e-05, 7.130500000000067e-05, 7.137500000000546e-05, 7.10559999999999e-05, 7.187499999999902e-05, 7.145799999999647e-05, 7.14030000000046e-05, 7.177800000000151e-05, 7.123699999999483e-05, 7.112499999999827e-05, 7.177799999999457e-05, 7.14439999999969e-05, 7.116600000000445e-05, 7.130499999999373e-05]</msg>
<status status="PASS" starttime="20201030 15:56:37.574" endtime="20201030 15:56:37.579"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:37.562" endtime="20201030 15:56:37.581"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:37.591" endtime="20201030 15:56:37.613"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:37.586" endtime="20201030 15:56:37.615"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:37.584" endtime="20201030 15:56:37.616"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:37.059" endtime="20201030 15:56:37.617"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:37.058" endtime="20201030 15:56:37.617"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:37.641" endtime="20201030 15:56:37.666"></status>
</kw>
<msg timestamp="20201030 15:56:37.667" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:37.638" endtime="20201030 15:56:37.668"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:37.674" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:37.670" endtime="20201030 15:56:37.674"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:37.676" endtime="20201030 15:56:37.680"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:37.630" endtime="20201030 15:56:37.682"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:37.624" endtime="20201030 15:56:37.684"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:37.701" endtime="20201030 15:56:38.062"></status>
</kw>
<msg timestamp="20201030 15:56:38.069" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045339556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045412028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:37.698" endtime="20201030 15:56:38.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:38.089" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045339556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045412028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:38.072" endtime="20201030 15:56:38.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:38.092" endtime="20201030 15:56:38.096"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:37.690" endtime="20201030 15:56:38.097"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:37.685" endtime="20201030 15:56:38.099"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:38.110" level="INFO">${RESULT} = [{'diff': 7.247199999999704e-05}, {'diff': 7.223599999999636e-05}, {'diff': 7.230600000000115e-05}, {'diff': 7.217999999999808e-05}, {'diff': 7.29030000000061e-05}, {'diff': 7.286100000000045e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:56:38.101" endtime="20201030 15:56:38.111"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:38.120" level="INFO">${ACCURACY} = {'diff': [7.247199999999704e-05, 7.223599999999636e-05, 7.230600000000115e-05, 7.217999999999808e-05, 7.29030000000061e-05, 7.286100000000045e-05, 7.291699999999873e-05, 7.251399999999575e-05, 7.28889...</msg>
<status status="PASS" starttime="20201030 15:56:38.112" endtime="20201030 15:56:38.121"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:38.132" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201030 15:56:38.129" endtime="20201030 15:56:38.133"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:38.138" level="INFO">VALUE: [7.247199999999704e-05, 7.223599999999636e-05, 7.230600000000115e-05, 7.217999999999808e-05, 7.29030000000061e-05, 7.286100000000045e-05, 7.291699999999873e-05, 7.251399999999575e-05, 7.288899999999959e-05, 7.219500000000406e-05, 7.238799999999962e-05, 7.283400000000079e-05, 7.275000000000337e-05, 7.232000000000072e-05, 7.247199999999704e-05, 7.245900000000388e-05, 7.268099999999805e-05, 7.201300000000271e-05, 7.223599999999636e-05, 7.217999999999808e-05, 7.217999999999808e-05, 7.28189999999948e-05, 7.212499999999927e-05, 7.270799999999772e-05, 7.259700000000063e-05, 7.258400000000054e-05, 7.236099999999995e-05, 7.254200000000183e-05, 7.250000000000312e-05, 7.286099999999351e-05, 7.248599999999661e-05, 7.201300000000271e-05, 7.223599999999636e-05, 7.205500000000142e-05, 7.201400000000219e-05, 7.277800000000251e-05, 7.201400000000219e-05, 7.288899999999959e-05, 7.226400000000244e-05, 7.24309999999978e-05, 7.200000000000262e-05, 7.250000000000312e-05, 7.247299999999651e-05, 7.247199999999704e-05, 7.287500000000002e-05, 7.297200000000448e-05, 7.287500000000002e-05, 7.223599999999636e-05, 7.279200000000208e-05, 7.201400000000219e-05]</msg>
<status status="PASS" starttime="20201030 15:56:38.134" endtime="20201030 15:56:38.139"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:38.122" endtime="20201030 15:56:38.141"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:38.153" endtime="20201030 15:56:38.175"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:38.147" endtime="20201030 15:56:38.177"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:38.144" endtime="20201030 15:56:38.177"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:37.619" endtime="20201030 15:56:38.178"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:37.618" endtime="20201030 15:56:38.178"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:38.203" endtime="20201030 15:56:38.225"></status>
</kw>
<msg timestamp="20201030 15:56:38.226" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:38.199" endtime="20201030 15:56:38.227"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:38.233" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:38.228" endtime="20201030 15:56:38.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:38.235" endtime="20201030 15:56:38.239"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:38.191" endtime="20201030 15:56:38.241"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:38.185" endtime="20201030 15:56:38.243"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:38.260" endtime="20201030 15:56:38.620"></status>
</kw>
<msg timestamp="20201030 15:56:38.628" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043825069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043899028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:38.257" endtime="20201030 15:56:38.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:38.648" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043825069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043899028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:38.631" endtime="20201030 15:56:38.649"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:38.650" endtime="20201030 15:56:38.654"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:38.249" endtime="20201030 15:56:38.656"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:38.244" endtime="20201030 15:56:38.658"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:38.669" level="INFO">${RESULT} = [{'diff': 7.395899999999844e-05}, {'diff': 7.368099999999905e-05}, {'diff': 7.327799999999607e-05}, {'diff': 7.333400000000129e-05}, {'diff': 7.355500000000292e-05}, {'diff': 7.323599999999736e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:56:38.659" endtime="20201030 15:56:38.670"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:38.681" level="INFO">${ACCURACY} = {'diff': [7.395899999999844e-05, 7.368099999999905e-05, 7.327799999999607e-05, 7.333400000000129e-05, 7.355500000000292e-05, 7.323599999999736e-05, 7.315299999999941e-05, 7.365299999999991e-05, 7.3152...</msg>
<status status="PASS" starttime="20201030 15:56:38.671" endtime="20201030 15:56:38.681"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:38.692" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201030 15:56:38.690" endtime="20201030 15:56:38.693"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:38.698" level="INFO">VALUE: [7.395899999999844e-05, 7.368099999999905e-05, 7.327799999999607e-05, 7.333400000000129e-05, 7.355500000000292e-05, 7.323599999999736e-05, 7.315299999999941e-05, 7.365299999999991e-05, 7.315299999999941e-05, 7.320799999999822e-05, 7.358300000000206e-05, 7.343100000000574e-05, 7.368099999999905e-05, 7.329200000000258e-05, 7.344499999999837e-05, 7.336100000000095e-05, 7.299999999999668e-05, 7.32910000000031e-05, 7.304099999999591e-05, 7.369399999999915e-05, 7.395799999999897e-05, 7.368099999999905e-05, 7.373599999999786e-05, 7.320799999999822e-05, 7.327799999999607e-05, 7.3763999999997e-05, 7.398599999999811e-05, 7.315299999999941e-05, 7.380600000000265e-05, 7.320799999999822e-05, 7.392999999999983e-05, 7.365200000000044e-05, 7.301400000000319e-05, 7.384699999999494e-05, 7.302800000000276e-05, 7.395799999999897e-05, 7.377800000000351e-05, 7.338900000000009e-05, 7.395799999999897e-05, 7.301400000000319e-05, 7.381999999999528e-05, 7.368099999999905e-05, 7.382000000000222e-05, 7.363800000000087e-05, 7.347199999999804e-05, 7.38189999999958e-05, 7.355499999999598e-05, 7.340299999999966e-05, 7.329099999999616e-05, 7.390300000000016e-05]</msg>
<status status="PASS" starttime="20201030 15:56:38.695" endtime="20201030 15:56:38.700"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:38.683" endtime="20201030 15:56:38.702"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:38.712" endtime="20201030 15:56:38.732"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:38.707" endtime="20201030 15:56:38.733"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:38.704" endtime="20201030 15:56:38.733"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:38.181" endtime="20201030 15:56:38.733"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:38.179" endtime="20201030 15:56:38.733"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:38.745" endtime="20201030 15:56:38.763"></status>
</kw>
<msg timestamp="20201030 15:56:38.763" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:38.743" endtime="20201030 15:56:38.764"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:38.766" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:38.764" endtime="20201030 15:56:38.767"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:38.768" endtime="20201030 15:56:38.770"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:38.739" endtime="20201030 15:56:38.770"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:38.737" endtime="20201030 15:56:38.771"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:38.779" endtime="20201030 15:56:39.065"></status>
</kw>
<msg timestamp="20201030 15:56:39.068" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024920833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024995611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:38.778" endtime="20201030 15:56:39.069"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:39.077" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024920833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024995611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:39.070" endtime="20201030 15:56:39.077"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:39.078" endtime="20201030 15:56:39.080"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:38.774" endtime="20201030 15:56:39.081"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:38.772" endtime="20201030 15:56:39.082"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:39.087" level="INFO">${RESULT} = [{'diff': 7.477800000000104e-05}, {'diff': 7.44439999999999e-05}, {'diff': 7.472199999999929e-05}, {'diff': 7.456900000000002e-05}, {'diff': 7.481900000000027e-05}, {'diff': 7.473599999999886e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:56:39.082" endtime="20201030 15:56:39.087"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:39.092" level="INFO">${ACCURACY} = {'diff': [7.477800000000104e-05, 7.44439999999999e-05, 7.472199999999929e-05, 7.456900000000002e-05, 7.481900000000027e-05, 7.473599999999886e-05, 7.44439999999999e-05, 7.469400000000015e-05, 7.468100...</msg>
<status status="PASS" starttime="20201030 15:56:39.088" endtime="20201030 15:56:39.092"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:39.098" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201030 15:56:39.097" endtime="20201030 15:56:39.098"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:39.100" level="INFO">VALUE: [7.477800000000104e-05, 7.44439999999999e-05, 7.472199999999929e-05, 7.456900000000002e-05, 7.481900000000027e-05, 7.473599999999886e-05, 7.44439999999999e-05, 7.469400000000015e-05, 7.468100000000005e-05, 7.462500000000177e-05, 7.480600000000018e-05, 7.422300000000173e-05, 7.412500000000127e-05, 7.397299999999801e-05, 7.409700000000213e-05, 7.447199999999904e-05, 7.493000000000083e-05, 7.476400000000147e-05, 7.495899999999944e-05, 7.404199999999986e-05, 7.44439999999999e-05, 7.454100000000088e-05, 7.465300000000091e-05, 7.481999999999975e-05, 7.434800000000186e-05, 7.473599999999886e-05, 7.41110000000017e-05, 7.413900000000084e-05, 7.501399999999825e-05, 7.469400000000015e-05, 7.498599999999911e-05, 7.486099999999898e-05, 7.415300000000041e-05, 7.413900000000084e-05, 7.497199999999954e-05, 7.455599999999993e-05, 7.430600000000315e-05, 7.462500000000177e-05, 7.41249999999978e-05, 7.469499999999962e-05, 7.406899999999952e-05, 7.441599999999729e-05, 7.42769999999976e-05, 7.472199999999929e-05, 7.491699999999726e-05, 7.398600000000158e-05, 7.481900000000027e-05, 7.45699999999995e-05, 7.404199999999986e-05, 7.474999999999843e-05]</msg>
<status status="PASS" starttime="20201030 15:56:39.099" endtime="20201030 15:56:39.101"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:39.093" endtime="20201030 15:56:39.102"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:39.107" endtime="20201030 15:56:39.126"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:39.105" endtime="20201030 15:56:39.127"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:39.103" endtime="20201030 15:56:39.127"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:38.734" endtime="20201030 15:56:39.128"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:38.734" endtime="20201030 15:56:39.128"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:39.139" endtime="20201030 15:56:39.157"></status>
</kw>
<msg timestamp="20201030 15:56:39.158" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:39.137" endtime="20201030 15:56:39.158"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:39.161" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:39.159" endtime="20201030 15:56:39.161"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:39.162" endtime="20201030 15:56:39.164"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:39.134" endtime="20201030 15:56:39.164"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:39.131" endtime="20201030 15:56:39.165"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:39.174" endtime="20201030 15:56:39.474"></status>
</kw>
<msg timestamp="20201030 15:56:39.482" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024956569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025032319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:39.172" endtime="20201030 15:56:39.483"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:39.502" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024956569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025032319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:39.485" endtime="20201030 15:56:39.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:39.505" endtime="20201030 15:56:39.509"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:39.168" endtime="20201030 15:56:39.510"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:39.166" endtime="20201030 15:56:39.512"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:39.523" level="INFO">${RESULT} = [{'diff': 7.574999999999943e-05}, {'diff': 7.581900000000127e-05}, {'diff': 7.552699999999885e-05}, {'diff': 7.536099999999948e-05}, {'diff': 7.591700000000173e-05}, {'diff': 7.511099999999923e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:56:39.514" endtime="20201030 15:56:39.524"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:39.533" level="INFO">${ACCURACY} = {'diff': [7.574999999999943e-05, 7.581900000000127e-05, 7.552699999999885e-05, 7.536099999999948e-05, 7.591700000000173e-05, 7.511099999999923e-05, 7.59029999999987e-05, 7.505600000000043e-05, 7.58889...</msg>
<status status="PASS" starttime="20201030 15:56:39.526" endtime="20201030 15:56:39.534"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:39.545" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201030 15:56:39.543" endtime="20201030 15:56:39.546"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:39.551" level="INFO">VALUE: [7.574999999999943e-05, 7.581900000000127e-05, 7.552699999999885e-05, 7.536099999999948e-05, 7.591700000000173e-05, 7.511099999999923e-05, 7.59029999999987e-05, 7.505600000000043e-05, 7.588899999999912e-05, 7.51249999999988e-05, 7.520899999999969e-05, 7.582000000000075e-05, 7.505500000000095e-05, 7.549999999999918e-05, 7.522199999999979e-05, 7.581900000000127e-05, 7.554100000000188e-05, 7.499999999999868e-05, 7.556900000000102e-05, 7.501399999999825e-05, 7.555600000000093e-05, 7.522199999999979e-05, 7.51249999999988e-05, 7.569400000000115e-05, 7.559799999999964e-05, 7.559799999999964e-05, 7.548599999999961e-05, 7.573600000000333e-05, 7.555500000000145e-05, 7.59029999999987e-05, 7.563899999999887e-05, 7.501400000000172e-05, 7.59029999999987e-05, 7.547200000000004e-05, 7.551399999999875e-05, 7.522199999999979e-05, 7.533399999999982e-05, 7.501300000000224e-05, 7.566599999999854e-05, 7.586099999999998e-05, 7.548599999999961e-05, 7.58890000000026e-05, 7.556900000000102e-05, 7.518000000000108e-05, 7.53890000000021e-05, 7.498600000000258e-05, 7.505600000000043e-05, 7.555600000000093e-05, 7.502799999999782e-05, 7.5763999999999e-05]</msg>
<status status="PASS" starttime="20201030 15:56:39.548" endtime="20201030 15:56:39.553"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:39.535" endtime="20201030 15:56:39.554"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:39.564" endtime="20201030 15:56:39.587"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:39.560" endtime="20201030 15:56:39.589"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:39.557" endtime="20201030 15:56:39.589"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:39.129" endtime="20201030 15:56:39.590"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:39.128" endtime="20201030 15:56:39.590"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:39.615" endtime="20201030 15:56:39.640"></status>
</kw>
<msg timestamp="20201030 15:56:39.641" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:39.611" endtime="20201030 15:56:39.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:39.647" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:39.643" endtime="20201030 15:56:39.648"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:39.650" endtime="20201030 15:56:39.654"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:39.603" endtime="20201030 15:56:39.656"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:39.597" endtime="20201030 15:56:39.657"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:39.675" endtime="20201030 15:56:40.036"></status>
</kw>
<msg timestamp="20201030 15:56:40.044" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045640819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045717, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:56:39.672" endtime="20201030 15:56:40.044"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:40.063" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045640819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045717, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:56:40.046" endtime="20201030 15:56:40.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:40.066" endtime="20201030 15:56:40.070"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:39.664" endtime="20201030 15:56:40.072"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:39.659" endtime="20201030 15:56:40.074"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:40.085" level="INFO">${RESULT} = [{'diff': 7.618100000000155e-05}, {'diff': 7.62639999999995e-05}, {'diff': 7.648600000000061e-05}, {'diff': 7.677800000000651e-05}, {'diff': 7.684699999999794e-05}, {'diff': 7.644399999999496e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:56:40.075" endtime="20201030 15:56:40.085"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:40.095" level="INFO">${ACCURACY} = {'diff': [7.618100000000155e-05, 7.62639999999995e-05, 7.648600000000061e-05, 7.677800000000651e-05, 7.684699999999794e-05, 7.644399999999496e-05, 7.645800000000147e-05, 7.645800000000147e-05, 7.62080...</msg>
<status status="PASS" starttime="20201030 15:56:40.087" endtime="20201030 15:56:40.096"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:40.107" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201030 15:56:40.104" endtime="20201030 15:56:40.107"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:40.112" level="INFO">VALUE: [7.618100000000155e-05, 7.62639999999995e-05, 7.648600000000061e-05, 7.677800000000651e-05, 7.684699999999794e-05, 7.644399999999496e-05, 7.645800000000147e-05, 7.645800000000147e-05, 7.620800000000122e-05, 7.615299999999547e-05, 7.633299999999787e-05, 7.658300000000506e-05, 7.691700000000273e-05, 7.681900000000574e-05, 7.62639999999995e-05, 7.665300000000291e-05, 7.599999999999968e-05, 7.659799999999717e-05, 7.616600000000251e-05, 7.670799999999478e-05, 7.66519999999965e-05, 7.679099999999967e-05, 7.663900000000334e-05, 7.683299999999837e-05, 7.691700000000273e-05, 7.694399999999546e-05, 7.598600000000011e-05, 7.63890000000031e-05, 7.675000000000043e-05, 7.695900000000144e-05, 7.597300000000001e-05, 7.650000000000018e-05, 7.666700000000248e-05, 7.688800000000412e-05, 7.641600000000276e-05, 7.695799999999503e-05, 7.688899999999665e-05, 7.663900000000334e-05, 7.63189999999983e-05, 7.640299999999572e-05, 7.65969999999977e-05, 7.618100000000155e-05, 7.651399999999975e-05, 7.611099999999676e-05, 7.624999999999993e-05, 7.602699999999935e-05, 7.606899999999805e-05, 7.63189999999983e-05, 7.651400000000669e-05, 7.63890000000031e-05]</msg>
<status status="PASS" starttime="20201030 15:56:40.109" endtime="20201030 15:56:40.118"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:40.097" endtime="20201030 15:56:40.120"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:40.132" endtime="20201030 15:56:40.154"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:40.126" endtime="20201030 15:56:40.156"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:40.123" endtime="20201030 15:56:40.156"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:39.593" endtime="20201030 15:56:40.157"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:39.591" endtime="20201030 15:56:40.157"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:40.182" endtime="20201030 15:56:40.204"></status>
</kw>
<msg timestamp="20201030 15:56:40.206" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:40.178" endtime="20201030 15:56:40.206"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:40.212" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:40.208" endtime="20201030 15:56:40.213"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:40.215" endtime="20201030 15:56:40.219"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:40.171" endtime="20201030 15:56:40.221"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:40.164" endtime="20201030 15:56:40.222"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:40.240" endtime="20201030 15:56:40.600"></status>
</kw>
<msg timestamp="20201030 15:56:40.608" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044123833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044200972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:40.236" endtime="20201030 15:56:40.608"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:40.628" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044123833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044200972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:40.610" endtime="20201030 15:56:40.629"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:40.630" endtime="20201030 15:56:40.634"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:40.229" endtime="20201030 15:56:40.636"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:40.224" endtime="20201030 15:56:40.638"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:40.649" level="INFO">${RESULT} = [{'diff': 7.71389999999969e-05}, {'diff': 7.748599999999467e-05}, {'diff': 7.706899999999905e-05}, {'diff': 7.74440000000029e-05}, {'diff': 7.733299999999887e-05}, {'diff': 7.777800000000057e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:56:40.639" endtime="20201030 15:56:40.649"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:40.660" level="INFO">${ACCURACY} = {'diff': [7.71389999999969e-05, 7.748599999999467e-05, 7.706899999999905e-05, 7.74440000000029e-05, 7.733299999999887e-05, 7.777800000000057e-05, 7.708400000000504e-05, 7.744500000000237e-05, 7.756999...</msg>
<status status="PASS" starttime="20201030 15:56:40.651" endtime="20201030 15:56:40.661"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:40.672" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201030 15:56:40.670" endtime="20201030 15:56:40.673"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:40.678" level="INFO">VALUE: [7.71389999999969e-05, 7.748599999999467e-05, 7.706899999999905e-05, 7.74440000000029e-05, 7.733299999999887e-05, 7.777800000000057e-05, 7.708400000000504e-05, 7.744500000000237e-05, 7.756999999999903e-05, 7.793000000000383e-05, 7.733299999999887e-05, 7.763900000000434e-05, 7.795800000000297e-05, 7.704199999999939e-05, 7.712500000000427e-05, 7.790299999999722e-05, 7.722200000000179e-05, 7.720800000000222e-05, 7.782000000000622e-05, 7.801300000000178e-05, 7.775000000000143e-05, 7.781999999999928e-05, 7.756899999999955e-05, 7.737499999999758e-05, 7.72640000000005e-05, 7.712500000000427e-05, 7.722200000000179e-05, 7.766699999999654e-05, 7.786100000000545e-05, 7.719499999999518e-05, 7.702799999999982e-05, 7.7764000000001e-05, 7.716700000000298e-05, 7.722300000000126e-05, 7.731999999999878e-05, 7.755499999999999e-05, 7.705499999999949e-05, 7.745800000000247e-05, 7.758299999999912e-05, 7.76389999999974e-05, 7.723599999999442e-05, 7.73189999999993e-05, 7.734699999999844e-05, 7.793099999999636e-05, 7.734699999999844e-05, 7.723600000000136e-05, 7.790299999999722e-05, 7.701400000000025e-05, 7.730499999999974e-05, 7.766600000000401e-05]</msg>
<status status="PASS" starttime="20201030 15:56:40.675" endtime="20201030 15:56:40.680"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:40.662" endtime="20201030 15:56:40.681"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:40.692" endtime="20201030 15:56:40.714"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:40.687" endtime="20201030 15:56:40.715"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:40.684" endtime="20201030 15:56:40.716"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:40.160" endtime="20201030 15:56:40.717"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:40.158" endtime="20201030 15:56:40.717"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:40.742" endtime="20201030 15:56:40.764"></status>
</kw>
<msg timestamp="20201030 15:56:40.766" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:40.738" endtime="20201030 15:56:40.766"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:40.773" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:40.768" endtime="20201030 15:56:40.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:40.775" endtime="20201030 15:56:40.779"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:40.731" endtime="20201030 15:56:40.781"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:40.724" endtime="20201030 15:56:40.782"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:40.800" endtime="20201030 15:56:41.160"></status>
</kw>
<msg timestamp="20201030 15:56:41.168" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043908653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043987486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:40.796" endtime="20201030 15:56:41.168"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:41.188" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043908653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043987486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:41.170" endtime="20201030 15:56:41.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:41.190" endtime="20201030 15:56:41.194"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:40.789" endtime="20201030 15:56:41.196"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:40.784" endtime="20201030 15:56:41.197"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:41.208" level="INFO">${RESULT} = [{'diff': 7.883300000000037e-05}, {'diff': 7.861099999999926e-05}, {'diff': 7.801400000000125e-05}, {'diff': 7.872200000000329e-05}, {'diff': 7.845900000000294e-05}, {'diff': 7.872199999999635e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:56:41.199" endtime="20201030 15:56:41.209"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:41.221" level="INFO">${ACCURACY} = {'diff': [7.883300000000037e-05, 7.861099999999926e-05, 7.801400000000125e-05, 7.872200000000329e-05, 7.845900000000294e-05, 7.872199999999635e-05, 7.808299999999962e-05, 7.840299999999772e-05, 7.8540...</msg>
<status status="PASS" starttime="20201030 15:56:41.211" endtime="20201030 15:56:41.221"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:41.232" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201030 15:56:41.230" endtime="20201030 15:56:41.233"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:41.238" level="INFO">VALUE: [7.883300000000037e-05, 7.861099999999926e-05, 7.801400000000125e-05, 7.872200000000329e-05, 7.845900000000294e-05, 7.872199999999635e-05, 7.808299999999962e-05, 7.840299999999772e-05, 7.854099999999448e-05, 7.862499999999883e-05, 7.83190000000003e-05, 7.802800000000082e-05, 7.801400000000125e-05, 7.808299999999962e-05, 7.886099999999951e-05, 7.840200000000519e-05, 7.865299999999797e-05, 7.868100000000405e-05, 7.801399999999431e-05, 7.800000000000168e-05, 7.800000000000168e-05, 7.802800000000082e-05, 7.845800000000347e-05, 7.806900000000006e-05, 7.851400000000175e-05, 7.861099999999926e-05, 7.80969999999992e-05, 7.877800000000157e-05, 7.836099999999901e-05, 7.826399999999456e-05, 7.897299999999607e-05, 7.898699999999564e-05, 7.85969999999997e-05, 7.8764000000002e-05, 7.822200000000279e-05, 7.823600000000236e-05, 7.844399999999696e-05, 7.806900000000006e-05, 7.830600000000021e-05, 7.811099999999876e-05, 7.868099999999711e-05, 7.879200000000114e-05, 7.801400000000125e-05, 7.800000000000168e-05, 7.823599999999542e-05, 7.845799999999653e-05, 7.823600000000236e-05, 7.852700000000185e-05, 7.868099999999711e-05, 7.812499999999833e-05]</msg>
<status status="PASS" starttime="20201030 15:56:41.235" endtime="20201030 15:56:41.240"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:41.223" endtime="20201030 15:56:41.242"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:41.252" endtime="20201030 15:56:41.274"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:41.247" endtime="20201030 15:56:41.276"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:41.244" endtime="20201030 15:56:41.277"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:40.720" endtime="20201030 15:56:41.277"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:40.718" endtime="20201030 15:56:41.278"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:41.302" endtime="20201030 15:56:41.324"></status>
</kw>
<msg timestamp="20201030 15:56:41.325" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:41.299" endtime="20201030 15:56:41.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:41.332" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:41.328" endtime="20201030 15:56:41.333"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:41.334" endtime="20201030 15:56:41.338"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:41.291" endtime="20201030 15:56:41.340"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:41.285" endtime="20201030 15:56:41.342"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:41.359" endtime="20201030 15:56:41.728"></status>
</kw>
<msg timestamp="20201030 15:56:41.735" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043674167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043754139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:41.356" endtime="20201030 15:56:41.736"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:41.755" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043674167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043754139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:41.738" endtime="20201030 15:56:41.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:41.758" endtime="20201030 15:56:41.762"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:41.348" endtime="20201030 15:56:41.763"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:41.343" endtime="20201030 15:56:41.765"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:41.776" level="INFO">${RESULT} = [{'diff': 7.99719999999976e-05}, {'diff': 7.938799999999968e-05}, {'diff': 7.99589999999975e-05}, {'diff': 7.973599999999692e-05}, {'diff': 7.912499999999933e-05}, {'diff': 7.974999999999649e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:56:41.767" endtime="20201030 15:56:41.777"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:41.786" level="INFO">${ACCURACY} = {'diff': [7.99719999999976e-05, 7.938799999999968e-05, 7.99589999999975e-05, 7.973599999999692e-05, 7.912499999999933e-05, 7.974999999999649e-05, 7.969399999999821e-05, 7.983299999999444e-05, 7.918000...</msg>
<status status="PASS" starttime="20201030 15:56:41.779" endtime="20201030 15:56:41.787"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:41.798" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201030 15:56:41.796" endtime="20201030 15:56:41.799"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:41.804" level="INFO">VALUE: [7.99719999999976e-05, 7.938799999999968e-05, 7.99589999999975e-05, 7.973599999999692e-05, 7.912499999999933e-05, 7.974999999999649e-05, 7.969399999999821e-05, 7.983299999999444e-05, 7.918000000000508e-05, 7.922200000000379e-05, 7.979200000000214e-05, 7.955600000000146e-05, 7.99169999999988e-05, 7.90970000000002e-05, 7.927800000000207e-05, 7.899999999999574e-05, 7.936100000000001e-05, 7.970800000000472e-05, 7.945799999999753e-05, 7.898599999999617e-05, 7.977699999999616e-05, 7.967999999999864e-05, 7.968000000000558e-05, 7.944399999999796e-05, 7.965299999999897e-05, 7.945799999999753e-05, 7.936100000000001e-05, 7.997299999999707e-05, 7.995799999999803e-05, 7.995800000000497e-05, 7.986199999999999e-05, 7.988800000000018e-05, 7.898600000000311e-05, 7.984700000000094e-05, 7.961100000000026e-05, 7.987500000000008e-05, 7.936100000000001e-05, 7.90970000000002e-05, 7.982000000000128e-05, 7.9458999999997e-05, 7.922299999999632e-05, 7.994499999999793e-05, 7.945799999999753e-05, 7.970799999999778e-05, 7.955499999999505e-05, 7.944399999999796e-05, 7.937499999999958e-05, 7.938899999999915e-05, 7.961100000000026e-05, 7.940299999999872e-05]</msg>
<status status="PASS" starttime="20201030 15:56:41.801" endtime="20201030 15:56:41.806"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:41.788" endtime="20201030 15:56:41.807"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:41.817" endtime="20201030 15:56:41.840"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:41.813" endtime="20201030 15:56:41.841"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:41.810" endtime="20201030 15:56:41.842"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:41.280" endtime="20201030 15:56:41.843"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:41.279" endtime="20201030 15:56:41.843"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:41.867" endtime="20201030 15:56:41.891"></status>
</kw>
<msg timestamp="20201030 15:56:41.892" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:41.864" endtime="20201030 15:56:41.893"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:41.899" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:41.895" endtime="20201030 15:56:41.900"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:41.902" endtime="20201030 15:56:41.906"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:41.856" endtime="20201030 15:56:41.907"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:41.850" endtime="20201030 15:56:41.909"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:41.927" endtime="20201030 15:56:42.294"></status>
</kw>
<msg timestamp="20201030 15:56:42.302" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045065889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045146181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:41.923" endtime="20201030 15:56:42.302"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:42.322" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045065889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045146181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:42.304" endtime="20201030 15:56:42.323"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:42.324" endtime="20201030 15:56:42.329"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:41.916" endtime="20201030 15:56:42.330"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:41.910" endtime="20201030 15:56:42.332"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:42.345" level="INFO">${RESULT} = [{'diff': 8.029200000000264e-05}, {'diff': 8.072199999999835e-05}, {'diff': 8.086099999999458e-05}, {'diff': 8.061099999999433e-05}, {'diff': 8.052800000000332e-05}, {'diff': 8.054200000000289e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:56:42.334" endtime="20201030 15:56:42.346"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:42.357" level="INFO">${ACCURACY} = {'diff': [8.029200000000264e-05, 8.072199999999835e-05, 8.086099999999458e-05, 8.061099999999433e-05, 8.052800000000332e-05, 8.054200000000289e-05, 8.016699999999904e-05, 8.032000000000178e-05, 8.0875...</msg>
<status status="PASS" starttime="20201030 15:56:42.349" endtime="20201030 15:56:42.358"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:42.369" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201030 15:56:42.366" endtime="20201030 15:56:42.370"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:42.375" level="INFO">VALUE: [8.029200000000264e-05, 8.072199999999835e-05, 8.086099999999458e-05, 8.061099999999433e-05, 8.052800000000332e-05, 8.054200000000289e-05, 8.016699999999904e-05, 8.032000000000178e-05, 8.087500000000108e-05, 8.067999999999964e-05, 8.05970000000017e-05, 8.011100000000076e-05, 8.098699999999764e-05, 8.069499999999868e-05, 7.998599999999717e-05, 8.072199999999835e-05, 8.04719999999981e-05, 8.055499999999605e-05, 8.077799999999663e-05, 8.074999999999749e-05, 8.069500000000562e-05, 8.001399999999631e-05, 8.055599999999552e-05, 8.001399999999631e-05, 8.012500000000033e-05, 8.000000000000368e-05, 8.083299999999544e-05, 8.019399999999871e-05, 8.022199999999785e-05, 8.082000000000228e-05, 8.030600000000221e-05, 8.040299999999972e-05, 8.027699999999666e-05, 7.995799999999803e-05, 8.083400000000185e-05, 8.055600000000246e-05, 8.04310000000058e-05, 8.057000000000203e-05, 8.016699999999904e-05, 8.041599999999982e-05, 8.034700000000145e-05, 8.011100000000076e-05, 8.023600000000436e-05, 8.094399999999946e-05, 7.999999999999674e-05, 8.086100000000151e-05, 8.033300000000188e-05, 8.012500000000033e-05, 8.075000000000443e-05, 8.015299999999947e-05]</msg>
<status status="PASS" starttime="20201030 15:56:42.371" endtime="20201030 15:56:42.377"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:42.359" endtime="20201030 15:56:42.378"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:42.390" endtime="20201030 15:56:42.412"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:42.384" endtime="20201030 15:56:42.414"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:42.381" endtime="20201030 15:56:42.415"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:41.845" endtime="20201030 15:56:42.415"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:41.844" endtime="20201030 15:56:42.416"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:42.441" endtime="20201030 15:56:42.462"></status>
</kw>
<msg timestamp="20201030 15:56:42.464" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:42.437" endtime="20201030 15:56:42.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:42.471" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:42.466" endtime="20201030 15:56:42.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:42.473" endtime="20201030 15:56:42.478"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:42.429" endtime="20201030 15:56:42.480"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:42.423" endtime="20201030 15:56:42.481"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:42.499" endtime="20201030 15:56:42.860"></status>
</kw>
<msg timestamp="20201030 15:56:42.868" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043758819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043840583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:42.496" endtime="20201030 15:56:42.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:42.888" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043758819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043840583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:42.870" endtime="20201030 15:56:42.888"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:42.890" endtime="20201030 15:56:42.894"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:42.488" endtime="20201030 15:56:42.896"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:42.483" endtime="20201030 15:56:42.898"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:42.909" level="INFO">${RESULT} = [{'diff': 8.1764000000005e-05}, {'diff': 8.111100000000177e-05}, {'diff': 8.188899999999472e-05}, {'diff': 8.188900000000165e-05}, {'diff': 8.144500000000637e-05}, {'diff': 8.169400000000021e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:56:42.899" endtime="20201030 15:56:42.909"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:42.920" level="INFO">${ACCURACY} = {'diff': [8.1764000000005e-05, 8.111100000000177e-05, 8.188899999999472e-05, 8.188900000000165e-05, 8.144500000000637e-05, 8.169400000000021e-05, 8.118099999999961e-05, 8.179200000000414e-05, 8.177799...</msg>
<status status="PASS" starttime="20201030 15:56:42.911" endtime="20201030 15:56:42.921"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:42.932" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201030 15:56:42.930" endtime="20201030 15:56:42.933"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:42.938" level="INFO">VALUE: [8.1764000000005e-05, 8.111100000000177e-05, 8.188899999999472e-05, 8.188900000000165e-05, 8.144500000000637e-05, 8.169400000000021e-05, 8.118099999999961e-05, 8.179200000000414e-05, 8.177799999999763e-05, 8.101400000000425e-05, 8.188900000000165e-05, 8.156999999999609e-05, 8.194499999999993e-05, 8.113800000000143e-05, 8.141600000000082e-05, 8.099999999999774e-05, 8.126399999999756e-05, 8.145800000000647e-05, 8.14170000000003e-05, 8.157000000000303e-05, 8.101399999999731e-05, 8.138800000000168e-05, 8.168000000000064e-05, 8.168000000000064e-05, 8.169499999999968e-05, 8.116700000000004e-05, 8.106900000000306e-05, 8.133300000000288e-05, 8.112500000000133e-05, 8.19170000000008e-05, 8.141600000000082e-05, 8.170899999999925e-05, 8.199999999999874e-05, 8.16249999999949e-05, 8.116700000000004e-05, 8.107000000000253e-05, 8.116600000000057e-05, 8.112500000000133e-05, 8.169400000000021e-05, 8.180599999999677e-05, 8.172199999999935e-05, 8.177799999999763e-05, 8.144399999999996e-05, 8.140300000000072e-05, 8.132000000000278e-05, 8.188900000000165e-05, 8.166700000000054e-05, 8.127799999999713e-05, 8.140200000000125e-05, 8.140200000000125e-05]</msg>
<status status="PASS" starttime="20201030 15:56:42.934" endtime="20201030 15:56:42.939"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:42.922" endtime="20201030 15:56:42.941"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:42.951" endtime="20201030 15:56:42.973"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:42.947" endtime="20201030 15:56:42.975"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:42.944" endtime="20201030 15:56:42.976"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:42.418" endtime="20201030 15:56:42.977"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:42.417" endtime="20201030 15:56:42.977"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:43.002" endtime="20201030 15:56:43.024"></status>
</kw>
<msg timestamp="20201030 15:56:43.025" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:42.998" endtime="20201030 15:56:43.026"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:43.032" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:43.028" endtime="20201030 15:56:43.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:43.034" endtime="20201030 15:56:43.039"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:42.990" endtime="20201030 15:56:43.040"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:42.984" endtime="20201030 15:56:43.042"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:43.060" endtime="20201030 15:56:43.419"></status>
</kw>
<msg timestamp="20201030 15:56:43.426" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044077958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044160639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:43.056" endtime="20201030 15:56:43.427"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:43.446" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044077958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044160639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:43.429" endtime="20201030 15:56:43.447"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:43.449" endtime="20201030 15:56:43.453"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:43.048" endtime="20201030 15:56:43.454"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:43.043" endtime="20201030 15:56:43.456"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:43.467" level="INFO">${RESULT} = [{'diff': 8.268100000000111e-05}, {'diff': 8.19719999999996e-05}, {'diff': 8.244500000000043e-05}, {'diff': 8.223599999999942e-05}, {'diff': 8.209800000000267e-05}, {'diff': 8.237499999999565e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:56:43.458" endtime="20201030 15:56:43.468"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:43.480" level="INFO">${ACCURACY} = {'diff': [8.268100000000111e-05, 8.19719999999996e-05, 8.244500000000043e-05, 8.223599999999942e-05, 8.209800000000267e-05, 8.237499999999565e-05, 8.201399999999831e-05, 8.269500000000068e-05, 8.24729...</msg>
<status status="PASS" starttime="20201030 15:56:43.470" endtime="20201030 15:56:43.480"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:43.492" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201030 15:56:43.489" endtime="20201030 15:56:43.493"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:43.498" level="INFO">VALUE: [8.268100000000111e-05, 8.19719999999996e-05, 8.244500000000043e-05, 8.223599999999942e-05, 8.209800000000267e-05, 8.237499999999565e-05, 8.201399999999831e-05, 8.269500000000068e-05, 8.247299999999957e-05, 8.286100000000352e-05, 8.277799999999863e-05, 8.256899999999762e-05, 8.288800000000318e-05, 8.268000000000164e-05, 8.24170000000013e-05, 8.247299999999957e-05, 8.201399999999831e-05, 8.247299999999957e-05, 8.208300000000363e-05, 8.27919999999982e-05, 8.222199999999985e-05, 8.284800000000342e-05, 8.294400000000146e-05, 8.216700000000104e-05, 8.288800000000318e-05, 8.269399999999427e-05, 8.211100000000277e-05, 8.288899999999572e-05, 8.288899999999572e-05, 8.268100000000111e-05, 8.202799999999788e-05, 8.247299999999957e-05, 8.219500000000018e-05, 8.211099999999583e-05, 8.237500000000259e-05, 8.293100000000136e-05, 8.256899999999762e-05, 8.23469999999965e-05, 8.272200000000035e-05, 8.294500000000093e-05, 8.24720000000001e-05, 8.286100000000352e-05, 8.24720000000001e-05, 8.251399999999881e-05, 8.263899999999547e-05, 8.294500000000093e-05, 8.215300000000147e-05, 8.277799999999863e-05, 8.26390000000024e-05, 8.199999999999874e-05]</msg>
<status status="PASS" starttime="20201030 15:56:43.495" endtime="20201030 15:56:43.500"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:43.482" endtime="20201030 15:56:43.502"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:43.513" endtime="20201030 15:56:43.535"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:43.508" endtime="20201030 15:56:43.537"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:43.504" endtime="20201030 15:56:43.537"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:42.980" endtime="20201030 15:56:43.538"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:42.978" endtime="20201030 15:56:43.538"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:43.563" endtime="20201030 15:56:43.586"></status>
</kw>
<msg timestamp="20201030 15:56:43.587" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:43.559" endtime="20201030 15:56:43.588"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:43.594" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:43.589" endtime="20201030 15:56:43.594"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:43.596" endtime="20201030 15:56:43.600"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:43.552" endtime="20201030 15:56:43.602"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:43.545" endtime="20201030 15:56:43.603"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:43.621" endtime="20201030 15:56:43.982"></status>
</kw>
<msg timestamp="20201030 15:56:43.990" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043719236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043802431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:43.618" endtime="20201030 15:56:43.991"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:44.010" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043719236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043802431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:43.993" endtime="20201030 15:56:44.011"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:44.012" endtime="20201030 15:56:44.017"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:43.610" endtime="20201030 15:56:44.018"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:43.605" endtime="20201030 15:56:44.020"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:44.031" level="INFO">${RESULT} = [{'diff': 8.319500000000118e-05}, {'diff': 8.326399999999956e-05}, {'diff': 8.39720000000016e-05}, {'diff': 8.386099999999758e-05}, {'diff': 8.387500000000409e-05}, {'diff': 8.312500000000334e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:56:44.021" endtime="20201030 15:56:44.032"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:44.041" level="INFO">${ACCURACY} = {'diff': [8.319500000000118e-05, 8.326399999999956e-05, 8.39720000000016e-05, 8.386099999999758e-05, 8.387500000000409e-05, 8.312500000000334e-05, 8.36390000000034e-05, 8.322200000000085e-05, 8.383300...</msg>
<status status="PASS" starttime="20201030 15:56:44.033" endtime="20201030 15:56:44.042"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:44.053" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201030 15:56:44.051" endtime="20201030 15:56:44.054"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:44.059" level="INFO">VALUE: [8.319500000000118e-05, 8.326399999999956e-05, 8.39720000000016e-05, 8.386099999999758e-05, 8.387500000000409e-05, 8.312500000000334e-05, 8.36390000000034e-05, 8.322200000000085e-05, 8.383300000000538e-05, 8.340299999999579e-05, 8.334799999999698e-05, 8.355599999999852e-05, 8.304099999999898e-05, 8.327699999999966e-05, 8.390300000000323e-05, 8.319400000000171e-05, 8.38049999999993e-05, 8.394400000000246e-05, 8.311100000000377e-05, 8.306899999999812e-05, 8.350000000000024e-05, 8.3459000000001e-05, 8.352799999999938e-05, 8.326300000000009e-05, 8.351399999999981e-05, 8.324999999999999e-05, 8.327699999999966e-05, 8.355499999999905e-05, 8.326399999999956e-05, 8.354199999999895e-05, 8.311100000000377e-05, 8.394400000000246e-05, 8.37919999999992e-05, 8.312500000000334e-05, 8.324999999999999e-05, 8.39170000000028e-05, 8.375000000000049e-05, 8.348600000000067e-05, 8.323600000000042e-05, 8.375000000000049e-05, 8.390299999999629e-05, 8.351399999999981e-05, 8.319500000000118e-05, 8.354199999999895e-05, 8.370900000000125e-05, 8.368099999999518e-05, 8.32369999999999e-05, 8.39590000000015e-05, 8.350000000000024e-05, 8.344399999999502e-05]</msg>
<status status="PASS" starttime="20201030 15:56:44.056" endtime="20201030 15:56:44.061"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:44.043" endtime="20201030 15:56:44.062"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:44.072" endtime="20201030 15:56:44.094"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:44.068" endtime="20201030 15:56:44.096"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:44.065" endtime="20201030 15:56:44.097"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:43.541" endtime="20201030 15:56:44.098"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:43.539" endtime="20201030 15:56:44.098"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:44.122" endtime="20201030 15:56:44.147"></status>
</kw>
<msg timestamp="20201030 15:56:44.148" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:44.119" endtime="20201030 15:56:44.148"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:44.154" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:44.150" endtime="20201030 15:56:44.155"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:44.157" endtime="20201030 15:56:44.161"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:44.111" endtime="20201030 15:56:44.163"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:44.105" endtime="20201030 15:56:44.164"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:44.182" endtime="20201030 15:56:44.542"></status>
</kw>
<msg timestamp="20201030 15:56:44.550" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045460389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045544889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:44.179" endtime="20201030 15:56:44.550"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:44.570" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045460389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045544889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:44.552" endtime="20201030 15:56:44.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:44.572" endtime="20201030 15:56:44.576"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:44.171" endtime="20201030 15:56:44.578"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:44.166" endtime="20201030 15:56:44.580"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:44.591" level="INFO">${RESULT} = [{'diff': 8.450000000000124e-05}, {'diff': 8.468099999999618e-05}, {'diff': 8.419500000000218e-05}, {'diff': 8.423600000000142e-05}, {'diff': 8.411099999999783e-05}, {'diff': 8.418000000000314e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:56:44.582" endtime="20201030 15:56:44.592"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:44.601" level="INFO">${ACCURACY} = {'diff': [8.450000000000124e-05, 8.468099999999618e-05, 8.419500000000218e-05, 8.423600000000142e-05, 8.411099999999783e-05, 8.418000000000314e-05, 8.447199999999516e-05, 8.479100000000073e-05, 8.4639...</msg>
<status status="PASS" starttime="20201030 15:56:44.593" endtime="20201030 15:56:44.602"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:44.613" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201030 15:56:44.610" endtime="20201030 15:56:44.614"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:44.619" level="INFO">VALUE: [8.450000000000124e-05, 8.468099999999618e-05, 8.419500000000218e-05, 8.423600000000142e-05, 8.411099999999783e-05, 8.418000000000314e-05, 8.447199999999516e-05, 8.479100000000073e-05, 8.46390000000044e-05, 8.445799999999559e-05, 8.436099999999808e-05, 8.481999999999934e-05, 8.468100000000311e-05, 8.443100000000286e-05, 8.425000000000099e-05, 8.490300000000423e-05, 8.411099999999783e-05, 8.487499999999815e-05, 8.456899999999962e-05, 8.46669999999966e-05, 8.422200000000185e-05, 8.465299999999704e-05, 8.488899999999772e-05, 8.405600000000596e-05, 8.408299999999869e-05, 8.4846999999999e-05, 8.429100000000023e-05, 8.44449999999955e-05, 8.466700000000354e-05, 8.472299999999489e-05, 8.481899999999987e-05, 8.501400000000131e-05, 8.462500000000484e-05, 8.401400000000031e-05, 8.425000000000099e-05, 8.461099999999833e-05, 8.493100000000336e-05, 8.476400000000106e-05, 8.476400000000106e-05, 8.427800000000013e-05, 8.412500000000434e-05, 8.433399999999841e-05, 8.41249999999974e-05, 8.466599999999713e-05, 8.493000000000389e-05, 8.402799999999988e-05, 8.47920000000002e-05, 8.465300000000398e-05, 8.444400000000296e-05, 8.455599999999952e-05]</msg>
<status status="PASS" starttime="20201030 15:56:44.615" endtime="20201030 15:56:44.620"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:44.603" endtime="20201030 15:56:44.622"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:44.634" endtime="20201030 15:56:44.656"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:44.628" endtime="20201030 15:56:44.658"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:44.625" endtime="20201030 15:56:44.659"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:44.100" endtime="20201030 15:56:44.659"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:44.099" endtime="20201030 15:56:44.660"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:44.684" endtime="20201030 15:56:44.707"></status>
</kw>
<msg timestamp="20201030 15:56:44.708" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:44.681" endtime="20201030 15:56:44.709"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:44.715" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:44.711" endtime="20201030 15:56:44.716"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:44.717" endtime="20201030 15:56:44.721"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:44.673" endtime="20201030 15:56:44.723"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:44.667" endtime="20201030 15:56:44.725"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:44.743" endtime="20201030 15:56:45.103"></status>
</kw>
<msg timestamp="20201030 15:56:45.111" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044170722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044256472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:44.739" endtime="20201030 15:56:45.111"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:45.130" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044170722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044256472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:45.113" endtime="20201030 15:56:45.131"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:45.133" endtime="20201030 15:56:45.137"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:44.731" endtime="20201030 15:56:45.139"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:44.726" endtime="20201030 15:56:45.141"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:45.152" level="INFO">${RESULT} = [{'diff': 8.574999999999555e-05}, {'diff': 8.527800000000113e-05}, {'diff': 8.566700000000455e-05}, {'diff': 8.559799999999923e-05}, {'diff': 8.519500000000318e-05}, {'diff': 8.501399999999437e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:56:45.142" endtime="20201030 15:56:45.152"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:45.163" level="INFO">${ACCURACY} = {'diff': [8.574999999999555e-05, 8.527800000000113e-05, 8.566700000000455e-05, 8.559799999999923e-05, 8.519500000000318e-05, 8.501399999999437e-05, 8.569499999999675e-05, 8.49999999999948e-05, 8.51529...</msg>
<status status="PASS" starttime="20201030 15:56:45.154" endtime="20201030 15:56:45.164"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:45.175" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201030 15:56:45.172" endtime="20201030 15:56:45.176"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:45.181" level="INFO">VALUE: [8.574999999999555e-05, 8.527800000000113e-05, 8.566700000000455e-05, 8.559799999999923e-05, 8.519500000000318e-05, 8.501399999999437e-05, 8.569499999999675e-05, 8.49999999999948e-05, 8.515299999999754e-05, 8.566599999999813e-05, 8.502800000000088e-05, 8.57920000000012e-05, 8.513899999999797e-05, 8.520799999999634e-05, 8.561099999999933e-05, 8.598599999999623e-05, 8.500000000000174e-05, 8.501400000000131e-05, 8.577800000000163e-05, 8.547199999999616e-05, 8.506900000000012e-05, 8.597199999999666e-05, 8.565199999999856e-05, 8.557000000000009e-05, 8.51390000000049e-05, 8.53469999999995e-05, 8.593100000000437e-05, 8.570800000000378e-05, 8.533399999999941e-05, 8.57920000000012e-05, 8.500000000000174e-05, 8.512500000000534e-05, 8.569399999999727e-05, 8.590199999999881e-05, 8.545800000000353e-05, 8.561099999999933e-05, 8.51249999999984e-05, 8.501400000000131e-05, 8.577800000000163e-05, 8.500000000000174e-05, 8.590299999999829e-05, 8.544500000000343e-05, 8.538899999999822e-05, 8.49869999999947e-05, 8.505500000000055e-05, 8.544399999999702e-05, 8.52920000000007e-05, 8.551400000000181e-05, 8.597199999999666e-05, 8.554200000000095e-05]</msg>
<status status="PASS" starttime="20201030 15:56:45.177" endtime="20201030 15:56:45.187"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:45.165" endtime="20201030 15:56:45.189"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:45.199" endtime="20201030 15:56:45.221"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:45.194" endtime="20201030 15:56:45.223"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:45.191" endtime="20201030 15:56:45.223"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:44.662" endtime="20201030 15:56:45.224"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:44.661" endtime="20201030 15:56:45.224"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:45.249" endtime="20201030 15:56:45.272"></status>
</kw>
<msg timestamp="20201030 15:56:45.273" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:45.246" endtime="20201030 15:56:45.273"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:45.279" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:45.275" endtime="20201030 15:56:45.280"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:45.282" endtime="20201030 15:56:45.286"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:45.238" endtime="20201030 15:56:45.288"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:45.232" endtime="20201030 15:56:45.289"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:45.307" endtime="20201030 15:56:45.607"></status>
</kw>
<msg timestamp="20201030 15:56:45.615" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043799917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043886042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:45.304" endtime="20201030 15:56:45.615"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:45.634" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043799917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043886042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:45.617" endtime="20201030 15:56:45.635"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:45.637" endtime="20201030 15:56:45.641"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:45.296" endtime="20201030 15:56:45.643"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:45.291" endtime="20201030 15:56:45.644"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:45.656" level="INFO">${RESULT} = [{'diff': 8.61249999999994e-05}, {'diff': 8.604200000000145e-05}, {'diff': 8.666700000000555e-05}, {'diff': 8.604200000000145e-05}, {'diff': 8.655600000000152e-05}, {'diff': 8.622299999999639e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:56:45.646" endtime="20201030 15:56:45.656"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:45.668" level="INFO">${ACCURACY} = {'diff': [8.61249999999994e-05, 8.604200000000145e-05, 8.666700000000555e-05, 8.604200000000145e-05, 8.655600000000152e-05, 8.622299999999639e-05, 8.6944999999998e-05, 8.602700000000241e-05, 8.6416000...</msg>
<status status="PASS" starttime="20201030 15:56:45.658" endtime="20201030 15:56:45.668"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:45.679" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201030 15:56:45.677" endtime="20201030 15:56:45.680"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:45.685" level="INFO">VALUE: [8.61249999999994e-05, 8.604200000000145e-05, 8.666700000000555e-05, 8.604200000000145e-05, 8.655600000000152e-05, 8.622299999999639e-05, 8.6944999999998e-05, 8.602700000000241e-05, 8.641600000000582e-05, 8.665199999999956e-05, 8.658300000000119e-05, 8.636100000000008e-05, 8.695799999999809e-05, 8.644400000000496e-05, 8.680600000000177e-05, 8.668099999999818e-05, 8.658400000000066e-05, 8.647299999999664e-05, 8.63470000000005e-05, 8.620899999999682e-05, 8.690199999999981e-05, 8.626400000000256e-05, 8.688899999999972e-05, 8.670800000000478e-05, 8.656900000000162e-05, 8.61249999999994e-05, 8.694500000000494e-05, 8.680499999999536e-05, 8.680599999999483e-05, 8.637499999999965e-05, 8.688800000000024e-05, 8.623600000000342e-05, 8.681900000000187e-05, 8.637499999999965e-05, 8.636100000000008e-05, 8.6847000000001e-05, 8.656900000000162e-05, 8.61249999999994e-05, 8.605600000000102e-05, 8.605600000000102e-05, 8.655600000000152e-05, 8.690299999999929e-05, 8.672299999999689e-05, 8.638799999999974e-05, 8.61249999999994e-05, 8.663899999999947e-05, 8.683399999999397e-05, 8.638899999999922e-05, 8.657000000000109e-05, 8.698600000000417e-05]</msg>
<status status="PASS" starttime="20201030 15:56:45.682" endtime="20201030 15:56:45.687"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:45.669" endtime="20201030 15:56:45.689"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:45.699" endtime="20201030 15:56:45.721"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:45.694" endtime="20201030 15:56:45.723"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:45.691" endtime="20201030 15:56:45.723"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:45.227" endtime="20201030 15:56:45.724"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:45.226" endtime="20201030 15:56:45.724"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:45.749" endtime="20201030 15:56:45.772"></status>
</kw>
<msg timestamp="20201030 15:56:45.773" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:45.745" endtime="20201030 15:56:45.774"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:45.780" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:45.776" endtime="20201030 15:56:45.781"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:45.782" endtime="20201030 15:56:45.787"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:45.738" endtime="20201030 15:56:45.788"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:45.731" endtime="20201030 15:56:45.790"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:45.808" endtime="20201030 15:56:46.170"></status>
</kw>
<msg timestamp="20201030 15:56:46.178" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044049014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044136875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:45.804" endtime="20201030 15:56:46.179"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:46.198" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044049014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044136875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:46.181" endtime="20201030 15:56:46.199"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:46.201" endtime="20201030 15:56:46.205"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:45.796" endtime="20201030 15:56:46.207"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:45.791" endtime="20201030 15:56:46.208"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:46.219" level="INFO">${RESULT} = [{'diff': 8.786100000000158e-05}, {'diff': 8.71669999999991e-05}, {'diff': 8.777800000000363e-05}, {'diff': 8.755599999999558e-05}, {'diff': 8.715200000000006e-05}, {'diff': 8.720899999999782e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:56:46.210" endtime="20201030 15:56:46.220"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:46.229" level="INFO">${ACCURACY} = {'diff': [8.786100000000158e-05, 8.71669999999991e-05, 8.777800000000363e-05, 8.755599999999558e-05, 8.715200000000006e-05, 8.720899999999782e-05, 8.718099999999868e-05, 8.779099999999679e-05, 8.77079...</msg>
<status status="PASS" starttime="20201030 15:56:46.222" endtime="20201030 15:56:46.230"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:46.241" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201030 15:56:46.239" endtime="20201030 15:56:46.242"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:46.247" level="INFO">VALUE: [8.786100000000158e-05, 8.71669999999991e-05, 8.777800000000363e-05, 8.755599999999558e-05, 8.715200000000006e-05, 8.720899999999782e-05, 8.718099999999868e-05, 8.779099999999679e-05, 8.770799999999884e-05, 8.73470000000015e-05, 8.76799999999997e-05, 8.751400000000381e-05, 8.705599999999508e-05, 8.713899999999997e-05, 8.709700000000126e-05, 8.774999999999755e-05, 8.705600000000202e-05, 8.800000000000474e-05, 8.779099999999679e-05, 8.795799999999909e-05, 8.765200000000056e-05, 8.74999999999973e-05, 8.737500000000065e-05, 8.770799999999884e-05, 8.774999999999755e-05, 8.727800000000313e-05, 8.719499999999825e-05, 8.715299999999954e-05, 8.76669999999996e-05, 8.769399999999927e-05, 8.737500000000065e-05, 8.766600000000013e-05, 8.759700000000176e-05, 8.741699999999936e-05, 8.730600000000227e-05, 8.758300000000219e-05, 8.79720000000056e-05, 8.701400000000331e-05, 8.718099999999868e-05, 8.768099999999918e-05, 8.738899999999328e-05, 8.715200000000006e-05, 8.797199999999866e-05, 8.727700000000366e-05, 8.730600000000227e-05, 8.777799999999669e-05, 8.763900000000047e-05, 8.777800000000363e-05, 8.718099999999868e-05, 8.790300000000029e-05]</msg>
<status status="PASS" starttime="20201030 15:56:46.244" endtime="20201030 15:56:46.249"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:46.231" endtime="20201030 15:56:46.251"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:46.261" endtime="20201030 15:56:46.283"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:46.256" endtime="20201030 15:56:46.287"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:46.253" endtime="20201030 15:56:46.288"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:45.727" endtime="20201030 15:56:46.289"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:45.725" endtime="20201030 15:56:46.290"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:46.318" endtime="20201030 15:56:46.342"></status>
</kw>
<msg timestamp="20201030 15:56:46.344" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:46.314" endtime="20201030 15:56:46.344"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:46.350" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:46.346" endtime="20201030 15:56:46.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:46.353" endtime="20201030 15:56:46.357"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:46.305" endtime="20201030 15:56:46.359"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:46.298" endtime="20201030 15:56:46.360"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:46.378" endtime="20201030 15:56:46.741"></status>
</kw>
<msg timestamp="20201030 15:56:46.749" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.052077236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.052166208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:46.374" endtime="20201030 15:56:46.749"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:46.768" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.052077236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.052166208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:46.751" endtime="20201030 15:56:46.769"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:46.771" endtime="20201030 15:56:46.775"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:46.367" endtime="20201030 15:56:46.777"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:46.362" endtime="20201030 15:56:46.778"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:46.790" level="INFO">${RESULT} = [{'diff': 8.897199999999966e-05}, {'diff': 8.855500000000405e-05}, {'diff': 8.891699999999392e-05}, {'diff': 8.801400000000431e-05}, {'diff': 8.877800000000463e-05}, {'diff': 8.874999999999855e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:56:46.780" endtime="20201030 15:56:46.790"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:46.800" level="INFO">${ACCURACY} = {'diff': [8.897199999999966e-05, 8.855500000000405e-05, 8.891699999999392e-05, 8.801400000000431e-05, 8.877800000000463e-05, 8.874999999999855e-05, 8.890300000000129e-05, 8.854199999999701e-05, 8.8417...</msg>
<status status="PASS" starttime="20201030 15:56:46.792" endtime="20201030 15:56:46.800"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:46.812" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201030 15:56:46.809" endtime="20201030 15:56:46.812"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:46.818" level="INFO">VALUE: [8.897199999999966e-05, 8.855500000000405e-05, 8.891699999999392e-05, 8.801400000000431e-05, 8.877800000000463e-05, 8.874999999999855e-05, 8.890300000000129e-05, 8.854199999999701e-05, 8.841700000000036e-05, 8.827799999999719e-05, 8.886099999999564e-05, 8.81250000000014e-05, 8.822200000000585e-05, 8.81250000000014e-05, 8.845799999999959e-05, 8.897199999999966e-05, 8.854200000000395e-05, 8.807000000000259e-05, 8.869499999999975e-05, 8.857000000000309e-05, 8.87920000000042e-05, 8.877799999999769e-05, 8.869399999999333e-05, 8.876300000000559e-05, 8.854200000000395e-05, 8.823599999999848e-05, 8.844400000000002e-05, 8.81670000000001e-05, 8.812499999999446e-05, 8.855600000000352e-05, 8.874999999999855e-05, 8.854199999999701e-05, 8.863800000000199e-05, 8.847199999999916e-05, 8.848599999999873e-05, 8.897299999999914e-05, 8.852700000000491e-05, 8.81250000000014e-05, 8.87920000000042e-05, 8.879199999999726e-05, 8.870899999999932e-05, 8.847199999999916e-05, 8.890299999999435e-05, 8.884699999999607e-05, 8.869400000000027e-05, 8.811099999999489e-05, 8.85129999999984e-05, 8.801399999999737e-05, 8.813900000000097e-05, 8.882000000000334e-05]</msg>
<status status="PASS" starttime="20201030 15:56:46.814" endtime="20201030 15:56:46.819"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:46.802" endtime="20201030 15:56:46.821"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:46.837" endtime="20201030 15:56:46.860"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:46.827" endtime="20201030 15:56:46.862"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:46.824" endtime="20201030 15:56:46.862"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:46.293" endtime="20201030 15:56:46.863"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:46.291" endtime="20201030 15:56:46.863"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:46.888" endtime="20201030 15:56:46.911"></status>
</kw>
<msg timestamp="20201030 15:56:46.912" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:46.884" endtime="20201030 15:56:46.913"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:46.919" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:46.915" endtime="20201030 15:56:46.920"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:46.921" endtime="20201030 15:56:46.925"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:46.876" endtime="20201030 15:56:46.927"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:46.870" endtime="20201030 15:56:46.929"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:46.947" endtime="20201030 15:56:47.308"></status>
</kw>
<msg timestamp="20201030 15:56:47.316" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043925319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044015306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:46.943" endtime="20201030 15:56:47.316"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:47.336" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043925319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044015306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:47.318" endtime="20201030 15:56:47.336"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:47.338" endtime="20201030 15:56:47.342"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:46.935" endtime="20201030 15:56:47.344"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:46.930" endtime="20201030 15:56:47.346"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:47.357" level="INFO">${RESULT} = [{'diff': 8.99869999999997e-05}, {'diff': 8.966699999999467e-05}, {'diff': 8.990300000000229e-05}, {'diff': 8.979199999999826e-05}, {'diff': 8.936100000000308e-05}, {'diff': 8.909700000000326e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:56:47.347" endtime="20201030 15:56:47.357"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:47.368" level="INFO">${ACCURACY} = {'diff': [8.99869999999997e-05, 8.966699999999467e-05, 8.990300000000229e-05, 8.979199999999826e-05, 8.936100000000308e-05, 8.909700000000326e-05, 8.986100000000358e-05, 8.922199999999991e-05, 8.94999...</msg>
<status status="PASS" starttime="20201030 15:56:47.359" endtime="20201030 15:56:47.369"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:47.380" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201030 15:56:47.378" endtime="20201030 15:56:47.381"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:47.386" level="INFO">VALUE: [8.99869999999997e-05, 8.966699999999467e-05, 8.990300000000229e-05, 8.979199999999826e-05, 8.936100000000308e-05, 8.909700000000326e-05, 8.986100000000358e-05, 8.922199999999991e-05, 8.94999999999993e-05, 8.923599999999948e-05, 8.934700000000351e-05, 8.991700000000186e-05, 8.966699999999467e-05, 8.905599999999708e-05, 8.94999999999993e-05, 8.943000000000145e-05, 8.927800000000513e-05, 8.941600000000188e-05, 8.956900000000462e-05, 8.977799999999869e-05, 8.947200000000016e-05, 8.96670000000016e-05, 8.908300000000369e-05, 8.948599999999973e-05, 8.898600000000617e-05, 8.956899999999768e-05, 8.90129999999989e-05, 8.94999999999993e-05, 8.927699999999872e-05, 8.990300000000229e-05, 8.955500000000505e-05, 8.991700000000186e-05, 8.947200000000016e-05, 8.905600000000402e-05, 8.947299999999964e-05, 8.908399999999622e-05, 8.977799999999869e-05, 8.901300000000584e-05, 8.912499999999546e-05, 8.901399999999837e-05, 8.923599999999948e-05, 8.948599999999973e-05, 8.922199999999991e-05, 8.906999999999665e-05, 8.936099999999614e-05, 8.904199999999751e-05, 8.96670000000016e-05, 8.933399999999647e-05, 8.986099999999664e-05, 8.998600000000023e-05]</msg>
<status status="PASS" starttime="20201030 15:56:47.382" endtime="20201030 15:56:47.388"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:47.370" endtime="20201030 15:56:47.389"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:47.399" endtime="20201030 15:56:47.421"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:47.395" endtime="20201030 15:56:47.423"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:47.392" endtime="20201030 15:56:47.424"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:46.866" endtime="20201030 15:56:47.425"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:46.864" endtime="20201030 15:56:47.425"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:47.450" endtime="20201030 15:56:47.473"></status>
</kw>
<msg timestamp="20201030 15:56:47.474" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:47.446" endtime="20201030 15:56:47.474"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:47.481" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:47.476" endtime="20201030 15:56:47.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:47.483" endtime="20201030 15:56:47.487"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:47.438" endtime="20201030 15:56:47.489"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:47.432" endtime="20201030 15:56:47.491"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:47.508" endtime="20201030 15:56:47.871"></status>
</kw>
<msg timestamp="20201030 15:56:47.879" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043908861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043999389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:47.505" endtime="20201030 15:56:47.879"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:47.898" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043908861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043999389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:47.881" endtime="20201030 15:56:47.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:47.901" endtime="20201030 15:56:47.905"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:47.497" endtime="20201030 15:56:47.907"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:47.492" endtime="20201030 15:56:47.908"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:47.919" level="INFO">${RESULT} = [{'diff': 9.052799999999944e-05}, {'diff': 9.01670000000021e-05}, {'diff': 9.034700000000451e-05}, {'diff': 9.01250000000034e-05}, {'diff': 9.052699999999997e-05}, {'diff': 9.009699999999732e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:56:47.910" endtime="20201030 15:56:47.920"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:47.931" level="INFO">${ACCURACY} = {'diff': [9.052799999999944e-05, 9.01670000000021e-05, 9.034700000000451e-05, 9.01250000000034e-05, 9.052699999999997e-05, 9.009699999999732e-05, 9.056899999999868e-05, 9.087499999999721e-05, 9.083299...</msg>
<status status="PASS" starttime="20201030 15:56:47.922" endtime="20201030 15:56:47.932"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:47.943" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201030 15:56:47.941" endtime="20201030 15:56:47.944"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:47.949" level="INFO">VALUE: [9.052799999999944e-05, 9.01670000000021e-05, 9.034700000000451e-05, 9.01250000000034e-05, 9.052699999999997e-05, 9.009699999999732e-05, 9.056899999999868e-05, 9.087499999999721e-05, 9.08329999999985e-05, 9.079199999999926e-05, 9.06250000000039e-05, 9.026399999999962e-05, 8.998600000000023e-05, 9.086199999999711e-05, 9.033399999999747e-05, 9.040199999999637e-05, 9.061099999999739e-05, 9.008300000000469e-05, 9.020800000000134e-05, 9.059700000000476e-05, 9.05000000000003e-05, 9.036099999999714e-05, 9.051399999999987e-05, 9.001400000000631e-05, 9.006899999999818e-05, 9.088899999999678e-05, 9.077799999999969e-05, 9.029099999999929e-05, 9.077700000000022e-05, 9.038899999999628e-05, 9.036099999999714e-05, 8.99999999999998e-05, 9.094400000000252e-05, 9.062499999999696e-05, 9.026399999999962e-05, 9.086099999999764e-05, 9.025000000000005e-05, 9.051399999999987e-05, 9.079099999999979e-05, 9.051399999999987e-05, 9.066600000000313e-05, 9.055499999999911e-05, 9.090299999999635e-05, 9.097200000000166e-05, 9.02920000000057e-05, 9.057000000000509e-05, 9.025000000000005e-05, 9.030599999999833e-05, 9.019500000000125e-05, 9.034799999999704e-05]</msg>
<status status="PASS" starttime="20201030 15:56:47.946" endtime="20201030 15:56:47.951"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:47.933" endtime="20201030 15:56:47.952"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:47.962" endtime="20201030 15:56:47.984"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:47.958" endtime="20201030 15:56:47.986"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:47.955" endtime="20201030 15:56:47.987"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:47.427" endtime="20201030 15:56:47.988"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:47.426" endtime="20201030 15:56:47.988"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:48.013" endtime="20201030 15:56:48.036"></status>
</kw>
<msg timestamp="20201030 15:56:48.037" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:48.009" endtime="20201030 15:56:48.038"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:48.044" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:48.040" endtime="20201030 15:56:48.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:48.047" endtime="20201030 15:56:48.051"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:48.002" endtime="20201030 15:56:48.052"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:47.995" endtime="20201030 15:56:48.054"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:48.072" endtime="20201030 15:56:48.437"></status>
</kw>
<msg timestamp="20201030 15:56:48.445" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044248153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044339917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:48.068" endtime="20201030 15:56:48.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:48.465" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044248153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044339917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:48.448" endtime="20201030 15:56:48.466"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:48.468" endtime="20201030 15:56:48.472"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:48.061" endtime="20201030 15:56:48.474"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:48.056" endtime="20201030 15:56:48.475"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:48.486" level="INFO">${RESULT} = [{'diff': 9.176400000000112e-05}, {'diff': 9.168100000000318e-05}, {'diff': 9.118099999999574e-05}, {'diff': 9.151400000000087e-05}, {'diff': 9.104100000000004e-05}, {'diff': 9.122200000000191e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:56:48.477" endtime="20201030 15:56:48.487"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:48.497" level="INFO">${ACCURACY} = {'diff': [9.176400000000112e-05, 9.168100000000318e-05, 9.118099999999574e-05, 9.151400000000087e-05, 9.104100000000004e-05, 9.122200000000191e-05, 9.167999999999676e-05, 9.129199999999976e-05, 9.1610...</msg>
<status status="PASS" starttime="20201030 15:56:48.489" endtime="20201030 15:56:48.497"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:48.508" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201030 15:56:48.506" endtime="20201030 15:56:48.509"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:48.514" level="INFO">VALUE: [9.176400000000112e-05, 9.168100000000318e-05, 9.118099999999574e-05, 9.151400000000087e-05, 9.104100000000004e-05, 9.122200000000191e-05, 9.167999999999676e-05, 9.129199999999976e-05, 9.161099999999839e-05, 9.159799999999829e-05, 9.163900000000447e-05, 9.152800000000044e-05, 9.115199999999712e-05, 9.112499999999746e-05, 9.16659999999972e-05, 9.173600000000198e-05, 9.138900000000422e-05, 9.123600000000148e-05, 9.18199999999994e-05, 9.108299999999875e-05, 9.193100000000343e-05, 9.127800000000019e-05, 9.133400000000541e-05, 9.169500000000275e-05, 9.159800000000523e-05, 9.166699999999667e-05, 9.142999999999651e-05, 9.137500000000465e-05, 9.144400000000302e-05, 9.140299999999685e-05, 9.188899999999778e-05, 9.134699999999857e-05, 9.158399999999872e-05, 9.14450000000025e-05, 9.161099999999839e-05, 9.104100000000004e-05, 9.107000000000559e-05, 9.195800000000309e-05, 9.165300000000404e-05, 9.138900000000422e-05, 9.162499999999796e-05, 9.105499999999961e-05, 9.183399999999897e-05, 9.176400000000112e-05, 9.172300000000189e-05, 9.126400000000062e-05, 9.168100000000318e-05, 9.183399999999897e-05, 9.166600000000413e-05, 9.159699999999882e-05]</msg>
<status status="PASS" starttime="20201030 15:56:48.511" endtime="20201030 15:56:48.516"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:48.499" endtime="20201030 15:56:48.518"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:48.528" endtime="20201030 15:56:48.550"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:48.523" endtime="20201030 15:56:48.552"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:48.520" endtime="20201030 15:56:48.552"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:47.991" endtime="20201030 15:56:48.553"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:47.989" endtime="20201030 15:56:48.553"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:48.578" endtime="20201030 15:56:48.602"></status>
</kw>
<msg timestamp="20201030 15:56:48.603" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:48.574" endtime="20201030 15:56:48.603"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:48.610" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:48.606" endtime="20201030 15:56:48.611"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:48.612" endtime="20201030 15:56:48.616"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:48.566" endtime="20201030 15:56:48.618"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:48.560" endtime="20201030 15:56:48.620"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:48.638" endtime="20201030 15:56:48.999"></status>
</kw>
<msg timestamp="20201030 15:56:49.006" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045158181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045250931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:48.635" endtime="20201030 15:56:49.007"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:49.026" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045158181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045250931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:49.009" endtime="20201030 15:56:49.027"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:49.029" endtime="20201030 15:56:49.033"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:48.627" endtime="20201030 15:56:49.035"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:48.621" endtime="20201030 15:56:49.036"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:49.047" level="INFO">${RESULT} = [{'diff': 9.275000000000255e-05}, {'diff': 9.293099999999749e-05}, {'diff': 9.234699999999957e-05}, {'diff': 9.251399999999493e-05}, {'diff': 9.212499999999846e-05}, {'diff': 9.212499999999846e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:56:49.038" endtime="20201030 15:56:49.048"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:49.058" level="INFO">${ACCURACY} = {'diff': [9.275000000000255e-05, 9.293099999999749e-05, 9.234699999999957e-05, 9.251399999999493e-05, 9.212499999999846e-05, 9.212499999999846e-05, 9.211099999999889e-05, 9.223600000000248e-05, 9.2680...</msg>
<status status="PASS" starttime="20201030 15:56:49.050" endtime="20201030 15:56:49.058"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:49.069" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201030 15:56:49.067" endtime="20201030 15:56:49.070"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:49.075" level="INFO">VALUE: [9.275000000000255e-05, 9.293099999999749e-05, 9.234699999999957e-05, 9.251399999999493e-05, 9.212499999999846e-05, 9.212499999999846e-05, 9.211099999999889e-05, 9.223600000000248e-05, 9.268099999999724e-05, 9.247300000000264e-05, 9.249999999999536e-05, 9.201400000000137e-05, 9.209799999999879e-05, 9.266600000000513e-05, 9.218100000000368e-05, 9.259699999999982e-05, 9.26529999999981e-05, 9.294499999999706e-05, 9.297199999999672e-05, 9.269500000000375e-05, 9.223599999999554e-05, 9.226300000000215e-05, 9.259699999999982e-05, 9.280500000000136e-05, 9.3027999999995e-05, 9.202800000000094e-05, 9.261099999999939e-05, 9.230500000000086e-05, 9.290300000000529e-05, 9.245800000000359e-05, 9.276299999999571e-05, 9.2945000000004e-05, 9.227800000000119e-05, 9.259799999999929e-05, 9.245799999999665e-05, 9.284700000000007e-05, 9.251400000000187e-05, 9.22079999999964e-05, 9.269399999999733e-05, 9.273700000000246e-05, 9.22079999999964e-05, 9.268100000000418e-05, 9.266699999999767e-05, 9.19729999999952e-05, 9.211100000000583e-05, 9.288899999999878e-05, 9.212499999999846e-05, 9.291699999999792e-05, 9.216699999999717e-05, 9.279199999999432e-05]</msg>
<status status="PASS" starttime="20201030 15:56:49.072" endtime="20201030 15:56:49.077"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:49.059" endtime="20201030 15:56:49.079"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:49.090" endtime="20201030 15:56:49.112"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:49.084" endtime="20201030 15:56:49.114"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:49.081" endtime="20201030 15:56:49.115"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:48.556" endtime="20201030 15:56:49.116"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:48.554" endtime="20201030 15:56:49.116"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:49.141" endtime="20201030 15:56:49.164"></status>
</kw>
<msg timestamp="20201030 15:56:49.165" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:49.137" endtime="20201030 15:56:49.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:49.172" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:49.168" endtime="20201030 15:56:49.173"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:49.174" endtime="20201030 15:56:49.178"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:49.129" endtime="20201030 15:56:49.180"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:49.123" endtime="20201030 15:56:49.182"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:49.200" endtime="20201030 15:56:49.554"></status>
</kw>
<msg timestamp="20201030 15:56:49.557" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043956861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044050819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:49.196" endtime="20201030 15:56:49.558"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:49.566" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043956861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044050819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:49.559" endtime="20201030 15:56:49.566"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:49.567" endtime="20201030 15:56:49.569"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:49.188" endtime="20201030 15:56:49.570"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:49.183" endtime="20201030 15:56:49.571"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:49.576" level="INFO">${RESULT} = [{'diff': 9.395799999999815e-05}, {'diff': 9.377700000000322e-05}, {'diff': 9.36659999999992e-05}, {'diff': 9.377800000000269e-05}, {'diff': 9.356900000000168e-05}, {'diff': 9.325000000000305e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:56:49.571" endtime="20201030 15:56:49.576"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:49.581" level="INFO">${ACCURACY} = {'diff': [9.395799999999815e-05, 9.377700000000322e-05, 9.36659999999992e-05, 9.377800000000269e-05, 9.356900000000168e-05, 9.325000000000305e-05, 9.307000000000065e-05, 9.312499999999946e-05, 9.39589...</msg>
<status status="PASS" starttime="20201030 15:56:49.577" endtime="20201030 15:56:49.581"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:49.586" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201030 15:56:49.585" endtime="20201030 15:56:49.587"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:49.589" level="INFO">VALUE: [9.395799999999815e-05, 9.377700000000322e-05, 9.36659999999992e-05, 9.377800000000269e-05, 9.356900000000168e-05, 9.325000000000305e-05, 9.307000000000065e-05, 9.312499999999946e-05, 9.395899999999763e-05, 9.377699999999628e-05, 9.368100000000518e-05, 9.324999999999611e-05, 9.359700000000082e-05, 9.349999999999636e-05, 9.397199999999772e-05, 9.376400000000312e-05, 9.351400000000287e-05, 9.36529999999991e-05, 9.311099999999989e-05, 9.326399999999568e-05, 9.368099999999824e-05, 9.390199999999987e-05, 9.34859999999968e-05, 9.312499999999946e-05, 9.348600000000373e-05, 9.322200000000391e-05, 9.308300000000075e-05, 9.368099999999824e-05, 9.342999999999851e-05, 9.341699999999842e-05, 9.316699999999817e-05, 9.368099999999824e-05, 9.355600000000158e-05, 9.369399999999833e-05, 9.311099999999989e-05, 9.329200000000176e-05, 9.361100000000039e-05, 9.345800000000459e-05, 9.312499999999946e-05, 9.38200000000014e-05, 9.351399999999593e-05, 9.361100000000039e-05, 9.322300000000339e-05, 9.338899999999928e-05, 9.308300000000075e-05, 9.37079999999979e-05, 9.30000000000028e-05, 9.298600000000323e-05, 9.368100000000518e-05, 9.301400000000237e-05]</msg>
<status status="PASS" starttime="20201030 15:56:49.588" endtime="20201030 15:56:49.590"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:49.582" endtime="20201030 15:56:49.591"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:49.596" endtime="20201030 15:56:49.615"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:49.593" endtime="20201030 15:56:49.616"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:49.592" endtime="20201030 15:56:49.616"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:49.118" endtime="20201030 15:56:49.617"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:49.117" endtime="20201030 15:56:49.617"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:49.628" endtime="20201030 15:56:49.648"></status>
</kw>
<msg timestamp="20201030 15:56:49.648" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:49.626" endtime="20201030 15:56:49.649"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:49.651" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:49.650" endtime="20201030 15:56:49.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:49.653" endtime="20201030 15:56:49.654"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:49.623" endtime="20201030 15:56:49.655"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:49.620" endtime="20201030 15:56:49.656"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:49.665" endtime="20201030 15:56:50.007"></status>
</kw>
<msg timestamp="20201030 15:56:50.014" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024865625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024959917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:49.663" endtime="20201030 15:56:50.015"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:50.034" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024865625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024959917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:50.017" endtime="20201030 15:56:50.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:50.037" endtime="20201030 15:56:50.043"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:49.659" endtime="20201030 15:56:50.046"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:49.657" endtime="20201030 15:56:50.048"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:50.062" level="INFO">${RESULT} = [{'diff': 9.429200000000276e-05}, {'diff': 9.436099999999767e-05}, {'diff': 9.479100000000032e-05}, {'diff': 9.473600000000151e-05}, {'diff': 9.445799999999865e-05}, {'diff': 9.46660000000002e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:56:50.050" endtime="20201030 15:56:50.063"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:50.077" level="INFO">${ACCURACY} = {'diff': [9.429200000000276e-05, 9.436099999999767e-05, 9.479100000000032e-05, 9.473600000000151e-05, 9.445799999999865e-05, 9.46660000000002e-05, 9.484700000000207e-05, 9.418100000000221e-05, 9.40969...</msg>
<status status="PASS" starttime="20201030 15:56:50.065" endtime="20201030 15:56:50.078"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:50.093" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201030 15:56:50.090" endtime="20201030 15:56:50.094"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:50.099" level="INFO">VALUE: [9.429200000000276e-05, 9.436099999999767e-05, 9.479100000000032e-05, 9.473600000000151e-05, 9.445799999999865e-05, 9.46660000000002e-05, 9.484700000000207e-05, 9.418100000000221e-05, 9.409699999999785e-05, 9.438900000000028e-05, 9.473599999999804e-05, 9.438900000000028e-05, 9.419499999999831e-05, 9.44019999999969e-05, 9.491699999999992e-05, 9.466699999999967e-05, 9.433299999999853e-05, 9.436100000000114e-05, 9.425000000000058e-05, 9.423600000000101e-05, 9.444500000000203e-05, 9.479199999999979e-05, 9.454100000000007e-05, 9.463900000000053e-05, 9.458299999999878e-05, 9.422200000000144e-05, 9.40139999999999e-05, 9.473600000000151e-05, 9.480599999999936e-05, 9.438900000000028e-05, 9.484700000000207e-05, 9.411100000000089e-05, 9.443099999999899e-05, 9.494499999999906e-05, 9.49859999999983e-05, 9.411100000000089e-05, 9.436100000000114e-05, 9.479099999999685e-05, 9.472200000000194e-05, 9.425000000000058e-05, 9.400000000000033e-05, 9.411100000000089e-05, 9.493099999999949e-05, 9.418100000000221e-05, 9.494499999999906e-05, 9.445799999999865e-05, 9.476299999999771e-05, 9.437500000000071e-05, 9.433299999999853e-05, 9.454199999999954e-05]</msg>
<status status="PASS" starttime="20201030 15:56:50.096" endtime="20201030 15:56:50.101"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:50.080" endtime="20201030 15:56:50.103"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:50.113" endtime="20201030 15:56:50.135"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:50.108" endtime="20201030 15:56:50.137"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:50.105" endtime="20201030 15:56:50.137"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:49.618" endtime="20201030 15:56:50.138"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:49.617" endtime="20201030 15:56:50.138"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:50.163" endtime="20201030 15:56:50.186"></status>
</kw>
<msg timestamp="20201030 15:56:50.187" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:50.159" endtime="20201030 15:56:50.188"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:50.194" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:50.190" endtime="20201030 15:56:50.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:50.196" endtime="20201030 15:56:50.200"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:50.152" endtime="20201030 15:56:50.202"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:50.145" endtime="20201030 15:56:50.204"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:50.221" endtime="20201030 15:56:50.585"></status>
</kw>
<msg timestamp="20201030 15:56:50.593" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043882542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043977944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:50.218" endtime="20201030 15:56:50.593"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:50.613" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043882542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043977944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:50.595" endtime="20201030 15:56:50.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:50.615" endtime="20201030 15:56:50.619"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:50.210" endtime="20201030 15:56:50.621"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:50.205" endtime="20201030 15:56:50.623"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:50.634" level="INFO">${RESULT} = [{'diff': 9.540200000000137e-05}, {'diff': 9.545799999999965e-05}, {'diff': 9.58330000000035e-05}, {'diff': 9.544400000000008e-05}, {'diff': 9.595800000000015e-05}, {'diff': 9.5333000000003e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 15:56:50.624" endtime="20201030 15:56:50.634"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:50.644" level="INFO">${ACCURACY} = {'diff': [9.540200000000137e-05, 9.545799999999965e-05, 9.58330000000035e-05, 9.544400000000008e-05, 9.595800000000015e-05, 9.5333000000003e-05, 9.533299999999606e-05, 9.49859999999983e-05, 9.55699999...</msg>
<status status="PASS" starttime="20201030 15:56:50.636" endtime="20201030 15:56:50.644"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:50.656" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201030 15:56:50.653" endtime="20201030 15:56:50.657"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:50.662" level="INFO">VALUE: [9.540200000000137e-05, 9.545799999999965e-05, 9.58330000000035e-05, 9.544400000000008e-05, 9.595800000000015e-05, 9.5333000000003e-05, 9.533299999999606e-05, 9.49859999999983e-05, 9.556999999999621e-05, 9.540300000000085e-05, 9.518000000000026e-05, 9.563899999999459e-05, 9.518000000000026e-05, 9.523600000000548e-05, 9.569499999999981e-05, 9.591700000000092e-05, 9.59859999999993e-05, 9.543099999999999e-05, 9.570899999999938e-05, 9.551400000000487e-05, 9.506999999999571e-05, 9.538900000000128e-05, 9.59859999999993e-05, 9.505500000000361e-05, 9.555500000000411e-05, 9.501400000000437e-05, 9.58609999999957e-05, 9.523600000000548e-05, 9.524999999999811e-05, 9.537499999999477e-05, 9.499999999999786e-05, 9.498699999999777e-05, 9.580500000000436e-05, 9.556899999999674e-05, 9.5333000000003e-05, 9.555599999999664e-05, 9.577800000000469e-05, 9.52079999999994e-05, 9.568000000000076e-05, 9.554199999999707e-05, 9.512499999999452e-05, 9.579100000000479e-05, 9.556900000000368e-05, 9.572199999999947e-05, 9.576399999999818e-05, 9.512499999999452e-05, 9.579199999999732e-05, 9.523599999999854e-05, 9.590300000000135e-05, 9.544499999999956e-05]</msg>
<status status="PASS" starttime="20201030 15:56:50.658" endtime="20201030 15:56:50.668"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:50.646" endtime="20201030 15:56:50.670"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:50.681" endtime="20201030 15:56:50.704"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:50.676" endtime="20201030 15:56:50.706"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:50.673" endtime="20201030 15:56:50.707"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:50.141" endtime="20201030 15:56:50.707"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:50.139" endtime="20201030 15:56:50.708"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:50.732" endtime="20201030 15:56:50.757"></status>
</kw>
<msg timestamp="20201030 15:56:50.758" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:50.728" endtime="20201030 15:56:50.759"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:50.765" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:50.760" endtime="20201030 15:56:50.766"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:50.767" endtime="20201030 15:56:50.771"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:50.721" endtime="20201030 15:56:50.773"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:50.714" endtime="20201030 15:56:50.775"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:50.793" endtime="20201030 15:56:51.137"></status>
</kw>
<msg timestamp="20201030 15:56:51.144" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046062653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046159194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:50.789" endtime="20201030 15:56:51.145"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:51.163" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046062653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046159194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:51.147" endtime="20201030 15:56:51.164"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:51.165" endtime="20201030 15:56:51.169"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:50.781" endtime="20201030 15:56:51.171"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:50.776" endtime="20201030 15:56:51.172"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:51.183" level="INFO">${RESULT} = [{'diff': 9.65409999999986e-05}, {'diff': 9.647199999999329e-05}, {'diff': 9.7027999999999e-05}, {'diff': 9.66660000000022e-05}, {'diff': 9.655499999999817e-05}, {'diff': 9.64859999999998e-05}, {'diff...</msg>
<status status="PASS" starttime="20201030 15:56:51.174" endtime="20201030 15:56:51.183"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:51.192" level="INFO">${ACCURACY} = {'diff': [9.65409999999986e-05, 9.647199999999329e-05, 9.7027999999999e-05, 9.66660000000022e-05, 9.655499999999817e-05, 9.64859999999998e-05, 9.608299999999681e-05, 9.657000000000415e-05, 9.680599999...</msg>
<status status="PASS" starttime="20201030 15:56:51.185" endtime="20201030 15:56:51.193"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:51.204" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201030 15:56:51.201" endtime="20201030 15:56:51.204"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:51.209" level="INFO">VALUE: [9.65409999999986e-05, 9.647199999999329e-05, 9.7027999999999e-05, 9.66660000000022e-05, 9.655499999999817e-05, 9.64859999999998e-05, 9.608299999999681e-05, 9.657000000000415e-05, 9.68059999999979e-05, 9.623599999999954e-05, 9.670900000000038e-05, 9.609800000000279e-05, 9.651299999999946e-05, 9.654199999999807e-05, 9.676400000000612e-05, 9.658300000000425e-05, 9.691700000000192e-05, 9.633299999999706e-05, 9.627799999999825e-05, 9.601399999999843e-05, 9.622299999999945e-05, 9.649999999999936e-05, 9.649999999999936e-05, 9.619400000000083e-05, 9.599999999999886e-05, 9.612499999999552e-05, 9.690300000000235e-05, 9.627800000000519e-05, 9.661099999999645e-05, 9.620899999999988e-05, 9.629099999999835e-05, 9.619500000000031e-05, 9.655499999999817e-05, 9.679099999999885e-05, 9.680499999999842e-05, 9.691700000000192e-05, 9.61530000000016e-05, 9.655499999999817e-05, 9.65130000000064e-05, 9.69860000000003e-05, 9.693100000000149e-05, 9.649999999999936e-05, 9.655500000000511e-05, 9.649999999999936e-05, 9.681899999999799e-05, 9.679099999999885e-05, 9.676399999999918e-05, 9.666700000000167e-05, 9.64859999999998e-05, 9.687500000000321e-05]</msg>
<status status="PASS" starttime="20201030 15:56:51.206" endtime="20201030 15:56:51.211"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:51.194" endtime="20201030 15:56:51.212"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:51.223" endtime="20201030 15:56:51.245"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:51.217" endtime="20201030 15:56:51.247"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:51.215" endtime="20201030 15:56:51.248"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:50.710" endtime="20201030 15:56:51.248"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:50.709" endtime="20201030 15:56:51.249"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:51.272" endtime="20201030 15:56:51.294"></status>
</kw>
<msg timestamp="20201030 15:56:51.296" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:51.268" endtime="20201030 15:56:51.296"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:51.302" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:51.298" endtime="20201030 15:56:51.303"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:51.304" endtime="20201030 15:56:51.308"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:51.261" endtime="20201030 15:56:51.310"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:51.255" endtime="20201030 15:56:51.311"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:51.328" endtime="20201030 15:56:51.669"></status>
</kw>
<msg timestamp="20201030 15:56:51.676" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041420542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041517931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:51.325" endtime="20201030 15:56:51.676"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:51.695" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041420542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041517931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:51.678" endtime="20201030 15:56:51.696"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:51.697" endtime="20201030 15:56:51.701"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:51.317" endtime="20201030 15:56:51.703"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:51.313" endtime="20201030 15:56:51.704"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:51.715" level="INFO">${RESULT} = [{'diff': 9.738900000000328e-05}, {'diff': 9.761099999999745e-05}, {'diff': 9.706899999999824e-05}, {'diff': 9.787499999999727e-05}, {'diff': 9.745800000000165e-05}, {'diff': 9.747199999999429e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:56:51.706" endtime="20201030 15:56:51.716"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:51.727" level="INFO">${ACCURACY} = {'diff': [9.738900000000328e-05, 9.761099999999745e-05, 9.706899999999824e-05, 9.787499999999727e-05, 9.745800000000165e-05, 9.747199999999429e-05, 9.745800000000165e-05, 9.701399999999943e-05, 9.7874...</msg>
<status status="PASS" starttime="20201030 15:56:51.718" endtime="20201030 15:56:51.727"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:51.738" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201030 15:56:51.736" endtime="20201030 15:56:51.739"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:51.744" level="INFO">VALUE: [9.738900000000328e-05, 9.761099999999745e-05, 9.706899999999824e-05, 9.787499999999727e-05, 9.745800000000165e-05, 9.747199999999429e-05, 9.745800000000165e-05, 9.701399999999943e-05, 9.787499999999727e-05, 9.788900000000378e-05, 9.777799999999975e-05, 9.779099999999985e-05, 9.761099999999745e-05, 9.793000000000301e-05, 9.726399999999968e-05, 9.762500000000396e-05, 9.790299999999641e-05, 9.704199999999857e-05, 9.777799999999975e-05, 9.704199999999857e-05, 9.775000000000061e-05, 9.757000000000515e-05, 9.75409999999996e-05, 9.777700000000028e-05, 9.737500000000371e-05, 9.725000000000011e-05, 9.775000000000061e-05, 9.7415999999996e-05, 9.711099999999695e-05, 9.751399999999993e-05, 9.75279999999995e-05, 9.726399999999968e-05, 9.701299999999996e-05, 9.765299999999616e-05, 9.708299999999781e-05, 9.72080000000014e-05, 9.731999999999796e-05, 9.747200000000122e-05, 9.766700000000267e-05, 9.757000000000515e-05, 9.791699999999598e-05, 9.75279999999995e-05, 9.750000000000036e-05, 9.705499999999867e-05, 9.712500000000346e-05, 9.783299999999856e-05, 9.745800000000165e-05, 9.73609999999972e-05, 9.699999999999986e-05, 9.716700000000217e-05]</msg>
<status status="PASS" starttime="20201030 15:56:51.741" endtime="20201030 15:56:51.746"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:51.729" endtime="20201030 15:56:51.747"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:51.757" endtime="20201030 15:56:51.779"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:51.753" endtime="20201030 15:56:51.781"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:51.750" endtime="20201030 15:56:51.781"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:51.251" endtime="20201030 15:56:51.782"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:51.250" endtime="20201030 15:56:51.782"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:51.805" endtime="20201030 15:56:51.828"></status>
</kw>
<msg timestamp="20201030 15:56:51.829" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:51.802" endtime="20201030 15:56:51.830"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:51.836" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:51.832" endtime="20201030 15:56:51.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:51.838" endtime="20201030 15:56:51.842"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:51.795" endtime="20201030 15:56:51.843"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:51.789" endtime="20201030 15:56:51.845"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:51.862" endtime="20201030 15:56:52.199"></status>
</kw>
<msg timestamp="20201030 15:56:52.207" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041678903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041777236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:51.858" endtime="20201030 15:56:52.207"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:52.225" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041678903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041777236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:52.209" endtime="20201030 15:56:52.226"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:52.228" endtime="20201030 15:56:52.232"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:51.851" endtime="20201030 15:56:52.233"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:51.846" endtime="20201030 15:56:52.235"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:52.246" level="INFO">${RESULT} = [{'diff': 9.833299999999906e-05}, {'diff': 9.79860000000013e-05}, {'diff': 9.884699999999913e-05}, {'diff': 9.8333000000006e-05}, {'diff': 9.804199999999957e-05}, {'diff': 9.831999999999896e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 15:56:52.237" endtime="20201030 15:56:52.246"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:52.261" level="INFO">${ACCURACY} = {'diff': [9.833299999999906e-05, 9.79860000000013e-05, 9.884699999999913e-05, 9.8333000000006e-05, 9.804199999999957e-05, 9.831999999999896e-05, 9.890299999999741e-05, 9.88059999999999e-05, 9.87500000...</msg>
<status status="PASS" starttime="20201030 15:56:52.248" endtime="20201030 15:56:52.261"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:52.272" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201030 15:56:52.270" endtime="20201030 15:56:52.273"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:52.278" level="INFO">VALUE: [9.833299999999906e-05, 9.79860000000013e-05, 9.884699999999913e-05, 9.8333000000006e-05, 9.804199999999957e-05, 9.831999999999896e-05, 9.890299999999741e-05, 9.88059999999999e-05, 9.875000000000161e-05, 9.806899999999924e-05, 9.805499999999967e-05, 9.877799999999382e-05, 9.872200000000247e-05, 9.845799999999572e-05, 9.857000000000615e-05, 9.826400000000068e-05, 9.856999999999921e-05, 9.850000000000136e-05, 9.829199999999982e-05, 9.862499999999802e-05, 9.834699999999863e-05, 9.829199999999982e-05, 9.867999999999683e-05, 9.80410000000001e-05, 9.833299999999906e-05, 9.834699999999863e-05, 9.834699999999863e-05, 9.833399999999853e-05, 9.890299999999741e-05, 9.893000000000401e-05, 9.881899999999999e-05, 9.855500000000017e-05, 9.844399999999615e-05, 9.890299999999741e-05, 9.877800000000075e-05, 9.858399999999878e-05, 9.877800000000075e-05, 9.844500000000256e-05, 9.854200000000007e-05, 9.895900000000263e-05, 9.845800000000265e-05, 9.881899999999999e-05, 9.823600000000154e-05, 9.834699999999863e-05, 9.868100000000324e-05, 9.827800000000025e-05, 9.886100000000564e-05, 9.88609999999987e-05, 9.809699999999838e-05, 9.884800000000554e-05]</msg>
<status status="PASS" starttime="20201030 15:56:52.274" endtime="20201030 15:56:52.279"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:52.263" endtime="20201030 15:56:52.281"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:52.290" endtime="20201030 15:56:52.312"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:52.286" endtime="20201030 15:56:52.314"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:52.283" endtime="20201030 15:56:52.314"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:51.784" endtime="20201030 15:56:52.315"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:51.783" endtime="20201030 15:56:52.316"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:52.339" endtime="20201030 15:56:52.362"></status>
</kw>
<msg timestamp="20201030 15:56:52.363" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:52.335" endtime="20201030 15:56:52.363"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:52.369" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:52.365" endtime="20201030 15:56:52.370"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:52.371" endtime="20201030 15:56:52.375"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:52.328" endtime="20201030 15:56:52.377"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:52.322" endtime="20201030 15:56:52.378"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:52.395" endtime="20201030 15:56:52.734"></status>
</kw>
<msg timestamp="20201030 15:56:52.742" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041378917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041478306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:52.392" endtime="20201030 15:56:52.742"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:52.761" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041378917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041478306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:52.744" endtime="20201030 15:56:52.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:52.764" endtime="20201030 15:56:52.768"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:52.384" endtime="20201030 15:56:52.770"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:52.380" endtime="20201030 15:56:52.771"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:52.782" level="INFO">${RESULT} = [{'diff': 9.938899999999834e-05}, {'diff': 9.990199999999894e-05}, {'diff': 9.976299999999577e-05}, {'diff': 9.931900000000049e-05}, {'diff': 9.994400000000458e-05}, {'diff': 9.995799999999722e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:56:52.773" endtime="20201030 15:56:52.783"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:52.792" level="INFO">${ACCURACY} = {'diff': [9.938899999999834e-05, 9.990199999999894e-05, 9.976299999999577e-05, 9.931900000000049e-05, 9.994400000000458e-05, 9.995799999999722e-05, 9.961099999999945e-05, 9.900000000000186e-05, 9.8945...</msg>
<status status="PASS" starttime="20201030 15:56:52.784" endtime="20201030 15:56:52.792"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:52.803" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201030 15:56:52.800" endtime="20201030 15:56:52.804"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:52.808" level="INFO">VALUE: [9.938899999999834e-05, 9.990199999999894e-05, 9.976299999999577e-05, 9.931900000000049e-05, 9.994400000000458e-05, 9.995799999999722e-05, 9.961099999999945e-05, 9.900000000000186e-05, 9.894500000000306e-05, 9.990300000000535e-05, 9.93479999999991e-05, 9.98609999999997e-05, 9.945799999999672e-05, 9.940199999999844e-05, 9.959699999999988e-05, 9.977800000000175e-05, 9.957000000000021e-05, 9.912499999999852e-05, 9.994499999999712e-05, 9.959799999999935e-05, 9.93479999999991e-05, 9.941600000000494e-05, 9.934699999999963e-05, 9.991699999999798e-05, 9.945800000000365e-05, 9.905500000000067e-05, 9.915299999999766e-05, 9.997199999999679e-05, 9.897199999999579e-05, 9.900000000000186e-05, 9.977800000000175e-05, 9.958300000000031e-05, 9.994400000000458e-05, 9.92359999999956e-05, 9.959699999999988e-05, 9.966699999999773e-05, 9.940299999999791e-05, 9.934699999999963e-05, 9.899999999999493e-05, 9.990299999999841e-05, 9.93479999999991e-05, 9.916699999999723e-05, 9.993099999999755e-05, 9.955500000000117e-05, 9.934699999999963e-05, 9.97080000000039e-05, 9.90139999999945e-05, 9.966700000000467e-05, 9.912499999999852e-05, 9.968100000000424e-05]</msg>
<status status="PASS" starttime="20201030 15:56:52.805" endtime="20201030 15:56:52.810"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:52.793" endtime="20201030 15:56:52.812"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:52.821" endtime="20201030 15:56:52.843"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:52.817" endtime="20201030 15:56:52.844"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:52.814" endtime="20201030 15:56:52.845"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:52.318" endtime="20201030 15:56:52.846"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:52.316" endtime="20201030 15:56:52.846"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:52.869" endtime="20201030 15:56:52.894"></status>
</kw>
<msg timestamp="20201030 15:56:52.895" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:52.866" endtime="20201030 15:56:52.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:52.901" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:52.897" endtime="20201030 15:56:52.902"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:52.904" endtime="20201030 15:56:52.908"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:52.859" endtime="20201030 15:56:52.909"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:52.853" endtime="20201030 15:56:52.911"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:52.928" endtime="20201030 15:56:53.267"></status>
</kw>
<msg timestamp="20201030 15:56:53.274" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042974417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043074833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:52.924" endtime="20201030 15:56:53.274"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:53.292" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042974417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043074833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:53.276" endtime="20201030 15:56:53.293"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:53.295" endtime="20201030 15:56:53.298"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:52.917" endtime="20201030 15:56:53.300"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:52.912" endtime="20201030 15:56:53.302"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:53.312" level="INFO">${RESULT} = [{'diff': 0.000100415999999999}, {'diff': 0.00010001400000000243}, {'diff': 0.00010091699999999898}, {'diff': 0.0001005689999999948}, {'diff': 0.0001000139999999955}, {'diff': 0.00010022200000000397},...</msg>
<status status="PASS" starttime="20201030 15:56:53.303" endtime="20201030 15:56:53.312"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:53.321" level="INFO">${ACCURACY} = {'diff': [0.000100415999999999, 0.00010001400000000243, 0.00010091699999999898, 0.0001005689999999948, 0.0001000139999999955, 0.00010022200000000397, 0.00010065199999999969, 0.00010019499999999737, 0....</msg>
<status status="PASS" starttime="20201030 15:56:53.314" endtime="20201030 15:56:53.322"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:53.332" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201030 15:56:53.330" endtime="20201030 15:56:53.333"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:53.338" level="INFO">VALUE: [0.000100415999999999, 0.00010001400000000243, 0.00010091699999999898, 0.0001005689999999948, 0.0001000139999999955, 0.00010022200000000397, 0.00010065199999999969, 0.00010019499999999737, 0.00010081900000000199, 0.00010090199999999994, 0.00010009700000000038, 0.0001001939999999979, 0.0001002359999999966, 0.00010083300000000156, 0.00010041699999999848, 0.00010047199999999729, 0.0001008060000000019, 0.00010045900000000413, 0.00010069400000000533, 0.0001002359999999966, 0.00010065299999999916, 0.00010099999999999693, 0.0001003610000000002, 0.00010093100000000549, 0.0001008060000000019, 0.00010044399999999815, 0.00010020899999999694, 0.00010037499999999977, 0.00010033300000000106, 0.000100028000000002, 0.0001001660000000057, 0.00010090299999999941, 0.00010047200000000422, 0.00010069499999999787, 0.00010023600000000354, 0.00010095799999999822, 0.00010038799999999987, 0.00010076399999999625, 0.0001009159999999995, 0.00010097200000000472, 0.00010099999999999693, 0.00010057000000000121, 0.00010065299999999916, 0.00010056900000000174, 0.00010079199999999539, 0.00010027799999999532, 0.00010034700000000063, 0.00010090299999999941, 0.00010037499999999977, 0.00010029199999999489]</msg>
<status status="PASS" starttime="20201030 15:56:53.335" endtime="20201030 15:56:53.339"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:53.323" endtime="20201030 15:56:53.341"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:53.352" endtime="20201030 15:56:53.374"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:53.346" endtime="20201030 15:56:53.376"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:53.343" endtime="20201030 15:56:53.376"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:52.848" endtime="20201030 15:56:53.377"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:52.847" endtime="20201030 15:56:53.377"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:53.392" endtime="20201030 15:56:53.411"></status>
</kw>
<msg timestamp="20201030 15:56:53.412" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:53.391" endtime="20201030 15:56:53.412"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:53.414" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:53.413" endtime="20201030 15:56:53.415"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:53.416" endtime="20201030 15:56:53.418"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:53.387" endtime="20201030 15:56:53.418"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:53.384" endtime="20201030 15:56:53.419"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:53.427" endtime="20201030 15:56:53.713"></status>
</kw>
<msg timestamp="20201030 15:56:53.716" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031805542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031907083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:53.425" endtime="20201030 15:56:53.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:53.724" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031805542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031907083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:53.717" endtime="20201030 15:56:53.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:53.726" endtime="20201030 15:56:53.727"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:53.422" endtime="20201030 15:56:53.728"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:53.420" endtime="20201030 15:56:53.729"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:53.734" level="INFO">${RESULT} = [{'diff': 0.0001015410000000036}, {'diff': 0.0001011809999999988}, {'diff': 0.00010105499999999573}, {'diff': 0.0001017359999999981}, {'diff': 0.00010157000000000221}, {'diff': 0.00010145799999999872}...</msg>
<status status="PASS" starttime="20201030 15:56:53.730" endtime="20201030 15:56:53.734"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:53.739" level="INFO">${ACCURACY} = {'diff': [0.0001015410000000036, 0.0001011809999999988, 0.00010105499999999573, 0.0001017359999999981, 0.00010157000000000221, 0.00010145799999999872, 0.00010190300000000041, 0.0001013480000000011, 0....</msg>
<status status="PASS" starttime="20201030 15:56:53.735" endtime="20201030 15:56:53.739"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:53.744" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201030 15:56:53.743" endtime="20201030 15:56:53.744"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:53.747" level="INFO">VALUE: [0.0001015410000000036, 0.0001011809999999988, 0.00010105499999999573, 0.0001017359999999981, 0.00010157000000000221, 0.00010145799999999872, 0.00010190300000000041, 0.0001013480000000011, 0.00010120899999999794, 0.0001013480000000011, 0.00010184699999999519, 0.00010100000000000386, 0.00010127699999999684, 0.00010116599999999976, 0.0001017359999999981, 0.00010162499999999408, 0.0001011809999999988, 0.00010193099999999955, 0.00010187500000000127, 0.0001011530000000066, 0.0001009860000000043, 0.0001011939999999989, 0.00010173600000000504, 0.0001017359999999981, 0.00010137500000000077, 0.00010108400000000128, 0.00010106900000000224, 0.00010157000000000221, 0.00010143100000000599, 0.00010191699999999998, 0.00010163899999999365, 0.00010112500000000052, 0.00010112500000000052, 0.00010105499999999573, 0.00010145799999999872, 0.00010102799999999607, 0.000101513999999997, 0.00010120799999999847, 0.00010126399999999675, 0.00010138900000000034, 0.00010155600000000264, 0.00010116699999999923, 0.00010177699999999734, 0.00010172199999999854, 0.00010116699999999923, 0.00010137500000000077, 0.0001015280000000035, 0.00010177799999999682, 0.00010124999999999718, 0.00010194500000000606]</msg>
<status status="PASS" starttime="20201030 15:56:53.745" endtime="20201030 15:56:53.747"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:53.740" endtime="20201030 15:56:53.748"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:53.753" endtime="20201030 15:56:53.772"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:53.751" endtime="20201030 15:56:53.773"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:53.749" endtime="20201030 15:56:53.773"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:53.379" endtime="20201030 15:56:53.774"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:53.378" endtime="20201030 15:56:53.774"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:53.786" endtime="20201030 15:56:53.808"></status>
</kw>
<msg timestamp="20201030 15:56:53.809" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:53.784" endtime="20201030 15:56:53.809"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:53.815" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:53.811" endtime="20201030 15:56:53.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:53.817" endtime="20201030 15:56:53.821"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:53.780" endtime="20201030 15:56:53.823"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:53.777" endtime="20201030 15:56:53.824"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:53.841" endtime="20201030 15:56:54.180"></status>
</kw>
<msg timestamp="20201030 15:56:54.187" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026002833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026104917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:53.838" endtime="20201030 15:56:54.187"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:54.205" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026002833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026104917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:54.189" endtime="20201030 15:56:54.206"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:54.208" endtime="20201030 15:56:54.211"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:53.831" endtime="20201030 15:56:54.213"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:53.826" endtime="20201030 15:56:54.215"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:54.225" level="INFO">${RESULT} = [{'diff': 0.00010208399999999881}, {'diff': 0.00010295800000000022}, {'diff': 0.00010245800000000319}, {'diff': 0.00010294399999999718}, {'diff': 0.00010270799999999997}, {'diff': 0.000102985999999999...</msg>
<status status="PASS" starttime="20201030 15:56:54.216" endtime="20201030 15:56:54.225"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:54.236" level="INFO">${ACCURACY} = {'diff': [0.00010208399999999881, 0.00010295800000000022, 0.00010245800000000319, 0.00010294399999999718, 0.00010270799999999997, 0.00010298599999999936, 0.00010269499999999987, 0.00010252800000000103...</msg>
<status status="PASS" starttime="20201030 15:56:54.227" endtime="20201030 15:56:54.237"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:54.247" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201030 15:56:54.245" endtime="20201030 15:56:54.248"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:54.253" level="INFO">VALUE: [0.00010208399999999881, 0.00010295800000000022, 0.00010245800000000319, 0.00010294399999999718, 0.00010270799999999997, 0.00010298599999999936, 0.00010269499999999987, 0.00010252800000000103, 0.00010201400000000097, 0.00010213900000000109, 0.00010291699999999751, 0.00010197200000000226, 0.00010290199999999847, 0.00010215299999999719, 0.00010222199999999904, 0.00010243000000000058, 0.00010226400000000122, 0.000102722000000003, 0.0001023879999999984, 0.00010255600000000017, 0.00010273699999999858, 0.00010290199999999847, 0.00010280499999999748, 0.00010249999999999843, 0.00010294399999999718, 0.00010211099999999848, 0.00010212499999999805, 0.00010240299999999744, 0.00010227800000000078, 0.00010252800000000103, 0.00010288800000000237, 0.00010254199999999714, 0.00010245799999999972, 0.00010294399999999718, 0.00010272199999999954, 0.00010276399999999825, 0.00010295800000000022, 0.00010261100000000245, 0.0001022359999999986, 0.00010279200000000085, 0.00010245900000000266, 0.00010227800000000078, 0.00010261100000000245, 0.00010288899999999837, 0.00010201400000000097, 0.00010290300000000141, 0.00010255499999999723, 0.00010229200000000382, 0.00010276400000000518, 0.00010248599999999886]</msg>
<status status="PASS" starttime="20201030 15:56:54.250" endtime="20201030 15:56:54.254"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:54.238" endtime="20201030 15:56:54.256"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:54.265" endtime="20201030 15:56:54.287"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:54.261" endtime="20201030 15:56:54.289"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:54.259" endtime="20201030 15:56:54.290"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:53.775" endtime="20201030 15:56:54.290"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:53.774" endtime="20201030 15:56:54.291"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:54.314" endtime="20201030 15:56:54.337"></status>
</kw>
<msg timestamp="20201030 15:56:54.338" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:54.310" endtime="20201030 15:56:54.338"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:54.344" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:54.340" endtime="20201030 15:56:54.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:54.346" endtime="20201030 15:56:54.350"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:54.303" endtime="20201030 15:56:54.352"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:54.297" endtime="20201030 15:56:54.353"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:54.370" endtime="20201030 15:56:54.711"></status>
</kw>
<msg timestamp="20201030 15:56:54.718" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041559764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041663403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:54.367" endtime="20201030 15:56:54.719"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:54.737" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041559764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041663403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:54.721" endtime="20201030 15:56:54.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:54.739" endtime="20201030 15:56:54.743"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:54.360" endtime="20201030 15:56:54.745"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:54.355" endtime="20201030 15:56:54.746"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:54.757" level="INFO">${RESULT} = [{'diff': 0.00010363900000000259}, {'diff': 0.00010394500000000112}, {'diff': 0.00010377799999999882}, {'diff': 0.00010366700000000173}, {'diff': 0.00010352799999999857}, {'diff': 0.000103485999999999...</msg>
<status status="PASS" starttime="20201030 15:56:54.748" endtime="20201030 15:56:54.757"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:54.766" level="INFO">${ACCURACY} = {'diff': [0.00010363900000000259, 0.00010394500000000112, 0.00010377799999999882, 0.00010366700000000173, 0.00010352799999999857, 0.00010348599999999986, 0.00010374999999999968, 0.0001038889999999959,...</msg>
<status status="PASS" starttime="20201030 15:56:54.759" endtime="20201030 15:56:54.766"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:54.777" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201030 15:56:54.775" endtime="20201030 15:56:54.778"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:54.782" level="INFO">VALUE: [0.00010363900000000259, 0.00010394500000000112, 0.00010377799999999882, 0.00010366700000000173, 0.00010352799999999857, 0.00010348599999999986, 0.00010374999999999968, 0.0001038889999999959, 0.0001036810000000013, 0.00010322200000000004, 0.00010316700000000123, 0.00010387500000000327, 0.0001033610000000032, 0.00010354200000000507, 0.00010352699999999909, 0.0001037360000000001, 0.00010341699999999454, 0.00010311099999999601, 0.00010376399999999925, 0.00010348699999999933, 0.00010343100000000105, 0.00010370900000000044, 0.00010347200000000029, 0.00010343000000000158, 0.00010337499999999583, 0.00010379099999999891, 0.00010349999999999943, 0.00010354199999999814, 0.00010304199999999764, 0.0001033060000000044, 0.00010322200000000004, 0.00010340300000000191, 0.0001036810000000013, 0.00010341700000000148, 0.00010395800000000122, 0.00010376400000000618, 0.00010334700000000363, 0.00010394400000000165, 0.00010322200000000004, 0.00010372200000000054, 0.00010348599999999986, 0.00010332000000000396, 0.0001035559999999977, 0.00010376299999999977, 0.00010358299999999737, 0.00010367999999999489, 0.00010334699999999669, 0.00010309700000000338, 0.00010376399999999925, 0.0001033339999999966]</msg>
<status status="PASS" starttime="20201030 15:56:54.779" endtime="20201030 15:56:54.784"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:54.768" endtime="20201030 15:56:54.786"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:54.796" endtime="20201030 15:56:54.818"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:54.791" endtime="20201030 15:56:54.820"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:54.788" endtime="20201030 15:56:54.820"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:54.293" endtime="20201030 15:56:54.821"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:54.292" endtime="20201030 15:56:54.821"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:54.845" endtime="20201030 15:56:54.869"></status>
</kw>
<msg timestamp="20201030 15:56:54.870" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:54.841" endtime="20201030 15:56:54.871"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:54.877" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:54.872" endtime="20201030 15:56:54.877"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:54.879" endtime="20201030 15:56:54.883"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:54.834" endtime="20201030 15:56:54.884"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:54.828" endtime="20201030 15:56:54.886"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:54.903" endtime="20201030 15:56:55.242"></status>
</kw>
<msg timestamp="20201030 15:56:55.249" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043643986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043748222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:54.900" endtime="20201030 15:56:55.249"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:55.267" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043643986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043748222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:55.251" endtime="20201030 15:56:55.268"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:55.270" endtime="20201030 15:56:55.274"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:54.892" endtime="20201030 15:56:55.275"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:54.887" endtime="20201030 15:56:55.277"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:55.287" level="INFO">${RESULT} = [{'diff': 0.0001042360000000006}, {'diff': 0.00010467999999999589}, {'diff': 0.00010398600000000036}, {'diff': 0.0001047360000000011}, {'diff': 0.00010405499999999873}, {'diff': 0.00010479199999999939...</msg>
<status status="PASS" starttime="20201030 15:56:55.278" endtime="20201030 15:56:55.288"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:55.297" level="INFO">${ACCURACY} = {'diff': [0.0001042360000000006, 0.00010467999999999589, 0.00010398600000000036, 0.0001047360000000011, 0.00010405499999999873, 0.00010479199999999939, 0.00010491700000000298, 0.00010447300000000076, ...</msg>
<status status="PASS" starttime="20201030 15:56:55.289" endtime="20201030 15:56:55.297"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:55.308" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201030 15:56:55.305" endtime="20201030 15:56:55.308"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:55.313" level="INFO">VALUE: [0.0001042360000000006, 0.00010467999999999589, 0.00010398600000000036, 0.0001047360000000011, 0.00010405499999999873, 0.00010479199999999939, 0.00010491700000000298, 0.00010447300000000076, 0.00010456999999999828, 0.00010490299999999647, 0.00010452700000000009, 0.00010418000000000233, 0.00010468000000000283, 0.00010442999999999564, 0.00010480599999999896, 0.00010488900000000384, 0.00010462499999999708, 0.00010444500000000162, 0.00010490299999999647, 0.00010494500000000212, 0.00010479099999999991, 0.00010461099999999751, 0.00010409700000000438, 0.00010498600000000136, 0.00010484699999999819, 0.00010413899999999615, 0.00010437499999999683, 0.00010469500000000187, 0.00010454199999999914, 0.00010445900000000119, 0.00010411199999999649, 0.00010429099999999941, 0.00010412500000000352, 0.00010418000000000233, 0.00010426399999999975, 0.00010430599999999846, 0.00010484699999999819, 0.00010444500000000162, 0.00010431999999999803, 0.00010413800000000362, 0.00010444500000000162, 0.00010416600000000276, 0.00010437499999999683, 0.0001045689999999988, 0.00010425000000000018, 0.00010445900000000119, 0.000104208999999994, 0.0001047219999999946, 0.00010438900000000334, 0.00010469500000000187]</msg>
<status status="PASS" starttime="20201030 15:56:55.310" endtime="20201030 15:56:55.315"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:55.298" endtime="20201030 15:56:55.316"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:55.327" endtime="20201030 15:56:55.349"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:55.321" endtime="20201030 15:56:55.351"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:55.319" endtime="20201030 15:56:55.351"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:54.824" endtime="20201030 15:56:55.352"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:54.822" endtime="20201030 15:56:55.352"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:55.376" endtime="20201030 15:56:55.399"></status>
</kw>
<msg timestamp="20201030 15:56:55.400" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:55.372" endtime="20201030 15:56:55.400"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:55.406" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:55.402" endtime="20201030 15:56:55.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:55.409" endtime="20201030 15:56:55.413"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:55.365" endtime="20201030 15:56:55.414"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:55.359" endtime="20201030 15:56:55.416"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:55.433" endtime="20201030 15:56:55.770"></status>
</kw>
<msg timestamp="20201030 15:56:55.777" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041899236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042004431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:55.429" endtime="20201030 15:56:55.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:55.796" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041899236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042004431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:55.780" endtime="20201030 15:56:55.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:55.798" endtime="20201030 15:56:55.802"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:55.422" endtime="20201030 15:56:55.804"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:55.417" endtime="20201030 15:56:55.805"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:55.816" level="INFO">${RESULT} = [{'diff': 0.00010519500000000237}, {'diff': 0.00010576299999999483}, {'diff': 0.00010529100000000041}, {'diff': 0.00010583299999999962}, {'diff': 0.00010562499999999808}, {'diff': 0.000105347000000005...</msg>
<status status="PASS" starttime="20201030 15:56:55.807" endtime="20201030 15:56:55.816"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:55.826" level="INFO">${ACCURACY} = {'diff': [0.00010519500000000237, 0.00010576299999999483, 0.00010529100000000041, 0.00010583299999999962, 0.00010562499999999808, 0.00010534700000000563, 0.00010566699999999679, 0.00010541700000000348...</msg>
<status status="PASS" starttime="20201030 15:56:55.818" endtime="20201030 15:56:55.827"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:55.838" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201030 15:56:55.836" endtime="20201030 15:56:55.839"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:55.844" level="INFO">VALUE: [0.00010519500000000237, 0.00010576299999999483, 0.00010529100000000041, 0.00010583299999999962, 0.00010562499999999808, 0.00010534700000000563, 0.00010566699999999679, 0.00010541700000000348, 0.00010600000000000193, 0.00010531999999999903, 0.00010512499999999758, 0.00010512499999999758, 0.00010512500000000452, 0.00010555500000000023, 0.0001050689999999993, 0.0001056810000000033, 0.00010529199999999989, 0.00010561099999999851, 0.0001051810000000028, 0.0001055559999999997, 0.00010537500000000477, 0.00010562500000000502, 0.00010584699999999919, 0.00010598599999999542, 0.00010562499999999808, 0.00010509699999999844, 0.00010543100000000305, 0.00010554200000000014, 0.00010591700000000398, 0.00010567999999999689, 0.00010595800000000322, 0.00010594399999999671, 0.00010580500000000048, 0.00010522200000000204, 0.00010509699999999844, 0.0001058889999999979, 0.00010509699999999844, 0.00010544500000000262, 0.00010534799999999817, 0.00010513800000000462, 0.00010545800000000272, 0.00010581900000000005, 0.0001058610000000057, 0.00010541700000000348, 0.0001055559999999997, 0.00010502800000000007, 0.00010509700000000538, 0.00010523599999999467, 0.00010588900000000484, 0.0001055559999999997]</msg>
<status status="PASS" starttime="20201030 15:56:55.841" endtime="20201030 15:56:55.850"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:55.828" endtime="20201030 15:56:55.852"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:55.862" endtime="20201030 15:56:55.883"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:55.857" endtime="20201030 15:56:55.885"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:55.855" endtime="20201030 15:56:55.886"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:55.355" endtime="20201030 15:56:55.887"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:55.353" endtime="20201030 15:56:55.887"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:55.910" endtime="20201030 15:56:55.933"></status>
</kw>
<msg timestamp="20201030 15:56:55.934" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:55.907" endtime="20201030 15:56:55.934"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:55.940" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:55.936" endtime="20201030 15:56:55.941"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:55.943" endtime="20201030 15:56:55.947"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:55.899" endtime="20201030 15:56:55.948"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:55.893" endtime="20201030 15:56:55.950"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:55.967" endtime="20201030 15:56:56.304"></status>
</kw>
<msg timestamp="20201030 15:56:56.311" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041759208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041865847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:55.963" endtime="20201030 15:56:56.312"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:56.330" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041759208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041865847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:56.314" endtime="20201030 15:56:56.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:56.332" endtime="20201030 15:56:56.336"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:55.956" endtime="20201030 15:56:56.338"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:55.951" endtime="20201030 15:56:56.339"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:56.349" level="INFO">${RESULT} = [{'diff': 0.00010663899999999865}, {'diff': 0.00010659699999999994}, {'diff': 0.00010620800000000347}, {'diff': 0.00010612499999999858}, {'diff': 0.00010595800000000322}, {'diff': 0.000106138999999998...</msg>
<status status="PASS" starttime="20201030 15:56:56.341" endtime="20201030 15:56:56.350"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:56.360" level="INFO">${ACCURACY} = {'diff': [0.00010663899999999865, 0.00010659699999999994, 0.00010620800000000347, 0.00010612499999999858, 0.00010595800000000322, 0.00010613899999999815, 0.00010645900000000319, 0.00010662499999999908...</msg>
<status status="PASS" starttime="20201030 15:56:56.351" endtime="20201030 15:56:56.361"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:56.372" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201030 15:56:56.369" endtime="20201030 15:56:56.372"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:56.377" level="INFO">VALUE: [0.00010663899999999865, 0.00010659699999999994, 0.00010620800000000347, 0.00010612499999999858, 0.00010595800000000322, 0.00010613899999999815, 0.00010645900000000319, 0.00010662499999999908, 0.000106514000000002, 0.00010629099999999447, 0.00010634699999999969, 0.000106514000000002, 0.0001060140000000015, 0.00010644499999999668, 0.00010679099999999497, 0.00010641699999999754, 0.00010618099999999686, 0.00010691599999999857, 0.00010638799999999893, 0.00010683300000000062, 0.00010676400000000225, 0.00010605500000000073, 0.00010645899999999625, 0.00010694499999999718, 0.00010691599999999857, 0.00010620900000000294, 0.00010668099999999736, 0.00010662500000000602, 0.00010601300000000202, 0.00010679100000000191, 0.00010633300000000012, 0.0001067360000000031, 0.00010634699999999969, 0.00010602800000000107, 0.00010615299999999772, 0.00010612499999999858, 0.0001063339999999996, 0.00010684700000000019, 0.00010611099999999901, 0.0001066940000000044, 0.00010658300000000037, 0.00010620800000000347, 0.00010612500000000552, 0.00010612500000000552, 0.00010686099999999976, 0.0001066810000000043, 0.00010630600000000046, 0.00010694400000000465, 0.00010694399999999771, 0.00010670799999999703]</msg>
<status status="PASS" starttime="20201030 15:56:56.374" endtime="20201030 15:56:56.379"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:56.362" endtime="20201030 15:56:56.380"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:56.390" endtime="20201030 15:56:56.411"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:56.385" endtime="20201030 15:56:56.413"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:56.383" endtime="20201030 15:56:56.414"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:55.889" endtime="20201030 15:56:56.414"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:55.888" endtime="20201030 15:56:56.415"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:56.438" endtime="20201030 15:56:56.461"></status>
</kw>
<msg timestamp="20201030 15:56:56.462" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:56.435" endtime="20201030 15:56:56.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:56.469" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:56.465" endtime="20201030 15:56:56.469"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:56.471" endtime="20201030 15:56:56.475"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:56.427" endtime="20201030 15:56:56.477"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:56.421" endtime="20201030 15:56:56.478"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:56.495" endtime="20201030 15:56:56.835"></status>
</kw>
<msg timestamp="20201030 15:56:56.842" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041827986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041935792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:56.492" endtime="20201030 15:56:56.843"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:56.861" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041827986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041935792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:56.845" endtime="20201030 15:56:56.862"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:56.863" endtime="20201030 15:56:56.868"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:56.484" endtime="20201030 15:56:56.869"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:56.479" endtime="20201030 15:56:56.871"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:56.882" level="INFO">${RESULT} = [{'diff': 0.00010780600000000196}, {'diff': 0.00010708299999999393}, {'diff': 0.00010737499999999983}, {'diff': 0.00010731900000000155}, {'diff': 0.0001077219999999976}, {'diff': 0.0001072919999999949...</msg>
<status status="PASS" starttime="20201030 15:56:56.873" endtime="20201030 15:56:56.882"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:56.892" level="INFO">${ACCURACY} = {'diff': [0.00010780600000000196, 0.00010708299999999393, 0.00010737499999999983, 0.00010731900000000155, 0.0001077219999999976, 0.00010729199999999495, 0.00010745800000000472, 0.00010711100000000001,...</msg>
<status status="PASS" starttime="20201030 15:56:56.884" endtime="20201030 15:56:56.892"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:56.903" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201030 15:56:56.900" endtime="20201030 15:56:56.904"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:56.908" level="INFO">VALUE: [0.00010780600000000196, 0.00010708299999999393, 0.00010737499999999983, 0.00010731900000000155, 0.0001077219999999976, 0.00010729199999999495, 0.00010745800000000472, 0.00010711100000000001, 0.00010704200000000164, 0.00010762500000000008, 0.00010738799999999993, 0.00010701299999999608, 0.00010705500000000173, 0.00010770799999999803, 0.00010781899999999511, 0.00010740299999999897, 0.0001075560000000017, 0.00010777800000000282, 0.00010790299999999947, 0.00010797200000000479, 0.00010737500000000677, 0.00010783300000000162, 0.00010776400000000325, 0.00010744399999999821, 0.00010751399999999606, 0.00010783300000000162, 0.00010716700000000523, 0.00010711100000000001, 0.00010726400000000275, 0.00010780600000000196, 0.0001070140000000025, 0.00010767999999999889, 0.00010740299999999897, 0.00010784800000000067, 0.00010744399999999821, 0.00010765299999999922, 0.0001073889999999994, 0.00010758299999999443, 0.00010751299999999658, 0.00010767999999999889, 0.00010737499999999983, 0.00010763800000000018, 0.00010755500000000223, 0.00010790299999999947, 0.00010784700000000119, 0.00010795799999999828, 0.00010790299999999947, 0.0001073889999999994, 0.00010774999999999674, 0.00010712499999999958]</msg>
<status status="PASS" starttime="20201030 15:56:56.905" endtime="20201030 15:56:56.910"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:56.893" endtime="20201030 15:56:56.912"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:56.921" endtime="20201030 15:56:56.943"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:56.917" endtime="20201030 15:56:56.945"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:56.914" endtime="20201030 15:56:56.945"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:56.417" endtime="20201030 15:56:56.946"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:56.416" endtime="20201030 15:56:56.946"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.493" endtime="20201030 15:56:56.947"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201030 15:56:02.326" endtime="20201030 15:56:56.948" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:56.965" endtime="20201030 15:56:56.987"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:56.962" endtime="20201030 15:56:56.989"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:57.028" endtime="20201030 15:56:57.042"></status>
</kw>
<msg timestamp="20201030 15:56:57.043" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:57.025" endtime="20201030 15:56:57.043"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:57.046" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:57.044" endtime="20201030 15:56:57.047"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:56:57.049" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:56:57.047" endtime="20201030 15:56:57.050"></status>
</kw>
<status status="FAIL" starttime="20201030 15:56:57.018" endtime="20201030 15:56:57.051"></status>
</kw>
<status status="FAIL" starttime="20201030 15:56:57.011" endtime="20201030 15:56:57.051"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:57.009" endtime="20201030 15:56:57.052"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:56:57.056" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:56:57.055" endtime="20201030 15:56:57.056"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:57.053" endtime="20201030 15:56:57.056"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:57.001" endtime="20201030 15:56:57.056"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:56.999" endtime="20201030 15:56:57.057"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:57.057" endtime="20201030 15:56:57.059"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:56.995" endtime="20201030 15:56:57.060"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:56.991" endtime="20201030 15:56:57.060"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:56.959" endtime="20201030 15:56:57.061"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:57.072" endtime="20201030 15:56:57.089"></status>
</kw>
<msg timestamp="20201030 15:56:57.089" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:57.071" endtime="20201030 15:56:57.089"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:57.092" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:57.090" endtime="20201030 15:56:57.093"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:57.094" endtime="20201030 15:56:57.096"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:57.068" endtime="20201030 15:56:57.096"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:57.065" endtime="20201030 15:56:57.097"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:57.105" endtime="20201030 15:56:57.451"></status>
</kw>
<msg timestamp="20201030 15:56:57.459" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.099109236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.099137194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:57.103" endtime="20201030 15:56:57.459"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:57.477" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.099109236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.099137194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:57.461" endtime="20201030 15:56:57.478"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:57.480" endtime="20201030 15:56:57.484"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:57.100" endtime="20201030 15:56:57.486"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:57.098" endtime="20201030 15:56:57.487"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:57.498" level="INFO">${RESULT} = [{'diff': 2.7957999999994598e-05}, {'diff': 2.8346999999998013e-05}, {'diff': 2.7514000000006256e-05}, {'diff': 2.786100000000402e-05}, {'diff': 2.7763000000000093e-05}, {'diff': 2.7666000000009516e-0...</msg>
<status status="PASS" starttime="20201030 15:56:57.489" endtime="20201030 15:56:57.498"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:57.508" level="INFO">${ACCURACY} = {'diff': [2.7957999999994598e-05, 2.8346999999998013e-05, 2.7514000000006256e-05, 2.786100000000402e-05, 2.7763000000000093e-05, 2.7666000000009516e-05, 2.8430000000009836e-05, 2.786100000000402e-05, ...</msg>
<status status="PASS" starttime="20201030 15:56:57.500" endtime="20201030 15:56:57.508"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:57.519" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201030 15:56:57.516" endtime="20201030 15:56:57.519"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:57.524" level="INFO">VALUE: [2.7957999999994598e-05, 2.8346999999998013e-05, 2.7514000000006256e-05, 2.786100000000402e-05, 2.7763000000000093e-05, 2.7666000000009516e-05, 2.8430000000009836e-05, 2.786100000000402e-05, 2.7652000000003008e-05, 2.8444000000002467e-05, 2.8430000000009836e-05, 2.7985999999993738e-05, 2.833300000000538e-05, 2.7542000000005395e-05, 2.765300000000248e-05, 2.7832999999991004e-05, 2.8042000000005896e-05, 2.84170000000028e-05, 2.7555999999998027e-05, 2.80970000000047e-05, 2.7832999999991004e-05, 2.7527999999998887e-05, 2.768100000000162e-05, 2.7944000000001967e-05, 2.7666999999995112e-05, 2.812500000000384e-05, 2.7513999999992378e-05, 2.8444999999988063e-05, 2.8334000000004855e-05, 2.8000000000000247e-05, 2.8402999999996292e-05, 2.812500000000384e-05, 2.7750000000006936e-05, 2.8194999999994752e-05, 2.7776999999992724e-05, 2.8222000000008296e-05, 2.7763000000000093e-05, 2.8402999999996292e-05, 2.758300000001157e-05, 2.7778000000006076e-05, 2.842999999999596e-05, 2.8346999999998013e-05, 2.787500000001053e-05, 2.8041999999992018e-05, 2.7457999999994098e-05, 2.8208000000001787e-05, 2.7874999999996652e-05, 2.8208000000001787e-05, 2.765300000000248e-05, 2.7542000000005395e-05]</msg>
<status status="PASS" starttime="20201030 15:56:57.521" endtime="20201030 15:56:57.525"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:57.509" endtime="20201030 15:56:57.527"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:57.536" endtime="20201030 15:56:57.558"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:57.532" endtime="20201030 15:56:57.560"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:57.529" endtime="20201030 15:56:57.560"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:57.063" endtime="20201030 15:56:57.561"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:57.062" endtime="20201030 15:56:57.561"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:57.584" endtime="20201030 15:56:57.605"></status>
</kw>
<msg timestamp="20201030 15:56:57.606" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:57.581" endtime="20201030 15:56:57.607"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:57.612" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:57.609" endtime="20201030 15:56:57.613"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:57.615" endtime="20201030 15:56:57.619"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:57.574" endtime="20201030 15:56:57.620"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:57.568" endtime="20201030 15:56:57.622"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:57.639" endtime="20201030 15:56:57.979"></status>
</kw>
<msg timestamp="20201030 15:56:57.986" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043757389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043785333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:57.635" endtime="20201030 15:56:57.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:58.005" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043757389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043785333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:57.988" endtime="20201030 15:56:58.006"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:58.007" endtime="20201030 15:56:58.011"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:57.628" endtime="20201030 15:56:58.013"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:57.623" endtime="20201030 15:56:58.014"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:58.025" level="INFO">${RESULT} = [{'diff': 2.7944000000001967e-05}, {'diff': 2.787500000000359e-05}, {'diff': 2.8444000000002467e-05}, {'diff': 2.8152999999996042e-05}, {'diff': 2.7763999999999567e-05}, {'diff': 2.8250000000000497e-0...</msg>
<status status="PASS" starttime="20201030 15:56:58.016" endtime="20201030 15:56:58.026"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:58.035" level="INFO">${ACCURACY} = {'diff': [2.7944000000001967e-05, 2.787500000000359e-05, 2.8444000000002467e-05, 2.8152999999996042e-05, 2.7763999999999567e-05, 2.8250000000000497e-05, 2.80970000000047e-05, 2.8138999999996472e-05, 2...</msg>
<status status="PASS" starttime="20201030 15:56:58.027" endtime="20201030 15:56:58.035"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:58.046" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201030 15:56:58.043" endtime="20201030 15:56:58.047"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:58.051" level="INFO">VALUE: [2.7944000000001967e-05, 2.787500000000359e-05, 2.8444000000002467e-05, 2.8152999999996042e-05, 2.7763999999999567e-05, 2.8250000000000497e-05, 2.80970000000047e-05, 2.8138999999996472e-05, 2.787500000000359e-05, 2.8096999999997763e-05, 2.8236000000000927e-05, 2.8208000000001787e-05, 2.8000000000000247e-05, 2.8098000000004175e-05, 2.7763999999999567e-05, 2.7749999999999997e-05, 2.843100000000237e-05, 2.84170000000028e-05, 2.786100000000402e-05, 2.7541999999998457e-05, 2.8000000000000247e-05, 2.8000000000000247e-05, 2.787500000000359e-05, 2.818100000000212e-05, 2.7541999999998457e-05, 2.843100000000237e-05, 2.8374999999997152e-05, 2.8319999999998346e-05, 2.820900000000126e-05, 2.833300000000538e-05, 2.8250000000000497e-05, 2.7776999999999663e-05, 2.7763000000000093e-05, 2.788900000000316e-05, 2.80970000000047e-05, 2.7526999999999413e-05, 2.8000000000000247e-05, 2.8000000000000247e-05, 2.7749999999999997e-05, 2.787500000000359e-05, 2.7832999999997943e-05, 2.766700000000205e-05, 2.8000000000000247e-05, 2.8430000000002897e-05, 2.8138999999996472e-05, 2.8194000000002217e-05, 2.8430999999995432e-05, 2.8318999999998873e-05, 2.765300000000248e-05, 2.7749999999999997e-05]</msg>
<status status="PASS" starttime="20201030 15:56:58.048" endtime="20201030 15:56:58.052"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:58.037" endtime="20201030 15:56:58.054"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:58.065" endtime="20201030 15:56:58.087"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:58.059" endtime="20201030 15:56:58.088"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:58.056" endtime="20201030 15:56:58.089"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:57.564" endtime="20201030 15:56:58.090"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:57.562" endtime="20201030 15:56:58.090"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:58.114" endtime="20201030 15:56:58.133"></status>
</kw>
<msg timestamp="20201030 15:56:58.134" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:58.111" endtime="20201030 15:56:58.134"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:58.140" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:58.136" endtime="20201030 15:56:58.141"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:58.142" endtime="20201030 15:56:58.146"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:58.103" endtime="20201030 15:56:58.148"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:58.097" endtime="20201030 15:56:58.149"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:58.167" endtime="20201030 15:56:58.505"></status>
</kw>
<msg timestamp="20201030 15:56:58.512" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042665375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042693778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:58.163" endtime="20201030 15:56:58.513"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:58.531" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042665375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042693778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:58.514" endtime="20201030 15:56:58.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:58.534" endtime="20201030 15:56:58.537"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:58.156" endtime="20201030 15:56:58.539"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:58.151" endtime="20201030 15:56:58.541"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:58.551" level="INFO">${RESULT} = [{'diff': 2.840300000000323e-05}, {'diff': 2.8110999999997333e-05}, {'diff': 2.8110999999997333e-05}, {'diff': 2.8110999999997333e-05}, {'diff': 2.7486000000000177e-05}, {'diff': 2.7556000000004965e-0...</msg>
<status status="PASS" starttime="20201030 15:56:58.542" endtime="20201030 15:56:58.552"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:58.562" level="INFO">${ACCURACY} = {'diff': [2.840300000000323e-05, 2.8110999999997333e-05, 2.8110999999997333e-05, 2.8110999999997333e-05, 2.7486000000000177e-05, 2.7556000000004965e-05, 2.7666999999995112e-05, 2.8319999999998346e-05,...</msg>
<status status="PASS" starttime="20201030 15:56:58.553" endtime="20201030 15:56:58.563"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:58.573" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201030 15:56:58.571" endtime="20201030 15:56:58.574"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:58.579" level="INFO">VALUE: [2.840300000000323e-05, 2.8110999999997333e-05, 2.8110999999997333e-05, 2.8110999999997333e-05, 2.7486000000000177e-05, 2.7556000000004965e-05, 2.7666999999995112e-05, 2.8319999999998346e-05, 2.811100000000427e-05, 2.7568999999998123e-05, 2.8222000000001357e-05, 2.7541999999998457e-05, 2.7542000000005395e-05, 2.7554999999998553e-05, 2.7541999999998457e-05, 2.8110999999997333e-05, 2.7986000000000677e-05, 2.8208000000001787e-05, 2.7874999999996652e-05, 2.8040999999999483e-05, 2.7513999999999317e-05, 2.8332999999998443e-05, 2.8318999999998873e-05, 2.7666999999995112e-05, 2.768100000000162e-05, 2.7542000000005395e-05, 2.7652999999995542e-05, 2.8444000000002467e-05, 2.8346999999998013e-05, 2.8319999999998346e-05, 2.8208000000001787e-05, 2.844500000000194e-05, 2.7846999999997513e-05, 2.7555999999998027e-05, 2.7541999999998457e-05, 2.8333999999997916e-05, 2.7763999999999567e-05, 2.820900000000126e-05, 2.7791999999998707e-05, 2.765300000000248e-05, 2.819500000000169e-05, 2.7763999999999567e-05, 2.7763999999999567e-05, 2.8013999999999817e-05, 2.7526999999999413e-05, 2.7638999999995972e-05, 2.766599999999564e-05, 2.8332999999998443e-05, 2.8332999999998443e-05, 2.8042000000005896e-05]</msg>
<status status="PASS" starttime="20201030 15:56:58.576" endtime="20201030 15:56:58.580"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:58.564" endtime="20201030 15:56:58.582"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:58.591" endtime="20201030 15:56:58.613"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:58.587" endtime="20201030 15:56:58.615"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:58.584" endtime="20201030 15:56:58.616"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:58.092" endtime="20201030 15:56:58.617"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:58.091" endtime="20201030 15:56:58.617"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:58.640" endtime="20201030 15:56:58.659"></status>
</kw>
<msg timestamp="20201030 15:56:58.660" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:58.637" endtime="20201030 15:56:58.660"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:58.666" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:58.662" endtime="20201030 15:56:58.667"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:58.668" endtime="20201030 15:56:58.672"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:58.629" endtime="20201030 15:56:58.674"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:58.623" endtime="20201030 15:56:58.675"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:58.692" endtime="20201030 15:56:59.032"></status>
</kw>
<msg timestamp="20201030 15:56:59.039" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042455417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042483569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:58.689" endtime="20201030 15:56:59.040"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:59.058" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042455417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042483569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:59.042" endtime="20201030 15:56:59.059"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:59.061" endtime="20201030 15:56:59.064"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:58.681" endtime="20201030 15:56:59.066"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:58.677" endtime="20201030 15:56:59.067"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:59.078" level="INFO">${RESULT} = [{'diff': 2.815199999999657e-05}, {'diff': 2.8222000000001357e-05}, {'diff': 2.8319000000005812e-05}, {'diff': 2.8096999999997763e-05}, {'diff': 2.8318999999998873e-05}, {'diff': 2.7986000000000677e-0...</msg>
<status status="PASS" starttime="20201030 15:56:59.069" endtime="20201030 15:56:59.079"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:59.090" level="INFO">${ACCURACY} = {'diff': [2.815199999999657e-05, 2.8222000000001357e-05, 2.8319000000005812e-05, 2.8096999999997763e-05, 2.8318999999998873e-05, 2.7986000000000677e-05, 2.765199999999607e-05, 2.841599999999639e-05, 2...</msg>
<status status="PASS" starttime="20201030 15:56:59.080" endtime="20201030 15:56:59.090"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:59.101" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201030 15:56:59.098" endtime="20201030 15:56:59.101"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:59.106" level="INFO">VALUE: [2.815199999999657e-05, 2.8222000000001357e-05, 2.8319000000005812e-05, 2.8096999999997763e-05, 2.8318999999998873e-05, 2.7986000000000677e-05, 2.765199999999607e-05, 2.841599999999639e-05, 2.8194000000002217e-05, 2.8250000000000497e-05, 2.7874999999996652e-05, 2.8486000000001177e-05, 2.8222000000001357e-05, 2.765300000000248e-05, 2.8444000000002467e-05, 2.811100000000427e-05, 2.843100000000237e-05, 2.8110999999997333e-05, 2.8028000000006326e-05, 2.763900000000291e-05, 2.8000000000000247e-05, 2.7527999999998887e-05, 2.7749999999999997e-05, 2.7985999999993738e-05, 2.7763999999999567e-05, 2.788900000000316e-05, 2.7763999999999567e-05, 2.7888999999996222e-05, 2.7527999999998887e-05, 2.7763999999999567e-05, 2.7666999999995112e-05, 2.788799999999675e-05, 2.818100000000212e-05, 2.84170000000028e-05, 2.784700000000445e-05, 2.7986000000000677e-05, 2.8332999999998443e-05, 2.7888999999996222e-05, 2.8013999999999817e-05, 2.7541000000005922e-05, 2.7986000000000677e-05, 2.7554999999998553e-05, 2.8290999999999733e-05, 2.794399999999503e-05, 2.8305999999998777e-05, 2.786100000000402e-05, 2.768100000000162e-05, 2.8013999999999817e-05, 2.8430000000002897e-05, 2.7764000000006506e-05]</msg>
<status status="PASS" starttime="20201030 15:56:59.103" endtime="20201030 15:56:59.108"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:59.092" endtime="20201030 15:56:59.109"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:59.119" endtime="20201030 15:56:59.141"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:59.115" endtime="20201030 15:56:59.142"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:59.112" endtime="20201030 15:56:59.143"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:58.619" endtime="20201030 15:56:59.144"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:58.618" endtime="20201030 15:56:59.144"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:59.167" endtime="20201030 15:56:59.186"></status>
</kw>
<msg timestamp="20201030 15:56:59.187" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:59.164" endtime="20201030 15:56:59.188"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:59.193" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:59.189" endtime="20201030 15:56:59.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:59.196" endtime="20201030 15:56:59.200"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:59.157" endtime="20201030 15:56:59.201"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:59.151" endtime="20201030 15:56:59.203"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:59.220" endtime="20201030 15:56:59.560"></status>
</kw>
<msg timestamp="20201030 15:56:59.568" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041513847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041542111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:59.216" endtime="20201030 15:56:59.568"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:59.586" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041513847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041542111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:59.570" endtime="20201030 15:56:59.587"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:59.589" endtime="20201030 15:56:59.593"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:59.209" endtime="20201030 15:56:59.594"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:59.204" endtime="20201030 15:56:59.596"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:59.607" level="INFO">${RESULT} = [{'diff': 2.8264000000000067e-05}, {'diff': 2.811100000000427e-05}, {'diff': 2.843100000000237e-05}, {'diff': 2.80970000000047e-05}, {'diff': 2.8082999999998193e-05}, {'diff': 2.84170000000028e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:56:59.598" endtime="20201030 15:56:59.607"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:59.616" level="INFO">${ACCURACY} = {'diff': [2.8264000000000067e-05, 2.811100000000427e-05, 2.843100000000237e-05, 2.80970000000047e-05, 2.8082999999998193e-05, 2.84170000000028e-05, 2.8207999999994848e-05, 2.7652999999995542e-05, 2.78...</msg>
<status status="PASS" starttime="20201030 15:56:59.609" endtime="20201030 15:56:59.617"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:59.628" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201030 15:56:59.625" endtime="20201030 15:56:59.628"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:59.633" level="INFO">VALUE: [2.8264000000000067e-05, 2.811100000000427e-05, 2.843100000000237e-05, 2.80970000000047e-05, 2.8082999999998193e-05, 2.84170000000028e-05, 2.8207999999994848e-05, 2.7652999999995542e-05, 2.787500000000359e-05, 2.788900000000316e-05, 2.7569999999997596e-05, 2.7986000000000677e-05, 2.8096999999997763e-05, 2.7986000000000677e-05, 2.766700000000205e-05, 2.8320000000005285e-05, 2.765300000000248e-05, 2.8305999999998777e-05, 2.765300000000248e-05, 2.84170000000028e-05, 2.7862000000003495e-05, 2.842999999999596e-05, 2.8430000000002897e-05, 2.7554999999998553e-05, 2.8208000000001787e-05, 2.7776999999999663e-05, 2.8264000000000067e-05, 2.8430000000002897e-05, 2.7971999999994168e-05, 2.7666000000002577e-05, 2.8208000000001787e-05, 2.7860999999997083e-05, 2.787500000000359e-05, 2.842999999999596e-05, 2.7763999999999567e-05, 2.7958000000001537e-05, 2.8458000000002037e-05, 2.8444999999995002e-05, 2.8207999999994848e-05, 2.786100000000402e-05, 2.7777999999999137e-05, 2.8319999999998346e-05, 2.8082999999998193e-05, 2.7763999999999567e-05, 2.787500000000359e-05, 2.820900000000126e-05, 2.7694000000001717e-05, 2.7776999999999663e-05, 2.842999999999596e-05, 2.844500000000194e-05]</msg>
<status status="PASS" starttime="20201030 15:56:59.630" endtime="20201030 15:56:59.635"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:59.618" endtime="20201030 15:56:59.637"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:59.650" endtime="20201030 15:56:59.674"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:59.644" endtime="20201030 15:56:59.676"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:59.641" endtime="20201030 15:56:59.677"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:59.146" endtime="20201030 15:56:59.678"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:59.145" endtime="20201030 15:56:59.679"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:59.709" endtime="20201030 15:56:59.729"></status>
</kw>
<msg timestamp="20201030 15:56:59.730" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:59.706" endtime="20201030 15:56:59.731"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:59.736" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:59.732" endtime="20201030 15:56:59.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:59.739" endtime="20201030 15:56:59.744"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:59.697" endtime="20201030 15:56:59.746"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:59.688" endtime="20201030 15:56:59.747"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:59.764" endtime="20201030 15:57:00.124"></status>
</kw>
<msg timestamp="20201030 15:57:00.133" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.052063069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.052091222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:59.760" endtime="20201030 15:57:00.133"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:00.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.052063069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.052091222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:00.136" endtime="20201030 15:57:00.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:00.158" endtime="20201030 15:57:00.164"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:59.753" endtime="20201030 15:57:00.166"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:59.749" endtime="20201030 15:57:00.168"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:00.182" level="INFO">${RESULT} = [{'diff': 2.815300000000298e-05}, {'diff': 2.842999999999596e-05}, {'diff': 2.8388999999996722e-05}, {'diff': 2.7860999999997083e-05}, {'diff': 2.8264000000000067e-05}, {'diff': 2.7568999999998123e-05...</msg>
<status status="PASS" starttime="20201030 15:57:00.170" endtime="20201030 15:57:00.182"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:00.194" level="INFO">${ACCURACY} = {'diff': [2.815300000000298e-05, 2.842999999999596e-05, 2.8388999999996722e-05, 2.7860999999997083e-05, 2.8264000000000067e-05, 2.7568999999998123e-05, 2.7680999999994682e-05, 2.8027999999999387e-05, ...</msg>
<status status="PASS" starttime="20201030 15:57:00.184" endtime="20201030 15:57:00.195"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:00.209" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201030 15:57:00.206" endtime="20201030 15:57:00.210"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:00.216" level="INFO">VALUE: [2.815300000000298e-05, 2.842999999999596e-05, 2.8388999999996722e-05, 2.7860999999997083e-05, 2.8264000000000067e-05, 2.7568999999998123e-05, 2.7680999999994682e-05, 2.8027999999999387e-05, 2.787500000000359e-05, 2.79170000000023e-05, 2.765300000000248e-05, 2.763900000000291e-05, 2.7763999999999567e-05, 2.7791999999998707e-05, 2.8416999999995862e-05, 2.7541999999998457e-05, 2.8333999999997916e-05, 2.8138000000003938e-05, 2.8096999999997763e-05, 2.7749999999999997e-05, 2.7790999999999233e-05, 2.816700000000255e-05, 2.7555999999998027e-05, 2.763900000000291e-05, 2.8097999999997236e-05, 2.8346999999998013e-05, 2.7541999999998457e-05, 2.812500000000384e-05, 2.8000000000000247e-05, 2.786100000000402e-05, 2.808300000000513e-05, 2.7874999999996652e-05, 2.8416000000003327e-05, 2.8444000000002467e-05, 2.8290999999999733e-05, 2.7582999999997693e-05, 2.7554999999998553e-05, 2.7527999999998887e-05, 2.762500000000334e-05, 2.8222000000001357e-05, 2.8318999999998873e-05, 2.8194000000002217e-05, 2.844399999999553e-05, 2.794500000000144e-05, 2.8208000000001787e-05, 2.7555999999998027e-05, 2.7555999999998027e-05, 2.7527999999998887e-05, 2.7541999999998457e-05, 2.844500000000194e-05]</msg>
<status status="PASS" starttime="20201030 15:57:00.212" endtime="20201030 15:57:00.218"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:00.197" endtime="20201030 15:57:00.221"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:00.235" endtime="20201030 15:57:00.259"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:00.228" endtime="20201030 15:57:00.261"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:00.224" endtime="20201030 15:57:00.262"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:59.683" endtime="20201030 15:57:00.263"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:59.681" endtime="20201030 15:57:00.263"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:00.294" endtime="20201030 15:57:00.314"></status>
</kw>
<msg timestamp="20201030 15:57:00.315" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:00.290" endtime="20201030 15:57:00.315"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:00.321" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:00.317" endtime="20201030 15:57:00.322"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:00.324" endtime="20201030 15:57:00.329"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:00.280" endtime="20201030 15:57:00.331"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:00.272" endtime="20201030 15:57:00.333"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:00.354" endtime="20201030 15:57:00.692"></status>
</kw>
<msg timestamp="20201030 15:57:00.699" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.052551792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.052579875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:00.349" endtime="20201030 15:57:00.699"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:00.717" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.052551792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.052579875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:00.701" endtime="20201030 15:57:00.718"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:00.720" endtime="20201030 15:57:00.724"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:00.341" endtime="20201030 15:57:00.725"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:00.335" endtime="20201030 15:57:00.727"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:00.737" level="INFO">${RESULT} = [{'diff': 2.8082999999998193e-05}, {'diff': 2.8166999999995612e-05}, {'diff': 2.7763999999999567e-05}, {'diff': 2.8444000000002467e-05}, {'diff': 2.8430000000002897e-05}, {'diff': 2.844399999999553e-0...</msg>
<status status="PASS" starttime="20201030 15:57:00.728" endtime="20201030 15:57:00.737"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:00.748" level="INFO">${ACCURACY} = {'diff': [2.8082999999998193e-05, 2.8166999999995612e-05, 2.7763999999999567e-05, 2.8444000000002467e-05, 2.8430000000002897e-05, 2.844399999999553e-05, 2.7541999999998457e-05, 2.7763999999999567e-05,...</msg>
<status status="PASS" starttime="20201030 15:57:00.739" endtime="20201030 15:57:00.748"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:00.760" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201030 15:57:00.757" endtime="20201030 15:57:00.761"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:00.767" level="INFO">VALUE: [2.8082999999998193e-05, 2.8166999999995612e-05, 2.7763999999999567e-05, 2.8444000000002467e-05, 2.8430000000002897e-05, 2.844399999999553e-05, 2.7541999999998457e-05, 2.7763999999999567e-05, 2.843100000000237e-05, 2.783300000000488e-05, 2.7791999999998707e-05, 2.7666999999995112e-05, 2.844500000000194e-05, 2.766700000000205e-05, 2.7638999999995972e-05, 2.8388999999996722e-05, 2.8026999999999913e-05, 2.7972999999993642e-05, 2.8319999999998346e-05, 2.7499999999999747e-05, 2.834700000000495e-05, 2.7791000000006172e-05, 2.8444000000002467e-05, 2.7818999999998373e-05, 2.7763000000000093e-05, 2.8277000000000163e-05, 2.7555000000005492e-05, 2.7540999999998983e-05, 2.756900000000506e-05, 2.8444000000002467e-05, 2.767999999999521e-05, 2.7999999999993308e-05, 2.8374999999997152e-05, 2.7777999999999137e-05, 2.8290999999999733e-05, 2.8332999999998443e-05, 2.7569999999997596e-05, 2.8360999999997583e-05, 2.7749999999999997e-05, 2.8222000000001357e-05, 2.7749999999999997e-05, 2.843100000000237e-05, 2.844500000000194e-05, 2.8362000000003995e-05, 2.8207999999994848e-05, 2.7791999999998707e-05, 2.7777999999999137e-05, 2.7874999999996652e-05, 2.8110999999997333e-05, 2.80970000000047e-05]</msg>
<status status="PASS" starttime="20201030 15:57:00.763" endtime="20201030 15:57:00.769"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:00.750" endtime="20201030 15:57:00.771"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:00.783" endtime="20201030 15:57:00.806"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:00.778" endtime="20201030 15:57:00.808"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:00.774" endtime="20201030 15:57:00.808"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:00.267" endtime="20201030 15:57:00.809"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:00.265" endtime="20201030 15:57:00.809"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:00.832" endtime="20201030 15:57:00.852"></status>
</kw>
<msg timestamp="20201030 15:57:00.853" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:00.829" endtime="20201030 15:57:00.853"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:00.859" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:00.855" endtime="20201030 15:57:00.860"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:00.861" endtime="20201030 15:57:00.865"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:00.822" endtime="20201030 15:57:00.867"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:00.816" endtime="20201030 15:57:00.868"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:00.885" endtime="20201030 15:57:01.218"></status>
</kw>
<msg timestamp="20201030 15:57:01.226" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042935042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042963194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:00.881" endtime="20201030 15:57:01.226"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:01.244" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042935042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042963194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:01.228" endtime="20201030 15:57:01.245"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:01.247" endtime="20201030 15:57:01.252"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:00.874" endtime="20201030 15:57:01.254"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:00.869" endtime="20201030 15:57:01.256"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:01.268" level="INFO">${RESULT} = [{'diff': 2.8152000000003508e-05}, {'diff': 2.842999999999596e-05}, {'diff': 2.7763000000000093e-05}, {'diff': 2.8304999999999303e-05}, {'diff': 2.7540999999998983e-05}, {'diff': 2.7526999999999413e-0...</msg>
<status status="PASS" starttime="20201030 15:57:01.258" endtime="20201030 15:57:01.269"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:01.281" level="INFO">${ACCURACY} = {'diff': [2.8152000000003508e-05, 2.842999999999596e-05, 2.7763000000000093e-05, 2.8304999999999303e-05, 2.7540999999998983e-05, 2.7526999999999413e-05, 2.8194000000002217e-05, 2.80970000000047e-05, 2...</msg>
<status status="PASS" starttime="20201030 15:57:01.270" endtime="20201030 15:57:01.282"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:01.294" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201030 15:57:01.292" endtime="20201030 15:57:01.295"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:01.300" level="INFO">VALUE: [2.8152000000003508e-05, 2.842999999999596e-05, 2.7763000000000093e-05, 2.8304999999999303e-05, 2.7540999999998983e-05, 2.7526999999999413e-05, 2.8194000000002217e-05, 2.80970000000047e-05, 2.8318999999998873e-05, 2.8042000000005896e-05, 2.8000000000000247e-05, 2.7763999999999567e-05, 2.766700000000205e-05, 2.8000000000000247e-05, 2.7666999999995112e-05, 2.843100000000237e-05, 2.8264000000000067e-05, 2.7527999999998887e-05, 2.7555999999998027e-05, 2.8000000000000247e-05, 2.8222000000001357e-05, 2.8110999999997333e-05, 2.787500000000359e-05, 2.765300000000248e-05, 2.7763999999999567e-05, 2.768100000000162e-05, 2.820900000000126e-05, 2.7986000000000677e-05, 2.7986000000000677e-05, 2.788799999999675e-05, 2.7680000000002147e-05, 2.793100000000187e-05, 2.7763999999999567e-05, 2.8471999999994668e-05, 2.7986000000000677e-05, 2.790300000000273e-05, 2.8332999999998443e-05, 2.811100000000427e-05, 2.808300000000513e-05, 2.811100000000427e-05, 2.811100000000427e-05, 2.766700000000205e-05, 2.8096999999997763e-05, 2.8500000000000747e-05, 2.8291999999999207e-05, 2.7542000000005395e-05, 2.8318999999998873e-05, 2.765300000000248e-05, 2.7818999999998373e-05, 2.8096999999997763e-05]</msg>
<status status="PASS" starttime="20201030 15:57:01.297" endtime="20201030 15:57:01.301"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:01.283" endtime="20201030 15:57:01.303"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:01.313" endtime="20201030 15:57:01.334"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:01.308" endtime="20201030 15:57:01.336"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:01.306" endtime="20201030 15:57:01.337"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:00.812" endtime="20201030 15:57:01.337"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:00.810" endtime="20201030 15:57:01.338"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:01.360" endtime="20201030 15:57:01.379"></status>
</kw>
<msg timestamp="20201030 15:57:01.380" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:01.357" endtime="20201030 15:57:01.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:01.386" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:01.382" endtime="20201030 15:57:01.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:01.389" endtime="20201030 15:57:01.393"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:01.350" endtime="20201030 15:57:01.394"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:01.344" endtime="20201030 15:57:01.396"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:01.412" endtime="20201030 15:57:01.747"></status>
</kw>
<msg timestamp="20201030 15:57:01.754" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040926903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040954958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:01.409" endtime="20201030 15:57:01.755"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:01.773" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040926903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040954958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:01.757" endtime="20201030 15:57:01.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:01.775" endtime="20201030 15:57:01.779"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:01.402" endtime="20201030 15:57:01.781"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:01.397" endtime="20201030 15:57:01.782"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:01.792" level="INFO">${RESULT} = [{'diff': 2.8054999999999053e-05}, {'diff': 2.786100000000402e-05}, {'diff': 2.8319000000005812e-05}, {'diff': 2.7763999999999567e-05}, {'diff': 2.8430000000002897e-05}, {'diff': 2.8208000000001787e-0...</msg>
<status status="PASS" starttime="20201030 15:57:01.784" endtime="20201030 15:57:01.793"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:01.802" level="INFO">${ACCURACY} = {'diff': [2.8054999999999053e-05, 2.786100000000402e-05, 2.8319000000005812e-05, 2.7763999999999567e-05, 2.8430000000002897e-05, 2.8208000000001787e-05, 2.8000000000000247e-05, 2.7944000000001967e-05,...</msg>
<status status="PASS" starttime="20201030 15:57:01.794" endtime="20201030 15:57:01.802"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:01.813" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201030 15:57:01.810" endtime="20201030 15:57:01.814"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:01.819" level="INFO">VALUE: [2.8054999999999053e-05, 2.786100000000402e-05, 2.8319000000005812e-05, 2.7763999999999567e-05, 2.8430000000002897e-05, 2.8208000000001787e-05, 2.8000000000000247e-05, 2.7944000000001967e-05, 2.8027999999999387e-05, 2.7874999999996652e-05, 2.8000000000000247e-05, 2.8208000000001787e-05, 2.7874999999996652e-05, 2.7986000000000677e-05, 2.8027999999999387e-05, 2.843100000000237e-05, 2.7777999999999137e-05, 2.819500000000169e-05, 2.7986000000000677e-05, 2.8082999999998193e-05, 2.820900000000126e-05, 2.80970000000047e-05, 2.7972999999993642e-05, 2.7499999999999747e-05, 2.7596999999997263e-05, 2.769399999999478e-05, 2.820900000000126e-05, 2.7763999999999567e-05, 2.7694000000001717e-05, 2.762500000000334e-05, 2.7749999999999997e-05, 2.80970000000047e-05, 2.8000000000000247e-05, 2.7568999999998123e-05, 2.7763000000000093e-05, 2.8332999999998443e-05, 2.7763999999999567e-05, 2.7652999999995542e-05, 2.8444000000002467e-05, 2.8514000000000317e-05, 2.7527999999998887e-05, 2.8430000000002897e-05, 2.7777999999999137e-05, 2.7624999999996402e-05, 2.8055999999998527e-05, 2.8166999999995612e-05, 2.7986000000000677e-05, 2.844500000000194e-05, 2.7874999999996652e-05, 2.788900000000316e-05]</msg>
<status status="PASS" starttime="20201030 15:57:01.815" endtime="20201030 15:57:01.822"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:01.803" endtime="20201030 15:57:01.824"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:01.835" endtime="20201030 15:57:01.858"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:01.829" endtime="20201030 15:57:01.861"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:01.826" endtime="20201030 15:57:01.862"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:01.340" endtime="20201030 15:57:01.863"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:01.339" endtime="20201030 15:57:01.863"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:01.892" endtime="20201030 15:57:01.920"></status>
</kw>
<msg timestamp="20201030 15:57:01.922" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:01.888" endtime="20201030 15:57:01.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:01.930" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:01.924" endtime="20201030 15:57:01.931"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:01.933" endtime="20201030 15:57:01.939"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:01.880" endtime="20201030 15:57:01.941"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:01.872" endtime="20201030 15:57:01.944"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:01.964" endtime="20201030 15:57:02.312"></status>
</kw>
<msg timestamp="20201030 15:57:02.319" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.057444764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.057472722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:01.961" endtime="20201030 15:57:02.319"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:02.337" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.057444764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.057472722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:02.321" endtime="20201030 15:57:02.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:02.340" endtime="20201030 15:57:02.344"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:01.951" endtime="20201030 15:57:02.345"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:01.945" endtime="20201030 15:57:02.347"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:02.357" level="INFO">${RESULT} = [{'diff': 2.7957999999994598e-05}, {'diff': 2.765300000000248e-05}, {'diff': 2.7638999999995972e-05}, {'diff': 2.788900000000316e-05}, {'diff': 2.8208000000001787e-05}, {'diff': 2.811100000000427e-05}...</msg>
<status status="PASS" starttime="20201030 15:57:02.348" endtime="20201030 15:57:02.358"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:02.367" level="INFO">${ACCURACY} = {'diff': [2.7957999999994598e-05, 2.765300000000248e-05, 2.7638999999995972e-05, 2.788900000000316e-05, 2.8208000000001787e-05, 2.811100000000427e-05, 2.8318999999998873e-05, 2.7986000000000677e-05, 2...</msg>
<status status="PASS" starttime="20201030 15:57:02.359" endtime="20201030 15:57:02.367"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:02.377" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201030 15:57:02.375" endtime="20201030 15:57:02.378"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:02.383" level="INFO">VALUE: [2.7957999999994598e-05, 2.765300000000248e-05, 2.7638999999995972e-05, 2.788900000000316e-05, 2.8208000000001787e-05, 2.811100000000427e-05, 2.8318999999998873e-05, 2.7986000000000677e-05, 2.7874999999996652e-05, 2.7777999999999137e-05, 2.8208999999994322e-05, 2.7694999999994252e-05, 2.7556000000004965e-05, 2.8222000000001357e-05, 2.7860999999997083e-05, 2.7541999999998457e-05, 2.822300000000083e-05, 2.7513999999999317e-05, 2.8416999999995862e-05, 2.843100000000237e-05, 2.820900000000126e-05, 2.820900000000126e-05, 2.843100000000237e-05, 2.7666000000002577e-05, 2.766599999999564e-05, 2.765199999999607e-05, 2.8318999999998873e-05, 2.766599999999564e-05, 2.8514000000000317e-05, 2.7763999999999567e-05, 2.7554999999998553e-05, 2.7652999999995542e-05, 2.7986000000000677e-05, 2.8208000000001787e-05, 2.7540999999998983e-05, 2.7777999999999137e-05, 2.8194000000002217e-05, 2.79170000000023e-05, 2.8208000000001787e-05, 2.8250000000000497e-05, 2.8305999999998777e-05, 2.7999999999993308e-05, 2.7791999999998707e-05, 2.788900000000316e-05, 2.787500000000359e-05, 2.8208000000001787e-05, 2.844500000000194e-05, 2.844500000000194e-05, 2.8333999999997916e-05, 2.8000000000000247e-05]</msg>
<status status="PASS" starttime="20201030 15:57:02.380" endtime="20201030 15:57:02.384"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:02.368" endtime="20201030 15:57:02.386"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:02.397" endtime="20201030 15:57:02.419"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:02.391" endtime="20201030 15:57:02.421"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:02.389" endtime="20201030 15:57:02.421"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:01.866" endtime="20201030 15:57:02.422"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:01.865" endtime="20201030 15:57:02.422"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:02.445" endtime="20201030 15:57:02.464"></status>
</kw>
<msg timestamp="20201030 15:57:02.466" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:02.442" endtime="20201030 15:57:02.466"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:02.472" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:02.468" endtime="20201030 15:57:02.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:02.474" endtime="20201030 15:57:02.478"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:02.434" endtime="20201030 15:57:02.480"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:02.429" endtime="20201030 15:57:02.481"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:02.498" endtime="20201030 15:57:02.838"></status>
</kw>
<msg timestamp="20201030 15:57:02.846" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041607264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041636333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:02.494" endtime="20201030 15:57:02.846"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:02.864" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041607264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041636333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:02.848" endtime="20201030 15:57:02.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:02.866" endtime="20201030 15:57:02.870"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:02.487" endtime="20201030 15:57:02.872"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:02.482" endtime="20201030 15:57:02.873"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:02.884" level="INFO">${RESULT} = [{'diff': 2.9068999999999623e-05}, {'diff': 2.8596999999998263e-05}, {'diff': 2.9222000000002357e-05}, {'diff': 2.8540999999999983e-05}, {'diff': 2.8819999999998847e-05}, {'diff': 2.8874999999997653e-...</msg>
<status status="PASS" starttime="20201030 15:57:02.875" endtime="20201030 15:57:02.884"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:02.894" level="INFO">${ACCURACY} = {'diff': [2.9068999999999623e-05, 2.8596999999998263e-05, 2.9222000000002357e-05, 2.8540999999999983e-05, 2.8819999999998847e-05, 2.8874999999997653e-05, 2.9096999999998763e-05, 2.9430000000003897e-05...</msg>
<status status="PASS" starttime="20201030 15:57:02.886" endtime="20201030 15:57:02.895"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:02.906" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201030 15:57:02.903" endtime="20201030 15:57:02.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:02.911" level="INFO">VALUE: [2.9068999999999623e-05, 2.8596999999998263e-05, 2.9222000000002357e-05, 2.8540999999999983e-05, 2.8819999999998847e-05, 2.8874999999997653e-05, 2.9096999999998763e-05, 2.9430000000003897e-05, 2.9110999999998333e-05, 2.8541999999999457e-05, 2.9096999999998763e-05, 2.8680999999995682e-05, 2.9346999999999013e-05, 2.9319999999999347e-05, 2.9333999999998916e-05, 2.9083999999998666e-05, 2.8778000000000137e-05, 2.9096999999998763e-05, 2.9430999999996432e-05, 2.9000000000001247e-05, 2.8986000000001677e-05, 2.9208999999995322e-05, 2.943100000000337e-05, 2.8680000000003147e-05, 2.89579999999956e-05, 2.9083999999998666e-05, 2.9332999999999443e-05, 2.9236000000001927e-05, 2.8652000000004008e-05, 2.9110999999998333e-05, 2.865199999999707e-05, 2.9194000000003217e-05, 2.8778000000000137e-05, 2.9430000000003897e-05, 2.9110999999998333e-05, 2.942999999999696e-05, 2.9138999999997472e-05, 2.9194000000003217e-05, 2.9332999999999443e-05, 2.8555999999999027e-05, 2.943100000000337e-05, 2.8555999999999027e-05, 2.8972000000002107e-05, 2.8750000000000997e-05, 2.8666999999996112e-05, 2.919500000000269e-05, 2.919500000000269e-05, 2.9096999999998763e-05, 2.8666999999996112e-05, 2.866700000000305e-05]</msg>
<status status="PASS" starttime="20201030 15:57:02.908" endtime="20201030 15:57:02.913"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:02.896" endtime="20201030 15:57:02.914"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:02.924" endtime="20201030 15:57:02.945"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:02.919" endtime="20201030 15:57:02.947"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:02.917" endtime="20201030 15:57:02.948"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:02.424" endtime="20201030 15:57:02.948"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:02.423" endtime="20201030 15:57:02.949"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:02.971" endtime="20201030 15:57:02.990"></status>
</kw>
<msg timestamp="20201030 15:57:02.991" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:02.968" endtime="20201030 15:57:02.991"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:02.997" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:02.993" endtime="20201030 15:57:02.998"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:02.999" endtime="20201030 15:57:03.003"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:02.961" endtime="20201030 15:57:03.005"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:02.955" endtime="20201030 15:57:03.006"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:03.023" endtime="20201030 15:57:03.357"></status>
</kw>
<msg timestamp="20201030 15:57:03.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040971347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041000958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:03.020" endtime="20201030 15:57:03.365"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:03.383" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040971347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041000958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:03.367" endtime="20201030 15:57:03.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:03.385" endtime="20201030 15:57:03.389"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:03.013" endtime="20201030 15:57:03.391"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:03.008" endtime="20201030 15:57:03.392"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:03.403" level="INFO">${RESULT} = [{'diff': 2.9610999999998833e-05}, {'diff': 2.9541000000000983e-05}, {'diff': 2.9694000000003717e-05}, {'diff': 2.9666999999997112e-05}, {'diff': 3.0096999999999763e-05}, {'diff': 2.9569000000000123e-...</msg>
<status status="PASS" starttime="20201030 15:57:03.394" endtime="20201030 15:57:03.403"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:03.414" level="INFO">${ACCURACY} = {'diff': [2.9610999999998833e-05, 2.9541000000000983e-05, 2.9694000000003717e-05, 2.9666999999997112e-05, 3.0096999999999763e-05, 2.9569000000000123e-05, 2.9666999999997112e-05, 3.0166999999997612e-05...</msg>
<status status="PASS" starttime="20201030 15:57:03.405" endtime="20201030 15:57:03.415"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:03.427" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201030 15:57:03.425" endtime="20201030 15:57:03.428"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:03.433" level="INFO">VALUE: [2.9610999999998833e-05, 2.9541000000000983e-05, 2.9694000000003717e-05, 2.9666999999997112e-05, 3.0096999999999763e-05, 2.9569000000000123e-05, 2.9666999999997112e-05, 3.0166999999997612e-05, 3.0319000000000873e-05, 3.0416999999997862e-05, 2.9597999999998736e-05, 2.9888999999998223e-05, 3.0110999999999333e-05, 3.043100000000437e-05, 2.9986000000002677e-05, 2.962500000000534e-05, 2.9542000000000457e-05, 2.9999999999995308e-05, 2.970900000000276e-05, 2.9819999999999847e-05, 3.0416999999997862e-05, 3.0320000000000347e-05, 2.966700000000405e-05, 3.0000000000002247e-05, 2.966700000000405e-05, 2.9777000000001663e-05, 3.0098000000006175e-05, 2.9554999999993614e-05, 3.0444000000004467e-05, 3.022199999999642e-05, 2.965199999999807e-05, 2.9999999999995308e-05, 3.0000000000002247e-05, 2.9652000000005008e-05, 2.988900000000516e-05, 3.0042000000000957e-05, 3.0096999999999763e-05, 2.997199999999617e-05, 2.9610999999998833e-05, 2.9652999999997542e-05, 2.9542000000000457e-05, 3.0402999999998293e-05, 2.9944000000003967e-05, 2.994399999999703e-05, 3.0319000000000873e-05, 3.0374999999999153e-05, 2.9986000000002677e-05, 3.0333999999999917e-05, 3.0320000000000347e-05, 3.0333999999999917e-05]</msg>
<status status="PASS" starttime="20201030 15:57:03.430" endtime="20201030 15:57:03.434"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:03.416" endtime="20201030 15:57:03.436"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:03.445" endtime="20201030 15:57:03.467"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:03.441" endtime="20201030 15:57:03.469"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:03.438" endtime="20201030 15:57:03.469"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:02.951" endtime="20201030 15:57:03.470"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:02.949" endtime="20201030 15:57:03.470"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:03.493" endtime="20201030 15:57:03.512"></status>
</kw>
<msg timestamp="20201030 15:57:03.513" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:03.490" endtime="20201030 15:57:03.514"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:03.519" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:03.515" endtime="20201030 15:57:03.520"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:03.522" endtime="20201030 15:57:03.526"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:03.483" endtime="20201030 15:57:03.527"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:03.477" endtime="20201030 15:57:03.529"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:03.545" endtime="20201030 15:57:03.881"></status>
</kw>
<msg timestamp="20201030 15:57:03.888" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041396569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041427514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:03.542" endtime="20201030 15:57:03.889"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:03.907" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041396569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041427514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:03.890" endtime="20201030 15:57:03.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:03.909" endtime="20201030 15:57:03.913"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:03.535" endtime="20201030 15:57:03.914"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:03.530" endtime="20201030 15:57:03.916"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:03.926" level="INFO">${RESULT} = [{'diff': 3.09449999999975e-05}, {'diff': 3.05700000000006e-05}, {'diff': 3.05700000000006e-05}, {'diff': 3.067999999999821e-05}, {'diff': 3.122299999999689e-05}, {'diff': 3.066699999999811e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 15:57:03.918" endtime="20201030 15:57:03.927"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:03.936" level="INFO">${ACCURACY} = {'diff': [3.09449999999975e-05, 3.05700000000006e-05, 3.05700000000006e-05, 3.067999999999821e-05, 3.122299999999689e-05, 3.066699999999811e-05, 3.076400000000257e-05, 3.132000000000135e-05, 3.1027999...</msg>
<status status="PASS" starttime="20201030 15:57:03.928" endtime="20201030 15:57:03.936"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:03.947" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201030 15:57:03.944" endtime="20201030 15:57:03.947"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:03.952" level="INFO">VALUE: [3.09449999999975e-05, 3.05700000000006e-05, 3.05700000000006e-05, 3.067999999999821e-05, 3.122299999999689e-05, 3.066699999999811e-05, 3.076400000000257e-05, 3.132000000000135e-05, 3.102799999999545e-05, 3.065299999999854e-05, 3.100000000000325e-05, 3.143100000000537e-05, 3.123600000000393e-05, 3.1096999999993824e-05, 3.1096999999993824e-05, 3.091699999999836e-05, 3.076399999999563e-05, 3.055500000000155e-05, 3.099999999999631e-05, 3.14579999999981e-05, 3.055500000000155e-05, 3.136100000000058e-05, 3.097199999999717e-05, 3.1304999999995364e-05, 3.076400000000257e-05, 3.098600000000368e-05, 3.117999999999871e-05, 3.088899999999922e-05, 3.119399999999828e-05, 3.133300000000144e-05, 3.073600000000343e-05, 3.077800000000214e-05, 3.076400000000257e-05, 3.124999999999656e-05, 3.066700000000505e-05, 3.122300000000383e-05, 3.12370000000034e-05, 3.1098000000000237e-05, 3.1111999999999806e-05, 3.097299999999664e-05, 3.076400000000257e-05, 3.065299999999854e-05, 3.115299999999904e-05, 3.067999999999821e-05, 3.144399999999853e-05, 3.059700000000026e-05, 3.088899999999922e-05, 3.098600000000368e-05, 3.068000000000515e-05, 3.097200000000411e-05]</msg>
<status status="PASS" starttime="20201030 15:57:03.949" endtime="20201030 15:57:03.954"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:03.937" endtime="20201030 15:57:03.955"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:03.965" endtime="20201030 15:57:03.986"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:03.960" endtime="20201030 15:57:03.988"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:03.958" endtime="20201030 15:57:03.989"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:03.472" endtime="20201030 15:57:03.989"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:03.471" endtime="20201030 15:57:03.990"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:04.013" endtime="20201030 15:57:04.032"></status>
</kw>
<msg timestamp="20201030 15:57:04.033" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:04.009" endtime="20201030 15:57:04.033"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:04.039" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:04.035" endtime="20201030 15:57:04.040"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:04.042" endtime="20201030 15:57:04.045"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:04.002" endtime="20201030 15:57:04.047"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:03.996" endtime="20201030 15:57:04.049"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:04.065" endtime="20201030 15:57:04.404"></status>
</kw>
<msg timestamp="20201030 15:57:04.411" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041403306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041435319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:04.062" endtime="20201030 15:57:04.412"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:04.429" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041403306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041435319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:04.413" endtime="20201030 15:57:04.430"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:04.432" endtime="20201030 15:57:04.436"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:04.055" endtime="20201030 15:57:04.437"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:04.050" endtime="20201030 15:57:04.439"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:04.449" level="INFO">${RESULT} = [{'diff': 3.2012999999997405e-05}, {'diff': 3.176400000000357e-05}, {'diff': 3.174999999999706e-05}, {'diff': 3.198600000000468e-05}, {'diff': 3.192999999999946e-05}, {'diff': 3.152799999999595e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:57:04.440" endtime="20201030 15:57:04.450"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:04.459" level="INFO">${ACCURACY} = {'diff': [3.2012999999997405e-05, 3.176400000000357e-05, 3.174999999999706e-05, 3.198600000000468e-05, 3.192999999999946e-05, 3.152799999999595e-05, 3.187500000000065e-05, 3.1596999999994324e-05, 3.16...</msg>
<status status="PASS" starttime="20201030 15:57:04.451" endtime="20201030 15:57:04.459"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:04.470" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201030 15:57:04.467" endtime="20201030 15:57:04.470"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:04.475" level="INFO">VALUE: [3.2012999999997405e-05, 3.176400000000357e-05, 3.174999999999706e-05, 3.198600000000468e-05, 3.192999999999946e-05, 3.152799999999595e-05, 3.187500000000065e-05, 3.1596999999994324e-05, 3.1612000000000307e-05, 3.19449999999985e-05, 3.1540999999996044e-05, 3.220799999999885e-05, 3.148600000000418e-05, 3.211100000000133e-05, 3.220799999999885e-05, 3.2318999999995934e-05, 3.1874999999993714e-05, 3.165200000000007e-05, 3.242999999999996e-05, 3.180599999999534e-05, 3.208300000000219e-05, 3.188900000000022e-05, 3.198599999999774e-05, 3.165299999999954e-05, 3.199999999999731e-05, 3.186100000000108e-05, 3.241699999999986e-05, 3.197199999999817e-05, 3.208300000000219e-05, 3.208300000000219e-05, 3.222199999999842e-05, 3.222200000000536e-05, 3.220900000000526e-05, 3.227800000000364e-05, 3.237500000000115e-05, 3.172299999999739e-05, 3.176399999999663e-05, 3.199999999999731e-05, 3.202800000000339e-05, 3.220899999999832e-05, 3.154200000000246e-05, 3.1777000000003663e-05, 3.195800000000554e-05, 3.233300000000244e-05, 3.187500000000065e-05, 3.187500000000065e-05, 3.242999999999996e-05, 3.188900000000022e-05, 3.1554999999995614e-05, 3.198599999999774e-05]</msg>
<status status="PASS" starttime="20201030 15:57:04.472" endtime="20201030 15:57:04.477"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:04.460" endtime="20201030 15:57:04.478"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:04.489" endtime="20201030 15:57:04.511"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:04.483" endtime="20201030 15:57:04.512"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:04.481" endtime="20201030 15:57:04.513"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:03.992" endtime="20201030 15:57:04.514"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:03.990" endtime="20201030 15:57:04.514"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:04.537" endtime="20201030 15:57:04.556"></status>
</kw>
<msg timestamp="20201030 15:57:04.557" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:04.533" endtime="20201030 15:57:04.557"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:04.563" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:04.559" endtime="20201030 15:57:04.564"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:04.566" endtime="20201030 15:57:04.569"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:04.526" endtime="20201030 15:57:04.571"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:04.520" endtime="20201030 15:57:04.572"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:04.589" endtime="20201030 15:57:04.921"></status>
</kw>
<msg timestamp="20201030 15:57:04.928" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041083361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041116111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:04.586" endtime="20201030 15:57:04.929"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:04.946" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041083361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041116111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:04.931" endtime="20201030 15:57:04.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:04.949" endtime="20201030 15:57:04.953"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:04.578" endtime="20201030 15:57:04.954"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:04.574" endtime="20201030 15:57:04.956"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:04.966" level="INFO">${RESULT} = [{'diff': 3.274999999999806e-05}, {'diff': 3.287500000000165e-05}, {'diff': 3.2541000000003983e-05}, {'diff': 3.252799999999695e-05}, {'diff': 3.277800000000414e-05}, {'diff': 3.265300000000054e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:57:04.957" endtime="20201030 15:57:04.967"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:04.977" level="INFO">${ACCURACY} = {'diff': [3.274999999999806e-05, 3.287500000000165e-05, 3.2541000000003983e-05, 3.252799999999695e-05, 3.277800000000414e-05, 3.265300000000054e-05, 3.333300000000344e-05, 3.254200000000346e-05, 3.277...</msg>
<status status="PASS" starttime="20201030 15:57:04.968" endtime="20201030 15:57:04.977"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:04.988" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201030 15:57:04.986" endtime="20201030 15:57:04.989"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:04.993" level="INFO">VALUE: [3.274999999999806e-05, 3.287500000000165e-05, 3.2541000000003983e-05, 3.252799999999695e-05, 3.277800000000414e-05, 3.265300000000054e-05, 3.333300000000344e-05, 3.254200000000346e-05, 3.27779999999972e-05, 3.290300000000079e-05, 3.297199999999917e-05, 3.276400000000457e-05, 3.290300000000079e-05, 3.343100000000043e-05, 3.309700000000276e-05, 3.341700000000086e-05, 3.277800000000414e-05, 3.331999999999641e-05, 3.330599999999684e-05, 3.344400000000053e-05, 3.331900000000387e-05, 3.265200000000107e-05, 3.308300000000319e-05, 3.269399999999978e-05, 3.298599999999874e-05, 3.299999999999831e-05, 3.265200000000107e-05, 3.2540999999997045e-05, 3.320799999999985e-05, 3.320799999999985e-05, 3.298599999999874e-05, 3.3082999999996254e-05, 3.254199999999652e-05, 3.3096999999995824e-05, 3.265300000000054e-05, 3.319400000000028e-05, 3.309700000000276e-05, 3.298599999999874e-05, 3.254200000000346e-05, 3.286100000000208e-05, 3.291700000000036e-05, 3.265300000000054e-05, 3.331999999999641e-05, 3.348600000000618e-05, 3.330599999999684e-05, 3.313900000000147e-05, 3.2804999999996864e-05, 3.269399999999978e-05, 3.305599999999659e-05, 3.274999999999806e-05]</msg>
<status status="PASS" starttime="20201030 15:57:04.990" endtime="20201030 15:57:04.995"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:04.979" endtime="20201030 15:57:04.997"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:05.006" endtime="20201030 15:57:05.028"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:05.002" endtime="20201030 15:57:05.029"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:04.999" endtime="20201030 15:57:05.030"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:04.516" endtime="20201030 15:57:05.031"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:04.515" endtime="20201030 15:57:05.031"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:05.054" endtime="20201030 15:57:05.072"></status>
</kw>
<msg timestamp="20201030 15:57:05.074" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:05.050" endtime="20201030 15:57:05.074"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:05.080" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:05.076" endtime="20201030 15:57:05.080"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:05.082" endtime="20201030 15:57:05.086"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:05.043" endtime="20201030 15:57:05.088"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:05.038" endtime="20201030 15:57:05.089"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:05.105" endtime="20201030 15:57:05.454"></status>
</kw>
<msg timestamp="20201030 15:57:05.462" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041004778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041038514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:05.102" endtime="20201030 15:57:05.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:05.481" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041004778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041038514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:05.464" endtime="20201030 15:57:05.482"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:05.484" endtime="20201030 15:57:05.488"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:05.095" endtime="20201030 15:57:05.490"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:05.090" endtime="20201030 15:57:05.492"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:05.503" level="INFO">${RESULT} = [{'diff': 3.373599999999949e-05}, {'diff': 3.3902999999994854e-05}, {'diff': 3.37779999999982e-05}, {'diff': 3.399999999999931e-05}, {'diff': 3.356999999999666e-05}, {'diff': 3.4445000000001e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:57:05.493" endtime="20201030 15:57:05.503"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:05.517" level="INFO">${ACCURACY} = {'diff': [3.373599999999949e-05, 3.3902999999994854e-05, 3.37779999999982e-05, 3.399999999999931e-05, 3.356999999999666e-05, 3.4445000000001e-05, 3.422299999999989e-05, 3.370899999999982e-05, 3.422299...</msg>
<status status="PASS" starttime="20201030 15:57:05.505" endtime="20201030 15:57:05.518"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:05.532" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201030 15:57:05.529" endtime="20201030 15:57:05.533"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:05.540" level="INFO">VALUE: [3.373599999999949e-05, 3.3902999999994854e-05, 3.37779999999982e-05, 3.399999999999931e-05, 3.356999999999666e-05, 3.4445000000001e-05, 3.422299999999989e-05, 3.370899999999982e-05, 3.422299999999989e-05, 3.420900000000032e-05, 3.444400000000153e-05, 3.397200000000017e-05, 3.422200000000042e-05, 3.3762999999999155e-05, 3.401399999999888e-05, 3.409700000000376e-05, 3.420800000000085e-05, 3.419400000000128e-05, 3.3554999999997615e-05, 3.4388999999995784e-05, 3.444400000000153e-05, 3.39450000000005e-05, 3.423599999999999e-05, 3.366700000000111e-05, 3.4096999999996824e-05, 3.380599999999734e-05, 3.37779999999982e-05, 3.368100000000068e-05, 3.432000000000435e-05, 3.430599999999784e-05, 3.377800000000514e-05, 3.387500000000265e-05, 3.3874999999995714e-05, 3.420900000000032e-05, 3.365300000000154e-05, 3.354199999999752e-05, 3.430600000000478e-05, 3.443100000000143e-05, 3.368000000000121e-05, 3.376399999999863e-05, 3.399999999999931e-05, 3.398599999999974e-05, 3.431900000000487e-05, 3.366600000000164e-05, 3.3541000000004983e-05, 3.399999999999931e-05, 3.4332999999997504e-05, 3.3541000000004983e-05, 3.398599999999974e-05, 3.369500000000025e-05]</msg>
<status status="PASS" starttime="20201030 15:57:05.535" endtime="20201030 15:57:05.542"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:05.520" endtime="20201030 15:57:05.544"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:05.557" endtime="20201030 15:57:05.581"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:05.551" endtime="20201030 15:57:05.583"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:05.548" endtime="20201030 15:57:05.584"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:05.033" endtime="20201030 15:57:05.586"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:05.032" endtime="20201030 15:57:05.587"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:05.620" endtime="20201030 15:57:05.651"></status>
</kw>
<msg timestamp="20201030 15:57:05.655" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:05.615" endtime="20201030 15:57:05.658"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:05.665" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:05.661" endtime="20201030 15:57:05.666"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:05.668" endtime="20201030 15:57:05.671"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:05.604" endtime="20201030 15:57:05.673"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:05.597" endtime="20201030 15:57:05.674"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:05.692" endtime="20201030 15:57:06.038"></status>
</kw>
<msg timestamp="20201030 15:57:06.046" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.057614792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.057649417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:05.688" endtime="20201030 15:57:06.046"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:06.064" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.057614792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.057649417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:06.048" endtime="20201030 15:57:06.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:06.067" endtime="20201030 15:57:06.071"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:05.681" endtime="20201030 15:57:06.072"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:05.676" endtime="20201030 15:57:06.074"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:06.084" level="INFO">${RESULT} = [{'diff': 3.46250000000034e-05}, {'diff': 3.530599999999884e-05}, {'diff': 3.5374999999997214e-05}, {'diff': 3.509800000000424e-05}, {'diff': 3.467999999999527e-05}, {'diff': 3.54580000000021e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:57:06.076" endtime="20201030 15:57:06.085"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:06.094" level="INFO">${ACCURACY} = {'diff': [3.46250000000034e-05, 3.530599999999884e-05, 3.5374999999997214e-05, 3.509800000000424e-05, 3.467999999999527e-05, 3.54580000000021e-05, 3.498600000000074e-05, 3.543000000000296e-05, 3.46800...</msg>
<status status="PASS" starttime="20201030 15:57:06.087" endtime="20201030 15:57:06.095"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:06.105" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201030 15:57:06.103" endtime="20201030 15:57:06.106"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:06.111" level="INFO">VALUE: [3.46250000000034e-05, 3.530599999999884e-05, 3.5374999999997214e-05, 3.509800000000424e-05, 3.467999999999527e-05, 3.54580000000021e-05, 3.498600000000074e-05, 3.543000000000296e-05, 3.468000000000221e-05, 3.498600000000074e-05, 3.5360999999997644e-05, 3.522200000000142e-05, 3.451399999999938e-05, 3.500000000000031e-05, 3.470900000000082e-05, 3.487500000000365e-05, 3.47779999999992e-05, 3.500000000000031e-05, 3.476399999999963e-05, 3.45700000000046e-05, 3.5430999999995494e-05, 3.47779999999992e-05, 3.522200000000142e-05, 3.5430999999995494e-05, 3.498600000000074e-05, 3.525000000000056e-05, 3.486100000000408e-05, 3.488900000000322e-05, 3.5110999999997394e-05, 3.531999999999841e-05, 3.475000000000006e-05, 3.520900000000132e-05, 3.482000000000485e-05, 3.543100000000243e-05, 3.544400000000253e-05, 3.520800000000185e-05, 3.4790999999999295e-05, 3.522200000000142e-05, 3.5332999999998504e-05, 3.465200000000307e-05, 3.479199999999877e-05, 3.509700000000476e-05, 3.5110999999997394e-05, 3.544400000000253e-05, 3.5332999999998504e-05, 3.520800000000185e-05, 3.502799999999945e-05, 3.476399999999963e-05, 3.5096999999997824e-05, 3.534700000000501e-05]</msg>
<status status="PASS" starttime="20201030 15:57:06.108" endtime="20201030 15:57:06.112"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:06.096" endtime="20201030 15:57:06.114"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:06.124" endtime="20201030 15:57:06.146"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:06.119" endtime="20201030 15:57:06.147"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:06.117" endtime="20201030 15:57:06.148"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:05.590" endtime="20201030 15:57:06.149"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:05.588" endtime="20201030 15:57:06.149"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:06.173" endtime="20201030 15:57:06.194"></status>
</kw>
<msg timestamp="20201030 15:57:06.196" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:06.169" endtime="20201030 15:57:06.196"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:06.202" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:06.198" endtime="20201030 15:57:06.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:06.204" endtime="20201030 15:57:06.208"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:06.161" endtime="20201030 15:57:06.210"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:06.155" endtime="20201030 15:57:06.211"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:06.228" endtime="20201030 15:57:06.582"></status>
</kw>
<msg timestamp="20201030 15:57:06.589" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044621236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044657069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:06.225" endtime="20201030 15:57:06.590"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:06.609" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044621236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044657069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:06.592" endtime="20201030 15:57:06.610"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:06.612" endtime="20201030 15:57:06.616"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:06.218" endtime="20201030 15:57:06.618"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:06.213" endtime="20201030 15:57:06.619"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:06.630" level="INFO">${RESULT} = [{'diff': 3.5832999999999005e-05}, {'diff': 3.6388999999997784e-05}, {'diff': 3.5638999999997034e-05}, {'diff': 3.573600000000149e-05}, {'diff': 3.570800000000235e-05}, {'diff': 3.57780000000002e-05},...</msg>
<status status="PASS" starttime="20201030 15:57:06.621" endtime="20201030 15:57:06.631"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:06.641" level="INFO">${ACCURACY} = {'diff': [3.5832999999999005e-05, 3.6388999999997784e-05, 3.5638999999997034e-05, 3.573600000000149e-05, 3.570800000000235e-05, 3.57780000000002e-05, 3.641599999999745e-05, 3.6138999999997534e-05, 3.5...</msg>
<status status="PASS" starttime="20201030 15:57:06.633" endtime="20201030 15:57:06.641"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:06.653" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201030 15:57:06.650" endtime="20201030 15:57:06.653"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:06.660" level="INFO">VALUE: [3.5832999999999005e-05, 3.6388999999997784e-05, 3.5638999999997034e-05, 3.573600000000149e-05, 3.570800000000235e-05, 3.57780000000002e-05, 3.641599999999745e-05, 3.6138999999997534e-05, 3.563900000000397e-05, 3.6083000000006193e-05, 3.598600000000174e-05, 3.569399999999584e-05, 3.554199999999952e-05, 3.57780000000002e-05, 3.580599999999934e-05, 3.595799999999566e-05, 3.609700000000576e-05, 3.620900000000232e-05, 3.620900000000232e-05, 3.633399999999898e-05, 3.5652999999996604e-05, 3.587500000000465e-05, 3.5610999999997894e-05, 3.5763000000001155e-05, 3.554199999999952e-05, 3.5888999999997284e-05, 3.565199999999713e-05, 3.586100000000508e-05, 3.600000000000131e-05, 3.57780000000002e-05, 3.599999999999437e-05, 3.625000000000156e-05, 3.642999999999702e-05, 3.6318999999999935e-05, 3.565300000000354e-05, 3.6082999999999255e-05, 3.642999999999702e-05, 3.600000000000131e-05, 3.650000000000181e-05, 3.6277000000001225e-05, 3.574999999999412e-05, 3.5832999999999005e-05, 3.552799999999995e-05, 3.554199999999952e-05, 3.575000000000106e-05, 3.5652999999996604e-05, 3.572300000000139e-05, 3.566700000000311e-05, 3.633399999999898e-05, 3.5568999999999185e-05]</msg>
<status status="PASS" starttime="20201030 15:57:06.655" endtime="20201030 15:57:06.661"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:06.643" endtime="20201030 15:57:06.663"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:06.675" endtime="20201030 15:57:06.697"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:06.669" endtime="20201030 15:57:06.699"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:06.666" endtime="20201030 15:57:06.700"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:06.151" endtime="20201030 15:57:06.700"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:06.150" endtime="20201030 15:57:06.701"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:06.725" endtime="20201030 15:57:06.748"></status>
</kw>
<msg timestamp="20201030 15:57:06.749" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:06.721" endtime="20201030 15:57:06.750"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:06.759" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:06.752" endtime="20201030 15:57:06.761"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:06.763" endtime="20201030 15:57:06.768"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:06.714" endtime="20201030 15:57:06.771"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:06.708" endtime="20201030 15:57:06.775"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:06.795" endtime="20201030 15:57:07.170"></status>
</kw>
<msg timestamp="20201030 15:57:07.178" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044899681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044936528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:06.792" endtime="20201030 15:57:07.178"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:07.198" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044899681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044936528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:07.180" endtime="20201030 15:57:07.199"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:07.200" endtime="20201030 15:57:07.205"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:06.783" endtime="20201030 15:57:07.207"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:06.777" endtime="20201030 15:57:07.208"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:07.220" level="INFO">${RESULT} = [{'diff': 3.6847000000006513e-05}, {'diff': 3.708399999999973e-05}, {'diff': 3.7096999999999825e-05}, {'diff': 3.67780000000012e-05}, {'diff': 3.722300000000289e-05}, {'diff': 3.732000000000041e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:57:07.210" endtime="20201030 15:57:07.220"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:07.236" level="INFO">${ACCURACY} = {'diff': [3.6847000000006513e-05, 3.708399999999973e-05, 3.7096999999999825e-05, 3.67780000000012e-05, 3.722300000000289e-05, 3.732000000000041e-05, 3.6652999999997604e-05, 3.675000000000206e-05, 3.65...</msg>
<status status="PASS" starttime="20201030 15:57:07.222" endtime="20201030 15:57:07.237"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:07.248" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201030 15:57:07.246" endtime="20201030 15:57:07.249"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:07.254" level="INFO">VALUE: [3.6847000000006513e-05, 3.708399999999973e-05, 3.7096999999999825e-05, 3.67780000000012e-05, 3.722300000000289e-05, 3.732000000000041e-05, 3.6652999999997604e-05, 3.675000000000206e-05, 3.654200000000052e-05, 3.744399999999759e-05, 3.6555000000000615e-05, 3.7333000000000505e-05, 3.6540999999994106e-05, 3.7096999999999825e-05, 3.722199999999648e-05, 3.7138999999998534e-05, 3.743000000000496e-05, 3.722199999999648e-05, 3.698600000000274e-05, 3.6874999999998714e-05, 3.6888999999998284e-05, 3.69859999999958e-05, 3.720800000000385e-05, 3.697200000000317e-05, 3.7444999999997064e-05, 3.6874999999998714e-05, 3.7444999999997064e-05, 3.663900000000497e-05, 3.694400000000403e-05, 3.722300000000289e-05, 3.6874999999998714e-05, 3.708399999999973e-05, 3.7124999999998964e-05, 3.676399999999469e-05, 3.7333000000000505e-05, 3.6762999999995216e-05, 3.6555000000000615e-05, 3.720799999999691e-05, 3.722199999999648e-05, 3.7096999999999825e-05, 3.720799999999691e-05, 3.742999999999802e-05, 3.741599999999845e-05, 3.692999999999752e-05, 3.722199999999648e-05, 3.6652999999997604e-05, 3.676400000000163e-05, 3.6652999999997604e-05, 3.7444999999997064e-05, 3.665300000000454e-05]</msg>
<status status="PASS" starttime="20201030 15:57:07.251" endtime="20201030 15:57:07.256"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:07.238" endtime="20201030 15:57:07.259"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:07.269" endtime="20201030 15:57:07.291"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:07.264" endtime="20201030 15:57:07.293"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:07.261" endtime="20201030 15:57:07.294"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:06.703" endtime="20201030 15:57:07.294"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:06.702" endtime="20201030 15:57:07.295"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:07.319" endtime="20201030 15:57:07.339"></status>
</kw>
<msg timestamp="20201030 15:57:07.341" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:07.316" endtime="20201030 15:57:07.341"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:07.347" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:07.343" endtime="20201030 15:57:07.348"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:07.350" endtime="20201030 15:57:07.354"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:07.308" endtime="20201030 15:57:07.356"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:07.302" endtime="20201030 15:57:07.357"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:07.375" endtime="20201030 15:57:07.747"></status>
</kw>
<msg timestamp="20201030 15:57:07.755" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043875889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043913514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:07.371" endtime="20201030 15:57:07.756"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:07.774" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043875889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043913514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:07.757" endtime="20201030 15:57:07.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:07.777" endtime="20201030 15:57:07.781"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:07.364" endtime="20201030 15:57:07.783"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:07.359" endtime="20201030 15:57:07.784"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:07.796" level="INFO">${RESULT} = [{'diff': 3.7624999999999464e-05}, {'diff': 3.8138999999999534e-05}, {'diff': 3.8430999999998494e-05}, {'diff': 3.822300000000389e-05}, {'diff': 3.8375000000000214e-05}, {'diff': 3.7776999999995786e-0...</msg>
<status status="PASS" starttime="20201030 15:57:07.786" endtime="20201030 15:57:07.796"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:07.808" level="INFO">${ACCURACY} = {'diff': [3.7624999999999464e-05, 3.8138999999999534e-05, 3.8430999999998494e-05, 3.822300000000389e-05, 3.8375000000000214e-05, 3.7776999999995786e-05, 3.77780000000022e-05, 3.8430999999998494e-05, 3...</msg>
<status status="PASS" starttime="20201030 15:57:07.798" endtime="20201030 15:57:07.808"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:07.820" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201030 15:57:07.817" endtime="20201030 15:57:07.820"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:07.825" level="INFO">VALUE: [3.7624999999999464e-05, 3.8138999999999534e-05, 3.8430999999998494e-05, 3.822300000000389e-05, 3.8375000000000214e-05, 3.7776999999995786e-05, 3.77780000000022e-05, 3.8430999999998494e-05, 3.815200000000657e-05, 3.767999999999827e-05, 3.765200000000607e-05, 3.7540999999995106e-05, 3.844399999999859e-05, 3.765199999999913e-05, 3.7541000000002045e-05, 3.7569000000001185e-05, 3.7652999999998604e-05, 3.844399999999859e-05, 3.766700000000511e-05, 3.79859999999968e-05, 3.8430999999998494e-05, 3.779200000000177e-05, 3.800000000000331e-05, 3.754200000000152e-05, 3.8347000000001075e-05, 3.752800000000195e-05, 3.8444999999998064e-05, 3.833400000000098e-05, 3.832000000000141e-05, 3.79859999999968e-05, 3.832000000000141e-05, 3.8208999999997384e-05, 3.7624999999999464e-05, 3.850000000000381e-05, 3.8208999999997384e-05, 3.7986999999996274e-05, 3.8111000000000395e-05, 3.842999999999902e-05, 3.8333000000001505e-05, 3.765199999999913e-05, 3.7541000000002045e-05, 3.8111000000000395e-05, 3.7652999999998604e-05, 3.7541000000002045e-05, 3.8319000000001935e-05, 3.7638999999999034e-05, 3.7888999999999284e-05, 3.8152999999999104e-05, 3.822199999999748e-05, 3.8069000000001685e-05]</msg>
<status status="PASS" starttime="20201030 15:57:07.822" endtime="20201030 15:57:07.827"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:07.810" endtime="20201030 15:57:07.829"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:07.839" endtime="20201030 15:57:07.862"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:07.834" endtime="20201030 15:57:07.864"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:07.831" endtime="20201030 15:57:07.864"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:07.297" endtime="20201030 15:57:07.865"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:07.296" endtime="20201030 15:57:07.866"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:07.890" endtime="20201030 15:57:07.910"></status>
</kw>
<msg timestamp="20201030 15:57:07.911" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:07.886" endtime="20201030 15:57:07.912"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:07.918" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:07.913" endtime="20201030 15:57:07.919"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:07.920" endtime="20201030 15:57:07.924"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:07.879" endtime="20201030 15:57:07.926"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:07.873" endtime="20201030 15:57:07.928"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:07.946" endtime="20201030 15:57:08.309"></status>
</kw>
<msg timestamp="20201030 15:57:08.317" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045248014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045287431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:07.942" endtime="20201030 15:57:08.317"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:08.337" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045248014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045287431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:08.319" endtime="20201030 15:57:08.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:08.340" endtime="20201030 15:57:08.346"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:07.934" endtime="20201030 15:57:08.348"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:07.929" endtime="20201030 15:57:08.350"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:08.363" level="INFO">${RESULT} = [{'diff': 3.9416999999999924e-05}, {'diff': 3.944399999999959e-05}, {'diff': 3.9430999999999494e-05}, {'diff': 3.922199999999848e-05}, {'diff': 3.920799999999891e-05}, {'diff': 3.920799999999891e-05},...</msg>
<status status="PASS" starttime="20201030 15:57:08.352" endtime="20201030 15:57:08.364"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:08.376" level="INFO">${ACCURACY} = {'diff': [3.9416999999999924e-05, 3.944399999999959e-05, 3.9430999999999494e-05, 3.922199999999848e-05, 3.920799999999891e-05, 3.920799999999891e-05, 3.897199999999823e-05, 3.9347000000002075e-05, 3.9...</msg>
<status status="PASS" starttime="20201030 15:57:08.366" endtime="20201030 15:57:08.377"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:08.390" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201030 15:57:08.387" endtime="20201030 15:57:08.392"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:08.398" level="INFO">VALUE: [3.9416999999999924e-05, 3.944399999999959e-05, 3.9430999999999494e-05, 3.922199999999848e-05, 3.920799999999891e-05, 3.920799999999891e-05, 3.897199999999823e-05, 3.9347000000002075e-05, 3.9319000000002935e-05, 3.8555000000002615e-05, 3.9111000000001395e-05, 3.877799999999626e-05, 3.922199999999848e-05, 3.9097000000001825e-05, 3.9125000000000965e-05, 3.879200000000277e-05, 3.854199999999558e-05, 3.87780000000032e-05, 3.9111000000001395e-05, 3.8666999999999174e-05, 3.93059999999959e-05, 3.9068999999995746e-05, 3.8568999999995246e-05, 3.8875000000000715e-05, 3.854200000000252e-05, 3.858400000000123e-05, 3.8666999999999174e-05, 3.8930999999998994e-05, 3.876399999999669e-05, 3.947199999999873e-05, 3.941599999999351e-05, 3.8860999999994206e-05, 3.8902999999999854e-05, 3.9332999999995566e-05, 3.9389000000000784e-05, 3.86659999999997e-05, 3.9125000000000965e-05, 3.9139000000000534e-05, 3.8554999999995676e-05, 3.876399999999669e-05, 3.89859999999978e-05, 3.874999999999712e-05, 3.8902999999999854e-05, 3.854199999999558e-05, 3.9097000000001825e-05, 3.907000000000216e-05, 3.8680999999998744e-05, 3.873599999999755e-05, 3.932000000000241e-05, 3.8666999999999174e-05]</msg>
<status status="PASS" starttime="20201030 15:57:08.394" endtime="20201030 15:57:08.400"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:08.379" endtime="20201030 15:57:08.402"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:08.412" endtime="20201030 15:57:08.434"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:08.407" endtime="20201030 15:57:08.436"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:08.404" endtime="20201030 15:57:08.437"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:07.868" endtime="20201030 15:57:08.438"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:07.867" endtime="20201030 15:57:08.438"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:08.464" endtime="20201030 15:57:08.486"></status>
</kw>
<msg timestamp="20201030 15:57:08.487" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:08.460" endtime="20201030 15:57:08.487"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:08.493" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:08.489" endtime="20201030 15:57:08.494"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:08.496" endtime="20201030 15:57:08.500"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:08.451" endtime="20201030 15:57:08.502"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:08.445" endtime="20201030 15:57:08.504"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:08.521" endtime="20201030 15:57:08.884"></status>
</kw>
<msg timestamp="20201030 15:57:08.892" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046820069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046860583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:08.518" endtime="20201030 15:57:08.892"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:08.911" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046820069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046860583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:08.894" endtime="20201030 15:57:08.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:08.914" endtime="20201030 15:57:08.918"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:08.510" endtime="20201030 15:57:08.920"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:08.505" endtime="20201030 15:57:08.922"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:08.933" level="INFO">${RESULT} = [{'diff': 4.051399999999844e-05}, {'diff': 4.0389000000001785e-05}, {'diff': 4.0332999999996566e-05}, {'diff': 3.968000000000027e-05}, {'diff': 3.9860999999995206e-05}, {'diff': 4.0318999999996996e-05...</msg>
<status status="PASS" starttime="20201030 15:57:08.923" endtime="20201030 15:57:08.933"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:08.943" level="INFO">${ACCURACY} = {'diff': [4.051399999999844e-05, 4.0389000000001785e-05, 4.0332999999996566e-05, 3.968000000000027e-05, 3.9860999999995206e-05, 4.0318999999996996e-05, 4.0111000000002395e-05, 4.024999999999862e-05, 4...</msg>
<status status="PASS" starttime="20201030 15:57:08.935" endtime="20201030 15:57:08.943"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:08.955" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201030 15:57:08.952" endtime="20201030 15:57:08.956"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:08.961" level="INFO">VALUE: [4.051399999999844e-05, 4.0389000000001785e-05, 4.0332999999996566e-05, 3.968000000000027e-05, 3.9860999999995206e-05, 4.0318999999996996e-05, 4.0111000000002395e-05, 4.024999999999862e-05, 4.043000000000102e-05, 3.99859999999988e-05, 3.9667000000000174e-05, 4.0431000000000494e-05, 4.0181000000000244e-05, 3.999999999999837e-05, 3.954200000000352e-05, 3.976399999999769e-05, 4.04859999999993e-05, 3.976399999999769e-05, 4.011200000000187e-05, 3.9667000000000174e-05, 3.9667000000000174e-05, 3.954199999999658e-05, 3.9653000000000604e-05, 3.96660000000007e-05, 3.9596999999995386e-05, 4.0069000000003685e-05, 3.99859999999988e-05, 3.9861000000002145e-05, 3.9554999999996676e-05, 3.9653000000000604e-05, 3.9917000000000424e-05, 4.022199999999948e-05, 3.9875000000001715e-05, 3.9875000000001715e-05, 3.9667000000000174e-05, 3.9875000000001715e-05, 4.0111000000002395e-05, 3.955600000000309e-05, 4.036199999999518e-05, 4.0445000000000064e-05, 3.9930999999999994e-05, 4.008399999999579e-05, 4.0417000000000924e-05, 3.9972999999998704e-05, 4.0194999999999814e-05, 3.973599999999855e-05, 4.0318999999996996e-05, 4.0431000000000494e-05, 3.96660000000007e-05, 3.9875000000001715e-05]</msg>
<status status="PASS" starttime="20201030 15:57:08.957" endtime="20201030 15:57:08.962"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:08.945" endtime="20201030 15:57:08.964"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:08.976" endtime="20201030 15:57:08.998"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:08.969" endtime="20201030 15:57:09.000"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:08.967" endtime="20201030 15:57:09.001"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:08.440" endtime="20201030 15:57:09.001"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:08.439" endtime="20201030 15:57:09.002"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:09.026" endtime="20201030 15:57:09.046"></status>
</kw>
<msg timestamp="20201030 15:57:09.047" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:09.023" endtime="20201030 15:57:09.048"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:09.054" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:09.050" endtime="20201030 15:57:09.055"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:09.057" endtime="20201030 15:57:09.062"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:09.015" endtime="20201030 15:57:09.063"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:09.009" endtime="20201030 15:57:09.065"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:09.083" endtime="20201030 15:57:09.449"></status>
</kw>
<msg timestamp="20201030 15:57:09.456" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043984556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044025333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:09.079" endtime="20201030 15:57:09.457"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:09.475" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043984556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044025333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:09.458" endtime="20201030 15:57:09.476"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:09.477" endtime="20201030 15:57:09.481"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:09.072" endtime="20201030 15:57:09.483"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:09.067" endtime="20201030 15:57:09.484"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:09.494" level="INFO">${RESULT} = [{'diff': 4.0776999999998786e-05}, {'diff': 4.0639000000002035e-05}, {'diff': 4.101399999999894e-05}, {'diff': 4.0860999999996206e-05}, {'diff': 4.0611000000002895e-05}, {'diff': 4.133400000000398e-05...</msg>
<status status="PASS" starttime="20201030 15:57:09.486" endtime="20201030 15:57:09.495"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:09.506" level="INFO">${ACCURACY} = {'diff': [4.0776999999998786e-05, 4.0639000000002035e-05, 4.101399999999894e-05, 4.0860999999996206e-05, 4.0611000000002895e-05, 4.133400000000398e-05, 4.0554999999997676e-05, 4.105599999999765e-05, 4...</msg>
<status status="PASS" starttime="20201030 15:57:09.497" endtime="20201030 15:57:09.506"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:09.517" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201030 15:57:09.514" endtime="20201030 15:57:09.517"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:09.522" level="INFO">VALUE: [4.0776999999998786e-05, 4.0639000000002035e-05, 4.101399999999894e-05, 4.0860999999996206e-05, 4.0611000000002895e-05, 4.133400000000398e-05, 4.0554999999997676e-05, 4.105599999999765e-05, 4.065200000000213e-05, 4.145800000000116e-05, 4.122200000000048e-05, 4.1290999999998856e-05, 4.0790999999998356e-05, 4.077799999999826e-05, 4.120800000000091e-05, 4.074999999999912e-05, 4.0667000000001174e-05, 4.1082999999997316e-05, 4.0889000000002285e-05, 4.055599999999715e-05, 4.0639000000002035e-05, 4.1125000000002965e-05, 4.1431000000001494e-05, 4.122200000000048e-05, 4.0667000000001174e-05, 4.076399999999869e-05, 4.0667000000001174e-05, 4.076399999999869e-05, 4.076399999999869e-05, 4.1445000000001064e-05, 4.1431000000001494e-05, 4.074999999999912e-05, 4.1125000000002965e-05, 4.1153000000002105e-05, 4.074999999999912e-05, 4.147200000000073e-05, 4.1332999999997566e-05, 4.074999999999912e-05, 4.076399999999869e-05, 4.0653000000001605e-05, 4.129199999999833e-05, 4.122200000000048e-05, 4.0875000000002715e-05, 4.1110999999996456e-05, 4.0874999999995776e-05, 4.131999999999747e-05, 4.105600000000459e-05, 4.1445000000001064e-05, 4.131999999999747e-05, 4.1417000000001924e-05]</msg>
<status status="PASS" starttime="20201030 15:57:09.519" endtime="20201030 15:57:09.523"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:09.507" endtime="20201030 15:57:09.525"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:09.535" endtime="20201030 15:57:09.556"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:09.530" endtime="20201030 15:57:09.558"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:09.528" endtime="20201030 15:57:09.559"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:09.004" endtime="20201030 15:57:09.559"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:09.003" endtime="20201030 15:57:09.560"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:09.582" endtime="20201030 15:57:09.602"></status>
</kw>
<msg timestamp="20201030 15:57:09.603" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:09.579" endtime="20201030 15:57:09.603"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:09.609" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:09.605" endtime="20201030 15:57:09.610"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:09.611" endtime="20201030 15:57:09.615"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:09.572" endtime="20201030 15:57:09.617"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:09.566" endtime="20201030 15:57:09.618"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:09.635" endtime="20201030 15:57:09.968"></status>
</kw>
<msg timestamp="20201030 15:57:09.975" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041088472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041130764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:09.631" endtime="20201030 15:57:09.975"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:09.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041088472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041130764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:09.977" endtime="20201030 15:57:09.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:09.996" endtime="20201030 15:57:10.000"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:09.624" endtime="20201030 15:57:10.001"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:09.619" endtime="20201030 15:57:10.003"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:10.013" level="INFO">${RESULT} = [{'diff': 4.229199999999933e-05}, {'diff': 4.1652999999995666e-05}, {'diff': 4.2430999999995556e-05}, {'diff': 4.155599999999815e-05}, {'diff': 4.151399999999944e-05}, {'diff': 4.1666999999995236e-05}...</msg>
<status status="PASS" starttime="20201030 15:57:10.004" endtime="20201030 15:57:10.014"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:10.024" level="INFO">${ACCURACY} = {'diff': [4.229199999999933e-05, 4.1652999999995666e-05, 4.2430999999995556e-05, 4.155599999999815e-05, 4.151399999999944e-05, 4.1666999999995236e-05, 4.1639000000003035e-05, 4.195800000000166e-05, 4....</msg>
<status status="PASS" starttime="20201030 15:57:10.015" endtime="20201030 15:57:10.025"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:10.035" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201030 15:57:10.033" endtime="20201030 15:57:10.036"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:10.041" level="INFO">VALUE: [4.229199999999933e-05, 4.1652999999995666e-05, 4.2430999999995556e-05, 4.155599999999815e-05, 4.151399999999944e-05, 4.1666999999995236e-05, 4.1639000000003035e-05, 4.195800000000166e-05, 4.16660000000027e-05, 4.202799999999951e-05, 4.165200000000313e-05, 4.1874999999996776e-05, 4.247199999999479e-05, 4.219400000000234e-05, 4.2124999999997026e-05, 4.152799999999901e-05, 4.222200000000148e-05, 4.1555000000005615e-05, 4.2332999999998566e-05, 4.1596999999997386e-05, 4.1875000000003715e-05, 4.2417000000002925e-05, 4.1903000000002855e-05, 4.2431000000002494e-05, 4.152799999999901e-05, 4.1846999999997636e-05, 4.2431000000002494e-05, 4.2097000000004825e-05, 4.177799999999926e-05, 4.191600000000295e-05, 4.1861000000004145e-05, 4.190199999999644e-05, 4.154199999999858e-05, 4.1875000000003715e-05, 4.1625000000003465e-05, 4.1554999999998676e-05, 4.200000000000037e-05, 4.1540999999999106e-05, 4.158399999999729e-05, 4.172200000000098e-05, 4.2290999999999856e-05, 4.250000000000087e-05, 4.2125000000003965e-05, 4.223599999999411e-05, 4.200000000000037e-05, 4.245799999999522e-05, 4.1847000000004575e-05, 4.227799999999976e-05, 4.154199999999858e-05, 4.197200000000123e-05]</msg>
<status status="PASS" starttime="20201030 15:57:10.038" endtime="20201030 15:57:10.042"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:10.026" endtime="20201030 15:57:10.044"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:10.053" endtime="20201030 15:57:10.075"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:10.049" endtime="20201030 15:57:10.077"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:10.047" endtime="20201030 15:57:10.077"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:09.562" endtime="20201030 15:57:10.078"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:09.560" endtime="20201030 15:57:10.078"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:10.101" endtime="20201030 15:57:10.121"></status>
</kw>
<msg timestamp="20201030 15:57:10.122" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:10.098" endtime="20201030 15:57:10.122"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:10.128" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:10.124" endtime="20201030 15:57:10.129"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:10.131" endtime="20201030 15:57:10.134"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:10.090" endtime="20201030 15:57:10.136"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:10.085" endtime="20201030 15:57:10.138"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:10.154" endtime="20201030 15:57:10.504"></status>
</kw>
<msg timestamp="20201030 15:57:10.511" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041072083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041115611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:10.151" endtime="20201030 15:57:10.512"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:10.529" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041072083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041115611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:10.513" endtime="20201030 15:57:10.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:10.532" endtime="20201030 15:57:10.536"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:10.144" endtime="20201030 15:57:10.537"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:10.139" endtime="20201030 15:57:10.539"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:10.549" level="INFO">${RESULT} = [{'diff': 4.352800000000101e-05}, {'diff': 4.254199999999958e-05}, {'diff': 4.317999999999683e-05}, {'diff': 4.301400000000094e-05}, {'diff': 4.3096999999998886e-05}, {'diff': 4.252800000000001e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:57:10.540" endtime="20201030 15:57:10.550"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:10.559" level="INFO">${ACCURACY} = {'diff': [4.352800000000101e-05, 4.254199999999958e-05, 4.317999999999683e-05, 4.301400000000094e-05, 4.3096999999998886e-05, 4.252800000000001e-05, 4.2917000000003425e-05, 4.320799999999597e-05, 4.27...</msg>
<status status="PASS" starttime="20201030 15:57:10.551" endtime="20201030 15:57:10.559"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:10.570" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201030 15:57:10.567" endtime="20201030 15:57:10.570"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:10.575" level="INFO">VALUE: [4.352800000000101e-05, 4.254199999999958e-05, 4.317999999999683e-05, 4.301400000000094e-05, 4.3096999999998886e-05, 4.252800000000001e-05, 4.2917000000003425e-05, 4.320799999999597e-05, 4.279199999999983e-05, 4.334799999999861e-05, 4.3167000000003675e-05, 4.3417000000003925e-05, 4.300000000000137e-05, 4.277800000000026e-05, 4.311199999999793e-05, 4.308399999999879e-05, 4.2568999999999246e-05, 4.277700000000079e-05, 4.344400000000359e-05, 4.2875000000004715e-05, 4.300000000000137e-05, 4.265199999999719e-05, 4.2889000000004285e-05, 4.29860000000018e-05, 4.2889000000004285e-05, 4.329200000000033e-05, 4.2875000000004715e-05, 4.2902999999996916e-05, 4.29860000000018e-05, 4.3110999999998456e-05, 4.29860000000018e-05, 4.331999999999947e-05, 4.297199999999529e-05, 4.3445000000003064e-05, 4.327800000000076e-05, 4.2860999999998206e-05, 4.301400000000094e-05, 4.276400000000069e-05, 4.3445000000003064e-05, 4.3194999999995876e-05, 4.254199999999958e-05, 4.342999999999708e-05, 4.327799999999382e-05, 4.2874999999997776e-05, 4.254099999999317e-05, 4.2846999999998636e-05, 4.266599999999676e-05, 4.329200000000033e-05, 4.3097000000005825e-05, 4.3332999999999566e-05]</msg>
<status status="PASS" starttime="20201030 15:57:10.572" endtime="20201030 15:57:10.576"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:10.560" endtime="20201030 15:57:10.578"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:10.588" endtime="20201030 15:57:10.609"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:10.583" endtime="20201030 15:57:10.611"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:10.581" endtime="20201030 15:57:10.611"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:10.080" endtime="20201030 15:57:10.612"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:10.079" endtime="20201030 15:57:10.612"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:10.636" endtime="20201030 15:57:10.657"></status>
</kw>
<msg timestamp="20201030 15:57:10.658" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:10.632" endtime="20201030 15:57:10.659"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:10.664" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:10.660" endtime="20201030 15:57:10.665"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:10.667" endtime="20201030 15:57:10.670"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:10.625" endtime="20201030 15:57:10.672"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:10.619" endtime="20201030 15:57:10.673"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:10.690" endtime="20201030 15:57:11.023"></status>
</kw>
<msg timestamp="20201030 15:57:11.031" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043058917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043102611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:10.687" endtime="20201030 15:57:11.031"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:11.049" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043058917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043102611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:11.033" endtime="20201030 15:57:11.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:11.052" endtime="20201030 15:57:11.056"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:10.679" endtime="20201030 15:57:11.057"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:10.675" endtime="20201030 15:57:11.059"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:11.069" level="INFO">${RESULT} = [{'diff': 4.36939999999969e-05}, {'diff': 4.3986999999995335e-05}, {'diff': 4.400000000000237e-05}, {'diff': 4.4110999999999456e-05}, {'diff': 4.433299999999363e-05}, {'diff': 4.443000000000502e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:57:11.060" endtime="20201030 15:57:11.070"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:11.079" level="INFO">${ACCURACY} = {'diff': [4.36939999999969e-05, 4.3986999999995335e-05, 4.400000000000237e-05, 4.4110999999999456e-05, 4.433299999999363e-05, 4.443000000000502e-05, 4.4319000000000996e-05, 4.420800000000391e-05, 4.41...</msg>
<status status="PASS" starttime="20201030 15:57:11.071" endtime="20201030 15:57:11.079"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:11.089" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201030 15:57:11.087" endtime="20201030 15:57:11.090"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:11.095" level="INFO">VALUE: [4.36939999999969e-05, 4.3986999999995335e-05, 4.400000000000237e-05, 4.4110999999999456e-05, 4.433299999999363e-05, 4.443000000000502e-05, 4.4319000000000996e-05, 4.420800000000391e-05, 4.41939999999974e-05, 4.3555000000000677e-05, 4.3555000000000677e-05, 4.3569000000000246e-05, 4.4096999999999886e-05, 4.3860999999999206e-05, 4.3638999999998096e-05, 4.4430999999997556e-05, 4.420799999999697e-05, 4.3874999999998776e-05, 4.4195000000003815e-05, 4.3652999999997666e-05, 4.3653000000004605e-05, 4.3874999999998776e-05, 4.355600000000015e-05, 4.4445000000004065e-05, 4.355600000000015e-05, 4.3987000000002274e-05, 4.4333000000000566e-05, 4.4096999999999886e-05, 4.4167000000004675e-05, 4.398599999999586e-05, 4.38060000000004e-05, 4.444400000000459e-05, 4.427800000000176e-05, 4.420800000000391e-05, 4.392999999999758e-05, 4.376400000000169e-05, 4.356999999999972e-05, 4.3874999999998776e-05, 4.397200000000323e-05, 4.401400000000194e-05, 4.3860999999999206e-05, 4.4110999999999456e-05, 4.350000000000187e-05, 4.3582999999999816e-05, 4.373600000000255e-05, 4.3624999999998526e-05, 4.3652999999997666e-05, 4.427800000000176e-05, 4.352800000000101e-05, 4.408399999999979e-05]</msg>
<status status="PASS" starttime="20201030 15:57:11.092" endtime="20201030 15:57:11.096"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:11.080" endtime="20201030 15:57:11.098"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:11.109" endtime="20201030 15:57:11.130"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:11.103" endtime="20201030 15:57:11.132"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:11.100" endtime="20201030 15:57:11.133"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:10.615" endtime="20201030 15:57:11.133"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:10.613" endtime="20201030 15:57:11.134"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:11.156" endtime="20201030 15:57:11.176"></status>
</kw>
<msg timestamp="20201030 15:57:11.178" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:11.153" endtime="20201030 15:57:11.178"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:11.184" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:11.180" endtime="20201030 15:57:11.184"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:11.186" endtime="20201030 15:57:11.190"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:11.146" endtime="20201030 15:57:11.191"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:11.140" endtime="20201030 15:57:11.193"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:11.209" endtime="20201030 15:57:11.550"></status>
</kw>
<msg timestamp="20201030 15:57:11.557" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040949153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040994222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:11.206" endtime="20201030 15:57:11.558"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:11.576" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040949153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040994222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:11.560" endtime="20201030 15:57:11.577"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:11.579" endtime="20201030 15:57:11.583"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:11.199" endtime="20201030 15:57:11.584"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:11.194" endtime="20201030 15:57:11.586"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:11.596" level="INFO">${RESULT} = [{'diff': 4.506899999999481e-05}, {'diff': 4.477800000000226e-05}, {'diff': 4.4888999999999346e-05}, {'diff': 4.476399999999575e-05}, {'diff': 4.5111000000000456e-05}, {'diff': 4.5444999999998126e-05}...</msg>
<status status="PASS" starttime="20201030 15:57:11.587" endtime="20201030 15:57:11.597"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:11.607" level="INFO">${ACCURACY} = {'diff': [4.506899999999481e-05, 4.477800000000226e-05, 4.4888999999999346e-05, 4.476399999999575e-05, 4.5111000000000456e-05, 4.5444999999998126e-05, 4.5416999999998986e-05, 4.5416999999998986e-05, 4...</msg>
<status status="PASS" starttime="20201030 15:57:11.598" endtime="20201030 15:57:11.608"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:11.618" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201030 15:57:11.616" endtime="20201030 15:57:11.619"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:11.624" level="INFO">VALUE: [4.506899999999481e-05, 4.477800000000226e-05, 4.4888999999999346e-05, 4.476399999999575e-05, 4.5111000000000456e-05, 4.5444999999998126e-05, 4.5416999999998986e-05, 4.5416999999998986e-05, 4.51939999999984e-05, 4.476400000000269e-05, 4.454200000000158e-05, 4.5431000000005495e-05, 4.5138999999999596e-05, 4.5431000000005495e-05, 4.5333000000001566e-05, 4.454200000000158e-05, 4.466599999999876e-05, 4.541599999999951e-05, 4.470800000000441e-05, 4.505500000000218e-05, 4.509699999999395e-05, 4.500000000000337e-05, 4.48060000000014e-05, 4.499999999999643e-05, 4.477799999999532e-05, 4.4667000000005175e-05, 4.4652999999998666e-05, 4.476399999999575e-05, 4.511099999999352e-05, 4.5402999999999416e-05, 4.479200000000183e-05, 4.4638999999999096e-05, 4.498599999999686e-05, 4.501400000000294e-05, 4.4861000000000206e-05, 4.4666999999998236e-05, 4.531999999999453e-05, 4.4874999999999776e-05, 4.4624999999999526e-05, 4.501400000000294e-05, 4.477699999999585e-05, 4.531899999999506e-05, 4.526400000000319e-05, 4.5333000000001566e-05, 4.4875000000006715e-05, 4.476400000000269e-05, 4.4653000000005605e-05, 4.533299999999463e-05, 4.4597000000000386e-05, 4.497200000000423e-05]</msg>
<status status="PASS" starttime="20201030 15:57:11.621" endtime="20201030 15:57:11.630"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:11.609" endtime="20201030 15:57:11.631"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:11.641" endtime="20201030 15:57:11.663"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:11.637" endtime="20201030 15:57:11.664"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:11.634" endtime="20201030 15:57:11.665"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:11.136" endtime="20201030 15:57:11.666"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:11.135" endtime="20201030 15:57:11.666"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:11.689" endtime="20201030 15:57:11.709"></status>
</kw>
<msg timestamp="20201030 15:57:11.710" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:11.686" endtime="20201030 15:57:11.710"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:11.716" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:11.712" endtime="20201030 15:57:11.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:11.719" endtime="20201030 15:57:11.722"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:11.679" endtime="20201030 15:57:11.724"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:11.673" endtime="20201030 15:57:11.726"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:11.742" endtime="20201030 15:57:12.084"></status>
</kw>
<msg timestamp="20201030 15:57:12.091" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041880569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041927083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:11.739" endtime="20201030 15:57:12.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:12.110" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041880569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041927083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:12.093" endtime="20201030 15:57:12.111"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:12.112" endtime="20201030 15:57:12.116"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:11.732" endtime="20201030 15:57:12.118"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:11.727" endtime="20201030 15:57:12.119"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:12.130" level="INFO">${RESULT} = [{'diff': 4.65139999999975e-05}, {'diff': 4.555500000000268e-05}, {'diff': 4.645799999999922e-05}, {'diff': 4.555500000000268e-05}, {'diff': 4.555500000000268e-05}, {'diff': 4.6319000000003e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 15:57:12.121" endtime="20201030 15:57:12.130"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:12.141" level="INFO">${ACCURACY} = {'diff': [4.65139999999975e-05, 4.555500000000268e-05, 4.645799999999922e-05, 4.555500000000268e-05, 4.555500000000268e-05, 4.6319000000003e-05, 4.552800000000301e-05, 4.5889000000000346e-05, 4.577799...</msg>
<status status="PASS" starttime="20201030 15:57:12.132" endtime="20201030 15:57:12.142"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:12.152" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201030 15:57:12.150" endtime="20201030 15:57:12.153"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:12.158" level="INFO">VALUE: [4.65139999999975e-05, 4.555500000000268e-05, 4.645799999999922e-05, 4.555500000000268e-05, 4.555500000000268e-05, 4.6319000000003e-05, 4.552800000000301e-05, 4.5889000000000346e-05, 4.577799999999632e-05, 4.647199999999879e-05, 4.5861000000001206e-05, 4.597199999999829e-05, 4.605599999999571e-05, 4.572199999999804e-05, 4.5666999999999236e-05, 4.597199999999829e-05, 4.555600000000215e-05, 4.6111000000001456e-05, 4.599999999999743e-05, 4.6153000000000166e-05, 4.632000000000247e-05, 4.6430999999999556e-05, 4.6097000000001886e-05, 4.565200000000019e-05, 4.6125000000001026e-05, 4.5875000000000776e-05, 4.5639000000000096e-05, 4.5666999999999236e-05, 4.602799999999657e-05, 4.605500000000318e-05, 4.554199999999564e-05, 4.644399999999965e-05, 4.5666999999999236e-05, 4.622199999999854e-05, 4.5889000000000346e-05, 4.5875000000000776e-05, 4.6444999999999126e-05, 4.608399999999485e-05, 4.6208999999998446e-05, 4.58190000000025e-05, 4.6208999999998446e-05, 4.565200000000019e-05, 4.632000000000247e-05, 4.622199999999854e-05, 4.598599999999786e-05, 4.577699999999685e-05, 4.647200000000573e-05, 4.5639000000000096e-05, 4.583299999999513e-05, 4.5875000000000776e-05]</msg>
<status status="PASS" starttime="20201030 15:57:12.155" endtime="20201030 15:57:12.160"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:12.143" endtime="20201030 15:57:12.161"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:12.171" endtime="20201030 15:57:12.193"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:12.167" endtime="20201030 15:57:12.194"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:12.164" endtime="20201030 15:57:12.195"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:11.668" endtime="20201030 15:57:12.196"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:11.667" endtime="20201030 15:57:12.196"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:12.220" endtime="20201030 15:57:12.240"></status>
</kw>
<msg timestamp="20201030 15:57:12.241" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:12.216" endtime="20201030 15:57:12.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:12.247" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:12.243" endtime="20201030 15:57:12.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:12.250" endtime="20201030 15:57:12.253"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:12.209" endtime="20201030 15:57:12.255"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:12.203" endtime="20201030 15:57:12.257"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:12.274" endtime="20201030 15:57:12.639"></status>
</kw>
<msg timestamp="20201030 15:57:12.647" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042233333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042280542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:12.270" endtime="20201030 15:57:12.647"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:12.668" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042233333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042280542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:12.649" endtime="20201030 15:57:12.669"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:12.670" endtime="20201030 15:57:12.674"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:12.263" endtime="20201030 15:57:12.676"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:12.258" endtime="20201030 15:57:12.678"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:12.689" level="INFO">${RESULT} = [{'diff': 4.7208999999999446e-05}, {'diff': 4.7347000000003137e-05}, {'diff': 4.708300000000332e-05}, {'diff': 4.7208999999999446e-05}, {'diff': 4.731999999999653e-05}, {'diff': 4.652799999999707e-05}...</msg>
<status status="PASS" starttime="20201030 15:57:12.680" endtime="20201030 15:57:12.690"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:12.699" level="INFO">${ACCURACY} = {'diff': [4.7208999999999446e-05, 4.7347000000003137e-05, 4.708300000000332e-05, 4.7208999999999446e-05, 4.731999999999653e-05, 4.652799999999707e-05, 4.6653000000000666e-05, 4.6973000000005705e-05, 4...</msg>
<status status="PASS" starttime="20201030 15:57:12.691" endtime="20201030 15:57:12.700"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:12.711" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201030 15:57:12.709" endtime="20201030 15:57:12.712"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:12.717" level="INFO">VALUE: [4.7208999999999446e-05, 4.7347000000003137e-05, 4.708300000000332e-05, 4.7208999999999446e-05, 4.731999999999653e-05, 4.652799999999707e-05, 4.6653000000000666e-05, 4.6973000000005705e-05, 4.6708999999998946e-05, 4.6987000000005275e-05, 4.676300000000522e-05, 4.6861000000002206e-05, 4.726400000000519e-05, 4.655499999999674e-05, 4.7319000000004e-05, 4.7347000000003137e-05, 4.676399999999775e-05, 4.698599999999886e-05, 4.6875000000001776e-05, 4.731899999999706e-05, 4.656999999999578e-05, 4.6653000000000666e-05, 4.6667000000000236e-05, 4.698599999999886e-05, 4.6889000000001346e-05, 4.7125000000002026e-05, 4.7222999999999016e-05, 4.699999999999843e-05, 4.658299999999588e-05, 4.69860000000058e-05, 4.7222999999999016e-05, 4.720799999999997e-05, 4.683300000000307e-05, 4.6861000000002206e-05, 4.7097000000002887e-05, 4.731899999999706e-05, 4.743000000000108e-05, 4.705599999999671e-05, 4.6861000000002206e-05, 4.727799999999782e-05, 4.71940000000004e-05, 4.652799999999707e-05, 4.6653000000000666e-05, 4.654199999999664e-05, 4.726299999999878e-05, 4.7167000000000736e-05, 4.6653000000000666e-05, 4.6875000000001776e-05, 4.730599999999696e-05, 4.654199999999664e-05]</msg>
<status status="PASS" starttime="20201030 15:57:12.714" endtime="20201030 15:57:12.719"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:12.701" endtime="20201030 15:57:12.720"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:12.730" endtime="20201030 15:57:12.753"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:12.726" endtime="20201030 15:57:12.754"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:12.723" endtime="20201030 15:57:12.755"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:12.198" endtime="20201030 15:57:12.756"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:12.197" endtime="20201030 15:57:12.756"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:12.781" endtime="20201030 15:57:12.804"></status>
</kw>
<msg timestamp="20201030 15:57:12.805" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:12.777" endtime="20201030 15:57:12.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:12.812" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:12.807" endtime="20201030 15:57:12.813"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:12.814" endtime="20201030 15:57:12.818"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:12.770" endtime="20201030 15:57:12.820"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:12.763" endtime="20201030 15:57:12.822"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:12.839" endtime="20201030 15:57:13.202"></status>
</kw>
<msg timestamp="20201030 15:57:13.210" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045484708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045533139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:12.836" endtime="20201030 15:57:13.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:13.230" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045484708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045533139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:13.212" endtime="20201030 15:57:13.230"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:13.232" endtime="20201030 15:57:13.236"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:12.828" endtime="20201030 15:57:13.238"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:12.823" endtime="20201030 15:57:13.240"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:13.251" level="INFO">${RESULT} = [{'diff': 4.8431000000001556e-05}, {'diff': 4.752799999999807e-05}, {'diff': 4.756999999999678e-05}, {'diff': 4.843099999999462e-05}, {'diff': 4.83339999999971e-05}, {'diff': 4.7681000000000806e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:57:13.241" endtime="20201030 15:57:13.251"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:13.262" level="INFO">${ACCURACY} = {'diff': [4.8431000000001556e-05, 4.752799999999807e-05, 4.756999999999678e-05, 4.843099999999462e-05, 4.83339999999971e-05, 4.7681000000000806e-05, 4.777799999999832e-05, 4.8459000000000696e-05, 4.76...</msg>
<status status="PASS" starttime="20201030 15:57:13.253" endtime="20201030 15:57:13.262"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:13.274" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201030 15:57:13.271" endtime="20201030 15:57:13.274"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:13.280" level="INFO">VALUE: [4.8431000000001556e-05, 4.752799999999807e-05, 4.756999999999678e-05, 4.843099999999462e-05, 4.83339999999971e-05, 4.7681000000000806e-05, 4.777799999999832e-05, 4.8459000000000696e-05, 4.765299999999473e-05, 4.777800000000526e-05, 4.761099999999602e-05, 4.756899999999731e-05, 4.823600000000011e-05, 4.799999999999943e-05, 4.845800000000122e-05, 4.766600000000176e-05, 4.776399999999875e-05, 4.7861000000003207e-05, 4.783400000000354e-05, 4.833300000000457e-05, 4.7639000000002096e-05, 4.808299999999738e-05, 4.7875000000002776e-05, 4.779200000000483e-05, 4.820800000000097e-05, 4.7875000000002776e-05, 4.794499999999369e-05, 4.786099999999627e-05, 4.7667000000001236e-05, 4.8195000000000876e-05, 4.801299999999953e-05, 4.763899999999516e-05, 4.752800000000501e-05, 4.7887999999995934e-05, 4.843000000000208e-05, 4.799999999999943e-05, 4.820800000000097e-05, 4.809700000000389e-05, 4.840299999999548e-05, 4.820800000000097e-05, 4.755500000000468e-05, 4.7667000000001236e-05, 4.776399999999875e-05, 4.820800000000097e-05, 4.83469999999972e-05, 4.798599999999986e-05, 4.7875000000002776e-05, 4.779199999999789e-05, 4.7875000000002776e-05, 4.831999999999753e-05]</msg>
<status status="PASS" starttime="20201030 15:57:13.276" endtime="20201030 15:57:13.281"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:13.264" endtime="20201030 15:57:13.283"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:13.295" endtime="20201030 15:57:13.317"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:13.288" endtime="20201030 15:57:13.319"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:13.286" endtime="20201030 15:57:13.319"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:12.759" endtime="20201030 15:57:13.320"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:12.757" endtime="20201030 15:57:13.320"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:13.345" endtime="20201030 15:57:13.365"></status>
</kw>
<msg timestamp="20201030 15:57:13.366" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:13.341" endtime="20201030 15:57:13.367"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:13.373" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:13.368" endtime="20201030 15:57:13.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:13.375" endtime="20201030 15:57:13.379"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:13.333" endtime="20201030 15:57:13.381"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:13.327" endtime="20201030 15:57:13.382"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:13.401" endtime="20201030 15:57:13.756"></status>
</kw>
<msg timestamp="20201030 15:57:13.764" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043715236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04376475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:57:13.397" endtime="20201030 15:57:13.764"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:13.782" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043715236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04376475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:57:13.766" endtime="20201030 15:57:13.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:13.784" endtime="20201030 15:57:13.788"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:13.389" endtime="20201030 15:57:13.790"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:13.384" endtime="20201030 15:57:13.791"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:13.802" level="INFO">${RESULT} = [{'diff': 4.95140000000005e-05}, {'diff': 4.888899999999641e-05}, {'diff': 4.886099999999727e-05}, {'diff': 4.904099999999967e-05}, {'diff': 4.8707999999994533e-05}, {'diff': 4.876399999999975e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:57:13.793" endtime="20201030 15:57:13.802"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:13.813" level="INFO">${ACCURACY} = {'diff': [4.95140000000005e-05, 4.888899999999641e-05, 4.886099999999727e-05, 4.904099999999967e-05, 4.8707999999994533e-05, 4.876399999999975e-05, 4.8917000000002486e-05, 4.899999999999349e-05, 4.941...</msg>
<status status="PASS" starttime="20201030 15:57:13.804" endtime="20201030 15:57:13.813"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:13.823" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201030 15:57:13.821" endtime="20201030 15:57:13.824"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:13.829" level="INFO">VALUE: [4.95140000000005e-05, 4.888899999999641e-05, 4.886099999999727e-05, 4.904099999999967e-05, 4.8707999999994533e-05, 4.876399999999975e-05, 4.8917000000002486e-05, 4.899999999999349e-05, 4.941600000000351e-05, 4.868000000000233e-05, 4.944400000000265e-05, 4.8651999999996254e-05, 4.931899999999906e-05, 4.897200000000129e-05, 4.898600000000086e-05, 4.877799999999932e-05, 4.933299999999863e-05, 4.86669999999953e-05, 4.855599999999821e-05, 4.884700000000464e-05, 4.911099999999752e-05, 4.9431000000002556e-05, 4.912499999999709e-05, 4.8875000000003777e-05, 4.855599999999821e-05, 4.904199999999914e-05, 4.912499999999709e-05, 4.877799999999932e-05, 4.855599999999821e-05, 4.855499999999874e-05, 4.852799999999907e-05, 4.904199999999914e-05, 4.887499999999684e-05, 4.877699999999985e-05, 4.923600000000111e-05, 4.920800000000197e-05, 4.8917000000002486e-05, 4.898600000000086e-05, 4.854200000000558e-05, 4.852799999999907e-05, 4.863899999999616e-05, 4.944400000000265e-05, 4.943099999999562e-05, 4.8889000000003346e-05, 4.876399999999975e-05, 4.930599999999896e-05, 4.95140000000005e-05, 4.855599999999821e-05, 4.9445000000002126e-05, 4.879099999999942e-05]</msg>
<status status="PASS" starttime="20201030 15:57:13.826" endtime="20201030 15:57:13.831"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:13.814" endtime="20201030 15:57:13.832"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:13.842" endtime="20201030 15:57:13.863"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:13.837" endtime="20201030 15:57:13.865"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:13.835" endtime="20201030 15:57:13.866"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:13.323" endtime="20201030 15:57:13.867"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:13.321" endtime="20201030 15:57:13.867"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:13.890" endtime="20201030 15:57:13.911"></status>
</kw>
<msg timestamp="20201030 15:57:13.912" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:13.886" endtime="20201030 15:57:13.912"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:13.918" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:13.914" endtime="20201030 15:57:13.919"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:13.920" endtime="20201030 15:57:13.924"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:13.879" endtime="20201030 15:57:13.926"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:13.873" endtime="20201030 15:57:13.927"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:13.944" endtime="20201030 15:57:14.278"></status>
</kw>
<msg timestamp="20201030 15:57:14.285" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042725875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042776014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:13.940" endtime="20201030 15:57:14.286"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:14.304" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042725875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042776014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:14.288" endtime="20201030 15:57:14.305"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:14.306" endtime="20201030 15:57:14.310"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:13.933" endtime="20201030 15:57:14.312"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:13.928" endtime="20201030 15:57:14.313"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:14.324" level="INFO">${RESULT} = [{'diff': 5.013899999999766e-05}, {'diff': 5.020800000000297e-05}, {'diff': 5.044499999999619e-05}, {'diff': 5.034700000000614e-05}, {'diff': 5.020800000000297e-05}, {'diff': 4.997200000000229e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:57:14.315" endtime="20201030 15:57:14.324"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:14.335" level="INFO">${ACCURACY} = {'diff': [5.013899999999766e-05, 5.020800000000297e-05, 5.044499999999619e-05, 5.034700000000614e-05, 5.020800000000297e-05, 4.997200000000229e-05, 5.020800000000297e-05, 4.976400000000075e-05, 5.0445...</msg>
<status status="PASS" starttime="20201030 15:57:14.326" endtime="20201030 15:57:14.335"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:14.346" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201030 15:57:14.344" endtime="20201030 15:57:14.347"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:14.351" level="INFO">VALUE: [5.013899999999766e-05, 5.020800000000297e-05, 5.044499999999619e-05, 5.034700000000614e-05, 5.020800000000297e-05, 4.997200000000229e-05, 5.020800000000297e-05, 4.976400000000075e-05, 5.0445000000003126e-05, 4.955599999999921e-05, 5.0431000000003556e-05, 4.9723000000001516e-05, 4.99869999999944e-05, 4.968099999999587e-05, 4.9637999999997684e-05, 5.009699999999895e-05, 4.979100000000042e-05, 5.048600000000236e-05, 4.966600000000376e-05, 5.043000000000408e-05, 4.9681000000002806e-05, 4.965299999999673e-05, 4.96669999999963e-05, 5.009699999999895e-05, 4.95140000000005e-05, 5.0014000000001e-05, 5.043099999999662e-05, 4.947200000000179e-05, 5.041699999999705e-05, 4.956999999999878e-05, 5.009799999999842e-05, 4.999999999999449e-05, 4.958299999999888e-05, 5.009799999999842e-05, 5.012500000000503e-05, 5.0207999999996034e-05, 5.0014000000001e-05, 4.9889000000004347e-05, 4.954100000000017e-05, 5.009699999999895e-05, 5.0193999999996464e-05, 5.013899999999766e-05, 4.952800000000007e-05, 5.009699999999895e-05, 5.009699999999895e-05, 5.0221999999995603e-05, 5.030599999999996e-05, 4.998599999999492e-05, 4.954199999999964e-05, 5.009699999999895e-05]</msg>
<status status="PASS" starttime="20201030 15:57:14.348" endtime="20201030 15:57:14.353"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:14.337" endtime="20201030 15:57:14.354"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:14.364" endtime="20201030 15:57:14.386"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:14.360" endtime="20201030 15:57:14.387"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:14.357" endtime="20201030 15:57:14.388"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:13.869" endtime="20201030 15:57:14.389"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:13.868" endtime="20201030 15:57:14.389"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:14.412" endtime="20201030 15:57:14.432"></status>
</kw>
<msg timestamp="20201030 15:57:14.434" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:14.408" endtime="20201030 15:57:14.434"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:14.441" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:14.436" endtime="20201030 15:57:14.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:14.443" endtime="20201030 15:57:14.447"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:14.401" endtime="20201030 15:57:14.449"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:14.395" endtime="20201030 15:57:14.451"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:14.469" endtime="20201030 15:57:14.811"></status>
</kw>
<msg timestamp="20201030 15:57:14.818" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041399264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041450444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:14.465" endtime="20201030 15:57:14.819"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:14.837" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041399264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041450444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:14.821" endtime="20201030 15:57:14.838"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:14.840" endtime="20201030 15:57:14.844"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:14.457" endtime="20201030 15:57:14.845"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:14.452" endtime="20201030 15:57:14.847"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:14.857" level="INFO">${RESULT} = [{'diff': 5.118000000000483e-05}, {'diff': 5.1429999999998144e-05}, {'diff': 5.120800000000397e-05}, {'diff': 5.075000000000218e-05}, {'diff': 5.077800000000132e-05}, {'diff': 5.0985999999995923e-05},...</msg>
<status status="PASS" starttime="20201030 15:57:14.848" endtime="20201030 15:57:14.858"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:14.867" level="INFO">${ACCURACY} = {'diff': [5.118000000000483e-05, 5.1429999999998144e-05, 5.120800000000397e-05, 5.075000000000218e-05, 5.077800000000132e-05, 5.0985999999995923e-05, 5.086099999999927e-05, 5.073600000000261e-05, 5.12...</msg>
<status status="PASS" starttime="20201030 15:57:14.860" endtime="20201030 15:57:14.868"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:14.878" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201030 15:57:14.876" endtime="20201030 15:57:14.879"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:14.884" level="INFO">VALUE: [5.118000000000483e-05, 5.1429999999998144e-05, 5.120800000000397e-05, 5.075000000000218e-05, 5.077800000000132e-05, 5.0985999999995923e-05, 5.086099999999927e-05, 5.073600000000261e-05, 5.1207999999997034e-05, 5.1137999999999184e-05, 5.1417000000004986e-05, 5.100000000000243e-05, 5.098600000000286e-05, 5.108399999999985e-05, 5.065299999999773e-05, 5.088899999999841e-05, 5.100000000000243e-05, 5.143099999999762e-05, 5.095800000000372e-05, 5.127800000000182e-05, 5.1457999999997284e-05, 5.05270000000016e-05, 5.079100000000142e-05, 5.144400000000465e-05, 5.058299999999988e-05, 5.143000000000508e-05, 5.108300000000038e-05, 5.082000000000003e-05, 5.088899999999841e-05, 5.088899999999841e-05, 5.141699999999805e-05, 5.133300000000063e-05, 5.086099999999927e-05, 5.094499999999669e-05, 5.076400000000175e-05, 5.080500000000099e-05, 5.090299999999798e-05, 5.120899999999651e-05, 5.0665999999997824e-05, 5.088800000000587e-05, 5.1443999999997714e-05, 5.054100000000117e-05, 5.087499999999884e-05, 5.054100000000117e-05, 5.108300000000038e-05, 5.0665999999997824e-05, 5.108300000000038e-05, 5.0985999999995923e-05, 5.099999999999549e-05, 5.1431000000004556e-05]</msg>
<status status="PASS" starttime="20201030 15:57:14.881" endtime="20201030 15:57:14.885"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:14.869" endtime="20201030 15:57:14.887"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:14.897" endtime="20201030 15:57:14.918"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:14.892" endtime="20201030 15:57:14.920"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:14.890" endtime="20201030 15:57:14.921"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:14.391" endtime="20201030 15:57:14.921"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:14.390" endtime="20201030 15:57:14.922"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:14.945" endtime="20201030 15:57:14.966"></status>
</kw>
<msg timestamp="20201030 15:57:14.968" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:14.942" endtime="20201030 15:57:14.968"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:14.974" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:14.970" endtime="20201030 15:57:14.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:14.976" endtime="20201030 15:57:14.980"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:14.934" endtime="20201030 15:57:14.982"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:14.929" endtime="20201030 15:57:14.983"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:15.000" endtime="20201030 15:57:15.354"></status>
</kw>
<msg timestamp="20201030 15:57:15.362" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043585708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043637333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:14.997" endtime="20201030 15:57:15.362"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:15.381" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043585708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043637333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:15.364" endtime="20201030 15:57:15.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:15.384" endtime="20201030 15:57:15.388"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:14.989" endtime="20201030 15:57:15.390"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:14.985" endtime="20201030 15:57:15.392"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:15.403" level="INFO">${RESULT} = [{'diff': 5.162499999999959e-05}, {'diff': 5.186100000000027e-05}, {'diff': 5.154100000000217e-05}, {'diff': 5.2429999999999144e-05}, {'diff': 5.2235999999997174e-05}, {'diff': 5.159799999999992e-05},...</msg>
<status status="PASS" starttime="20201030 15:57:15.393" endtime="20201030 15:57:15.403"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:15.413" level="INFO">${ACCURACY} = {'diff': [5.162499999999959e-05, 5.186100000000027e-05, 5.154100000000217e-05, 5.2429999999999144e-05, 5.2235999999997174e-05, 5.159799999999992e-05, 5.2263999999996313e-05, 5.1999999999996493e-05, 5....</msg>
<status status="PASS" starttime="20201030 15:57:15.405" endtime="20201030 15:57:15.413"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:15.424" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201030 15:57:15.422" endtime="20201030 15:57:15.425"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:15.430" level="INFO">VALUE: [5.162499999999959e-05, 5.186100000000027e-05, 5.154100000000217e-05, 5.2429999999999144e-05, 5.2235999999997174e-05, 5.159799999999992e-05, 5.2263999999996313e-05, 5.1999999999996493e-05, 5.232000000000153e-05, 5.161100000000002e-05, 5.232000000000153e-05, 5.231999999999459e-05, 5.1667000000005237e-05, 5.15140000000025e-05, 5.223600000000411e-05, 5.2221999999997604e-05, 5.1499999999995993e-05, 5.187499999999984e-05, 5.193099999999812e-05, 5.2263999999996313e-05, 5.155500000000174e-05, 5.18470000000007e-05, 5.245800000000522e-05, 5.156900000000131e-05, 5.16669999999983e-05, 5.244400000000565e-05, 5.2014000000003e-05, 5.155600000000121e-05, 5.212500000000009e-05, 5.155599999999427e-05, 5.229200000000239e-05, 5.243099999999862e-05, 5.187499999999984e-05, 5.176400000000275e-05, 5.233399999999416e-05, 5.231999999999459e-05, 5.1665999999998824e-05, 5.2429999999999144e-05, 5.1985999999996924e-05, 5.15270000000026e-05, 5.2429999999999144e-05, 5.187499999999984e-05, 5.163899999999916e-05, 5.187499999999984e-05, 5.154200000000164e-05, 5.188899999999941e-05, 5.231899999999512e-05, 5.176400000000275e-05, 5.165299999999873e-05, 5.23340000000011e-05]</msg>
<status status="PASS" starttime="20201030 15:57:15.427" endtime="20201030 15:57:15.432"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:15.415" endtime="20201030 15:57:15.434"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:15.446" endtime="20201030 15:57:15.469"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:15.439" endtime="20201030 15:57:15.470"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:15.437" endtime="20201030 15:57:15.471"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:14.924" endtime="20201030 15:57:15.472"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:14.923" endtime="20201030 15:57:15.472"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:15.496" endtime="20201030 15:57:15.517"></status>
</kw>
<msg timestamp="20201030 15:57:15.518" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:15.493" endtime="20201030 15:57:15.518"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:15.524" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:15.520" endtime="20201030 15:57:15.525"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:15.526" endtime="20201030 15:57:15.530"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:15.485" endtime="20201030 15:57:15.532"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:15.479" endtime="20201030 15:57:15.533"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:15.550" endtime="20201030 15:57:15.895"></status>
</kw>
<msg timestamp="20201030 15:57:15.902" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044455444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044508611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:15.546" endtime="20201030 15:57:15.902"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:15.920" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044455444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044508611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:15.904" endtime="20201030 15:57:15.921"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:15.923" endtime="20201030 15:57:15.927"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:15.539" endtime="20201030 15:57:15.928"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:15.534" endtime="20201030 15:57:15.930"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:15.940" level="INFO">${RESULT} = [{'diff': 5.31669999999998e-05}, {'diff': 5.3443999999999714e-05}, {'diff': 5.304200000000314e-05}, {'diff': 5.312500000000109e-05}, {'diff': 5.312500000000109e-05}, {'diff': 5.31669999999998e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:57:15.931" endtime="20201030 15:57:15.941"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:15.951" level="INFO">${ACCURACY} = {'diff': [5.31669999999998e-05, 5.3443999999999714e-05, 5.304200000000314e-05, 5.312500000000109e-05, 5.312500000000109e-05, 5.31669999999998e-05, 5.2749999999997244e-05, 5.345899999999876e-05, 5.2972...</msg>
<status status="PASS" starttime="20201030 15:57:15.942" endtime="20201030 15:57:15.951"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:15.962" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201030 15:57:15.960" endtime="20201030 15:57:15.963"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:15.967" level="INFO">VALUE: [5.31669999999998e-05, 5.3443999999999714e-05, 5.304200000000314e-05, 5.312500000000109e-05, 5.312500000000109e-05, 5.31669999999998e-05, 5.2749999999997244e-05, 5.345899999999876e-05, 5.297299999999783e-05, 5.3235999999998174e-05, 5.3221999999998604e-05, 5.309800000000142e-05, 5.3430000000000144e-05, 5.258299999999494e-05, 5.255500000000274e-05, 5.2471999999997854e-05, 5.298600000000486e-05, 5.286099999999433e-05, 5.25549999999958e-05, 5.25419999999957e-05, 5.341700000000005e-05, 5.331900000000306e-05, 5.313900000000066e-05, 5.2681000000005807e-05, 5.331999999999559e-05, 5.290299999999998e-05, 5.2749999999997244e-05, 5.258300000000188e-05, 5.332000000000253e-05, 5.33340000000021e-05, 5.3195000000005876e-05, 5.309700000000195e-05, 5.266600000000676e-05, 5.3221999999998604e-05, 5.288900000000041e-05, 5.25270000000036e-05, 5.3207999999999034e-05, 5.277800000000332e-05, 5.3443999999999714e-05, 5.283300000000213e-05, 5.283300000000213e-05, 5.290299999999998e-05, 5.322200000000554e-05, 5.255600000000221e-05, 5.320899999999851e-05, 5.25419999999957e-05, 5.344499999999919e-05, 5.25419999999957e-05, 5.309800000000142e-05, 5.33340000000021e-05]</msg>
<status status="PASS" starttime="20201030 15:57:15.964" endtime="20201030 15:57:15.969"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:15.953" endtime="20201030 15:57:15.970"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:15.980" endtime="20201030 15:57:16.002"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:15.976" endtime="20201030 15:57:16.003"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:15.973" endtime="20201030 15:57:16.004"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:15.474" endtime="20201030 15:57:16.005"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:15.473" endtime="20201030 15:57:16.005"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:16.028" endtime="20201030 15:57:16.048"></status>
</kw>
<msg timestamp="20201030 15:57:16.049" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:16.024" endtime="20201030 15:57:16.050"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:16.055" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:16.051" endtime="20201030 15:57:16.056"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:16.058" endtime="20201030 15:57:16.062"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:16.017" endtime="20201030 15:57:16.063"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:16.011" endtime="20201030 15:57:16.065"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:16.081" endtime="20201030 15:57:16.426"></status>
</kw>
<msg timestamp="20201030 15:57:16.434" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041388972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041442972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:16.078" endtime="20201030 15:57:16.434"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:16.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041388972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041442972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:16.436" endtime="20201030 15:57:16.453"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:16.454" endtime="20201030 15:57:16.458"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:16.071" endtime="20201030 15:57:16.460"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:16.066" endtime="20201030 15:57:16.461"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:16.472" level="INFO">${RESULT} = [{'diff': 5.3999999999998494e-05}, {'diff': 5.4221999999999604e-05}, {'diff': 5.3999999999998494e-05}, {'diff': 5.409699999999601e-05}, {'diff': 5.4416000000001574e-05}, {'diff': 5.4249999999998744e-0...</msg>
<status status="PASS" starttime="20201030 15:57:16.463" endtime="20201030 15:57:16.472"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:16.483" level="INFO">${ACCURACY} = {'diff': [5.3999999999998494e-05, 5.4221999999999604e-05, 5.3999999999998494e-05, 5.409699999999601e-05, 5.4416000000001574e-05, 5.4249999999998744e-05, 5.363900000000116e-05, 5.387500000000184e-05, 5...</msg>
<status status="PASS" starttime="20201030 15:57:16.474" endtime="20201030 15:57:16.483"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:16.494" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201030 15:57:16.491" endtime="20201030 15:57:16.494"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:16.499" level="INFO">VALUE: [5.3999999999998494e-05, 5.4221999999999604e-05, 5.3999999999998494e-05, 5.409699999999601e-05, 5.4416000000001574e-05, 5.4249999999998744e-05, 5.363900000000116e-05, 5.387500000000184e-05, 5.358400000000235e-05, 5.411100000000252e-05, 5.409699999999601e-05, 5.355600000000321e-05, 5.409700000000295e-05, 5.4235999999999174e-05, 5.358300000000288e-05, 5.36670000000003e-05, 5.4235999999999174e-05, 5.430599999999702e-05, 5.3763999999997814e-05, 5.3651999999994315e-05, 5.3999999999998494e-05, 5.387500000000184e-05, 5.4444000000000714e-05, 5.354099999999723e-05, 5.388900000000141e-05, 5.387500000000184e-05, 5.36670000000003e-05, 5.36670000000003e-05, 5.4013999999998064e-05, 5.379199999999695e-05, 5.3777999999997383e-05, 5.431999999999659e-05, 5.3999999999998494e-05, 5.404099999999773e-05, 5.354200000000364e-05, 5.411100000000252e-05, 5.443100000000062e-05, 5.38749999999949e-05, 5.443100000000062e-05, 5.4471999999999854e-05, 5.4194000000000464e-05, 5.43470000000032e-05, 5.3985999999998924e-05, 5.38749999999949e-05, 5.36670000000003e-05, 5.356899999999637e-05, 5.4458000000000284e-05, 5.3944000000000214e-05, 5.36670000000003e-05, 5.36670000000003e-05]</msg>
<status status="PASS" starttime="20201030 15:57:16.496" endtime="20201030 15:57:16.501"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:16.485" endtime="20201030 15:57:16.503"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:16.513" endtime="20201030 15:57:16.535"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:16.508" endtime="20201030 15:57:16.537"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:16.505" endtime="20201030 15:57:16.537"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:16.007" endtime="20201030 15:57:16.538"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:16.006" endtime="20201030 15:57:16.538"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:16.561" endtime="20201030 15:57:16.581"></status>
</kw>
<msg timestamp="20201030 15:57:16.583" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:16.558" endtime="20201030 15:57:16.583"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:16.589" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:16.585" endtime="20201030 15:57:16.590"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:16.591" endtime="20201030 15:57:16.595"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:16.550" endtime="20201030 15:57:16.597"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:16.545" endtime="20201030 15:57:16.598"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:16.614" endtime="20201030 15:57:16.962"></status>
</kw>
<msg timestamp="20201030 15:57:16.969" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041711722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041766361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:16.611" endtime="20201030 15:57:16.970"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:16.988" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041711722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041766361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:16.972" endtime="20201030 15:57:16.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:16.990" endtime="20201030 15:57:16.994"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:16.604" endtime="20201030 15:57:16.996"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:16.599" endtime="20201030 15:57:16.997"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:17.008" level="INFO">${RESULT} = [{'diff': 5.463900000000216e-05}, {'diff': 5.469500000000044e-05}, {'diff': 5.4735999999999674e-05}, {'diff': 5.4958000000000784e-05}, {'diff': 5.491700000000155e-05}, {'diff': 5.5208000000001034e-05}...</msg>
<status status="PASS" starttime="20201030 15:57:16.999" endtime="20201030 15:57:17.008"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:17.017" level="INFO">${ACCURACY} = {'diff': [5.463900000000216e-05, 5.469500000000044e-05, 5.4735999999999674e-05, 5.4958000000000784e-05, 5.491700000000155e-05, 5.5208000000001034e-05, 5.462500000000259e-05, 5.531999999999759e-05, 5.5...</msg>
<status status="PASS" starttime="20201030 15:57:17.010" endtime="20201030 15:57:17.018"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:17.028" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201030 15:57:17.026" endtime="20201030 15:57:17.029"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:17.034" level="INFO">VALUE: [5.463900000000216e-05, 5.469500000000044e-05, 5.4735999999999674e-05, 5.4958000000000784e-05, 5.491700000000155e-05, 5.5208000000001034e-05, 5.462500000000259e-05, 5.531999999999759e-05, 5.512499999999615e-05, 5.4763999999998814e-05, 5.534799999999673e-05, 5.4763999999998814e-05, 5.530600000000496e-05, 5.4541999999997703e-05, 5.5222000000000604e-05, 5.5387999999996496e-05, 5.533299999999769e-05, 5.480599999999752e-05, 5.459700000000345e-05, 5.4499999999998994e-05, 5.509700000000395e-05, 5.509699999999701e-05, 5.4541999999997703e-05, 5.490300000000198e-05, 5.509700000000395e-05, 5.534699999999726e-05, 5.486100000000327e-05, 5.509699999999701e-05, 5.4749999999999244e-05, 5.5138000000003184e-05, 5.53340000000041e-05, 5.53470000000042e-05, 5.4763999999998814e-05, 5.4652000000002254e-05, 5.5208000000001034e-05, 5.533299999999769e-05, 5.48749999999959e-05, 5.534699999999726e-05, 5.477800000000532e-05, 5.509700000000395e-05, 5.465300000000173e-05, 5.5444000000001714e-05, 5.463900000000216e-05, 5.4763999999998814e-05, 5.505599999999777e-05, 5.531999999999759e-05, 5.486100000000327e-05, 5.53749999999964e-05, 5.4763999999998814e-05, 5.4541999999997703e-05]</msg>
<status status="PASS" starttime="20201030 15:57:17.030" endtime="20201030 15:57:17.035"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:17.019" endtime="20201030 15:57:17.037"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:17.046" endtime="20201030 15:57:17.068"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:17.042" endtime="20201030 15:57:17.070"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:17.039" endtime="20201030 15:57:17.070"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:16.540" endtime="20201030 15:57:17.071"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:16.539" endtime="20201030 15:57:17.071"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:17.094" endtime="20201030 15:57:17.117"></status>
</kw>
<msg timestamp="20201030 15:57:17.118" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:17.091" endtime="20201030 15:57:17.118"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:17.124" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:17.120" endtime="20201030 15:57:17.125"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:17.126" endtime="20201030 15:57:17.130"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:17.084" endtime="20201030 15:57:17.132"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:17.078" endtime="20201030 15:57:17.133"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:17.150" endtime="20201030 15:57:17.494"></status>
</kw>
<msg timestamp="20201030 15:57:17.501" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043413458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043469778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:17.147" endtime="20201030 15:57:17.502"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:17.520" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043413458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043469778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:17.504" endtime="20201030 15:57:17.520"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:17.522" endtime="20201030 15:57:17.526"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:17.139" endtime="20201030 15:57:17.528"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:17.135" endtime="20201030 15:57:17.529"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:17.540" level="INFO">${RESULT} = [{'diff': 5.6319999999998593e-05}, {'diff': 5.641699999999611e-05}, {'diff': 5.5750000000000244e-05}, {'diff': 5.559700000000445e-05}, {'diff': 5.643100000000262e-05}, {'diff': 5.5763999999999814e-05}...</msg>
<status status="PASS" starttime="20201030 15:57:17.531" endtime="20201030 15:57:17.540"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:17.550" level="INFO">${ACCURACY} = {'diff': [5.6319999999998593e-05, 5.641699999999611e-05, 5.5750000000000244e-05, 5.559700000000445e-05, 5.643100000000262e-05, 5.5763999999999814e-05, 5.5763999999999814e-05, 5.609799999999748e-05, 5....</msg>
<status status="PASS" starttime="20201030 15:57:17.542" endtime="20201030 15:57:17.550"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:17.561" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201030 15:57:17.559" endtime="20201030 15:57:17.562"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:17.567" level="INFO">VALUE: [5.6319999999998593e-05, 5.641699999999611e-05, 5.5750000000000244e-05, 5.559700000000445e-05, 5.643100000000262e-05, 5.5763999999999814e-05, 5.5763999999999814e-05, 5.609799999999748e-05, 5.6208000000002034e-05, 5.5736000000000674e-05, 5.636100000000477e-05, 5.5666000000002824e-05, 5.63749999999974e-05, 5.633299999999869e-05, 5.6000000000000494e-05, 5.565299999999579e-05, 5.5527999999999134e-05, 5.6222000000001604e-05, 5.609700000000495e-05, 5.644500000000219e-05, 5.587500000000384e-05, 5.590299999999604e-05, 5.563900000000316e-05, 5.5750000000000244e-05, 5.622300000000108e-05, 5.63340000000051e-05, 5.6402000000004004e-05, 5.579099999999948e-05, 5.6430000000003144e-05, 5.590300000000298e-05, 5.583300000000513e-05, 5.5486000000000424e-05, 5.609700000000495e-05, 5.6443999999995775e-05, 5.5805999999998523e-05, 5.5541999999998704e-05, 5.566699999999536e-05, 5.5944000000002214e-05, 5.609699999999801e-05, 5.58749999999969e-05, 5.644500000000219e-05, 5.5541999999998704e-05, 5.622300000000108e-05, 5.566699999999536e-05, 5.588900000000341e-05, 5.5694000000001964e-05, 5.55549999999988e-05, 5.6429999999996205e-05, 5.6222000000001604e-05, 5.609700000000495e-05]</msg>
<status status="PASS" starttime="20201030 15:57:17.564" endtime="20201030 15:57:17.568"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:17.552" endtime="20201030 15:57:17.570"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:17.585" endtime="20201030 15:57:17.607"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:17.575" endtime="20201030 15:57:17.609"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:17.573" endtime="20201030 15:57:17.610"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:17.073" endtime="20201030 15:57:17.610"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:17.072" endtime="20201030 15:57:17.611"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:17.634" endtime="20201030 15:57:17.654"></status>
</kw>
<msg timestamp="20201030 15:57:17.655" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:17.630" endtime="20201030 15:57:17.656"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:17.662" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:17.658" endtime="20201030 15:57:17.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:17.664" endtime="20201030 15:57:17.668"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:17.623" endtime="20201030 15:57:17.669"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:17.617" endtime="20201030 15:57:17.671"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:17.687" endtime="20201030 15:57:18.032"></status>
</kw>
<msg timestamp="20201030 15:57:18.039" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041710569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041767528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:17.684" endtime="20201030 15:57:18.040"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:18.058" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041710569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041767528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:18.041" endtime="20201030 15:57:18.058"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:18.060" endtime="20201030 15:57:18.064"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:17.677" endtime="20201030 15:57:18.066"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:17.672" endtime="20201030 15:57:18.067"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:18.077" level="INFO">${RESULT} = [{'diff': 5.695899999999532e-05}, {'diff': 5.745900000000276e-05}, {'diff': 5.665300000000373e-05}, {'diff': 5.6541999999999704e-05}, {'diff': 5.709699999999901e-05}, {'diff': 5.733299999999969e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:57:18.069" endtime="20201030 15:57:18.078"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:18.088" level="INFO">${ACCURACY} = {'diff': [5.695899999999532e-05, 5.745900000000276e-05, 5.665300000000373e-05, 5.6541999999999704e-05, 5.709699999999901e-05, 5.733299999999969e-05, 5.6665999999996886e-05, 5.711100000000552e-05, 5.74...</msg>
<status status="PASS" starttime="20201030 15:57:18.079" endtime="20201030 15:57:18.089"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:18.099" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201030 15:57:18.097" endtime="20201030 15:57:18.100"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:18.104" level="INFO">VALUE: [5.695899999999532e-05, 5.745900000000276e-05, 5.665300000000373e-05, 5.6541999999999704e-05, 5.709699999999901e-05, 5.733299999999969e-05, 5.6665999999996886e-05, 5.711100000000552e-05, 5.7457999999996345e-05, 5.7014000000001064e-05, 5.6764000000000814e-05, 5.6791999999999954e-05, 5.709699999999901e-05, 5.7028000000000634e-05, 5.6805999999999524e-05, 5.6555999999999274e-05, 5.7014000000001064e-05, 5.6791999999999954e-05, 5.7319999999999593e-05, 5.687500000000484e-05, 5.744499999999625e-05, 5.6957999999995845e-05, 5.677700000000091e-05, 5.7486000000002424e-05, 5.67629999999944e-05, 5.7221999999995665e-05, 5.654100000000023e-05, 5.6764000000000814e-05, 5.709699999999901e-05, 5.709699999999901e-05, 5.6500000000000994e-05, 5.68749999999979e-05, 5.743099999999668e-05, 5.68749999999979e-05, 5.6555999999999274e-05, 5.683299999999919e-05, 5.668099999999593e-05, 5.687500000000484e-05, 5.722300000000208e-05, 5.741700000000405e-05, 5.744500000000319e-05, 5.7069999999999343e-05, 5.7250000000001744e-05, 5.708299999999944e-05, 5.687500000000484e-05, 5.6750000000001244e-05, 5.688899999999747e-05, 5.6528000000000134e-05, 5.7458000000003284e-05, 5.7207999999996095e-05]</msg>
<status status="PASS" starttime="20201030 15:57:18.101" endtime="20201030 15:57:18.106"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:18.090" endtime="20201030 15:57:18.108"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:18.117" endtime="20201030 15:57:18.139"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:18.113" endtime="20201030 15:57:18.140"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:18.110" endtime="20201030 15:57:18.141"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:17.613" endtime="20201030 15:57:18.142"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:17.611" endtime="20201030 15:57:18.142"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:18.164" endtime="20201030 15:57:18.185"></status>
</kw>
<msg timestamp="20201030 15:57:18.186" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:18.161" endtime="20201030 15:57:18.187"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:18.192" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:18.188" endtime="20201030 15:57:18.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:18.195" endtime="20201030 15:57:18.198"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:18.154" endtime="20201030 15:57:18.200"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:18.148" endtime="20201030 15:57:18.201"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:18.218" endtime="20201030 15:57:18.572"></status>
</kw>
<msg timestamp="20201030 15:57:18.580" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041040458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041098986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:18.215" endtime="20201030 15:57:18.580"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:18.600" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041040458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041098986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:18.583" endtime="20201030 15:57:18.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:18.603" endtime="20201030 15:57:18.607"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:18.208" endtime="20201030 15:57:18.610"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:18.203" endtime="20201030 15:57:18.611"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:18.622" level="INFO">${RESULT} = [{'diff': 5.8527999999995195e-05}, {'diff': 5.809700000000001e-05}, {'diff': 5.7556000000000274e-05}, {'diff': 5.7985999999995985e-05}, {'diff': 5.7957999999996845e-05}, {'diff': 5.788899999999847e-05...</msg>
<status status="PASS" starttime="20201030 15:57:18.613" endtime="20201030 15:57:18.623"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:18.634" level="INFO">${ACCURACY} = {'diff': [5.8527999999995195e-05, 5.809700000000001e-05, 5.7556000000000274e-05, 5.7985999999995985e-05, 5.7957999999996845e-05, 5.788899999999847e-05, 5.811099999999958e-05, 5.844499999999725e-05, 5....</msg>
<status status="PASS" starttime="20201030 15:57:18.625" endtime="20201030 15:57:18.635"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:18.647" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201030 15:57:18.644" endtime="20201030 15:57:18.648"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:18.652" level="INFO">VALUE: [5.8527999999995195e-05, 5.809700000000001e-05, 5.7556000000000274e-05, 5.7985999999995985e-05, 5.7957999999996845e-05, 5.788899999999847e-05, 5.811099999999958e-05, 5.844499999999725e-05, 5.844500000000419e-05, 5.836099999999983e-05, 5.78749999999989e-05, 5.77629999999954e-05, 5.834700000000026e-05, 5.783300000000019e-05, 5.811099999999958e-05, 5.754100000000123e-05, 5.754100000000123e-05, 5.7958000000003784e-05, 5.756900000000037e-05, 5.7514000000001564e-05, 5.7556000000000274e-05, 5.8193999999997525e-05, 5.8014000000002064e-05, 5.788900000000541e-05, 5.8222000000003604e-05, 5.7764000000001814e-05, 5.844499999999725e-05, 5.809800000000642e-05, 5.7887999999998996e-05, 5.8097999999999483e-05, 5.8415999999998636e-05, 5.78749999999989e-05, 5.8000000000002494e-05, 5.8415999999998636e-05, 5.7735999999995735e-05, 5.834700000000026e-05, 5.75550000000008e-05, 5.78749999999989e-05, 5.78749999999989e-05, 5.790299999999804e-05, 5.8250000000002744e-05, 5.809700000000001e-05, 5.841699999999811e-05, 5.809700000000001e-05, 5.7569999999999844e-05, 5.8097999999999483e-05, 5.7902000000005505e-05, 5.819500000000394e-05, 5.843099999999768e-05, 5.7666000000004825e-05]</msg>
<status status="PASS" starttime="20201030 15:57:18.649" endtime="20201030 15:57:18.654"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:18.637" endtime="20201030 15:57:18.656"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:18.667" endtime="20201030 15:57:18.690"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:18.662" endtime="20201030 15:57:18.691"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:18.660" endtime="20201030 15:57:18.692"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:18.144" endtime="20201030 15:57:18.693"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:18.143" endtime="20201030 15:57:18.693"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:18.718" endtime="20201030 15:57:18.739"></status>
</kw>
<msg timestamp="20201030 15:57:18.740" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:18.714" endtime="20201030 15:57:18.740"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:18.747" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:18.742" endtime="20201030 15:57:18.747"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:18.749" endtime="20201030 15:57:18.753"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:18.706" endtime="20201030 15:57:18.755"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:18.700" endtime="20201030 15:57:18.756"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:18.774" endtime="20201030 15:57:19.150"></status>
</kw>
<msg timestamp="20201030 15:57:19.158" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044412264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044471389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:18.770" endtime="20201030 15:57:19.158"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:19.177" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044412264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044471389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:19.160" endtime="20201030 15:57:19.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:19.180" endtime="20201030 15:57:19.184"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:18.763" endtime="20201030 15:57:19.186"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:18.758" endtime="20201030 15:57:19.187"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:19.199" level="INFO">${RESULT} = [{'diff': 5.912500000000015e-05}, {'diff': 5.9207999999998095e-05}, {'diff': 5.909700000000101e-05}, {'diff': 5.9207999999998095e-05}, {'diff': 5.870899999999707e-05}, {'diff': 5.8764000000002814e-05}...</msg>
<status status="PASS" starttime="20201030 15:57:19.189" endtime="20201030 15:57:19.199"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:19.209" level="INFO">${ACCURACY} = {'diff': [5.912500000000015e-05, 5.9207999999998095e-05, 5.909700000000101e-05, 5.9207999999998095e-05, 5.870899999999707e-05, 5.8764000000002814e-05, 5.865299999999879e-05, 5.888899999999947e-05, 5.9...</msg>
<status status="PASS" starttime="20201030 15:57:19.201" endtime="20201030 15:57:19.209"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:19.220" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201030 15:57:19.218" endtime="20201030 15:57:19.221"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:19.226" level="INFO">VALUE: [5.912500000000015e-05, 5.9207999999998095e-05, 5.909700000000101e-05, 5.9207999999998095e-05, 5.870899999999707e-05, 5.8764000000002814e-05, 5.865299999999879e-05, 5.888899999999947e-05, 5.9138000000000246e-05, 5.886100000000033e-05, 5.8763999999995875e-05, 5.886100000000033e-05, 5.936099999999389e-05, 5.879099999999554e-05, 5.9000000000003494e-05, 5.854100000000223e-05, 5.915299999999929e-05, 5.8999999999996555e-05, 5.856899999999443e-05, 5.862499999999965e-05, 5.866699999999836e-05, 5.912500000000015e-05, 5.911100000000058e-05, 5.920899999999757e-05, 5.8542000000001704e-05, 5.945900000000476e-05, 5.8764000000002814e-05, 5.943099999999868e-05, 5.886100000000033e-05, 5.9292000000002454e-05, 5.8665999999998886e-05, 5.9250000000003744e-05, 5.877700000000291e-05, 5.890299999999904e-05, 5.908300000000144e-05, 5.8834000000000664e-05, 5.8778000000002384e-05, 5.868100000000487e-05, 5.911100000000058e-05, 5.8736000000003674e-05, 5.865299999999879e-05, 5.8556000000001274e-05, 5.943100000000562e-05, 5.9348000000000734e-05, 5.8570000000000844e-05, 5.920899999999757e-05, 5.8555999999994335e-05, 5.8555999999994335e-05, 5.8764000000002814e-05, 5.8736000000003674e-05]</msg>
<status status="PASS" starttime="20201030 15:57:19.223" endtime="20201030 15:57:19.228"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:19.210" endtime="20201030 15:57:19.230"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:19.239" endtime="20201030 15:57:19.263"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:19.235" endtime="20201030 15:57:19.264"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:19.232" endtime="20201030 15:57:19.265"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:18.696" endtime="20201030 15:57:19.266"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:18.694" endtime="20201030 15:57:19.266"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:19.291" endtime="20201030 15:57:19.314"></status>
</kw>
<msg timestamp="20201030 15:57:19.315" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:19.287" endtime="20201030 15:57:19.316"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:19.322" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:19.318" endtime="20201030 15:57:19.323"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:19.324" endtime="20201030 15:57:19.328"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:19.279" endtime="20201030 15:57:19.330"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:19.273" endtime="20201030 15:57:19.332"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:19.349" endtime="20201030 15:57:19.724"></status>
</kw>
<msg timestamp="20201030 15:57:19.731" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046581167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046641194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:19.346" endtime="20201030 15:57:19.732"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:19.751" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046581167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046641194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:19.734" endtime="20201030 15:57:19.752"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:19.754" endtime="20201030 15:57:19.758"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:19.338" endtime="20201030 15:57:19.760"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:19.333" endtime="20201030 15:57:19.761"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:19.772" level="INFO">${RESULT} = [{'diff': 6.002699999999722e-05}, {'diff': 5.965299999999979e-05}, {'diff': 5.9999999999997555e-05}, {'diff': 6.018099999999943e-05}, {'diff': 5.9721999999998165e-05}, {'diff': 5.9764000000003814e-05}...</msg>
<status status="PASS" starttime="20201030 15:57:19.763" endtime="20201030 15:57:19.773"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:19.783" level="INFO">${ACCURACY} = {'diff': [6.002699999999722e-05, 5.965299999999979e-05, 5.9999999999997555e-05, 6.018099999999943e-05, 5.9721999999998165e-05, 5.9764000000003814e-05, 6.038900000000097e-05, 5.9736000000004674e-05, 6....</msg>
<status status="PASS" starttime="20201030 15:57:19.775" endtime="20201030 15:57:19.783"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:19.794" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201030 15:57:19.792" endtime="20201030 15:57:19.795"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:19.800" level="INFO">VALUE: [6.002699999999722e-05, 5.965299999999979e-05, 5.9999999999997555e-05, 6.018099999999943e-05, 5.9721999999998165e-05, 5.9764000000003814e-05, 6.038900000000097e-05, 5.9736000000004674e-05, 6.0070000000002344e-05, 6.0208000000006034e-05, 6.011100000000158e-05, 6.0207999999999096e-05, 6.0457999999999346e-05, 6.0028000000003634e-05, 6.0319999999995655e-05, 5.965299999999979e-05, 5.9764000000003814e-05, 6.0013999999997125e-05, 5.966699999999936e-05, 6.0291999999996515e-05, 5.9999999999997555e-05, 6.033299999999575e-05, 6.0000000000004494e-05, 6.0208000000006034e-05, 5.977699999999697e-05, 6.0443999999999776e-05, 5.955499999999586e-05, 5.9971999999998415e-05, 6.0471999999998916e-05, 6.0443999999999776e-05, 6.03750000000014e-05, 6.0027999999996695e-05, 6.044499999999925e-05, 6.018099999999943e-05, 5.9556000000002274e-05, 5.9985999999997985e-05, 5.9929999999999706e-05, 5.9805999999995585e-05, 5.98750000000009e-05, 6.033299999999575e-05, 5.9943999999999276e-05, 6.009699999999507e-05, 6.0207999999999096e-05, 6.0443999999999776e-05, 6.0443999999999776e-05, 6.0014000000004064e-05, 5.9985999999997985e-05, 6.012500000000115e-05, 5.9542000000002704e-05, 5.9555999999995335e-05]</msg>
<status status="PASS" starttime="20201030 15:57:19.797" endtime="20201030 15:57:19.802"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:19.784" endtime="20201030 15:57:19.804"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:19.815" endtime="20201030 15:57:19.838"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:19.809" endtime="20201030 15:57:19.840"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:19.807" endtime="20201030 15:57:19.840"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:19.269" endtime="20201030 15:57:19.841"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:19.267" endtime="20201030 15:57:19.841"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:19.867" endtime="20201030 15:57:19.889"></status>
</kw>
<msg timestamp="20201030 15:57:19.890" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:19.863" endtime="20201030 15:57:19.890"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:19.897" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:19.892" endtime="20201030 15:57:19.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:19.899" endtime="20201030 15:57:19.903"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:19.854" endtime="20201030 15:57:19.905"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:19.848" endtime="20201030 15:57:19.906"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:19.924" endtime="20201030 15:57:20.297"></status>
</kw>
<msg timestamp="20201030 15:57:20.304" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045140764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045201931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:19.921" endtime="20201030 15:57:20.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:20.324" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045140764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045201931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:20.307" endtime="20201030 15:57:20.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:20.327" endtime="20201030 15:57:20.331"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:19.913" endtime="20201030 15:57:20.332"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:19.908" endtime="20201030 15:57:20.334"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:20.345" level="INFO">${RESULT} = [{'diff': 6.116700000000086e-05}, {'diff': 6.145800000000035e-05}, {'diff': 6.12080000000001e-05}, {'diff': 6.119400000000053e-05}, {'diff': 6.122199999999967e-05}, {'diff': 6.14300000000012e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:57:20.336" endtime="20201030 15:57:20.346"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:20.357" level="INFO">${ACCURACY} = {'diff': [6.116700000000086e-05, 6.145800000000035e-05, 6.12080000000001e-05, 6.119400000000053e-05, 6.122199999999967e-05, 6.14300000000012e-05, 6.0721999999999166e-05, 6.113900000000172e-05, 6.13189...</msg>
<status status="PASS" starttime="20201030 15:57:20.347" endtime="20201030 15:57:20.357"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:20.368" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201030 15:57:20.366" endtime="20201030 15:57:20.369"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:20.374" level="INFO">VALUE: [6.116700000000086e-05, 6.145800000000035e-05, 6.12080000000001e-05, 6.119400000000053e-05, 6.122199999999967e-05, 6.14300000000012e-05, 6.0721999999999166e-05, 6.113900000000172e-05, 6.131899999999718e-05, 6.063900000000122e-05, 6.0749999999998305e-05, 6.133300000000369e-05, 6.070899999999907e-05, 6.133399999999622e-05, 6.0763999999997875e-05, 6.143100000000068e-05, 6.0555999999996335e-05, 6.0985999999998985e-05, 6.145800000000035e-05, 6.0957999999999846e-05, 6.122199999999967e-05, 6.12080000000001e-05, 6.055499999999686e-05, 6.12080000000001e-05, 6.0791999999997015e-05, 6.131899999999718e-05, 6.144400000000078e-05, 6.0542000000003704e-05, 6.144500000000025e-05, 6.062500000000165e-05, 6.0556000000003274e-05, 6.063900000000122e-05, 6.134800000000273e-05, 6.105499999999736e-05, 6.0541999999996765e-05, 6.131999999999665e-05, 6.12080000000001e-05, 6.087499999999496e-05, 6.065199999999438e-05, 6.118000000000096e-05, 6.0749999999998305e-05, 6.112499999999521e-05, 6.14300000000012e-05, 6.134700000000326e-05, 6.065299999999385e-05, 6.122199999999967e-05, 6.087499999999496e-05, 6.0555999999996335e-05, 6.086099999999539e-05, 6.145899999999982e-05]</msg>
<status status="PASS" starttime="20201030 15:57:20.371" endtime="20201030 15:57:20.376"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:20.359" endtime="20201030 15:57:20.378"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:20.388" endtime="20201030 15:57:20.410"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:20.383" endtime="20201030 15:57:20.412"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:20.380" endtime="20201030 15:57:20.413"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:19.844" endtime="20201030 15:57:20.413"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:19.842" endtime="20201030 15:57:20.414"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:20.438" endtime="20201030 15:57:20.461"></status>
</kw>
<msg timestamp="20201030 15:57:20.462" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:20.435" endtime="20201030 15:57:20.462"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:20.468" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:20.464" endtime="20201030 15:57:20.469"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:20.471" endtime="20201030 15:57:20.475"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:20.427" endtime="20201030 15:57:20.477"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:20.421" endtime="20201030 15:57:20.478"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:20.496" endtime="20201030 15:57:20.868"></status>
</kw>
<msg timestamp="20201030 15:57:20.875" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044283042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044344875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:20.492" endtime="20201030 15:57:20.876"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:20.895" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044283042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044344875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:20.878" endtime="20201030 15:57:20.896"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:20.898" endtime="20201030 15:57:20.902"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:20.485" endtime="20201030 15:57:20.903"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:20.480" endtime="20201030 15:57:20.905"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:20.916" level="INFO">${RESULT} = [{'diff': 6.183299999999725e-05}, {'diff': 6.233400000000416e-05}, {'diff': 6.201399999999913e-05}, {'diff': 6.199999999999956e-05}, {'diff': 6.233400000000416e-05}, {'diff': 6.244500000000125e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:57:20.907" endtime="20201030 15:57:20.917"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:20.928" level="INFO">${ACCURACY} = {'diff': [6.183299999999725e-05, 6.233400000000416e-05, 6.201399999999913e-05, 6.199999999999956e-05, 6.233400000000416e-05, 6.244500000000125e-05, 6.234699999999732e-05, 6.148699999999896e-05, 6.1930...</msg>
<status status="PASS" starttime="20201030 15:57:20.918" endtime="20201030 15:57:20.929"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:20.940" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201030 15:57:20.937" endtime="20201030 15:57:20.941"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:20.946" level="INFO">VALUE: [6.183299999999725e-05, 6.233400000000416e-05, 6.201399999999913e-05, 6.199999999999956e-05, 6.233400000000416e-05, 6.244500000000125e-05, 6.234699999999732e-05, 6.148699999999896e-05, 6.19300000000017e-05, 6.166600000000189e-05, 6.179099999999854e-05, 6.219400000000153e-05, 6.188900000000247e-05, 6.22080000000011e-05, 6.17499999999993e-05, 6.198599999999999e-05, 6.177799999999845e-05, 6.222200000000067e-05, 6.23200000000046e-05, 6.199999999999956e-05, 6.198599999999999e-05, 6.211100000000358e-05, 6.176399999999888e-05, 6.244500000000125e-05, 6.241700000000211e-05, 6.236099999999689e-05, 6.188900000000247e-05, 6.156900000000437e-05, 6.155499999999786e-05, 6.187499999999596e-05, 6.154099999999829e-05, 6.173599999999974e-05, 6.223600000000024e-05, 6.187499999999596e-05, 6.201399999999913e-05, 6.230599999999809e-05, 6.166700000000136e-05, 6.204099999999879e-05, 6.179200000000495e-05, 6.205599999999784e-05, 6.188900000000247e-05, 6.231999999999766e-05, 6.166599999999495e-05, 6.154099999999829e-05, 6.229099999999904e-05, 6.240300000000254e-05, 6.199999999999956e-05, 6.188899999999553e-05, 6.231899999999818e-05, 6.198599999999999e-05]</msg>
<status status="PASS" starttime="20201030 15:57:20.942" endtime="20201030 15:57:20.947"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:20.930" endtime="20201030 15:57:20.949"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:20.959" endtime="20201030 15:57:20.981"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:20.954" endtime="20201030 15:57:20.983"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:20.952" endtime="20201030 15:57:20.984"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:20.416" endtime="20201030 15:57:20.985"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:20.415" endtime="20201030 15:57:20.985"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:21.010" endtime="20201030 15:57:21.031"></status>
</kw>
<msg timestamp="20201030 15:57:21.032" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:21.006" endtime="20201030 15:57:21.033"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:21.039" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:21.034" endtime="20201030 15:57:21.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:21.041" endtime="20201030 15:57:21.044"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:20.998" endtime="20201030 15:57:21.046"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:20.992" endtime="20201030 15:57:21.048"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:21.064" endtime="20201030 15:57:21.401"></status>
</kw>
<msg timestamp="20201030 15:57:21.408" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044628319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044691736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:21.061" endtime="20201030 15:57:21.409"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:21.426" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044628319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044691736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:21.410" endtime="20201030 15:57:21.427"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:21.429" endtime="20201030 15:57:21.433"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:21.054" endtime="20201030 15:57:21.434"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:21.049" endtime="20201030 15:57:21.436"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:21.446" level="INFO">${RESULT} = [{'diff': 6.341700000000311e-05}, {'diff': 6.287499999999696e-05}, {'diff': 6.322200000000167e-05}, {'diff': 6.294400000000228e-05}, {'diff': 6.250000000000006e-05}, {'diff': 6.268099999999499e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:57:21.437" endtime="20201030 15:57:21.447"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:21.456" level="INFO">${ACCURACY} = {'diff': [6.341700000000311e-05, 6.287499999999696e-05, 6.322200000000167e-05, 6.294400000000228e-05, 6.250000000000006e-05, 6.268099999999499e-05, 6.261099999999714e-05, 6.301300000000065e-05, 6.2874...</msg>
<status status="PASS" starttime="20201030 15:57:21.448" endtime="20201030 15:57:21.456"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:21.467" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201030 15:57:21.464" endtime="20201030 15:57:21.468"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:21.472" level="INFO">VALUE: [6.341700000000311e-05, 6.287499999999696e-05, 6.322200000000167e-05, 6.294400000000228e-05, 6.250000000000006e-05, 6.268099999999499e-05, 6.261099999999714e-05, 6.301300000000065e-05, 6.287499999999696e-05, 6.311199999999711e-05, 6.322200000000167e-05, 6.306899999999893e-05, 6.250000000000006e-05, 6.294500000000175e-05, 6.290300000000304e-05, 6.333299999999875e-05, 6.331899999999918e-05, 6.265300000000279e-05, 6.27500000000003e-05, 6.315300000000329e-05, 6.32080000000021e-05, 6.318100000000243e-05, 6.316599999999645e-05, 6.297199999999448e-05, 6.311100000000458e-05, 6.331999999999866e-05, 6.298700000000046e-05, 6.300000000000056e-05, 6.333299999999875e-05, 6.266599999999595e-05, 6.27500000000003e-05, 6.256899999999843e-05, 6.298600000000099e-05, 6.266699999999542e-05, 6.30829999999985e-05, 6.322200000000167e-05, 6.320799999999516e-05, 6.322200000000167e-05, 6.311099999999764e-05, 6.286100000000433e-05, 6.297200000000142e-05, 6.265300000000279e-05, 6.298600000000099e-05, 6.329199999999952e-05, 6.309699999999807e-05, 6.309700000000501e-05, 6.322200000000167e-05, 6.342999999999627e-05, 6.311100000000458e-05, 6.301400000000013e-05]</msg>
<status status="PASS" starttime="20201030 15:57:21.469" endtime="20201030 15:57:21.474"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:21.458" endtime="20201030 15:57:21.475"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:21.487" endtime="20201030 15:57:21.509"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:21.482" endtime="20201030 15:57:21.511"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:21.478" endtime="20201030 15:57:21.511"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:20.988" endtime="20201030 15:57:21.512"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:20.986" endtime="20201030 15:57:21.512"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:21.535" endtime="20201030 15:57:21.558"></status>
</kw>
<msg timestamp="20201030 15:57:21.559" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:21.532" endtime="20201030 15:57:21.560"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:21.565" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:21.561" endtime="20201030 15:57:21.566"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:21.568" endtime="20201030 15:57:21.571"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:21.525" endtime="20201030 15:57:21.573"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:21.519" endtime="20201030 15:57:21.575"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:21.591" endtime="20201030 15:57:21.919"></status>
</kw>
<msg timestamp="20201030 15:57:21.922" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043467389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043531583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:21.588" endtime="20201030 15:57:21.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:21.931" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043467389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043531583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:21.923" endtime="20201030 15:57:21.931"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:21.932" endtime="20201030 15:57:21.934"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:21.581" endtime="20201030 15:57:21.935"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:21.576" endtime="20201030 15:57:21.935"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:21.940" level="INFO">${RESULT} = [{'diff': 6.419399999999659e-05}, {'diff': 6.387499999999796e-05}, {'diff': 6.419399999999659e-05}, {'diff': 6.419399999999659e-05}, {'diff': 6.44300000000042e-05}, {'diff': 6.35699999999989e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:57:21.936" endtime="20201030 15:57:21.941"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:21.945" level="INFO">${ACCURACY} = {'diff': [6.419399999999659e-05, 6.387499999999796e-05, 6.419399999999659e-05, 6.419399999999659e-05, 6.44300000000042e-05, 6.35699999999989e-05, 6.380600000000652e-05, 6.411099999999864e-05, 6.412499...</msg>
<status status="PASS" starttime="20201030 15:57:21.941" endtime="20201030 15:57:21.945"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:21.950" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201030 15:57:21.949" endtime="20201030 15:57:21.951"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:21.953" level="INFO">VALUE: [6.419399999999659e-05, 6.387499999999796e-05, 6.419399999999659e-05, 6.419399999999659e-05, 6.44300000000042e-05, 6.35699999999989e-05, 6.380600000000652e-05, 6.411099999999864e-05, 6.412499999999821e-05, 6.388900000000447e-05, 6.363899999999728e-05, 6.3582999999999e-05, 6.4195000000003e-05, 6.406899999999993e-05, 6.387499999999796e-05, 6.404200000000027e-05, 6.444400000000378e-05, 6.38750000000049e-05, 6.42080000000031e-05, 6.431900000000018e-05, 6.411100000000558e-05, 6.376400000000088e-05, 6.433299999999975e-05, 6.42359999999953e-05, 6.409699999999907e-05, 6.411099999999864e-05, 6.397200000000242e-05, 6.433399999999923e-05, 6.431999999999966e-05, 6.400000000000156e-05, 6.398600000000199e-05, 6.354100000000029e-05, 6.365200000000432e-05, 6.424999999999487e-05, 6.398600000000199e-05, 6.411099999999864e-05, 6.441699999999717e-05, 6.387499999999796e-05, 6.400000000000156e-05, 6.386099999999839e-05, 6.444499999999631e-05, 6.388900000000447e-05, 6.390300000000404e-05, 6.35280000000002e-05, 6.43479999999988e-05, 6.365300000000379e-05, 6.370900000000207e-05, 6.438900000000497e-05, 6.44300000000042e-05, 6.366600000000389e-05]</msg>
<status status="PASS" starttime="20201030 15:57:21.952" endtime="20201030 15:57:21.954"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:21.946" endtime="20201030 15:57:21.955"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:21.960" endtime="20201030 15:57:21.980"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:21.957" endtime="20201030 15:57:21.981"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:21.956" endtime="20201030 15:57:21.981"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:21.514" endtime="20201030 15:57:21.981"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:21.513" endtime="20201030 15:57:21.981"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:21.993" endtime="20201030 15:57:22.011"></status>
</kw>
<msg timestamp="20201030 15:57:22.011" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:21.991" endtime="20201030 15:57:22.012"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:22.014" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:22.012" endtime="20201030 15:57:22.015"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:22.016" endtime="20201030 15:57:22.018"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:21.988" endtime="20201030 15:57:22.018"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:21.985" endtime="20201030 15:57:22.019"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:22.027" endtime="20201030 15:57:22.314"></status>
</kw>
<msg timestamp="20201030 15:57:22.317" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025450722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025516028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:22.026" endtime="20201030 15:57:22.318"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:22.326" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025450722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025516028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:22.319" endtime="20201030 15:57:22.326"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:22.327" endtime="20201030 15:57:22.329"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:22.022" endtime="20201030 15:57:22.330"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:22.020" endtime="20201030 15:57:22.331"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:22.336" level="INFO">${RESULT} = [{'diff': 6.530600000000109e-05}, {'diff': 6.465300000000132e-05}, {'diff': 6.461099999999914e-05}, {'diff': 6.529200000000152e-05}, {'diff': 6.541700000000164e-05}, {'diff': 6.520800000000063e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:57:22.331" endtime="20201030 15:57:22.336"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:22.341" level="INFO">${ACCURACY} = {'diff': [6.530600000000109e-05, 6.465300000000132e-05, 6.461099999999914e-05, 6.529200000000152e-05, 6.541700000000164e-05, 6.520800000000063e-05, 6.530500000000161e-05, 6.484700000000329e-05, 6.4763...</msg>
<status status="PASS" starttime="20201030 15:57:22.337" endtime="20201030 15:57:22.341"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:22.346" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201030 15:57:22.345" endtime="20201030 15:57:22.347"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:22.349" level="INFO">VALUE: [6.530600000000109e-05, 6.465300000000132e-05, 6.461099999999914e-05, 6.529200000000152e-05, 6.541700000000164e-05, 6.520800000000063e-05, 6.530500000000161e-05, 6.484700000000329e-05, 6.47639999999984e-05, 6.531900000000118e-05, 6.519400000000106e-05, 6.456899999999696e-05, 6.463899999999828e-05, 6.505600000000084e-05, 6.519400000000106e-05, 6.468099999999699e-05, 6.45699999999999e-05, 6.4889000000002e-05, 6.530499999999814e-05, 6.498599999999952e-05, 6.454200000000077e-05, 6.541699999999817e-05, 6.488799999999906e-05, 6.486099999999939e-05, 6.50830000000005e-05, 6.454099999999782e-05, 6.543000000000174e-05, 6.476400000000188e-05, 6.455599999999687e-05, 6.545800000000088e-05, 6.459799999999905e-05, 6.45699999999999e-05, 6.452799999999773e-05, 6.52220000000002e-05, 6.476400000000188e-05, 6.451400000000163e-05, 6.500000000000256e-05, 6.511099999999964e-05, 6.455500000000086e-05, 6.493100000000071e-05, 6.454099999999782e-05, 6.454099999999782e-05, 6.544399999999784e-05, 6.486099999999939e-05, 6.465300000000132e-05, 6.512499999999921e-05, 6.454200000000077e-05, 6.498599999999952e-05, 6.454200000000077e-05, 6.477800000000145e-05]</msg>
<status status="PASS" starttime="20201030 15:57:22.348" endtime="20201030 15:57:22.353"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:22.342" endtime="20201030 15:57:22.354"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:22.359" endtime="20201030 15:57:22.379"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:22.357" endtime="20201030 15:57:22.380"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:22.356" endtime="20201030 15:57:22.380"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:21.983" endtime="20201030 15:57:22.380"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:21.982" endtime="20201030 15:57:22.380"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:22.392" endtime="20201030 15:57:22.409"></status>
</kw>
<msg timestamp="20201030 15:57:22.410" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:22.390" endtime="20201030 15:57:22.410"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:22.413" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:22.411" endtime="20201030 15:57:22.413"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:22.414" endtime="20201030 15:57:22.416"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:22.386" endtime="20201030 15:57:22.417"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:22.384" endtime="20201030 15:57:22.418"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:22.443" endtime="20201030 15:57:22.822"></status>
</kw>
<msg timestamp="20201030 15:57:22.830" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025062528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025128944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:22.436" endtime="20201030 15:57:22.830"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:22.850" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025062528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025128944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:22.832" endtime="20201030 15:57:22.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:22.853" endtime="20201030 15:57:22.857"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:22.422" endtime="20201030 15:57:22.859"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:22.418" endtime="20201030 15:57:22.860"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:22.871" level="INFO">${RESULT} = [{'diff': 6.64159999999997e-05}, {'diff': 6.574999999999984e-05}, {'diff': 6.576299999999993e-05}, {'diff': 6.570799999999766e-05}, {'diff': 6.631899999999871e-05}, {'diff': 6.566599999999895e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:57:22.862" endtime="20201030 15:57:22.871"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:22.886" level="INFO">${ACCURACY} = {'diff': [6.64159999999997e-05, 6.574999999999984e-05, 6.576299999999993e-05, 6.570799999999766e-05, 6.631899999999871e-05, 6.566599999999895e-05, 6.554100000000229e-05, 6.55700000000009e-05, 6.598599...</msg>
<status status="PASS" starttime="20201030 15:57:22.873" endtime="20201030 15:57:22.887"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:22.898" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201030 15:57:22.895" endtime="20201030 15:57:22.898"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:22.903" level="INFO">VALUE: [6.64159999999997e-05, 6.574999999999984e-05, 6.576299999999993e-05, 6.570799999999766e-05, 6.631899999999871e-05, 6.566599999999895e-05, 6.554100000000229e-05, 6.55700000000009e-05, 6.598599999999705e-05, 6.612500000000021e-05, 6.57639999999994e-05, 6.566699999999842e-05, 6.63480000000008e-05, 6.619500000000153e-05, 6.563899999999928e-05, 6.600000000000009e-05, 6.633299999999828e-05, 6.552799999999873e-05, 6.598600000000052e-05, 6.612500000000021e-05, 6.645799999999841e-05, 6.552799999999873e-05, 6.619400000000206e-05, 6.600000000000009e-05, 6.579200000000202e-05, 6.582000000000116e-05, 6.594399999999834e-05, 6.580599999999812e-05, 6.633400000000123e-05, 6.563899999999928e-05, 6.590300000000257e-05, 6.588899999999953e-05, 6.556899999999796e-05, 6.631999999999819e-05, 6.619399999999859e-05, 6.555499999999839e-05, 6.563900000000275e-05, 6.600000000000009e-05, 6.554099999999882e-05, 6.601399999999966e-05, 6.609700000000107e-05, 6.577799999999898e-05, 6.600000000000009e-05, 6.568100000000146e-05, 6.612500000000021e-05, 6.55419999999983e-05, 6.644499999999831e-05, 6.57639999999994e-05, 6.579099999999907e-05, 6.609800000000055e-05]</msg>
<status status="PASS" starttime="20201030 15:57:22.900" endtime="20201030 15:57:22.905"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:22.888" endtime="20201030 15:57:22.906"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:22.916" endtime="20201030 15:57:22.938"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:22.911" endtime="20201030 15:57:22.939"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:22.909" endtime="20201030 15:57:22.940"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:22.381" endtime="20201030 15:57:22.941"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:22.381" endtime="20201030 15:57:22.941"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:22.964" endtime="20201030 15:57:22.986"></status>
</kw>
<msg timestamp="20201030 15:57:22.987" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:22.961" endtime="20201030 15:57:22.987"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:22.993" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:22.989" endtime="20201030 15:57:22.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:22.996" endtime="20201030 15:57:22.999"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:22.953" endtime="20201030 15:57:23.001"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:22.948" endtime="20201030 15:57:23.003"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:23.020" endtime="20201030 15:57:23.361"></status>
</kw>
<msg timestamp="20201030 15:57:23.369" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041858403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041925875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:23.016" endtime="20201030 15:57:23.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:23.387" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041858403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041925875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:23.371" endtime="20201030 15:57:23.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:23.390" endtime="20201030 15:57:23.394"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:23.009" endtime="20201030 15:57:23.395"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:23.004" endtime="20201030 15:57:23.397"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:23.408" level="INFO">${RESULT} = [{'diff': 6.747199999999898e-05}, {'diff': 6.679199999999608e-05}, {'diff': 6.698599999999805e-05}, {'diff': 6.700000000000456e-05}, {'diff': 6.655600000000234e-05}, {'diff': 6.666699999999942e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:57:23.399" endtime="20201030 15:57:23.408"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:23.417" level="INFO">${ACCURACY} = {'diff': [6.747199999999898e-05, 6.679199999999608e-05, 6.698599999999805e-05, 6.700000000000456e-05, 6.655600000000234e-05, 6.666699999999942e-05, 6.688899999999359e-05, 6.698599999999805e-05, 6.7444...</msg>
<status status="PASS" starttime="20201030 15:57:23.410" endtime="20201030 15:57:23.418"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:23.428" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201030 15:57:23.426" endtime="20201030 15:57:23.429"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:23.434" level="INFO">VALUE: [6.747199999999898e-05, 6.679199999999608e-05, 6.698599999999805e-05, 6.700000000000456e-05, 6.655600000000234e-05, 6.666699999999942e-05, 6.688899999999359e-05, 6.698599999999805e-05, 6.744499999999931e-05, 6.665200000000038e-05, 6.672200000000517e-05, 6.716600000000045e-05, 6.655499999999592e-05, 6.698600000000499e-05, 6.688900000000053e-05, 6.72359999999983e-05, 6.713900000000078e-05, 6.722200000000567e-05, 6.654199999999583e-05, 6.723600000000524e-05, 6.65700000000019e-05, 6.745899999999888e-05, 6.663900000000028e-05, 6.698600000000499e-05, 6.670900000000507e-05, 6.743099999999974e-05, 6.729199999999658e-05, 6.741599999999376e-05, 6.744399999999984e-05, 6.720799999999916e-05, 6.656900000000243e-05, 6.693099999999924e-05, 6.716699999999992e-05, 6.744399999999984e-05, 6.65280000000032e-05, 6.679200000000302e-05, 6.732000000000266e-05, 6.676399999999694e-05, 6.680499999999617e-05, 6.663900000000028e-05, 6.672199999999823e-05, 6.738900000000103e-05, 6.737499999999452e-05, 6.677800000000345e-05, 6.709700000000207e-05, 6.676399999999694e-05, 6.694400000000628e-05, 6.709700000000207e-05, 6.699999999999762e-05, 6.733300000000275e-05]</msg>
<status status="PASS" starttime="20201030 15:57:23.431" endtime="20201030 15:57:23.435"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:23.419" endtime="20201030 15:57:23.437"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:23.447" endtime="20201030 15:57:23.469"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:23.442" endtime="20201030 15:57:23.470"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:23.440" endtime="20201030 15:57:23.471"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:22.943" endtime="20201030 15:57:23.472"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:22.942" endtime="20201030 15:57:23.472"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:23.495" endtime="20201030 15:57:23.517"></status>
</kw>
<msg timestamp="20201030 15:57:23.518" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:23.492" endtime="20201030 15:57:23.519"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:23.525" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:23.521" endtime="20201030 15:57:23.525"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:23.527" endtime="20201030 15:57:23.531"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:23.484" endtime="20201030 15:57:23.532"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:23.478" endtime="20201030 15:57:23.534"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:23.551" endtime="20201030 15:57:23.891"></status>
</kw>
<msg timestamp="20201030 15:57:23.898" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043450681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043518472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:23.547" endtime="20201030 15:57:23.899"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:23.917" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043450681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043518472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:23.901" endtime="20201030 15:57:23.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:23.920" endtime="20201030 15:57:23.924"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:23.540" endtime="20201030 15:57:23.925"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:23.535" endtime="20201030 15:57:23.927"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:23.938" level="INFO">${RESULT} = [{'diff': 6.779100000000454e-05}, {'diff': 6.813900000000178e-05}, {'diff': 6.776399999999794e-05}, {'diff': 6.801399999999819e-05}, {'diff': 6.798599999999905e-05}, {'diff': 6.755499999999692e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:57:23.929" endtime="20201030 15:57:23.938"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:23.947" level="INFO">${ACCURACY} = {'diff': [6.779100000000454e-05, 6.813900000000178e-05, 6.776399999999794e-05, 6.801399999999819e-05, 6.798599999999905e-05, 6.755499999999692e-05, 6.755499999999692e-05, 6.788900000000153e-05, 6.7985...</msg>
<status status="PASS" starttime="20201030 15:57:23.940" endtime="20201030 15:57:23.948"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:23.958" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201030 15:57:23.956" endtime="20201030 15:57:23.959"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:23.964" level="INFO">VALUE: [6.779100000000454e-05, 6.813900000000178e-05, 6.776399999999794e-05, 6.801399999999819e-05, 6.798599999999905e-05, 6.755499999999692e-05, 6.755499999999692e-05, 6.788900000000153e-05, 6.798599999999905e-05, 6.842999999999433e-05, 6.836099999999595e-05, 6.834699999999638e-05, 6.798599999999905e-05, 6.797199999999948e-05, 6.820899999999963e-05, 6.804099999999785e-05, 6.755600000000334e-05, 6.772199999999923e-05, 6.774999999999837e-05, 6.833299999999681e-05, 6.776299999999846e-05, 6.776399999999794e-05, 6.833300000000375e-05, 6.776399999999794e-05, 6.845800000000041e-05, 6.788899999999459e-05, 6.833300000000375e-05, 6.798600000000599e-05, 6.820899999999963e-05, 6.82359999999993e-05, 6.777799999999751e-05, 6.75559999999964e-05, 6.776399999999794e-05, 6.787500000000196e-05, 6.761100000000214e-05, 6.786100000000239e-05, 6.750000000000506e-05, 6.840200000000213e-05, 6.784700000000282e-05, 6.80280000000047e-05, 6.754200000000377e-05, 6.843100000000074e-05, 6.843100000000074e-05, 6.766700000000042e-05, 6.776400000000488e-05, 6.799999999999862e-05, 6.787500000000196e-05, 6.826399999999844e-05, 6.809800000000255e-05, 6.754200000000377e-05]</msg>
<status status="PASS" starttime="20201030 15:57:23.961" endtime="20201030 15:57:23.965"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:23.949" endtime="20201030 15:57:23.967"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:23.978" endtime="20201030 15:57:24.000"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:23.972" endtime="20201030 15:57:24.002"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:23.970" endtime="20201030 15:57:24.003"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:23.474" endtime="20201030 15:57:24.003"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:23.473" endtime="20201030 15:57:24.004"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:24.027" endtime="20201030 15:57:24.048"></status>
</kw>
<msg timestamp="20201030 15:57:24.049" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:24.023" endtime="20201030 15:57:24.050"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:24.055" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:24.051" endtime="20201030 15:57:24.056"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:24.058" endtime="20201030 15:57:24.062"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:24.016" endtime="20201030 15:57:24.063"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:24.010" endtime="20201030 15:57:24.065"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:24.082" endtime="20201030 15:57:24.422"></status>
</kw>
<msg timestamp="20201030 15:57:24.429" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042118222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042187486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:24.078" endtime="20201030 15:57:24.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:24.448" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042118222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042187486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:24.432" endtime="20201030 15:57:24.449"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:24.451" endtime="20201030 15:57:24.455"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:24.071" endtime="20201030 15:57:24.457"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:24.066" endtime="20201030 15:57:24.458"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:24.469" level="INFO">${RESULT} = [{'diff': 6.926400000000638e-05}, {'diff': 6.94309999999948e-05}, {'diff': 6.936099999999695e-05}, {'diff': 6.909800000000355e-05}, {'diff': 6.880499999999817e-05}, {'diff': 6.879100000000554e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:57:24.460" endtime="20201030 15:57:24.469"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:24.480" level="INFO">${ACCURACY} = {'diff': [6.926400000000638e-05, 6.94309999999948e-05, 6.936099999999695e-05, 6.909800000000355e-05, 6.880499999999817e-05, 6.879100000000554e-05, 6.899999999999962e-05, 6.858299999999706e-05, 6.94440...</msg>
<status status="PASS" starttime="20201030 15:57:24.471" endtime="20201030 15:57:24.480"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:24.493" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201030 15:57:24.490" endtime="20201030 15:57:24.494"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:24.500" level="INFO">VALUE: [6.926400000000638e-05, 6.94309999999948e-05, 6.936099999999695e-05, 6.909800000000355e-05, 6.880499999999817e-05, 6.879100000000554e-05, 6.899999999999962e-05, 6.858299999999706e-05, 6.944400000000184e-05, 6.887500000000296e-05, 6.933299999999781e-05, 6.92360000000003e-05, 6.85559999999974e-05, 6.877799999999851e-05, 6.855600000000434e-05, 6.879199999999808e-05, 6.943100000000174e-05, 6.876399999999894e-05, 6.931999999999772e-05, 6.947199999999404e-05, 6.888800000000306e-05, 6.887500000000296e-05, 6.868000000000152e-05, 6.919399999999465e-05, 6.865300000000185e-05, 6.876399999999894e-05, 6.877799999999851e-05, 6.933299999999781e-05, 6.929199999999858e-05, 6.934699999999738e-05, 6.852799999999826e-05, 6.856999999999697e-05, 6.851399999999869e-05, 6.899999999999962e-05, 6.933400000000423e-05, 6.943100000000174e-05, 6.854099999999835e-05, 6.888900000000253e-05, 6.933299999999781e-05, 6.866700000000142e-05, 6.851399999999869e-05, 6.92360000000003e-05, 6.865299999999491e-05, 6.898600000000005e-05, 6.911100000000364e-05, 6.931999999999772e-05, 6.909699999999713e-05, 6.902699999999928e-05, 6.866700000000142e-05, 6.852799999999826e-05]</msg>
<status status="PASS" starttime="20201030 15:57:24.496" endtime="20201030 15:57:24.501"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:24.482" endtime="20201030 15:57:24.503"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:24.513" endtime="20201030 15:57:24.534"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:24.508" endtime="20201030 15:57:24.536"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:24.506" endtime="20201030 15:57:24.537"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:24.006" endtime="20201030 15:57:24.538"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:24.005" endtime="20201030 15:57:24.538"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:24.561" endtime="20201030 15:57:24.582"></status>
</kw>
<msg timestamp="20201030 15:57:24.583" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:24.558" endtime="20201030 15:57:24.584"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:24.590" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:24.586" endtime="20201030 15:57:24.591"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:24.592" endtime="20201030 15:57:24.596"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:24.550" endtime="20201030 15:57:24.598"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:24.544" endtime="20201030 15:57:24.599"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:24.616" endtime="20201030 15:57:24.957"></status>
</kw>
<msg timestamp="20201030 15:57:24.964" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042178125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042247875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:24.613" endtime="20201030 15:57:24.965"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:24.982" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042178125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042247875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:24.966" endtime="20201030 15:57:24.983"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:24.985" endtime="20201030 15:57:24.989"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:24.606" endtime="20201030 15:57:24.991"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:24.601" endtime="20201030 15:57:24.992"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:25.003" level="INFO">${RESULT} = [{'diff': 6.975000000000037e-05}, {'diff': 7.022199999999479e-05}, {'diff': 7.044499999999537e-05}, {'diff': 7.04309999999958e-05}, {'diff': 7.000000000000062e-05}, {'diff': 6.95559999999984e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:57:24.994" endtime="20201030 15:57:25.003"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:25.014" level="INFO">${ACCURACY} = {'diff': [6.975000000000037e-05, 7.022199999999479e-05, 7.044499999999537e-05, 7.04309999999958e-05, 7.000000000000062e-05, 6.95559999999984e-05, 6.977799999999951e-05, 6.975000000000037e-05, 7.042999...</msg>
<status status="PASS" starttime="20201030 15:57:25.005" endtime="20201030 15:57:25.015"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:25.025" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201030 15:57:25.023" endtime="20201030 15:57:25.026"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:25.031" level="INFO">VALUE: [6.975000000000037e-05, 7.022199999999479e-05, 7.044499999999537e-05, 7.04309999999958e-05, 7.000000000000062e-05, 6.95559999999984e-05, 6.977799999999951e-05, 6.975000000000037e-05, 7.042999999999633e-05, 6.966599999999601e-05, 7.020800000000216e-05, 7.000000000000062e-05, 6.976399999999994e-05, 7.033300000000575e-05, 7.009700000000507e-05, 7.033300000000575e-05, 6.956999999999797e-05, 6.966700000000242e-05, 6.95559999999984e-05, 7.022200000000173e-05, 6.987499999999702e-05, 6.968100000000199e-05, 7.01109999999977e-05, 7.033299999999881e-05, 6.997300000000095e-05, 6.999999999999368e-05, 6.988899999999659e-05, 6.990299999999616e-05, 6.954099999999935e-05, 7.030499999999967e-05, 7.020800000000216e-05, 6.981999999999822e-05, 7.019400000000259e-05, 7.000000000000062e-05, 6.987499999999702e-05, 6.976399999999994e-05, 7.023699999999383e-05, 6.952799999999926e-05, 7.001300000000071e-05, 7.040299999999666e-05, 7.000000000000062e-05, 7.023599999999436e-05, 6.970800000000166e-05, 6.958299999999806e-05, 7.006900000000593e-05, 6.968100000000199e-05, 6.97230000000007e-05, 6.976399999999994e-05, 6.95700000000049e-05, 7.026400000000044e-05]</msg>
<status status="PASS" starttime="20201030 15:57:25.028" endtime="20201030 15:57:25.032"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:25.016" endtime="20201030 15:57:25.034"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:25.044" endtime="20201030 15:57:25.066"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:25.039" endtime="20201030 15:57:25.067"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:25.037" endtime="20201030 15:57:25.068"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:24.540" endtime="20201030 15:57:25.069"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:24.539" endtime="20201030 15:57:25.069"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:25.092" endtime="20201030 15:57:25.114"></status>
</kw>
<msg timestamp="20201030 15:57:25.115" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:25.089" endtime="20201030 15:57:25.115"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:25.121" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:25.117" endtime="20201030 15:57:25.122"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:25.123" endtime="20201030 15:57:25.127"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:25.081" endtime="20201030 15:57:25.129"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:25.076" endtime="20201030 15:57:25.131"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:25.148" endtime="20201030 15:57:25.488"></status>
</kw>
<msg timestamp="20201030 15:57:25.496" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04189325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041964056, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:57:25.144" endtime="20201030 15:57:25.496"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:25.514" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04189325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041964056, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:57:25.498" endtime="20201030 15:57:25.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:25.517" endtime="20201030 15:57:25.521"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:25.137" endtime="20201030 15:57:25.522"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:25.132" endtime="20201030 15:57:25.524"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:25.535" level="INFO">${RESULT} = [{'diff': 7.080599999999965e-05}, {'diff': 7.133299999999981e-05}, {'diff': 7.076300000000146e-05}, {'diff': 7.12639999999945e-05}, {'diff': 7.108299999999956e-05}, {'diff': 7.076400000000094e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:57:25.526" endtime="20201030 15:57:25.535"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:25.544" level="INFO">${ACCURACY} = {'diff': [7.080599999999965e-05, 7.133299999999981e-05, 7.076300000000146e-05, 7.12639999999945e-05, 7.108299999999956e-05, 7.076400000000094e-05, 7.133299999999981e-05, 7.10830000000065e-05, 7.108299...</msg>
<status status="PASS" starttime="20201030 15:57:25.537" endtime="20201030 15:57:25.545"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:25.555" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201030 15:57:25.553" endtime="20201030 15:57:25.556"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:25.561" level="INFO">VALUE: [7.080599999999965e-05, 7.133299999999981e-05, 7.076300000000146e-05, 7.12639999999945e-05, 7.108299999999956e-05, 7.076400000000094e-05, 7.133299999999981e-05, 7.10830000000065e-05, 7.108299999999956e-05, 7.12360000000023e-05, 7.122200000000273e-05, 7.140299999999766e-05, 7.145899999999594e-05, 7.075000000000137e-05, 7.090200000000463e-05, 7.087499999999802e-05, 7.122199999999579e-05, 7.136099999999895e-05, 7.088899999999759e-05, 7.098600000000205e-05, 7.094499999999587e-05, 7.14439999999969e-05, 7.054199999999983e-05, 7.077800000000051e-05, 7.108299999999956e-05, 7.054199999999983e-05, 7.122200000000273e-05, 7.131999999999972e-05, 7.056999999999897e-05, 7.133399999999929e-05, 7.131999999999972e-05, 7.11109999999987e-05, 7.109699999999913e-05, 7.133299999999981e-05, 7.123599999999536e-05, 7.14160000000047e-05, 7.106999999999947e-05, 7.09030000000041e-05, 7.077800000000051e-05, 7.098600000000205e-05, 7.108299999999956e-05, 7.088899999999759e-05, 7.063900000000428e-05, 7.100000000000162e-05, 7.12230000000022e-05, 7.054199999999983e-05, 7.099999999999468e-05, 7.130500000000067e-05, 7.100000000000162e-05, 7.122200000000273e-05]</msg>
<status status="PASS" starttime="20201030 15:57:25.558" endtime="20201030 15:57:25.562"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:25.546" endtime="20201030 15:57:25.564"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:25.574" endtime="20201030 15:57:25.595"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:25.569" endtime="20201030 15:57:25.597"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:25.567" endtime="20201030 15:57:25.598"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:25.071" endtime="20201030 15:57:25.598"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:25.070" endtime="20201030 15:57:25.599"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:25.622" endtime="20201030 15:57:25.645"></status>
</kw>
<msg timestamp="20201030 15:57:25.646" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:25.619" endtime="20201030 15:57:25.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:25.652" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:25.648" endtime="20201030 15:57:25.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:25.655" endtime="20201030 15:57:25.659"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:25.611" endtime="20201030 15:57:25.660"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:25.605" endtime="20201030 15:57:25.662"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:25.679" endtime="20201030 15:57:26.037"></status>
</kw>
<msg timestamp="20201030 15:57:26.045" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043740583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043812681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:25.675" endtime="20201030 15:57:26.045"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:26.065" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043740583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043812681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:26.047" endtime="20201030 15:57:26.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:26.067" endtime="20201030 15:57:26.072"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:25.668" endtime="20201030 15:57:26.073"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:25.663" endtime="20201030 15:57:26.075"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:26.086" level="INFO">${RESULT} = [{'diff': 7.209799999999961e-05}, {'diff': 7.15560000000004e-05}, {'diff': 7.199999999999568e-05}, {'diff': 7.188799999999912e-05}, {'diff': 7.198599999999611e-05}, {'diff': 7.218099999999755e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:57:26.077" endtime="20201030 15:57:26.087"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:26.096" level="INFO">${ACCURACY} = {'diff': [7.209799999999961e-05, 7.15560000000004e-05, 7.199999999999568e-05, 7.188799999999912e-05, 7.198599999999611e-05, 7.218099999999755e-05, 7.212499999999927e-05, 7.209700000000013e-05, 7.20830...</msg>
<status status="PASS" starttime="20201030 15:57:26.088" endtime="20201030 15:57:26.097"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:26.108" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201030 15:57:26.106" endtime="20201030 15:57:26.109"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:26.114" level="INFO">VALUE: [7.209799999999961e-05, 7.15560000000004e-05, 7.199999999999568e-05, 7.188799999999912e-05, 7.198599999999611e-05, 7.218099999999755e-05, 7.212499999999927e-05, 7.209700000000013e-05, 7.208300000000056e-05, 7.209700000000013e-05, 7.163899999999834e-05, 7.222200000000373e-05, 7.159699999999963e-05, 7.201400000000219e-05, 7.162499999999877e-05, 7.154200000000083e-05, 7.249999999999618e-05, 7.187499999999902e-05, 7.177700000000203e-05, 7.180500000000117e-05, 7.219399999999765e-05, 7.155499999999398e-05, 7.220799999999722e-05, 7.233299999999387e-05, 7.201400000000219e-05, 7.241699999999823e-05, 7.2069000000001e-05, 7.215199999999894e-05, 7.198599999999611e-05, 7.15560000000004e-05, 7.154200000000083e-05, 7.190199999999869e-05, 7.220900000000363e-05, 7.151300000000221e-05, 7.187499999999902e-05, 7.24160000000057e-05, 7.188899999999859e-05, 7.17360000000028e-05, 7.200000000000262e-05, 7.21109999999997e-05, 7.182000000000022e-05, 7.15560000000004e-05, 7.21109999999997e-05, 7.240299999999866e-05, 7.198599999999611e-05, 7.152800000000126e-05, 7.234700000000038e-05, 7.198700000000252e-05, 7.154100000000135e-05, 7.222199999999679e-05]</msg>
<status status="PASS" starttime="20201030 15:57:26.110" endtime="20201030 15:57:26.115"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:26.098" endtime="20201030 15:57:26.117"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:26.129" endtime="20201030 15:57:26.151"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:26.123" endtime="20201030 15:57:26.153"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:26.120" endtime="20201030 15:57:26.154"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:25.601" endtime="20201030 15:57:26.154"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:25.600" endtime="20201030 15:57:26.155"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:26.179" endtime="20201030 15:57:26.201"></status>
</kw>
<msg timestamp="20201030 15:57:26.202" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:26.176" endtime="20201030 15:57:26.203"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:26.209" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:26.205" endtime="20201030 15:57:26.210"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:26.212" endtime="20201030 15:57:26.217"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:26.168" endtime="20201030 15:57:26.219"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:26.162" endtime="20201030 15:57:26.221"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:26.242" endtime="20201030 15:57:26.604"></status>
</kw>
<msg timestamp="20201030 15:57:26.611" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043890819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043964333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:26.238" endtime="20201030 15:57:26.612"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:26.632" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043890819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043964333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:26.614" endtime="20201030 15:57:26.633"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:26.635" endtime="20201030 15:57:26.639"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:26.229" endtime="20201030 15:57:26.640"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:26.223" endtime="20201030 15:57:26.642"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:26.653" level="INFO">${RESULT} = [{'diff': 7.351400000000369e-05}, {'diff': 7.299999999999668e-05}, {'diff': 7.288899999999959e-05}, {'diff': 7.287500000000002e-05}, {'diff': 7.34439999999989e-05}, {'diff': 7.25560000000014e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:57:26.644" endtime="20201030 15:57:26.654"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:26.665" level="INFO">${ACCURACY} = {'diff': [7.351400000000369e-05, 7.299999999999668e-05, 7.288899999999959e-05, 7.287500000000002e-05, 7.34439999999989e-05, 7.25560000000014e-05, 7.333400000000129e-05, 7.322199999999779e-05, 7.331999...</msg>
<status status="PASS" starttime="20201030 15:57:26.655" endtime="20201030 15:57:26.665"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:26.677" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201030 15:57:26.674" endtime="20201030 15:57:26.677"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:26.683" level="INFO">VALUE: [7.351400000000369e-05, 7.299999999999668e-05, 7.288899999999959e-05, 7.287500000000002e-05, 7.34439999999989e-05, 7.25560000000014e-05, 7.333400000000129e-05, 7.322199999999779e-05, 7.331999999999478e-05, 7.32639999999965e-05, 7.325000000000387e-05, 7.274999999999643e-05, 7.344400000000584e-05, 7.334700000000138e-05, 7.340200000000019e-05, 7.254100000000235e-05, 7.259700000000063e-05, 7.34439999999989e-05, 7.305599999999496e-05, 7.34309999999988e-05, 7.265300000000585e-05, 7.277799999999557e-05, 7.2763999999996e-05, 7.290299999999916e-05, 7.266699999999848e-05, 7.266699999999848e-05, 7.349999999999718e-05, 7.276300000000346e-05, 7.276400000000294e-05, 7.320799999999822e-05, 7.286099999999351e-05, 7.292999999999883e-05, 7.277800000000251e-05, 7.333300000000181e-05, 7.255599999999446e-05, 7.254200000000183e-05, 7.276400000000294e-05, 7.262499999999977e-05, 7.299999999999668e-05, 7.25690000000015e-05, 7.256899999999455e-05, 7.334700000000138e-05, 7.342999999999933e-05, 7.265199999999944e-05, 7.333300000000181e-05, 7.334700000000138e-05, 7.333300000000181e-05, 7.273599999999686e-05, 7.252800000000226e-05, 7.332000000000172e-05]</msg>
<status status="PASS" starttime="20201030 15:57:26.679" endtime="20201030 15:57:26.684"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:26.667" endtime="20201030 15:57:26.686"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:26.696" endtime="20201030 15:57:26.718"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:26.691" endtime="20201030 15:57:26.720"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:26.689" endtime="20201030 15:57:26.721"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:26.157" endtime="20201030 15:57:26.722"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:26.156" endtime="20201030 15:57:26.722"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:26.747" endtime="20201030 15:57:26.769"></status>
</kw>
<msg timestamp="20201030 15:57:26.770" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:26.743" endtime="20201030 15:57:26.771"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:26.777" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:26.773" endtime="20201030 15:57:26.778"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:26.779" endtime="20201030 15:57:26.783"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:26.736" endtime="20201030 15:57:26.785"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:26.729" endtime="20201030 15:57:26.787"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:26.804" endtime="20201030 15:57:27.173"></status>
</kw>
<msg timestamp="20201030 15:57:27.181" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044940694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045014986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:26.801" endtime="20201030 15:57:27.182"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:27.201" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044940694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045014986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:27.184" endtime="20201030 15:57:27.202"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:27.204" endtime="20201030 15:57:27.208"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:26.793" endtime="20201030 15:57:27.209"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:26.788" endtime="20201030 15:57:27.211"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:27.222" level="INFO">${RESULT} = [{'diff': 7.429199999999664e-05}, {'diff': 7.357000000000197e-05}, {'diff': 7.418099999999955e-05}, {'diff': 7.432000000000272e-05}, {'diff': 7.422299999999826e-05}, {'diff': 7.354199999999589e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:57:27.213" endtime="20201030 15:57:27.223"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:27.234" level="INFO">${ACCURACY} = {'diff': [7.429199999999664e-05, 7.357000000000197e-05, 7.418099999999955e-05, 7.432000000000272e-05, 7.422299999999826e-05, 7.354199999999589e-05, 7.354200000000283e-05, 7.41110000000017e-05, 7.38880...</msg>
<status status="PASS" starttime="20201030 15:57:27.225" endtime="20201030 15:57:27.235"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:27.246" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201030 15:57:27.244" endtime="20201030 15:57:27.247"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:27.252" level="INFO">VALUE: [7.429199999999664e-05, 7.357000000000197e-05, 7.418099999999955e-05, 7.432000000000272e-05, 7.422299999999826e-05, 7.354199999999589e-05, 7.354200000000283e-05, 7.41110000000017e-05, 7.388800000000112e-05, 7.41110000000017e-05, 7.412500000000127e-05, 7.354099999999641e-05, 7.370800000000566e-05, 7.387500000000102e-05, 7.422199999999879e-05, 7.354199999999589e-05, 7.399999999999768e-05, 7.400000000000462e-05, 7.432000000000272e-05, 7.388899999999365e-05, 7.438900000000109e-05, 7.398700000000452e-05, 7.40560000000029e-05, 7.387500000000102e-05, 7.379099999999666e-05, 7.437500000000152e-05, 7.40969999999952e-05, 7.434700000000238e-05, 7.365299999999991e-05, 7.401400000000419e-05, 7.422199999999879e-05, 7.44309999999998e-05, 7.398599999999811e-05, 7.377800000000351e-05, 7.409700000000213e-05, 7.365299999999991e-05, 7.444499999999937e-05, 7.369399999999915e-05, 7.41110000000017e-05, 7.354099999999641e-05, 7.443000000000033e-05, 7.355499999999598e-05, 7.412500000000127e-05, 7.433300000000281e-05, 7.379200000000308e-05, 7.41110000000017e-05, 7.432000000000272e-05, 7.365299999999991e-05, 7.388900000000059e-05, 7.44309999999998e-05]</msg>
<status status="PASS" starttime="20201030 15:57:27.249" endtime="20201030 15:57:27.254"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:27.237" endtime="20201030 15:57:27.256"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:27.266" endtime="20201030 15:57:27.288"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:27.261" endtime="20201030 15:57:27.290"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:27.258" endtime="20201030 15:57:27.290"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:26.724" endtime="20201030 15:57:27.291"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:26.723" endtime="20201030 15:57:27.292"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:27.316" endtime="20201030 15:57:27.338"></status>
</kw>
<msg timestamp="20201030 15:57:27.340" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:27.312" endtime="20201030 15:57:27.340"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:27.346" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:27.342" endtime="20201030 15:57:27.347"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:27.349" endtime="20201030 15:57:27.353"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:27.305" endtime="20201030 15:57:27.354"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:27.298" endtime="20201030 15:57:27.356"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:27.374" endtime="20201030 15:57:27.721"></status>
</kw>
<msg timestamp="20201030 15:57:27.728" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043843389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0439185, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:57:27.371" endtime="20201030 15:57:27.728"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:27.746" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043843389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0439185, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:57:27.730" endtime="20201030 15:57:27.747"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:27.749" endtime="20201030 15:57:27.753"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:27.363" endtime="20201030 15:57:27.754"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:27.358" endtime="20201030 15:57:27.756"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:27.766" level="INFO">${RESULT} = [{'diff': 7.511099999999576e-05}, {'diff': 7.454099999999741e-05}, {'diff': 7.53189999999973e-05}, {'diff': 7.463900000000134e-05}, {'diff': 7.533300000000381e-05}, {'diff': 7.498599999999911e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:57:27.757" endtime="20201030 15:57:27.767"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:27.776" level="INFO">${ACCURACY} = {'diff': [7.511099999999576e-05, 7.454099999999741e-05, 7.53189999999973e-05, 7.463900000000134e-05, 7.533300000000381e-05, 7.498599999999911e-05, 7.477799999999757e-05, 7.451399999999775e-05, 7.50969...</msg>
<status status="PASS" starttime="20201030 15:57:27.768" endtime="20201030 15:57:27.776"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:27.787" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201030 15:57:27.784" endtime="20201030 15:57:27.787"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:27.792" level="INFO">VALUE: [7.511099999999576e-05, 7.454099999999741e-05, 7.53189999999973e-05, 7.463900000000134e-05, 7.533300000000381e-05, 7.498599999999911e-05, 7.477799999999757e-05, 7.451399999999775e-05, 7.50969999999962e-05, 7.477799999999757e-05, 7.508400000000304e-05, 7.530600000000415e-05, 7.519500000000012e-05, 7.497299999999901e-05, 7.54310000000008e-05, 7.533300000000381e-05, 7.466600000000101e-05, 7.545800000000047e-05, 7.534699999999644e-05, 7.509700000000313e-05, 7.513900000000184e-05, 7.543000000000133e-05, 7.486099999999551e-05, 7.4763999999998e-05, 7.530599999999721e-05, 7.508400000000304e-05, 7.497299999999901e-05, 7.475000000000537e-05, 7.488900000000159e-05, 7.522199999999979e-05, 7.50969999999962e-05, 7.484700000000288e-05, 7.543000000000133e-05, 7.477800000000451e-05, 7.551399999999875e-05, 7.509700000000313e-05, 7.491700000000073e-05, 7.454200000000383e-05, 7.473599999999886e-05, 7.511099999999576e-05, 7.526400000000544e-05, 7.533400000000329e-05, 7.54440000000009e-05, 7.454200000000383e-05, 7.455500000000392e-05, 7.522199999999979e-05, 7.452699999999784e-05, 7.523599999999936e-05, 7.545800000000047e-05, 7.508299999999662e-05]</msg>
<status status="PASS" starttime="20201030 15:57:27.789" endtime="20201030 15:57:27.793"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:27.777" endtime="20201030 15:57:27.795"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:27.804" endtime="20201030 15:57:27.826"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:27.800" endtime="20201030 15:57:27.828"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:27.798" endtime="20201030 15:57:27.828"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:27.294" endtime="20201030 15:57:27.829"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:27.292" endtime="20201030 15:57:27.829"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:27.852" endtime="20201030 15:57:27.879"></status>
</kw>
<msg timestamp="20201030 15:57:27.881" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:27.849" endtime="20201030 15:57:27.881"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:27.887" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:27.883" endtime="20201030 15:57:27.888"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:27.890" endtime="20201030 15:57:27.894"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:27.841" endtime="20201030 15:57:27.895"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:27.836" endtime="20201030 15:57:27.897"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:27.914" endtime="20201030 15:57:28.247"></status>
</kw>
<msg timestamp="20201030 15:57:28.254" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046895139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046971653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:27.911" endtime="20201030 15:57:28.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:28.273" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046895139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046971653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:28.257" endtime="20201030 15:57:28.274"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:28.275" endtime="20201030 15:57:28.279"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:27.903" endtime="20201030 15:57:28.281"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:27.898" endtime="20201030 15:57:28.282"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:28.293" level="INFO">${RESULT} = [{'diff': 7.651399999999975e-05}, {'diff': 7.611099999999676e-05}, {'diff': 7.563900000000234e-05}, {'diff': 7.588800000000312e-05}, {'diff': 7.619500000000112e-05}, {'diff': 7.555499999999798e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:57:28.284" endtime="20201030 15:57:28.293"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:28.302" level="INFO">${ACCURACY} = {'diff': [7.651399999999975e-05, 7.611099999999676e-05, 7.563900000000234e-05, 7.588800000000312e-05, 7.619500000000112e-05, 7.555499999999798e-05, 7.58890000000026e-05, 7.597200000000054e-05, 7.61110...</msg>
<status status="PASS" starttime="20201030 15:57:28.295" endtime="20201030 15:57:28.302"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:28.313" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201030 15:57:28.310" endtime="20201030 15:57:28.313"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:28.318" level="INFO">VALUE: [7.651399999999975e-05, 7.611099999999676e-05, 7.563900000000234e-05, 7.588800000000312e-05, 7.619500000000112e-05, 7.555499999999798e-05, 7.58890000000026e-05, 7.597200000000054e-05, 7.61110000000037e-05, 7.576400000000594e-05, 7.55560000000044e-05, 7.565299999999497e-05, 7.565299999999497e-05, 7.601399999999925e-05, 7.590300000000216e-05, 7.587500000000302e-05, 7.622300000000026e-05, 7.645800000000147e-05, 7.552799999999832e-05, 7.554099999999841e-05, 7.550000000000612e-05, 7.622199999999385e-05, 7.587500000000302e-05, 7.595800000000097e-05, 7.642999999999539e-05, 7.64310000000018e-05, 7.565300000000191e-05, 7.579199999999814e-05, 7.632000000000472e-05, 7.554199999999789e-05, 7.613799999999643e-05, 7.620900000000069e-05, 7.577799999999857e-05, 7.555499999999798e-05, 7.570800000000072e-05, 7.591700000000173e-05, 7.623600000000036e-05, 7.568100000000105e-05, 7.568100000000105e-05, 7.552799999999832e-05, 7.638799999999668e-05, 7.563900000000234e-05, 7.632000000000472e-05, 7.556999999999703e-05, 7.577799999999857e-05, 7.586099999999651e-05, 7.637499999999658e-05, 7.566600000000201e-05, 7.576299999999953e-05, 7.56519999999955e-05]</msg>
<status status="PASS" starttime="20201030 15:57:28.315" endtime="20201030 15:57:28.320"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:28.304" endtime="20201030 15:57:28.321"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:28.332" endtime="20201030 15:57:28.354"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:28.327" endtime="20201030 15:57:28.356"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:28.324" endtime="20201030 15:57:28.356"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:27.831" endtime="20201030 15:57:28.357"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:27.830" endtime="20201030 15:57:28.357"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:28.380" endtime="20201030 15:57:28.401"></status>
</kw>
<msg timestamp="20201030 15:57:28.402" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:28.377" endtime="20201030 15:57:28.402"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:28.408" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:28.404" endtime="20201030 15:57:28.409"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:28.410" endtime="20201030 15:57:28.414"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:28.369" endtime="20201030 15:57:28.416"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:28.363" endtime="20201030 15:57:28.417"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:28.434" endtime="20201030 15:57:28.767"></status>
</kw>
<msg timestamp="20201030 15:57:28.774" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041063514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041140611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:28.431" endtime="20201030 15:57:28.775"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:28.792" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041063514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041140611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:28.776" endtime="20201030 15:57:28.793"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:28.795" endtime="20201030 15:57:28.799"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:28.423" endtime="20201030 15:57:28.800"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:28.419" endtime="20201030 15:57:28.802"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:28.812" level="INFO">${RESULT} = [{'diff': 7.70969999999982e-05}, {'diff': 7.650000000000018e-05}, {'diff': 7.720800000000222e-05}, {'diff': 7.656999999999803e-05}, {'diff': 7.687499999999708e-05}, {'diff': 7.666699999999554e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:57:28.803" endtime="20201030 15:57:28.813"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:28.823" level="INFO">${ACCURACY} = {'diff': [7.70969999999982e-05, 7.650000000000018e-05, 7.720800000000222e-05, 7.656999999999803e-05, 7.687499999999708e-05, 7.666699999999554e-05, 7.730599999999921e-05, 7.687499999999708e-05, 7.70559...</msg>
<status status="PASS" starttime="20201030 15:57:28.814" endtime="20201030 15:57:28.823"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:28.834" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201030 15:57:28.832" endtime="20201030 15:57:28.835"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:28.839" level="INFO">VALUE: [7.70969999999982e-05, 7.650000000000018e-05, 7.720800000000222e-05, 7.656999999999803e-05, 7.687499999999708e-05, 7.666699999999554e-05, 7.730599999999921e-05, 7.687499999999708e-05, 7.705599999999896e-05, 7.697300000000101e-05, 7.700000000000068e-05, 7.676300000000053e-05, 7.684699999999794e-05, 7.741600000000376e-05, 7.711099999999776e-05, 7.687500000000402e-05, 7.655599999999846e-05, 7.701400000000025e-05, 7.741700000000323e-05, 7.744499999999543e-05, 7.701400000000025e-05, 7.711099999999776e-05, 7.7458999999995e-05, 7.709799999999767e-05, 7.743099999999586e-05, 7.720799999999528e-05, 7.70969999999982e-05, 7.74440000000029e-05, 7.745800000000247e-05, 7.673700000000033e-05, 7.673600000000086e-05, 7.744399999999596e-05, 7.68890000000036e-05, 7.744500000000237e-05, 7.652799999999932e-05, 7.687499999999708e-05, 7.684700000000488e-05, 7.6764e-05, 7.698699999999364e-05, 7.70969999999982e-05, 7.670800000000172e-05, 7.700000000000068e-05, 7.670799999999478e-05, 7.709700000000513e-05, 7.666699999999554e-05, 7.655599999999846e-05, 7.720800000000222e-05, 7.673600000000086e-05, 7.701400000000025e-05, 7.733399999999835e-05]</msg>
<status status="PASS" starttime="20201030 15:57:28.836" endtime="20201030 15:57:28.841"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:28.825" endtime="20201030 15:57:28.842"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:28.852" endtime="20201030 15:57:28.873"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:28.847" endtime="20201030 15:57:28.875"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:28.845" endtime="20201030 15:57:28.876"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:28.359" endtime="20201030 15:57:28.876"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:28.358" endtime="20201030 15:57:28.877"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:28.899" endtime="20201030 15:57:28.921"></status>
</kw>
<msg timestamp="20201030 15:57:28.922" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:28.896" endtime="20201030 15:57:28.923"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:28.929" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:28.925" endtime="20201030 15:57:28.930"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:28.932" endtime="20201030 15:57:28.936"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:28.889" endtime="20201030 15:57:28.937"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:28.883" endtime="20201030 15:57:28.939"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:28.955" endtime="20201030 15:57:29.290"></status>
</kw>
<msg timestamp="20201030 15:57:29.297" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041170458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041248792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:28.952" endtime="20201030 15:57:29.298"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:29.316" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041170458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041248792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:29.300" endtime="20201030 15:57:29.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:29.318" endtime="20201030 15:57:29.322"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:28.945" endtime="20201030 15:57:29.324"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:28.940" endtime="20201030 15:57:29.325"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:29.336" level="INFO">${RESULT} = [{'diff': 7.833399999999935e-05}, {'diff': 7.754199999999989e-05}, {'diff': 7.768099999999611e-05}, {'diff': 7.811099999999876e-05}, {'diff': 7.798600000000211e-05}, {'diff': 7.755599999999946e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:57:29.327" endtime="20201030 15:57:29.336"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:29.347" level="INFO">${ACCURACY} = {'diff': [7.833399999999935e-05, 7.754199999999989e-05, 7.768099999999611e-05, 7.811099999999876e-05, 7.798600000000211e-05, 7.755599999999946e-05, 7.831999999999978e-05, 7.809700000000613e-05, 7.8222...</msg>
<status status="PASS" starttime="20201030 15:57:29.338" endtime="20201030 15:57:29.347"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:29.358" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201030 15:57:29.356" endtime="20201030 15:57:29.359"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:29.363" level="INFO">VALUE: [7.833399999999935e-05, 7.754199999999989e-05, 7.768099999999611e-05, 7.811099999999876e-05, 7.798600000000211e-05, 7.755599999999946e-05, 7.831999999999978e-05, 7.809700000000613e-05, 7.822200000000279e-05, 7.81389999999979e-05, 7.833299999999987e-05, 7.823600000000236e-05, 7.806900000000006e-05, 7.801399999999431e-05, 7.806999999999953e-05, 7.80839999999991e-05, 7.7764000000001e-05, 7.791600000000426e-05, 7.787499999999808e-05, 7.780599999999971e-05, 7.84440000000039e-05, 7.850000000000218e-05, 7.766600000000401e-05, 7.755499999999999e-05, 7.798599999999517e-05, 7.798600000000211e-05, 7.820800000000322e-05, 7.798599999999517e-05, 7.780599999999971e-05, 7.790299999999722e-05, 7.754199999999989e-05, 7.768100000000305e-05, 7.777800000000057e-05, 7.811099999999876e-05, 7.822200000000279e-05, 7.833299999999987e-05, 7.795800000000297e-05, 7.777800000000057e-05, 7.83190000000003e-05, 7.754199999999989e-05, 7.757000000000597e-05, 7.843099999999686e-05, 7.766699999999654e-05, 7.777800000000057e-05, 7.787499999999808e-05, 7.783299999999937e-05, 7.788899999999765e-05, 7.820900000000269e-05, 7.843000000000433e-05, 7.801400000000125e-05]</msg>
<status status="PASS" starttime="20201030 15:57:29.360" endtime="20201030 15:57:29.365"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:29.349" endtime="20201030 15:57:29.366"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:29.376" endtime="20201030 15:57:29.397"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:29.371" endtime="20201030 15:57:29.399"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:29.369" endtime="20201030 15:57:29.400"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:28.879" endtime="20201030 15:57:29.400"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:28.878" endtime="20201030 15:57:29.401"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:29.424" endtime="20201030 15:57:29.445"></status>
</kw>
<msg timestamp="20201030 15:57:29.446" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:29.420" endtime="20201030 15:57:29.447"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:29.453" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:29.449" endtime="20201030 15:57:29.453"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:29.455" endtime="20201030 15:57:29.459"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:29.413" endtime="20201030 15:57:29.460"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:29.407" endtime="20201030 15:57:29.462"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:29.478" endtime="20201030 15:57:29.816"></status>
</kw>
<msg timestamp="20201030 15:57:29.823" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041409569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041489097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:29.475" endtime="20201030 15:57:29.823"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:29.841" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041409569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041489097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:29.825" endtime="20201030 15:57:29.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:29.844" endtime="20201030 15:57:29.848"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:29.468" endtime="20201030 15:57:29.849"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:29.463" endtime="20201030 15:57:29.851"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:29.861" level="INFO">${RESULT} = [{'diff': 7.952800000000232e-05}, {'diff': 7.907000000000053e-05}, {'diff': 7.879200000000114e-05}, {'diff': 7.866699999999754e-05}, {'diff': 7.944500000000437e-05}, {'diff': 7.855500000000099e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:57:29.852" endtime="20201030 15:57:29.862"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:29.871" level="INFO">${ACCURACY} = {'diff': [7.952800000000232e-05, 7.907000000000053e-05, 7.879200000000114e-05, 7.866699999999754e-05, 7.944500000000437e-05, 7.855500000000099e-05, 7.873600000000286e-05, 7.9151999999999e-05, 7.920900...</msg>
<status status="PASS" starttime="20201030 15:57:29.863" endtime="20201030 15:57:29.871"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:29.881" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201030 15:57:29.879" endtime="20201030 15:57:29.882"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:29.887" level="INFO">VALUE: [7.952800000000232e-05, 7.907000000000053e-05, 7.879200000000114e-05, 7.866699999999754e-05, 7.944500000000437e-05, 7.855500000000099e-05, 7.873600000000286e-05, 7.9151999999999e-05, 7.920900000000369e-05, 7.923600000000336e-05, 7.909699999999326e-05, 7.890199999999875e-05, 7.890299999999822e-05, 7.91389999999989e-05, 7.872200000000329e-05, 7.8764000000002e-05, 7.911099999999976e-05, 7.906900000000106e-05, 7.900000000000268e-05, 7.89719999999966e-05, 7.855600000000046e-05, 7.923700000000283e-05, 7.936100000000001e-05, 7.912499999999933e-05, 7.891600000000526e-05, 7.911099999999976e-05, 7.88190000000008e-05, 7.902800000000182e-05, 7.920799999999728e-05, 7.863900000000534e-05, 7.943000000000533e-05, 7.912500000000627e-05, 7.911099999999976e-05, 7.898600000000311e-05, 7.866699999999754e-05, 7.94169999999983e-05, 7.932000000000078e-05, 7.879100000000167e-05, 7.90970000000002e-05, 7.943000000000533e-05, 7.911099999999976e-05, 7.854100000000142e-05, 7.877800000000157e-05, 7.856900000000056e-05, 7.879200000000114e-05, 7.851400000000175e-05, 7.866699999999754e-05, 7.877800000000157e-05, 7.887499999999908e-05, 7.866699999999754e-05]</msg>
<status status="PASS" starttime="20201030 15:57:29.884" endtime="20201030 15:57:29.888"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:29.872" endtime="20201030 15:57:29.890"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:29.899" endtime="20201030 15:57:29.921"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:29.895" endtime="20201030 15:57:29.923"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:29.893" endtime="20201030 15:57:29.923"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:29.403" endtime="20201030 15:57:29.924"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:29.402" endtime="20201030 15:57:29.924"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:29.948" endtime="20201030 15:57:29.972"></status>
</kw>
<msg timestamp="20201030 15:57:29.973" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:29.944" endtime="20201030 15:57:29.973"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:29.979" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:29.975" endtime="20201030 15:57:29.980"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:29.981" endtime="20201030 15:57:29.985"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:29.937" endtime="20201030 15:57:29.987"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:29.931" endtime="20201030 15:57:29.988"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:30.005" endtime="20201030 15:57:30.314"></status>
</kw>
<msg timestamp="20201030 15:57:30.318" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043883542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04396375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:57:30.002" endtime="20201030 15:57:30.318"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:30.326" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043883542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04396375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:57:30.319" endtime="20201030 15:57:30.326"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:30.327" endtime="20201030 15:57:30.329"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:29.994" endtime="20201030 15:57:30.330"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:29.990" endtime="20201030 15:57:30.330"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:30.335" level="INFO">${RESULT} = [{'diff': 8.020800000000522e-05}, {'diff': 8.02640000000035e-05}, {'diff': 8.020799999999828e-05}, {'diff': 8.030599999999527e-05}, {'diff': 7.986100000000051e-05}, {'diff': 8.044499999999843e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:57:30.331" endtime="20201030 15:57:30.336"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:30.340" level="INFO">${ACCURACY} = {'diff': [8.020800000000522e-05, 8.02640000000035e-05, 8.020799999999828e-05, 8.030599999999527e-05, 7.986100000000051e-05, 8.044499999999843e-05, 8.045900000000494e-05, 8.008399999999416e-05, 8.00830...</msg>
<status status="PASS" starttime="20201030 15:57:30.336" endtime="20201030 15:57:30.340"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:30.345" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201030 15:57:30.344" endtime="20201030 15:57:30.345"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:30.348" level="INFO">VALUE: [8.020800000000522e-05, 8.02640000000035e-05, 8.020799999999828e-05, 8.030599999999527e-05, 7.986100000000051e-05, 8.044499999999843e-05, 8.045900000000494e-05, 8.008399999999416e-05, 8.008300000000163e-05, 7.987500000000008e-05, 8.020799999999828e-05, 7.955499999999505e-05, 7.955500000000199e-05, 7.958300000000113e-05, 8.011100000000076e-05, 8.044399999999896e-05, 8.044499999999843e-05, 7.97919999999952e-05, 8.000000000000368e-05, 7.974999999999649e-05, 8.044500000000537e-05, 8.002700000000335e-05, 7.976299999999659e-05, 7.968099999999811e-05, 7.990299999999922e-05, 7.954100000000242e-05, 7.979200000000214e-05, 8.044399999999896e-05, 7.966699999999854e-05, 7.990299999999922e-05, 7.999999999999674e-05, 8.00970000000012e-05, 7.962499999999983e-05, 8.044500000000537e-05, 7.9764000000003e-05, 7.966699999999854e-05, 7.955500000000199e-05, 7.955499999999505e-05, 8.022199999999785e-05, 8.033299999999494e-05, 7.965299999999897e-05, 8.001400000000325e-05, 8.044399999999896e-05, 7.986100000000051e-05, 7.988899999999965e-05, 7.952799999999538e-05, 8.032000000000178e-05, 7.988899999999965e-05, 7.998599999999717e-05, 7.970900000000419e-05]</msg>
<status status="PASS" starttime="20201030 15:57:30.346" endtime="20201030 15:57:30.348"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:30.341" endtime="20201030 15:57:30.349"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:30.354" endtime="20201030 15:57:30.374"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:30.352" endtime="20201030 15:57:30.375"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:30.350" endtime="20201030 15:57:30.375"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:29.926" endtime="20201030 15:57:30.375"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:29.925" endtime="20201030 15:57:30.376"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:30.386" endtime="20201030 15:57:30.405"></status>
</kw>
<msg timestamp="20201030 15:57:30.406" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:30.385" endtime="20201030 15:57:30.406"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:30.409" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:30.407" endtime="20201030 15:57:30.409"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:30.410" endtime="20201030 15:57:30.412"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:30.381" endtime="20201030 15:57:30.412"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:30.379" endtime="20201030 15:57:30.413"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:30.421" endtime="20201030 15:57:30.748"></status>
</kw>
<msg timestamp="20201030 15:57:30.755" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024916708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024998236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:30.419" endtime="20201030 15:57:30.755"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:30.774" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024916708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024998236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:30.757" endtime="20201030 15:57:30.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:30.776" endtime="20201030 15:57:30.780"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:30.416" endtime="20201030 15:57:30.782"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:30.414" endtime="20201030 15:57:30.783"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:30.794" level="INFO">${RESULT} = [{'diff': 8.152800000000085e-05}, {'diff': 8.144399999999996e-05}, {'diff': 8.144499999999943e-05}, {'diff': 8.073600000000139e-05}, {'diff': 8.07780000000001e-05}, {'diff': 8.055599999999899e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:57:30.785" endtime="20201030 15:57:30.794"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:30.805" level="INFO">${ACCURACY} = {'diff': [8.152800000000085e-05, 8.144399999999996e-05, 8.144499999999943e-05, 8.073600000000139e-05, 8.07780000000001e-05, 8.055599999999899e-05, 8.054199999999942e-05, 8.076400000000053e-05, 8.05559...</msg>
<status status="PASS" starttime="20201030 15:57:30.796" endtime="20201030 15:57:30.805"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:30.816" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201030 15:57:30.814" endtime="20201030 15:57:30.817"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:30.821" level="INFO">VALUE: [8.152800000000085e-05, 8.144399999999996e-05, 8.144499999999943e-05, 8.073600000000139e-05, 8.07780000000001e-05, 8.055599999999899e-05, 8.054199999999942e-05, 8.076400000000053e-05, 8.055599999999899e-05, 8.069400000000268e-05, 8.07910000000002e-05, 8.151400000000128e-05, 8.131899999999984e-05, 8.11109999999983e-05, 8.145799999999953e-05, 8.065299999999997e-05, 8.143099999999986e-05, 8.07780000000001e-05, 8.076400000000053e-05, 8.130599999999974e-05, 8.05970000000017e-05, 8.087499999999762e-05, 8.102800000000035e-05, 8.072200000000182e-05, 8.073600000000139e-05, 8.09580000000025e-05, 8.054099999999995e-05, 8.144399999999996e-05, 8.052799999999985e-05, 8.145799999999953e-05, 8.069500000000215e-05, 8.120799999999928e-05, 8.054199999999942e-05, 8.088900000000065e-05, 8.054199999999942e-05, 8.100000000000121e-05, 8.11109999999983e-05, 8.105500000000002e-05, 8.088900000000065e-05, 8.122199999999885e-05, 8.119399999999971e-05, 8.07780000000001e-05, 8.131899999999984e-05, 8.076399999999706e-05, 8.143099999999986e-05, 8.133400000000235e-05, 8.143099999999986e-05, 8.066699999999954e-05, 8.088900000000065e-05, 8.087500000000108e-05]</msg>
<status status="PASS" starttime="20201030 15:57:30.818" endtime="20201030 15:57:30.823"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:30.807" endtime="20201030 15:57:30.825"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:30.835" endtime="20201030 15:57:30.857"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:30.830" endtime="20201030 15:57:30.858"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:30.828" endtime="20201030 15:57:30.859"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:30.377" endtime="20201030 15:57:30.860"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:30.376" endtime="20201030 15:57:30.860"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:30.883" endtime="20201030 15:57:30.905"></status>
</kw>
<msg timestamp="20201030 15:57:30.906" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:30.880" endtime="20201030 15:57:30.907"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:30.912" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:30.909" endtime="20201030 15:57:30.913"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:30.915" endtime="20201030 15:57:30.919"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:30.872" endtime="20201030 15:57:30.920"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:30.867" endtime="20201030 15:57:30.922"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:30.939" endtime="20201030 15:57:31.278"></status>
</kw>
<msg timestamp="20201030 15:57:31.285" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042127417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042209611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:30.936" endtime="20201030 15:57:31.285"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:31.304" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042127417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042209611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:31.287" endtime="20201030 15:57:31.305"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:31.306" endtime="20201030 15:57:31.310"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:30.928" endtime="20201030 15:57:31.312"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:30.923" endtime="20201030 15:57:31.313"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:31.324" level="INFO">${RESULT} = [{'diff': 8.219400000000071e-05}, {'diff': 8.188899999999472e-05}, {'diff': 8.233300000000388e-05}, {'diff': 8.236100000000302e-05}, {'diff': 8.220800000000028e-05}, {'diff': 8.199999999999874e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:57:31.315" endtime="20201030 15:57:31.324"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:31.336" level="INFO">${ACCURACY} = {'diff': [8.219400000000071e-05, 8.188899999999472e-05, 8.233300000000388e-05, 8.236100000000302e-05, 8.220800000000028e-05, 8.199999999999874e-05, 8.211099999999583e-05, 8.23049999999978e-05, 8.23199...</msg>
<status status="PASS" starttime="20201030 15:57:31.326" endtime="20201030 15:57:31.336"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:31.347" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201030 15:57:31.344" endtime="20201030 15:57:31.348"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:31.352" level="INFO">VALUE: [8.219400000000071e-05, 8.188899999999472e-05, 8.233300000000388e-05, 8.236100000000302e-05, 8.220800000000028e-05, 8.199999999999874e-05, 8.211099999999583e-05, 8.23049999999978e-05, 8.231999999999684e-05, 8.188800000000218e-05, 8.226399999999856e-05, 8.161100000000227e-05, 8.188899999999472e-05, 8.190300000000122e-05, 8.152800000000432e-05, 8.190299999999429e-05, 8.220899999999975e-05, 8.244500000000043e-05, 8.177799999999763e-05, 8.176399999999806e-05, 8.233399999999641e-05, 8.244400000000096e-05, 8.233400000000335e-05, 8.188800000000218e-05, 8.16520000000015e-05, 8.222199999999985e-05, 8.177799999999763e-05, 8.240300000000172e-05, 8.166700000000054e-05, 8.223599999999942e-05, 8.211100000000277e-05, 8.161100000000227e-05, 8.174999999999849e-05, 8.198599999999917e-05, 8.190300000000122e-05, 8.168000000000064e-05, 8.165300000000097e-05, 8.166600000000107e-05, 8.184700000000295e-05, 8.244400000000096e-05, 8.211100000000277e-05, 8.230500000000474e-05, 8.21249999999954e-05, 8.154199999999695e-05, 8.155600000000346e-05, 8.152799999999738e-05, 8.22369999999989e-05, 8.219400000000071e-05, 8.190200000000175e-05, 8.168000000000064e-05]</msg>
<status status="PASS" starttime="20201030 15:57:31.349" endtime="20201030 15:57:31.354"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:31.337" endtime="20201030 15:57:31.356"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:31.365" endtime="20201030 15:57:31.387"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:31.361" endtime="20201030 15:57:31.389"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:31.358" endtime="20201030 15:57:31.389"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:30.862" endtime="20201030 15:57:31.390"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:30.861" endtime="20201030 15:57:31.390"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:31.414" endtime="20201030 15:57:31.436"></status>
</kw>
<msg timestamp="20201030 15:57:31.437" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:31.410" endtime="20201030 15:57:31.437"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:31.443" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:31.439" endtime="20201030 15:57:31.444"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:31.445" endtime="20201030 15:57:31.449"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:31.403" endtime="20201030 15:57:31.451"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:31.397" endtime="20201030 15:57:31.452"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:31.469" endtime="20201030 15:57:31.812"></status>
</kw>
<msg timestamp="20201030 15:57:31.820" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042028431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042111403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:31.466" endtime="20201030 15:57:31.820"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:31.839" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042028431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042111403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:31.822" endtime="20201030 15:57:31.839"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:31.841" endtime="20201030 15:57:31.845"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:31.459" endtime="20201030 15:57:31.847"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:31.454" endtime="20201030 15:57:31.848"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:31.859" level="INFO">${RESULT} = [{'diff': 8.29720000000006e-05}, {'diff': 8.341699999999536e-05}, {'diff': 8.344500000000143e-05}, {'diff': 8.332000000000478e-05}, {'diff': 8.252799999999838e-05}, {'diff': 8.277699999999916e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:57:31.850" endtime="20201030 15:57:31.859"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:31.869" level="INFO">${ACCURACY} = {'diff': [8.29720000000006e-05, 8.341699999999536e-05, 8.344500000000143e-05, 8.332000000000478e-05, 8.252799999999838e-05, 8.277699999999916e-05, 8.318100000000161e-05, 8.276399999999906e-05, 8.26530...</msg>
<status status="PASS" starttime="20201030 15:57:31.861" endtime="20201030 15:57:31.869"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:31.880" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201030 15:57:31.877" endtime="20201030 15:57:31.880"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:31.885" level="INFO">VALUE: [8.29720000000006e-05, 8.341699999999536e-05, 8.344500000000143e-05, 8.332000000000478e-05, 8.252799999999838e-05, 8.277699999999916e-05, 8.318100000000161e-05, 8.276399999999906e-05, 8.265300000000197e-05, 8.290299999999529e-05, 8.266700000000154e-05, 8.30970000000042e-05, 8.255599999999752e-05, 8.323600000000042e-05, 8.272200000000035e-05, 8.32369999999999e-05, 8.255599999999752e-05, 8.344400000000196e-05, 8.311100000000377e-05, 8.255499999999805e-05, 8.27919999999982e-05, 8.320799999999434e-05, 8.333299999999794e-05, 8.301399999999931e-05, 8.259699999999676e-05, 8.290300000000222e-05, 8.320799999999434e-05, 8.343100000000186e-05, 8.255599999999752e-05, 8.288800000000318e-05, 8.252799999999838e-05, 8.350000000000024e-05, 8.311099999999683e-05, 8.266600000000207e-05, 8.311100000000377e-05, 8.336099999999708e-05, 8.324999999999999e-05, 8.331899999999837e-05, 8.301399999999931e-05, 8.298600000000017e-05, 8.30970000000042e-05, 8.309799999999673e-05, 8.31119999999963e-05, 8.312500000000334e-05, 8.28049999999983e-05, 8.31249999999964e-05, 8.322200000000085e-05, 8.276399999999906e-05, 8.311100000000377e-05, 8.333300000000488e-05]</msg>
<status status="PASS" starttime="20201030 15:57:31.882" endtime="20201030 15:57:31.887"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:31.870" endtime="20201030 15:57:31.889"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:31.898" endtime="20201030 15:57:31.920"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:31.894" endtime="20201030 15:57:31.922"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:31.891" endtime="20201030 15:57:31.922"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:31.393" endtime="20201030 15:57:31.923"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:31.391" endtime="20201030 15:57:31.924"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:31.947" endtime="20201030 15:57:31.971"></status>
</kw>
<msg timestamp="20201030 15:57:31.972" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:31.943" endtime="20201030 15:57:31.972"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:31.978" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:31.974" endtime="20201030 15:57:31.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:31.981" endtime="20201030 15:57:31.985"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:31.936" endtime="20201030 15:57:31.987"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:31.930" endtime="20201030 15:57:31.988"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:32.006" endtime="20201030 15:57:32.347"></status>
</kw>
<msg timestamp="20201030 15:57:32.354" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043731222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043814875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:32.003" endtime="20201030 15:57:32.355"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:32.373" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043731222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043814875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:32.356" endtime="20201030 15:57:32.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:32.375" endtime="20201030 15:57:32.379"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:31.995" endtime="20201030 15:57:32.381"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:31.990" endtime="20201030 15:57:32.382"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:32.393" level="INFO">${RESULT} = [{'diff': 8.365300000000297e-05}, {'diff': 8.387499999999715e-05}, {'diff': 8.412500000000434e-05}, {'diff': 8.3944999999995e-05}, {'diff': 8.420800000000228e-05}, {'diff': 8.355599999999852e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:57:32.384" endtime="20201030 15:57:32.394"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:32.403" level="INFO">${ACCURACY} = {'diff': [8.365300000000297e-05, 8.387499999999715e-05, 8.412500000000434e-05, 8.3944999999995e-05, 8.420800000000228e-05, 8.355599999999852e-05, 8.411099999999783e-05, 8.36669999999956e-05, 8.3986999...</msg>
<status status="PASS" starttime="20201030 15:57:32.395" endtime="20201030 15:57:32.403"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:32.414" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201030 15:57:32.411" endtime="20201030 15:57:32.414"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:32.419" level="INFO">VALUE: [8.365300000000297e-05, 8.387499999999715e-05, 8.412500000000434e-05, 8.3944999999995e-05, 8.420800000000228e-05, 8.355599999999852e-05, 8.411099999999783e-05, 8.36669999999956e-05, 8.39869999999937e-05, 8.433300000000588e-05, 8.352799999999938e-05, 8.375000000000049e-05, 8.368000000000264e-05, 8.354199999999895e-05, 8.398600000000117e-05, 8.365299999999604e-05, 8.43469999999985e-05, 8.443100000000286e-05, 8.443100000000286e-05, 8.411100000000477e-05, 8.445800000000253e-05, 8.352799999999938e-05, 8.422199999999491e-05, 8.34720000000011e-05, 8.406899999999912e-05, 8.376400000000006e-05, 8.437500000000459e-05, 8.355600000000546e-05, 8.377799999999963e-05, 8.372200000000135e-05, 8.400000000000074e-05, 8.44170000000033e-05, 8.383300000000538e-05, 8.358299999999819e-05, 8.387499999999715e-05, 8.422200000000185e-05, 8.423600000000142e-05, 8.405499999999955e-05, 8.419399999999577e-05, 8.423600000000142e-05, 8.411099999999783e-05, 8.365300000000297e-05, 8.423599999999448e-05, 8.420900000000175e-05, 8.387499999999715e-05, 8.426400000000056e-05, 8.433400000000535e-05, 8.352799999999938e-05, 8.418100000000261e-05, 8.41249999999974e-05]</msg>
<status status="PASS" starttime="20201030 15:57:32.416" endtime="20201030 15:57:32.421"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:32.404" endtime="20201030 15:57:32.422"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:32.434" endtime="20201030 15:57:32.456"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:32.428" endtime="20201030 15:57:32.457"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:32.425" endtime="20201030 15:57:32.458"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:31.926" endtime="20201030 15:57:32.459"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:31.924" endtime="20201030 15:57:32.459"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:32.482" endtime="20201030 15:57:32.505"></status>
</kw>
<msg timestamp="20201030 15:57:32.506" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:32.479" endtime="20201030 15:57:32.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:32.512" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:32.508" endtime="20201030 15:57:32.513"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:32.515" endtime="20201030 15:57:32.518"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:32.471" endtime="20201030 15:57:32.520"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:32.466" endtime="20201030 15:57:32.522"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:32.539" endtime="20201030 15:57:32.892"></status>
</kw>
<msg timestamp="20201030 15:57:32.900" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042182319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042267611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:32.535" endtime="20201030 15:57:32.900"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:32.919" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042182319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042267611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:32.902" endtime="20201030 15:57:32.920"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:32.922" endtime="20201030 15:57:32.926"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:32.528" endtime="20201030 15:57:32.928"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:32.523" endtime="20201030 15:57:32.929"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:32.941" level="INFO">${RESULT} = [{'diff': 8.529199999999376e-05}, {'diff': 8.488899999999772e-05}, {'diff': 8.465300000000398e-05}, {'diff': 8.455599999999952e-05}, {'diff': 8.527700000000166e-05}, {'diff': 8.540299999999779e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:57:32.931" endtime="20201030 15:57:32.941"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:32.957" level="INFO">${ACCURACY} = {'diff': [8.529199999999376e-05, 8.488899999999772e-05, 8.465300000000398e-05, 8.455599999999952e-05, 8.527700000000166e-05, 8.540299999999779e-05, 8.504100000000098e-05, 8.500000000000174e-05, 8.5333...</msg>
<status status="PASS" starttime="20201030 15:57:32.943" endtime="20201030 15:57:32.957"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:32.968" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201030 15:57:32.966" endtime="20201030 15:57:32.969"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:32.974" level="INFO">VALUE: [8.529199999999376e-05, 8.488899999999772e-05, 8.465300000000398e-05, 8.455599999999952e-05, 8.527700000000166e-05, 8.540299999999779e-05, 8.504100000000098e-05, 8.500000000000174e-05, 8.533399999999941e-05, 8.490199999999781e-05, 8.525000000000199e-05, 8.477700000000116e-05, 8.472199999999541e-05, 8.522200000000285e-05, 8.54170000000043e-05, 8.455599999999952e-05, 8.509699999999926e-05, 8.509699999999926e-05, 8.49999999999948e-05, 8.520900000000275e-05, 8.488900000000466e-05, 8.53469999999995e-05, 8.455500000000005e-05, 8.466600000000407e-05, 8.540200000000525e-05, 8.49999999999948e-05, 8.523600000000242e-05, 8.47920000000002e-05, 8.488899999999772e-05, 8.469500000000268e-05, 8.477800000000063e-05, 8.488900000000466e-05, 8.533399999999941e-05, 8.502800000000088e-05, 8.501300000000184e-05, 8.475000000000149e-05, 8.465199999999756e-05, 8.508299999999969e-05, 8.505600000000002e-05, 8.487499999999815e-05, 8.49720000000026e-05, 8.545800000000353e-05, 8.544500000000343e-05, 8.522200000000285e-05, 8.490300000000423e-05, 8.5459000000003e-05, 8.477800000000063e-05, 8.466599999999713e-05, 8.548599999999573e-05, 8.551400000000181e-05]</msg>
<status status="PASS" starttime="20201030 15:57:32.971" endtime="20201030 15:57:32.982"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:32.959" endtime="20201030 15:57:32.984"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:32.994" endtime="20201030 15:57:33.016"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:32.989" endtime="20201030 15:57:33.018"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:32.987" endtime="20201030 15:57:33.019"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:32.461" endtime="20201030 15:57:33.020"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:32.460" endtime="20201030 15:57:33.020"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:33.046" endtime="20201030 15:57:33.069"></status>
</kw>
<msg timestamp="20201030 15:57:33.070" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:33.042" endtime="20201030 15:57:33.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:33.077" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:33.072" endtime="20201030 15:57:33.078"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:33.079" endtime="20201030 15:57:33.083"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:33.033" endtime="20201030 15:57:33.085"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:33.027" endtime="20201030 15:57:33.087"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:33.105" endtime="20201030 15:57:33.475"></status>
</kw>
<msg timestamp="20201030 15:57:33.482" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045538375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045624444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:33.101" endtime="20201030 15:57:33.483"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:33.502" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045538375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045624444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:33.485" endtime="20201030 15:57:33.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:33.505" endtime="20201030 15:57:33.509"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:33.093" endtime="20201030 15:57:33.510"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:33.088" endtime="20201030 15:57:33.512"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:33.525" level="INFO">${RESULT} = [{'diff': 8.606900000000112e-05}, {'diff': 8.630499999999486e-05}, {'diff': 8.579100000000173e-05}, {'diff': 8.570799999999684e-05}, {'diff': 8.576400000000206e-05}, {'diff': 8.591699999999786e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:57:33.515" endtime="20201030 15:57:33.526"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:33.537" level="INFO">${ACCURACY} = {'diff': [8.606900000000112e-05, 8.630499999999486e-05, 8.579100000000173e-05, 8.570799999999684e-05, 8.576400000000206e-05, 8.591699999999786e-05, 8.56669999999976e-05, 8.63470000000005e-05, 8.576400...</msg>
<status status="PASS" starttime="20201030 15:57:33.528" endtime="20201030 15:57:33.538"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:33.548" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201030 15:57:33.546" endtime="20201030 15:57:33.549"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:33.553" level="INFO">VALUE: [8.606900000000112e-05, 8.630499999999486e-05, 8.579100000000173e-05, 8.570799999999684e-05, 8.576400000000206e-05, 8.591699999999786e-05, 8.56669999999976e-05, 8.63470000000005e-05, 8.576400000000206e-05, 8.555600000000052e-05, 8.64449999999975e-05, 8.576400000000206e-05, 8.565299999999804e-05, 8.576299999999565e-05, 8.648599999999673e-05, 8.598600000000317e-05, 8.594400000000446e-05, 8.555500000000105e-05, 8.637499999999965e-05, 8.645899999999707e-05, 8.554200000000095e-05, 8.555600000000052e-05, 8.565299999999804e-05, 8.557000000000009e-05, 8.61249999999994e-05, 8.576300000000259e-05, 8.609699999999332e-05, 8.588900000000566e-05, 8.600000000000274e-05, 8.598600000000317e-05, 8.633300000000094e-05, 8.59999999999958e-05, 8.565299999999804e-05, 8.626399999999562e-05, 8.577800000000163e-05, 8.563899999999847e-05, 8.632000000000084e-05, 8.579100000000173e-05, 8.59999999999958e-05, 8.577700000000216e-05, 8.611100000000677e-05, 8.61249999999994e-05, 8.554200000000095e-05, 8.609700000000026e-05, 8.588899999999872e-05, 8.623600000000342e-05, 8.583300000000044e-05, 8.577800000000163e-05, 8.5847e-05, 8.56669999999976e-05]</msg>
<status status="PASS" starttime="20201030 15:57:33.550" endtime="20201030 15:57:33.555"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:33.539" endtime="20201030 15:57:33.557"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:33.566" endtime="20201030 15:57:33.588"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:33.562" endtime="20201030 15:57:33.590"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:33.559" endtime="20201030 15:57:33.590"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:33.022" endtime="20201030 15:57:33.591"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:33.021" endtime="20201030 15:57:33.591"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:33.614" endtime="20201030 15:57:33.637"></status>
</kw>
<msg timestamp="20201030 15:57:33.638" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:33.611" endtime="20201030 15:57:33.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:33.644" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:33.640" endtime="20201030 15:57:33.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:33.646" endtime="20201030 15:57:33.651"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:33.603" endtime="20201030 15:57:33.653"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:33.598" endtime="20201030 15:57:33.654"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:33.671" endtime="20201030 15:57:34.026"></status>
</kw>
<msg timestamp="20201030 15:57:34.034" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041935292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042022153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:33.668" endtime="20201030 15:57:34.034"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:34.053" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041935292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042022153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:34.036" endtime="20201030 15:57:34.054"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:34.056" endtime="20201030 15:57:34.060"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:33.660" endtime="20201030 15:57:34.062"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:33.656" endtime="20201030 15:57:34.063"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:34.075" level="INFO">${RESULT} = [{'diff': 8.686100000000058e-05}, {'diff': 8.723699999999696e-05}, {'diff': 8.687500000000015e-05}, {'diff': 8.665299999999904e-05}, {'diff': 8.654100000000248e-05}, {'diff': 8.677699999999622e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:57:34.065" endtime="20201030 15:57:34.075"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:34.085" level="INFO">${ACCURACY} = {'diff': [8.686100000000058e-05, 8.723699999999696e-05, 8.687500000000015e-05, 8.665299999999904e-05, 8.654100000000248e-05, 8.677699999999622e-05, 8.679199999999526e-05, 8.672199999999741e-05, 8.7318...</msg>
<status status="PASS" starttime="20201030 15:57:34.077" endtime="20201030 15:57:34.086"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:34.098" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201030 15:57:34.095" endtime="20201030 15:57:34.099"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:34.104" level="INFO">VALUE: [8.686100000000058e-05, 8.723699999999696e-05, 8.687500000000015e-05, 8.665299999999904e-05, 8.654100000000248e-05, 8.677699999999622e-05, 8.679199999999526e-05, 8.672199999999741e-05, 8.731899999999543e-05, 8.709700000000126e-05, 8.676399999999612e-05, 8.713899999999997e-05, 8.711100000000083e-05, 8.651400000000281e-05, 8.69999999999968e-05, 8.743100000000587e-05, 8.654200000000195e-05, 8.744399999999902e-05, 8.731900000000237e-05, 8.666599999999913e-05, 8.737500000000065e-05, 8.722200000000485e-05, 8.67920000000022e-05, 8.666700000000555e-05, 8.676400000000306e-05, 8.700000000000374e-05, 8.700000000000374e-05, 8.675000000000349e-05, 8.709800000000073e-05, 8.670799999999784e-05, 8.681900000000187e-05, 8.708300000000169e-05, 8.688899999999972e-05, 8.73050000000028e-05, 8.744399999999902e-05, 8.654200000000195e-05, 8.683300000000144e-05, 8.744500000000544e-05, 8.698599999999723e-05, 8.695899999999757e-05, 8.665199999999956e-05, 8.702699999999647e-05, 8.665199999999956e-05, 8.706900000000212e-05, 8.711100000000083e-05, 8.722199999999791e-05, 8.731900000000237e-05, 8.745799999999859e-05, 8.723600000000442e-05, 8.704100000000298e-05]</msg>
<status status="PASS" starttime="20201030 15:57:34.101" endtime="20201030 15:57:34.106"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:34.087" endtime="20201030 15:57:34.108"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:34.118" endtime="20201030 15:57:34.140"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:34.113" endtime="20201030 15:57:34.142"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:34.110" endtime="20201030 15:57:34.143"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:33.593" endtime="20201030 15:57:34.143"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:33.592" endtime="20201030 15:57:34.144"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:34.168" endtime="20201030 15:57:34.192"></status>
</kw>
<msg timestamp="20201030 15:57:34.193" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:34.164" endtime="20201030 15:57:34.194"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:34.200" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:34.196" endtime="20201030 15:57:34.201"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:34.203" endtime="20201030 15:57:34.207"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:34.157" endtime="20201030 15:57:34.208"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:34.151" endtime="20201030 15:57:34.210"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:34.228" endtime="20201030 15:57:34.599"></status>
</kw>
<msg timestamp="20201030 15:57:34.606" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045805986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045894306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:34.224" endtime="20201030 15:57:34.607"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:34.626" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045805986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045894306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:34.609" endtime="20201030 15:57:34.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:34.628" endtime="20201030 15:57:34.632"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:34.217" endtime="20201030 15:57:34.634"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:34.211" endtime="20201030 15:57:34.636"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:34.647" level="INFO">${RESULT} = [{'diff': 8.832000000000284e-05}, {'diff': 8.756900000000262e-05}, {'diff': 8.819499999999925e-05}, {'diff': 8.811100000000183e-05}, {'diff': 8.790300000000029e-05}, {'diff': 8.756900000000262e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:57:34.637" endtime="20201030 15:57:34.647"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:34.657" level="INFO">${ACCURACY} = {'diff': [8.832000000000284e-05, 8.756900000000262e-05, 8.819499999999925e-05, 8.811100000000183e-05, 8.790300000000029e-05, 8.756900000000262e-05, 8.819399999999977e-05, 8.822199999999891e-05, 8.8097...</msg>
<status status="PASS" starttime="20201030 15:57:34.649" endtime="20201030 15:57:34.658"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:34.669" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201030 15:57:34.666" endtime="20201030 15:57:34.670"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:34.675" level="INFO">VALUE: [8.832000000000284e-05, 8.756900000000262e-05, 8.819499999999925e-05, 8.811100000000183e-05, 8.790300000000029e-05, 8.756900000000262e-05, 8.819399999999977e-05, 8.822199999999891e-05, 8.809700000000226e-05, 8.797199999999866e-05, 8.787499999999421e-05, 8.76669999999996e-05, 8.79999999999978e-05, 8.754199999999601e-05, 8.81120000000013e-05, 8.801399999999737e-05, 8.788900000000072e-05, 8.825000000000499e-05, 8.843000000000045e-05, 8.756899999999568e-05, 8.777800000000363e-05, 8.79999999999978e-05, 8.84449999999995e-05, 8.754199999999601e-05, 8.843099999999993e-05, 8.751400000000381e-05, 8.76799999999997e-05, 8.763800000000099e-05, 8.844400000000002e-05, 8.786100000000158e-05, 8.79999999999978e-05, 8.844400000000002e-05, 8.843000000000045e-05, 8.845799999999959e-05, 8.811099999999489e-05, 8.772200000000535e-05, 8.754199999999601e-05, 8.788900000000072e-05, 8.822299999999839e-05, 8.83199999999959e-05, 8.780599999999583e-05, 8.766600000000013e-05, 8.773599999999798e-05, 8.765300000000004e-05, 8.790300000000029e-05, 8.761100000000133e-05, 8.811099999999489e-05, 8.808300000000269e-05, 8.833399999999547e-05, 8.834800000000198e-05]</msg>
<status status="PASS" starttime="20201030 15:57:34.671" endtime="20201030 15:57:34.676"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:34.659" endtime="20201030 15:57:34.678"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:34.690" endtime="20201030 15:57:34.712"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:34.684" endtime="20201030 15:57:34.714"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:34.681" endtime="20201030 15:57:34.715"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:34.146" endtime="20201030 15:57:34.716"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:34.145" endtime="20201030 15:57:34.716"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:34.740" endtime="20201030 15:57:34.764"></status>
</kw>
<msg timestamp="20201030 15:57:34.765" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:34.737" endtime="20201030 15:57:34.766"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:34.772" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:34.767" endtime="20201030 15:57:34.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:34.774" endtime="20201030 15:57:34.778"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:34.729" endtime="20201030 15:57:34.780"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:34.723" endtime="20201030 15:57:34.781"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:34.799" endtime="20201030 15:57:35.169"></status>
</kw>
<msg timestamp="20201030 15:57:35.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043922403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044011694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:34.796" endtime="20201030 15:57:35.177"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:35.196" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043922403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044011694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:35.179" endtime="20201030 15:57:35.197"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:35.199" endtime="20201030 15:57:35.203"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:34.788" endtime="20201030 15:57:35.204"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:34.783" endtime="20201030 15:57:35.206"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:35.217" level="INFO">${RESULT} = [{'diff': 8.929099999999829e-05}, {'diff': 8.887500000000215e-05}, {'diff': 8.876399999999812e-05}, {'diff': 8.933300000000394e-05}, {'diff': 8.898599999999923e-05}, {'diff': 8.855599999999658e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:57:35.208" endtime="20201030 15:57:35.218"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:35.229" level="INFO">${ACCURACY} = {'diff': [8.929099999999829e-05, 8.887500000000215e-05, 8.876399999999812e-05, 8.933300000000394e-05, 8.898599999999923e-05, 8.855599999999658e-05, 8.877799999999769e-05, 8.93199999999969e-05, 8.88199...</msg>
<status status="PASS" starttime="20201030 15:57:35.219" endtime="20201030 15:57:35.229"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:35.240" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201030 15:57:35.238" endtime="20201030 15:57:35.241"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:35.246" level="INFO">VALUE: [8.929099999999829e-05, 8.887500000000215e-05, 8.876399999999812e-05, 8.933300000000394e-05, 8.898599999999923e-05, 8.855599999999658e-05, 8.877799999999769e-05, 8.93199999999969e-05, 8.88199999999964e-05, 8.888899999999478e-05, 8.856900000000362e-05, 8.888899999999478e-05, 8.894400000000052e-05, 8.865200000000156e-05, 8.877799999999769e-05, 8.943000000000145e-05, 8.922199999999991e-05, 8.943000000000145e-05, 8.931899999999743e-05, 8.902799999999794e-05, 8.86670000000006e-05, 8.94450000000005e-05, 8.909800000000273e-05, 8.945800000000059e-05, 8.858300000000319e-05, 8.855500000000405e-05, 8.912499999999546e-05, 8.86800000000007e-05, 8.911099999999589e-05, 8.876399999999812e-05, 8.933300000000394e-05, 8.933300000000394e-05, 8.86670000000006e-05, 8.922299999999939e-05, 8.911100000000283e-05, 8.945800000000059e-05, 8.858400000000266e-05, 8.897199999999966e-05, 8.86659999999942e-05, 8.908300000000369e-05, 8.854099999999754e-05, 8.86670000000006e-05, 8.944400000000102e-05, 8.868100000000018e-05, 8.898599999999923e-05, 8.888900000000172e-05, 8.852799999999744e-05, 8.9332999999997e-05, 8.876399999999812e-05, 8.865199999999462e-05]</msg>
<status status="PASS" starttime="20201030 15:57:35.243" endtime="20201030 15:57:35.248"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:35.231" endtime="20201030 15:57:35.250"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:35.260" endtime="20201030 15:57:35.282"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:35.255" endtime="20201030 15:57:35.284"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:35.252" endtime="20201030 15:57:35.285"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:34.718" endtime="20201030 15:57:35.285"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:34.717" endtime="20201030 15:57:35.286"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:35.310" endtime="20201030 15:57:35.333"></status>
</kw>
<msg timestamp="20201030 15:57:35.334" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:35.307" endtime="20201030 15:57:35.334"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:35.341" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:35.337" endtime="20201030 15:57:35.342"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:35.343" endtime="20201030 15:57:35.347"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:35.299" endtime="20201030 15:57:35.349"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:35.293" endtime="20201030 15:57:35.351"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:35.368" endtime="20201030 15:57:35.737"></status>
</kw>
<msg timestamp="20201030 15:57:35.744" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044410472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044500444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:35.365" endtime="20201030 15:57:35.745"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:35.764" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044410472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044500444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:35.747" endtime="20201030 15:57:35.765"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:35.767" endtime="20201030 15:57:35.771"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:35.357" endtime="20201030 15:57:35.772"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:35.352" endtime="20201030 15:57:35.774"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:35.784" level="INFO">${RESULT} = [{'diff': 8.997200000000066e-05}, {'diff': 8.952699999999897e-05}, {'diff': 8.955499999999811e-05}, {'diff': 8.984700000000401e-05}, {'diff': 9.0332999999998e-05}, {'diff': 8.988899999999578e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:57:35.776" endtime="20201030 15:57:35.784"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:35.790" level="INFO">${ACCURACY} = {'diff': [8.997200000000066e-05, 8.952699999999897e-05, 8.955499999999811e-05, 8.984700000000401e-05, 9.0332999999998e-05, 8.988899999999578e-05, 9.026399999999962e-05, 8.997300000000014e-05, 9.045899...</msg>
<status status="PASS" starttime="20201030 15:57:35.785" endtime="20201030 15:57:35.790"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:35.795" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201030 15:57:35.794" endtime="20201030 15:57:35.796"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:35.798" level="INFO">VALUE: [8.997200000000066e-05, 8.952699999999897e-05, 8.955499999999811e-05, 8.984700000000401e-05, 9.0332999999998e-05, 8.988899999999578e-05, 9.026399999999962e-05, 8.997300000000014e-05, 9.045899999999413e-05, 9.019500000000125e-05, 8.988900000000272e-05, 8.955599999999758e-05, 8.955500000000505e-05, 9.025000000000005e-05, 8.963899999999553e-05, 9.034699999999757e-05, 9.045800000000159e-05, 9.009700000000426e-05, 8.990300000000229e-05, 9.0332999999998e-05, 9.033400000000441e-05, 8.986100000000358e-05, 9.034799999999704e-05, 9.033399999999747e-05, 9.001399999999937e-05, 9.006899999999818e-05, 9.036099999999714e-05, 8.970800000000084e-05, 9.022200000000091e-05, 8.99999999999998e-05, 8.96529999999951e-05, 8.979199999999826e-05, 8.987500000000315e-05, 9.019500000000125e-05, 9.011099999999689e-05, 9.043000000000245e-05, 8.988900000000272e-05, 8.948599999999973e-05, 8.966600000000213e-05, 8.980599999999783e-05, 9.011100000000383e-05, 8.976399999999912e-05, 8.986100000000358e-05, 9.001399999999937e-05, 9.033400000000441e-05, 9.019500000000125e-05, 8.99999999999998e-05, 9.009699999999732e-05, 9.045800000000159e-05, 9.020800000000134e-05]</msg>
<status status="PASS" starttime="20201030 15:57:35.796" endtime="20201030 15:57:35.799"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:35.791" endtime="20201030 15:57:35.800"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:35.804" endtime="20201030 15:57:35.824"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:35.802" endtime="20201030 15:57:35.825"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:35.801" endtime="20201030 15:57:35.825"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:35.288" endtime="20201030 15:57:35.825"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:35.287" endtime="20201030 15:57:35.825"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:35.837" endtime="20201030 15:57:35.856"></status>
</kw>
<msg timestamp="20201030 15:57:35.857" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:35.835" endtime="20201030 15:57:35.857"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:35.860" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:35.858" endtime="20201030 15:57:35.860"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:35.861" endtime="20201030 15:57:35.863"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:35.831" endtime="20201030 15:57:35.863"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:35.829" endtime="20201030 15:57:35.864"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:35.872" endtime="20201030 15:57:36.160"></status>
</kw>
<msg timestamp="20201030 15:57:36.163" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02524575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025336819, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:57:35.871" endtime="20201030 15:57:36.164"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:36.172" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02524575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025336819, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:57:36.165" endtime="20201030 15:57:36.172"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:36.173" endtime="20201030 15:57:36.175"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:35.867" endtime="20201030 15:57:36.176"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:35.865" endtime="20201030 15:57:36.177"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:36.182" level="INFO">${RESULT} = [{'diff': 9.106899999999918e-05}, {'diff': 9.087500000000068e-05}, {'diff': 9.109699999999832e-05}, {'diff': 9.10000000000008e-05}, {'diff': 9.112499999999746e-05}, {'diff': 9.065299999999957e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:57:36.178" endtime="20201030 15:57:36.182"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:36.186" level="INFO">${ACCURACY} = {'diff': [9.106899999999918e-05, 9.087500000000068e-05, 9.109699999999832e-05, 9.10000000000008e-05, 9.112499999999746e-05, 9.065299999999957e-05, 9.101400000000037e-05, 9.138900000000075e-05, 9.07079...</msg>
<status status="PASS" starttime="20201030 15:57:36.183" endtime="20201030 15:57:36.187"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:36.198" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201030 15:57:36.195" endtime="20201030 15:57:36.198"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:36.203" level="INFO">VALUE: [9.106899999999918e-05, 9.087500000000068e-05, 9.109699999999832e-05, 9.10000000000008e-05, 9.112499999999746e-05, 9.065299999999957e-05, 9.101400000000037e-05, 9.138900000000075e-05, 9.070799999999837e-05, 9.073700000000046e-05, 9.054199999999901e-05, 9.122200000000191e-05, 9.088900000000025e-05, 9.06520000000001e-05, 9.061099999999739e-05, 9.077799999999969e-05, 9.088900000000025e-05, 9.122200000000191e-05, 9.052799999999944e-05, 9.088900000000025e-05, 9.069400000000227e-05, 9.065299999999957e-05, 9.065299999999957e-05, 9.076300000000065e-05, 9.134700000000204e-05, 9.062500000000043e-05, 9.116699999999964e-05, 9.088900000000025e-05, 9.125000000000105e-05, 9.10000000000008e-05, 9.069500000000175e-05, 9.134800000000151e-05, 9.133399999999847e-05, 9.141699999999989e-05, 9.122200000000191e-05, 9.066599999999966e-05, 9.101400000000037e-05, 9.088900000000025e-05, 9.076400000000012e-05, 9.074999999999708e-05, 9.13199999999989e-05, 9.1332999999999e-05, 9.143099999999946e-05, 9.101400000000037e-05, 9.120899999999835e-05, 9.144499999999903e-05, 9.122300000000139e-05, 9.123600000000148e-05, 9.077799999999969e-05, 9.087500000000068e-05]</msg>
<status status="PASS" starttime="20201030 15:57:36.200" endtime="20201030 15:57:36.205"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:36.188" endtime="20201030 15:57:36.207"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:36.217" endtime="20201030 15:57:36.239"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:36.212" endtime="20201030 15:57:36.241"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:36.210" endtime="20201030 15:57:36.242"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:35.826" endtime="20201030 15:57:36.243"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:35.826" endtime="20201030 15:57:36.243"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:36.268" endtime="20201030 15:57:36.292"></status>
</kw>
<msg timestamp="20201030 15:57:36.293" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:36.264" endtime="20201030 15:57:36.294"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:36.300" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:36.296" endtime="20201030 15:57:36.301"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:36.302" endtime="20201030 15:57:36.306"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:36.256" endtime="20201030 15:57:36.308"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:36.250" endtime="20201030 15:57:36.310"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:36.328" endtime="20201030 15:57:36.702"></status>
</kw>
<msg timestamp="20201030 15:57:36.709" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045776264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045868139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:36.324" endtime="20201030 15:57:36.710"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:36.729" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045776264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045868139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:36.712" endtime="20201030 15:57:36.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:36.732" endtime="20201030 15:57:36.736"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:36.316" endtime="20201030 15:57:36.738"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:36.311" endtime="20201030 15:57:36.739"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:36.750" level="INFO">${RESULT} = [{'diff': 9.187500000000515e-05}, {'diff': 9.198600000000223e-05}, {'diff': 9.245900000000307e-05}, {'diff': 9.205600000000008e-05}, {'diff': 9.156899999999968e-05}, {'diff': 9.212499999999846e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:57:36.741" endtime="20201030 15:57:36.751"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:36.760" level="INFO">${ACCURACY} = {'diff': [9.187500000000515e-05, 9.198600000000223e-05, 9.245900000000307e-05, 9.205600000000008e-05, 9.156899999999968e-05, 9.212499999999846e-05, 9.154100000000054e-05, 9.234699999999957e-05, 9.2278...</msg>
<status status="PASS" starttime="20201030 15:57:36.753" endtime="20201030 15:57:36.761"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:36.772" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201030 15:57:36.770" endtime="20201030 15:57:36.773"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:36.778" level="INFO">VALUE: [9.187500000000515e-05, 9.198600000000223e-05, 9.245900000000307e-05, 9.205600000000008e-05, 9.156899999999968e-05, 9.212499999999846e-05, 9.154100000000054e-05, 9.234699999999957e-05, 9.227800000000119e-05, 9.181899999999993e-05, 9.20000000000018e-05, 9.211099999999889e-05, 9.166699999999667e-05, 9.187499999999821e-05, 9.245900000000307e-05, 9.16670000000036e-05, 9.154200000000001e-05, 9.170900000000232e-05, 9.231900000000043e-05, 9.211099999999889e-05, 9.155500000000011e-05, 9.201399999999443e-05, 9.168100000000318e-05, 9.234799999999904e-05, 9.173600000000198e-05, 9.222200000000291e-05, 9.154200000000001e-05, 9.245899999999613e-05, 9.154200000000001e-05, 9.16800000000037e-05, 9.155500000000011e-05, 9.179100000000079e-05, 9.198600000000223e-05, 9.163900000000447e-05, 9.188899999999778e-05, 9.166699999999667e-05, 9.187499999999821e-05, 9.241699999999742e-05, 9.234799999999904e-05, 9.220900000000282e-05, 9.187499999999821e-05, 9.152800000000044e-05, 9.177700000000122e-05, 9.19859999999953e-05, 9.208299999999975e-05, 9.211099999999889e-05, 9.247199999999622e-05, 9.155599999999958e-05, 9.166699999999667e-05, 9.211099999999889e-05]</msg>
<status status="PASS" starttime="20201030 15:57:36.774" endtime="20201030 15:57:36.780"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:36.762" endtime="20201030 15:57:36.781"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:36.793" endtime="20201030 15:57:36.815"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:36.787" endtime="20201030 15:57:36.817"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:36.784" endtime="20201030 15:57:36.818"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:36.245" endtime="20201030 15:57:36.818"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:36.244" endtime="20201030 15:57:36.819"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:36.845" endtime="20201030 15:57:36.869"></status>
</kw>
<msg timestamp="20201030 15:57:36.870" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:36.842" endtime="20201030 15:57:36.871"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:36.877" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:36.873" endtime="20201030 15:57:36.878"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:36.879" endtime="20201030 15:57:36.883"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:36.834" endtime="20201030 15:57:36.885"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:36.827" endtime="20201030 15:57:36.887"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:36.904" endtime="20201030 15:57:37.273"></status>
</kw>
<msg timestamp="20201030 15:57:37.281" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046318694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046412208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:36.901" endtime="20201030 15:57:37.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:37.300" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046318694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046412208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:37.283" endtime="20201030 15:57:37.301"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:37.303" endtime="20201030 15:57:37.307"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:36.893" endtime="20201030 15:57:37.309"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:36.888" endtime="20201030 15:57:37.310"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:37.321" level="INFO">${RESULT} = [{'diff': 9.351400000000287e-05}, {'diff': 9.255500000000111e-05}, {'diff': 9.323599999999654e-05}, {'diff': 9.345800000000459e-05}, {'diff': 9.311099999999989e-05}, {'diff': 9.322200000000391e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:57:37.312" endtime="20201030 15:57:37.322"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:37.333" level="INFO">${ACCURACY} = {'diff': [9.351400000000287e-05, 9.255500000000111e-05, 9.323599999999654e-05, 9.345800000000459e-05, 9.311099999999989e-05, 9.322200000000391e-05, 9.33200000000009e-05, 9.312499999999946e-05, 9.26529...</msg>
<status status="PASS" starttime="20201030 15:57:37.324" endtime="20201030 15:57:37.334"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:37.345" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201030 15:57:37.342" endtime="20201030 15:57:37.346"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:37.351" level="INFO">VALUE: [9.351400000000287e-05, 9.255500000000111e-05, 9.323599999999654e-05, 9.345800000000459e-05, 9.311099999999989e-05, 9.322200000000391e-05, 9.33200000000009e-05, 9.312499999999946e-05, 9.26529999999981e-05, 9.252800000000144e-05, 9.320800000000434e-05, 9.255500000000111e-05, 9.288899999999878e-05, 9.326400000000262e-05, 9.287499999999921e-05, 9.286099999999964e-05, 9.258399999999972e-05, 9.320900000000382e-05, 9.257000000000015e-05, 9.312499999999946e-05, 9.30000000000028e-05, 9.3333000000001e-05, 9.276300000000265e-05, 9.331900000000143e-05, 9.26659999999982e-05, 9.330600000000133e-05, 9.308300000000075e-05, 9.32079999999974e-05, 9.323600000000348e-05, 9.266699999999767e-05, 9.28200000000004e-05, 9.272300000000289e-05, 9.266699999999767e-05, 9.341600000000588e-05, 9.265200000000556e-05, 9.29859999999963e-05, 9.322199999999697e-05, 9.3333000000001e-05, 9.255600000000058e-05, 9.341700000000536e-05, 9.279200000000126e-05, 9.286099999999964e-05, 9.33200000000009e-05, 9.261099999999939e-05, 9.256900000000068e-05, 9.305600000000108e-05, 9.3333000000001e-05, 9.265199999999862e-05, 9.290300000000529e-05, 9.319499999999731e-05]</msg>
<status status="PASS" starttime="20201030 15:57:37.347" endtime="20201030 15:57:37.352"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:37.335" endtime="20201030 15:57:37.354"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:37.364" endtime="20201030 15:57:37.386"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:37.359" endtime="20201030 15:57:37.388"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:37.357" endtime="20201030 15:57:37.389"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:36.821" endtime="20201030 15:57:37.389"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:36.820" endtime="20201030 15:57:37.390"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:37.414" endtime="20201030 15:57:37.437"></status>
</kw>
<msg timestamp="20201030 15:57:37.438" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:37.411" endtime="20201030 15:57:37.439"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:37.445" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:37.441" endtime="20201030 15:57:37.446"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:37.448" endtime="20201030 15:57:37.452"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:37.403" endtime="20201030 15:57:37.453"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:37.397" endtime="20201030 15:57:37.455"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:37.473" endtime="20201030 15:57:37.832"></status>
</kw>
<msg timestamp="20201030 15:57:37.840" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043882472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043976458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:37.469" endtime="20201030 15:57:37.840"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:37.860" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043882472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043976458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:37.842" endtime="20201030 15:57:37.861"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:37.862" endtime="20201030 15:57:37.867"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:37.462" endtime="20201030 15:57:37.868"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:37.457" endtime="20201030 15:57:37.870"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:37.881" level="INFO">${RESULT} = [{'diff': 9.398600000000423e-05}, {'diff': 9.374999999999661e-05}, {'diff': 9.36659999999992e-05}, {'diff': 9.444399999999908e-05}, {'diff': 9.426400000000362e-05}, {'diff': 9.401400000000337e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:57:37.872" endtime="20201030 15:57:37.881"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:37.893" level="INFO">${ACCURACY} = {'diff': [9.398600000000423e-05, 9.374999999999661e-05, 9.36659999999992e-05, 9.444399999999908e-05, 9.426400000000362e-05, 9.401400000000337e-05, 9.366699999999867e-05, 9.366699999999867e-05, 9.41390...</msg>
<status status="PASS" starttime="20201030 15:57:37.883" endtime="20201030 15:57:37.893"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:37.904" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201030 15:57:37.902" endtime="20201030 15:57:37.905"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:37.910" level="INFO">VALUE: [9.398600000000423e-05, 9.374999999999661e-05, 9.36659999999992e-05, 9.444399999999908e-05, 9.426400000000362e-05, 9.401400000000337e-05, 9.366699999999867e-05, 9.366699999999867e-05, 9.413900000000003e-05, 9.433400000000147e-05, 9.409800000000079e-05, 9.38479999999936e-05, 9.355500000000211e-05, 9.352700000000297e-05, 9.444399999999908e-05, 9.366700000000561e-05, 9.411100000000089e-05, 9.407000000000165e-05, 9.377799999999575e-05, 9.36529999999991e-05, 9.420899999999788e-05, 9.379100000000279e-05, 9.441699999999942e-05, 9.4333000000002e-05, 9.392999999999901e-05, 9.387499999999327e-05, 9.367999999999876e-05, 9.422200000000491e-05, 9.398600000000423e-05, 9.42079999999984e-05, 9.377800000000269e-05, 9.381900000000193e-05, 9.445899999999813e-05, 9.354199999999507e-05, 9.444399999999908e-05, 9.37079999999979e-05, 9.370800000000484e-05, 9.367999999999876e-05, 9.442999999999951e-05, 9.356899999999474e-05, 9.399999999999686e-05, 9.357000000000115e-05, 9.36529999999991e-05, 9.354200000000201e-05, 9.394399999999858e-05, 9.411200000000036e-05, 9.43200000000019e-05, 9.363800000000005e-05, 9.387500000000021e-05, 9.369399999999833e-05]</msg>
<status status="PASS" starttime="20201030 15:57:37.907" endtime="20201030 15:57:37.912"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:37.895" endtime="20201030 15:57:37.914"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:37.924" endtime="20201030 15:57:37.946"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:37.919" endtime="20201030 15:57:37.948"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:37.916" endtime="20201030 15:57:37.949"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:37.392" endtime="20201030 15:57:37.949"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:37.391" endtime="20201030 15:57:37.950"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:37.974" endtime="20201030 15:57:37.996"></status>
</kw>
<msg timestamp="20201030 15:57:37.997" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:37.970" endtime="20201030 15:57:37.998"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:38.004" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:38.000" endtime="20201030 15:57:38.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:38.007" endtime="20201030 15:57:38.011"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:37.963" endtime="20201030 15:57:38.012"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:37.957" endtime="20201030 15:57:38.014"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:38.032" endtime="20201030 15:57:38.411"></status>
</kw>
<msg timestamp="20201030 15:57:38.418" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043663111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043758278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:38.028" endtime="20201030 15:57:38.419"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:38.438" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043663111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043758278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:38.421" endtime="20201030 15:57:38.439"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:38.440" endtime="20201030 15:57:38.445"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:38.020" endtime="20201030 15:57:38.446"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:38.016" endtime="20201030 15:57:38.448"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:38.459" level="INFO">${RESULT} = [{'diff': 9.516700000000017e-05}, {'diff': 9.476400000000412e-05}, {'diff': 9.477800000000369e-05}, {'diff': 9.533399999999553e-05}, {'diff': 9.534699999999563e-05}, {'diff': 9.530499999999692e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:57:38.450" endtime="20201030 15:57:38.460"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:38.469" level="INFO">${ACCURACY} = {'diff': [9.516700000000017e-05, 9.476400000000412e-05, 9.477800000000369e-05, 9.533399999999553e-05, 9.534699999999563e-05, 9.530499999999692e-05, 9.488900000000078e-05, 9.480500000000336e-05, 9.5304...</msg>
<status status="PASS" starttime="20201030 15:57:38.461" endtime="20201030 15:57:38.470"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:38.481" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201030 15:57:38.478" endtime="20201030 15:57:38.482"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:38.487" level="INFO">VALUE: [9.516700000000017e-05, 9.476400000000412e-05, 9.477800000000369e-05, 9.533399999999553e-05, 9.534699999999563e-05, 9.530499999999692e-05, 9.488900000000078e-05, 9.480500000000336e-05, 9.530499999999692e-05, 9.502800000000394e-05, 9.474999999999761e-05, 9.49859999999983e-05, 9.5333000000003e-05, 9.469399999999933e-05, 9.540299999999391e-05, 9.476400000000412e-05, 9.491600000000044e-05, 9.543000000000051e-05, 9.467999999999976e-05, 9.493099999999949e-05, 9.537500000000171e-05, 9.497199999999872e-05, 9.533299999999606e-05, 9.498600000000523e-05, 9.497199999999872e-05, 9.520899999999888e-05, 9.490300000000035e-05, 9.488900000000078e-05, 9.50000000000048e-05, 9.454100000000354e-05, 9.542999999999358e-05, 9.46660000000002e-05, 9.479199999999632e-05, 9.543000000000051e-05, 9.454200000000301e-05, 9.523599999999854e-05, 9.466699999999967e-05, 9.545900000000607e-05, 9.53200000000029e-05, 9.498699999999777e-05, 9.530499999999692e-05, 9.477699999999728e-05, 9.524999999999811e-05, 9.531899999999649e-05, 9.479200000000326e-05, 9.5333000000003e-05, 9.5333000000003e-05, 9.46530000000001e-05, 9.511100000000189e-05, 9.547199999999922e-05]</msg>
<status status="PASS" starttime="20201030 15:57:38.483" endtime="20201030 15:57:38.488"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:38.471" endtime="20201030 15:57:38.490"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:38.500" endtime="20201030 15:57:38.523"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:38.496" endtime="20201030 15:57:38.524"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:38.493" endtime="20201030 15:57:38.525"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:37.952" endtime="20201030 15:57:38.526"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:37.951" endtime="20201030 15:57:38.526"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:38.551" endtime="20201030 15:57:38.653"></status>
</kw>
<msg timestamp="20201030 15:57:38.654" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:38.547" endtime="20201030 15:57:38.654"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:38.661" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:38.656" endtime="20201030 15:57:38.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:38.663" endtime="20201030 15:57:38.668"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:38.539" endtime="20201030 15:57:38.669"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:38.533" endtime="20201030 15:57:38.671"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:38.688" endtime="20201030 15:57:39.068"></status>
</kw>
<msg timestamp="20201030 15:57:39.076" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.122168833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.122264667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:38.685" endtime="20201030 15:57:39.076"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:39.095" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.122168833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.122264667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:39.078" endtime="20201030 15:57:39.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:39.098" endtime="20201030 15:57:39.102"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:38.677" endtime="20201030 15:57:39.104"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:38.672" endtime="20201030 15:57:39.105"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:39.117" level="INFO">${RESULT} = [{'diff': 9.58339999999891e-05}, {'diff': 9.609800000000279e-05}, {'diff': 9.55689999999898e-05}, {'diff': 9.6333000000004e-05}, {'diff': 9.611100000000983e-05}, {'diff': 9.592999999999408e-05}, {'dif...</msg>
<status status="PASS" starttime="20201030 15:57:39.107" endtime="20201030 15:57:39.117"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:39.127" level="INFO">${ACCURACY} = {'diff': [9.58339999999891e-05, 9.609800000000279e-05, 9.55689999999898e-05, 9.6333000000004e-05, 9.611100000000983e-05, 9.592999999999408e-05, 9.609700000000332e-05, 9.613900000000897e-05, 9.64589999...</msg>
<status status="PASS" starttime="20201030 15:57:39.119" endtime="20201030 15:57:39.127"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:39.139" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201030 15:57:39.137" endtime="20201030 15:57:39.140"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:39.145" level="INFO">VALUE: [9.58339999999891e-05, 9.609800000000279e-05, 9.55689999999898e-05, 9.6333000000004e-05, 9.611100000000983e-05, 9.592999999999408e-05, 9.609700000000332e-05, 9.613900000000897e-05, 9.645899999999319e-05, 9.598600000000623e-05, 9.563900000000847e-05, 9.576400000001206e-05, 9.575000000000555e-05, 9.561099999999545e-05, 9.586099999998876e-05, 9.62080000000004e-05, 9.599999999999886e-05, 9.644400000000108e-05, 9.611100000000983e-05, 9.599999999999886e-05, 9.627799999999131e-05, 9.568100000000024e-05, 9.609800000000279e-05, 9.631999999999696e-05, 9.609700000000332e-05, 9.586100000000264e-05, 9.599999999999886e-05, 9.566700000000761e-05, 9.599999999998499e-05, 9.612500000000246e-05, 9.630599999999045e-05, 9.622200000000691e-05, 9.566699999999373e-05, 9.620900000001376e-05, 9.577799999999081e-05, 9.56530000000011e-05, 9.616700000000811e-05, 9.612500000000246e-05, 9.566599999999426e-05, 9.6333000000004e-05, 9.577799999999081e-05, 9.566700000002148e-05, 9.555599999999664e-05, 9.601400000000537e-05, 9.599999999998499e-05, 9.594499999998618e-05, 9.577799999999081e-05, 9.577799999999081e-05, 9.555499999999717e-05, 9.60970000000172e-05]</msg>
<status status="PASS" starttime="20201030 15:57:39.142" endtime="20201030 15:57:39.147"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:39.129" endtime="20201030 15:57:39.149"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:39.159" endtime="20201030 15:57:39.181"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:39.154" endtime="20201030 15:57:39.183"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:39.151" endtime="20201030 15:57:39.183"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:38.529" endtime="20201030 15:57:39.184"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:38.527" endtime="20201030 15:57:39.184"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:39.209" endtime="20201030 15:57:39.232"></status>
</kw>
<msg timestamp="20201030 15:57:39.234" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:39.205" endtime="20201030 15:57:39.234"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:39.241" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:39.236" endtime="20201030 15:57:39.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:39.243" endtime="20201030 15:57:39.248"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:39.197" endtime="20201030 15:57:39.249"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:39.191" endtime="20201030 15:57:39.251"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:39.269" endtime="20201030 15:57:39.631"></status>
</kw>
<msg timestamp="20201030 15:57:39.639" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044119278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044216708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:39.265" endtime="20201030 15:57:39.639"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:39.659" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044119278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044216708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:39.641" endtime="20201030 15:57:39.660"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:39.661" endtime="20201030 15:57:39.665"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:39.258" endtime="20201030 15:57:39.667"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:39.252" endtime="20201030 15:57:39.669"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:39.680" level="INFO">${RESULT} = [{'diff': 9.743000000000251e-05}, {'diff': 9.677699999999928e-05}, {'diff': 9.690299999999541e-05}, {'diff': 9.711100000000389e-05}, {'diff': 9.73059999999984e-05}, {'diff': 9.686100000000364e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:57:39.670" endtime="20201030 15:57:39.680"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:39.691" level="INFO">${ACCURACY} = {'diff': [9.743000000000251e-05, 9.677699999999928e-05, 9.690299999999541e-05, 9.711100000000389e-05, 9.73059999999984e-05, 9.686100000000364e-05, 9.687499999999627e-05, 9.687499999999627e-05, 9.69730...</msg>
<status status="PASS" starttime="20201030 15:57:39.682" endtime="20201030 15:57:39.692"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:39.703" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201030 15:57:39.701" endtime="20201030 15:57:39.704"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:39.709" level="INFO">VALUE: [9.743000000000251e-05, 9.677699999999928e-05, 9.690299999999541e-05, 9.711100000000389e-05, 9.73059999999984e-05, 9.686100000000364e-05, 9.687499999999627e-05, 9.687499999999627e-05, 9.69730000000002e-05, 9.709800000000379e-05, 9.718000000000226e-05, 9.711099999999695e-05, 9.729200000000576e-05, 9.723600000000054e-05, 9.66530000000021e-05, 9.742999999999558e-05, 9.66809999999943e-05, 9.66530000000021e-05, 9.666700000000167e-05, 9.709799999999685e-05, 9.666700000000167e-05, 9.74860000000008e-05, 9.677699999999928e-05, 9.67080000000009e-05, 9.725000000000011e-05, 9.691699999999498e-05, 9.719400000000183e-05, 9.668100000000124e-05, 9.73200000000049e-05, 9.711099999999695e-05, 9.733399999999753e-05, 9.731999999999796e-05, 9.699999999999986e-05, 9.677699999999928e-05, 9.733299999999806e-05, 9.722199999999404e-05, 9.684700000000407e-05, 9.655599999999764e-05, 9.688900000000278e-05, 9.699999999999986e-05, 9.723600000000054e-05, 9.743099999999505e-05, 9.688900000000278e-05, 9.695800000000115e-05, 9.661099999999645e-05, 9.722200000000097e-05, 9.652699999999903e-05, 9.690299999999541e-05, 9.690300000000235e-05, 9.705599999999814e-05]</msg>
<status status="PASS" starttime="20201030 15:57:39.706" endtime="20201030 15:57:39.711"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:39.693" endtime="20201030 15:57:39.712"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:39.722" endtime="20201030 15:57:39.745"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:39.718" endtime="20201030 15:57:39.747"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:39.715" endtime="20201030 15:57:39.747"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:39.187" endtime="20201030 15:57:39.748"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:39.185" endtime="20201030 15:57:39.748"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:39.773" endtime="20201030 15:57:39.796"></status>
</kw>
<msg timestamp="20201030 15:57:39.798" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:39.769" endtime="20201030 15:57:39.798"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:39.804" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:39.800" endtime="20201030 15:57:39.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:39.807" endtime="20201030 15:57:39.811"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:39.762" endtime="20201030 15:57:39.812"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:39.755" endtime="20201030 15:57:39.814"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:39.832" endtime="20201030 15:57:40.204"></status>
</kw>
<msg timestamp="20201030 15:57:40.212" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044286819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044385, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:57:39.828" endtime="20201030 15:57:40.212"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:40.231" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044286819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044385, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:57:40.214" endtime="20201030 15:57:40.232"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:40.234" endtime="20201030 15:57:40.238"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:39.820" endtime="20201030 15:57:40.240"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:39.815" endtime="20201030 15:57:40.241"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:40.253" level="INFO">${RESULT} = [{'diff': 9.818100000000274e-05}, {'diff': 9.76530000000031e-05}, {'diff': 9.766700000000267e-05}, {'diff': 9.756999999999821e-05}, {'diff': 9.822200000000197e-05}, {'diff': 9.78880000000043e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:57:40.243" endtime="20201030 15:57:40.253"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:40.263" level="INFO">${ACCURACY} = {'diff': [9.818100000000274e-05, 9.76530000000031e-05, 9.766700000000267e-05, 9.756999999999821e-05, 9.822200000000197e-05, 9.78880000000043e-05, 9.75409999999996e-05, 9.833299999999906e-05, 9.8110999...</msg>
<status status="PASS" starttime="20201030 15:57:40.255" endtime="20201030 15:57:40.264"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:40.276" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201030 15:57:40.273" endtime="20201030 15:57:40.277"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:40.282" level="INFO">VALUE: [9.818100000000274e-05, 9.76530000000031e-05, 9.766700000000267e-05, 9.756999999999821e-05, 9.822200000000197e-05, 9.78880000000043e-05, 9.75409999999996e-05, 9.833299999999906e-05, 9.811099999999795e-05, 9.825000000000111e-05, 9.820799999999547e-05, 9.79860000000013e-05, 9.78609999999977e-05, 9.790299999999641e-05, 9.800000000000086e-05, 9.788899999999684e-05, 9.811100000000489e-05, 9.769400000000233e-05, 9.809700000000532e-05, 9.831899999999949e-05, 9.833299999999906e-05, 9.767999999999583e-05, 9.800000000000086e-05, 9.83059999999994e-05, 9.787499999999727e-05, 9.801400000000043e-05, 9.836100000000514e-05, 9.820899999999494e-05, 9.808299999999881e-05, 9.795899999999469e-05, 9.844400000000308e-05, 9.76530000000031e-05, 9.831900000000643e-05, 9.807000000000565e-05, 9.823600000000154e-05, 9.800000000000086e-05, 9.777799999999975e-05, 9.809799999999785e-05, 9.779099999999985e-05, 9.776300000000071e-05, 9.77080000000019e-05, 9.779199999999932e-05, 9.8333000000006e-05, 9.755599999999864e-05, 9.766699999999573e-05, 9.79860000000013e-05, 9.82359999999946e-05, 9.827800000000025e-05, 9.776400000000018e-05, 9.755499999999917e-05]</msg>
<status status="PASS" starttime="20201030 15:57:40.279" endtime="20201030 15:57:40.284"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:40.266" endtime="20201030 15:57:40.285"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:40.295" endtime="20201030 15:57:40.318"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:40.291" endtime="20201030 15:57:40.320"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:40.288" endtime="20201030 15:57:40.320"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:39.751" endtime="20201030 15:57:40.321"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:39.749" endtime="20201030 15:57:40.321"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:40.346" endtime="20201030 15:57:40.369"></status>
</kw>
<msg timestamp="20201030 15:57:40.370" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:40.342" endtime="20201030 15:57:40.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:40.377" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:40.373" endtime="20201030 15:57:40.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:40.380" endtime="20201030 15:57:40.384"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:40.335" endtime="20201030 15:57:40.385"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:40.328" endtime="20201030 15:57:40.387"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:40.405" endtime="20201030 15:57:40.776"></status>
</kw>
<msg timestamp="20201030 15:57:40.783" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044148014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044246708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:40.401" endtime="20201030 15:57:40.784"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:40.803" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044148014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044246708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:40.786" endtime="20201030 15:57:40.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:40.806" endtime="20201030 15:57:40.810"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:40.393" endtime="20201030 15:57:40.812"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:40.388" endtime="20201030 15:57:40.813"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:40.824" level="INFO">${RESULT} = [{'diff': 9.869400000000333e-05}, {'diff': 9.865299999999716e-05}, {'diff': 9.890300000000435e-05}, {'diff': 9.944499999999662e-05}, {'diff': 9.923600000000254e-05}, {'diff': 9.944399999999715e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:57:40.815" endtime="20201030 15:57:40.825"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:40.834" level="INFO">${ACCURACY} = {'diff': [9.869400000000333e-05, 9.865299999999716e-05, 9.890300000000435e-05, 9.944499999999662e-05, 9.923600000000254e-05, 9.944399999999715e-05, 9.888899999999784e-05, 9.876400000000118e-05, 9.9430...</msg>
<status status="PASS" starttime="20201030 15:57:40.827" endtime="20201030 15:57:40.835"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:40.846" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201030 15:57:40.843" endtime="20201030 15:57:40.847"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:40.852" level="INFO">VALUE: [9.869400000000333e-05, 9.865299999999716e-05, 9.890300000000435e-05, 9.944499999999662e-05, 9.923600000000254e-05, 9.944399999999715e-05, 9.888899999999784e-05, 9.876400000000118e-05, 9.943099999999705e-05, 9.877800000000075e-05, 9.92080000000034e-05, 9.855599999999964e-05, 9.855599999999964e-05, 9.909699999999938e-05, 9.913799999999862e-05, 9.894500000000306e-05, 9.851300000000146e-05, 9.88609999999987e-05, 9.888900000000478e-05, 9.930500000000092e-05, 9.900000000000186e-05, 9.890299999999741e-05, 9.933300000000006e-05, 9.856999999999921e-05, 9.93060000000004e-05, 9.886199999999817e-05, 9.888900000000478e-05, 9.881899999999999e-05, 9.856899999999974e-05, 9.930500000000092e-05, 9.855500000000017e-05, 9.947199999999629e-05, 9.906900000000024e-05, 9.945899999999619e-05, 9.911099999999895e-05, 9.922300000000245e-05, 9.902700000000153e-05, 9.90410000000011e-05, 9.933300000000006e-05, 9.858299999999931e-05, 9.88609999999987e-05, 9.897200000000272e-05, 9.902799999999407e-05, 9.888900000000478e-05, 9.876399999999425e-05, 9.941700000000442e-05, 9.901400000000143e-05, 9.866700000000367e-05, 9.855599999999964e-05, 9.945799999999672e-05]</msg>
<status status="PASS" starttime="20201030 15:57:40.848" endtime="20201030 15:57:40.853"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:40.836" endtime="20201030 15:57:40.855"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:40.867" endtime="20201030 15:57:40.889"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:40.861" endtime="20201030 15:57:40.891"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:40.858" endtime="20201030 15:57:40.892"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:40.324" endtime="20201030 15:57:40.892"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:40.322" endtime="20201030 15:57:40.893"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:40.917" endtime="20201030 15:57:40.942"></status>
</kw>
<msg timestamp="20201030 15:57:40.943" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:40.914" endtime="20201030 15:57:40.943"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:40.950" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:40.945" endtime="20201030 15:57:40.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:40.952" endtime="20201030 15:57:40.956"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:40.906" endtime="20201030 15:57:40.958"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:40.900" endtime="20201030 15:57:40.959"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:40.977" endtime="20201030 15:57:41.347"></status>
</kw>
<msg timestamp="20201030 15:57:41.354" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04420525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044305208, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:57:40.974" endtime="20201030 15:57:41.355"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:41.374" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04420525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044305208, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:57:41.357" endtime="20201030 15:57:41.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:41.376" endtime="20201030 15:57:41.380"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:40.966" endtime="20201030 15:57:41.382"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:40.961" endtime="20201030 15:57:41.384"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:41.395" level="INFO">${RESULT} = [{'diff': 9.995799999999722e-05}, {'diff': 0.00010022200000000397}, {'diff': 0.00010043000000000551}, {'diff': 9.987500000000621e-05}, {'diff': 0.00010033400000000053}, {'diff': 0.00010034700000000063...</msg>
<status status="PASS" starttime="20201030 15:57:41.385" endtime="20201030 15:57:41.395"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:41.406" level="INFO">${ACCURACY} = {'diff': [9.995799999999722e-05, 0.00010022200000000397, 0.00010043000000000551, 9.987500000000621e-05, 0.00010033400000000053, 0.00010034700000000063, 9.96530000000051e-05, 9.977800000000175e-05, 9.9...</msg>
<status status="PASS" starttime="20201030 15:57:41.397" endtime="20201030 15:57:41.406"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:41.418" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201030 15:57:41.415" endtime="20201030 15:57:41.418"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:41.423" level="INFO">VALUE: [9.995799999999722e-05, 0.00010022200000000397, 0.00010043000000000551, 9.987500000000621e-05, 0.00010033400000000053, 0.00010034700000000063, 9.96530000000051e-05, 9.977800000000175e-05, 9.95410000000016e-05, 0.00010022199999999704, 0.00010043000000000551, 0.000100028000000002, 9.966599999999826e-05, 0.00010011099999999995, 0.00010011099999999995, 9.976399999999525e-05, 0.00010043099999999805, 9.951400000000193e-05, 9.968100000000424e-05, 9.965299999999816e-05, 0.00010000000000000286, 0.00010020799999999747, 9.955500000000117e-05, 9.977800000000175e-05, 0.00010033300000000106, 0.00010022199999999704, 0.00010037499999999977, 9.99860000000033e-05, 9.988899999999884e-05, 0.00010000000000000286, 0.00010000000000000286, 0.00010042999999999858, 0.0001003610000000002, 9.976400000000218e-05, 0.00010041699999999848, 0.00010042999999999858, 9.965199999999869e-05, 9.995800000000415e-05, 0.00010012499999999952, 9.976400000000218e-05, 9.99860000000033e-05, 9.963899999999859e-05, 0.00010033299999999412, 0.00010033300000000106, 9.98609999999997e-05, 9.983300000000056e-05, 9.965299999999816e-05, 9.988899999999884e-05, 0.00010043099999999805, 0.00010045899999999719]</msg>
<status status="PASS" starttime="20201030 15:57:41.420" endtime="20201030 15:57:41.425"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:41.408" endtime="20201030 15:57:41.427"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:41.437" endtime="20201030 15:57:41.459"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:41.432" endtime="20201030 15:57:41.461"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:41.430" endtime="20201030 15:57:41.462"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:40.895" endtime="20201030 15:57:41.462"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:40.894" endtime="20201030 15:57:41.463"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:41.487" endtime="20201030 15:57:41.510"></status>
</kw>
<msg timestamp="20201030 15:57:41.511" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:41.484" endtime="20201030 15:57:41.512"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:41.518" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:41.514" endtime="20201030 15:57:41.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:41.521" endtime="20201030 15:57:41.525"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:41.476" endtime="20201030 15:57:41.526"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:41.470" endtime="20201030 15:57:41.528"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:41.546" endtime="20201030 15:57:41.916"></status>
</kw>
<msg timestamp="20201030 15:57:41.923" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044006278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044107472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:41.542" endtime="20201030 15:57:41.924"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:41.942" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044006278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044107472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:41.926" endtime="20201030 15:57:41.943"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:41.945" endtime="20201030 15:57:41.949"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:41.534" endtime="20201030 15:57:41.951"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:41.529" endtime="20201030 15:57:41.952"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:41.963" level="INFO">${RESULT} = [{'diff': 0.0001011939999999989}, {'diff': 0.00010084700000000113}, {'diff': 0.00010136099999999426}, {'diff': 0.00010066699999999873}, {'diff': 0.00010144500000000556}, {'diff': 0.0001010969999999944...</msg>
<status status="PASS" starttime="20201030 15:57:41.954" endtime="20201030 15:57:41.964"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:41.975" level="INFO">${ACCURACY} = {'diff': [0.0001011939999999989, 0.00010084700000000113, 0.00010136099999999426, 0.00010066699999999873, 0.00010144500000000556, 0.00010109699999999444, 0.00010108400000000128, 0.00010105500000000267,...</msg>
<status status="PASS" starttime="20201030 15:57:41.966" endtime="20201030 15:57:41.976"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:41.987" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201030 15:57:41.984" endtime="20201030 15:57:41.988"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:41.992" level="INFO">VALUE: [0.0001011939999999989, 0.00010084700000000113, 0.00010136099999999426, 0.00010066699999999873, 0.00010144500000000556, 0.00010109699999999444, 0.00010108400000000128, 0.00010105500000000267, 0.00010090199999999994, 0.00010123600000000454, 0.00010109700000000138, 0.00010142999999999958, 0.00010098599999999736, 0.00010111100000000095, 0.00010054200000000207, 0.00010133400000000153, 0.0001006809999999983, 0.00010092999999999908, 0.00010090199999999994, 0.00010134700000000163, 0.00010108299999999487, 0.0001008060000000019, 0.00010105500000000267, 0.00010076399999999625, 0.00010098599999999736, 0.00010077799999999582, 0.00010058400000000078, 0.00010123699999999708, 0.00010066699999999873, 0.00010141699999999948, 0.00010138800000000087, 0.00010098599999999736, 0.00010054200000000207, 0.00010088899999999984, 0.00010098599999999736, 0.00010087500000000027, 0.00010065299999999916, 0.00010112500000000052, 0.00010066699999999873, 0.0001006939999999984, 0.00010104200000000257, 0.00010120799999999847, 0.00010111100000000095, 0.0001011809999999988, 0.00010151400000000393, 0.00010099999999999693, 0.0001008610000000007, 0.00010050000000000336, 0.00010090299999999941, 0.00010122299999999751]</msg>
<status status="PASS" starttime="20201030 15:57:41.989" endtime="20201030 15:57:41.994"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:41.977" endtime="20201030 15:57:41.996"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:42.006" endtime="20201030 15:57:42.028"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:42.001" endtime="20201030 15:57:42.030"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:41.999" endtime="20201030 15:57:42.031"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:41.465" endtime="20201030 15:57:42.032"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:41.464" endtime="20201030 15:57:42.032"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:42.057" endtime="20201030 15:57:42.079"></status>
</kw>
<msg timestamp="20201030 15:57:42.080" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:42.053" endtime="20201030 15:57:42.081"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:42.087" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:42.083" endtime="20201030 15:57:42.088"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:42.089" endtime="20201030 15:57:42.093"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:42.045" endtime="20201030 15:57:42.095"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:42.039" endtime="20201030 15:57:42.097"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:42.114" endtime="20201030 15:57:42.487"></status>
</kw>
<msg timestamp="20201030 15:57:42.495" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044093653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044195847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:42.111" endtime="20201030 15:57:42.495"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:42.514" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044093653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044195847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:42.497" endtime="20201030 15:57:42.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:42.517" endtime="20201030 15:57:42.521"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:42.103" endtime="20201030 15:57:42.523"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:42.098" endtime="20201030 15:57:42.524"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:42.535" level="INFO">${RESULT} = [{'diff': 0.00010219400000000683}, {'diff': 0.00010220799999999947}, {'diff': 0.00010224999999999818}, {'diff': 0.00010166699999999973}, {'diff': 0.0001023610000000022}, {'diff': 0.0001017919999999963...</msg>
<status status="PASS" starttime="20201030 15:57:42.526" endtime="20201030 15:57:42.536"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:42.545" level="INFO">${ACCURACY} = {'diff': [0.00010219400000000683, 0.00010220799999999947, 0.00010224999999999818, 0.00010166699999999973, 0.0001023610000000022, 0.00010179199999999639, 0.00010188900000000084, 0.00010170799999999897,...</msg>
<status status="PASS" starttime="20201030 15:57:42.537" endtime="20201030 15:57:42.546"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:42.561" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201030 15:57:42.558" endtime="20201030 15:57:42.561"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:42.566" level="INFO">VALUE: [0.00010219400000000683, 0.00010220799999999947, 0.00010224999999999818, 0.00010166699999999973, 0.0001023610000000022, 0.00010179199999999639, 0.00010188900000000084, 0.00010170799999999897, 0.00010220899999999894, 0.00010181899999999605, 0.00010237500000000177, 0.00010177799999999682, 0.00010158300000000231, 0.00010233300000000306, 0.0001018610000000017, 0.00010247299999999876, 0.00010177799999999682, 0.00010199999999999793, 0.00010234799999999517, 0.00010176399999999725, 0.0001019860000000053, 0.00010176299999999777, 0.00010198599999999836, 0.00010222199999999904, 0.00010243000000000058, 0.00010244400000000015, 0.00010161100000000145, 0.00010151400000000393, 0.00010154200000000307, 0.00010167999999999983, 0.00010167999999999983, 0.00010233299999999612, 0.00010154099999999666, 0.00010245799999999972, 0.0001022080000000064, 0.00010187499999999433, 0.00010243100000000005, 0.00010155600000000264, 0.00010172199999999854, 0.0001020139999999975, 0.0001015280000000035, 0.00010165300000000016, 0.00010166600000000026, 0.00010207000000000271, 0.00010187500000000127, 0.00010155500000000317, 0.00010231900000000349, 0.00010245799999999972, 0.00010199999999999793, 0.00010222199999999904]</msg>
<status status="PASS" starttime="20201030 15:57:42.563" endtime="20201030 15:57:42.568"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:42.548" endtime="20201030 15:57:42.570"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:42.580" endtime="20201030 15:57:42.602"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:42.575" endtime="20201030 15:57:42.604"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:42.573" endtime="20201030 15:57:42.605"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:42.034" endtime="20201030 15:57:42.606"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:42.033" endtime="20201030 15:57:42.606"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:42.631" endtime="20201030 15:57:42.655"></status>
</kw>
<msg timestamp="20201030 15:57:42.657" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:42.627" endtime="20201030 15:57:42.657"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:42.663" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:42.659" endtime="20201030 15:57:42.663"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:42.664" endtime="20201030 15:57:42.666"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:42.619" endtime="20201030 15:57:42.667"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:42.613" endtime="20201030 15:57:42.668"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:42.676" endtime="20201030 15:57:42.963"></status>
</kw>
<msg timestamp="20201030 15:57:42.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045841236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045944097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:42.674" endtime="20201030 15:57:42.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:42.986" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045841236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045944097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:42.969" endtime="20201030 15:57:42.987"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:42.989" endtime="20201030 15:57:42.993"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:42.671" endtime="20201030 15:57:42.994"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:42.668" endtime="20201030 15:57:42.996"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:43.007" level="INFO">${RESULT} = [{'diff': 0.0001028610000000027}, {'diff': 0.00010279199999999739}, {'diff': 0.00010317999999999439}, {'diff': 0.00010333299999999712}, {'diff': 0.00010290300000000141}, {'diff': 0.0001026670000000007...</msg>
<status status="PASS" starttime="20201030 15:57:42.998" endtime="20201030 15:57:43.008"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:43.017" level="INFO">${ACCURACY} = {'diff': [0.0001028610000000027, 0.00010279199999999739, 0.00010317999999999439, 0.00010333299999999712, 0.00010290300000000141, 0.00010266700000000073, 0.00010288900000000184, 0.00010288900000000184,...</msg>
<status status="PASS" starttime="20201030 15:57:43.009" endtime="20201030 15:57:43.017"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:43.028" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201030 15:57:43.026" endtime="20201030 15:57:43.029"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:43.034" level="INFO">VALUE: [0.0001028610000000027, 0.00010279199999999739, 0.00010317999999999439, 0.00010333299999999712, 0.00010290300000000141, 0.00010266700000000073, 0.00010288900000000184, 0.00010288900000000184, 0.00010311100000000295, 0.00010344400000000115, 0.00010281999999999653, 0.00010286099999999576, 0.00010333299999999712, 0.00010262500000000202, 0.00010298599999999936, 0.00010337499999999583, 0.00010297199999999979, 0.00010313799999999568, 0.00010266700000000073, 0.00010311100000000295, 0.00010288900000000184, 0.00010286099999999576, 0.00010273600000000604, 0.00010288900000000184, 0.0001031940000000009, 0.00010299999999999893, 0.00010344500000000062, 0.00010266700000000073, 0.00010344500000000062, 0.00010327799999999832, 0.00010309700000000338, 0.0001025689999999968, 0.00010333299999999712, 0.00010277799999999782, 0.00010333300000000406, 0.00010331999999999703, 0.00010288900000000184, 0.00010254200000000407, 0.00010266700000000073, 0.0001033610000000032, 0.00010344400000000115, 0.00010290299999999447, 0.00010336099999999626, 0.00010331900000000449, 0.00010279199999999739, 0.00010277800000000475, 0.00010327699999999884, 0.00010344500000000062, 0.00010266700000000073, 0.0001033889999999954]</msg>
<status status="PASS" starttime="20201030 15:57:43.031" endtime="20201030 15:57:43.036"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:43.019" endtime="20201030 15:57:43.038"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:43.049" endtime="20201030 15:57:43.072"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:43.043" endtime="20201030 15:57:43.074"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:43.040" endtime="20201030 15:57:43.074"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:42.608" endtime="20201030 15:57:43.075"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:42.607" endtime="20201030 15:57:43.076"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:43.100" endtime="20201030 15:57:43.124"></status>
</kw>
<msg timestamp="20201030 15:57:43.125" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:43.096" endtime="20201030 15:57:43.126"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:43.132" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:43.127" endtime="20201030 15:57:43.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:43.134" endtime="20201030 15:57:43.138"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:43.089" endtime="20201030 15:57:43.140"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:43.082" endtime="20201030 15:57:43.141"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:43.159" endtime="20201030 15:57:43.530"></status>
</kw>
<msg timestamp="20201030 15:57:43.537" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044107903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044212319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:43.156" endtime="20201030 15:57:43.538"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:43.556" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044107903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044212319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:43.540" endtime="20201030 15:57:43.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:43.559" endtime="20201030 15:57:43.563"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:43.148" endtime="20201030 15:57:43.565"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:43.143" endtime="20201030 15:57:43.566"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:43.577" level="INFO">${RESULT} = [{'diff': 0.000104416000000003}, {'diff': 0.00010387500000000327}, {'diff': 0.00010376399999999925}, {'diff': 0.0001040139999999995}, {'diff': 0.00010444400000000215}, {'diff': 0.00010355600000000464}...</msg>
<status status="PASS" starttime="20201030 15:57:43.568" endtime="20201030 15:57:43.578"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:43.588" level="INFO">${ACCURACY} = {'diff': [0.000104416000000003, 0.00010387500000000327, 0.00010376399999999925, 0.0001040139999999995, 0.00010444400000000215, 0.00010355600000000464, 0.00010419500000000137, 0.0001038889999999959, 0....</msg>
<status status="PASS" starttime="20201030 15:57:43.579" endtime="20201030 15:57:43.589"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:43.600" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201030 15:57:43.598" endtime="20201030 15:57:43.601"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:43.606" level="INFO">VALUE: [0.000104416000000003, 0.00010387500000000327, 0.00010376399999999925, 0.0001040139999999995, 0.00010444400000000215, 0.00010355600000000464, 0.00010419500000000137, 0.0001038889999999959, 0.00010366700000000173, 0.00010397299999999332, 0.00010398699999999983, 0.00010399999999999993, 0.00010425000000000018, 0.00010408399999999735, 0.00010354199999999814, 0.00010422200000000104, 0.00010369500000000087, 0.00010401400000000643, 0.00010377800000000575, 0.00010388900000000284, 0.00010393100000000155, 0.00010354099999999866, 0.00010374999999999968, 0.00010363900000000259, 0.00010377799999999882, 0.00010411099999999701, 0.00010394400000000165, 0.00010399999999999993, 0.00010422300000000051, 0.00010426399999999975, 0.00010433400000000453, 0.00010413899999999615, 0.00010365200000000269, 0.00010390300000000241, 0.0001042360000000006, 0.00010394400000000165, 0.00010399999999999993, 0.00010355600000000464, 0.00010363900000000259, 0.00010433400000000453, 0.00010412499999999658, 0.00010399999999999993, 0.00010412499999999658, 0.0001042360000000006, 0.00010431900000000549, 0.0001041810000000018, 0.00010390300000000241, 0.0001035559999999977, 0.0001040139999999995, 0.00010422200000000104]</msg>
<status status="PASS" starttime="20201030 15:57:43.603" endtime="20201030 15:57:43.613"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:43.590" endtime="20201030 15:57:43.615"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:43.625" endtime="20201030 15:57:43.648"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:43.621" endtime="20201030 15:57:43.650"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:43.618" endtime="20201030 15:57:43.650"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:43.078" endtime="20201030 15:57:43.651"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:43.077" endtime="20201030 15:57:43.651"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:43.676" endtime="20201030 15:57:43.699"></status>
</kw>
<msg timestamp="20201030 15:57:43.700" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:43.672" endtime="20201030 15:57:43.701"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:43.707" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:43.703" endtime="20201030 15:57:43.708"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:43.709" endtime="20201030 15:57:43.713"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:43.664" endtime="20201030 15:57:43.715"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:43.658" endtime="20201030 15:57:43.717"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:43.735" endtime="20201030 15:57:44.107"></status>
</kw>
<msg timestamp="20201030 15:57:44.114" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044031528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044136292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:43.731" endtime="20201030 15:57:44.114"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:44.133" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044031528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044136292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:44.116" endtime="20201030 15:57:44.134"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:44.136" endtime="20201030 15:57:44.140"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:43.723" endtime="20201030 15:57:44.142"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:43.718" endtime="20201030 15:57:44.143"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:44.154" level="INFO">${RESULT} = [{'diff': 0.00010476400000000025}, {'diff': 0.00010544500000000262}, {'diff': 0.00010545799999999578}, {'diff': 0.00010477700000000034}, {'diff': 0.00010487499999999733}, {'diff': 0.000105458000000002...</msg>
<status status="PASS" starttime="20201030 15:57:44.145" endtime="20201030 15:57:44.154"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:44.169" level="INFO">${ACCURACY} = {'diff': [0.00010476400000000025, 0.00010544500000000262, 0.00010545799999999578, 0.00010477700000000034, 0.00010487499999999733, 0.00010545800000000272, 0.00010545799999999578, 0.00010502800000000007...</msg>
<status status="PASS" starttime="20201030 15:57:44.156" endtime="20201030 15:57:44.170"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:44.181" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201030 15:57:44.179" endtime="20201030 15:57:44.182"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:44.187" level="INFO">VALUE: [0.00010476400000000025, 0.00010544500000000262, 0.00010545799999999578, 0.00010477700000000034, 0.00010487499999999733, 0.00010545800000000272, 0.00010545799999999578, 0.00010502800000000007, 0.0001046810000000023, 0.00010454199999999914, 0.00010477799999999982, 0.00010476400000000025, 0.0001046810000000023, 0.00010479099999999991, 0.00010543000000000358, 0.00010466600000000326, 0.00010531899999999955, 0.00010495800000000222, 0.00010509699999999844, 0.000104514, 0.00010544499999999568, 0.00010522300000000151, 0.00010490300000000341, 0.0001048889999999969, 0.00010511100000000495, 0.00010547199999999535, 0.00010487499999999733, 0.00010534699999999869, 0.00010533299999999912, 0.0001053610000000052, 0.0001052360000000016, 0.00010454199999999914, 0.00010448600000000086, 0.00010461100000000445, 0.00010520800000000247, 0.00010452700000000009, 0.00010520800000000247, 0.00010511099999999801, 0.0001052360000000016, 0.00010477799999999982, 0.00010527800000000032, 0.00010492999999999614, 0.00010477799999999982, 0.00010477799999999982, 0.00010470800000000197, 0.00010461100000000445, 0.00010511099999999801, 0.00010500000000000093, 0.00010476400000000025, 0.00010470800000000197]</msg>
<status status="PASS" starttime="20201030 15:57:44.184" endtime="20201030 15:57:44.188"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:44.171" endtime="20201030 15:57:44.190"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:44.200" endtime="20201030 15:57:44.223"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:44.196" endtime="20201030 15:57:44.224"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:44.193" endtime="20201030 15:57:44.225"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:43.654" endtime="20201030 15:57:44.226"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:43.652" endtime="20201030 15:57:44.226"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:44.250" endtime="20201030 15:57:44.274"></status>
</kw>
<msg timestamp="20201030 15:57:44.275" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:44.247" endtime="20201030 15:57:44.276"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:44.282" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:44.277" endtime="20201030 15:57:44.282"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:44.284" endtime="20201030 15:57:44.288"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:44.239" endtime="20201030 15:57:44.290"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:44.233" endtime="20201030 15:57:44.291"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:44.309" endtime="20201030 15:57:44.674"></status>
</kw>
<msg timestamp="20201030 15:57:44.682" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043740806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043846889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:44.306" endtime="20201030 15:57:44.683"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:44.701" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043740806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043846889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:44.685" endtime="20201030 15:57:44.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:44.704" endtime="20201030 15:57:44.708"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:44.298" endtime="20201030 15:57:44.710"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:44.293" endtime="20201030 15:57:44.711"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:44.722" level="INFO">${RESULT} = [{'diff': 0.00010608299999999987}, {'diff': 0.00010580599999999996}, {'diff': 0.000105514000000001}, {'diff': 0.00010554200000000014}, {'diff': 0.00010555500000000023}, {'diff': 0.00010555500000000023...</msg>
<status status="PASS" starttime="20201030 15:57:44.713" endtime="20201030 15:57:44.723"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:44.732" level="INFO">${ACCURACY} = {'diff': [0.00010608299999999987, 0.00010580599999999996, 0.000105514000000001, 0.00010554200000000014, 0.00010555500000000023, 0.00010555500000000023, 0.00010554099999999372, 0.00010598600000000236, ...</msg>
<status status="PASS" starttime="20201030 15:57:44.724" endtime="20201030 15:57:44.732"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:44.743" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201030 15:57:44.741" endtime="20201030 15:57:44.744"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:44.749" level="INFO">VALUE: [0.00010608299999999987, 0.00010580599999999996, 0.000105514000000001, 0.00010554200000000014, 0.00010555500000000023, 0.00010555500000000023, 0.00010554099999999372, 0.00010598600000000236, 0.00010566699999999679, 0.00010576400000000125, 0.0001060140000000015, 0.00010632000000000003, 0.00010577799999999388, 0.00010554200000000014, 0.00010554100000000066, 0.00010600000000000193, 0.00010634699999999969, 0.00010565299999999722, 0.00010633299999999318, 0.00010554200000000014, 0.0001055559999999997, 0.00010644500000000362, 0.00010558300000000631, 0.00010604200000000064, 0.00010561099999999851, 0.0001062219999999961, 0.00010634699999999969, 0.00010645799999999678, 0.00010634699999999969, 0.00010640299999999797, 0.00010604099999999422, 0.00010576400000000125, 0.00010566700000000373, 0.00010611099999999901, 0.0001055559999999997, 0.00010644399999999721, 0.00010583299999999962, 0.00010644399999999721, 0.00010600000000000193, 0.0001063610000000062, 0.0001055559999999997, 0.00010645899999999625, 0.00010606999999999978, 0.00010600000000000193, 0.00010641700000000448, 0.00010608299999999987, 0.00010600000000000193, 0.00010567999999999689, 0.00010604200000000064, 0.00010634699999999969]</msg>
<status status="PASS" starttime="20201030 15:57:44.746" endtime="20201030 15:57:44.751"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:44.734" endtime="20201030 15:57:44.753"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:44.763" endtime="20201030 15:57:44.785"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:44.758" endtime="20201030 15:57:44.787"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:44.755" endtime="20201030 15:57:44.787"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:44.228" endtime="20201030 15:57:44.788"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:44.227" endtime="20201030 15:57:44.788"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:44.813" endtime="20201030 15:57:44.838"></status>
</kw>
<msg timestamp="20201030 15:57:44.839" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:44.809" endtime="20201030 15:57:44.839"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:44.845" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:44.841" endtime="20201030 15:57:44.846"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:44.848" endtime="20201030 15:57:44.852"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:44.801" endtime="20201030 15:57:44.854"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:44.795" endtime="20201030 15:57:44.855"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:44.873" endtime="20201030 15:57:45.234"></status>
</kw>
<msg timestamp="20201030 15:57:45.242" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045275639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0453825, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:57:44.869" endtime="20201030 15:57:45.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:45.261" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045275639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0453825, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:57:45.244" endtime="20201030 15:57:45.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:45.264" endtime="20201030 15:57:45.268"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:44.862" endtime="20201030 15:57:45.269"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:44.857" endtime="20201030 15:57:45.271"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:45.282" level="INFO">${RESULT} = [{'diff': 0.00010686099999999976}, {'diff': 0.00010666699999999779}, {'diff': 0.00010734800000000017}, {'diff': 0.00010711100000000001}, {'diff': 0.00010740299999999897}, {'diff': 0.000107333000000001...</msg>
<status status="PASS" starttime="20201030 15:57:45.273" endtime="20201030 15:57:45.282"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:45.292" level="INFO">${ACCURACY} = {'diff': [0.00010686099999999976, 0.00010666699999999779, 0.00010734800000000017, 0.00010711100000000001, 0.00010740299999999897, 0.00010733300000000112, 0.00010669399999999746, 0.00010711100000000001...</msg>
<status status="PASS" starttime="20201030 15:57:45.284" endtime="20201030 15:57:45.292"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:45.303" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201030 15:57:45.301" endtime="20201030 15:57:45.304"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:45.309" level="INFO">VALUE: [0.00010686099999999976, 0.00010666699999999779, 0.00010734800000000017, 0.00010711100000000001, 0.00010740299999999897, 0.00010733300000000112, 0.00010669399999999746, 0.00010711100000000001, 0.00010736100000000026, 0.00010663900000000559, 0.00010708300000000087, 0.00010733300000000112, 0.00010733300000000112, 0.00010652800000000157, 0.00010712499999999958, 0.00010699999999999599, 0.00010688799999999943, 0.00010726399999999581, 0.00010711100000000001, 0.00010742999999999864, 0.0001072219999999971, 0.00010705599999999427, 0.00010713900000000609, 0.00010734800000000017, 0.00010711100000000001, 0.00010666599999999832, 0.00010688799999999943, 0.00010720799999999753, 0.00010655500000000123, 0.0001067360000000031, 0.00010666700000000473, 0.00010676400000000225, 0.00010744499999999768, 0.0001071810000000048, 0.00010677799999999488, 0.00010654200000000114, 0.0001065419999999942, 0.00010711100000000001, 0.00010733300000000112, 0.00010712499999999958, 0.00010744399999999821, 0.0001065560000000007, 0.00010657000000000028, 0.00010654200000000114, 0.00010679200000000139, 0.00010743099999999811, 0.00010745799999999778, 0.00010691599999999857, 0.00010744399999999821, 0.00010745799999999778]</msg>
<status status="PASS" starttime="20201030 15:57:45.306" endtime="20201030 15:57:45.311"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:45.294" endtime="20201030 15:57:45.312"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:45.324" endtime="20201030 15:57:45.346"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:45.318" endtime="20201030 15:57:45.348"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:45.315" endtime="20201030 15:57:45.349"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:44.791" endtime="20201030 15:57:45.349"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:44.789" endtime="20201030 15:57:45.350"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:45.374" endtime="20201030 15:57:45.398"></status>
</kw>
<msg timestamp="20201030 15:57:45.399" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:45.371" endtime="20201030 15:57:45.400"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:45.406" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:45.401" endtime="20201030 15:57:45.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:45.408" endtime="20201030 15:57:45.412"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:45.363" endtime="20201030 15:57:45.414"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:45.357" endtime="20201030 15:57:45.416"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:45.435" endtime="20201030 15:57:45.778"></status>
</kw>
<msg timestamp="20201030 15:57:45.785" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043606278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04371425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:57:45.431" endtime="20201030 15:57:45.786"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:45.803" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043606278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04371425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:57:45.788" endtime="20201030 15:57:45.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:45.806" endtime="20201030 15:57:45.809"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:45.423" endtime="20201030 15:57:45.811"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:45.418" endtime="20201030 15:57:45.812"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:45.823" level="INFO">${RESULT} = [{'diff': 0.00010797200000000479}, {'diff': 0.00010811100000000101}, {'diff': 0.00010798599999999742}, {'diff': 0.00010777800000000282}, {'diff': 0.0001076810000000053}, {'diff': 0.0001083340000000016...</msg>
<status status="PASS" starttime="20201030 15:57:45.814" endtime="20201030 15:57:45.823"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:45.833" level="INFO">${ACCURACY} = {'diff': [0.00010797200000000479, 0.00010811100000000101, 0.00010798599999999742, 0.00010777800000000282, 0.0001076810000000053, 0.0001083340000000016, 0.00010844399999999921, 0.00010844399999999921, ...</msg>
<status status="PASS" starttime="20201030 15:57:45.825" endtime="20201030 15:57:45.834"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:45.844" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201030 15:57:45.842" endtime="20201030 15:57:45.845"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:45.849" level="INFO">VALUE: [0.00010797200000000479, 0.00010811100000000101, 0.00010798599999999742, 0.00010777800000000282, 0.0001076810000000053, 0.0001083340000000016, 0.00010844399999999921, 0.00010844399999999921, 0.00010791599999999957, 0.00010790299999999947, 0.0001078889999999999, 0.00010808300000000187, 0.0001075560000000017, 0.0001078889999999999, 0.00010827799999999638, 0.00010766699999999879, 0.00010763800000000018, 0.0001078889999999999, 0.00010840299999999997, 0.00010752799999999563, 0.00010799999999999699, 0.00010765299999999922, 0.00010791699999999904, 0.00010776399999999631, 0.00010811100000000101, 0.00010755599999999477, 0.00010788800000000043, 0.00010784700000000119, 0.00010820799999999853, 0.0001082219999999981, 0.00010765299999999922, 0.0001082360000000046, 0.00010765299999999922, 0.00010779200000000239, 0.00010765299999999922, 0.00010811200000000049, 0.00010811100000000101, 0.00010813800000000068, 0.00010755500000000223, 0.00010748599999999692, 0.00010755500000000223, 0.0001078889999999999, 0.00010754200000000214, 0.00010815200000000025, 0.00010845899999999825, 0.00010768000000000583, 0.00010832000000000203, 0.00010776299999999683, 0.00010831900000000255, 0.00010800000000000393]</msg>
<status status="PASS" starttime="20201030 15:57:45.846" endtime="20201030 15:57:45.851"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:45.835" endtime="20201030 15:57:45.853"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:45.862" endtime="20201030 15:57:45.883"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:45.858" endtime="20201030 15:57:45.885"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:45.855" endtime="20201030 15:57:45.886"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:45.352" endtime="20201030 15:57:45.887"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:45.351" endtime="20201030 15:57:45.887"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:45.909" endtime="20201030 15:57:45.932"></status>
</kw>
<msg timestamp="20201030 15:57:45.934" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:45.906" endtime="20201030 15:57:45.934"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:45.940" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:45.936" endtime="20201030 15:57:45.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:45.942" endtime="20201030 15:57:45.946"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:45.899" endtime="20201030 15:57:45.948"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:45.893" endtime="20201030 15:57:45.949"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:45.965" endtime="20201030 15:57:46.285"></status>
</kw>
<msg timestamp="20201030 15:57:46.289" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040982889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04109175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:57:45.962" endtime="20201030 15:57:46.289"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:46.299" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040982889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04109175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:57:46.290" endtime="20201030 15:57:46.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:46.300" endtime="20201030 15:57:46.302"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:45.955" endtime="20201030 15:57:46.304"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:45.950" endtime="20201030 15:57:46.305"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:46.314" level="INFO">${RESULT} = [{'diff': 0.00010886100000000176}, {'diff': 0.00010879200000000339}, {'diff': 0.00010944499999999968}, {'diff': 0.00010945899999999925}, {'diff': 0.0001087769999999974}, {'diff': 0.0001088890000000009...</msg>
<status status="PASS" starttime="20201030 15:57:46.305" endtime="20201030 15:57:46.315"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:46.325" level="INFO">${ACCURACY} = {'diff': [0.00010886100000000176, 0.00010879200000000339, 0.00010944499999999968, 0.00010945899999999925, 0.0001087769999999974, 0.0001088890000000009, 0.00010866600000000032, 0.0001088890000000009, 0...</msg>
<status status="PASS" starttime="20201030 15:57:46.316" endtime="20201030 15:57:46.326"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:46.336" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201030 15:57:46.334" endtime="20201030 15:57:46.337"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:46.342" level="INFO">VALUE: [0.00010886100000000176, 0.00010879200000000339, 0.00010944499999999968, 0.00010945899999999925, 0.0001087769999999974, 0.0001088890000000009, 0.00010866600000000032, 0.0001088890000000009, 0.00010918000000000039, 0.00010887500000000133, 0.00010865300000000022, 0.00010912499999999464, 0.00010901399999999756, 0.00010881899999999611, 0.00010893099999999961, 0.00010930499999999704, 0.00010866600000000032, 0.00010909700000000244, 0.00010930499999999704, 0.00010866699999999979, 0.00010898599999999842, 0.00010876400000000425, 0.00010952799999999763, 0.00010893099999999961, 0.00010931999999999609, 0.00010931900000000355, 0.00010930500000000398, 0.00010866600000000032, 0.0001088340000000021, 0.0001092219999999991, 0.00010888899999999396, 0.00010857000000000228, 0.00010915199999999431, 0.00010855599999999577, 0.00010866699999999979, 0.00010858300000000237, 0.00010869399999999946, 0.00010945799999999978, 0.00010944400000000021, 0.00010854200000000314, 0.00010933300000000312, 0.00010891600000000057, 0.00010931999999999609, 0.00010862500000000108, 0.00010888800000000143, 0.0001092219999999991, 0.00010899999999999799, 0.00010854099999999672, 0.00010909700000000244, 0.00010895899999999875]</msg>
<status status="PASS" starttime="20201030 15:57:46.339" endtime="20201030 15:57:46.343"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:46.327" endtime="20201030 15:57:46.345"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:46.354" endtime="20201030 15:57:46.376"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:46.350" endtime="20201030 15:57:46.377"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:46.347" endtime="20201030 15:57:46.378"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:45.889" endtime="20201030 15:57:46.379"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:45.888" endtime="20201030 15:57:46.379"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:46.404" endtime="20201030 15:57:46.427"></status>
</kw>
<msg timestamp="20201030 15:57:46.428" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:46.401" endtime="20201030 15:57:46.429"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:46.435" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:46.431" endtime="20201030 15:57:46.436"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:46.437" endtime="20201030 15:57:46.441"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:46.393" endtime="20201030 15:57:46.446"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:46.386" endtime="20201030 15:57:46.448"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:46.465" endtime="20201030 15:57:46.810"></status>
</kw>
<msg timestamp="20201030 15:57:46.817" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044116431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044226958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:46.462" endtime="20201030 15:57:46.817"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:46.835" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044116431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044226958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:46.819" endtime="20201030 15:57:46.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:46.838" endtime="20201030 15:57:46.841"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:46.454" endtime="20201030 15:57:46.843"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:46.449" endtime="20201030 15:57:46.845"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:46.855" level="INFO">${RESULT} = [{'diff': 0.00011052699999999915}, {'diff': 0.00011044400000000121}, {'diff': 0.00010998599999999942}, {'diff': 0.00010998599999999942}, {'diff': 0.0001102220000000001}, {'diff': 0.0001102220000000001...</msg>
<status status="PASS" starttime="20201030 15:57:46.846" endtime="20201030 15:57:46.856"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:46.864" level="INFO">${ACCURACY} = {'diff': [0.00011052699999999915, 0.00011044400000000121, 0.00010998599999999942, 0.00010998599999999942, 0.0001102220000000001, 0.0001102220000000001, 0.0001103890000000024, 0.00011026299999999933, 0...</msg>
<status status="PASS" starttime="20201030 15:57:46.857" endtime="20201030 15:57:46.865"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:46.875" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201030 15:57:46.873" endtime="20201030 15:57:46.876"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:46.881" level="INFO">VALUE: [0.00011052699999999915, 0.00011044400000000121, 0.00010998599999999942, 0.00010998599999999942, 0.0001102220000000001, 0.0001102220000000001, 0.0001103890000000024, 0.00011026299999999933, 0.00011022299999999957, 0.00010998699999999889, 0.00010976299999999883, 0.00010955500000000423, 0.00010999999999999899, 0.00011037499999999589, 0.00010965300000000122, 0.00010995800000000028, 0.00010998599999999942, 0.00011009700000000344, 0.00010976400000000525, 0.00010976400000000525, 0.0001102220000000001, 0.0001097769999999984, 0.00011034700000000369, 0.0001095549999999973, 0.00011011100000000301, 0.00010987500000000233, 0.00011043099999999417, 0.00011012499999999564, 0.000110209, 0.00010976399999999831, 0.00011018000000000139, 0.00010966600000000132, 0.00010999999999999899, 0.0001100560000000042, 0.00010968100000000036, 0.0001102220000000001, 0.00011029099999999847, 0.00011012500000000258, 0.00011036099999999632, 0.00010966700000000079, 0.00011033300000000412, 0.00010963899999999471, 0.00011030500000000498, 0.00010977799999999788, 0.0001098890000000019, 0.00011019400000000096, 0.00010962499999999514, 0.00010954200000000414, 0.00010997199999999985, 0.00010987500000000233]</msg>
<status status="PASS" starttime="20201030 15:57:46.878" endtime="20201030 15:57:46.883"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:46.866" endtime="20201030 15:57:46.884"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:46.894" endtime="20201030 15:57:46.916"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:46.889" endtime="20201030 15:57:46.917"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:46.887" endtime="20201030 15:57:46.918"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:46.381" endtime="20201030 15:57:46.919"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:46.380" endtime="20201030 15:57:46.919"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:46.942" endtime="20201030 15:57:46.966"></status>
</kw>
<msg timestamp="20201030 15:57:46.968" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:46.939" endtime="20201030 15:57:46.968"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:46.974" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:46.970" endtime="20201030 15:57:46.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:46.977" endtime="20201030 15:57:46.980"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:46.932" endtime="20201030 15:57:46.982"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:46.926" endtime="20201030 15:57:46.983"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:47.001" endtime="20201030 15:57:47.341"></status>
</kw>
<msg timestamp="20201030 15:57:47.348" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043423333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043534514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:46.997" endtime="20201030 15:57:47.349"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:47.370" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043423333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043534514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:47.351" endtime="20201030 15:57:47.371"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:47.373" endtime="20201030 15:57:47.379"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:46.990" endtime="20201030 15:57:47.381"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:46.985" endtime="20201030 15:57:47.383"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:47.397" level="INFO">${RESULT} = [{'diff': 0.00011118100000000186}, {'diff': 0.000111209000000001}, {'diff': 0.00011077799999999888}, {'diff': 0.00011133399999999766}, {'diff': 0.00011116600000000282}, {'diff': 0.00011111099999999707...</msg>
<status status="PASS" starttime="20201030 15:57:47.385" endtime="20201030 15:57:47.398"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:47.408" level="INFO">${ACCURACY} = {'diff': [0.00011118100000000186, 0.000111209000000001, 0.00011077799999999888, 0.00011133399999999766, 0.00011116600000000282, 0.00011111099999999707, 0.00011133299999999818, 0.00011134700000000469, ...</msg>
<status status="PASS" starttime="20201030 15:57:47.400" endtime="20201030 15:57:47.408"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:47.419" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201030 15:57:47.417" endtime="20201030 15:57:47.420"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:47.424" level="INFO">VALUE: [0.00011118100000000186, 0.000111209000000001, 0.00011077799999999888, 0.00011133399999999766, 0.00011116600000000282, 0.00011111099999999707, 0.00011133299999999818, 0.00011134700000000469, 0.00011143000000000264, 0.00011087500000000333, 0.00011063900000000265, 0.0001108890000000029, 0.00011144500000000168, 0.00011143099999999517, 0.00011111100000000401, 0.00011079099999999897, 0.00011066600000000232, 0.00011147200000000135, 0.0001112220000000011, 0.00011144500000000168, 0.00011076399999999931, 0.00011144499999999474, 0.00011144500000000168, 0.00011080499999999854, 0.00011065199999999581, 0.00011145799999999484, 0.0001105549999999983, 0.00011120800000000153, 0.00011076399999999931, 0.00011111099999999707, 0.00011144499999999474, 0.00011118100000000186, 0.00011145799999999484, 0.00011133299999999818, 0.000110902000000003, 0.00011133299999999818, 0.00011134699999999775, 0.00011133299999999818, 0.00011134699999999775, 0.00011066700000000179, 0.0001105419999999982, 0.00011144500000000168, 0.00011132000000000503, 0.00011143100000000211, 0.00011111099999999707, 0.00011109700000000444, 0.00011133299999999818, 0.00011077799999999888, 0.00011112500000000358, 0.00011134700000000469]</msg>
<status status="PASS" starttime="20201030 15:57:47.421" endtime="20201030 15:57:47.426"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:47.410" endtime="20201030 15:57:47.427"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:47.438" endtime="20201030 15:57:47.460"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:47.432" endtime="20201030 15:57:47.462"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:47.430" endtime="20201030 15:57:47.462"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:46.921" endtime="20201030 15:57:47.463"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:46.920" endtime="20201030 15:57:47.463"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:47.487" endtime="20201030 15:57:47.511"></status>
</kw>
<msg timestamp="20201030 15:57:47.512" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:47.483" endtime="20201030 15:57:47.512"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:47.518" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:47.514" endtime="20201030 15:57:47.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:47.521" endtime="20201030 15:57:47.524"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:47.476" endtime="20201030 15:57:47.526"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:47.470" endtime="20201030 15:57:47.527"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:47.544" endtime="20201030 15:57:47.879"></status>
</kw>
<msg timestamp="20201030 15:57:47.886" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042490069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042602097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:47.541" endtime="20201030 15:57:47.886"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:47.904" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042490069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042602097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:47.888" endtime="20201030 15:57:47.905"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:47.906" endtime="20201030 15:57:47.910"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:47.533" endtime="20201030 15:57:47.912"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:47.529" endtime="20201030 15:57:47.913"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:47.923" level="INFO">${RESULT} = [{'diff': 0.00011202800000000013}, {'diff': 0.00011177799999999988}, {'diff': 0.00011209799999999798}, {'diff': 0.0001122220000000021}, {'diff': 0.00011222199999999516}, {'diff': 0.0001118889999999969...</msg>
<status status="PASS" starttime="20201030 15:57:47.915" endtime="20201030 15:57:47.924"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:47.934" level="INFO">${ACCURACY} = {'diff': [0.00011202800000000013, 0.00011177799999999988, 0.00011209799999999798, 0.0001122220000000021, 0.00011222199999999516, 0.00011188899999999696, 0.0001119299999999962, 0.00011211099999999807, ...</msg>
<status status="PASS" starttime="20201030 15:57:47.925" endtime="20201030 15:57:47.934"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:47.945" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201030 15:57:47.942" endtime="20201030 15:57:47.946"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:47.950" level="INFO">VALUE: [0.00011202800000000013, 0.00011177799999999988, 0.00011209799999999798, 0.0001122220000000021, 0.00011222199999999516, 0.00011188899999999696, 0.0001119299999999962, 0.00011211099999999807, 0.00011165300000000322, 0.00011222199999999516, 0.00011245900000000225, 0.00011222299999999463, 0.00011167999999999595, 0.00011156899999999886, 0.00011231899999999961, 0.00011216599999999688, 0.00011165299999999628, 0.0001122220000000021, 0.00011180599999999902, 0.00011155599999999877, 0.0001115560000000057, 0.00011172199999999466, 0.00011194400000000271, 0.00011223599999999473, 0.00011166599999999638, 0.00011179199999999945, 0.00011166699999999585, 0.00011230599999999952, 0.00011155599999999877, 0.00011240299999999703, 0.00011176400000000031, 0.00011152799999999963, 0.000112209000000002, 0.0001117770000000004, 0.00011154099999999972, 0.00011244399999999627, 0.00011163899999999671, 0.00011200000000000099, 0.00011179199999999945, 0.00011215199999999731, 0.00011244500000000268, 0.00011188899999999696, 0.00011200000000000099, 0.00011227699999999396, 0.00011245800000000278, 0.0001120969999999985, 0.00011220800000000253, 0.00011155599999999877, 0.0001120969999999985, 0.00011223600000000167]</msg>
<status status="PASS" starttime="20201030 15:57:47.947" endtime="20201030 15:57:47.952"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:47.935" endtime="20201030 15:57:47.953"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:47.963" endtime="20201030 15:57:47.984"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:47.958" endtime="20201030 15:57:47.986"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:47.956" endtime="20201030 15:57:47.986"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:47.465" endtime="20201030 15:57:47.987"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:47.464" endtime="20201030 15:57:47.988"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:48.011" endtime="20201030 15:57:48.034"></status>
</kw>
<msg timestamp="20201030 15:57:48.035" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:48.007" endtime="20201030 15:57:48.035"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:48.041" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:48.037" endtime="20201030 15:57:48.042"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:48.044" endtime="20201030 15:57:48.047"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:48.000" endtime="20201030 15:57:48.049"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:47.994" endtime="20201030 15:57:48.050"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:48.067" endtime="20201030 15:57:48.400"></status>
</kw>
<msg timestamp="20201030 15:57:48.407" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041387125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041500528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:48.063" endtime="20201030 15:57:48.408"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:48.425" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041387125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041500528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:48.410" endtime="20201030 15:57:48.426"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:48.428" endtime="20201030 15:57:48.431"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:48.056" endtime="20201030 15:57:48.433"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:48.052" endtime="20201030 15:57:48.434"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:48.445" level="INFO">${RESULT} = [{'diff': 0.00011340300000000497}, {'diff': 0.00011300000000000199}, {'diff': 0.00011334699999999975}, {'diff': 0.0001127770000000014}, {'diff': 0.0001130969999999995}, {'diff': 0.00011315299999999778...</msg>
<status status="PASS" starttime="20201030 15:57:48.436" endtime="20201030 15:57:48.445"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:48.456" level="INFO">${ACCURACY} = {'diff': [0.00011340300000000497, 0.00011300000000000199, 0.00011334699999999975, 0.0001127770000000014, 0.0001130969999999995, 0.00011315299999999778, 0.00011304100000000122, 0.00011277800000000088, ...</msg>
<status status="PASS" starttime="20201030 15:57:48.447" endtime="20201030 15:57:48.456"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:48.467" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201030 15:57:48.464" endtime="20201030 15:57:48.467"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:48.472" level="INFO">VALUE: [0.00011340300000000497, 0.00011300000000000199, 0.00011334699999999975, 0.0001127770000000014, 0.0001130969999999995, 0.00011315299999999778, 0.00011304100000000122, 0.00011277800000000088, 0.00011276400000000131, 0.00011275000000000174, 0.00011345900000000325, 0.00011333399999999966, 0.00011284699999999925, 0.00011279200000000045, 0.0001130550000000008, 0.00011256899999999986, 0.00011322199999999616, 0.00011345799999999684, 0.00011277800000000088, 0.00011286099999999882, 0.00011336099999999932, 0.00011344500000000368, 0.00011261100000000551, 0.00011288799999999849, 0.0001128890000000049, 0.00011254100000000072, 0.0001132220000000031, 0.00011279200000000045, 0.00011333300000000018, 0.00011266699999999685, 0.00011329200000000095, 0.00011300000000000199, 0.00011288799999999849, 0.00011334699999999975, 0.00011277800000000088, 0.0001128749999999984, 0.00011252799999999369, 0.0001130550000000008, 0.00011299999999999505, 0.00011262499999999814, 0.00011327800000000138, 0.00011300000000000199, 0.00011311099999999907, 0.00011288899999999796, 0.00011344400000000421, 0.0001125550000000003, 0.00011345799999999684, 0.0001133749999999989, 0.00011279200000000045, 0.00011332000000000009]</msg>
<status status="PASS" starttime="20201030 15:57:48.469" endtime="20201030 15:57:48.473"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:48.458" endtime="20201030 15:57:48.475"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:48.484" endtime="20201030 15:57:48.506"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:48.480" endtime="20201030 15:57:48.508"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:48.478" endtime="20201030 15:57:48.508"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:47.990" endtime="20201030 15:57:48.509"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:47.988" endtime="20201030 15:57:48.509"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:48.533" endtime="20201030 15:57:48.557"></status>
</kw>
<msg timestamp="20201030 15:57:48.558" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:48.530" endtime="20201030 15:57:48.558"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:48.564" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:48.560" endtime="20201030 15:57:48.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:48.566" endtime="20201030 15:57:48.571"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:48.522" endtime="20201030 15:57:48.573"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:48.516" endtime="20201030 15:57:48.575"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:48.593" endtime="20201030 15:57:48.936"></status>
</kw>
<msg timestamp="20201030 15:57:48.943" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042886389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043000931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:48.590" endtime="20201030 15:57:48.943"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:48.961" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042886389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043000931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:48.945" endtime="20201030 15:57:48.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:48.964" endtime="20201030 15:57:48.968"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:48.582" endtime="20201030 15:57:48.969"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:48.577" endtime="20201030 15:57:48.971"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:48.981" level="INFO">${RESULT} = [{'diff': 0.0001145420000000022}, {'diff': 0.00011409799999999998}, {'diff': 0.00011433300000000118}, {'diff': 0.00011429099999999554}, {'diff': 0.00011395800000000428}, {'diff': 0.0001141110000000000...</msg>
<status status="PASS" starttime="20201030 15:57:48.972" endtime="20201030 15:57:48.981"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:48.990" level="INFO">${ACCURACY} = {'diff': [0.0001145420000000022, 0.00011409799999999998, 0.00011433300000000118, 0.00011429099999999554, 0.00011395800000000428, 0.00011411100000000007, 0.00011388899999999896, 0.00011444500000000468,...</msg>
<status status="PASS" starttime="20201030 15:57:48.983" endtime="20201030 15:57:48.991"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:49.002" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201030 15:57:48.999" endtime="20201030 15:57:49.002"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:49.007" level="INFO">VALUE: [0.0001145420000000022, 0.00011409799999999998, 0.00011433300000000118, 0.00011429099999999554, 0.00011395800000000428, 0.00011411100000000007, 0.00011388899999999896, 0.00011444500000000468, 0.00011433400000000066, 0.00011433400000000066, 0.0001144299999999987, 0.00011397200000000385, 0.00011400000000000299, 0.00011354100000000172, 0.0001144299999999987, 0.00011382000000000059, 0.00011411100000000007, 0.00011355600000000077, 0.00011444499999999774, 0.00011412499999999964, 0.00011444500000000468, 0.0001137499999999958, 0.00011398600000000342, 0.00011422199999999716, 0.00011388899999999896, 0.00011400000000000299, 0.00011433300000000118, 0.00011411100000000007, 0.00011386099999999982, 0.00011419499999999749, 0.00011411199999999955, 0.0001135550000000013, 0.00011388899999999896, 0.00011400000000000299, 0.00011352800000000163, 0.00011359799999999948, 0.00011447300000000382, 0.00011388899999999896, 0.00011388899999999896, 0.00011365299999999828, 0.00011355499999999435, 0.00011445799999999784, 0.00011412499999999964, 0.00011419400000000496, 0.00011411100000000007, 0.00011438899999999946, 0.00011432000000000109, 0.00011411100000000007, 0.00011380599999999408, 0.00011390199999999906]</msg>
<status status="PASS" starttime="20201030 15:57:49.004" endtime="20201030 15:57:49.009"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:48.992" endtime="20201030 15:57:49.010"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:49.020" endtime="20201030 15:57:49.042"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:49.016" endtime="20201030 15:57:49.043"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:49.013" endtime="20201030 15:57:49.044"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:48.512" endtime="20201030 15:57:49.045"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:48.510" endtime="20201030 15:57:49.045"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:49.069" endtime="20201030 15:57:49.098"></status>
</kw>
<msg timestamp="20201030 15:57:49.099" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:49.066" endtime="20201030 15:57:49.099"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:49.105" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:49.101" endtime="20201030 15:57:49.106"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:49.108" endtime="20201030 15:57:49.112"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:49.058" endtime="20201030 15:57:49.113"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:49.052" endtime="20201030 15:57:49.115"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:49.132" endtime="20201030 15:57:49.470"></status>
</kw>
<msg timestamp="20201030 15:57:49.477" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048092361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048207444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:49.128" endtime="20201030 15:57:49.478"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:49.495" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048092361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048207444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:49.479" endtime="20201030 15:57:49.496"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:49.498" endtime="20201030 15:57:49.502"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:49.121" endtime="20201030 15:57:49.503"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:49.116" endtime="20201030 15:57:49.505"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:49.515" level="INFO">${RESULT} = [{'diff': 0.00011508300000000193}, {'diff': 0.00011511100000000107}, {'diff': 0.00011545800000000578}, {'diff': 0.00011476399999999637}, {'diff': 0.00011501400000000356}, {'diff': 0.000115445000000005...</msg>
<status status="PASS" starttime="20201030 15:57:49.507" endtime="20201030 15:57:49.516"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:49.525" level="INFO">${ACCURACY} = {'diff': [0.00011508300000000193, 0.00011511100000000107, 0.00011545800000000578, 0.00011476399999999637, 0.00011501400000000356, 0.00011544500000000568, 0.00011547300000000482, 0.00011456900000000186...</msg>
<status status="PASS" starttime="20201030 15:57:49.518" endtime="20201030 15:57:49.525"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:49.536" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201030 15:57:49.533" endtime="20201030 15:57:49.537"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:49.541" level="INFO">VALUE: [0.00011508300000000193, 0.00011511100000000107, 0.00011545800000000578, 0.00011476399999999637, 0.00011501400000000356, 0.00011544500000000568, 0.00011547300000000482, 0.00011456900000000186, 0.00011487499999999345, 0.00011463899999999971, 0.00011520799999999859, 0.00011520799999999859, 0.00011547199999999841, 0.00011493099999999867, 0.00011499999999999705, 0.00011522199999999816, 0.00011513900000000021, 0.00011498599999999748, 0.00011466699999999885, 0.00011488800000000049, 0.00011470799999999809, 0.00011466599999999938, 0.00011544399999999927, 0.00011512500000000064, 0.00011544499999999874, 0.00011532000000000209, 0.00011476399999999637, 0.00011465299999999928, 0.00011501299999999715, 0.00011490200000000006, 0.00011476400000000331, 0.00011463899999999971, 0.00011475000000000374, 0.0001150970000000015, 0.00011479200000000245, 0.00011455599999999483, 0.00011488899999999996, 0.00011532000000000209, 0.00011462500000000014, 0.00011545799999999884, 0.00011477800000000288, 0.00011515299999999978, 0.00011533300000000218, 0.00011527799999999644, 0.00011488899999999996, 0.00011455599999999483, 0.00011476400000000331, 0.00011455600000000177, 0.00011491599999999963, 0.00011479100000000297]</msg>
<status status="PASS" starttime="20201030 15:57:49.538" endtime="20201030 15:57:49.543"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:49.527" endtime="20201030 15:57:49.545"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:49.557" endtime="20201030 15:57:49.579"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:49.550" endtime="20201030 15:57:49.580"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:49.548" endtime="20201030 15:57:49.581"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:49.047" endtime="20201030 15:57:49.582"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:49.046" endtime="20201030 15:57:49.582"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:49.605" endtime="20201030 15:57:49.630"></status>
</kw>
<msg timestamp="20201030 15:57:49.631" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:49.602" endtime="20201030 15:57:49.631"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:49.637" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:49.633" endtime="20201030 15:57:49.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:49.640" endtime="20201030 15:57:49.643"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:49.594" endtime="20201030 15:57:49.645"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:49.589" endtime="20201030 15:57:49.647"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:49.663" endtime="20201030 15:57:50.004"></status>
</kw>
<msg timestamp="20201030 15:57:50.011" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042639583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042755347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:49.660" endtime="20201030 15:57:50.011"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:50.029" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042639583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042755347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:50.013" endtime="20201030 15:57:50.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:50.032" endtime="20201030 15:57:50.036"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:49.653" endtime="20201030 15:57:50.038"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:49.648" endtime="20201030 15:57:50.039"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:50.049" level="INFO">${RESULT} = [{'diff': 0.00011576399999999737}, {'diff': 0.00011552800000000363}, {'diff': 0.00011620799999999959}, {'diff': 0.00011566699999999985}, {'diff': 0.00011598600000000542}, {'diff': 0.000115681000000006...</msg>
<status status="PASS" starttime="20201030 15:57:50.041" endtime="20201030 15:57:50.050"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:50.060" level="INFO">${ACCURACY} = {'diff': [0.00011576399999999737, 0.00011552800000000363, 0.00011620799999999959, 0.00011566699999999985, 0.00011598600000000542, 0.00011568100000000636, 0.00011594499999999924, 0.00011566699999999985...</msg>
<status status="PASS" starttime="20201030 15:57:50.051" endtime="20201030 15:57:50.061"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:50.071" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201030 15:57:50.069" endtime="20201030 15:57:50.072"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:50.077" level="INFO">VALUE: [0.00011576399999999737, 0.00011552800000000363, 0.00011620799999999959, 0.00011566699999999985, 0.00011598600000000542, 0.00011568100000000636, 0.00011594499999999924, 0.00011566699999999985, 0.00011623599999999873, 0.0001160970000000025, 0.0001158750000000014, 0.00011595800000000628, 0.0001155420000000032, 0.00011554199999999626, 0.0001160970000000025, 0.00011633400000000266, 0.00011577799999999694, 0.00011556899999999592, 0.00011627699999999797, 0.00011567999999999995, 0.00011576400000000431, 0.00011609699999999556, 0.0001162499999999983, 0.00011579200000000345, 0.00011599999999999805, 0.00011565300000000028, 0.00011552799999999669, 0.00011644400000000027, 0.0001164300000000007, 0.00011567999999999995, 0.00011620799999999959, 0.00011612500000000164, 0.00011555600000000277, 0.00011576400000000431, 0.00011601399999999762, 0.00011632000000000309, 0.00011609800000000198, 0.0001160970000000025, 0.00011598599999999848, 0.00011576399999999737, 0.00011565300000000028, 0.00011555600000000277, 0.00011644499999999974, 0.000116209000000006, 0.00011588900000000096, 0.00011633400000000266, 0.00011609699999999556, 0.0001164300000000007, 0.00011645799999999984, 0.00011554199999999626]</msg>
<status status="PASS" starttime="20201030 15:57:50.074" endtime="20201030 15:57:50.078"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:50.062" endtime="20201030 15:57:50.080"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:50.090" endtime="20201030 15:57:50.111"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:50.085" endtime="20201030 15:57:50.113"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:50.083" endtime="20201030 15:57:50.114"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:49.584" endtime="20201030 15:57:50.114"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:49.583" endtime="20201030 15:57:50.115"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:50.138" endtime="20201030 15:57:50.161"></status>
</kw>
<msg timestamp="20201030 15:57:50.162" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:50.134" endtime="20201030 15:57:50.163"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:50.169" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:50.165" endtime="20201030 15:57:50.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:50.171" endtime="20201030 15:57:50.175"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:50.127" endtime="20201030 15:57:50.177"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:50.121" endtime="20201030 15:57:50.178"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:50.195" endtime="20201030 15:57:50.535"></status>
</kw>
<msg timestamp="20201030 15:57:50.542" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041894444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042011875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:50.192" endtime="20201030 15:57:50.543"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:50.560" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041894444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042011875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:50.544" endtime="20201030 15:57:50.561"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:50.563" endtime="20201030 15:57:50.567"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:50.184" endtime="20201030 15:57:50.568"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:50.179" endtime="20201030 15:57:50.570"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:50.581" level="INFO">${RESULT} = [{'diff': 0.00011743099999999423}, {'diff': 0.00011651399999999812}, {'diff': 0.00011687499999999545}, {'diff': 0.00011666700000000085}, {'diff': 0.00011655599999999683}, {'diff': 0.000116999999999999...</msg>
<status status="PASS" starttime="20201030 15:57:50.571" endtime="20201030 15:57:50.581"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:50.592" level="INFO">${ACCURACY} = {'diff': [0.00011743099999999423, 0.00011651399999999812, 0.00011687499999999545, 0.00011666700000000085, 0.00011655599999999683, 0.00011699999999999905, 0.00011736099999999638, 0.00011676400000000531...</msg>
<status status="PASS" starttime="20201030 15:57:50.583" endtime="20201030 15:57:50.593"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:50.604" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201030 15:57:50.601" endtime="20201030 15:57:50.605"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:50.610" level="INFO">VALUE: [0.00011743099999999423, 0.00011651399999999812, 0.00011687499999999545, 0.00011666700000000085, 0.00011655599999999683, 0.00011699999999999905, 0.00011736099999999638, 0.00011676400000000531, 0.0001174300000000017, 0.00011744400000000127, 0.00011743100000000117, 0.0001174449999999938, 0.00011744500000000074, 0.00011677799999999794, 0.00011744500000000074, 0.00011654099999999779, 0.00011742999999999476, 0.00011654099999999779, 0.00011666700000000085, 0.00011708300000000393, 0.0001171249999999957, 0.00011733300000000418, 0.00011690300000000153, 0.00011712500000000264, 0.00011699999999999905, 0.00011654099999999779, 0.00011695899999999981, 0.00011654100000000472, 0.00011656900000000386, 0.00011708300000000393, 0.00011733299999999725, 0.00011722200000000016, 0.00011665300000000128, 0.00011734700000000375, 0.00011741599999999519, 0.00011666600000000138, 0.00011733299999999725, 0.00011655499999999736, 0.00011711099999999613, 0.00011699999999999905, 0.00011699999999999905, 0.0001165699999999964, 0.00011673599999999923, 0.00011704099999999829, 0.00011713899999999527, 0.00011688900000000196, 0.00011702799999999819, 0.0001174170000000016, 0.00011684700000000325, 0.00011732000000000409]</msg>
<status status="PASS" starttime="20201030 15:57:50.606" endtime="20201030 15:57:50.611"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:50.594" endtime="20201030 15:57:50.613"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:50.623" endtime="20201030 15:57:50.644"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:50.618" endtime="20201030 15:57:50.646"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:50.616" endtime="20201030 15:57:50.647"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:50.117" endtime="20201030 15:57:50.647"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:50.116" endtime="20201030 15:57:50.648"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:50.664" endtime="20201030 15:57:50.685"></status>
</kw>
<msg timestamp="20201030 15:57:50.686" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:50.663" endtime="20201030 15:57:50.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:50.689" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:50.687" endtime="20201030 15:57:50.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:50.690" endtime="20201030 15:57:50.692"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:50.659" endtime="20201030 15:57:50.692"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:50.654" endtime="20201030 15:57:50.693"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:50.701" endtime="20201030 15:57:51.031"></status>
</kw>
<msg timestamp="20201030 15:57:51.038" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034304903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034422972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:50.699" endtime="20201030 15:57:51.039"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:51.057" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034304903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034422972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:51.041" endtime="20201030 15:57:51.058"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:51.059" endtime="20201030 15:57:51.063"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:50.696" endtime="20201030 15:57:51.065"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:50.694" endtime="20201030 15:57:51.066"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:51.077" level="INFO">${RESULT} = [{'diff': 0.00011806900000000536}, {'diff': 0.00011822200000000116}, {'diff': 0.00011843100000000217}, {'diff': 0.0001179170000000021}, {'diff': 0.00011833400000000466}, {'diff': 0.0001176810000000014...</msg>
<status status="PASS" starttime="20201030 15:57:51.068" endtime="20201030 15:57:51.077"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:57:51.086" level="INFO">${ACCURACY} = {'diff': [0.00011806900000000536, 0.00011822200000000116, 0.00011843100000000217, 0.0001179170000000021, 0.00011833400000000466, 0.00011768100000000142, 0.00011834699999999782, 0.0001180970000000045, ...</msg>
<status status="PASS" starttime="20201030 15:57:51.079" endtime="20201030 15:57:51.087"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:51.097" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201030 15:57:51.095" endtime="20201030 15:57:51.098"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:51.103" level="INFO">VALUE: [0.00011806900000000536, 0.00011822200000000116, 0.00011843100000000217, 0.0001179170000000021, 0.00011833400000000466, 0.00011768100000000142, 0.00011834699999999782, 0.0001180970000000045, 0.00011845800000000184, 0.00011766700000000185, 0.00011768099999999448, 0.00011804199999999876, 0.00011779200000000545, 0.0001179029999999956, 0.00011829199999999901, 0.00011811199999999661, 0.00011811100000000407, 0.00011770800000000109, 0.00011788899999999602, 0.0001182500000000003, 0.00011809699999999757, 0.00011833299999999825, 0.00011779200000000545, 0.00011752799999999869, 0.00011822300000000063, 0.00011767999999999501, 0.00011755499999999836, 0.00011790300000000253, 0.00011806899999999843, 0.00011808400000000441, 0.00011755599999999783, 0.000118082999999998, 0.00011766699999999491, 0.00011848600000000098, 0.00011755599999999783, 0.00011784699999999732, 0.00011811100000000407, 0.0001179029999999956, 0.00011833300000000518, 0.00011755599999999783, 0.00011811099999999713, 0.00011779199999999851, 0.00011757000000000434, 0.00011790200000000306, 0.00011766600000000238, 0.0001183049999999991, 0.00011822200000000116, 0.00011800000000000005, 0.00011795800000000134, 0.00011844500000000174]</msg>
<status status="PASS" starttime="20201030 15:57:51.100" endtime="20201030 15:57:51.104"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:51.088" endtime="20201030 15:57:51.106"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:51.116" endtime="20201030 15:57:51.137"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:51.111" endtime="20201030 15:57:51.139"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:51.109" endtime="20201030 15:57:51.140"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:50.650" endtime="20201030 15:57:51.141"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:50.649" endtime="20201030 15:57:51.141"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:57.061" endtime="20201030 15:57:51.141"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201030 15:56:56.953" endtime="20201030 15:57:51.143" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 15:55:57.915" endtime="20201030 15:57:51.152"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 15:57:51.290" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 15:57:51.306" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 15:57:52.136" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 15:57:51.286" endtime="20201030 15:57:52.137"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 15:57:55.143" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20201030 15:57:52.140" endtime="20201030 15:57:55.144"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:51.283" endtime="20201030 15:57:55.146"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:55.150" endtime="20201030 15:57:55.417"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:55.148" endtime="20201030 15:57:55.419"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:55.448" endtime="20201030 15:57:55.471"></status>
</kw>
<msg timestamp="20201030 15:57:55.472" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['n(): This is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Succ...</msg>
<status status="PASS" starttime="20201030 15:57:55.445" endtime="20201030 15:57:55.472"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:55.478" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['n(): This is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Succ...</msg>
<status status="PASS" starttime="20201030 15:57:55.474" endtime="20201030 15:57:55.479"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:57:55.485" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:57:55.481" endtime="20201030 15:57:55.486"></status>
</kw>
<status status="FAIL" starttime="20201030 15:57:55.439" endtime="20201030 15:57:55.488"></status>
</kw>
<status status="FAIL" starttime="20201030 15:57:55.433" endtime="20201030 15:57:55.490"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:55.430" endtime="20201030 15:57:55.490"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:57:55.500" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:57:55.499" endtime="20201030 15:57:55.501"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:55.492" endtime="20201030 15:57:55.502"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:55.429" endtime="20201030 15:57:55.502"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:55.427" endtime="20201030 15:57:55.502"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:55.504" endtime="20201030 15:57:55.508"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:55.424" endtime="20201030 15:57:55.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:55.511" endtime="20201030 15:57:55.515"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:55.420" endtime="20201030 15:57:55.516"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:51.280" endtime="20201030 15:57:55.518"></status>
</kw>
<test id="s1-s4-t1" name="0 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:55.531" endtime="20201030 15:57:55.553"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:55.528" endtime="20201030 15:57:55.555"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:55.588" endtime="20201030 15:57:55.607"></status>
</kw>
<msg timestamp="20201030 15:57:55.608" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:55.585" endtime="20201030 15:57:55.609"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:55.615" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:55.611" endtime="20201030 15:57:55.616"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:57:55.622" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:57:55.618" endtime="20201030 15:57:55.622"></status>
</kw>
<status status="FAIL" starttime="20201030 15:57:55.578" endtime="20201030 15:57:55.624"></status>
</kw>
<status status="FAIL" starttime="20201030 15:57:55.571" endtime="20201030 15:57:55.626"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:55.569" endtime="20201030 15:57:55.627"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:57:55.635" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:57:55.633" endtime="20201030 15:57:55.636"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:55.629" endtime="20201030 15:57:55.636"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:55.567" endtime="20201030 15:57:55.637"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:55.565" endtime="20201030 15:57:55.637"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:55.639" endtime="20201030 15:57:55.642"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:55.561" endtime="20201030 15:57:55.644"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:55.556" endtime="20201030 15:57:55.645"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:55.525" endtime="20201030 15:57:55.646"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>0</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:55.670" endtime="20201030 15:58:01.794"></status>
</kw>
<msg timestamp="20201030 15:58:01.795" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:55.664" endtime="20201030 15:58:01.795"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:58:01.801" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:58:01.797" endtime="20201030 15:58:01.802"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:01.803" endtime="20201030 15:58:01.807"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:55.657" endtime="20201030 15:58:01.809"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:55.651" endtime="20201030 15:58:01.811"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:58:01.816" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-interval': 20000, 'bg-timer-count': 0}</msg>
<status status="PASS" starttime="20201030 15:58:01.812" endtime="20201030 15:58:01.817"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:58:01.827" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 15:58:01.825" endtime="20201030 15:58:01.828"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:58:01.832" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 15:58:01.830" endtime="20201030 15:58:01.833"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:01.819" endtime="20201030 15:58:01.834"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:58:01.844" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 15:58:01.842" endtime="20201030 15:58:01.845"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:58:01.849" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 15:58:01.846" endtime="20201030 15:58:01.850"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:01.836" endtime="20201030 15:58:01.851"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:58:01.861" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 15:58:01.859" endtime="20201030 15:58:01.862"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:58:01.865" level="INFO">VALUE: 0</msg>
<status status="PASS" starttime="20201030 15:58:01.863" endtime="20201030 15:58:01.866"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:01.852" endtime="20201030 15:58:01.868"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:01.885" endtime="20201030 15:58:02.246"></status>
</kw>
<msg timestamp="20201030 15:58:02.252" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.129709139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.229739333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:58:01.881" endtime="20201030 15:58:02.253"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:58:02.270" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.129709139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.229739333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:58:02.255" endtime="20201030 15:58:02.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:02.273" endtime="20201030 15:58:02.277"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:01.874" endtime="20201030 15:58:02.278"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:01.869" endtime="20201030 15:58:02.280"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 15:58:02.290" level="INFO">${FILTERED} = [{'diff': 0.10003019399999999}, {'diff': 0.10000826399999999}, {'diff': 0.10001134700000003}, {'diff': 5.419999999922709e-07}, {'diff': 5.410000000205528e-07}, {'diff': 5.410000000205528e-07}, {'diff'...</msg>
<status status="PASS" starttime="20201030 15:58:02.281" endtime="20201030 15:58:02.291"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:58:02.301" level="INFO">${RESULT} = {'diff': [0.10003019399999999, 0.10000826399999999, 0.10001134700000003, 5.419999999922709e-07, 5.410000000205528e-07, 5.410000000205528e-07, 5.410000000205528e-07, 5.419999999922709e-07, 5.4199999999...</msg>
<status status="PASS" starttime="20201030 15:58:02.292" endtime="20201030 15:58:02.301"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:58:02.311" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 15:58:02.309" endtime="20201030 15:58:02.312"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:58:02.317" level="INFO">VALUE: [0.10003019399999999, 0.10000826399999999, 0.10001134700000003, 5.419999999922709e-07, 5.410000000205528e-07, 5.410000000205528e-07, 5.410000000205528e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.410000001315751e-07, 5.419999999922709e-07, 5.419999999922709e-07, 0.10001080499999992, 0.10001029200000011, 0.10001031999999999, 0.10001033399999981, 0.10001030600000016, 0.10001030500000008, 0.10001033300000017, 0.1000102909999998, 0.10001027800000006, 0.10001024999999997, 0.10001027800000006, 0.10001023600000014, 0.1000102639999998, 0.10001027800000006, 0.10001033400000026, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.420000004363601e-07, 0.10001075000000004, 0.1000102639999998, 0.10001027800000006, 0.10001024999999952, 0.10001026299999971, 0.10001027800000006, 0.10001026299999971, 0.10001024999999952, 0.1000102639999998, 0.1000102639999998, 0.10001029199999945]</msg>
<status status="PASS" starttime="20201030 15:58:02.313" endtime="20201030 15:58:02.317"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:02.303" endtime="20201030 15:58:02.320"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:58:02.329" endtime="20201030 15:58:02.351"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:02.325" endtime="20201030 15:58:02.353"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:02.322" endtime="20201030 15:58:02.353"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:55.647" endtime="20201030 15:58:02.354"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201030 15:57:55.519" endtime="20201030 15:58:02.356" critical="yes"></status>
</test>
<test id="s1-s4-t2" name="5 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:58:02.372" endtime="20201030 15:58:02.394"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:02.369" endtime="20201030 15:58:02.396"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:02.429" endtime="20201030 15:58:02.448"></status>
</kw>
<msg timestamp="20201030 15:58:02.449" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:58:02.426" endtime="20201030 15:58:02.450"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:58:02.456" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:58:02.451" endtime="20201030 15:58:02.457"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:58:02.462" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:58:02.458" endtime="20201030 15:58:02.463"></status>
</kw>
<status status="FAIL" starttime="20201030 15:58:02.418" endtime="20201030 15:58:02.465"></status>
</kw>
<status status="FAIL" starttime="20201030 15:58:02.412" endtime="20201030 15:58:02.467"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:02.409" endtime="20201030 15:58:02.467"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:58:02.477" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:58:02.474" endtime="20201030 15:58:02.478"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:02.469" endtime="20201030 15:58:02.478"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:02.408" endtime="20201030 15:58:02.479"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:02.406" endtime="20201030 15:58:02.479"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:02.481" endtime="20201030 15:58:02.484"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:02.401" endtime="20201030 15:58:02.486"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:02.397" endtime="20201030 15:58:02.488"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:02.366" endtime="20201030 15:58:02.488"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>5</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:02.510" endtime="20201030 15:58:08.635"></status>
</kw>
<msg timestamp="20201030 15:58:08.636" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:58:02.506" endtime="20201030 15:58:08.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:58:08.642" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:58:08.638" endtime="20201030 15:58:08.643"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:08.645" endtime="20201030 15:58:08.649"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:02.499" endtime="20201030 15:58:08.651"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:02.494" endtime="20201030 15:58:08.652"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:58:08.659" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-interval': 20000, 'bg-timer-count': 5}</msg>
<status status="PASS" starttime="20201030 15:58:08.654" endtime="20201030 15:58:08.659"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:58:08.669" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 15:58:08.667" endtime="20201030 15:58:08.670"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:58:08.674" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 15:58:08.672" endtime="20201030 15:58:08.675"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:08.661" endtime="20201030 15:58:08.676"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:58:08.686" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 15:58:08.684" endtime="20201030 15:58:08.687"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:58:08.691" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 15:58:08.689" endtime="20201030 15:58:08.692"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:08.678" endtime="20201030 15:58:08.693"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:58:08.703" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 15:58:08.701" endtime="20201030 15:58:08.704"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:58:08.708" level="INFO">VALUE: 5</msg>
<status status="PASS" starttime="20201030 15:58:08.705" endtime="20201030 15:58:08.708"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:08.694" endtime="20201030 15:58:08.710"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:08.727" endtime="20201030 15:58:09.080"></status>
</kw>
<msg timestamp="20201030 15:58:09.086" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.128973389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.229003667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:58:08.723" endtime="20201030 15:58:09.087"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:58:09.104" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.128973389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.229003667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:58:09.089" endtime="20201030 15:58:09.105"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:09.107" endtime="20201030 15:58:09.111"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:08.716" endtime="20201030 15:58:09.112"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:08.711" endtime="20201030 15:58:09.114"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 15:58:09.124" level="INFO">${FILTERED} = [{'diff': 0.100030278}, {'diff': 0.100009236}, {'diff': 0.10001027800000001}, {'diff': 0.10001030500000002}, {'diff': 0.10001030499999997}, {'diff': 0.10001027800000006}, {'diff': 0.10001027799999995}...</msg>
<status status="PASS" starttime="20201030 15:58:09.115" endtime="20201030 15:58:09.124"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:58:09.135" level="INFO">${RESULT} = {'diff': [0.100030278, 0.100009236, 0.10001027800000001, 0.10001030500000002, 0.10001030499999997, 0.10001027800000006, 0.10001027799999995, 0.10001023600000003, 0.10001024999999997, 0.100010291999999...</msg>
<status status="PASS" starttime="20201030 15:58:09.126" endtime="20201030 15:58:09.136"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:58:09.146" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 15:58:09.143" endtime="20201030 15:58:09.146"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:58:09.151" level="INFO">VALUE: [0.100030278, 0.100009236, 0.10001027800000001, 0.10001030500000002, 0.10001030499999997, 0.10001027800000006, 0.10001027799999995, 0.10001023600000003, 0.10001024999999997, 0.10001029199999989, 5.419999999922709e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.410000001315751e-07, 5.410000001315751e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.410000003536197e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.419999995481817e-07, 0.10001080599999934, 0.10001033400000026, 5.419999995481817e-07, 0.10001079199999996, 0.10001030499999963, 0.10001029099999936, 0.10001029199999945]</msg>
<status status="PASS" starttime="20201030 15:58:09.148" endtime="20201030 15:58:09.152"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:09.137" endtime="20201030 15:58:09.154"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:58:09.164" endtime="20201030 15:58:09.186"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:09.160" endtime="20201030 15:58:09.188"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:09.157" endtime="20201030 15:58:09.188"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:02.490" endtime="20201030 15:58:09.189"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201030 15:58:02.360" endtime="20201030 15:58:09.191" critical="yes"></status>
</test>
<test id="s1-s4-t3" name="10 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:58:09.208" endtime="20201030 15:58:09.230"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:09.204" endtime="20201030 15:58:09.232"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:09.269" endtime="20201030 15:58:09.287"></status>
</kw>
<msg timestamp="20201030 15:58:09.288" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:58:09.266" endtime="20201030 15:58:09.289"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:58:09.295" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:58:09.291" endtime="20201030 15:58:09.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:58:09.302" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:58:09.297" endtime="20201030 15:58:09.302"></status>
</kw>
<status status="FAIL" starttime="20201030 15:58:09.255" endtime="20201030 15:58:09.304"></status>
</kw>
<status status="FAIL" starttime="20201030 15:58:09.248" endtime="20201030 15:58:09.306"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:09.246" endtime="20201030 15:58:09.307"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:58:09.314" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:58:09.313" endtime="20201030 15:58:09.315"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:09.308" endtime="20201030 15:58:09.315"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:09.244" endtime="20201030 15:58:09.316"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:09.242" endtime="20201030 15:58:09.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:09.318" endtime="20201030 15:58:09.321"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:09.238" endtime="20201030 15:58:09.323"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:09.233" endtime="20201030 15:58:09.324"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:09.201" endtime="20201030 15:58:09.325"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>10</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:09.346" endtime="20201030 15:58:15.470"></status>
</kw>
<msg timestamp="20201030 15:58:15.471" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:58:09.343" endtime="20201030 15:58:15.471"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:58:15.477" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:58:15.473" endtime="20201030 15:58:15.478"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:15.480" endtime="20201030 15:58:15.484"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:09.335" endtime="20201030 15:58:15.486"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:09.330" endtime="20201030 15:58:15.487"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:58:15.493" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-interval': 20000, 'bg-timer-count': 10}</msg>
<status status="PASS" starttime="20201030 15:58:15.489" endtime="20201030 15:58:15.493"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:58:15.503" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 15:58:15.501" endtime="20201030 15:58:15.504"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:58:15.508" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 15:58:15.505" endtime="20201030 15:58:15.508"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:15.494" endtime="20201030 15:58:15.510"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:58:15.519" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 15:58:15.517" endtime="20201030 15:58:15.520"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:58:15.524" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 15:58:15.522" endtime="20201030 15:58:15.525"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:15.511" endtime="20201030 15:58:15.526"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:58:15.537" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 15:58:15.535" endtime="20201030 15:58:15.538"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:58:15.541" level="INFO">VALUE: 10</msg>
<status status="PASS" starttime="20201030 15:58:15.539" endtime="20201030 15:58:15.542"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:15.528" endtime="20201030 15:58:15.544"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:15.560" endtime="20201030 15:58:15.885"></status>
</kw>
<msg timestamp="20201030 15:58:15.888" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.129377194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.229488931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:58:15.557" endtime="20201030 15:58:15.888"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:58:15.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.129377194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.229488931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:58:15.889" endtime="20201030 15:58:15.896"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:15.897" endtime="20201030 15:58:15.899"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:15.550" endtime="20201030 15:58:15.900"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:15.545" endtime="20201030 15:58:15.900"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 15:58:15.905" level="INFO">${FILTERED} = [{'diff': 0.100111737}, {'diff': 0.09992730600000002}, {'diff': 0.100010306}, {'diff': 0.10000931899999993}, {'diff': 0.10001033300000006}, {'diff': 0.10001030499999997}, {'diff': 0.10001030600000005}...</msg>
<status status="PASS" starttime="20201030 15:58:15.901" endtime="20201030 15:58:15.905"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:58:15.909" level="INFO">${RESULT} = {'diff': [0.100111737, 0.09992730600000002, 0.100010306, 0.10000931899999993, 0.10001033300000006, 0.10001030499999997, 0.10001030600000005, 0.10001033399999992, 0.10001031999999999, 0.100010319999999...</msg>
<status status="PASS" starttime="20201030 15:58:15.906" endtime="20201030 15:58:15.910"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:58:15.914" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 15:58:15.913" endtime="20201030 15:58:15.915"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:58:15.917" level="INFO">VALUE: [0.100111737, 0.09992730600000002, 0.100010306, 0.10000931899999993, 0.10001033300000006, 0.10001030499999997, 0.10001030600000005, 0.10001033399999992, 0.10001031999999999, 0.10001031999999999, 0.10001031999999999, 0.10001030500000008, 0.10001030499999986, 0.10001033299999995, 0.10001030599999994, 0.10001032000000021, 0.10001033400000003, 0.10001029200000011, 0.10001027699999998, 0.10001024999999997, 0.10001027800000006, 0.10001026400000024, 0.1000102639999998, 0.10001029199999989, 0.10001027700000042, 0.1000102639999998, 0.10001026400000024, 0.10001027800000006, 0.1000102909999998, 0.1000102639999998, 0.10001027699999998, 0.1000102639999998, 0.10001027699999998, 0.10001027800000006, 0.10001031999999999, 5.409999999095305e-07, 5.419999999922709e-07, 5.410000003536197e-07, 5.419999995481817e-07, 5.410000003536197e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.409999994654413e-07, 5.419999995481817e-07, 5.419999995481817e-07, 5.419999995481817e-07, 5.420000004363601e-07, 5.410000003536197e-07, 0.10001074999999915]</msg>
<status status="PASS" starttime="20201030 15:58:15.915" endtime="20201030 15:58:15.918"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:15.910" endtime="20201030 15:58:15.918"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:58:15.923" endtime="20201030 15:58:15.942"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:15.921" endtime="20201030 15:58:15.943"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:15.919" endtime="20201030 15:58:15.943"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:09.326" endtime="20201030 15:58:15.943"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201030 15:58:09.195" endtime="20201030 15:58:15.944" critical="yes"></status>
</test>
<test id="s1-s4-t4" name="15 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:58:15.952" endtime="20201030 15:58:15.971"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:15.950" endtime="20201030 15:58:15.972"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:15.989" endtime="20201030 15:58:16.003"></status>
</kw>
<msg timestamp="20201030 15:58:16.004" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:58:15.987" endtime="20201030 15:58:16.004"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:58:16.007" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:58:16.005" endtime="20201030 15:58:16.007"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:58:16.010" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:58:16.008" endtime="20201030 15:58:16.011"></status>
</kw>
<status status="FAIL" starttime="20201030 15:58:15.984" endtime="20201030 15:58:16.011"></status>
</kw>
<status status="FAIL" starttime="20201030 15:58:15.981" endtime="20201030 15:58:16.012"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:15.980" endtime="20201030 15:58:16.013"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:58:16.016" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:58:16.016" endtime="20201030 15:58:16.017"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:16.013" endtime="20201030 15:58:16.017"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:15.979" endtime="20201030 15:58:16.017"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:15.978" endtime="20201030 15:58:16.017"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:16.018" endtime="20201030 15:58:16.020"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:15.975" endtime="20201030 15:58:16.020"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:15.973" endtime="20201030 15:58:16.021"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:15.949" endtime="20201030 15:58:16.021"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>15</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:16.031" endtime="20201030 15:58:22.154"></status>
</kw>
<msg timestamp="20201030 15:58:22.155" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:58:16.030" endtime="20201030 15:58:22.155"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:58:22.161" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:58:22.157" endtime="20201030 15:58:22.162"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:22.164" endtime="20201030 15:58:22.168"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:16.026" endtime="20201030 15:58:22.170"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:16.024" endtime="20201030 15:58:22.171"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:58:22.177" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-interval': 20000, 'bg-timer-count': 15}</msg>
<status status="PASS" starttime="20201030 15:58:22.173" endtime="20201030 15:58:22.177"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:58:22.187" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 15:58:22.185" endtime="20201030 15:58:22.188"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:58:22.192" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 15:58:22.190" endtime="20201030 15:58:22.192"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:22.179" endtime="20201030 15:58:22.194"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:58:22.203" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 15:58:22.201" endtime="20201030 15:58:22.204"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:58:22.211" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 15:58:22.206" endtime="20201030 15:58:22.212"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:22.195" endtime="20201030 15:58:22.213"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:58:22.223" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 15:58:22.221" endtime="20201030 15:58:22.224"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:58:22.228" level="INFO">VALUE: 15</msg>
<status status="PASS" starttime="20201030 15:58:22.226" endtime="20201030 15:58:22.229"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:22.215" endtime="20201030 15:58:22.230"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:22.247" endtime="20201030 15:58:22.584"></status>
</kw>
<msg timestamp="20201030 15:58:22.591" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069940569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.170112958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:58:22.243" endtime="20201030 15:58:22.591"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:58:22.608" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069940569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.170112958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:58:22.593" endtime="20201030 15:58:22.609"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:22.611" endtime="20201030 15:58:22.616"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:22.236" endtime="20201030 15:58:22.617"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:22.231" endtime="20201030 15:58:22.619"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 15:58:22.630" level="INFO">${FILTERED} = [{'diff': 0.10017238900000001}, {'diff': 0.09986604200000002}, {'diff': 0.10001130600000002}, {'diff': 0.10001027699999998}, {'diff': 0.10001030599999994}, {'diff': 0.10001033400000003}, {'diff': 5.41...</msg>
<status status="PASS" starttime="20201030 15:58:22.621" endtime="20201030 15:58:22.630"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:58:22.639" level="INFO">${RESULT} = {'diff': [0.10017238900000001, 0.09986604200000002, 0.10001130600000002, 0.10001027699999998, 0.10001030599999994, 0.10001033400000003, 5.419999999922709e-07, 5.410000000205528e-07, 5.419999999922709e...</msg>
<status status="PASS" starttime="20201030 15:58:22.632" endtime="20201030 15:58:22.640"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:58:22.649" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 15:58:22.647" endtime="20201030 15:58:22.651"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:58:22.656" level="INFO">VALUE: [0.10017238900000001, 0.09986604200000002, 0.10001130600000002, 0.10001027699999998, 0.10001030599999994, 0.10001033400000003, 5.419999999922709e-07, 5.410000000205528e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.410000001315751e-07, 5.419999999922709e-07, 5.419999999922709e-07, 0.10001079199999996, 0.10001038800000006, 0.10001036099999983, 0.10001036100000027, 0.10001030500000008, 0.10001029199999989, 0.10001030600000016, 0.10001029199999989, 0.1000103189999999, 0.10001027800000006, 0.10001029199999989, 0.1000103189999999, 0.1000102909999998, 0.10001027800000006, 0.10001029100000025, 0.10001030500000008, 0.10001030599999972, 0.10001027800000006, 0.10001030500000008, 0.10001029199999989, 0.10001029199999989, 0.10001029100000025, 0.10001033300000017, 5.420000004363601e-07, 0.10001079199999996, 0.10001031999999999, 0.10001027800000006, 0.10001030499999963, 0.10001029200000033, 0.10001027800000006, 0.1000103750000001]</msg>
<status status="PASS" starttime="20201030 15:58:22.653" endtime="20201030 15:58:22.658"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:22.641" endtime="20201030 15:58:22.659"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:58:22.669" endtime="20201030 15:58:22.690"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:22.664" endtime="20201030 15:58:22.692"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:22.662" endtime="20201030 15:58:22.693"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:16.022" endtime="20201030 15:58:22.693"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201030 15:58:15.946" endtime="20201030 15:58:22.695" critical="yes"></status>
</test>
<test id="s1-s4-t5" name="20 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:58:22.711" endtime="20201030 15:58:22.733"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:22.707" endtime="20201030 15:58:22.734"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:22.767" endtime="20201030 15:58:22.786"></status>
</kw>
<msg timestamp="20201030 15:58:22.787" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:58:22.764" endtime="20201030 15:58:22.787"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:58:22.793" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:58:22.789" endtime="20201030 15:58:22.794"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:58:22.800" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:58:22.796" endtime="20201030 15:58:22.800"></status>
</kw>
<status status="FAIL" starttime="20201030 15:58:22.757" endtime="20201030 15:58:22.802"></status>
</kw>
<status status="FAIL" starttime="20201030 15:58:22.750" endtime="20201030 15:58:22.804"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:22.748" endtime="20201030 15:58:22.805"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:58:22.813" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:58:22.812" endtime="20201030 15:58:22.814"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:22.806" endtime="20201030 15:58:22.815"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:22.746" endtime="20201030 15:58:22.815"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:22.744" endtime="20201030 15:58:22.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:22.817" endtime="20201030 15:58:22.821"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:22.740" endtime="20201030 15:58:22.822"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:22.736" endtime="20201030 15:58:22.824"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:22.705" endtime="20201030 15:58:22.824"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>20</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:22.848" endtime="20201030 15:58:28.972"></status>
</kw>
<msg timestamp="20201030 15:58:28.973" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:58:22.842" endtime="20201030 15:58:28.973"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:58:28.979" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:58:28.975" endtime="20201030 15:58:28.980"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:28.982" endtime="20201030 15:58:28.986"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:22.835" endtime="20201030 15:58:28.988"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:22.830" endtime="20201030 15:58:28.989"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:58:28.995" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-interval': 20000, 'bg-timer-count': 20}</msg>
<status status="PASS" starttime="20201030 15:58:28.991" endtime="20201030 15:58:28.995"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:58:29.005" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 15:58:29.003" endtime="20201030 15:58:29.006"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:58:29.010" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 15:58:29.007" endtime="20201030 15:58:29.010"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:28.997" endtime="20201030 15:58:29.012"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:58:29.022" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 15:58:29.019" endtime="20201030 15:58:29.022"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:58:29.026" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 15:58:29.024" endtime="20201030 15:58:29.027"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:29.013" endtime="20201030 15:58:29.028"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:58:29.038" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 15:58:29.036" endtime="20201030 15:58:29.039"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:58:29.042" level="INFO">VALUE: 20</msg>
<status status="PASS" starttime="20201030 15:58:29.040" endtime="20201030 15:58:29.043"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:29.030" endtime="20201030 15:58:29.045"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:29.061" endtime="20201030 15:58:29.414"></status>
</kw>
<msg timestamp="20201030 15:58:29.421" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.128036403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.228282111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:58:29.058" endtime="20201030 15:58:29.422"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:58:29.439" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.128036403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.228282111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:58:29.423" endtime="20201030 15:58:29.440"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:29.441" endtime="20201030 15:58:29.445"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:29.051" endtime="20201030 15:58:29.447"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:29.046" endtime="20201030 15:58:29.448"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 15:58:29.459" level="INFO">${FILTERED} = [{'diff': 0.10024570800000002}, {'diff': 0.10006068000000001}, {'diff': 0.09974348599999999}, {'diff': 0.10001031900000001}, {'diff': 0.10001033299999995}, {'diff': 0.1000103189999999}, {'diff': 0.100...</msg>
<status status="PASS" starttime="20201030 15:58:29.450" endtime="20201030 15:58:29.459"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:58:29.469" level="INFO">${RESULT} = {'diff': [0.10024570800000002, 0.10006068000000001, 0.09974348599999999, 0.10001031900000001, 0.10001033299999995, 0.1000103189999999, 0.10001033300000006, 0.10001031900000001, 0.10001023599999992, 0....</msg>
<status status="PASS" starttime="20201030 15:58:29.461" endtime="20201030 15:58:29.470"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:58:29.480" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 15:58:29.477" endtime="20201030 15:58:29.480"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:58:29.485" level="INFO">VALUE: [0.10024570800000002, 0.10006068000000001, 0.09974348599999999, 0.10001031900000001, 0.10001033299999995, 0.1000103189999999, 0.10001033300000006, 0.10001031900000001, 0.10001023599999992, 0.10001026400000002, 0.10001027799999984, 0.10001027800000006, 0.1000102639999998, 0.10001027799999984, 0.10001027799999984, 0.10001027800000006, 0.10001027799999984, 0.10001029100000003, 0.10001029200000011, 0.10001029199999989, 5.410000003536197e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.410000003536197e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.410000003536197e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.409999999095305e-07, 0.1000107770000005, 0.10001029200000033, 0.1000102639999998, 0.1000103060000006, 0.10001025000000041, 0.10001027800000006, 0.10001031999999999, 5.410000003536197e-07, 5.419999995481817e-07, 5.420000004363601e-07, 5.410000003536197e-07]</msg>
<status status="PASS" starttime="20201030 15:58:29.482" endtime="20201030 15:58:29.487"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:29.471" endtime="20201030 15:58:29.488"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:58:29.498" endtime="20201030 15:58:29.520"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:29.493" endtime="20201030 15:58:29.521"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:29.491" endtime="20201030 15:58:29.522"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:22.826" endtime="20201030 15:58:29.523"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201030 15:58:22.699" endtime="20201030 15:58:29.524" critical="yes"></status>
</test>
<test id="s1-s4-t6" name="25 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:58:29.541" endtime="20201030 15:58:29.563"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:29.537" endtime="20201030 15:58:29.566"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:29.613" endtime="20201030 15:58:29.644"></status>
</kw>
<msg timestamp="20201030 15:58:29.646" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:58:29.608" endtime="20201030 15:58:29.648"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:58:29.659" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:58:29.652" endtime="20201030 15:58:29.660"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:58:29.668" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:58:29.663" endtime="20201030 15:58:29.668"></status>
</kw>
<status status="FAIL" starttime="20201030 15:58:29.598" endtime="20201030 15:58:29.670"></status>
</kw>
<status status="FAIL" starttime="20201030 15:58:29.589" endtime="20201030 15:58:29.672"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:29.585" endtime="20201030 15:58:29.673"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:58:29.682" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:58:29.681" endtime="20201030 15:58:29.683"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:29.674" endtime="20201030 15:58:29.684"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:29.583" endtime="20201030 15:58:29.684"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:29.580" endtime="20201030 15:58:29.684"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:29.686" endtime="20201030 15:58:29.689"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:29.574" endtime="20201030 15:58:29.691"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:29.568" endtime="20201030 15:58:29.692"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:29.534" endtime="20201030 15:58:29.693"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>25</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:29.714" endtime="20201030 15:58:35.839"></status>
</kw>
<msg timestamp="20201030 15:58:35.840" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:58:29.711" endtime="20201030 15:58:35.840"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:58:35.846" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:58:35.842" endtime="20201030 15:58:35.847"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:35.854" endtime="20201030 15:58:35.859"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:29.704" endtime="20201030 15:58:35.860"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:29.699" endtime="20201030 15:58:35.862"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:58:35.867" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-interval': 20000, 'bg-timer-count': 25}</msg>
<status status="PASS" starttime="20201030 15:58:35.863" endtime="20201030 15:58:35.868"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:58:35.877" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 15:58:35.875" endtime="20201030 15:58:35.878"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:58:35.882" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 15:58:35.880" endtime="20201030 15:58:35.882"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:35.869" endtime="20201030 15:58:35.884"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:58:35.894" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 15:58:35.891" endtime="20201030 15:58:35.894"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:58:35.898" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 15:58:35.896" endtime="20201030 15:58:35.899"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:35.885" endtime="20201030 15:58:35.901"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:58:35.910" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 15:58:35.908" endtime="20201030 15:58:35.911"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:58:35.915" level="INFO">VALUE: 25</msg>
<status status="PASS" starttime="20201030 15:58:35.913" endtime="20201030 15:58:35.916"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:35.902" endtime="20201030 15:58:35.917"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:35.933" endtime="20201030 15:58:36.290"></status>
</kw>
<msg timestamp="20201030 15:58:36.296" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.165042097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.265385917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:58:35.930" endtime="20201030 15:58:36.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:58:36.313" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.165042097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.265385917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:58:36.299" endtime="20201030 15:58:36.314"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:36.316" endtime="20201030 15:58:36.320"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:35.923" endtime="20201030 15:58:36.321"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:35.918" endtime="20201030 15:58:36.323"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 15:58:36.333" level="INFO">${FILTERED} = [{'diff': 0.10034382000000003}, {'diff': 0.100056639}, {'diff': 0.09965059700000001}, {'diff': 0.10000930500000005}, {'diff': 0.100010292}, {'diff': 0.100010292}, {'diff': 0.10001031900000001}, {'diff...</msg>
<status status="PASS" starttime="20201030 15:58:36.324" endtime="20201030 15:58:36.333"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:58:36.344" level="INFO">${RESULT} = {'diff': [0.10034382000000003, 0.100056639, 0.09965059700000001, 0.10000930500000005, 0.100010292, 0.100010292, 0.10001031900000001, 0.1000103189999999, 5.409999999095305e-07, 5.419999999922709e-07, 5...</msg>
<status status="PASS" starttime="20201030 15:58:36.335" endtime="20201030 15:58:36.344"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:58:36.354" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 15:58:36.352" endtime="20201030 15:58:36.355"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:58:36.359" level="INFO">VALUE: [0.10034382000000003, 0.100056639, 0.09965059700000001, 0.10000930500000005, 0.100010292, 0.100010292, 0.10001031900000001, 0.1000103189999999, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.410000001315751e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 0.10001080600000023, 0.10001030600000016, 0.10001033399999981, 0.10001032000000043, 0.1000103189999999, 0.1000103189999999, 0.1000103189999999, 0.1000103189999999, 0.10001031900000035, 0.10001040299999975, 5.419999999922709e-07, 5.409999999095305e-07, 5.419999995481817e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.410000003536197e-07, 5.410000003536197e-07, 0.10001077800000058, 0.1000103189999999, 0.1000103189999999, 0.1000103189999999]</msg>
<status status="PASS" starttime="20201030 15:58:36.356" endtime="20201030 15:58:36.361"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:36.346" endtime="20201030 15:58:36.362"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:58:36.372" endtime="20201030 15:58:36.393"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:36.367" endtime="20201030 15:58:36.395"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:36.365" endtime="20201030 15:58:36.396"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:29.694" endtime="20201030 15:58:36.396"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201030 15:58:29.529" endtime="20201030 15:58:36.398" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 15:57:51.175" endtime="20201030 15:58:36.423"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_ztimer_benchmarks</item>
<item name="RIOT-Board">nucleo-f103rb</item>
<item name="RIOT-Version">2020.07</item>
</metadata>
<status status="PASS" starttime="20201030 15:54:50.258" endtime="20201030 15:58:36.511"></status>
</suite>
<statistics>
<total>
<stat pass="18" fail="0">Critical Tests</stat>
<stat pass="18" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="18" fail="0">APP_tests_ztimer_benchmarks</stat>
<stat pass="18" fail="0">BOARD_nucleo-f103rb</stat>
<stat pass="10" fail="0">dev</stat>
</tag>
<suite>
<stat pass="18" fail="0" id="s1" name="tests_ztimer_benchmarks">tests_ztimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_ztimer_benchmarks.Timer Version</stat>
<stat pass="9" fail="0" id="s1-s2" name="Timer Overhead">tests_ztimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_ztimer_benchmarks.Sleep Accuracy</stat>
<stat pass="6" fail="0" id="s1-s4" name="Sleep Jitter">tests_ztimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
