<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201030 18:27:04.023" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 18:27:04.593" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 18:27:04.602" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 18:27:05.778" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 18:27:04.592" endtime="20201030 18:27:05.778"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 18:27:05.781" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 18:27:05.779" endtime="20201030 18:27:05.781"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:04.591" endtime="20201030 18:27:05.782"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:05.784" endtime="20201030 18:27:06.011"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:05.782" endtime="20201030 18:27:06.012"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:06.024" endtime="20201030 18:27:06.037"></status>
</kw>
<msg timestamp="20201030 18:27:06.037" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:06.023" endtime="20201030 18:27:06.038"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:06.040" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:06.038" endtime="20201030 18:27:06.040"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:27:06.043" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:27:06.041" endtime="20201030 18:27:06.043"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:06.020" endtime="20201030 18:27:06.044"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:06.018" endtime="20201030 18:27:06.045"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:06.017" endtime="20201030 18:27:06.045"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:27:06.049" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:27:06.049" endtime="20201030 18:27:06.050"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:06.046" endtime="20201030 18:27:06.050"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:06.016" endtime="20201030 18:27:06.050"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:06.015" endtime="20201030 18:27:06.051"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:06.051" endtime="20201030 18:27:06.053"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:06.014" endtime="20201030 18:27:06.053"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:06.054" endtime="20201030 18:27:06.055"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:06.013" endtime="20201030 18:27:06.056"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:04.589" endtime="20201030 18:27:06.056"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:06.062" endtime="20201030 18:27:06.082"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:06.061" endtime="20201030 18:27:06.082"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:06.095" endtime="20201030 18:27:06.108"></status>
</kw>
<msg timestamp="20201030 18:27:06.108" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:06.094" endtime="20201030 18:27:06.108"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:06.111" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:06.109" endtime="20201030 18:27:06.111"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:27:06.114" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:27:06.112" endtime="20201030 18:27:06.114"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:06.091" endtime="20201030 18:27:06.115"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:06.089" endtime="20201030 18:27:06.115"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:06.087" endtime="20201030 18:27:06.116"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:27:06.119" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:27:06.118" endtime="20201030 18:27:06.120"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:06.116" endtime="20201030 18:27:06.120"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:06.086" endtime="20201030 18:27:06.120"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:06.086" endtime="20201030 18:27:06.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:06.121" endtime="20201030 18:27:06.122"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:06.085" endtime="20201030 18:27:06.123"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:06.083" endtime="20201030 18:27:06.123"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:06.059" endtime="20201030 18:27:06.124"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:06.131" endtime="20201030 18:27:06.140"></status>
</kw>
<msg timestamp="20201030 18:27:06.140" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:06.129" endtime="20201030 18:27:06.140"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:06.142" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:06.141" endtime="20201030 18:27:06.143"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:06.143" endtime="20201030 18:27:06.145"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:06.126" endtime="20201030 18:27:06.146"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:06.124" endtime="20201030 18:27:06.146"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:06.150" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201030 18:27:06.149" endtime="20201030 18:27:06.150"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:06.152" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201030 18:27:06.151" endtime="20201030 18:27:06.152"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:06.147" endtime="20201030 18:27:06.153"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:27:06.057" endtime="20201030 18:27:06.153" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 18:27:04.134" endtime="20201030 18:27:06.155"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 18:27:06.206" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 18:27:06.214" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 18:27:07.413" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 18:27:06.205" endtime="20201030 18:27:07.413"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 18:27:07.416" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 18:27:07.414" endtime="20201030 18:27:07.416"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:06.204" endtime="20201030 18:27:07.417"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:07.421" endtime="20201030 18:27:07.725"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:07.418" endtime="20201030 18:27:07.725"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:07.738" endtime="20201030 18:27:07.750"></status>
</kw>
<msg timestamp="20201030 18:27:07.751" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:07.736" endtime="20201030 18:27:07.751"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:07.753" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:07.752" endtime="20201030 18:27:07.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:27:07.756" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:27:07.754" endtime="20201030 18:27:07.756"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:07.734" endtime="20201030 18:27:07.757"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:07.732" endtime="20201030 18:27:07.757"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:07.730" endtime="20201030 18:27:07.758"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:27:07.762" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:27:07.761" endtime="20201030 18:27:07.762"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:07.759" endtime="20201030 18:27:07.762"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:07.730" endtime="20201030 18:27:07.762"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:07.729" endtime="20201030 18:27:07.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:07.763" endtime="20201030 18:27:07.765"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:07.728" endtime="20201030 18:27:07.765"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:07.766" endtime="20201030 18:27:07.767"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:07.726" endtime="20201030 18:27:07.768"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:06.202" endtime="20201030 18:27:07.768"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:07.775" endtime="20201030 18:27:07.794"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:07.772" endtime="20201030 18:27:07.795"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:07.807" endtime="20201030 18:27:07.820"></status>
</kw>
<msg timestamp="20201030 18:27:07.820" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:07.806" endtime="20201030 18:27:07.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:07.823" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:07.822" endtime="20201030 18:27:07.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:27:07.826" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:27:07.824" endtime="20201030 18:27:07.826"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:07.803" endtime="20201030 18:27:07.827"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:07.801" endtime="20201030 18:27:07.827"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:07.800" endtime="20201030 18:27:07.828"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:27:07.833" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:27:07.831" endtime="20201030 18:27:07.833"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:07.829" endtime="20201030 18:27:07.834"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:07.799" endtime="20201030 18:27:07.835"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:07.798" endtime="20201030 18:27:07.835"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:07.836" endtime="20201030 18:27:07.838"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:07.797" endtime="20201030 18:27:07.839"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:07.796" endtime="20201030 18:27:07.840"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:07.771" endtime="20201030 18:27:07.840"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:07.855" endtime="20201030 18:27:07.869"></status>
</kw>
<msg timestamp="20201030 18:27:07.869" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:07.853" endtime="20201030 18:27:07.869"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:07.872" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:07.871" endtime="20201030 18:27:07.872"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:07.873" endtime="20201030 18:27:07.875"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:07.848" endtime="20201030 18:27:07.875"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:07.845" endtime="20201030 18:27:07.876"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:07.882" endtime="20201030 18:27:08.172"></status>
</kw>
<msg timestamp="20201030 18:27:08.175" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.073799389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.073800875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:07.880" endtime="20201030 18:27:08.175"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:08.183" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.073799389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.073800875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:08.176" endtime="20201030 18:27:08.184"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:08.185" endtime="20201030 18:27:08.186"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:07.878" endtime="20201030 18:27:08.187"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:07.876" endtime="20201030 18:27:08.187"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:27:08.211" level="INFO">${debug} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201030 18:27:08.188" endtime="20201030 18:27:08.211"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:08.212" endtime="20201030 18:27:08.214"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:08.217" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:27:08.216" endtime="20201030 18:27:08.218"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:08.222" level="INFO">VALUE: {'sourcediff': [0, 1.4859999999949913e-06, 2.7957999999994598e-05, 1.3749999999979057e-06, 3.0778000000009076e-05, 1.3609999999913969e-06, 3.108400000000067e-05, 1.3610000000052747e-06, 2.8582999999998693e-05, 1.3749999999979057e-06, 2.6708000000000287e-05, 1.3749999999979057e-06, 3.0778000000009076e-05, 1.3609999999913969e-06, 2.7027999999998387e-05, 1.3469999999987659e-06, 2.2986000000002615e-05, 1.3890000000044145e-06, 3.200000000000425e-05, 1.3749999999979057e-06, 2.4527999999995886e-05, 1.3749999999979057e-06, 2.608300000001007e-05, 1.3889999999905367e-06, 3.0430999999997432e-05, 1.3750000000117835e-06, 2.6749999999992058e-05, 1.3469999999987659e-06, 3.0138999999998473e-05, 1.3610000000052747e-06, 3.1068999999994684e-05, 1.3749999999979057e-06, 2.920900000000226e-05, 1.3610000000052747e-06, 2.3986000000003616e-05, 1.3609999999913969e-06, 2.7278000000005576e-05, 1.3890000000044145e-06, 3.073599999998955e-05, 1.3749999999979057e-06, 3.1694000000012656e-05, 1.3889999999905367e-06, 2.4834000000001355e-05, 1.3880000000049408e-06, 2.295900000000295e-05, 1.3749999999979057e-06, 2.6110999999995332e-05, 1.3469999999987659e-06, 2.4556000000008904e-05, 1.3609999999913969e-06, 2.486100000000102e-05, 1.3469999999987659e-06, 2.2986000000002615e-05, 1.3610000000052747e-06, 3.108400000000067e-05, 1.3749999999979057e-06, 3.201399999999688e-05, 1.4019999999975719e-06, 3.22779999999967e-05, 1.3749999999979057e-06, 2.7028000000012264e-05, 1.3609999999913969e-06, 2.516700000000649e-05, 1.3609999999913969e-06, 3.015300000000498e-05, 1.3610000000052747e-06, 2.3290999999994733e-05, 1.3610000000052747e-06, 3.0138999999998473e-05, 1.3749999999979057e-06, 2.765300000000248e-05, 1.4029999999970455e-06, 3.104199999999502e-05, 1.3610000000052747e-06, 2.8582999999998693e-05, 1.3749999999979057e-06, 2.9819000000000373e-05, 1.3749999999979057e-06, 2.612500000000184e-05, 1.4170000000035543e-06, 2.7570000000004535e-05, 1.387999999991063e-06, 3.0458999999996572e-05, 1.3330000000061348e-06, 2.8278000000006576e-05, 1.3889999999905367e-06, 2.5458000000005976e-05, 1.3749999999979057e-06, 3.137500000000015e-05, 1.3610000000052747e-06, 2.9541999999993518e-05, 1.3469999999987659e-06, 2.4555999999995026e-05, 1.3610000000052747e-06, 3.0208000000003787e-05, 1.3199999999990997e-06, 3.108300000000119e-05, 1.3469999999987659e-06, 3.237500000000115e-05, 1.3059999999925909e-06], 'time': [0.073799389, 0.073800875, 0.073828833, 0.073830208, 0.073860986, 0.073862347, 0.073893431, 0.073894792, 0.073923375, 0.07392475, 0.073951458, 0.073952833, 0.073983611, 0.073984972, 0.074012, 0.074013347, 0.074036333, 0.074037722, 0.074069722, 0.074071097, 0.074095625, 0.074097, 0.074123083, 0.074124472, 0.074154903, 0.074156278, 0.074183028, 0.074184375, 0.074214514, 0.074215875, 0.074246944, 0.074248319, 0.074277528, 0.074278889, 0.074302875, 0.074304236, 0.074331514, 0.074332903, 0.074363639, 0.074365014, 0.074396708, 0.074398097, 0.074422931, 0.074424319, 0.074447278, 0.074448653, 0.074474764, 0.074476111, 0.074500667, 0.074502028, 0.074526889, 0.074528236, 0.074551222, 0.074552583, 0.074583667, 0.074585042, 0.074617056, 0.074618458, 0.074650736, 0.074652111, 0.074679139, 0.0746805, 0.074705667, 0.074707028, 0.074737181, 0.074738542, 0.074761833, 0.074763194, 0.074793333, 0.074794708, 0.074822361, 0.074823764, 0.074854806, 0.074856167, 0.07488475, 0.074886125, 0.074915944, 0.074917319, 0.074943444, 0.074944861, 0.074972431, 0.074973819, 0.075004278, 0.075005611, 0.075033889, 0.075035278, 0.075060736, 0.075062111, 0.075093486, 0.075094847, 0.075124389, 0.075125736, 0.075150292, 0.075151653, 0.075181861, 0.075183181, 0.075214264, 0.075215611, 0.075247986, 0.075249292], 'eventsource_diff': [0, 1.4859999999949913e-06, 2.7957999999994598e-05, 1.3749999999979057e-06, 3.0778000000009076e-05, 1.3609999999913969e-06, 3.108400000000067e-05, 1.3610000000052747e-06, 2.8582999999998693e-05, 1.3749999999979057e-06, 2.6708000000000287e-05, 1.3749999999979057e-06, 3.0778000000009076e-05, 1.3609999999913969e-06, 2.7027999999998387e-05, 1.3469999999987659e-06, 2.2986000000002615e-05, 1.3890000000044145e-06, 3.200000000000425e-05, 1.3749999999979057e-06, 2.4527999999995886e-05, 1.3749999999979057e-06, 2.608300000001007e-05, 1.3889999999905367e-06, 3.0430999999997432e-05, 1.3750000000117835e-06, 2.6749999999992058e-05, 1.3469999999987659e-06, 3.0138999999998473e-05, 1.3610000000052747e-06, 3.1068999999994684e-05, 1.3749999999979057e-06, 2.920900000000226e-05, 1.3610000000052747e-06, 2.3986000000003616e-05, 1.3609999999913969e-06, 2.7278000000005576e-05, 1.3890000000044145e-06, 3.073599999998955e-05, 1.3749999999979057e-06, 3.1694000000012656e-05, 1.3889999999905367e-06, 2.4834000000001355e-05, 1.3880000000049408e-06, 2.295900000000295e-05, 1.3749999999979057e-06, 2.6110999999995332e-05, 1.3469999999987659e-06, 2.4556000000008904e-05, 1.3609999999913969e-06, 2.486100000000102e-05, 1.3469999999987659e-06, 2.2986000000002615e-05, 1.3610000000052747e-06, 3.108400000000067e-05, 1.3749999999979057e-06, 3.201399999999688e-05, 1.4019999999975719e-06, 3.22779999999967e-05, 1.3749999999979057e-06, 2.7028000000012264e-05, 1.3609999999913969e-06, 2.516700000000649e-05, 1.3609999999913969e-06, 3.015300000000498e-05, 1.3610000000052747e-06, 2.3290999999994733e-05, 1.3610000000052747e-06, 3.0138999999998473e-05, 1.3749999999979057e-06, 2.765300000000248e-05, 1.4029999999970455e-06, 3.104199999999502e-05, 1.3610000000052747e-06, 2.8582999999998693e-05, 1.3749999999979057e-06, 2.9819000000000373e-05, 1.3749999999979057e-06, 2.612500000000184e-05, 1.4170000000035543e-06, 2.7570000000004535e-05, 1.387999999991063e-06, 3.0458999999996572e-05, 1.3330000000061348e-06, 2.8278000000006576e-05, 1.3889999999905367e-06, 2.5458000000005976e-05, 1.3749999999979057e-06, 3.137500000000015e-05, 1.3610000000052747e-06, 2.9541999999993518e-05, 1.3469999999987659e-06, 2.4555999999995026e-05, 1.3610000000052747e-06, 3.0208000000003787e-05, 1.3199999999990997e-06, 3.108300000000119e-05, 1.3469999999987659e-06, 3.237500000000115e-05, 1.3059999999925909e-06]}</msg>
<status status="PASS" starttime="20201030 18:27:08.218" endtime="20201030 18:27:08.223"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:08.215" endtime="20201030 18:27:08.223"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:08.227" level="INFO">${RESULT} = [{'diff': 1.4859999999949913e-06}, {'diff': 1.3749999999979057e-06}, {'diff': 1.3609999999913969e-06}, {'diff': 1.3610000000052747e-06}, {'diff': 1.3749999999979057e-06}, {'diff': 1.3749999999979057e-...</msg>
<status status="PASS" starttime="20201030 18:27:08.224" endtime="20201030 18:27:08.227"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:08.232" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.4859999999949913e-06, 1.3749999999979057e-06, 1.3609999999913969e-06, 1.3610000000052747e-06, 1.3749999999979057e-06, 1.3749999999979057e-06, 1.3609999999913969e-06, 1.3469999999987659e-06...</msg>
<status status="PASS" starttime="20201030 18:27:08.228" endtime="20201030 18:27:08.232"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:08.236" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:27:08.235" endtime="20201030 18:27:08.236"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:08.238" level="INFO">VALUE: [1.4859999999949913e-06, 1.3749999999979057e-06, 1.3609999999913969e-06, 1.3610000000052747e-06, 1.3749999999979057e-06, 1.3749999999979057e-06, 1.3609999999913969e-06, 1.3469999999987659e-06, 1.3890000000044145e-06, 1.3749999999979057e-06, 1.3749999999979057e-06, 1.3889999999905367e-06, 1.3750000000117835e-06, 1.3469999999987659e-06, 1.3610000000052747e-06, 1.3749999999979057e-06, 1.3610000000052747e-06, 1.3609999999913969e-06, 1.3890000000044145e-06, 1.3749999999979057e-06, 1.3889999999905367e-06, 1.3880000000049408e-06, 1.3749999999979057e-06, 1.3469999999987659e-06, 1.3609999999913969e-06, 1.3469999999987659e-06, 1.3610000000052747e-06, 1.3749999999979057e-06, 1.4019999999975719e-06, 1.3749999999979057e-06, 1.3609999999913969e-06, 1.3609999999913969e-06, 1.3610000000052747e-06, 1.3610000000052747e-06, 1.3749999999979057e-06, 1.4029999999970455e-06, 1.3610000000052747e-06, 1.3749999999979057e-06, 1.3749999999979057e-06, 1.4170000000035543e-06, 1.387999999991063e-06, 1.3330000000061348e-06, 1.3889999999905367e-06, 1.3749999999979057e-06, 1.3610000000052747e-06, 1.3469999999987659e-06, 1.3610000000052747e-06, 1.3199999999990997e-06, 1.3469999999987659e-06, 1.3059999999925909e-06]</msg>
<status status="PASS" starttime="20201030 18:27:08.237" endtime="20201030 18:27:08.239"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:08.233" endtime="20201030 18:27:08.239"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:08.243" endtime="20201030 18:27:08.262"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:08.241" endtime="20201030 18:27:08.263"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:08.240" endtime="20201030 18:27:08.263"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:07.842" endtime="20201030 18:27:08.263"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:07.841" endtime="20201030 18:27:08.264"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:08.275" endtime="20201030 18:27:08.285"></status>
</kw>
<msg timestamp="20201030 18:27:08.285" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:08.274" endtime="20201030 18:27:08.286"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:08.288" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:08.287" endtime="20201030 18:27:08.288"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:08.289" endtime="20201030 18:27:08.291"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:08.271" endtime="20201030 18:27:08.291"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:08.266" endtime="20201030 18:27:08.292"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:08.298" endtime="20201030 18:27:08.585"></status>
</kw>
<msg timestamp="20201030 18:27:08.588" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022501958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022503458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:08.297" endtime="20201030 18:27:08.588"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:08.596" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022501958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022503458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:08.589" endtime="20201030 18:27:08.597"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:08.598" endtime="20201030 18:27:08.599"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:08.294" endtime="20201030 18:27:08.600"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:08.292" endtime="20201030 18:27:08.600"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:27:08.625" level="INFO">${debug} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201030 18:27:08.601" endtime="20201030 18:27:08.625"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:08.626" endtime="20201030 18:27:08.627"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:08.631" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:27:08.630" endtime="20201030 18:27:08.631"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:08.635" level="INFO">VALUE: {'sourcediff': [0, 1.5000000000015001e-06, 2.7027999999998387e-05, 1.3610000000018052e-06, 2.9819999999999847e-05, 1.389000000000945e-06, 2.3276999999998632e-05, 1.3750000000013751e-06, 2.8264000000000067e-05, 1.3889999999974756e-06, 2.669500000000019e-05, 1.3750000000013751e-06, 2.2985999999999146e-05, 1.3610000000018052e-06, 3.1082999999997724e-05, 1.403000000000515e-06, 2.4194000000001686e-05, 1.3609999999983358e-06, 2.920899999999879e-05, 1.389000000000945e-06, 3.167999999999921e-05, 1.389000000000945e-06, 2.6110999999998802e-05, 1.3470000000022353e-06, 2.39169999999983e-05, 1.3610000000018052e-06, 2.7347000000000482e-05, 1.3749999999979057e-06, 3.0125000000002372e-05, 1.3619999999978094e-06, 2.8290999999999733e-05, 1.3610000000018052e-06, 2.640299999999776e-05, 1.389000000000945e-06, 2.6999999999999247e-05, 1.443999999999751e-06, 2.944500000000294e-05, 1.3749999999979057e-06, 2.7042000000001426e-05, 1.3469999999987659e-06, 2.3930000000001866e-05, 1.3749999999979057e-06, 2.794500000000144e-05, 1.3889999999974756e-06, 2.4208000000001256e-05, 1.3750000000013751e-06, 2.9596999999999263e-05, 1.2919999999999598e-06, 2.3292000000001145e-05, 1.387999999998002e-06, 3.230599999999931e-05, 1.389000000000945e-06, 2.7319000000001342e-05, 1.3749999999979057e-06, 2.3278000000001575e-05, 1.3749999999979057e-06, 2.4542000000002395e-05, 1.3609999999983358e-06, 3.201400000000035e-05, 1.403000000000515e-06, 2.387499999999959e-05, 1.3880000000014714e-06, 2.8569999999998597e-05, 1.3610000000018052e-06, 2.9221999999998888e-05, 1.3609999999983358e-06, 2.3597999999999675e-05, 1.3750000000013751e-06, 2.2666000000001046e-05, 1.3609999999983358e-06, 2.8334000000001386e-05, 1.318999999999626e-06, 2.515299999999998e-05, 1.389000000000945e-06, 2.640299999999776e-05, 1.3610000000018052e-06, 3.201400000000035e-05, 1.3469999999987659e-06, 3.109700000000076e-05, 1.3469999999987659e-06, 2.5486000000001646e-05, 1.3889999999974756e-06, 3.0431000000000902e-05, 1.3610000000018052e-06, 2.4221999999997357e-05, 1.389000000000945e-06, 2.6096999999999232e-05, 1.3610000000018052e-06, 2.513900000000041e-05, 1.403000000000515e-06, 2.7332999999997443e-05, 1.348000000001709e-06, 2.4540999999999452e-05, 1.389000000000945e-06, 3.105599999999806e-05, 1.3750000000013751e-06, 2.486100000000102e-05, 1.3469999999987659e-06, 3.084700000000051e-05, 1.2919999999999598e-06], 'time': [0.022501958, 0.022503458, 0.022530486, 0.022531847, 0.022561667, 0.022563056, 0.022586333, 0.022587708, 0.022615972, 0.022617361, 0.022644056, 0.022645431, 0.022668417, 0.022669778, 0.022700861, 0.022702264, 0.022726458, 0.022727819, 0.022757028, 0.022758417, 0.022790097, 0.022791486, 0.022817597, 0.022818944, 0.022842861, 0.022844222, 0.022871569, 0.022872944, 0.022903069, 0.022904431, 0.022932722, 0.022934083, 0.022960486, 0.022961875, 0.022988875, 0.022990319, 0.023019764, 0.023021139, 0.023048181, 0.023049528, 0.023073458, 0.023074833, 0.023102778, 0.023104167, 0.023128375, 0.02312975, 0.023159347, 0.023160639, 0.023183931, 0.023185319, 0.023217625, 0.023219014, 0.023246333, 0.023247708, 0.023270986, 0.023272361, 0.023296903, 0.023298264, 0.023330278, 0.023331681, 0.023355556, 0.023356944, 0.023385514, 0.023386875, 0.023416097, 0.023417458, 0.023441056, 0.023442431, 0.023465097, 0.023466458, 0.023494792, 0.023496111, 0.023521264, 0.023522653, 0.023549056, 0.023550417, 0.023582431, 0.023583778, 0.023614875, 0.023616222, 0.023641708, 0.023643097, 0.023673528, 0.023674889, 0.023699111, 0.0237005, 0.023726597, 0.023727958, 0.023753097, 0.0237545, 0.023781833, 0.023783181, 0.023807722, 0.023809111, 0.023840167, 0.023841542, 0.023866403, 0.02386775, 0.023898597, 0.023899889], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING'], 'source_diff': [0, 1.5000000000015001e-06, 2.7027999999998387e-05, 1.3610000000018052e-06, 2.9819999999999847e-05, 1.389000000000945e-06, 2.3276999999998632e-05, 1.3750000000013751e-06, 2.8264000000000067e-05, 1.3889999999974756e-06, 2.669500000000019e-05, 1.3750000000013751e-06, 2.2985999999999146e-05, 1.3610000000018052e-06, 3.1082999999997724e-05, 1.403000000000515e-06, 2.4194000000001686e-05, 1.3609999999983358e-06, 2.920899999999879e-05, 1.389000000000945e-06, 3.167999999999921e-05, 1.389000000000945e-06, 2.6110999999998802e-05, 1.3470000000022353e-06, 2.39169999999983e-05, 1.3610000000018052e-06, 2.7347000000000482e-05, 1.3749999999979057e-06, 3.0125000000002372e-05, 1.3619999999978094e-06, 2.8290999999999733e-05, 1.3610000000018052e-06, 2.640299999999776e-05, 1.389000000000945e-06, 2.6999999999999247e-05, 1.443999999999751e-06, 2.944500000000294e-05, 1.3749999999979057e-06, 2.7042000000001426e-05, 1.3469999999987659e-06, 2.3930000000001866e-05, 1.3749999999979057e-06, 2.794500000000144e-05, 1.3889999999974756e-06, 2.4208000000001256e-05, 1.3750000000013751e-06, 2.9596999999999263e-05, 1.2919999999999598e-06, 2.3292000000001145e-05, 1.387999999998002e-06, 3.230599999999931e-05, 1.389000000000945e-06, 2.7319000000001342e-05, 1.3749999999979057e-06, 2.3278000000001575e-05, 1.3749999999979057e-06, 2.4542000000002395e-05, 1.3609999999983358e-06, 3.201400000000035e-05, 1.403000000000515e-06, 2.387499999999959e-05, 1.3880000000014714e-06, 2.8569999999998597e-05, 1.3610000000018052e-06, 2.9221999999998888e-05, 1.3609999999983358e-06, 2.3597999999999675e-05, 1.3750000000013751e-06, 2.2666000000001046e-05, 1.3609999999983358e-06, 2.8334000000001386e-05, 1.318999999999626e-06, 2.515299999999998e-05, 1.389000000000945e-06, 2.640299999999776e-05, 1.3610000000018052e-06, 3.201400000000035e-05, 1.3469999999987659e-06, 3.109700000000076e-05, 1.3469999999987659e-06, 2.5486000000001646e-05, 1.3889999999974756e-06, 3.0431000000000902e-05, 1.3610000000018052e-06, 2.4221999999997357e-05, 1.389000000000945e-06, 2.6096999999999232e-05, 1.3610000000018052e-06, 2.513900000000041e-05, 1.403000000000515e-06, 2.7332999999997443e-05, 1.348000000001709e-06, 2.4540999999999452e-05, 1.389000000000945e-06, 3.105599999999806e-05, 1.3750000000013751e-06, 2.486100000000102e-05, 1.3469999999987659e-06, 3.084700000000051e-05, 1.2919999999999598e-06]}</msg>
<status status="PASS" starttime="20201030 18:27:08.632" endtime="20201030 18:27:08.636"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:08.628" endtime="20201030 18:27:08.636"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:08.640" level="INFO">${RESULT} = [{'diff': 1.5000000000015001e-06}, {'diff': 1.3610000000018052e-06}, {'diff': 1.389000000000945e-06}, {'diff': 1.3750000000013751e-06}, {'diff': 1.3889999999974756e-06}, {'diff': 1.3750000000013751e-0...</msg>
<status status="PASS" starttime="20201030 18:27:08.637" endtime="20201030 18:27:08.641"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:08.645" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.5000000000015001e-06, 1.3610000000018052e-06, 1.389000000000945e-06, 1.3750000000013751e-06, 1.3889999999974756e-06, 1.3750000000013751e-06, 1.3610000000018052e-06, 1.403000000000515e-06, ...</msg>
<status status="PASS" starttime="20201030 18:27:08.641" endtime="20201030 18:27:08.645"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:08.649" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:27:08.648" endtime="20201030 18:27:08.650"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:08.652" level="INFO">VALUE: [1.5000000000015001e-06, 1.3610000000018052e-06, 1.389000000000945e-06, 1.3750000000013751e-06, 1.3889999999974756e-06, 1.3750000000013751e-06, 1.3610000000018052e-06, 1.403000000000515e-06, 1.3609999999983358e-06, 1.389000000000945e-06, 1.389000000000945e-06, 1.3470000000022353e-06, 1.3610000000018052e-06, 1.3749999999979057e-06, 1.3619999999978094e-06, 1.3610000000018052e-06, 1.389000000000945e-06, 1.443999999999751e-06, 1.3749999999979057e-06, 1.3469999999987659e-06, 1.3749999999979057e-06, 1.3889999999974756e-06, 1.3750000000013751e-06, 1.2919999999999598e-06, 1.387999999998002e-06, 1.389000000000945e-06, 1.3749999999979057e-06, 1.3749999999979057e-06, 1.3609999999983358e-06, 1.403000000000515e-06, 1.3880000000014714e-06, 1.3610000000018052e-06, 1.3609999999983358e-06, 1.3750000000013751e-06, 1.3609999999983358e-06, 1.318999999999626e-06, 1.389000000000945e-06, 1.3610000000018052e-06, 1.3469999999987659e-06, 1.3469999999987659e-06, 1.3889999999974756e-06, 1.3610000000018052e-06, 1.389000000000945e-06, 1.3610000000018052e-06, 1.403000000000515e-06, 1.348000000001709e-06, 1.389000000000945e-06, 1.3750000000013751e-06, 1.3469999999987659e-06, 1.2919999999999598e-06]</msg>
<status status="PASS" starttime="20201030 18:27:08.650" endtime="20201030 18:27:08.652"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:08.645" endtime="20201030 18:27:08.653"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:08.656" endtime="20201030 18:27:08.676"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:08.655" endtime="20201030 18:27:08.676"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:08.654" endtime="20201030 18:27:08.677"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:08.264" endtime="20201030 18:27:08.677"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:08.264" endtime="20201030 18:27:08.677"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:08.685" endtime="20201030 18:27:08.694"></status>
</kw>
<msg timestamp="20201030 18:27:08.695" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:08.683" endtime="20201030 18:27:08.695"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:08.697" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:08.696" endtime="20201030 18:27:08.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:08.698" endtime="20201030 18:27:08.700"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:08.681" endtime="20201030 18:27:08.700"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:08.679" endtime="20201030 18:27:08.701"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:08.707" endtime="20201030 18:27:08.995"></status>
</kw>
<msg timestamp="20201030 18:27:08.998" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018555917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018557417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:08.706" endtime="20201030 18:27:08.998"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:09.006" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018555917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018557417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:08.999" endtime="20201030 18:27:09.007"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:09.008" endtime="20201030 18:27:09.009"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:08.703" endtime="20201030 18:27:09.010"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:08.702" endtime="20201030 18:27:09.010"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:27:09.035" level="INFO">${debug} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201030 18:27:09.011" endtime="20201030 18:27:09.035"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:09.036" endtime="20201030 18:27:09.037"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:09.041" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:27:09.040" endtime="20201030 18:27:09.041"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:09.045" level="INFO">VALUE: {'sourcediff': [0, 1.4999999999980307e-06, 2.6096999999999232e-05, 1.389000000000945e-06, 3.108300000000119e-05, 1.3469999999987659e-06, 3.231999999999888e-05, 1.3750000000013751e-06, 2.4527999999999356e-05, 1.3880000000014714e-06, 2.8264000000000067e-05, 1.3609999999983358e-06, 2.8277999999999637e-05, 1.389000000000945e-06, 2.794500000000144e-05, 1.3749999999979057e-06, 2.2680000000000616e-05, 1.3610000000018052e-06, 3.199999999999731e-05, 1.3750000000013751e-06, 2.64170000000008e-05, 1.3609999999983358e-06, 3.108300000000119e-05, 1.3609999999983358e-06, 2.9862000000002026e-05, 1.3469999999987659e-06, 3.170800000000182e-05, 1.3609999999983358e-06, 2.7042000000001426e-05, 1.3609999999983358e-06, 2.7958000000001537e-05, 1.3749999999979057e-06, 2.6735999999999427e-05, 1.3620000000012789e-06, 2.6082999999999662e-05, 1.389000000000945e-06, 2.486100000000102e-05, 1.3609999999983358e-06, 2.638900000000166e-05, 1.3749999999979057e-06, 2.7042000000001426e-05, 1.443999999999751e-06, 2.537500000000109e-05, 1.3749999999979057e-06, 2.268100000000009e-05, 1.3610000000018052e-06, 2.7054999999998053e-05, 1.3470000000022353e-06, 2.920899999999879e-05, 1.389000000000945e-06, 3.1068999999998154e-05, 1.3610000000018052e-06, 2.3305999999997246e-05, 1.3610000000018052e-06, 3.077799999999867e-05, 1.4160000000006112e-06, 2.9792000000000707e-05, 1.3749999999979057e-06, 2.4528000000002825e-05, 1.3609999999983358e-06, 2.9582999999999693e-05, 1.3059999999995298e-06, 3.0458000000000568e-05, 1.389000000000945e-06, 2.390299999999873e-05, 1.3750000000013751e-06, 2.362499999999934e-05, 1.3610000000018052e-06, 2.2958000000000006e-05, 1.3889999999974756e-06, 2.8264000000000067e-05, 1.3750000000013751e-06, 2.4305999999998246e-05, 1.3610000000018052e-06, 3.19579999999986e-05, 1.3610000000018052e-06, 2.7652999999999012e-05, 1.389000000000945e-06, 3.137500000000015e-05, 1.3609999999983358e-06, 2.4249999999999966e-05, 1.3470000000022353e-06, 2.4860999999997552e-05, 1.3610000000018052e-06, 3.170899999999782e-05, 1.389000000000945e-06, 3.0137999999999e-05, 1.3620000000012789e-06, 3.2318999999999404e-05, 1.389000000000945e-06, 2.6694000000000717e-05, 1.3889999999974756e-06, 2.8306000000002246e-05, 1.332999999999196e-06, 2.4222000000000826e-05, 1.3609999999983358e-06, 3.170900000000129e-05, 1.3749999999979057e-06, 3.109700000000076e-05, 1.3610000000018052e-06], 'time': [0.018555917, 0.018557417, 0.018583514, 0.018584903, 0.018615986, 0.018617333, 0.018649653, 0.018651028, 0.018675556, 0.018676944, 0.018705208, 0.018706569, 0.018734847, 0.018736236, 0.018764181, 0.018765556, 0.018788236, 0.018789597, 0.018821597, 0.018822972, 0.018849389, 0.01885075, 0.018881833, 0.018883194, 0.018913056, 0.018914403, 0.018946111, 0.018947472, 0.018974514, 0.018975875, 0.019003833, 0.019005208, 0.019031944, 0.019033306, 0.019059389, 0.019060778, 0.019085639, 0.019087, 0.019113389, 0.019114764, 0.019141806, 0.01914325, 0.019168625, 0.01917, 0.019192681, 0.019194042, 0.019221097, 0.019222444, 0.019251653, 0.019253042, 0.019284111, 0.019285472, 0.019308778, 0.019310139, 0.019340917, 0.019342333, 0.019372125, 0.0193735, 0.019398028, 0.019399389, 0.019428972, 0.019430278, 0.019460736, 0.019462125, 0.019486028, 0.019487403, 0.019511028, 0.019512389, 0.019535347, 0.019536736, 0.019565, 0.019566375, 0.019590681, 0.019592042, 0.019624, 0.019625361, 0.019653014, 0.019654403, 0.019685778, 0.019687139, 0.019711389, 0.019712736, 0.019737597, 0.019738958, 0.019770667, 0.019772056, 0.019802194, 0.019803556, 0.019835875, 0.019837264, 0.019863958, 0.019865347, 0.019893653, 0.019894986, 0.019919208, 0.019920569, 0.019952278, 0.019953653, 0.01998475, 0.019986111], 'eventsource_diff': [0, 1.4999999999980307e-06, 2.6096999999999232e-05, 1.389000000000945e-06, 3.108300000000119e-05, 1.3469999999987659e-06, 3.231999999999888e-05, 1.3750000000013751e-06, 2.4527999999999356e-05, 1.3880000000014714e-06, 2.8264000000000067e-05, 1.3609999999983358e-06, 2.8277999999999637e-05, 1.389000000000945e-06, 2.794500000000144e-05, 1.3749999999979057e-06, 2.2680000000000616e-05, 1.3610000000018052e-06, 3.199999999999731e-05, 1.3750000000013751e-06, 2.64170000000008e-05, 1.3609999999983358e-06, 3.108300000000119e-05, 1.3609999999983358e-06, 2.9862000000002026e-05, 1.3469999999987659e-06, 3.170800000000182e-05, 1.3609999999983358e-06, 2.7042000000001426e-05, 1.3609999999983358e-06, 2.7958000000001537e-05, 1.3749999999979057e-06, 2.6735999999999427e-05, 1.3620000000012789e-06, 2.6082999999999662e-05, 1.389000000000945e-06, 2.486100000000102e-05, 1.3609999999983358e-06, 2.638900000000166e-05, 1.3749999999979057e-06, 2.7042000000001426e-05, 1.443999999999751e-06, 2.537500000000109e-05, 1.3749999999979057e-06, 2.268100000000009e-05, 1.3610000000018052e-06, 2.7054999999998053e-05, 1.3470000000022353e-06, 2.920899999999879e-05, 1.389000000000945e-06, 3.1068999999998154e-05, 1.3610000000018052e-06, 2.3305999999997246e-05, 1.3610000000018052e-06, 3.077799999999867e-05, 1.4160000000006112e-06, 2.9792000000000707e-05, 1.3749999999979057e-06, 2.4528000000002825e-05, 1.3609999999983358e-06, 2.9582999999999693e-05, 1.3059999999995298e-06, 3.0458000000000568e-05, 1.389000000000945e-06, 2.390299999999873e-05, 1.3750000000013751e-06, 2.362499999999934e-05, 1.3610000000018052e-06, 2.2958000000000006e-05, 1.3889999999974756e-06, 2.8264000000000067e-05, 1.3750000000013751e-06, 2.4305999999998246e-05, 1.3610000000018052e-06, 3.19579999999986e-05, 1.3610000000018052e-06, 2.7652999999999012e-05, 1.389000000000945e-06, 3.137500000000015e-05, 1.3609999999983358e-06, 2.4249999999999966e-05, 1.3470000000022353e-06, 2.4860999999997552e-05, 1.3610000000018052e-06, 3.170899999999782e-05, 1.389000000000945e-06, 3.0137999999999e-05, 1.3620000000012789e-06, 3.2318999999999404e-05, 1.389000000000945e-06, 2.6694000000000717e-05, 1.3889999999974756e-06, 2.8306000000002246e-05, 1.332999999999196e-06, 2.4222000000000826e-05, 1.3609999999983358e-06, 3.170900000000129e-05, 1.3749999999979057e-06, 3.109700000000076e-05, 1.3610000000018052e-06]}</msg>
<status status="PASS" starttime="20201030 18:27:09.042" endtime="20201030 18:27:09.046"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:09.038" endtime="20201030 18:27:09.047"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:09.051" level="INFO">${RESULT} = [{'diff': 1.4999999999980307e-06}, {'diff': 1.389000000000945e-06}, {'diff': 1.3469999999987659e-06}, {'diff': 1.3750000000013751e-06}, {'diff': 1.3880000000014714e-06}, {'diff': 1.3609999999983358e-0...</msg>
<status status="PASS" starttime="20201030 18:27:09.047" endtime="20201030 18:27:09.051"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:09.055" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.4999999999980307e-06, 1.389000000000945e-06, 1.3469999999987659e-06, 1.3750000000013751e-06, 1.3880000000014714e-06, 1.3609999999983358e-06, 1.389000000000945e-06, 1.3749999999979057e-06, ...</msg>
<status status="PASS" starttime="20201030 18:27:09.052" endtime="20201030 18:27:09.055"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:09.059" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:27:09.058" endtime="20201030 18:27:09.059"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:09.061" level="INFO">VALUE: [1.4999999999980307e-06, 1.389000000000945e-06, 1.3469999999987659e-06, 1.3750000000013751e-06, 1.3880000000014714e-06, 1.3609999999983358e-06, 1.389000000000945e-06, 1.3749999999979057e-06, 1.3610000000018052e-06, 1.3750000000013751e-06, 1.3609999999983358e-06, 1.3609999999983358e-06, 1.3469999999987659e-06, 1.3609999999983358e-06, 1.3609999999983358e-06, 1.3749999999979057e-06, 1.3620000000012789e-06, 1.389000000000945e-06, 1.3609999999983358e-06, 1.3749999999979057e-06, 1.443999999999751e-06, 1.3749999999979057e-06, 1.3610000000018052e-06, 1.3470000000022353e-06, 1.389000000000945e-06, 1.3610000000018052e-06, 1.3610000000018052e-06, 1.4160000000006112e-06, 1.3749999999979057e-06, 1.3609999999983358e-06, 1.3059999999995298e-06, 1.389000000000945e-06, 1.3750000000013751e-06, 1.3610000000018052e-06, 1.3889999999974756e-06, 1.3750000000013751e-06, 1.3610000000018052e-06, 1.3610000000018052e-06, 1.389000000000945e-06, 1.3609999999983358e-06, 1.3470000000022353e-06, 1.3610000000018052e-06, 1.389000000000945e-06, 1.3620000000012789e-06, 1.389000000000945e-06, 1.3889999999974756e-06, 1.332999999999196e-06, 1.3609999999983358e-06, 1.3749999999979057e-06, 1.3610000000018052e-06]</msg>
<status status="PASS" starttime="20201030 18:27:09.060" endtime="20201030 18:27:09.062"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:09.055" endtime="20201030 18:27:09.062"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:09.066" endtime="20201030 18:27:09.085"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:09.064" endtime="20201030 18:27:09.086"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:09.063" endtime="20201030 18:27:09.086"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:08.678" endtime="20201030 18:27:09.086"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:08.677" endtime="20201030 18:27:09.086"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:09.095" endtime="20201030 18:27:09.105"></status>
</kw>
<msg timestamp="20201030 18:27:09.105" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:09.094" endtime="20201030 18:27:09.106"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:09.108" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:09.106" endtime="20201030 18:27:09.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:09.109" endtime="20201030 18:27:09.111"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:09.090" endtime="20201030 18:27:09.111"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:09.089" endtime="20201030 18:27:09.112"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:09.118" endtime="20201030 18:27:09.404"></status>
</kw>
<msg timestamp="20201030 18:27:09.407" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019716819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019718319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:09.116" endtime="20201030 18:27:09.407"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:09.415" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019716819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019718319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:09.408" endtime="20201030 18:27:09.416"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:09.417" endtime="20201030 18:27:09.419"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:09.114" endtime="20201030 18:27:09.419"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:09.112" endtime="20201030 18:27:09.420"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:27:09.444" level="INFO">${debug} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201030 18:27:09.420" endtime="20201030 18:27:09.445"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:09.445" endtime="20201030 18:27:09.447"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:09.450" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:27:09.449" endtime="20201030 18:27:09.451"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:09.454" level="INFO">VALUE: {'sourcediff': [0, 1.5000000000015001e-06, 2.266699999999705e-05, 1.3750000000013751e-06, 2.7042000000001426e-05, 1.3469999999987659e-06, 3.173600000000096e-05, 1.3609999999983358e-06, 2.8264000000000067e-05, 1.389000000000945e-06, 2.8582999999998693e-05, 1.3750000000013751e-06, 3.080599999999781e-05, 1.3190000000030955e-06, 3.233399999999845e-05, 1.3610000000018052e-06, 3.201399999999688e-05, 1.443999999999751e-06, 2.6986000000003146e-05, 1.3609999999983358e-06, 2.295899999999948e-05, 1.389000000000945e-06, 2.4832999999998412e-05, 1.389000000000945e-06, 3.2304999999999834e-05, 1.389000000000945e-06, 2.4584000000001105e-05, 1.318999999999626e-06, 2.515299999999998e-05, 1.3889999999974756e-06, 2.6152000000001507e-05, 1.3059999999995298e-06, 2.5472000000002076e-05, 1.3889999999974756e-06, 2.7638999999999442e-05, 1.3610000000018052e-06, 3.2096999999998294e-05, 1.3060000000029992e-06, 2.513899999999694e-05, 1.3750000000013751e-06, 2.6096999999999232e-05, 1.3750000000013751e-06, 3.07639999999991e-05, 1.3750000000013751e-06, 2.5832999999999412e-05, 1.3339999999986696e-06, 3.0458000000000568e-05, 1.3750000000013751e-06, 2.7638999999999442e-05, 1.3609999999983358e-06, 3.170800000000182e-05, 1.3749999999979057e-06, 2.4528000000002825e-05, 1.3749999999979057e-06, 2.3292000000001145e-05, 1.3609999999983358e-06, 3.076400000000257e-05, 1.4159999999971418e-06, 2.9167000000000082e-05, 1.3750000000013751e-06, 2.8582999999998693e-05, 1.389000000000945e-06, 3.138899999999972e-05, 1.389000000000945e-06, 2.5443999999999467e-05, 1.403000000000515e-06, 2.295899999999948e-05, 1.3469999999987659e-06, 2.60970000000027e-05, 1.3889999999974756e-06, 2.640300000000123e-05, 1.389000000000945e-06, 2.9180000000000178e-05, 1.3609999999983358e-06, 3.045900000000004e-05, 1.3750000000013751e-06, 3.2318999999999404e-05, 1.3750000000013751e-06, 2.515299999999998e-05, 1.3749999999979057e-06, 2.6416000000001327e-05, 1.3619999999978094e-06, 2.4236000000000396e-05, 1.3750000000013751e-06, 2.8568999999999123e-05, 1.389000000000945e-06, 2.5764000000001036e-05, 1.3749999999979057e-06, 3.138899999999972e-05, 1.389000000000945e-06, 2.8889000000000692e-05, 1.3749999999979057e-06, 2.5486000000001646e-05, 1.3609999999983358e-06, 2.8264000000000067e-05, 1.389000000000945e-06, 2.3915999999998827e-05, 1.3750000000013751e-06, 2.35970000000002e-05, 1.3620000000012789e-06], 'time': [0.019716819, 0.019718319, 0.019740986, 0.019742361, 0.019769403, 0.01977075, 0.019802486, 0.019803847, 0.019832111, 0.0198335, 0.019862083, 0.019863458, 0.019894264, 0.019895583, 0.019927917, 0.019929278, 0.019961292, 0.019962736, 0.019989722, 0.019991083, 0.020014042, 0.020015431, 0.020040264, 0.020041653, 0.020073958, 0.020075347, 0.020099931, 0.02010125, 0.020126403, 0.020127792, 0.020153944, 0.02015525, 0.020180722, 0.020182111, 0.02020975, 0.020211111, 0.020243208, 0.020244514, 0.020269653, 0.020271028, 0.020297125, 0.0202985, 0.020329264, 0.020330639, 0.020356472, 0.020357806, 0.020388264, 0.020389639, 0.020417278, 0.020418639, 0.020450347, 0.020451722, 0.02047625, 0.020477625, 0.020500917, 0.020502278, 0.020533042, 0.020534458, 0.020563625, 0.020565, 0.020593583, 0.020594972, 0.020626361, 0.02062775, 0.020653194, 0.020654597, 0.020677556, 0.020678903, 0.020705, 0.020706389, 0.020732792, 0.020734181, 0.020763361, 0.020764722, 0.020795181, 0.020796556, 0.020828875, 0.02083025, 0.020855403, 0.020856778, 0.020883194, 0.020884556, 0.020908792, 0.020910167, 0.020938736, 0.020940125, 0.020965889, 0.020967264, 0.020998653, 0.021000042, 0.021028931, 0.021030306, 0.021055792, 0.021057153, 0.021085417, 0.021086806, 0.021110722, 0.021112097, 0.021135694, 0.021137056], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING'], 'source_diff': [0, 1.5000000000015001e-06, 2.266699999999705e-05, 1.3750000000013751e-06, 2.7042000000001426e-05, 1.3469999999987659e-06, 3.173600000000096e-05, 1.3609999999983358e-06, 2.8264000000000067e-05, 1.389000000000945e-06, 2.8582999999998693e-05, 1.3750000000013751e-06, 3.080599999999781e-05, 1.3190000000030955e-06, 3.233399999999845e-05, 1.3610000000018052e-06, 3.201399999999688e-05, 1.443999999999751e-06, 2.6986000000003146e-05, 1.3609999999983358e-06, 2.295899999999948e-05, 1.389000000000945e-06, 2.4832999999998412e-05, 1.389000000000945e-06, 3.2304999999999834e-05, 1.389000000000945e-06, 2.4584000000001105e-05, 1.318999999999626e-06, 2.515299999999998e-05, 1.3889999999974756e-06, 2.6152000000001507e-05, 1.3059999999995298e-06, 2.5472000000002076e-05, 1.3889999999974756e-06, 2.7638999999999442e-05, 1.3610000000018052e-06, 3.2096999999998294e-05, 1.3060000000029992e-06, 2.513899999999694e-05, 1.3750000000013751e-06, 2.6096999999999232e-05, 1.3750000000013751e-06, 3.07639999999991e-05, 1.3750000000013751e-06, 2.5832999999999412e-05, 1.3339999999986696e-06, 3.0458000000000568e-05, 1.3750000000013751e-06, 2.7638999999999442e-05, 1.3609999999983358e-06, 3.170800000000182e-05, 1.3749999999979057e-06, 2.4528000000002825e-05, 1.3749999999979057e-06, 2.3292000000001145e-05, 1.3609999999983358e-06, 3.076400000000257e-05, 1.4159999999971418e-06, 2.9167000000000082e-05, 1.3750000000013751e-06, 2.8582999999998693e-05, 1.389000000000945e-06, 3.138899999999972e-05, 1.389000000000945e-06, 2.5443999999999467e-05, 1.403000000000515e-06, 2.295899999999948e-05, 1.3469999999987659e-06, 2.60970000000027e-05, 1.3889999999974756e-06, 2.640300000000123e-05, 1.389000000000945e-06, 2.9180000000000178e-05, 1.3609999999983358e-06, 3.045900000000004e-05, 1.3750000000013751e-06, 3.2318999999999404e-05, 1.3750000000013751e-06, 2.515299999999998e-05, 1.3749999999979057e-06, 2.6416000000001327e-05, 1.3619999999978094e-06, 2.4236000000000396e-05, 1.3750000000013751e-06, 2.8568999999999123e-05, 1.389000000000945e-06, 2.5764000000001036e-05, 1.3749999999979057e-06, 3.138899999999972e-05, 1.389000000000945e-06, 2.8889000000000692e-05, 1.3749999999979057e-06, 2.5486000000001646e-05, 1.3609999999983358e-06, 2.8264000000000067e-05, 1.389000000000945e-06, 2.3915999999998827e-05, 1.3750000000013751e-06, 2.35970000000002e-05, 1.3620000000012789e-06]}</msg>
<status status="PASS" starttime="20201030 18:27:09.451" endtime="20201030 18:27:09.455"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:09.448" endtime="20201030 18:27:09.456"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:09.460" level="INFO">${RESULT} = [{'diff': 1.5000000000015001e-06}, {'diff': 1.3750000000013751e-06}, {'diff': 1.3469999999987659e-06}, {'diff': 1.3609999999983358e-06}, {'diff': 1.389000000000945e-06}, {'diff': 1.3750000000013751e-0...</msg>
<status status="PASS" starttime="20201030 18:27:09.457" endtime="20201030 18:27:09.460"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:09.465" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.5000000000015001e-06, 1.3750000000013751e-06, 1.3469999999987659e-06, 1.3609999999983358e-06, 1.389000000000945e-06, 1.3750000000013751e-06, 1.3190000000030955e-06, 1.3610000000018052e-06,...</msg>
<status status="PASS" starttime="20201030 18:27:09.461" endtime="20201030 18:27:09.465"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:09.469" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:27:09.468" endtime="20201030 18:27:09.469"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:09.471" level="INFO">VALUE: [1.5000000000015001e-06, 1.3750000000013751e-06, 1.3469999999987659e-06, 1.3609999999983358e-06, 1.389000000000945e-06, 1.3750000000013751e-06, 1.3190000000030955e-06, 1.3610000000018052e-06, 1.443999999999751e-06, 1.3609999999983358e-06, 1.389000000000945e-06, 1.389000000000945e-06, 1.389000000000945e-06, 1.318999999999626e-06, 1.3889999999974756e-06, 1.3059999999995298e-06, 1.3889999999974756e-06, 1.3610000000018052e-06, 1.3060000000029992e-06, 1.3750000000013751e-06, 1.3750000000013751e-06, 1.3750000000013751e-06, 1.3339999999986696e-06, 1.3750000000013751e-06, 1.3609999999983358e-06, 1.3749999999979057e-06, 1.3749999999979057e-06, 1.3609999999983358e-06, 1.4159999999971418e-06, 1.3750000000013751e-06, 1.389000000000945e-06, 1.389000000000945e-06, 1.403000000000515e-06, 1.3469999999987659e-06, 1.3889999999974756e-06, 1.389000000000945e-06, 1.3609999999983358e-06, 1.3750000000013751e-06, 1.3750000000013751e-06, 1.3749999999979057e-06, 1.3619999999978094e-06, 1.3750000000013751e-06, 1.389000000000945e-06, 1.3749999999979057e-06, 1.389000000000945e-06, 1.3749999999979057e-06, 1.3609999999983358e-06, 1.389000000000945e-06, 1.3750000000013751e-06, 1.3620000000012789e-06]</msg>
<status status="PASS" starttime="20201030 18:27:09.470" endtime="20201030 18:27:09.472"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:09.466" endtime="20201030 18:27:09.472"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:09.476" endtime="20201030 18:27:09.495"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:09.474" endtime="20201030 18:27:09.496"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:09.473" endtime="20201030 18:27:09.496"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:09.087" endtime="20201030 18:27:09.496"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:09.087" endtime="20201030 18:27:09.497"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:09.504" endtime="20201030 18:27:09.514"></status>
</kw>
<msg timestamp="20201030 18:27:09.514" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:09.503" endtime="20201030 18:27:09.515"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:09.517" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:09.515" endtime="20201030 18:27:09.517"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:09.518" endtime="20201030 18:27:09.519"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:09.500" endtime="20201030 18:27:09.520"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:09.499" endtime="20201030 18:27:09.521"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:09.527" endtime="20201030 18:27:09.813"></status>
</kw>
<msg timestamp="20201030 18:27:09.816" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018690694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018692236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:09.525" endtime="20201030 18:27:09.817"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:09.825" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018690694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018692236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:09.818" endtime="20201030 18:27:09.825"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:09.826" endtime="20201030 18:27:09.828"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:09.523" endtime="20201030 18:27:09.828"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:09.521" endtime="20201030 18:27:09.829"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:27:09.853" level="INFO">${debug} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201030 18:27:09.830" endtime="20201030 18:27:09.853"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:09.854" endtime="20201030 18:27:09.855"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:09.859" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:27:09.858" endtime="20201030 18:27:09.859"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:09.863" level="INFO">VALUE: {'sourcediff': [0, 1.5420000000002099e-06, 2.7611000000000302e-05, 1.4309999999996548e-06, 3.102799999999892e-05, 1.3750000000013751e-06, 2.5776999999997663e-05, 1.389000000000945e-06, 3.141699999999886e-05, 1.318999999999626e-06, 3.077800000000214e-05, 1.3749999999979057e-06, 2.513900000000041e-05, 1.3750000000013751e-06, 2.6096999999999232e-05, 1.3750000000013751e-06, 2.2971999999999576e-05, 1.3750000000013751e-06, 2.8277999999999637e-05, 1.3749999999979057e-06, 2.4542000000002395e-05, 1.3609999999983358e-06, 2.7972000000001107e-05, 1.3749999999979057e-06, 2.6084000000002605e-05, 1.3749999999979057e-06, 2.7665999999999108e-05, 1.3610000000018052e-06, 2.9847999999998986e-05, 1.3610000000018052e-06, 2.9513999999997848e-05, 1.3750000000013751e-06, 2.8582999999998693e-05, 1.3750000000013751e-06, 2.4541999999998926e-05, 1.3610000000018052e-06, 2.3290999999998202e-05, 1.389000000000945e-06, 2.9278000000000637e-05, 1.3609999999983358e-06, 2.6055999999999996e-05, 1.3470000000022353e-06, 2.640299999999776e-05, 1.3750000000013751e-06, 2.7040999999998483e-05, 1.4170000000000849e-06, 2.9457999999999568e-05, 1.3750000000013751e-06, 2.795900000000101e-05, 1.3889999999974756e-06, 2.4208000000001256e-05, 1.389000000000945e-06, 2.8264000000000067e-05, 1.3609999999983358e-06, 3.2318999999999404e-05, 1.389000000000945e-06, 3.169500000000172e-05, 1.3749999999979057e-06, 2.8263000000000593e-05, 1.3620000000012789e-06, 2.7040999999998483e-05, 1.3610000000018052e-06, 2.9541999999996987e-05, 1.3470000000022353e-06, 2.2985999999999146e-05, 1.3750000000013751e-06, 2.7652999999999012e-05, 1.389000000000945e-06, 2.4860999999997552e-05, 1.3470000000022353e-06, 2.9513999999997848e-05, 1.389000000000945e-06, 3.201400000000035e-05, 1.3609999999983358e-06, 2.8583000000002162e-05, 1.403000000000515e-06, 2.4819999999998316e-05, 1.389000000000945e-06, 2.4222000000000826e-05, 1.3609999999983358e-06, 2.5805000000000272e-05, 1.348000000001709e-06, 2.6415999999997858e-05, 1.3750000000013751e-06, 3.113899999999947e-05, 1.3199999999990997e-06, 2.9541000000000983e-05, 1.3339999999986696e-06, 2.9208000000002787e-05, 1.4029999999970455e-06, 2.9791000000001233e-05, 1.3750000000013751e-06, 2.548699999999765e-05, 1.3750000000013751e-06, 2.4208000000001256e-05, 1.3889999999974756e-06, 2.3028000000001325e-05, 1.3050000000000561e-06, 2.4249999999999966e-05, 1.3469999999987659e-06], 'time': [0.018690694, 0.018692236, 0.018719847, 0.018721278, 0.018752306, 0.018753681, 0.018779458, 0.018780847, 0.018812264, 0.018813583, 0.018844361, 0.018845736, 0.018870875, 0.01887225, 0.018898347, 0.018899722, 0.018922694, 0.018924069, 0.018952347, 0.018953722, 0.018978264, 0.018979625, 0.019007597, 0.019008972, 0.019035056, 0.019036431, 0.019064097, 0.019065458, 0.019095306, 0.019096667, 0.019126181, 0.019127556, 0.019156139, 0.019157514, 0.019182056, 0.019183417, 0.019206708, 0.019208097, 0.019237375, 0.019238736, 0.019264792, 0.019266139, 0.019292542, 0.019293917, 0.019320958, 0.019322375, 0.019351833, 0.019353208, 0.019381167, 0.019382556, 0.019406764, 0.019408153, 0.019436417, 0.019437778, 0.019470097, 0.019471486, 0.019503181, 0.019504556, 0.019532819, 0.019534181, 0.019561222, 0.019562583, 0.019592125, 0.019593472, 0.019616458, 0.019617833, 0.019645486, 0.019646875, 0.019671736, 0.019673083, 0.019702597, 0.019703986, 0.019736, 0.019737361, 0.019765944, 0.019767347, 0.019792167, 0.019793556, 0.019817778, 0.019819139, 0.019844944, 0.019846292, 0.019872708, 0.019874083, 0.019905222, 0.019906542, 0.019936083, 0.019937417, 0.019966625, 0.019968028, 0.019997819, 0.019999194, 0.020024681, 0.020026056, 0.020050264, 0.020051653, 0.020074681, 0.020075986, 0.020100236, 0.020101583], 'eventsource_diff': [0, 1.5420000000002099e-06, 2.7611000000000302e-05, 1.4309999999996548e-06, 3.102799999999892e-05, 1.3750000000013751e-06, 2.5776999999997663e-05, 1.389000000000945e-06, 3.141699999999886e-05, 1.318999999999626e-06, 3.077800000000214e-05, 1.3749999999979057e-06, 2.513900000000041e-05, 1.3750000000013751e-06, 2.6096999999999232e-05, 1.3750000000013751e-06, 2.2971999999999576e-05, 1.3750000000013751e-06, 2.8277999999999637e-05, 1.3749999999979057e-06, 2.4542000000002395e-05, 1.3609999999983358e-06, 2.7972000000001107e-05, 1.3749999999979057e-06, 2.6084000000002605e-05, 1.3749999999979057e-06, 2.7665999999999108e-05, 1.3610000000018052e-06, 2.9847999999998986e-05, 1.3610000000018052e-06, 2.9513999999997848e-05, 1.3750000000013751e-06, 2.8582999999998693e-05, 1.3750000000013751e-06, 2.4541999999998926e-05, 1.3610000000018052e-06, 2.3290999999998202e-05, 1.389000000000945e-06, 2.9278000000000637e-05, 1.3609999999983358e-06, 2.6055999999999996e-05, 1.3470000000022353e-06, 2.640299999999776e-05, 1.3750000000013751e-06, 2.7040999999998483e-05, 1.4170000000000849e-06, 2.9457999999999568e-05, 1.3750000000013751e-06, 2.795900000000101e-05, 1.3889999999974756e-06, 2.4208000000001256e-05, 1.389000000000945e-06, 2.8264000000000067e-05, 1.3609999999983358e-06, 3.2318999999999404e-05, 1.389000000000945e-06, 3.169500000000172e-05, 1.3749999999979057e-06, 2.8263000000000593e-05, 1.3620000000012789e-06, 2.7040999999998483e-05, 1.3610000000018052e-06, 2.9541999999996987e-05, 1.3470000000022353e-06, 2.2985999999999146e-05, 1.3750000000013751e-06, 2.7652999999999012e-05, 1.389000000000945e-06, 2.4860999999997552e-05, 1.3470000000022353e-06, 2.9513999999997848e-05, 1.389000000000945e-06, 3.201400000000035e-05, 1.3609999999983358e-06, 2.8583000000002162e-05, 1.403000000000515e-06, 2.4819999999998316e-05, 1.389000000000945e-06, 2.4222000000000826e-05, 1.3609999999983358e-06, 2.5805000000000272e-05, 1.348000000001709e-06, 2.6415999999997858e-05, 1.3750000000013751e-06, 3.113899999999947e-05, 1.3199999999990997e-06, 2.9541000000000983e-05, 1.3339999999986696e-06, 2.9208000000002787e-05, 1.4029999999970455e-06, 2.9791000000001233e-05, 1.3750000000013751e-06, 2.548699999999765e-05, 1.3750000000013751e-06, 2.4208000000001256e-05, 1.3889999999974756e-06, 2.3028000000001325e-05, 1.3050000000000561e-06, 2.4249999999999966e-05, 1.3469999999987659e-06]}</msg>
<status status="PASS" starttime="20201030 18:27:09.860" endtime="20201030 18:27:09.864"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:09.856" endtime="20201030 18:27:09.864"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:09.868" level="INFO">${RESULT} = [{'diff': 1.5420000000002099e-06}, {'diff': 1.4309999999996548e-06}, {'diff': 1.3750000000013751e-06}, {'diff': 1.389000000000945e-06}, {'diff': 1.318999999999626e-06}, {'diff': 1.3749999999979057e-06...</msg>
<status status="PASS" starttime="20201030 18:27:09.865" endtime="20201030 18:27:09.869"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:09.873" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.5420000000002099e-06, 1.4309999999996548e-06, 1.3750000000013751e-06, 1.389000000000945e-06, 1.318999999999626e-06, 1.3749999999979057e-06, 1.3750000000013751e-06, 1.3750000000013751e-06, ...</msg>
<status status="PASS" starttime="20201030 18:27:09.869" endtime="20201030 18:27:09.873"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:09.878" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:27:09.876" endtime="20201030 18:27:09.878"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:09.881" level="INFO">VALUE: [1.5420000000002099e-06, 1.4309999999996548e-06, 1.3750000000013751e-06, 1.389000000000945e-06, 1.318999999999626e-06, 1.3749999999979057e-06, 1.3750000000013751e-06, 1.3750000000013751e-06, 1.3750000000013751e-06, 1.3749999999979057e-06, 1.3609999999983358e-06, 1.3749999999979057e-06, 1.3749999999979057e-06, 1.3610000000018052e-06, 1.3610000000018052e-06, 1.3750000000013751e-06, 1.3750000000013751e-06, 1.3610000000018052e-06, 1.389000000000945e-06, 1.3609999999983358e-06, 1.3470000000022353e-06, 1.3750000000013751e-06, 1.4170000000000849e-06, 1.3750000000013751e-06, 1.3889999999974756e-06, 1.389000000000945e-06, 1.3609999999983358e-06, 1.389000000000945e-06, 1.3749999999979057e-06, 1.3620000000012789e-06, 1.3610000000018052e-06, 1.3470000000022353e-06, 1.3750000000013751e-06, 1.389000000000945e-06, 1.3470000000022353e-06, 1.389000000000945e-06, 1.3609999999983358e-06, 1.403000000000515e-06, 1.389000000000945e-06, 1.3609999999983358e-06, 1.348000000001709e-06, 1.3750000000013751e-06, 1.3199999999990997e-06, 1.3339999999986696e-06, 1.4029999999970455e-06, 1.3750000000013751e-06, 1.3750000000013751e-06, 1.3889999999974756e-06, 1.3050000000000561e-06, 1.3469999999987659e-06]</msg>
<status status="PASS" starttime="20201030 18:27:09.879" endtime="20201030 18:27:09.882"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:09.873" endtime="20201030 18:27:09.883"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:09.888" endtime="20201030 18:27:09.909"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:09.886" endtime="20201030 18:27:09.910"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:09.884" endtime="20201030 18:27:09.910"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:09.497" endtime="20201030 18:27:09.910"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:09.497" endtime="20201030 18:27:09.911"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:09.918" endtime="20201030 18:27:09.928"></status>
</kw>
<msg timestamp="20201030 18:27:09.928" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:09.917" endtime="20201030 18:27:09.929"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:09.931" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:09.929" endtime="20201030 18:27:09.931"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:09.932" endtime="20201030 18:27:09.934"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:09.914" endtime="20201030 18:27:09.934"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:09.913" endtime="20201030 18:27:09.935"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:09.941" endtime="20201030 18:27:10.228"></status>
</kw>
<msg timestamp="20201030 18:27:10.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019480208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019481639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:09.940" endtime="20201030 18:27:10.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:10.240" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019480208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019481639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:10.233" endtime="20201030 18:27:10.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:10.241" endtime="20201030 18:27:10.243"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:09.937" endtime="20201030 18:27:10.244"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:09.935" endtime="20201030 18:27:10.244"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:27:10.269" level="INFO">${debug} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201030 18:27:10.245" endtime="20201030 18:27:10.269"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:10.270" endtime="20201030 18:27:10.272"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:10.275" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:27:10.274" endtime="20201030 18:27:10.275"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:10.279" level="INFO">VALUE: {'sourcediff': [0, 1.4309999999996548e-06, 2.515299999999998e-05, 1.3610000000018052e-06, 2.8277999999999637e-05, 1.3750000000013751e-06, 2.4221999999997357e-05, 1.389000000000945e-06, 2.484700000000145e-05, 1.3609999999983358e-06, 2.486100000000102e-05, 1.3609999999983358e-06, 2.5792000000000176e-05, 1.3470000000022353e-06, 2.362499999999934e-05, 1.3609999999983358e-06, 2.5472000000002076e-05, 1.3619999999978094e-06, 3.238800000000125e-05, 1.3620000000012789e-06, 2.5416000000000327e-05, 1.3609999999983358e-06, 2.391700000000177e-05, 1.3749999999979057e-06, 3.169399999999878e-05, 1.389000000000945e-06, 2.643100000000037e-05, 1.332999999999196e-06, 2.640300000000123e-05, 1.3750000000013751e-06, 2.4221999999997357e-05, 1.389000000000945e-06, 3.07639999999991e-05, 1.3610000000018052e-06, 2.7957999999998068e-05, 1.3750000000013751e-06, 3.0153000000001512e-05, 1.4309999999996548e-06, 2.8235999999997458e-05, 1.3610000000018052e-06, 2.8250000000000497e-05, 1.3749999999979057e-06, 2.9514000000001317e-05, 1.3750000000013751e-06, 3.07639999999991e-05, 1.389000000000945e-06, 3.074999999999953e-05, 1.3889999999974756e-06, 3.198600000000121e-05, 1.3750000000013751e-06, 3.1096999999997293e-05, 1.3610000000018052e-06, 2.515299999999998e-05, 1.3609999999983358e-06, 3.201400000000035e-05, 1.403000000000515e-06, 2.7624999999999872e-05, 1.3750000000013751e-06, 2.3304999999997772e-05, 1.3470000000022353e-06, 2.7374999999999622e-05, 1.3609999999983358e-06, 3.137500000000015e-05, 1.3750000000013751e-06, 2.7347999999999956e-05, 1.3609999999983358e-06, 3.140300000000276e-05, 1.3609999999983358e-06, 2.7665999999999108e-05, 1.4309999999996548e-06, 2.6958000000000537e-05, 1.3610000000018052e-06, 3.045900000000004e-05, 1.3749999999979057e-06, 3.077700000000266e-05, 1.3619999999978094e-06, 2.361099999999977e-05, 1.3610000000018052e-06, 2.8264000000000067e-05, 1.3749999999979057e-06, 3.0139000000001942e-05, 1.4019999999975719e-06, 2.3264000000002005e-05, 1.3750000000013751e-06, 2.8902999999996792e-05, 1.3750000000013751e-06, 3.2318999999999404e-05, 1.3750000000013751e-06, 2.3611999999999245e-05, 1.3750000000013751e-06, 2.4832999999998412e-05, 1.3750000000013751e-06, 2.3291999999997676e-05, 1.3750000000013751e-06, 2.461100000000077e-05, 1.318999999999626e-06, 2.4527999999999356e-05, 1.389000000000945e-06, 2.7333000000000912e-05, 1.4309999999996548e-06], 'time': [0.019480208, 0.019481639, 0.019506792, 0.019508153, 0.019536431, 0.019537806, 0.019562028, 0.019563417, 0.019588264, 0.019589625, 0.019614486, 0.019615847, 0.019641639, 0.019642986, 0.019666611, 0.019667972, 0.019693444, 0.019694806, 0.019727194, 0.019728556, 0.019753972, 0.019755333, 0.01977925, 0.019780625, 0.019812319, 0.019813708, 0.019840139, 0.019841472, 0.019867875, 0.01986925, 0.019893472, 0.019894861, 0.019925625, 0.019926986, 0.019954944, 0.019956319, 0.019986472, 0.019987903, 0.020016139, 0.0200175, 0.02004575, 0.020047125, 0.020076639, 0.020078014, 0.020108778, 0.020110167, 0.020140917, 0.020142306, 0.020174292, 0.020175667, 0.020206764, 0.020208125, 0.020233278, 0.020234639, 0.020266653, 0.020268056, 0.020295681, 0.020297056, 0.020320361, 0.020321708, 0.020349083, 0.020350444, 0.020381819, 0.020383194, 0.020410542, 0.020411903, 0.020443306, 0.020444667, 0.020472333, 0.020473764, 0.020500722, 0.020502083, 0.020532542, 0.020533917, 0.020564694, 0.020566056, 0.020589667, 0.020591028, 0.020619292, 0.020620667, 0.020650806, 0.020652208, 0.020675472, 0.020676847, 0.02070575, 0.020707125, 0.020739444, 0.020740819, 0.020764431, 0.020765806, 0.020790639, 0.020792014, 0.020815306, 0.020816681, 0.020841292, 0.020842611, 0.020867139, 0.020868528, 0.020895861, 0.020897292], 'eventsource_diff': [0, 1.4309999999996548e-06, 2.515299999999998e-05, 1.3610000000018052e-06, 2.8277999999999637e-05, 1.3750000000013751e-06, 2.4221999999997357e-05, 1.389000000000945e-06, 2.484700000000145e-05, 1.3609999999983358e-06, 2.486100000000102e-05, 1.3609999999983358e-06, 2.5792000000000176e-05, 1.3470000000022353e-06, 2.362499999999934e-05, 1.3609999999983358e-06, 2.5472000000002076e-05, 1.3619999999978094e-06, 3.238800000000125e-05, 1.3620000000012789e-06, 2.5416000000000327e-05, 1.3609999999983358e-06, 2.391700000000177e-05, 1.3749999999979057e-06, 3.169399999999878e-05, 1.389000000000945e-06, 2.643100000000037e-05, 1.332999999999196e-06, 2.640300000000123e-05, 1.3750000000013751e-06, 2.4221999999997357e-05, 1.389000000000945e-06, 3.07639999999991e-05, 1.3610000000018052e-06, 2.7957999999998068e-05, 1.3750000000013751e-06, 3.0153000000001512e-05, 1.4309999999996548e-06, 2.8235999999997458e-05, 1.3610000000018052e-06, 2.8250000000000497e-05, 1.3749999999979057e-06, 2.9514000000001317e-05, 1.3750000000013751e-06, 3.07639999999991e-05, 1.389000000000945e-06, 3.074999999999953e-05, 1.3889999999974756e-06, 3.198600000000121e-05, 1.3750000000013751e-06, 3.1096999999997293e-05, 1.3610000000018052e-06, 2.515299999999998e-05, 1.3609999999983358e-06, 3.201400000000035e-05, 1.403000000000515e-06, 2.7624999999999872e-05, 1.3750000000013751e-06, 2.3304999999997772e-05, 1.3470000000022353e-06, 2.7374999999999622e-05, 1.3609999999983358e-06, 3.137500000000015e-05, 1.3750000000013751e-06, 2.7347999999999956e-05, 1.3609999999983358e-06, 3.140300000000276e-05, 1.3609999999983358e-06, 2.7665999999999108e-05, 1.4309999999996548e-06, 2.6958000000000537e-05, 1.3610000000018052e-06, 3.045900000000004e-05, 1.3749999999979057e-06, 3.077700000000266e-05, 1.3619999999978094e-06, 2.361099999999977e-05, 1.3610000000018052e-06, 2.8264000000000067e-05, 1.3749999999979057e-06, 3.0139000000001942e-05, 1.4019999999975719e-06, 2.3264000000002005e-05, 1.3750000000013751e-06, 2.8902999999996792e-05, 1.3750000000013751e-06, 3.2318999999999404e-05, 1.3750000000013751e-06, 2.3611999999999245e-05, 1.3750000000013751e-06, 2.4832999999998412e-05, 1.3750000000013751e-06, 2.3291999999997676e-05, 1.3750000000013751e-06, 2.461100000000077e-05, 1.318999999999626e-06, 2.4527999999999356e-05, 1.389000000000945e-06, 2.7333000000000912e-05, 1.4309999999996548e-06]}</msg>
<status status="PASS" starttime="20201030 18:27:10.276" endtime="20201030 18:27:10.280"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:10.272" endtime="20201030 18:27:10.281"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:10.285" level="INFO">${RESULT} = [{'diff': 1.4309999999996548e-06}, {'diff': 1.3610000000018052e-06}, {'diff': 1.3750000000013751e-06}, {'diff': 1.389000000000945e-06}, {'diff': 1.3609999999983358e-06}, {'diff': 1.3609999999983358e-0...</msg>
<status status="PASS" starttime="20201030 18:27:10.282" endtime="20201030 18:27:10.285"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:10.289" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.4309999999996548e-06, 1.3610000000018052e-06, 1.3750000000013751e-06, 1.389000000000945e-06, 1.3609999999983358e-06, 1.3609999999983358e-06, 1.3470000000022353e-06, 1.3609999999983358e-06,...</msg>
<status status="PASS" starttime="20201030 18:27:10.286" endtime="20201030 18:27:10.289"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:10.293" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:27:10.292" endtime="20201030 18:27:10.293"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:10.295" level="INFO">VALUE: [1.4309999999996548e-06, 1.3610000000018052e-06, 1.3750000000013751e-06, 1.389000000000945e-06, 1.3609999999983358e-06, 1.3609999999983358e-06, 1.3470000000022353e-06, 1.3609999999983358e-06, 1.3619999999978094e-06, 1.3620000000012789e-06, 1.3609999999983358e-06, 1.3749999999979057e-06, 1.389000000000945e-06, 1.332999999999196e-06, 1.3750000000013751e-06, 1.389000000000945e-06, 1.3610000000018052e-06, 1.3750000000013751e-06, 1.4309999999996548e-06, 1.3610000000018052e-06, 1.3749999999979057e-06, 1.3750000000013751e-06, 1.389000000000945e-06, 1.3889999999974756e-06, 1.3750000000013751e-06, 1.3610000000018052e-06, 1.3609999999983358e-06, 1.403000000000515e-06, 1.3750000000013751e-06, 1.3470000000022353e-06, 1.3609999999983358e-06, 1.3750000000013751e-06, 1.3609999999983358e-06, 1.3609999999983358e-06, 1.4309999999996548e-06, 1.3610000000018052e-06, 1.3749999999979057e-06, 1.3619999999978094e-06, 1.3610000000018052e-06, 1.3749999999979057e-06, 1.4019999999975719e-06, 1.3750000000013751e-06, 1.3750000000013751e-06, 1.3750000000013751e-06, 1.3750000000013751e-06, 1.3750000000013751e-06, 1.3750000000013751e-06, 1.318999999999626e-06, 1.389000000000945e-06, 1.4309999999996548e-06]</msg>
<status status="PASS" starttime="20201030 18:27:10.294" endtime="20201030 18:27:10.296"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:10.290" endtime="20201030 18:27:10.296"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:10.300" endtime="20201030 18:27:10.320"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:10.299" endtime="20201030 18:27:10.321"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:10.297" endtime="20201030 18:27:10.321"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:09.911" endtime="20201030 18:27:10.321"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:09.911" endtime="20201030 18:27:10.322"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:10.330" endtime="20201030 18:27:10.340"></status>
</kw>
<msg timestamp="20201030 18:27:10.340" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:10.329" endtime="20201030 18:27:10.341"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:10.343" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:10.342" endtime="20201030 18:27:10.343"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:10.344" endtime="20201030 18:27:10.346"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:10.325" endtime="20201030 18:27:10.346"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:10.324" endtime="20201030 18:27:10.347"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:10.353" endtime="20201030 18:27:10.640"></status>
</kw>
<msg timestamp="20201030 18:27:10.643" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019714278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019715778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:10.351" endtime="20201030 18:27:10.643"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:10.652" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019714278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019715778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:10.644" endtime="20201030 18:27:10.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:10.653" endtime="20201030 18:27:10.655"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:10.349" endtime="20201030 18:27:10.656"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:10.347" endtime="20201030 18:27:10.656"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:27:10.680" level="INFO">${debug} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201030 18:27:10.657" endtime="20201030 18:27:10.680"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:10.681" endtime="20201030 18:27:10.683"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:10.686" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:27:10.685" endtime="20201030 18:27:10.686"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:10.690" level="INFO">VALUE: {'sourcediff': [0, 1.5000000000015001e-06, 3.2332999999998974e-05, 1.3610000000018052e-06, 3.10700000000011e-05, 1.3749999999979057e-06, 2.8611000000001302e-05, 1.3609999999983358e-06, 2.6708000000000287e-05, 1.3750000000013751e-06, 2.3320000000000285e-05, 1.3609999999983358e-06, 2.7013999999998817e-05, 1.3750000000013751e-06, 2.3666000000002047e-05, 1.3199999999990997e-06, 2.638899999999819e-05, 1.3750000000013751e-06, 2.3943999999997967e-05, 1.3330000000026654e-06, 2.8611999999997306e-05, 1.3610000000018052e-06, 2.3276999999998632e-05, 1.389000000000945e-06, 2.670899999999976e-05, 1.3610000000018052e-06, 2.9846999999999513e-05, 1.3609999999983358e-06, 3.233300000000244e-05, 1.3619999999978094e-06, 2.3916000000002297e-05, 1.3889999999974756e-06, 2.4542000000002395e-05, 1.3749999999979057e-06, 2.7333000000000912e-05, 1.3609999999983358e-06, 2.766700000000205e-05, 1.3469999999987659e-06, 2.7347000000000482e-05, 1.3609999999983358e-06, 3.202800000000339e-05, 1.3609999999983358e-06, 3.044500000000047e-05, 1.3749999999979057e-06, 2.461100000000077e-05, 1.3610000000018052e-06, 2.9153000000000512e-05, 1.3609999999983358e-06, 2.3930000000001866e-05, 1.3619999999978094e-06, 2.5472000000002076e-05, 1.3749999999979057e-06, 3.077800000000214e-05, 1.3749999999979057e-06, 3.200000000000078e-05, 1.3609999999983358e-06, 2.361099999999977e-05, 1.3610000000018052e-06, 2.5485999999998177e-05, 1.3610000000018052e-06, 3.202799999999992e-05, 1.3609999999983358e-06, 2.2972000000003046e-05, 1.3749999999979057e-06, 2.7652999999999012e-05, 1.3750000000013751e-06, 2.3306000000000715e-05, 1.387999999998002e-06, 2.263900000000138e-05, 1.3750000000013751e-06, 2.3597999999999675e-05, 1.3749999999979057e-06, 2.9832999999999943e-05, 1.3610000000018052e-06, 3.0472000000000138e-05, 1.3609999999983358e-06, 3.076400000000257e-05, 1.3749999999979057e-06, 2.670899999999976e-05, 1.3750000000013751e-06, 3.2318999999999404e-05, 1.389000000000945e-06, 2.640299999999776e-05, 1.3610000000018052e-06, 3.2318999999999404e-05, 1.3750000000013751e-06, 2.2721999999999326e-05, 1.3059999999995298e-06, 2.39169999999983e-05, 1.3750000000013751e-06, 2.330500000000124e-05, 1.3609999999983358e-06, 2.268100000000009e-05, 1.3610000000018052e-06, 3.140299999999929e-05, 1.3609999999983358e-06, 2.334699999999995e-05, 1.3059999999995298e-06, 2.7958000000001537e-05, 1.403000000000515e-06], 'time': [0.019714278, 0.019715778, 0.019748111, 0.019749472, 0.019780542, 0.019781917, 0.019810528, 0.019811889, 0.019838597, 0.019839972, 0.019863292, 0.019864653, 0.019891667, 0.019893042, 0.019916708, 0.019918028, 0.019944417, 0.019945792, 0.019969736, 0.019971069, 0.019999681, 0.020001042, 0.020024319, 0.020025708, 0.020052417, 0.020053778, 0.020083625, 0.020084986, 0.020117319, 0.020118681, 0.020142597, 0.020143986, 0.020168528, 0.020169903, 0.020197236, 0.020198597, 0.020226264, 0.020227611, 0.020254958, 0.020256319, 0.020288347, 0.020289708, 0.020320153, 0.020321528, 0.020346139, 0.0203475, 0.020376653, 0.020378014, 0.020401944, 0.020403306, 0.020428778, 0.020430153, 0.020460931, 0.020462306, 0.020494306, 0.020495667, 0.020519278, 0.020520639, 0.020546125, 0.020547486, 0.020579514, 0.020580875, 0.020603847, 0.020605222, 0.020632875, 0.02063425, 0.020657556, 0.020658944, 0.020681583, 0.020682958, 0.020706556, 0.020707931, 0.020737764, 0.020739125, 0.020769597, 0.020770958, 0.020801722, 0.020803097, 0.020829806, 0.020831181, 0.0208635, 0.020864889, 0.020891292, 0.020892653, 0.020924972, 0.020926347, 0.020949069, 0.020950375, 0.020974292, 0.020975667, 0.020998972, 0.021000333, 0.021023014, 0.021024375, 0.021055778, 0.021057139, 0.021080486, 0.021081792, 0.02110975, 0.021111153], 'eventsource_diff': [0, 1.5000000000015001e-06, 3.2332999999998974e-05, 1.3610000000018052e-06, 3.10700000000011e-05, 1.3749999999979057e-06, 2.8611000000001302e-05, 1.3609999999983358e-06, 2.6708000000000287e-05, 1.3750000000013751e-06, 2.3320000000000285e-05, 1.3609999999983358e-06, 2.7013999999998817e-05, 1.3750000000013751e-06, 2.3666000000002047e-05, 1.3199999999990997e-06, 2.638899999999819e-05, 1.3750000000013751e-06, 2.3943999999997967e-05, 1.3330000000026654e-06, 2.8611999999997306e-05, 1.3610000000018052e-06, 2.3276999999998632e-05, 1.389000000000945e-06, 2.670899999999976e-05, 1.3610000000018052e-06, 2.9846999999999513e-05, 1.3609999999983358e-06, 3.233300000000244e-05, 1.3619999999978094e-06, 2.3916000000002297e-05, 1.3889999999974756e-06, 2.4542000000002395e-05, 1.3749999999979057e-06, 2.7333000000000912e-05, 1.3609999999983358e-06, 2.766700000000205e-05, 1.3469999999987659e-06, 2.7347000000000482e-05, 1.3609999999983358e-06, 3.202800000000339e-05, 1.3609999999983358e-06, 3.044500000000047e-05, 1.3749999999979057e-06, 2.461100000000077e-05, 1.3610000000018052e-06, 2.9153000000000512e-05, 1.3609999999983358e-06, 2.3930000000001866e-05, 1.3619999999978094e-06, 2.5472000000002076e-05, 1.3749999999979057e-06, 3.077800000000214e-05, 1.3749999999979057e-06, 3.200000000000078e-05, 1.3609999999983358e-06, 2.361099999999977e-05, 1.3610000000018052e-06, 2.5485999999998177e-05, 1.3610000000018052e-06, 3.202799999999992e-05, 1.3609999999983358e-06, 2.2972000000003046e-05, 1.3749999999979057e-06, 2.7652999999999012e-05, 1.3750000000013751e-06, 2.3306000000000715e-05, 1.387999999998002e-06, 2.263900000000138e-05, 1.3750000000013751e-06, 2.3597999999999675e-05, 1.3749999999979057e-06, 2.9832999999999943e-05, 1.3610000000018052e-06, 3.0472000000000138e-05, 1.3609999999983358e-06, 3.076400000000257e-05, 1.3749999999979057e-06, 2.670899999999976e-05, 1.3750000000013751e-06, 3.2318999999999404e-05, 1.389000000000945e-06, 2.640299999999776e-05, 1.3610000000018052e-06, 3.2318999999999404e-05, 1.3750000000013751e-06, 2.2721999999999326e-05, 1.3059999999995298e-06, 2.39169999999983e-05, 1.3750000000013751e-06, 2.330500000000124e-05, 1.3609999999983358e-06, 2.268100000000009e-05, 1.3610000000018052e-06, 3.140299999999929e-05, 1.3609999999983358e-06, 2.334699999999995e-05, 1.3059999999995298e-06, 2.7958000000001537e-05, 1.403000000000515e-06]}</msg>
<status status="PASS" starttime="20201030 18:27:10.687" endtime="20201030 18:27:10.691"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:10.683" endtime="20201030 18:27:10.692"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:10.696" level="INFO">${RESULT} = [{'diff': 1.5000000000015001e-06}, {'diff': 1.3610000000018052e-06}, {'diff': 1.3749999999979057e-06}, {'diff': 1.3609999999983358e-06}, {'diff': 1.3750000000013751e-06}, {'diff': 1.3609999999983358e-...</msg>
<status status="PASS" starttime="20201030 18:27:10.693" endtime="20201030 18:27:10.696"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:10.701" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.5000000000015001e-06, 1.3610000000018052e-06, 1.3749999999979057e-06, 1.3609999999983358e-06, 1.3750000000013751e-06, 1.3609999999983358e-06, 1.3750000000013751e-06, 1.3199999999990997e-06...</msg>
<status status="PASS" starttime="20201030 18:27:10.697" endtime="20201030 18:27:10.701"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:10.705" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:27:10.704" endtime="20201030 18:27:10.705"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:10.707" level="INFO">VALUE: [1.5000000000015001e-06, 1.3610000000018052e-06, 1.3749999999979057e-06, 1.3609999999983358e-06, 1.3750000000013751e-06, 1.3609999999983358e-06, 1.3750000000013751e-06, 1.3199999999990997e-06, 1.3750000000013751e-06, 1.3330000000026654e-06, 1.3610000000018052e-06, 1.389000000000945e-06, 1.3610000000018052e-06, 1.3609999999983358e-06, 1.3619999999978094e-06, 1.3889999999974756e-06, 1.3749999999979057e-06, 1.3609999999983358e-06, 1.3469999999987659e-06, 1.3609999999983358e-06, 1.3609999999983358e-06, 1.3749999999979057e-06, 1.3610000000018052e-06, 1.3609999999983358e-06, 1.3619999999978094e-06, 1.3749999999979057e-06, 1.3749999999979057e-06, 1.3609999999983358e-06, 1.3610000000018052e-06, 1.3610000000018052e-06, 1.3609999999983358e-06, 1.3749999999979057e-06, 1.3750000000013751e-06, 1.387999999998002e-06, 1.3750000000013751e-06, 1.3749999999979057e-06, 1.3610000000018052e-06, 1.3609999999983358e-06, 1.3749999999979057e-06, 1.3750000000013751e-06, 1.389000000000945e-06, 1.3610000000018052e-06, 1.3750000000013751e-06, 1.3059999999995298e-06, 1.3750000000013751e-06, 1.3609999999983358e-06, 1.3610000000018052e-06, 1.3609999999983358e-06, 1.3059999999995298e-06, 1.403000000000515e-06]</msg>
<status status="PASS" starttime="20201030 18:27:10.706" endtime="20201030 18:27:10.708"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:10.701" endtime="20201030 18:27:10.708"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:10.712" endtime="20201030 18:27:10.731"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:10.710" endtime="20201030 18:27:10.732"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:10.709" endtime="20201030 18:27:10.732"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:10.322" endtime="20201030 18:27:10.732"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:10.322" endtime="20201030 18:27:10.732"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:10.740" endtime="20201030 18:27:10.750"></status>
</kw>
<msg timestamp="20201030 18:27:10.750" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:10.739" endtime="20201030 18:27:10.751"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:10.753" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:10.751" endtime="20201030 18:27:10.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:10.754" endtime="20201030 18:27:10.755"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:10.736" endtime="20201030 18:27:10.756"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:10.734" endtime="20201030 18:27:10.756"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:10.764" endtime="20201030 18:27:11.051"></status>
</kw>
<msg timestamp="20201030 18:27:11.054" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018630375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018631875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:10.761" endtime="20201030 18:27:11.055"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:11.063" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018630375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018631875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:11.056" endtime="20201030 18:27:11.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:11.064" endtime="20201030 18:27:11.066"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:10.759" endtime="20201030 18:27:11.067"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:10.757" endtime="20201030 18:27:11.067"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:27:11.091" level="INFO">${debug} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201030 18:27:11.068" endtime="20201030 18:27:11.091"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:11.092" endtime="20201030 18:27:11.094"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:11.097" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:27:11.096" endtime="20201030 18:27:11.098"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:11.102" level="INFO">VALUE: {'sourcediff': [0, 1.4999999999980307e-06, 3.0153000000001512e-05, 1.3469999999987659e-06, 3.202799999999992e-05, 1.3610000000018052e-06, 3.2318999999999404e-05, 1.3749999999979057e-06, 2.9819999999999847e-05, 1.389000000000945e-06, 3.0139000000001942e-05, 1.3749999999979057e-06, 2.358300000000063e-05, 1.389000000000945e-06, 2.4832999999998412e-05, 1.3750000000013751e-06, 3.170799999999835e-05, 1.3750000000013751e-06, 2.640300000000123e-05, 1.3609999999983358e-06, 3.201400000000035e-05, 1.3750000000013751e-06, 2.7041999999997957e-05, 1.3470000000022353e-06, 2.8902999999996792e-05, 1.3750000000013751e-06, 3.201400000000035e-05, 1.403000000000515e-06, 2.6387999999998718e-05, 1.3620000000012789e-06, 2.4540999999999452e-05, 1.3609999999983358e-06, 2.519500000000216e-05, 1.3609999999983358e-06, 2.6069000000000092e-05, 1.3750000000013751e-06, 2.7361000000000052e-05, 1.3619999999978094e-06, 2.8583000000002162e-05, 1.3749999999979057e-06, 3.106900000000162e-05, 1.3750000000013751e-06, 3.07639999999991e-05, 1.3749999999979057e-06, 2.361100000000324e-05, 1.3609999999983358e-06, 3.077799999999867e-05, 1.3750000000013751e-06, 3.0153000000001512e-05, 1.3609999999983358e-06, 2.640300000000123e-05, 1.3749999999979057e-06, 2.765300000000248e-05, 1.3609999999983358e-06, 2.8903000000000262e-05, 1.4020000000010413e-06, 2.363899999999891e-05, 1.3059999999995298e-06, 3.145800000000157e-05, 1.3059999999995298e-06, 3.0776999999999194e-05, 1.389000000000945e-06, 2.420900000000073e-05, 1.3749999999979057e-06, 2.7972000000001107e-05, 1.3609999999983358e-06, 2.5805999999999746e-05, 1.3610000000018052e-06, 2.5485999999998177e-05, 1.3750000000013751e-06, 2.4222000000000826e-05, 1.3749999999979057e-06, 3.0139000000001942e-05, 1.3609999999983358e-06, 2.515299999999998e-05, 1.3750000000013751e-06, 2.7986000000000677e-05, 1.3609999999983358e-06, 3.074999999999953e-05, 1.389000000000945e-06, 2.8889000000000692e-05, 1.3609999999983358e-06, 2.4236000000000396e-05, 1.443999999999751e-06, 2.665300000000148e-05, 1.3609999999983358e-06, 2.7042000000001426e-05, 1.4170000000000849e-06, 2.262499999999834e-05, 1.3610000000018052e-06, 3.138899999999972e-05, 1.389000000000945e-06, 3.044399999999753e-05, 1.3610000000018052e-06, 2.5471999999998607e-05, 1.3750000000013751e-06, 2.39169999999983e-05, 1.3750000000013751e-06, 3.106900000000162e-05, 1.3749999999979057e-06], 'time': [0.018630375, 0.018631875, 0.018662028, 0.018663375, 0.018695403, 0.018696764, 0.018729083, 0.018730458, 0.018760278, 0.018761667, 0.018791806, 0.018793181, 0.018816764, 0.018818153, 0.018842986, 0.018844361, 0.018876069, 0.018877444, 0.018903847, 0.018905208, 0.018937222, 0.018938597, 0.018965639, 0.018966986, 0.018995889, 0.018997264, 0.019029278, 0.019030681, 0.019057069, 0.019058431, 0.019082972, 0.019084333, 0.019109528, 0.019110889, 0.019136958, 0.019138333, 0.019165694, 0.019167056, 0.019195639, 0.019197014, 0.019228083, 0.019229458, 0.019260222, 0.019261597, 0.019285208, 0.019286569, 0.019317347, 0.019318722, 0.019348875, 0.019350236, 0.019376639, 0.019378014, 0.019405667, 0.019407028, 0.019435931, 0.019437333, 0.019460972, 0.019462278, 0.019493736, 0.019495042, 0.019525819, 0.019527208, 0.019551417, 0.019552792, 0.019580764, 0.019582125, 0.019607931, 0.019609292, 0.019634778, 0.019636153, 0.019660375, 0.01966175, 0.019691889, 0.01969325, 0.019718403, 0.019719778, 0.019747764, 0.019749125, 0.019779875, 0.019781264, 0.019810153, 0.019811514, 0.01983575, 0.019837194, 0.019863847, 0.019865208, 0.01989225, 0.019893667, 0.019916292, 0.019917653, 0.019949042, 0.019950431, 0.019980875, 0.019982236, 0.020007708, 0.020009083, 0.020033, 0.020034375, 0.020065444, 0.020066819], 'eventsource_diff': [0, 1.4999999999980307e-06, 3.0153000000001512e-05, 1.3469999999987659e-06, 3.202799999999992e-05, 1.3610000000018052e-06, 3.2318999999999404e-05, 1.3749999999979057e-06, 2.9819999999999847e-05, 1.389000000000945e-06, 3.0139000000001942e-05, 1.3749999999979057e-06, 2.358300000000063e-05, 1.389000000000945e-06, 2.4832999999998412e-05, 1.3750000000013751e-06, 3.170799999999835e-05, 1.3750000000013751e-06, 2.640300000000123e-05, 1.3609999999983358e-06, 3.201400000000035e-05, 1.3750000000013751e-06, 2.7041999999997957e-05, 1.3470000000022353e-06, 2.8902999999996792e-05, 1.3750000000013751e-06, 3.201400000000035e-05, 1.403000000000515e-06, 2.6387999999998718e-05, 1.3620000000012789e-06, 2.4540999999999452e-05, 1.3609999999983358e-06, 2.519500000000216e-05, 1.3609999999983358e-06, 2.6069000000000092e-05, 1.3750000000013751e-06, 2.7361000000000052e-05, 1.3619999999978094e-06, 2.8583000000002162e-05, 1.3749999999979057e-06, 3.106900000000162e-05, 1.3750000000013751e-06, 3.07639999999991e-05, 1.3749999999979057e-06, 2.361100000000324e-05, 1.3609999999983358e-06, 3.077799999999867e-05, 1.3750000000013751e-06, 3.0153000000001512e-05, 1.3609999999983358e-06, 2.640300000000123e-05, 1.3749999999979057e-06, 2.765300000000248e-05, 1.3609999999983358e-06, 2.8903000000000262e-05, 1.4020000000010413e-06, 2.363899999999891e-05, 1.3059999999995298e-06, 3.145800000000157e-05, 1.3059999999995298e-06, 3.0776999999999194e-05, 1.389000000000945e-06, 2.420900000000073e-05, 1.3749999999979057e-06, 2.7972000000001107e-05, 1.3609999999983358e-06, 2.5805999999999746e-05, 1.3610000000018052e-06, 2.5485999999998177e-05, 1.3750000000013751e-06, 2.4222000000000826e-05, 1.3749999999979057e-06, 3.0139000000001942e-05, 1.3609999999983358e-06, 2.515299999999998e-05, 1.3750000000013751e-06, 2.7986000000000677e-05, 1.3609999999983358e-06, 3.074999999999953e-05, 1.389000000000945e-06, 2.8889000000000692e-05, 1.3609999999983358e-06, 2.4236000000000396e-05, 1.443999999999751e-06, 2.665300000000148e-05, 1.3609999999983358e-06, 2.7042000000001426e-05, 1.4170000000000849e-06, 2.262499999999834e-05, 1.3610000000018052e-06, 3.138899999999972e-05, 1.389000000000945e-06, 3.044399999999753e-05, 1.3610000000018052e-06, 2.5471999999998607e-05, 1.3750000000013751e-06, 2.39169999999983e-05, 1.3750000000013751e-06, 3.106900000000162e-05, 1.3749999999979057e-06]}</msg>
<status status="PASS" starttime="20201030 18:27:11.098" endtime="20201030 18:27:11.103"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:11.095" endtime="20201030 18:27:11.103"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:11.107" level="INFO">${RESULT} = [{'diff': 1.4999999999980307e-06}, {'diff': 1.3469999999987659e-06}, {'diff': 1.3610000000018052e-06}, {'diff': 1.3749999999979057e-06}, {'diff': 1.389000000000945e-06}, {'diff': 1.3749999999979057e-0...</msg>
<status status="PASS" starttime="20201030 18:27:11.104" endtime="20201030 18:27:11.107"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:11.111" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.4999999999980307e-06, 1.3469999999987659e-06, 1.3610000000018052e-06, 1.3749999999979057e-06, 1.389000000000945e-06, 1.3749999999979057e-06, 1.389000000000945e-06, 1.3750000000013751e-06, ...</msg>
<status status="PASS" starttime="20201030 18:27:11.108" endtime="20201030 18:27:11.111"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:11.116" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:27:11.114" endtime="20201030 18:27:11.116"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:11.118" level="INFO">VALUE: [1.4999999999980307e-06, 1.3469999999987659e-06, 1.3610000000018052e-06, 1.3749999999979057e-06, 1.389000000000945e-06, 1.3749999999979057e-06, 1.389000000000945e-06, 1.3750000000013751e-06, 1.3750000000013751e-06, 1.3609999999983358e-06, 1.3750000000013751e-06, 1.3470000000022353e-06, 1.3750000000013751e-06, 1.403000000000515e-06, 1.3620000000012789e-06, 1.3609999999983358e-06, 1.3609999999983358e-06, 1.3750000000013751e-06, 1.3619999999978094e-06, 1.3749999999979057e-06, 1.3750000000013751e-06, 1.3749999999979057e-06, 1.3609999999983358e-06, 1.3750000000013751e-06, 1.3609999999983358e-06, 1.3749999999979057e-06, 1.3609999999983358e-06, 1.4020000000010413e-06, 1.3059999999995298e-06, 1.3059999999995298e-06, 1.389000000000945e-06, 1.3749999999979057e-06, 1.3609999999983358e-06, 1.3610000000018052e-06, 1.3750000000013751e-06, 1.3749999999979057e-06, 1.3609999999983358e-06, 1.3750000000013751e-06, 1.3609999999983358e-06, 1.389000000000945e-06, 1.3609999999983358e-06, 1.443999999999751e-06, 1.3609999999983358e-06, 1.4170000000000849e-06, 1.3610000000018052e-06, 1.389000000000945e-06, 1.3610000000018052e-06, 1.3750000000013751e-06, 1.3750000000013751e-06, 1.3749999999979057e-06]</msg>
<status status="PASS" starttime="20201030 18:27:11.117" endtime="20201030 18:27:11.119"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:11.112" endtime="20201030 18:27:11.119"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:11.123" endtime="20201030 18:27:11.142"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:11.121" endtime="20201030 18:27:11.143"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:11.120" endtime="20201030 18:27:11.143"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:10.733" endtime="20201030 18:27:11.144"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:10.733" endtime="20201030 18:27:11.144"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:11.152" endtime="20201030 18:27:11.161"></status>
</kw>
<msg timestamp="20201030 18:27:11.162" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:11.150" endtime="20201030 18:27:11.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:11.164" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:11.163" endtime="20201030 18:27:11.164"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:11.165" endtime="20201030 18:27:11.167"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:11.147" endtime="20201030 18:27:11.167"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:11.146" endtime="20201030 18:27:11.168"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:11.174" endtime="20201030 18:27:11.463"></status>
</kw>
<msg timestamp="20201030 18:27:11.466" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018634819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018636333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:11.172" endtime="20201030 18:27:11.467"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:11.475" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018634819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018636333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:11.467" endtime="20201030 18:27:11.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:11.476" endtime="20201030 18:27:11.478"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:11.170" endtime="20201030 18:27:11.478"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:11.168" endtime="20201030 18:27:11.479"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:27:11.504" level="INFO">${debug} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201030 18:27:11.480" endtime="20201030 18:27:11.504"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:11.505" endtime="20201030 18:27:11.507"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:11.510" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:27:11.509" endtime="20201030 18:27:11.510"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:11.514" level="INFO">VALUE: {'sourcediff': [0, 1.51400000000107e-06, 2.266699999999705e-05, 1.3750000000013751e-06, 3.2332999999998974e-05, 1.3610000000018052e-06, 2.766699999999858e-05, 1.3750000000013751e-06, 2.7027999999998387e-05, 1.389000000000945e-06, 2.35970000000002e-05, 1.3609999999983358e-06, 3.111100000000033e-05, 1.3470000000022353e-06, 2.9527999999997417e-05, 1.3750000000013751e-06, 3.108400000000067e-05, 1.387999999998002e-06, 2.9514000000001317e-05, 1.3750000000013751e-06, 2.516699999999955e-05, 1.3749999999979057e-06, 2.64170000000008e-05, 1.3610000000018052e-06, 2.2749999999998466e-05, 1.2910000000004862e-06, 2.5792000000000176e-05, 1.3749999999979057e-06, 2.7347000000000482e-05, 1.389000000000945e-06, 2.8584000000001636e-05, 1.3749999999979057e-06, 2.7665999999999108e-05, 1.3470000000022353e-06, 2.766699999999858e-05, 1.3750000000013751e-06, 2.2971999999999576e-05, 1.3750000000013751e-06, 2.5485999999998177e-05, 1.3620000000012789e-06, 2.6415999999997858e-05, 1.389000000000945e-06, 2.5471999999998607e-05, 1.3610000000018052e-06, 2.519499999999869e-05, 1.3470000000022353e-06, 2.5485999999998177e-05, 1.3610000000018052e-06, 2.9847999999998986e-05, 1.3609999999983358e-06, 3.0472000000000138e-05, 1.3610000000018052e-06, 2.768099999999815e-05, 1.3610000000018052e-06, 2.2680000000000616e-05, 1.3609999999983358e-06, 2.8598000000001206e-05, 1.3749999999979057e-06, 2.455500000000249e-05, 1.3469999999987659e-06, 3.079200000000171e-05, 1.3609999999983358e-06, 2.89309999999994e-05, 1.3470000000022353e-06, 3.2332999999998974e-05, 1.389000000000945e-06, 2.919499999999922e-05, 1.387999999998002e-06, 3.138900000000319e-05, 1.3609999999983358e-06, 2.520900000000173e-05, 1.4299999999967117e-06, 2.445900000000098e-05, 1.3750000000013751e-06, 2.4236000000000396e-05, 1.4300000000001811e-06, 2.4485999999997177e-05, 1.389000000000945e-06, 2.420900000000073e-05, 1.389000000000945e-06, 2.6721999999999857e-05, 1.3609999999983358e-06, 3.2332999999998974e-05, 1.3750000000013751e-06, 2.9833999999999417e-05, 1.3750000000013751e-06, 3.0137999999999e-05, 1.3750000000013751e-06, 2.516699999999955e-05, 1.3749999999979057e-06, 3.205600000000253e-05, 1.3469999999987659e-06, 2.8611000000001302e-05, 1.332999999999196e-06, 2.5485999999998177e-05, 1.3620000000012789e-06, 2.2985999999999146e-05, 1.389000000000945e-06, 2.8582999999998693e-05, 1.3750000000013751e-06], 'time': [0.018634819, 0.018636333, 0.018659, 0.018660375, 0.018692708, 0.018694069, 0.018721736, 0.018723111, 0.018750139, 0.018751528, 0.018775125, 0.018776486, 0.018807597, 0.018808944, 0.018838472, 0.018839847, 0.018870931, 0.018872319, 0.018901833, 0.018903208, 0.018928375, 0.01892975, 0.018956167, 0.018957528, 0.018980278, 0.018981569, 0.019007361, 0.019008736, 0.019036083, 0.019037472, 0.019066056, 0.019067431, 0.019095097, 0.019096444, 0.019124111, 0.019125486, 0.019148458, 0.019149833, 0.019175319, 0.019176681, 0.019203097, 0.019204486, 0.019229958, 0.019231319, 0.019256514, 0.019257861, 0.019283347, 0.019284708, 0.019314556, 0.019315917, 0.019346389, 0.01934775, 0.019375431, 0.019376792, 0.019399472, 0.019400833, 0.019429431, 0.019430806, 0.019455361, 0.019456708, 0.0194875, 0.019488861, 0.019517792, 0.019519139, 0.019551472, 0.019552861, 0.019582056, 0.019583444, 0.019614833, 0.019616194, 0.019641403, 0.019642833, 0.019667292, 0.019668667, 0.019692903, 0.019694333, 0.019718819, 0.019720208, 0.019744417, 0.019745806, 0.019772528, 0.019773889, 0.019806222, 0.019807597, 0.019837431, 0.019838806, 0.019868944, 0.019870319, 0.019895486, 0.019896861, 0.019928917, 0.019930264, 0.019958875, 0.019960208, 0.019985694, 0.019987056, 0.020010042, 0.020011431, 0.020040014, 0.020041389], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING'], 'source_diff': [0, 1.51400000000107e-06, 2.266699999999705e-05, 1.3750000000013751e-06, 3.2332999999998974e-05, 1.3610000000018052e-06, 2.766699999999858e-05, 1.3750000000013751e-06, 2.7027999999998387e-05, 1.389000000000945e-06, 2.35970000000002e-05, 1.3609999999983358e-06, 3.111100000000033e-05, 1.3470000000022353e-06, 2.9527999999997417e-05, 1.3750000000013751e-06, 3.108400000000067e-05, 1.387999999998002e-06, 2.9514000000001317e-05, 1.3750000000013751e-06, 2.516699999999955e-05, 1.3749999999979057e-06, 2.64170000000008e-05, 1.3610000000018052e-06, 2.2749999999998466e-05, 1.2910000000004862e-06, 2.5792000000000176e-05, 1.3749999999979057e-06, 2.7347000000000482e-05, 1.389000000000945e-06, 2.8584000000001636e-05, 1.3749999999979057e-06, 2.7665999999999108e-05, 1.3470000000022353e-06, 2.766699999999858e-05, 1.3750000000013751e-06, 2.2971999999999576e-05, 1.3750000000013751e-06, 2.5485999999998177e-05, 1.3620000000012789e-06, 2.6415999999997858e-05, 1.389000000000945e-06, 2.5471999999998607e-05, 1.3610000000018052e-06, 2.519499999999869e-05, 1.3470000000022353e-06, 2.5485999999998177e-05, 1.3610000000018052e-06, 2.9847999999998986e-05, 1.3609999999983358e-06, 3.0472000000000138e-05, 1.3610000000018052e-06, 2.768099999999815e-05, 1.3610000000018052e-06, 2.2680000000000616e-05, 1.3609999999983358e-06, 2.8598000000001206e-05, 1.3749999999979057e-06, 2.455500000000249e-05, 1.3469999999987659e-06, 3.079200000000171e-05, 1.3609999999983358e-06, 2.89309999999994e-05, 1.3470000000022353e-06, 3.2332999999998974e-05, 1.389000000000945e-06, 2.919499999999922e-05, 1.387999999998002e-06, 3.138900000000319e-05, 1.3609999999983358e-06, 2.520900000000173e-05, 1.4299999999967117e-06, 2.445900000000098e-05, 1.3750000000013751e-06, 2.4236000000000396e-05, 1.4300000000001811e-06, 2.4485999999997177e-05, 1.389000000000945e-06, 2.420900000000073e-05, 1.389000000000945e-06, 2.6721999999999857e-05, 1.3609999999983358e-06, 3.2332999999998974e-05, 1.3750000000013751e-06, 2.9833999999999417e-05, 1.3750000000013751e-06, 3.0137999999999e-05, 1.3750000000013751e-06, 2.516699999999955e-05, 1.3749999999979057e-06, 3.205600000000253e-05, 1.3469999999987659e-06, 2.8611000000001302e-05, 1.332999999999196e-06, 2.5485999999998177e-05, 1.3620000000012789e-06, 2.2985999999999146e-05, 1.389000000000945e-06, 2.8582999999998693e-05, 1.3750000000013751e-06]}</msg>
<status status="PASS" starttime="20201030 18:27:11.511" endtime="20201030 18:27:11.515"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:11.507" endtime="20201030 18:27:11.516"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:11.519" level="INFO">${RESULT} = [{'diff': 1.51400000000107e-06}, {'diff': 1.3750000000013751e-06}, {'diff': 1.3610000000018052e-06}, {'diff': 1.3750000000013751e-06}, {'diff': 1.389000000000945e-06}, {'diff': 1.3609999999983358e-06}...</msg>
<status status="PASS" starttime="20201030 18:27:11.516" endtime="20201030 18:27:11.520"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:11.524" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.51400000000107e-06, 1.3750000000013751e-06, 1.3610000000018052e-06, 1.3750000000013751e-06, 1.389000000000945e-06, 1.3609999999983358e-06, 1.3470000000022353e-06, 1.3750000000013751e-06, 1...</msg>
<status status="PASS" starttime="20201030 18:27:11.520" endtime="20201030 18:27:11.524"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:11.528" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:27:11.527" endtime="20201030 18:27:11.528"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:11.530" level="INFO">VALUE: [1.51400000000107e-06, 1.3750000000013751e-06, 1.3610000000018052e-06, 1.3750000000013751e-06, 1.389000000000945e-06, 1.3609999999983358e-06, 1.3470000000022353e-06, 1.3750000000013751e-06, 1.387999999998002e-06, 1.3750000000013751e-06, 1.3749999999979057e-06, 1.3610000000018052e-06, 1.2910000000004862e-06, 1.3749999999979057e-06, 1.389000000000945e-06, 1.3749999999979057e-06, 1.3470000000022353e-06, 1.3750000000013751e-06, 1.3750000000013751e-06, 1.3620000000012789e-06, 1.389000000000945e-06, 1.3610000000018052e-06, 1.3470000000022353e-06, 1.3610000000018052e-06, 1.3609999999983358e-06, 1.3610000000018052e-06, 1.3610000000018052e-06, 1.3609999999983358e-06, 1.3749999999979057e-06, 1.3469999999987659e-06, 1.3609999999983358e-06, 1.3470000000022353e-06, 1.389000000000945e-06, 1.387999999998002e-06, 1.3609999999983358e-06, 1.4299999999967117e-06, 1.3750000000013751e-06, 1.4300000000001811e-06, 1.389000000000945e-06, 1.389000000000945e-06, 1.3609999999983358e-06, 1.3750000000013751e-06, 1.3750000000013751e-06, 1.3750000000013751e-06, 1.3749999999979057e-06, 1.3469999999987659e-06, 1.332999999999196e-06, 1.3620000000012789e-06, 1.389000000000945e-06, 1.3750000000013751e-06]</msg>
<status status="PASS" starttime="20201030 18:27:11.529" endtime="20201030 18:27:11.531"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:11.525" endtime="20201030 18:27:11.531"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:11.535" endtime="20201030 18:27:11.554"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:11.533" endtime="20201030 18:27:11.555"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:11.532" endtime="20201030 18:27:11.555"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:11.145" endtime="20201030 18:27:11.555"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:11.144" endtime="20201030 18:27:11.556"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:11.564" endtime="20201030 18:27:11.574"></status>
</kw>
<msg timestamp="20201030 18:27:11.575" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:11.563" endtime="20201030 18:27:11.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:11.578" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:11.576" endtime="20201030 18:27:11.579"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:11.580" endtime="20201030 18:27:11.582"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:11.559" endtime="20201030 18:27:11.583"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:11.558" endtime="20201030 18:27:11.584"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:11.593" endtime="20201030 18:27:11.887"></status>
</kw>
<msg timestamp="20201030 18:27:11.894" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019424292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019425778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:11.591" endtime="20201030 18:27:11.894"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:11.912" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019424292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019425778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:11.896" endtime="20201030 18:27:11.913"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:11.915" endtime="20201030 18:27:11.918"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:11.587" endtime="20201030 18:27:11.919"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:11.585" endtime="20201030 18:27:11.920"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:27:11.969" level="INFO">${debug} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201030 18:27:11.922" endtime="20201030 18:27:11.969"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:11.970" endtime="20201030 18:27:11.972"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:11.975" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:27:11.974" endtime="20201030 18:27:11.976"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:11.980" level="INFO">VALUE: {'sourcediff': [0, 1.4860000000019302e-06, 2.5485999999998177e-05, 1.3750000000013751e-06, 3.077799999999867e-05, 1.3750000000013751e-06, 2.9526999999997944e-05, 1.3620000000012789e-06, 3.142999999999896e-05, 1.3330000000026654e-06, 2.487499999999712e-05, 1.3620000000012789e-06, 2.6401999999998288e-05, 1.3750000000013751e-06, 2.8666999999999582e-05, 1.318999999999626e-06, 2.295899999999948e-05, 1.3750000000013751e-06, 2.361099999999977e-05, 1.389000000000945e-06, 3.2304999999999834e-05, 1.389000000000945e-06, 2.4527999999999356e-05, 1.389000000000945e-06, 2.39169999999983e-05, 1.3610000000018052e-06, 2.4860999999997552e-05, 1.3610000000018052e-06, 2.3013999999998286e-05, 1.3610000000018052e-06, 2.2694000000000186e-05, 1.3339999999986696e-06, 2.8597000000001732e-05, 1.3749999999979057e-06, 2.7042000000001426e-05, 1.3609999999983358e-06, 3.0472000000000138e-05, 1.3750000000013751e-06, 3.238900000000072e-05, 1.318999999999626e-06, 2.7334000000000386e-05, 1.3749999999979057e-06, 3.0194000000000748e-05, 1.332999999999196e-06, 2.391700000000177e-05, 1.3749999999979057e-06, 2.8916999999999832e-05, 1.4020000000010413e-06, 2.4834000000001355e-05, 1.3889999999974756e-06, 2.8250000000000497e-05, 1.3750000000013751e-06, 2.5485999999998177e-05, 1.3750000000013751e-06, 2.7333000000000912e-05, 1.403000000000515e-06, 2.638899999999819e-05, 1.3750000000013751e-06, 2.361099999999977e-05, 1.3609999999983358e-06, 3.077800000000214e-05, 1.3889999999974756e-06, 3.106900000000162e-05, 1.389000000000945e-06, 2.7957999999998068e-05, 1.3610000000018052e-06, 2.67369999999989e-05, 1.3609999999983358e-06, 2.6416000000001327e-05, 1.403000000000515e-06, 2.7986000000000677e-05, 1.3339999999986696e-06, 2.8263000000000593e-05, 1.3749999999979057e-06, 2.9528000000000887e-05, 1.3750000000013751e-06, 2.8653000000000012e-05, 1.318999999999626e-06, 3.169499999999825e-05, 1.3750000000013751e-06, 2.8903000000000262e-05, 1.3750000000013751e-06, 2.5790999999997233e-05, 1.3750000000013751e-06, 2.268100000000009e-05, 1.3750000000013751e-06, 2.2679999999997147e-05, 1.3620000000012789e-06, 2.6096999999999232e-05, 1.389000000000945e-06, 2.9832999999999943e-05, 1.3609999999983358e-06, 2.9222000000002357e-05, 1.3889999999974756e-06, 2.515299999999998e-05, 1.3610000000018052e-06, 2.6721999999999857e-05, 1.4170000000000849e-06, 2.356900000000106e-05, 1.3889999999974756e-06], 'time': [0.019424292, 0.019425778, 0.019451264, 0.019452639, 0.019483417, 0.019484792, 0.019514319, 0.019515681, 0.019547111, 0.019548444, 0.019573319, 0.019574681, 0.019601083, 0.019602458, 0.019631125, 0.019632444, 0.019655403, 0.019656778, 0.019680389, 0.019681778, 0.019714083, 0.019715472, 0.01974, 0.019741389, 0.019765306, 0.019766667, 0.019791528, 0.019792889, 0.019815903, 0.019817264, 0.019839958, 0.019841292, 0.019869889, 0.019871264, 0.019898306, 0.019899667, 0.019930139, 0.019931514, 0.019963903, 0.019965222, 0.019992556, 0.019993931, 0.020024125, 0.020025458, 0.020049375, 0.02005075, 0.020079667, 0.020081069, 0.020105903, 0.020107292, 0.020135542, 0.020136917, 0.020162403, 0.020163778, 0.020191111, 0.020192514, 0.020218903, 0.020220278, 0.020243889, 0.02024525, 0.020276028, 0.020277417, 0.020308486, 0.020309875, 0.020337833, 0.020339194, 0.020365931, 0.020367292, 0.020393708, 0.020395111, 0.020423097, 0.020424431, 0.020452694, 0.020454069, 0.020483597, 0.020484972, 0.020513625, 0.020514944, 0.020546639, 0.020548014, 0.020576917, 0.020578292, 0.020604083, 0.020605458, 0.020628139, 0.020629514, 0.020652194, 0.020653556, 0.020679653, 0.020681042, 0.020710875, 0.020712236, 0.020741458, 0.020742847, 0.020768, 0.020769361, 0.020796083, 0.0207975, 0.020821069, 0.020822458], 'eventsource_diff': [0, 1.4860000000019302e-06, 2.5485999999998177e-05, 1.3750000000013751e-06, 3.077799999999867e-05, 1.3750000000013751e-06, 2.9526999999997944e-05, 1.3620000000012789e-06, 3.142999999999896e-05, 1.3330000000026654e-06, 2.487499999999712e-05, 1.3620000000012789e-06, 2.6401999999998288e-05, 1.3750000000013751e-06, 2.8666999999999582e-05, 1.318999999999626e-06, 2.295899999999948e-05, 1.3750000000013751e-06, 2.361099999999977e-05, 1.389000000000945e-06, 3.2304999999999834e-05, 1.389000000000945e-06, 2.4527999999999356e-05, 1.389000000000945e-06, 2.39169999999983e-05, 1.3610000000018052e-06, 2.4860999999997552e-05, 1.3610000000018052e-06, 2.3013999999998286e-05, 1.3610000000018052e-06, 2.2694000000000186e-05, 1.3339999999986696e-06, 2.8597000000001732e-05, 1.3749999999979057e-06, 2.7042000000001426e-05, 1.3609999999983358e-06, 3.0472000000000138e-05, 1.3750000000013751e-06, 3.238900000000072e-05, 1.318999999999626e-06, 2.7334000000000386e-05, 1.3749999999979057e-06, 3.0194000000000748e-05, 1.332999999999196e-06, 2.391700000000177e-05, 1.3749999999979057e-06, 2.8916999999999832e-05, 1.4020000000010413e-06, 2.4834000000001355e-05, 1.3889999999974756e-06, 2.8250000000000497e-05, 1.3750000000013751e-06, 2.5485999999998177e-05, 1.3750000000013751e-06, 2.7333000000000912e-05, 1.403000000000515e-06, 2.638899999999819e-05, 1.3750000000013751e-06, 2.361099999999977e-05, 1.3609999999983358e-06, 3.077800000000214e-05, 1.3889999999974756e-06, 3.106900000000162e-05, 1.389000000000945e-06, 2.7957999999998068e-05, 1.3610000000018052e-06, 2.67369999999989e-05, 1.3609999999983358e-06, 2.6416000000001327e-05, 1.403000000000515e-06, 2.7986000000000677e-05, 1.3339999999986696e-06, 2.8263000000000593e-05, 1.3749999999979057e-06, 2.9528000000000887e-05, 1.3750000000013751e-06, 2.8653000000000012e-05, 1.318999999999626e-06, 3.169499999999825e-05, 1.3750000000013751e-06, 2.8903000000000262e-05, 1.3750000000013751e-06, 2.5790999999997233e-05, 1.3750000000013751e-06, 2.268100000000009e-05, 1.3750000000013751e-06, 2.2679999999997147e-05, 1.3620000000012789e-06, 2.6096999999999232e-05, 1.389000000000945e-06, 2.9832999999999943e-05, 1.3609999999983358e-06, 2.9222000000002357e-05, 1.3889999999974756e-06, 2.515299999999998e-05, 1.3610000000018052e-06, 2.6721999999999857e-05, 1.4170000000000849e-06, 2.356900000000106e-05, 1.3889999999974756e-06]}</msg>
<status status="PASS" starttime="20201030 18:27:11.976" endtime="20201030 18:27:11.981"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:11.973" endtime="20201030 18:27:11.981"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:11.985" level="INFO">${RESULT} = [{'diff': 1.4860000000019302e-06}, {'diff': 1.3750000000013751e-06}, {'diff': 1.3750000000013751e-06}, {'diff': 1.3620000000012789e-06}, {'diff': 1.3330000000026654e-06}, {'diff': 1.3620000000012789e-...</msg>
<status status="PASS" starttime="20201030 18:27:11.982" endtime="20201030 18:27:11.985"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:11.990" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.4860000000019302e-06, 1.3750000000013751e-06, 1.3750000000013751e-06, 1.3620000000012789e-06, 1.3330000000026654e-06, 1.3620000000012789e-06, 1.3750000000013751e-06, 1.318999999999626e-06,...</msg>
<status status="PASS" starttime="20201030 18:27:11.986" endtime="20201030 18:27:11.990"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:11.994" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:27:11.993" endtime="20201030 18:27:11.995"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:11.997" level="INFO">VALUE: [1.4860000000019302e-06, 1.3750000000013751e-06, 1.3750000000013751e-06, 1.3620000000012789e-06, 1.3330000000026654e-06, 1.3620000000012789e-06, 1.3750000000013751e-06, 1.318999999999626e-06, 1.3750000000013751e-06, 1.389000000000945e-06, 1.389000000000945e-06, 1.389000000000945e-06, 1.3610000000018052e-06, 1.3610000000018052e-06, 1.3610000000018052e-06, 1.3339999999986696e-06, 1.3749999999979057e-06, 1.3609999999983358e-06, 1.3750000000013751e-06, 1.318999999999626e-06, 1.3749999999979057e-06, 1.332999999999196e-06, 1.3749999999979057e-06, 1.4020000000010413e-06, 1.3889999999974756e-06, 1.3750000000013751e-06, 1.3750000000013751e-06, 1.403000000000515e-06, 1.3750000000013751e-06, 1.3609999999983358e-06, 1.3889999999974756e-06, 1.389000000000945e-06, 1.3610000000018052e-06, 1.3609999999983358e-06, 1.403000000000515e-06, 1.3339999999986696e-06, 1.3749999999979057e-06, 1.3750000000013751e-06, 1.318999999999626e-06, 1.3750000000013751e-06, 1.3750000000013751e-06, 1.3750000000013751e-06, 1.3750000000013751e-06, 1.3620000000012789e-06, 1.389000000000945e-06, 1.3609999999983358e-06, 1.3889999999974756e-06, 1.3610000000018052e-06, 1.4170000000000849e-06, 1.3889999999974756e-06]</msg>
<status status="PASS" starttime="20201030 18:27:11.995" endtime="20201030 18:27:11.997"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:11.991" endtime="20201030 18:27:11.998"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:12.001" endtime="20201030 18:27:12.021"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:12.000" endtime="20201030 18:27:12.021"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:11.999" endtime="20201030 18:27:12.022"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:11.556" endtime="20201030 18:27:12.022"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:11.556" endtime="20201030 18:27:12.022"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:12.030" endtime="20201030 18:27:12.039"></status>
</kw>
<msg timestamp="20201030 18:27:12.040" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:12.028" endtime="20201030 18:27:12.040"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:12.042" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:12.041" endtime="20201030 18:27:12.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:12.043" endtime="20201030 18:27:12.045"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:12.026" endtime="20201030 18:27:12.045"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:12.024" endtime="20201030 18:27:12.046"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:12.052" endtime="20201030 18:27:12.345"></status>
</kw>
<msg timestamp="20201030 18:27:12.348" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018506986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018508472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:12.051" endtime="20201030 18:27:12.348"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:12.356" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018506986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018508472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:12.349" endtime="20201030 18:27:12.357"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:12.358" endtime="20201030 18:27:12.360"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:12.048" endtime="20201030 18:27:12.360"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:12.046" endtime="20201030 18:27:12.361"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:27:12.389" level="INFO">${debug} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201030 18:27:12.361" endtime="20201030 18:27:12.389"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:12.390" endtime="20201030 18:27:12.392"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:12.395" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:27:12.394" endtime="20201030 18:27:12.396"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:12.400" level="INFO">VALUE: {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'], 'diff': [0, 1.4860000000019302e-06, 2.9527999999997417e-05, 1.389000000000945e-06, 2.516699999999955e-05, 1.3470000000022353e-06, 2.6429999999997428e-05, 1.348000000001709e-06, 2.5791000000000702e-05, 1.3749999999979057e-06, 2.9833999999999417e-05, 1.3880000000014714e-06, 2.920899999999879e-05, 1.3610000000018052e-06, 2.9832999999999943e-05, 1.3889999999974756e-06, 3.0139000000001942e-05, 1.3750000000013751e-06, 2.515299999999998e-05, 1.3749999999979057e-06, 2.8916000000000358e-05, 1.3620000000012789e-06, 2.362499999999934e-05, 1.3609999999983358e-06, 3.138899999999972e-05, 1.3750000000013751e-06, 2.8929999999999928e-05, 1.3469999999987659e-06, 2.361099999999977e-05, 1.3620000000012789e-06, 2.5166000000000077e-05, 1.389000000000945e-06, 2.8582999999998693e-05, 1.3750000000013751e-06, 2.7361999999999526e-05, 1.3750000000013751e-06, 2.8568999999999123e-05, 1.3749999999979057e-06, 2.8583000000002162e-05, 1.3889999999974756e-06, 2.64170000000008e-05, 1.3610000000018052e-06, 2.8582999999998693e-05, 1.3750000000013751e-06, 2.6110999999998802e-05, 1.3750000000013751e-06, 2.8903000000000262e-05, 1.3609999999983358e-06, 2.486100000000102e-05, 1.3749999999979057e-06, 3.0153000000001512e-05, 1.3609999999983358e-06, 2.9834000000002886e-05, 1.3889999999974756e-06, 2.486100000000102e-05, 1.3469999999987659e-06, 3.233300000000244e-05, 1.3749999999979057e-06, 2.9846999999999513e-05, 1.3620000000012789e-06, 2.9832999999999943e-05, 1.3750000000013751e-06, 3.0138999999998473e-05, 1.389000000000945e-06, 2.8264000000000067e-05, 1.3749999999979057e-06, 2.2986000000002615e-05, 1.3889999999974756e-06, 2.8888000000001218e-05, 1.3750000000013751e-06, 3.0138999999998473e-05, 1.3750000000013751e-06, 2.2735999999998896e-05, 1.3059999999995298e-06, 2.8277999999999637e-05, 1.3750000000013751e-06, 2.6415999999997858e-05, 1.3620000000012789e-06, 2.5179999999999647e-05, 1.3610000000018052e-06, 2.7652999999999012e-05, 1.389000000000945e-06, 2.8888999999997222e-05, 1.3610000000018052e-06, 2.5179999999999647e-05, 1.3750000000013751e-06, 2.365299999999848e-05, 1.3610000000018052e-06, 2.512499999999737e-05, 1.3750000000013751e-06, 2.5847999999998456e-05, 1.3190000000030955e-06, 3.137499999999668e-05, 1.3750000000013751e-06, 3.140299999999929e-05, 1.403000000000515e-06, 2.9805000000000803e-05, 1.3750000000013751e-06, 3.168099999999868e-05, 1.389000000000945e-06], 'time': [0.018506986, 0.018508472, 0.018538, 0.018539389, 0.018564556, 0.018565903, 0.018592333, 0.018593681, 0.018619472, 0.018620847, 0.018650681, 0.018652069, 0.018681278, 0.018682639, 0.018712472, 0.018713861, 0.018744, 0.018745375, 0.018770528, 0.018771903, 0.018800819, 0.018802181, 0.018825806, 0.018827167, 0.018858556, 0.018859931, 0.018888861, 0.018890208, 0.018913819, 0.018915181, 0.018940347, 0.018941736, 0.018970319, 0.018971694, 0.018999056, 0.019000431, 0.019029, 0.019030375, 0.019058958, 0.019060347, 0.019086764, 0.019088125, 0.019116708, 0.019118083, 0.019144194, 0.019145569, 0.019174472, 0.019175833, 0.019200694, 0.019202069, 0.019232222, 0.019233583, 0.019263417, 0.019264806, 0.019289667, 0.019291014, 0.019323347, 0.019324722, 0.019354569, 0.019355931, 0.019385764, 0.019387139, 0.019417278, 0.019418667, 0.019446931, 0.019448306, 0.019471292, 0.019472681, 0.019501569, 0.019502944, 0.019533083, 0.019534458, 0.019557194, 0.0195585, 0.019586778, 0.019588153, 0.019614569, 0.019615931, 0.019641111, 0.019642472, 0.019670125, 0.019671514, 0.019700403, 0.019701764, 0.019726944, 0.019728319, 0.019751972, 0.019753333, 0.019778458, 0.019779833, 0.019805681, 0.019807, 0.019838375, 0.01983975, 0.019871153, 0.019872556, 0.019902361, 0.019903736, 0.019935417, 0.019936806], 'eventsource_diff': [0, 1.4860000000019302e-06, 2.9527999999997417e-05, 1.389000000000945e-06, 2.516699999999955e-05, 1.3470000000022353e-06, 2.6429999999997428e-05, 1.348000000001709e-06, 2.5791000000000702e-05, 1.3749999999979057e-06, 2.9833999999999417e-05, 1.3880000000014714e-06, 2.920899999999879e-05, 1.3610000000018052e-06, 2.9832999999999943e-05, 1.3889999999974756e-06, 3.0139000000001942e-05, 1.3750000000013751e-06, 2.515299999999998e-05, 1.3749999999979057e-06, 2.8916000000000358e-05, 1.3620000000012789e-06, 2.362499999999934e-05, 1.3609999999983358e-06, 3.138899999999972e-05, 1.3750000000013751e-06, 2.8929999999999928e-05, 1.3469999999987659e-06, 2.361099999999977e-05, 1.3620000000012789e-06, 2.5166000000000077e-05, 1.389000000000945e-06, 2.8582999999998693e-05, 1.3750000000013751e-06, 2.7361999999999526e-05, 1.3750000000013751e-06, 2.8568999999999123e-05, 1.3749999999979057e-06, 2.8583000000002162e-05, 1.3889999999974756e-06, 2.64170000000008e-05, 1.3610000000018052e-06, 2.8582999999998693e-05, 1.3750000000013751e-06, 2.6110999999998802e-05, 1.3750000000013751e-06, 2.8903000000000262e-05, 1.3609999999983358e-06, 2.486100000000102e-05, 1.3749999999979057e-06, 3.0153000000001512e-05, 1.3609999999983358e-06, 2.9834000000002886e-05, 1.3889999999974756e-06, 2.486100000000102e-05, 1.3469999999987659e-06, 3.233300000000244e-05, 1.3749999999979057e-06, 2.9846999999999513e-05, 1.3620000000012789e-06, 2.9832999999999943e-05, 1.3750000000013751e-06, 3.0138999999998473e-05, 1.389000000000945e-06, 2.8264000000000067e-05, 1.3749999999979057e-06, 2.2986000000002615e-05, 1.3889999999974756e-06, 2.8888000000001218e-05, 1.3750000000013751e-06, 3.0138999999998473e-05, 1.3750000000013751e-06, 2.2735999999998896e-05, 1.3059999999995298e-06, 2.8277999999999637e-05, 1.3750000000013751e-06, 2.6415999999997858e-05, 1.3620000000012789e-06, 2.5179999999999647e-05, 1.3610000000018052e-06, 2.7652999999999012e-05, 1.389000000000945e-06, 2.8888999999997222e-05, 1.3610000000018052e-06, 2.5179999999999647e-05, 1.3750000000013751e-06, 2.365299999999848e-05, 1.3610000000018052e-06, 2.512499999999737e-05, 1.3750000000013751e-06, 2.5847999999998456e-05, 1.3190000000030955e-06, 3.137499999999668e-05, 1.3750000000013751e-06, 3.140299999999929e-05, 1.403000000000515e-06, 2.9805000000000803e-05, 1.3750000000013751e-06, 3.168099999999868e-05, 1.389000000000945e-06]}</msg>
<status status="PASS" starttime="20201030 18:27:12.396" endtime="20201030 18:27:12.401"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:12.393" endtime="20201030 18:27:12.401"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:12.405" level="INFO">${RESULT} = [{'diff': 1.4860000000019302e-06}, {'diff': 1.389000000000945e-06}, {'diff': 1.3470000000022353e-06}, {'diff': 1.348000000001709e-06}, {'diff': 1.3749999999979057e-06}, {'diff': 1.3880000000014714e-06...</msg>
<status status="PASS" starttime="20201030 18:27:12.402" endtime="20201030 18:27:12.405"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:12.409" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.4860000000019302e-06, 1.389000000000945e-06, 1.3470000000022353e-06, 1.348000000001709e-06, 1.3749999999979057e-06, 1.3880000000014714e-06, 1.3610000000018052e-06, 1.3889999999974756e-06, ...</msg>
<status status="PASS" starttime="20201030 18:27:12.406" endtime="20201030 18:27:12.410"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:12.414" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:27:12.413" endtime="20201030 18:27:12.415"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:12.417" level="INFO">VALUE: [1.4860000000019302e-06, 1.389000000000945e-06, 1.3470000000022353e-06, 1.348000000001709e-06, 1.3749999999979057e-06, 1.3880000000014714e-06, 1.3610000000018052e-06, 1.3889999999974756e-06, 1.3750000000013751e-06, 1.3749999999979057e-06, 1.3620000000012789e-06, 1.3609999999983358e-06, 1.3750000000013751e-06, 1.3469999999987659e-06, 1.3620000000012789e-06, 1.389000000000945e-06, 1.3750000000013751e-06, 1.3750000000013751e-06, 1.3749999999979057e-06, 1.3889999999974756e-06, 1.3610000000018052e-06, 1.3750000000013751e-06, 1.3750000000013751e-06, 1.3609999999983358e-06, 1.3749999999979057e-06, 1.3609999999983358e-06, 1.3889999999974756e-06, 1.3469999999987659e-06, 1.3749999999979057e-06, 1.3620000000012789e-06, 1.3750000000013751e-06, 1.389000000000945e-06, 1.3749999999979057e-06, 1.3889999999974756e-06, 1.3750000000013751e-06, 1.3750000000013751e-06, 1.3059999999995298e-06, 1.3750000000013751e-06, 1.3620000000012789e-06, 1.3610000000018052e-06, 1.389000000000945e-06, 1.3610000000018052e-06, 1.3750000000013751e-06, 1.3610000000018052e-06, 1.3750000000013751e-06, 1.3190000000030955e-06, 1.3750000000013751e-06, 1.403000000000515e-06, 1.3750000000013751e-06, 1.389000000000945e-06]</msg>
<status status="PASS" starttime="20201030 18:27:12.415" endtime="20201030 18:27:12.417"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:12.410" endtime="20201030 18:27:12.418"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:12.421" endtime="20201030 18:27:12.441"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:12.420" endtime="20201030 18:27:12.442"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:12.419" endtime="20201030 18:27:12.442"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:12.023" endtime="20201030 18:27:12.442"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:12.022" endtime="20201030 18:27:12.442"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:12.450" endtime="20201030 18:27:12.460"></status>
</kw>
<msg timestamp="20201030 18:27:12.460" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:12.449" endtime="20201030 18:27:12.461"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:12.463" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:12.461" endtime="20201030 18:27:12.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:12.464" endtime="20201030 18:27:12.466"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:12.446" endtime="20201030 18:27:12.466"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:12.444" endtime="20201030 18:27:12.467"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:12.473" endtime="20201030 18:27:12.780"></status>
</kw>
<msg timestamp="20201030 18:27:12.784" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018739875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018741375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:12.472" endtime="20201030 18:27:12.784"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:12.792" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018739875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018741375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:12.785" endtime="20201030 18:27:12.793"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:12.793" endtime="20201030 18:27:12.795"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:12.469" endtime="20201030 18:27:12.796"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:12.467" endtime="20201030 18:27:12.796"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:27:12.821" level="INFO">${debug} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201030 18:27:12.797" endtime="20201030 18:27:12.821"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:12.822" endtime="20201030 18:27:12.824"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:12.827" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:27:12.826" endtime="20201030 18:27:12.828"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:12.831" level="INFO">VALUE: {'sourcediff': [0, 1.5000000000015001e-06, 2.5805999999999746e-05, 1.3749999999979057e-06, 2.6152000000001507e-05, 1.3199999999990997e-06, 2.7333000000000912e-05, 1.3609999999983358e-06, 2.6736000000002896e-05, 1.3749999999979057e-06, 2.8584000000001636e-05, 1.3609999999983358e-06, 3.2332999999998974e-05, 1.3610000000018052e-06, 3.202799999999992e-05, 1.3609999999983358e-06, 2.8292000000002676e-05, 1.3609999999983358e-06, 2.7722000000000857e-05, 1.3199999999990997e-06, 3.2304999999999834e-05, 1.3610000000018052e-06, 2.363899999999891e-05, 1.3610000000018052e-06, 2.795899999999754e-05, 1.3750000000013751e-06, 3.169399999999878e-05, 1.3750000000013751e-06, 3.1082999999997724e-05, 1.3610000000018052e-06, 2.8916999999999832e-05, 1.3609999999983358e-06, 2.8611000000001302e-05, 1.3610000000018052e-06, 3.137499999999668e-05, 1.3620000000012789e-06, 2.4540999999999452e-05, 1.389000000000945e-06, 2.488900000000016e-05, 1.318999999999626e-06, 3.045900000000004e-05, 1.3610000000018052e-06, 3.111099999999686e-05, 1.3470000000022353e-06, 2.5792000000000176e-05, 1.3609999999983358e-06, 2.5472000000002076e-05, 1.3889999999974756e-06, 2.8570000000002066e-05, 1.3749999999979057e-06, 2.7958000000001537e-05, 1.3750000000013751e-06, 2.4221999999997357e-05, 1.3750000000013751e-06, 2.5500000000001216e-05, 1.332999999999196e-06, 2.7027999999998387e-05, 1.389000000000945e-06, 3.169499999999825e-05, 1.3880000000014714e-06, 3.198700000000068e-05, 1.3749999999979057e-06, 3.0152000000002038e-05, 1.403000000000515e-06, 2.79309999999984e-05, 1.3750000000013751e-06, 2.5152000000000507e-05, 1.3749999999979057e-06, 2.8277999999999637e-05, 1.3610000000018052e-06, 2.64170000000008e-05, 1.3749999999979057e-06, 2.6082999999999662e-05, 1.3750000000013751e-06, 2.3320000000000285e-05, 1.3469999999987659e-06, 2.9528000000000887e-05, 1.3609999999983358e-06, 3.0458000000000568e-05, 1.389000000000945e-06, 3.202799999999992e-05, 1.3469999999987659e-06, 3.0139000000001942e-05, 1.3609999999983358e-06, 3.233300000000244e-05, 1.3749999999979057e-06, 2.795900000000101e-05, 1.389000000000945e-06, 3.201399999999688e-05, 1.3470000000022353e-06, 3.170799999999835e-05, 1.3750000000013751e-06, 2.9221999999998888e-05, 1.348000000001709e-06, 2.6110999999998802e-05, 1.389000000000945e-06, 2.2958000000000006e-05, 1.3749999999979057e-06, 2.5500000000001216e-05, 1.4170000000000849e-06], 'time': [0.018739875, 0.018741375, 0.018767181, 0.018768556, 0.018794708, 0.018796028, 0.018823361, 0.018824722, 0.018851458, 0.018852833, 0.018881417, 0.018882778, 0.018915111, 0.018916472, 0.0189485, 0.018949861, 0.018978153, 0.018979514, 0.019007236, 0.019008556, 0.019040861, 0.019042222, 0.019065861, 0.019067222, 0.019095181, 0.019096556, 0.01912825, 0.019129625, 0.019160708, 0.019162069, 0.019190986, 0.019192347, 0.019220958, 0.019222319, 0.019253694, 0.019255056, 0.019279597, 0.019280986, 0.019305875, 0.019307194, 0.019337653, 0.019339014, 0.019370125, 0.019371472, 0.019397264, 0.019398625, 0.019424097, 0.019425486, 0.019454056, 0.019455431, 0.019483389, 0.019484764, 0.019508986, 0.019510361, 0.019535861, 0.019537194, 0.019564222, 0.019565611, 0.019597306, 0.019598694, 0.019630681, 0.019632056, 0.019662208, 0.019663611, 0.019691542, 0.019692917, 0.019718069, 0.019719444, 0.019747722, 0.019749083, 0.0197755, 0.019776875, 0.019802958, 0.019804333, 0.019827653, 0.019829, 0.019858528, 0.019859889, 0.019890347, 0.019891736, 0.019923764, 0.019925111, 0.01995525, 0.019956611, 0.019988944, 0.019990319, 0.020018278, 0.020019667, 0.020051681, 0.020053028, 0.020084736, 0.020086111, 0.020115333, 0.020116681, 0.020142792, 0.020144181, 0.020167139, 0.020168514, 0.020194014, 0.020195431], 'eventsource_diff': [0, 1.5000000000015001e-06, 2.5805999999999746e-05, 1.3749999999979057e-06, 2.6152000000001507e-05, 1.3199999999990997e-06, 2.7333000000000912e-05, 1.3609999999983358e-06, 2.6736000000002896e-05, 1.3749999999979057e-06, 2.8584000000001636e-05, 1.3609999999983358e-06, 3.2332999999998974e-05, 1.3610000000018052e-06, 3.202799999999992e-05, 1.3609999999983358e-06, 2.8292000000002676e-05, 1.3609999999983358e-06, 2.7722000000000857e-05, 1.3199999999990997e-06, 3.2304999999999834e-05, 1.3610000000018052e-06, 2.363899999999891e-05, 1.3610000000018052e-06, 2.795899999999754e-05, 1.3750000000013751e-06, 3.169399999999878e-05, 1.3750000000013751e-06, 3.1082999999997724e-05, 1.3610000000018052e-06, 2.8916999999999832e-05, 1.3609999999983358e-06, 2.8611000000001302e-05, 1.3610000000018052e-06, 3.137499999999668e-05, 1.3620000000012789e-06, 2.4540999999999452e-05, 1.389000000000945e-06, 2.488900000000016e-05, 1.318999999999626e-06, 3.045900000000004e-05, 1.3610000000018052e-06, 3.111099999999686e-05, 1.3470000000022353e-06, 2.5792000000000176e-05, 1.3609999999983358e-06, 2.5472000000002076e-05, 1.3889999999974756e-06, 2.8570000000002066e-05, 1.3749999999979057e-06, 2.7958000000001537e-05, 1.3750000000013751e-06, 2.4221999999997357e-05, 1.3750000000013751e-06, 2.5500000000001216e-05, 1.332999999999196e-06, 2.7027999999998387e-05, 1.389000000000945e-06, 3.169499999999825e-05, 1.3880000000014714e-06, 3.198700000000068e-05, 1.3749999999979057e-06, 3.0152000000002038e-05, 1.403000000000515e-06, 2.79309999999984e-05, 1.3750000000013751e-06, 2.5152000000000507e-05, 1.3749999999979057e-06, 2.8277999999999637e-05, 1.3610000000018052e-06, 2.64170000000008e-05, 1.3749999999979057e-06, 2.6082999999999662e-05, 1.3750000000013751e-06, 2.3320000000000285e-05, 1.3469999999987659e-06, 2.9528000000000887e-05, 1.3609999999983358e-06, 3.0458000000000568e-05, 1.389000000000945e-06, 3.202799999999992e-05, 1.3469999999987659e-06, 3.0139000000001942e-05, 1.3609999999983358e-06, 3.233300000000244e-05, 1.3749999999979057e-06, 2.795900000000101e-05, 1.389000000000945e-06, 3.201399999999688e-05, 1.3470000000022353e-06, 3.170799999999835e-05, 1.3750000000013751e-06, 2.9221999999998888e-05, 1.348000000001709e-06, 2.6110999999998802e-05, 1.389000000000945e-06, 2.2958000000000006e-05, 1.3749999999979057e-06, 2.5500000000001216e-05, 1.4170000000000849e-06]}</msg>
<status status="PASS" starttime="20201030 18:27:12.828" endtime="20201030 18:27:12.838"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:12.824" endtime="20201030 18:27:12.839"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:12.843" level="INFO">${RESULT} = [{'diff': 1.5000000000015001e-06}, {'diff': 1.3749999999979057e-06}, {'diff': 1.3199999999990997e-06}, {'diff': 1.3609999999983358e-06}, {'diff': 1.3749999999979057e-06}, {'diff': 1.3609999999983358e-...</msg>
<status status="PASS" starttime="20201030 18:27:12.839" endtime="20201030 18:27:12.843"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:12.847" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.5000000000015001e-06, 1.3749999999979057e-06, 1.3199999999990997e-06, 1.3609999999983358e-06, 1.3749999999979057e-06, 1.3609999999983358e-06, 1.3610000000018052e-06, 1.3609999999983358e-06...</msg>
<status status="PASS" starttime="20201030 18:27:12.844" endtime="20201030 18:27:12.847"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:12.851" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:27:12.850" endtime="20201030 18:27:12.852"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:12.854" level="INFO">VALUE: [1.5000000000015001e-06, 1.3749999999979057e-06, 1.3199999999990997e-06, 1.3609999999983358e-06, 1.3749999999979057e-06, 1.3609999999983358e-06, 1.3610000000018052e-06, 1.3609999999983358e-06, 1.3609999999983358e-06, 1.3199999999990997e-06, 1.3610000000018052e-06, 1.3610000000018052e-06, 1.3750000000013751e-06, 1.3750000000013751e-06, 1.3610000000018052e-06, 1.3609999999983358e-06, 1.3610000000018052e-06, 1.3620000000012789e-06, 1.389000000000945e-06, 1.318999999999626e-06, 1.3610000000018052e-06, 1.3470000000022353e-06, 1.3609999999983358e-06, 1.3889999999974756e-06, 1.3749999999979057e-06, 1.3750000000013751e-06, 1.3750000000013751e-06, 1.332999999999196e-06, 1.389000000000945e-06, 1.3880000000014714e-06, 1.3749999999979057e-06, 1.403000000000515e-06, 1.3750000000013751e-06, 1.3749999999979057e-06, 1.3610000000018052e-06, 1.3749999999979057e-06, 1.3750000000013751e-06, 1.3469999999987659e-06, 1.3609999999983358e-06, 1.389000000000945e-06, 1.3469999999987659e-06, 1.3609999999983358e-06, 1.3749999999979057e-06, 1.389000000000945e-06, 1.3470000000022353e-06, 1.3750000000013751e-06, 1.348000000001709e-06, 1.389000000000945e-06, 1.3749999999979057e-06, 1.4170000000000849e-06]</msg>
<status status="PASS" starttime="20201030 18:27:12.852" endtime="20201030 18:27:12.854"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:12.848" endtime="20201030 18:27:12.855"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:12.858" endtime="20201030 18:27:12.878"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:12.857" endtime="20201030 18:27:12.878"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:12.856" endtime="20201030 18:27:12.879"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:12.443" endtime="20201030 18:27:12.879"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:12.443" endtime="20201030 18:27:12.879"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:12.888" endtime="20201030 18:27:12.898"></status>
</kw>
<msg timestamp="20201030 18:27:12.898" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:12.886" endtime="20201030 18:27:12.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:12.901" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:12.899" endtime="20201030 18:27:12.901"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:12.902" endtime="20201030 18:27:12.903"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:12.884" endtime="20201030 18:27:12.904"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:12.881" endtime="20201030 18:27:12.904"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:12.911" endtime="20201030 18:27:13.196"></status>
</kw>
<msg timestamp="20201030 18:27:13.200" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019701431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019702931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:12.909" endtime="20201030 18:27:13.200"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:13.208" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019701431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019702931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:13.201" endtime="20201030 18:27:13.208"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:13.209" endtime="20201030 18:27:13.211"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:12.907" endtime="20201030 18:27:13.212"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:12.905" endtime="20201030 18:27:13.212"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:27:13.236" level="INFO">${debug} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201030 18:27:13.213" endtime="20201030 18:27:13.236"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:13.237" endtime="20201030 18:27:13.239"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:13.242" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:27:13.241" endtime="20201030 18:27:13.243"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:13.246" level="INFO">VALUE: {'sourcediff': [0, 1.5000000000015001e-06, 2.484700000000145e-05, 1.3609999999983358e-06, 2.2971999999999576e-05, 1.3750000000013751e-06, 2.5541999999999926e-05, 1.3050000000000561e-06, 2.2985999999999146e-05, 1.3620000000012789e-06, 3.1082999999997724e-05, 1.3750000000013751e-06, 2.9542000000000457e-05, 1.3469999999987659e-06, 2.4540999999999452e-05, 1.3750000000013751e-06, 2.547299999999808e-05, 1.4020000000010413e-06, 3.0417000000001332e-05, 1.3749999999979057e-06, 2.393100000000134e-05, 1.3610000000018052e-06, 3.2068999999999154e-05, 1.3059999999995298e-06, 2.330500000000124e-05, 1.3609999999983358e-06, 2.4541999999998926e-05, 1.3750000000013751e-06, 2.5778000000000606e-05, 1.3609999999983358e-06, 2.766700000000205e-05, 1.3609999999983358e-06, 3.201400000000035e-05, 1.389000000000945e-06, 3.074999999999953e-05, 1.387999999998002e-06, 2.638900000000166e-05, 1.389000000000945e-06, 2.4513999999999786e-05, 1.4449999999992247e-06, 2.8263000000000593e-05, 1.3619999999978094e-06, 3.2263000000001124e-05, 1.3750000000013751e-06, 2.922299999999836e-05, 1.3610000000018052e-06, 2.3929999999998397e-05, 1.3610000000018052e-06, 3.172299999999739e-05, 1.3470000000022353e-06, 2.3304999999997772e-05, 1.3620000000012789e-06, 2.3915999999998827e-05, 1.3750000000013751e-06, 2.5778000000000606e-05, 1.3889999999974756e-06, 2.608300000000313e-05, 1.3609999999983358e-06, 3.141699999999886e-05, 1.3470000000022353e-06, 2.6110999999998802e-05, 1.403000000000515e-06, 2.512500000000084e-05, 1.3749999999979057e-06, 3.138899999999972e-05, 1.389000000000945e-06, 2.7652999999999012e-05, 1.3610000000018052e-06, 3.1068999999998154e-05, 1.389000000000945e-06, 2.8277999999999637e-05, 1.3610000000018052e-06, 3.169399999999878e-05, 1.389000000000945e-06, 3.045900000000004e-05, 1.3609999999983358e-06, 2.361099999999977e-05, 1.403000000000515e-06, 2.7305000000001772e-05, 1.3749999999979057e-06, 3.076400000000257e-05, 1.3749999999979057e-06, 2.9832999999999943e-05, 1.3620000000012789e-06, 3.0458000000000568e-05, 1.3889999999974756e-06, 2.5472000000002076e-05, 1.3749999999979057e-06, 2.640300000000123e-05, 1.389000000000945e-06, 2.7943999999998498e-05, 1.3750000000013751e-06, 2.515299999999998e-05, 1.3749999999979057e-06, 2.6736000000002896e-05, 1.4029999999970455e-06, 3.0430000000001428e-05, 1.348000000001709e-06, 3.015199999999857e-05, 1.3609999999983358e-06], 'time': [0.019701431, 0.019702931, 0.019727778, 0.019729139, 0.019752111, 0.019753486, 0.019779028, 0.019780333, 0.019803319, 0.019804681, 0.019835764, 0.019837139, 0.019866681, 0.019868028, 0.019892569, 0.019893944, 0.019919417, 0.019920819, 0.019951236, 0.019952611, 0.019976542, 0.019977903, 0.020009972, 0.020011278, 0.020034583, 0.020035944, 0.020060486, 0.020061861, 0.020087639, 0.020089, 0.020116667, 0.020118028, 0.020150042, 0.020151431, 0.020182181, 0.020183569, 0.020209958, 0.020211347, 0.020235861, 0.020237306, 0.020265569, 0.020266931, 0.020299194, 0.020300569, 0.020329792, 0.020331153, 0.020355083, 0.020356444, 0.020388167, 0.020389514, 0.020412819, 0.020414181, 0.020438097, 0.020439472, 0.02046525, 0.020466639, 0.020492722, 0.020494083, 0.0205255, 0.020526847, 0.020552958, 0.020554361, 0.020579486, 0.020580861, 0.02061225, 0.020613639, 0.020641292, 0.020642653, 0.020673722, 0.020675111, 0.020703389, 0.02070475, 0.020736444, 0.020737833, 0.020768292, 0.020769653, 0.020793264, 0.020794667, 0.020821972, 0.020823347, 0.020854111, 0.020855486, 0.020885319, 0.020886681, 0.020917139, 0.020918528, 0.020944, 0.020945375, 0.020971778, 0.020973167, 0.021001111, 0.021002486, 0.021027639, 0.021029014, 0.02105575, 0.021057153, 0.021087583, 0.021088931, 0.021119083, 0.021120444], 'eventsource_diff': [0, 1.5000000000015001e-06, 2.484700000000145e-05, 1.3609999999983358e-06, 2.2971999999999576e-05, 1.3750000000013751e-06, 2.5541999999999926e-05, 1.3050000000000561e-06, 2.2985999999999146e-05, 1.3620000000012789e-06, 3.1082999999997724e-05, 1.3750000000013751e-06, 2.9542000000000457e-05, 1.3469999999987659e-06, 2.4540999999999452e-05, 1.3750000000013751e-06, 2.547299999999808e-05, 1.4020000000010413e-06, 3.0417000000001332e-05, 1.3749999999979057e-06, 2.393100000000134e-05, 1.3610000000018052e-06, 3.2068999999999154e-05, 1.3059999999995298e-06, 2.330500000000124e-05, 1.3609999999983358e-06, 2.4541999999998926e-05, 1.3750000000013751e-06, 2.5778000000000606e-05, 1.3609999999983358e-06, 2.766700000000205e-05, 1.3609999999983358e-06, 3.201400000000035e-05, 1.389000000000945e-06, 3.074999999999953e-05, 1.387999999998002e-06, 2.638900000000166e-05, 1.389000000000945e-06, 2.4513999999999786e-05, 1.4449999999992247e-06, 2.8263000000000593e-05, 1.3619999999978094e-06, 3.2263000000001124e-05, 1.3750000000013751e-06, 2.922299999999836e-05, 1.3610000000018052e-06, 2.3929999999998397e-05, 1.3610000000018052e-06, 3.172299999999739e-05, 1.3470000000022353e-06, 2.3304999999997772e-05, 1.3620000000012789e-06, 2.3915999999998827e-05, 1.3750000000013751e-06, 2.5778000000000606e-05, 1.3889999999974756e-06, 2.608300000000313e-05, 1.3609999999983358e-06, 3.141699999999886e-05, 1.3470000000022353e-06, 2.6110999999998802e-05, 1.403000000000515e-06, 2.512500000000084e-05, 1.3749999999979057e-06, 3.138899999999972e-05, 1.389000000000945e-06, 2.7652999999999012e-05, 1.3610000000018052e-06, 3.1068999999998154e-05, 1.389000000000945e-06, 2.8277999999999637e-05, 1.3610000000018052e-06, 3.169399999999878e-05, 1.389000000000945e-06, 3.045900000000004e-05, 1.3609999999983358e-06, 2.361099999999977e-05, 1.403000000000515e-06, 2.7305000000001772e-05, 1.3749999999979057e-06, 3.076400000000257e-05, 1.3749999999979057e-06, 2.9832999999999943e-05, 1.3620000000012789e-06, 3.0458000000000568e-05, 1.3889999999974756e-06, 2.5472000000002076e-05, 1.3749999999979057e-06, 2.640300000000123e-05, 1.389000000000945e-06, 2.7943999999998498e-05, 1.3750000000013751e-06, 2.515299999999998e-05, 1.3749999999979057e-06, 2.6736000000002896e-05, 1.4029999999970455e-06, 3.0430000000001428e-05, 1.348000000001709e-06, 3.015199999999857e-05, 1.3609999999983358e-06]}</msg>
<status status="PASS" starttime="20201030 18:27:13.243" endtime="20201030 18:27:13.247"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:13.239" endtime="20201030 18:27:13.248"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:13.252" level="INFO">${RESULT} = [{'diff': 1.5000000000015001e-06}, {'diff': 1.3609999999983358e-06}, {'diff': 1.3750000000013751e-06}, {'diff': 1.3050000000000561e-06}, {'diff': 1.3620000000012789e-06}, {'diff': 1.3750000000013751e-...</msg>
<status status="PASS" starttime="20201030 18:27:13.249" endtime="20201030 18:27:13.252"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:13.257" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.5000000000015001e-06, 1.3609999999983358e-06, 1.3750000000013751e-06, 1.3050000000000561e-06, 1.3620000000012789e-06, 1.3750000000013751e-06, 1.3469999999987659e-06, 1.3750000000013751e-06...</msg>
<status status="PASS" starttime="20201030 18:27:13.253" endtime="20201030 18:27:13.257"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:13.261" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:27:13.260" endtime="20201030 18:27:13.261"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:13.263" level="INFO">VALUE: [1.5000000000015001e-06, 1.3609999999983358e-06, 1.3750000000013751e-06, 1.3050000000000561e-06, 1.3620000000012789e-06, 1.3750000000013751e-06, 1.3469999999987659e-06, 1.3750000000013751e-06, 1.4020000000010413e-06, 1.3749999999979057e-06, 1.3610000000018052e-06, 1.3059999999995298e-06, 1.3609999999983358e-06, 1.3750000000013751e-06, 1.3609999999983358e-06, 1.3609999999983358e-06, 1.389000000000945e-06, 1.387999999998002e-06, 1.389000000000945e-06, 1.4449999999992247e-06, 1.3619999999978094e-06, 1.3750000000013751e-06, 1.3610000000018052e-06, 1.3610000000018052e-06, 1.3470000000022353e-06, 1.3620000000012789e-06, 1.3750000000013751e-06, 1.3889999999974756e-06, 1.3609999999983358e-06, 1.3470000000022353e-06, 1.403000000000515e-06, 1.3749999999979057e-06, 1.389000000000945e-06, 1.3610000000018052e-06, 1.389000000000945e-06, 1.3610000000018052e-06, 1.389000000000945e-06, 1.3609999999983358e-06, 1.403000000000515e-06, 1.3749999999979057e-06, 1.3749999999979057e-06, 1.3620000000012789e-06, 1.3889999999974756e-06, 1.3749999999979057e-06, 1.389000000000945e-06, 1.3750000000013751e-06, 1.3749999999979057e-06, 1.4029999999970455e-06, 1.348000000001709e-06, 1.3609999999983358e-06]</msg>
<status status="PASS" starttime="20201030 18:27:13.262" endtime="20201030 18:27:13.264"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:13.258" endtime="20201030 18:27:13.264"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:13.268" endtime="20201030 18:27:13.287"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:13.266" endtime="20201030 18:27:13.288"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:13.265" endtime="20201030 18:27:13.288"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:12.880" endtime="20201030 18:27:13.289"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:12.879" endtime="20201030 18:27:13.289"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:13.297" endtime="20201030 18:27:13.306"></status>
</kw>
<msg timestamp="20201030 18:27:13.307" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:13.295" endtime="20201030 18:27:13.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:13.309" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:13.308" endtime="20201030 18:27:13.310"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:13.310" endtime="20201030 18:27:13.312"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:13.293" endtime="20201030 18:27:13.312"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:13.291" endtime="20201030 18:27:13.313"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:13.319" endtime="20201030 18:27:13.608"></status>
</kw>
<msg timestamp="20201030 18:27:13.611" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018766597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018768111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:13.318" endtime="20201030 18:27:13.612"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:13.621" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018766597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018768111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:13.613" endtime="20201030 18:27:13.622"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:13.622" endtime="20201030 18:27:13.624"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:13.315" endtime="20201030 18:27:13.625"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:13.314" endtime="20201030 18:27:13.625"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:27:13.649" level="INFO">${debug} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201030 18:27:13.626" endtime="20201030 18:27:13.649"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:13.650" endtime="20201030 18:27:13.652"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:13.655" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:27:13.654" endtime="20201030 18:27:13.655"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:13.659" level="INFO">VALUE: {'sourcediff': [0, 1.51400000000107e-06, 2.7652999999999012e-05, 1.3750000000013751e-06, 3.044399999999753e-05, 1.389000000000945e-06, 2.420900000000073e-05, 1.3750000000013751e-06, 2.7665999999999108e-05, 1.3609999999983358e-06, 3.170900000000129e-05, 1.389000000000945e-06, 2.5762999999998093e-05, 1.389000000000945e-06, 2.7013999999998817e-05, 1.389000000000945e-06, 2.5805999999999746e-05, 1.3610000000018052e-06, 2.7943999999998498e-05, 1.4170000000000849e-06, 2.7929999999998928e-05, 1.3620000000012789e-06, 2.7972000000001107e-05, 1.3889999999974756e-06, 2.32770000000021e-05, 1.3749999999979057e-06, 3.108400000000067e-05, 1.3750000000013751e-06, 2.7083000000000662e-05, 1.332999999999196e-06, 3.231999999999888e-05, 1.3750000000013751e-06, 3.2346999999998544e-05, 1.3469999999987659e-06, 2.64170000000008e-05, 1.3750000000013751e-06, 3.138899999999972e-05, 1.3609999999983358e-06, 3.204200000000296e-05, 1.3609999999983358e-06, 2.9846999999999513e-05, 1.3610000000018052e-06, 2.9846999999999513e-05, 1.403000000000515e-06, 2.5763999999997567e-05, 1.3750000000013751e-06, 2.7986000000000677e-05, 1.332999999999196e-06, 2.273699999999837e-05, 1.3190000000030955e-06, 3.0138999999998473e-05, 1.389000000000945e-06, 2.2985999999999146e-05, 1.3609999999983358e-06, 2.5194000000002686e-05, 1.3479999999982395e-06, 2.4249999999999966e-05, 1.3470000000022353e-06, 2.5804999999996803e-05, 1.3750000000013751e-06, 3.044500000000047e-05, 1.3750000000013751e-06, 2.266699999999705e-05, 1.3750000000013751e-06, 2.8582999999998693e-05, 1.3750000000013751e-06, 2.4541999999998926e-05, 1.3750000000013751e-06, 3.015199999999857e-05, 1.4170000000000849e-06, 2.9472000000002607e-05, 1.3889999999974756e-06, 2.7014000000002286e-05, 1.3749999999979057e-06, 2.461100000000077e-05, 1.3609999999983358e-06, 2.8222000000001357e-05, 1.389000000000945e-06, 3.074999999999953e-05, 1.3750000000013751e-06, 2.522299999999783e-05, 1.318999999999626e-06, 2.8916999999999832e-05, 1.3610000000018052e-06, 3.2068999999999154e-05, 1.3199999999990997e-06, 3.0485999999999708e-05, 1.3610000000018052e-06, 3.0138999999998473e-05, 1.4160000000006112e-06, 3.198700000000068e-05, 1.3609999999983358e-06, 2.8611000000001302e-05, 1.3469999999987659e-06, 2.766700000000205e-05, 1.3609999999983358e-06, 3.170800000000182e-05, 1.3749999999979057e-06, 2.9832999999999943e-05, 1.3750000000013751e-06], 'time': [0.018766597, 0.018768111, 0.018795764, 0.018797139, 0.018827583, 0.018828972, 0.018853181, 0.018854556, 0.018882222, 0.018883583, 0.018915292, 0.018916681, 0.018942444, 0.018943833, 0.018970847, 0.018972236, 0.018998042, 0.018999403, 0.019027347, 0.019028764, 0.019056694, 0.019058056, 0.019086028, 0.019087417, 0.019110694, 0.019112069, 0.019143153, 0.019144528, 0.019171611, 0.019172944, 0.019205264, 0.019206639, 0.019238986, 0.019240333, 0.01926675, 0.019268125, 0.019299514, 0.019300875, 0.019332917, 0.019334278, 0.019364125, 0.019365486, 0.019395333, 0.019396736, 0.0194225, 0.019423875, 0.019451861, 0.019453194, 0.019475931, 0.01947725, 0.019507389, 0.019508778, 0.019531764, 0.019533125, 0.019558319, 0.019559667, 0.019583917, 0.019585264, 0.019611069, 0.019612444, 0.019642889, 0.019644264, 0.019666931, 0.019668306, 0.019696889, 0.019698264, 0.019722806, 0.019724181, 0.019754333, 0.01975575, 0.019785222, 0.019786611, 0.019813625, 0.019815, 0.019839611, 0.019840972, 0.019869194, 0.019870583, 0.019901333, 0.019902708, 0.019927931, 0.01992925, 0.019958167, 0.019959528, 0.019991597, 0.019992917, 0.020023403, 0.020024764, 0.020054903, 0.020056319, 0.020088306, 0.020089667, 0.020118278, 0.020119625, 0.020147292, 0.020148653, 0.020180361, 0.020181736, 0.020211569, 0.020212944], 'eventsource_diff': [0, 1.51400000000107e-06, 2.7652999999999012e-05, 1.3750000000013751e-06, 3.044399999999753e-05, 1.389000000000945e-06, 2.420900000000073e-05, 1.3750000000013751e-06, 2.7665999999999108e-05, 1.3609999999983358e-06, 3.170900000000129e-05, 1.389000000000945e-06, 2.5762999999998093e-05, 1.389000000000945e-06, 2.7013999999998817e-05, 1.389000000000945e-06, 2.5805999999999746e-05, 1.3610000000018052e-06, 2.7943999999998498e-05, 1.4170000000000849e-06, 2.7929999999998928e-05, 1.3620000000012789e-06, 2.7972000000001107e-05, 1.3889999999974756e-06, 2.32770000000021e-05, 1.3749999999979057e-06, 3.108400000000067e-05, 1.3750000000013751e-06, 2.7083000000000662e-05, 1.332999999999196e-06, 3.231999999999888e-05, 1.3750000000013751e-06, 3.2346999999998544e-05, 1.3469999999987659e-06, 2.64170000000008e-05, 1.3750000000013751e-06, 3.138899999999972e-05, 1.3609999999983358e-06, 3.204200000000296e-05, 1.3609999999983358e-06, 2.9846999999999513e-05, 1.3610000000018052e-06, 2.9846999999999513e-05, 1.403000000000515e-06, 2.5763999999997567e-05, 1.3750000000013751e-06, 2.7986000000000677e-05, 1.332999999999196e-06, 2.273699999999837e-05, 1.3190000000030955e-06, 3.0138999999998473e-05, 1.389000000000945e-06, 2.2985999999999146e-05, 1.3609999999983358e-06, 2.5194000000002686e-05, 1.3479999999982395e-06, 2.4249999999999966e-05, 1.3470000000022353e-06, 2.5804999999996803e-05, 1.3750000000013751e-06, 3.044500000000047e-05, 1.3750000000013751e-06, 2.266699999999705e-05, 1.3750000000013751e-06, 2.8582999999998693e-05, 1.3750000000013751e-06, 2.4541999999998926e-05, 1.3750000000013751e-06, 3.015199999999857e-05, 1.4170000000000849e-06, 2.9472000000002607e-05, 1.3889999999974756e-06, 2.7014000000002286e-05, 1.3749999999979057e-06, 2.461100000000077e-05, 1.3609999999983358e-06, 2.8222000000001357e-05, 1.389000000000945e-06, 3.074999999999953e-05, 1.3750000000013751e-06, 2.522299999999783e-05, 1.318999999999626e-06, 2.8916999999999832e-05, 1.3610000000018052e-06, 3.2068999999999154e-05, 1.3199999999990997e-06, 3.0485999999999708e-05, 1.3610000000018052e-06, 3.0138999999998473e-05, 1.4160000000006112e-06, 3.198700000000068e-05, 1.3609999999983358e-06, 2.8611000000001302e-05, 1.3469999999987659e-06, 2.766700000000205e-05, 1.3609999999983358e-06, 3.170800000000182e-05, 1.3749999999979057e-06, 2.9832999999999943e-05, 1.3750000000013751e-06]}</msg>
<status status="PASS" starttime="20201030 18:27:13.656" endtime="20201030 18:27:13.660"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:13.652" endtime="20201030 18:27:13.661"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:13.665" level="INFO">${RESULT} = [{'diff': 1.51400000000107e-06}, {'diff': 1.3750000000013751e-06}, {'diff': 1.389000000000945e-06}, {'diff': 1.3750000000013751e-06}, {'diff': 1.3609999999983358e-06}, {'diff': 1.389000000000945e-06},...</msg>
<status status="PASS" starttime="20201030 18:27:13.662" endtime="20201030 18:27:13.665"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:13.670" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.51400000000107e-06, 1.3750000000013751e-06, 1.389000000000945e-06, 1.3750000000013751e-06, 1.3609999999983358e-06, 1.389000000000945e-06, 1.389000000000945e-06, 1.389000000000945e-06, 1.36...</msg>
<status status="PASS" starttime="20201030 18:27:13.666" endtime="20201030 18:27:13.670"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:13.675" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:27:13.674" endtime="20201030 18:27:13.675"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:13.679" level="INFO">VALUE: [1.51400000000107e-06, 1.3750000000013751e-06, 1.389000000000945e-06, 1.3750000000013751e-06, 1.3609999999983358e-06, 1.389000000000945e-06, 1.389000000000945e-06, 1.389000000000945e-06, 1.3610000000018052e-06, 1.4170000000000849e-06, 1.3620000000012789e-06, 1.3889999999974756e-06, 1.3749999999979057e-06, 1.3750000000013751e-06, 1.332999999999196e-06, 1.3750000000013751e-06, 1.3469999999987659e-06, 1.3750000000013751e-06, 1.3609999999983358e-06, 1.3609999999983358e-06, 1.3610000000018052e-06, 1.403000000000515e-06, 1.3750000000013751e-06, 1.332999999999196e-06, 1.3190000000030955e-06, 1.389000000000945e-06, 1.3609999999983358e-06, 1.3479999999982395e-06, 1.3470000000022353e-06, 1.3750000000013751e-06, 1.3750000000013751e-06, 1.3750000000013751e-06, 1.3750000000013751e-06, 1.3750000000013751e-06, 1.4170000000000849e-06, 1.3889999999974756e-06, 1.3749999999979057e-06, 1.3609999999983358e-06, 1.389000000000945e-06, 1.3750000000013751e-06, 1.318999999999626e-06, 1.3610000000018052e-06, 1.3199999999990997e-06, 1.3610000000018052e-06, 1.4160000000006112e-06, 1.3609999999983358e-06, 1.3469999999987659e-06, 1.3609999999983358e-06, 1.3749999999979057e-06, 1.3750000000013751e-06]</msg>
<status status="PASS" starttime="20201030 18:27:13.676" endtime="20201030 18:27:13.679"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:13.671" endtime="20201030 18:27:13.680"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:13.683" endtime="20201030 18:27:13.703"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:13.682" endtime="20201030 18:27:13.703"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:13.681" endtime="20201030 18:27:13.704"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:13.290" endtime="20201030 18:27:13.704"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:13.289" endtime="20201030 18:27:13.704"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:13.712" endtime="20201030 18:27:13.723"></status>
</kw>
<msg timestamp="20201030 18:27:13.723" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:13.710" endtime="20201030 18:27:13.724"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:13.726" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:13.725" endtime="20201030 18:27:13.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:13.727" endtime="20201030 18:27:13.729"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:13.708" endtime="20201030 18:27:13.730"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:13.706" endtime="20201030 18:27:13.730"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:13.737" endtime="20201030 18:27:14.023"></status>
</kw>
<msg timestamp="20201030 18:27:14.026" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018887653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018889153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:13.736" endtime="20201030 18:27:14.026"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:14.034" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018887653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018889153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:14.027" endtime="20201030 18:27:14.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:14.036" endtime="20201030 18:27:14.037"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:13.733" endtime="20201030 18:27:14.038"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:13.731" endtime="20201030 18:27:14.038"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:27:14.063" level="INFO">${debug} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201030 18:27:14.039" endtime="20201030 18:27:14.063"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:14.064" endtime="20201030 18:27:14.066"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:14.069" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:27:14.068" endtime="20201030 18:27:14.069"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:14.073" level="INFO">VALUE: {'sourcediff': [0, 1.4999999999980307e-06, 2.7958000000001537e-05, 1.3750000000013751e-06, 2.4846999999997982e-05, 1.389000000000945e-06, 3.045900000000004e-05, 1.3609999999983358e-06, 2.486100000000102e-05, 1.3609999999983358e-06, 2.5792000000000176e-05, 1.4300000000001811e-06, 2.9457999999999568e-05, 1.3750000000013751e-06, 2.3042000000000895e-05, 1.3199999999990997e-06, 3.2027000000000444e-05, 1.3609999999983358e-06, 2.64170000000008e-05, 1.3610000000018052e-06, 3.170899999999782e-05, 1.3880000000014714e-06, 2.4555999999998496e-05, 1.3610000000018052e-06, 2.4222000000000826e-05, 1.3609999999983358e-06, 2.3306000000000715e-05, 1.3609999999983358e-06, 2.462500000000034e-05, 1.3610000000018052e-06, 3.101399999999935e-05, 1.3609999999983358e-06, 2.2986000000002615e-05, 1.3749999999979057e-06, 2.9833999999999417e-05, 1.3750000000013751e-06, 2.6735999999999427e-05, 1.3750000000013751e-06, 2.4527999999999356e-05, 1.3750000000013751e-06, 3.0762999999999624e-05, 1.3889999999974756e-06, 3.0750000000003e-05, 1.3889999999974756e-06, 2.4542000000002395e-05, 1.3609999999983358e-06, 3.2332999999998974e-05, 1.3610000000018052e-06, 2.4541999999998926e-05, 1.3750000000013751e-06, 2.9832999999999943e-05, 1.3749999999979057e-06, 3.241699999999986e-05, 1.3610000000018052e-06, 2.4472000000001076e-05, 1.3749999999979057e-06, 2.4848000000000925e-05, 1.3750000000013751e-06, 2.890199999999732e-05, 1.3750000000013751e-06, 2.920899999999879e-05, 1.389000000000945e-06, 2.6082999999999662e-05, 1.3750000000013751e-06, 3.0166999999997612e-05, 1.3470000000022353e-06, 3.144399999999853e-05, 1.334000000002139e-06, 3.015199999999857e-05, 1.3620000000012789e-06, 2.2985999999999146e-05, 1.389000000000945e-06, 2.9207999999999318e-05, 1.3609999999983358e-06, 2.486100000000102e-05, 1.3750000000013751e-06, 2.9819999999999847e-05, 1.387999999998002e-06, 2.390299999999873e-05, 1.3610000000018052e-06, 2.8611000000001302e-05, 1.4309999999996548e-06, 3.0388999999998723e-05, 1.3750000000013751e-06, 3.138899999999972e-05, 1.3889999999974756e-06, 2.7333000000000912e-05, 1.4170000000000849e-06, 2.6999999999999247e-05, 1.3610000000018052e-06, 2.4540999999999452e-05, 1.389000000000945e-06, 2.516699999999955e-05, 1.3469999999987659e-06, 2.3292000000001145e-05, 1.389000000000945e-06, 2.265299999999748e-05, 1.3880000000014714e-06, 2.7652999999999012e-05, 1.389000000000945e-06], 'time': [0.018887653, 0.018889153, 0.018917111, 0.018918486, 0.018943333, 0.018944722, 0.018975181, 0.018976542, 0.019001403, 0.019002764, 0.019028556, 0.019029986, 0.019059444, 0.019060819, 0.019083861, 0.019085181, 0.019117208, 0.019118569, 0.019144986, 0.019146347, 0.019178056, 0.019179444, 0.019204, 0.019205361, 0.019229583, 0.019230944, 0.01925425, 0.019255611, 0.019280236, 0.019281597, 0.019312611, 0.019313972, 0.019336958, 0.019338333, 0.019368167, 0.019369542, 0.019396278, 0.019397653, 0.019422181, 0.019423556, 0.019454319, 0.019455708, 0.019486458, 0.019487847, 0.019512389, 0.01951375, 0.019546083, 0.019547444, 0.019571986, 0.019573361, 0.019603194, 0.019604569, 0.019636986, 0.019638347, 0.019662819, 0.019664194, 0.019689042, 0.019690417, 0.019719319, 0.019720694, 0.019749903, 0.019751292, 0.019777375, 0.01977875, 0.019808917, 0.019810264, 0.019841708, 0.019843042, 0.019873194, 0.019874556, 0.019897542, 0.019898931, 0.019928139, 0.0199295, 0.019954361, 0.019955736, 0.019985556, 0.019986944, 0.020010847, 0.020012208, 0.020040819, 0.02004225, 0.020072639, 0.020074014, 0.020105403, 0.020106792, 0.020134125, 0.020135542, 0.020162542, 0.020163903, 0.020188444, 0.020189833, 0.020215, 0.020216347, 0.020239639, 0.020241028, 0.020263681, 0.020265069, 0.020292722, 0.020294111], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING'], 'source_diff': [0, 1.4999999999980307e-06, 2.7958000000001537e-05, 1.3750000000013751e-06, 2.4846999999997982e-05, 1.389000000000945e-06, 3.045900000000004e-05, 1.3609999999983358e-06, 2.486100000000102e-05, 1.3609999999983358e-06, 2.5792000000000176e-05, 1.4300000000001811e-06, 2.9457999999999568e-05, 1.3750000000013751e-06, 2.3042000000000895e-05, 1.3199999999990997e-06, 3.2027000000000444e-05, 1.3609999999983358e-06, 2.64170000000008e-05, 1.3610000000018052e-06, 3.170899999999782e-05, 1.3880000000014714e-06, 2.4555999999998496e-05, 1.3610000000018052e-06, 2.4222000000000826e-05, 1.3609999999983358e-06, 2.3306000000000715e-05, 1.3609999999983358e-06, 2.462500000000034e-05, 1.3610000000018052e-06, 3.101399999999935e-05, 1.3609999999983358e-06, 2.2986000000002615e-05, 1.3749999999979057e-06, 2.9833999999999417e-05, 1.3750000000013751e-06, 2.6735999999999427e-05, 1.3750000000013751e-06, 2.4527999999999356e-05, 1.3750000000013751e-06, 3.0762999999999624e-05, 1.3889999999974756e-06, 3.0750000000003e-05, 1.3889999999974756e-06, 2.4542000000002395e-05, 1.3609999999983358e-06, 3.2332999999998974e-05, 1.3610000000018052e-06, 2.4541999999998926e-05, 1.3750000000013751e-06, 2.9832999999999943e-05, 1.3749999999979057e-06, 3.241699999999986e-05, 1.3610000000018052e-06, 2.4472000000001076e-05, 1.3749999999979057e-06, 2.4848000000000925e-05, 1.3750000000013751e-06, 2.890199999999732e-05, 1.3750000000013751e-06, 2.920899999999879e-05, 1.389000000000945e-06, 2.6082999999999662e-05, 1.3750000000013751e-06, 3.0166999999997612e-05, 1.3470000000022353e-06, 3.144399999999853e-05, 1.334000000002139e-06, 3.015199999999857e-05, 1.3620000000012789e-06, 2.2985999999999146e-05, 1.389000000000945e-06, 2.9207999999999318e-05, 1.3609999999983358e-06, 2.486100000000102e-05, 1.3750000000013751e-06, 2.9819999999999847e-05, 1.387999999998002e-06, 2.390299999999873e-05, 1.3610000000018052e-06, 2.8611000000001302e-05, 1.4309999999996548e-06, 3.0388999999998723e-05, 1.3750000000013751e-06, 3.138899999999972e-05, 1.3889999999974756e-06, 2.7333000000000912e-05, 1.4170000000000849e-06, 2.6999999999999247e-05, 1.3610000000018052e-06, 2.4540999999999452e-05, 1.389000000000945e-06, 2.516699999999955e-05, 1.3469999999987659e-06, 2.3292000000001145e-05, 1.389000000000945e-06, 2.265299999999748e-05, 1.3880000000014714e-06, 2.7652999999999012e-05, 1.389000000000945e-06]}</msg>
<status status="PASS" starttime="20201030 18:27:14.070" endtime="20201030 18:27:14.074"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:14.066" endtime="20201030 18:27:14.075"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:14.080" level="INFO">${RESULT} = [{'diff': 1.4999999999980307e-06}, {'diff': 1.3750000000013751e-06}, {'diff': 1.389000000000945e-06}, {'diff': 1.3609999999983358e-06}, {'diff': 1.3609999999983358e-06}, {'diff': 1.4300000000001811e-0...</msg>
<status status="PASS" starttime="20201030 18:27:14.076" endtime="20201030 18:27:14.080"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:14.084" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.4999999999980307e-06, 1.3750000000013751e-06, 1.389000000000945e-06, 1.3609999999983358e-06, 1.3609999999983358e-06, 1.4300000000001811e-06, 1.3750000000013751e-06, 1.3199999999990997e-06,...</msg>
<status status="PASS" starttime="20201030 18:27:14.081" endtime="20201030 18:27:14.084"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:14.088" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:27:14.087" endtime="20201030 18:27:14.088"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:14.091" level="INFO">VALUE: [1.4999999999980307e-06, 1.3750000000013751e-06, 1.389000000000945e-06, 1.3609999999983358e-06, 1.3609999999983358e-06, 1.4300000000001811e-06, 1.3750000000013751e-06, 1.3199999999990997e-06, 1.3609999999983358e-06, 1.3610000000018052e-06, 1.3880000000014714e-06, 1.3610000000018052e-06, 1.3609999999983358e-06, 1.3609999999983358e-06, 1.3610000000018052e-06, 1.3609999999983358e-06, 1.3749999999979057e-06, 1.3750000000013751e-06, 1.3750000000013751e-06, 1.3750000000013751e-06, 1.3889999999974756e-06, 1.3889999999974756e-06, 1.3609999999983358e-06, 1.3610000000018052e-06, 1.3750000000013751e-06, 1.3749999999979057e-06, 1.3610000000018052e-06, 1.3749999999979057e-06, 1.3750000000013751e-06, 1.3750000000013751e-06, 1.389000000000945e-06, 1.3750000000013751e-06, 1.3470000000022353e-06, 1.334000000002139e-06, 1.3620000000012789e-06, 1.389000000000945e-06, 1.3609999999983358e-06, 1.3750000000013751e-06, 1.387999999998002e-06, 1.3610000000018052e-06, 1.4309999999996548e-06, 1.3750000000013751e-06, 1.3889999999974756e-06, 1.4170000000000849e-06, 1.3610000000018052e-06, 1.389000000000945e-06, 1.3469999999987659e-06, 1.389000000000945e-06, 1.3880000000014714e-06, 1.389000000000945e-06]</msg>
<status status="PASS" starttime="20201030 18:27:14.089" endtime="20201030 18:27:14.091"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:14.085" endtime="20201030 18:27:14.091"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:14.095" endtime="20201030 18:27:14.114"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:14.094" endtime="20201030 18:27:14.115"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:14.092" endtime="20201030 18:27:14.115"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:13.705" endtime="20201030 18:27:14.116"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:13.704" endtime="20201030 18:27:14.116"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:14.125" endtime="20201030 18:27:14.134"></status>
</kw>
<msg timestamp="20201030 18:27:14.135" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:14.123" endtime="20201030 18:27:14.135"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:14.137" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:14.136" endtime="20201030 18:27:14.138"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:14.139" endtime="20201030 18:27:14.140"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:14.119" endtime="20201030 18:27:14.141"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:14.118" endtime="20201030 18:27:14.141"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:14.148" endtime="20201030 18:27:14.435"></status>
</kw>
<msg timestamp="20201030 18:27:14.438" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019563681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01956525, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:27:14.147" endtime="20201030 18:27:14.438"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:14.446" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019563681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01956525, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:27:14.439" endtime="20201030 18:27:14.447"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:14.448" endtime="20201030 18:27:14.450"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:14.144" endtime="20201030 18:27:14.450"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:14.142" endtime="20201030 18:27:14.451"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:27:14.474" level="INFO">${debug} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201030 18:27:14.451" endtime="20201030 18:27:14.475"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:14.476" endtime="20201030 18:27:14.477"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:14.481" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:27:14.479" endtime="20201030 18:27:14.481"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:14.485" level="INFO">VALUE: {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'], 'diff': [0, 1.568999999999876e-06, 2.384700000000045e-05, 1.3750000000013751e-06, 2.2985999999999146e-05, 1.3750000000013751e-06, 2.8888999999997222e-05, 1.3750000000013751e-06, 2.795900000000101e-05, 1.387999999998002e-06, 3.10700000000011e-05, 1.389000000000945e-06, 2.5777999999997137e-05, 1.3610000000018052e-06, 2.2985999999999146e-05, 1.3750000000013751e-06, 2.515299999999998e-05, 1.3749999999979057e-06, 3.140199999999982e-05, 1.3610000000018052e-06, 2.766699999999858e-05, 1.3610000000018052e-06, 2.3291999999997676e-05, 1.4440000000032205e-06, 2.5097999999997705e-05, 1.3610000000018052e-06, 2.7665999999999108e-05, 1.3609999999983358e-06, 3.204200000000296e-05, 1.3469999999987659e-06, 2.5528000000000356e-05, 1.332999999999196e-06, 2.298699999999862e-05, 1.3610000000018052e-06, 2.7665999999999108e-05, 1.403000000000515e-06, 2.8875000000001122e-05, 1.3609999999983358e-06, 2.9528000000000887e-05, 1.3750000000013751e-06, 3.0124999999998903e-05, 1.389000000000945e-06, 3.137500000000015e-05, 1.3889999999974756e-06, 2.7944000000001967e-05, 1.3749999999979057e-06, 3.201400000000035e-05, 1.3750000000013751e-06, 2.269499999999966e-05, 1.3469999999987659e-06, 2.362499999999934e-05, 1.3610000000018052e-06, 3.07639999999991e-05, 1.3750000000013751e-06, 2.5179999999999647e-05, 1.3479999999982395e-06, 2.7972000000001107e-05, 1.3750000000013751e-06, 3.1096999999997293e-05, 1.4170000000000849e-06, 2.8527000000000413e-05, 1.3750000000013751e-06, 2.4555999999998496e-05, 1.3470000000022353e-06, 3.079199999999824e-05, 1.3750000000013751e-06, 2.8277999999999637e-05, 1.3469999999987659e-06, 2.516699999999955e-05, 1.3880000000014714e-06, 2.3597999999999675e-05, 1.3750000000013751e-06, 3.2318999999999404e-05, 1.3749999999979057e-06, 3.077800000000214e-05, 1.3609999999983358e-06, 2.6764000000002036e-05, 1.332999999999196e-06, 2.616700000000055e-05, 1.3050000000000561e-06, 2.9833999999999417e-05, 1.3750000000013751e-06, 2.9569000000000123e-05, 1.3199999999990997e-06, 3.115199999999957e-05, 1.3059999999995298e-06, 2.640300000000123e-05, 1.3749999999979057e-06, 3.108300000000119e-05, 1.389000000000945e-06, 2.5763999999997567e-05, 1.3750000000013751e-06, 2.9846999999999513e-05, 1.3610000000018052e-06, 3.07639999999991e-05, 1.389000000000945e-06, 2.918099999999965e-05, 1.3749999999979057e-06, 2.6416000000001327e-05, 1.3609999999983358e-06], 'time': [0.019563681, 0.01956525, 0.019589097, 0.019590472, 0.019613458, 0.019614833, 0.019643722, 0.019645097, 0.019673056, 0.019674444, 0.019705514, 0.019706903, 0.019732681, 0.019734042, 0.019757028, 0.019758403, 0.019783556, 0.019784931, 0.019816333, 0.019817694, 0.019845361, 0.019846722, 0.019870014, 0.019871458, 0.019896556, 0.019897917, 0.019925583, 0.019926944, 0.019958986, 0.019960333, 0.019985861, 0.019987194, 0.020010181, 0.020011542, 0.020039208, 0.020040611, 0.020069486, 0.020070847, 0.020100375, 0.02010175, 0.020131875, 0.020133264, 0.020164639, 0.020166028, 0.020193972, 0.020195347, 0.020227361, 0.020228736, 0.020251431, 0.020252778, 0.020276403, 0.020277764, 0.020308528, 0.020309903, 0.020335083, 0.020336431, 0.020364403, 0.020365778, 0.020396875, 0.020398292, 0.020426819, 0.020428194, 0.02045275, 0.020454097, 0.020484889, 0.020486264, 0.020514542, 0.020515889, 0.020541056, 0.020542444, 0.020566042, 0.020567417, 0.020599736, 0.020601111, 0.020631889, 0.02063325, 0.020660014, 0.020661347, 0.020687514, 0.020688819, 0.020718653, 0.020720028, 0.020749597, 0.020750917, 0.020782069, 0.020783375, 0.020809778, 0.020811153, 0.020842236, 0.020843625, 0.020869389, 0.020870764, 0.020900611, 0.020901972, 0.020932736, 0.020934125, 0.020963306, 0.020964681, 0.020991097, 0.020992458], 'eventsource_diff': [0, 1.568999999999876e-06, 2.384700000000045e-05, 1.3750000000013751e-06, 2.2985999999999146e-05, 1.3750000000013751e-06, 2.8888999999997222e-05, 1.3750000000013751e-06, 2.795900000000101e-05, 1.387999999998002e-06, 3.10700000000011e-05, 1.389000000000945e-06, 2.5777999999997137e-05, 1.3610000000018052e-06, 2.2985999999999146e-05, 1.3750000000013751e-06, 2.515299999999998e-05, 1.3749999999979057e-06, 3.140199999999982e-05, 1.3610000000018052e-06, 2.766699999999858e-05, 1.3610000000018052e-06, 2.3291999999997676e-05, 1.4440000000032205e-06, 2.5097999999997705e-05, 1.3610000000018052e-06, 2.7665999999999108e-05, 1.3609999999983358e-06, 3.204200000000296e-05, 1.3469999999987659e-06, 2.5528000000000356e-05, 1.332999999999196e-06, 2.298699999999862e-05, 1.3610000000018052e-06, 2.7665999999999108e-05, 1.403000000000515e-06, 2.8875000000001122e-05, 1.3609999999983358e-06, 2.9528000000000887e-05, 1.3750000000013751e-06, 3.0124999999998903e-05, 1.389000000000945e-06, 3.137500000000015e-05, 1.3889999999974756e-06, 2.7944000000001967e-05, 1.3749999999979057e-06, 3.201400000000035e-05, 1.3750000000013751e-06, 2.269499999999966e-05, 1.3469999999987659e-06, 2.362499999999934e-05, 1.3610000000018052e-06, 3.07639999999991e-05, 1.3750000000013751e-06, 2.5179999999999647e-05, 1.3479999999982395e-06, 2.7972000000001107e-05, 1.3750000000013751e-06, 3.1096999999997293e-05, 1.4170000000000849e-06, 2.8527000000000413e-05, 1.3750000000013751e-06, 2.4555999999998496e-05, 1.3470000000022353e-06, 3.079199999999824e-05, 1.3750000000013751e-06, 2.8277999999999637e-05, 1.3469999999987659e-06, 2.516699999999955e-05, 1.3880000000014714e-06, 2.3597999999999675e-05, 1.3750000000013751e-06, 3.2318999999999404e-05, 1.3749999999979057e-06, 3.077800000000214e-05, 1.3609999999983358e-06, 2.6764000000002036e-05, 1.332999999999196e-06, 2.616700000000055e-05, 1.3050000000000561e-06, 2.9833999999999417e-05, 1.3750000000013751e-06, 2.9569000000000123e-05, 1.3199999999990997e-06, 3.115199999999957e-05, 1.3059999999995298e-06, 2.640300000000123e-05, 1.3749999999979057e-06, 3.108300000000119e-05, 1.389000000000945e-06, 2.5763999999997567e-05, 1.3750000000013751e-06, 2.9846999999999513e-05, 1.3610000000018052e-06, 3.07639999999991e-05, 1.389000000000945e-06, 2.918099999999965e-05, 1.3749999999979057e-06, 2.6416000000001327e-05, 1.3609999999983358e-06]}</msg>
<status status="PASS" starttime="20201030 18:27:14.482" endtime="20201030 18:27:14.486"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:14.478" endtime="20201030 18:27:14.486"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:14.490" level="INFO">${RESULT} = [{'diff': 1.568999999999876e-06}, {'diff': 1.3750000000013751e-06}, {'diff': 1.3750000000013751e-06}, {'diff': 1.3750000000013751e-06}, {'diff': 1.387999999998002e-06}, {'diff': 1.389000000000945e-06}...</msg>
<status status="PASS" starttime="20201030 18:27:14.487" endtime="20201030 18:27:14.490"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:14.495" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.568999999999876e-06, 1.3750000000013751e-06, 1.3750000000013751e-06, 1.3750000000013751e-06, 1.387999999998002e-06, 1.389000000000945e-06, 1.3610000000018052e-06, 1.3750000000013751e-06, 1...</msg>
<status status="PASS" starttime="20201030 18:27:14.491" endtime="20201030 18:27:14.495"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:14.499" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:27:14.498" endtime="20201030 18:27:14.499"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:14.501" level="INFO">VALUE: [1.568999999999876e-06, 1.3750000000013751e-06, 1.3750000000013751e-06, 1.3750000000013751e-06, 1.387999999998002e-06, 1.389000000000945e-06, 1.3610000000018052e-06, 1.3750000000013751e-06, 1.3749999999979057e-06, 1.3610000000018052e-06, 1.3610000000018052e-06, 1.4440000000032205e-06, 1.3610000000018052e-06, 1.3609999999983358e-06, 1.3469999999987659e-06, 1.332999999999196e-06, 1.3610000000018052e-06, 1.403000000000515e-06, 1.3609999999983358e-06, 1.3750000000013751e-06, 1.389000000000945e-06, 1.3889999999974756e-06, 1.3749999999979057e-06, 1.3750000000013751e-06, 1.3469999999987659e-06, 1.3610000000018052e-06, 1.3750000000013751e-06, 1.3479999999982395e-06, 1.3750000000013751e-06, 1.4170000000000849e-06, 1.3750000000013751e-06, 1.3470000000022353e-06, 1.3750000000013751e-06, 1.3469999999987659e-06, 1.3880000000014714e-06, 1.3750000000013751e-06, 1.3749999999979057e-06, 1.3609999999983358e-06, 1.332999999999196e-06, 1.3050000000000561e-06, 1.3750000000013751e-06, 1.3199999999990997e-06, 1.3059999999995298e-06, 1.3749999999979057e-06, 1.389000000000945e-06, 1.3750000000013751e-06, 1.3610000000018052e-06, 1.389000000000945e-06, 1.3749999999979057e-06, 1.3609999999983358e-06]</msg>
<status status="PASS" starttime="20201030 18:27:14.500" endtime="20201030 18:27:14.502"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:14.496" endtime="20201030 18:27:14.502"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:14.506" endtime="20201030 18:27:14.525"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:14.504" endtime="20201030 18:27:14.526"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:14.503" endtime="20201030 18:27:14.526"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:14.117" endtime="20201030 18:27:14.526"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:14.116" endtime="20201030 18:27:14.527"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:14.534" endtime="20201030 18:27:14.544"></status>
</kw>
<msg timestamp="20201030 18:27:14.544" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:14.533" endtime="20201030 18:27:14.544"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:14.547" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:14.545" endtime="20201030 18:27:14.547"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:14.548" endtime="20201030 18:27:14.549"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:14.530" endtime="20201030 18:27:14.550"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:14.529" endtime="20201030 18:27:14.550"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:14.557" endtime="20201030 18:27:14.847"></status>
</kw>
<msg timestamp="20201030 18:27:14.850" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018486611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018488111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:14.555" endtime="20201030 18:27:14.850"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:14.859" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018486611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018488111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:14.851" endtime="20201030 18:27:14.859"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:14.860" endtime="20201030 18:27:14.862"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:14.553" endtime="20201030 18:27:14.862"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:14.551" endtime="20201030 18:27:14.863"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:27:14.887" level="INFO">${debug} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201030 18:27:14.864" endtime="20201030 18:27:14.887"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:14.888" endtime="20201030 18:27:14.889"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:14.895" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:27:14.893" endtime="20201030 18:27:14.896"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:14.905" level="INFO">VALUE: {'sourcediff': [0, 1.5000000000015001e-06, 3.140299999999929e-05, 1.3609999999983358e-06, 3.170800000000182e-05, 1.403000000000515e-06, 3.229199999999974e-05, 1.3749999999979057e-06, 3.169400000000225e-05, 1.3889999999974756e-06, 2.7638999999999442e-05, 1.389000000000945e-06, 2.6082999999999662e-05, 1.4309999999996548e-06, 2.6041000000000952e-05, 1.3750000000013751e-06, 2.9542000000000457e-05, 1.3609999999983358e-06, 2.4541999999998926e-05, 1.3610000000018052e-06, 3.079199999999824e-05, 1.4160000000006112e-06, 2.9153000000000512e-05, 1.3610000000018052e-06, 2.516699999999955e-05, 1.3749999999979057e-06, 3.076400000000257e-05, 1.3889999999974756e-06, 3.0139000000001942e-05, 1.387999999998002e-06, 3.047299999999961e-05, 1.3330000000026654e-06, 3.07639999999991e-05, 1.3749999999979057e-06, 3.138900000000319e-05, 1.4159999999971418e-06, 3.166700000000258e-05, 1.3609999999983358e-06, 2.366700000000152e-05, 1.3609999999983358e-06, 2.5764000000001036e-05, 1.3469999999987659e-06, 2.9806000000000277e-05, 1.4020000000010413e-06, 2.548700000000112e-05, 1.3609999999983358e-06, 2.9180000000000178e-05, 1.3750000000013751e-06, 3.045900000000004e-05, 1.3749999999979057e-06, 2.7958000000001537e-05, 1.3889999999974756e-06, 2.3278000000001575e-05, 1.3880000000014714e-06, 2.545899999999851e-05, 1.3609999999983358e-06, 2.5486000000001646e-05, 1.3609999999983358e-06, 3.236100000000158e-05, 1.4170000000000849e-06, 2.4458000000001506e-05, 1.3749999999979057e-06, 2.8903000000000262e-05, 1.389000000000945e-06, 2.7013999999998817e-05, 1.3750000000013751e-06, 2.8596999999998263e-05, 1.3610000000018052e-06, 2.362499999999934e-05, 1.3750000000013751e-06, 2.5763999999997567e-05, 1.389000000000945e-06, 2.7027999999998387e-05, 1.3610000000018052e-06, 2.5791000000000702e-05, 1.3619999999978094e-06, 2.3916000000002297e-05, 1.3749999999979057e-06, 3.0472000000000138e-05, 1.3620000000012789e-06, 2.6096999999999232e-05, 1.3610000000018052e-06, 2.362499999999934e-05, 1.3609999999983358e-06, 2.7958000000001537e-05, 1.3749999999979057e-06, 2.4249999999999966e-05, 1.3610000000018052e-06, 2.768099999999815e-05, 1.3470000000022353e-06, 2.8889000000000692e-05, 1.3749999999979057e-06, 2.5486000000001646e-05, 1.3749999999979057e-06, 3.137500000000015e-05, 1.3750000000013751e-06, 2.6735999999999427e-05, 1.348000000001709e-06, 2.5790999999997233e-05, 1.403000000000515e-06], 'time': [0.018486611, 0.018488111, 0.018519514, 0.018520875, 0.018552583, 0.018553986, 0.018586278, 0.018587653, 0.018619347, 0.018620736, 0.018648375, 0.018649764, 0.018675847, 0.018677278, 0.018703319, 0.018704694, 0.018734236, 0.018735597, 0.018760139, 0.0187615, 0.018792292, 0.018793708, 0.018822861, 0.018824222, 0.018849389, 0.018850764, 0.018881528, 0.018882917, 0.018913056, 0.018914444, 0.018944917, 0.01894625, 0.018977014, 0.018978389, 0.019009778, 0.019011194, 0.019042861, 0.019044222, 0.019067889, 0.01906925, 0.019095014, 0.019096361, 0.019126167, 0.019127569, 0.019153056, 0.019154417, 0.019183597, 0.019184972, 0.019215431, 0.019216806, 0.019244764, 0.019246153, 0.019269431, 0.019270819, 0.019296278, 0.019297639, 0.019323125, 0.019324486, 0.019356847, 0.019358264, 0.019382722, 0.019384097, 0.019413, 0.019414389, 0.019441403, 0.019442778, 0.019471375, 0.019472736, 0.019496361, 0.019497736, 0.0195235, 0.019524889, 0.019551917, 0.019553278, 0.019579069, 0.019580431, 0.019604347, 0.019605722, 0.019636194, 0.019637556, 0.019663653, 0.019665014, 0.019688639, 0.01969, 0.019717958, 0.019719333, 0.019743583, 0.019744944, 0.019772625, 0.019773972, 0.019802861, 0.019804236, 0.019829722, 0.019831097, 0.019862472, 0.019863847, 0.019890583, 0.019891931, 0.019917722, 0.019919125], 'eventsource_diff': [0, 1.5000000000015001e-06, 3.140299999999929e-05, 1.3609999999983358e-06, 3.170800000000182e-05, 1.403000000000515e-06, 3.229199999999974e-05, 1.3749999999979057e-06, 3.169400000000225e-05, 1.3889999999974756e-06, 2.7638999999999442e-05, 1.389000000000945e-06, 2.6082999999999662e-05, 1.4309999999996548e-06, 2.6041000000000952e-05, 1.3750000000013751e-06, 2.9542000000000457e-05, 1.3609999999983358e-06, 2.4541999999998926e-05, 1.3610000000018052e-06, 3.079199999999824e-05, 1.4160000000006112e-06, 2.9153000000000512e-05, 1.3610000000018052e-06, 2.516699999999955e-05, 1.3749999999979057e-06, 3.076400000000257e-05, 1.3889999999974756e-06, 3.0139000000001942e-05, 1.387999999998002e-06, 3.047299999999961e-05, 1.3330000000026654e-06, 3.07639999999991e-05, 1.3749999999979057e-06, 3.138900000000319e-05, 1.4159999999971418e-06, 3.166700000000258e-05, 1.3609999999983358e-06, 2.366700000000152e-05, 1.3609999999983358e-06, 2.5764000000001036e-05, 1.3469999999987659e-06, 2.9806000000000277e-05, 1.4020000000010413e-06, 2.548700000000112e-05, 1.3609999999983358e-06, 2.9180000000000178e-05, 1.3750000000013751e-06, 3.045900000000004e-05, 1.3749999999979057e-06, 2.7958000000001537e-05, 1.3889999999974756e-06, 2.3278000000001575e-05, 1.3880000000014714e-06, 2.545899999999851e-05, 1.3609999999983358e-06, 2.5486000000001646e-05, 1.3609999999983358e-06, 3.236100000000158e-05, 1.4170000000000849e-06, 2.4458000000001506e-05, 1.3749999999979057e-06, 2.8903000000000262e-05, 1.389000000000945e-06, 2.7013999999998817e-05, 1.3750000000013751e-06, 2.8596999999998263e-05, 1.3610000000018052e-06, 2.362499999999934e-05, 1.3750000000013751e-06, 2.5763999999997567e-05, 1.389000000000945e-06, 2.7027999999998387e-05, 1.3610000000018052e-06, 2.5791000000000702e-05, 1.3619999999978094e-06, 2.3916000000002297e-05, 1.3749999999979057e-06, 3.0472000000000138e-05, 1.3620000000012789e-06, 2.6096999999999232e-05, 1.3610000000018052e-06, 2.362499999999934e-05, 1.3609999999983358e-06, 2.7958000000001537e-05, 1.3749999999979057e-06, 2.4249999999999966e-05, 1.3610000000018052e-06, 2.768099999999815e-05, 1.3470000000022353e-06, 2.8889000000000692e-05, 1.3749999999979057e-06, 2.5486000000001646e-05, 1.3749999999979057e-06, 3.137500000000015e-05, 1.3750000000013751e-06, 2.6735999999999427e-05, 1.348000000001709e-06, 2.5790999999997233e-05, 1.403000000000515e-06]}</msg>
<status status="PASS" starttime="20201030 18:27:14.898" endtime="20201030 18:27:14.907"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:14.890" endtime="20201030 18:27:14.908"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:14.916" level="INFO">${RESULT} = [{'diff': 1.5000000000015001e-06}, {'diff': 1.3609999999983358e-06}, {'diff': 1.403000000000515e-06}, {'diff': 1.3749999999979057e-06}, {'diff': 1.3889999999974756e-06}, {'diff': 1.389000000000945e-06...</msg>
<status status="PASS" starttime="20201030 18:27:14.909" endtime="20201030 18:27:14.917"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:14.926" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.5000000000015001e-06, 1.3609999999983358e-06, 1.403000000000515e-06, 1.3749999999979057e-06, 1.3889999999974756e-06, 1.389000000000945e-06, 1.4309999999996548e-06, 1.3750000000013751e-06, ...</msg>
<status status="PASS" starttime="20201030 18:27:14.918" endtime="20201030 18:27:14.926"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:14.936" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:27:14.933" endtime="20201030 18:27:14.936"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:14.941" level="INFO">VALUE: [1.5000000000015001e-06, 1.3609999999983358e-06, 1.403000000000515e-06, 1.3749999999979057e-06, 1.3889999999974756e-06, 1.389000000000945e-06, 1.4309999999996548e-06, 1.3750000000013751e-06, 1.3609999999983358e-06, 1.3610000000018052e-06, 1.4160000000006112e-06, 1.3610000000018052e-06, 1.3749999999979057e-06, 1.3889999999974756e-06, 1.387999999998002e-06, 1.3330000000026654e-06, 1.3749999999979057e-06, 1.4159999999971418e-06, 1.3609999999983358e-06, 1.3609999999983358e-06, 1.3469999999987659e-06, 1.4020000000010413e-06, 1.3609999999983358e-06, 1.3750000000013751e-06, 1.3749999999979057e-06, 1.3889999999974756e-06, 1.3880000000014714e-06, 1.3609999999983358e-06, 1.3609999999983358e-06, 1.4170000000000849e-06, 1.3749999999979057e-06, 1.389000000000945e-06, 1.3750000000013751e-06, 1.3610000000018052e-06, 1.3750000000013751e-06, 1.389000000000945e-06, 1.3610000000018052e-06, 1.3619999999978094e-06, 1.3749999999979057e-06, 1.3620000000012789e-06, 1.3610000000018052e-06, 1.3609999999983358e-06, 1.3749999999979057e-06, 1.3610000000018052e-06, 1.3470000000022353e-06, 1.3749999999979057e-06, 1.3749999999979057e-06, 1.3750000000013751e-06, 1.348000000001709e-06, 1.403000000000515e-06]</msg>
<status status="PASS" starttime="20201030 18:27:14.938" endtime="20201030 18:27:14.942"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:14.927" endtime="20201030 18:27:14.943"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:14.951" endtime="20201030 18:27:14.975"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:14.947" endtime="20201030 18:27:14.977"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:14.945" endtime="20201030 18:27:14.977"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:14.527" endtime="20201030 18:27:14.978"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:14.527" endtime="20201030 18:27:14.978"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:14.994" endtime="20201030 18:27:15.003"></status>
</kw>
<msg timestamp="20201030 18:27:15.004" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:14.992" endtime="20201030 18:27:15.004"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:15.006" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:15.005" endtime="20201030 18:27:15.007"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:15.007" endtime="20201030 18:27:15.009"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:14.986" endtime="20201030 18:27:15.009"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:14.983" endtime="20201030 18:27:15.010"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:15.017" endtime="20201030 18:27:15.303"></status>
</kw>
<msg timestamp="20201030 18:27:15.306" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.032464042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032465528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:15.015" endtime="20201030 18:27:15.306"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:15.314" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.032464042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032465528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:15.307" endtime="20201030 18:27:15.315"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:15.316" endtime="20201030 18:27:15.317"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:15.012" endtime="20201030 18:27:15.318"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:15.011" endtime="20201030 18:27:15.318"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:27:15.343" level="INFO">${debug} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201030 18:27:15.319" endtime="20201030 18:27:15.343"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:15.344" endtime="20201030 18:27:15.345"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:15.349" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:27:15.348" endtime="20201030 18:27:15.349"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:15.353" level="INFO">VALUE: {'sourcediff': [0, 1.4860000000019302e-06, 2.9832999999999943e-05, 1.4169999999966154e-06, 2.3236000000002865e-05, 1.3889999999974756e-06, 2.9194000000003217e-05, 1.3749999999979057e-06, 3.138899999999972e-05, 1.4030000000039844e-06, 3.0818999999994434e-05, 1.3610000000052747e-06, 3.226399999999713e-05, 1.3609999999983358e-06, 2.268100000000356e-05, 1.3749999999979057e-06, 2.60970000000027e-05, 1.3749999999979057e-06, 3.138899999999972e-05, 1.3749999999979057e-06, 2.515299999999998e-05, 1.3750000000048446e-06, 2.7027999999998387e-05, 1.3889999999974756e-06, 3.23050000000033e-05, 1.3889999999974756e-06, 2.2972000000003046e-05, 1.4029999999970455e-06, 2.731900000000481e-05, 1.3619999999978094e-06, 2.4540999999995983e-05, 1.3890000000044145e-06, 2.388899999999916e-05, 1.3889999999974756e-06, 3.201400000000382e-05, 1.3749999999979057e-06, 2.891599999999689e-05, 1.3620000000047483e-06, 2.794399999999503e-05, 1.3890000000044145e-06, 2.638900000000166e-05, 1.3889999999974756e-06, 3.233300000000244e-05, 1.3469999999987659e-06, 2.9569999999999597e-05, 1.332999999999196e-06, 3.202799999999645e-05, 1.3610000000052747e-06, 2.7652999999995542e-05, 1.3750000000048446e-06, 2.9569000000000123e-05, 1.332999999999196e-06, 2.7013999999998817e-05, 1.3889999999974756e-06, 2.670899999999976e-05, 1.3750000000048446e-06, 3.017999999999771e-05, 1.332999999999196e-06, 2.6098000000002175e-05, 1.3889999999974756e-06, 2.2986000000002615e-05, 1.3609999999983358e-06, 2.7054999999998053e-05, 1.3480000000051784e-06, 2.2665999999997577e-05, 1.3749999999979057e-06, 2.890300000000373e-05, 1.3749999999979057e-06, 2.7041999999997957e-05, 1.3609999999983358e-06, 3.231900000000287e-05, 1.3749999999979057e-06, 2.362499999999934e-05, 1.3750000000048446e-06, 3.074999999999606e-05, 1.3890000000044145e-06, 3.231999999999541e-05, 1.3610000000052747e-06, 2.765199999999607e-05, 1.3749999999979057e-06, 2.3612000000006184e-05, 1.4019999999975719e-06, 2.265299999999748e-05, 1.3750000000048446e-06, 3.076399999999563e-05, 1.3750000000048446e-06, 2.6721999999999857e-05, 1.3609999999983358e-06, 2.3597999999999675e-05, 1.3749999999979057e-06, 2.2986000000002615e-05, 1.4019999999975719e-06, 2.3584000000000105e-05, 1.3749999999979057e-06, 2.890300000000373e-05, 1.4439999999962816e-06, 2.538900000000066e-05, 1.3750000000048446e-06, 2.7985999999993738e-05, 1.3610000000052747e-06], 'time': [0.032464042, 0.032465528, 0.032495361, 0.032496778, 0.032520014, 0.032521403, 0.032550597, 0.032551972, 0.032583361, 0.032584764, 0.032615583, 0.032616944, 0.032649208, 0.032650569, 0.03267325, 0.032674625, 0.032700722, 0.032702097, 0.032733486, 0.032734861, 0.032760014, 0.032761389, 0.032788417, 0.032789806, 0.032822111, 0.0328235, 0.032846472, 0.032847875, 0.032875194, 0.032876556, 0.032901097, 0.032902486, 0.032926375, 0.032927764, 0.032959778, 0.032961153, 0.032990069, 0.032991431, 0.033019375, 0.033020764, 0.033047153, 0.033048542, 0.033080875, 0.033082222, 0.033111792, 0.033113125, 0.033145153, 0.033146514, 0.033174167, 0.033175542, 0.033205111, 0.033206444, 0.033233458, 0.033234847, 0.033261556, 0.033262931, 0.033293111, 0.033294444, 0.033320542, 0.033321931, 0.033344917, 0.033346278, 0.033373333, 0.033374681, 0.033397347, 0.033398722, 0.033427625, 0.033429, 0.033456042, 0.033457403, 0.033489722, 0.033491097, 0.033514722, 0.033516097, 0.033546847, 0.033548236, 0.033580556, 0.033581917, 0.033609569, 0.033610944, 0.033634556, 0.033635958, 0.033658611, 0.033659986, 0.03369075, 0.033692125, 0.033718847, 0.033720208, 0.033743806, 0.033745181, 0.033768167, 0.033769569, 0.033793153, 0.033794528, 0.033823431, 0.033824875, 0.033850264, 0.033851639, 0.033879625, 0.033880986], 'eventsource_diff': [0, 1.4860000000019302e-06, 2.9832999999999943e-05, 1.4169999999966154e-06, 2.3236000000002865e-05, 1.3889999999974756e-06, 2.9194000000003217e-05, 1.3749999999979057e-06, 3.138899999999972e-05, 1.4030000000039844e-06, 3.0818999999994434e-05, 1.3610000000052747e-06, 3.226399999999713e-05, 1.3609999999983358e-06, 2.268100000000356e-05, 1.3749999999979057e-06, 2.60970000000027e-05, 1.3749999999979057e-06, 3.138899999999972e-05, 1.3749999999979057e-06, 2.515299999999998e-05, 1.3750000000048446e-06, 2.7027999999998387e-05, 1.3889999999974756e-06, 3.23050000000033e-05, 1.3889999999974756e-06, 2.2972000000003046e-05, 1.4029999999970455e-06, 2.731900000000481e-05, 1.3619999999978094e-06, 2.4540999999995983e-05, 1.3890000000044145e-06, 2.388899999999916e-05, 1.3889999999974756e-06, 3.201400000000382e-05, 1.3749999999979057e-06, 2.891599999999689e-05, 1.3620000000047483e-06, 2.794399999999503e-05, 1.3890000000044145e-06, 2.638900000000166e-05, 1.3889999999974756e-06, 3.233300000000244e-05, 1.3469999999987659e-06, 2.9569999999999597e-05, 1.332999999999196e-06, 3.202799999999645e-05, 1.3610000000052747e-06, 2.7652999999995542e-05, 1.3750000000048446e-06, 2.9569000000000123e-05, 1.332999999999196e-06, 2.7013999999998817e-05, 1.3889999999974756e-06, 2.670899999999976e-05, 1.3750000000048446e-06, 3.017999999999771e-05, 1.332999999999196e-06, 2.6098000000002175e-05, 1.3889999999974756e-06, 2.2986000000002615e-05, 1.3609999999983358e-06, 2.7054999999998053e-05, 1.3480000000051784e-06, 2.2665999999997577e-05, 1.3749999999979057e-06, 2.890300000000373e-05, 1.3749999999979057e-06, 2.7041999999997957e-05, 1.3609999999983358e-06, 3.231900000000287e-05, 1.3749999999979057e-06, 2.362499999999934e-05, 1.3750000000048446e-06, 3.074999999999606e-05, 1.3890000000044145e-06, 3.231999999999541e-05, 1.3610000000052747e-06, 2.765199999999607e-05, 1.3749999999979057e-06, 2.3612000000006184e-05, 1.4019999999975719e-06, 2.265299999999748e-05, 1.3750000000048446e-06, 3.076399999999563e-05, 1.3750000000048446e-06, 2.6721999999999857e-05, 1.3609999999983358e-06, 2.3597999999999675e-05, 1.3749999999979057e-06, 2.2986000000002615e-05, 1.4019999999975719e-06, 2.3584000000000105e-05, 1.3749999999979057e-06, 2.890300000000373e-05, 1.4439999999962816e-06, 2.538900000000066e-05, 1.3750000000048446e-06, 2.7985999999993738e-05, 1.3610000000052747e-06]}</msg>
<status status="PASS" starttime="20201030 18:27:15.350" endtime="20201030 18:27:15.354"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:15.346" endtime="20201030 18:27:15.355"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:15.359" level="INFO">${RESULT} = [{'diff': 1.4860000000019302e-06}, {'diff': 1.4169999999966154e-06}, {'diff': 1.3889999999974756e-06}, {'diff': 1.3749999999979057e-06}, {'diff': 1.4030000000039844e-06}, {'diff': 1.3610000000052747e-...</msg>
<status status="PASS" starttime="20201030 18:27:15.356" endtime="20201030 18:27:15.359"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:15.363" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.4860000000019302e-06, 1.4169999999966154e-06, 1.3889999999974756e-06, 1.3749999999979057e-06, 1.4030000000039844e-06, 1.3610000000052747e-06, 1.3609999999983358e-06, 1.3749999999979057e-06...</msg>
<status status="PASS" starttime="20201030 18:27:15.360" endtime="20201030 18:27:15.363"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:15.367" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:27:15.366" endtime="20201030 18:27:15.367"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:15.370" level="INFO">VALUE: [1.4860000000019302e-06, 1.4169999999966154e-06, 1.3889999999974756e-06, 1.3749999999979057e-06, 1.4030000000039844e-06, 1.3610000000052747e-06, 1.3609999999983358e-06, 1.3749999999979057e-06, 1.3749999999979057e-06, 1.3749999999979057e-06, 1.3750000000048446e-06, 1.3889999999974756e-06, 1.3889999999974756e-06, 1.4029999999970455e-06, 1.3619999999978094e-06, 1.3890000000044145e-06, 1.3889999999974756e-06, 1.3749999999979057e-06, 1.3620000000047483e-06, 1.3890000000044145e-06, 1.3889999999974756e-06, 1.3469999999987659e-06, 1.332999999999196e-06, 1.3610000000052747e-06, 1.3750000000048446e-06, 1.332999999999196e-06, 1.3889999999974756e-06, 1.3750000000048446e-06, 1.332999999999196e-06, 1.3889999999974756e-06, 1.3609999999983358e-06, 1.3480000000051784e-06, 1.3749999999979057e-06, 1.3749999999979057e-06, 1.3609999999983358e-06, 1.3749999999979057e-06, 1.3750000000048446e-06, 1.3890000000044145e-06, 1.3610000000052747e-06, 1.3749999999979057e-06, 1.4019999999975719e-06, 1.3750000000048446e-06, 1.3750000000048446e-06, 1.3609999999983358e-06, 1.3749999999979057e-06, 1.4019999999975719e-06, 1.3749999999979057e-06, 1.4439999999962816e-06, 1.3750000000048446e-06, 1.3610000000052747e-06]</msg>
<status status="PASS" starttime="20201030 18:27:15.368" endtime="20201030 18:27:15.370"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:15.364" endtime="20201030 18:27:15.371"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:15.375" endtime="20201030 18:27:15.394"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:15.373" endtime="20201030 18:27:15.395"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:15.372" endtime="20201030 18:27:15.395"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:14.980" endtime="20201030 18:27:15.395"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:14.979" endtime="20201030 18:27:15.396"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:15.405" endtime="20201030 18:27:15.414"></status>
</kw>
<msg timestamp="20201030 18:27:15.415" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:15.403" endtime="20201030 18:27:15.415"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:15.417" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:15.416" endtime="20201030 18:27:15.418"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:15.418" endtime="20201030 18:27:15.420"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:15.400" endtime="20201030 18:27:15.420"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:15.398" endtime="20201030 18:27:15.421"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:15.427" endtime="20201030 18:27:15.712"></status>
</kw>
<msg timestamp="20201030 18:27:15.715" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0198575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019859069, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:27:15.426" endtime="20201030 18:27:15.715"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:15.723" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0198575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019859069, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:27:15.716" endtime="20201030 18:27:15.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:15.725" endtime="20201030 18:27:15.726"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:15.423" endtime="20201030 18:27:15.727"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:15.422" endtime="20201030 18:27:15.727"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:27:15.752" level="INFO">${debug} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201030 18:27:15.728" endtime="20201030 18:27:15.752"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:15.753" endtime="20201030 18:27:15.755"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:15.758" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:27:15.757" endtime="20201030 18:27:15.758"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:15.762" level="INFO">VALUE: {'sourcediff': [0, 1.568999999999876e-06, 3.163899999999997e-05, 1.403000000000515e-06, 2.6374999999998622e-05, 1.3750000000013751e-06, 3.2332999999998974e-05, 1.3620000000012789e-06, 2.3290999999998202e-05, 1.3750000000013751e-06, 3.202799999999992e-05, 1.403000000000515e-06, 3.198599999999774e-05, 1.3750000000013751e-06, 2.361099999999977e-05, 1.3610000000018052e-06, 2.7346999999997013e-05, 1.3750000000013751e-06, 2.3292000000001145e-05, 1.3609999999983358e-06, 3.205599999999906e-05, 1.3330000000026654e-06, 2.268100000000009e-05, 1.3609999999983358e-06, 2.6110999999998802e-05, 1.389000000000945e-06, 2.5458000000002506e-05, 1.3609999999983358e-06, 2.8903000000000262e-05, 1.3750000000013751e-06, 2.4541999999998926e-05, 1.443999999999751e-06, 2.5457999999999037e-05, 1.334000000002139e-06, 3.04579999999971e-05, 1.3750000000013751e-06, 3.0167000000001082e-05, 1.332999999999196e-06, 3.202799999999992e-05, 1.3609999999983358e-06, 3.234700000000201e-05, 1.3609999999983358e-06, 3.201400000000035e-05, 1.403000000000515e-06, 2.8889000000000692e-05, 1.3609999999983358e-06, 3.138899999999972e-05, 1.3750000000013751e-06, 3.138899999999972e-05, 1.389000000000945e-06, 2.9526999999997944e-05, 1.3610000000018052e-06, 2.8027999999999387e-05, 1.3059999999995298e-06, 2.6430000000000897e-05, 1.3609999999983358e-06, 2.9514000000001317e-05, 1.3750000000013751e-06, 2.2985999999999146e-05, 1.3750000000013751e-06, 2.9527999999997417e-05, 1.3750000000013751e-06, 2.8583999999998166e-05, 1.3880000000014714e-06, 2.6083999999999136e-05, 1.3750000000013751e-06, 3.2332999999998974e-05, 1.3610000000018052e-06, 2.2985999999999146e-05, 1.3749999999979057e-06, 2.266700000000052e-05, 1.389000000000945e-06, 2.3292000000001145e-05, 1.3609999999983358e-06, 2.3916000000002297e-05, 1.3889999999974756e-06, 2.6083999999999136e-05, 1.3750000000013751e-06, 3.0762999999999624e-05, 1.4309999999996548e-06, 2.9472000000002607e-05, 1.3889999999974756e-06, 2.2958000000000006e-05, 1.3750000000013751e-06, 2.9542000000000457e-05, 1.3609999999983358e-06, 2.391700000000177e-05, 1.403000000000515e-06, 2.2943999999996967e-05, 1.389000000000945e-06, 2.268100000000009e-05, 1.3610000000018052e-06, 3.044399999999753e-05, 1.3750000000013751e-06, 2.9235999999998458e-05, 1.3470000000022353e-06, 3.2374999999997683e-05, 1.3620000000012789e-06, 3.0124999999998903e-05, 1.3610000000018052e-06], 'time': [0.0198575, 0.019859069, 0.019890708, 0.019892111, 0.019918486, 0.019919861, 0.019952194, 0.019953556, 0.019976847, 0.019978222, 0.02001025, 0.020011653, 0.020043639, 0.020045014, 0.020068625, 0.020069986, 0.020097333, 0.020098708, 0.020122, 0.020123361, 0.020155417, 0.02015675, 0.020179431, 0.020180792, 0.020206903, 0.020208292, 0.02023375, 0.020235111, 0.020264014, 0.020265389, 0.020289931, 0.020291375, 0.020316833, 0.020318167, 0.020348625, 0.02035, 0.020380167, 0.0203815, 0.020413528, 0.020414889, 0.020447236, 0.020448597, 0.020480611, 0.020482014, 0.020510903, 0.020512264, 0.020543653, 0.020545028, 0.020576417, 0.020577806, 0.020607333, 0.020608694, 0.020636722, 0.020638028, 0.020664458, 0.020665819, 0.020695333, 0.020696708, 0.020719694, 0.020721069, 0.020750597, 0.020751972, 0.020780556, 0.020781944, 0.020808028, 0.020809403, 0.020841736, 0.020843097, 0.020866083, 0.020867458, 0.020890125, 0.020891514, 0.020914806, 0.020916167, 0.020940083, 0.020941472, 0.020967556, 0.020968931, 0.020999694, 0.021001125, 0.021030597, 0.021031986, 0.021054944, 0.021056319, 0.021085861, 0.021087222, 0.021111139, 0.021112542, 0.021135486, 0.021136875, 0.021159556, 0.021160917, 0.021191361, 0.021192736, 0.021221972, 0.021223319, 0.021255694, 0.021257056, 0.021287181, 0.021288542], 'eventsource_diff': [0, 1.568999999999876e-06, 3.163899999999997e-05, 1.403000000000515e-06, 2.6374999999998622e-05, 1.3750000000013751e-06, 3.2332999999998974e-05, 1.3620000000012789e-06, 2.3290999999998202e-05, 1.3750000000013751e-06, 3.202799999999992e-05, 1.403000000000515e-06, 3.198599999999774e-05, 1.3750000000013751e-06, 2.361099999999977e-05, 1.3610000000018052e-06, 2.7346999999997013e-05, 1.3750000000013751e-06, 2.3292000000001145e-05, 1.3609999999983358e-06, 3.205599999999906e-05, 1.3330000000026654e-06, 2.268100000000009e-05, 1.3609999999983358e-06, 2.6110999999998802e-05, 1.389000000000945e-06, 2.5458000000002506e-05, 1.3609999999983358e-06, 2.8903000000000262e-05, 1.3750000000013751e-06, 2.4541999999998926e-05, 1.443999999999751e-06, 2.5457999999999037e-05, 1.334000000002139e-06, 3.04579999999971e-05, 1.3750000000013751e-06, 3.0167000000001082e-05, 1.332999999999196e-06, 3.202799999999992e-05, 1.3609999999983358e-06, 3.234700000000201e-05, 1.3609999999983358e-06, 3.201400000000035e-05, 1.403000000000515e-06, 2.8889000000000692e-05, 1.3609999999983358e-06, 3.138899999999972e-05, 1.3750000000013751e-06, 3.138899999999972e-05, 1.389000000000945e-06, 2.9526999999997944e-05, 1.3610000000018052e-06, 2.8027999999999387e-05, 1.3059999999995298e-06, 2.6430000000000897e-05, 1.3609999999983358e-06, 2.9514000000001317e-05, 1.3750000000013751e-06, 2.2985999999999146e-05, 1.3750000000013751e-06, 2.9527999999997417e-05, 1.3750000000013751e-06, 2.8583999999998166e-05, 1.3880000000014714e-06, 2.6083999999999136e-05, 1.3750000000013751e-06, 3.2332999999998974e-05, 1.3610000000018052e-06, 2.2985999999999146e-05, 1.3749999999979057e-06, 2.266700000000052e-05, 1.389000000000945e-06, 2.3292000000001145e-05, 1.3609999999983358e-06, 2.3916000000002297e-05, 1.3889999999974756e-06, 2.6083999999999136e-05, 1.3750000000013751e-06, 3.0762999999999624e-05, 1.4309999999996548e-06, 2.9472000000002607e-05, 1.3889999999974756e-06, 2.2958000000000006e-05, 1.3750000000013751e-06, 2.9542000000000457e-05, 1.3609999999983358e-06, 2.391700000000177e-05, 1.403000000000515e-06, 2.2943999999996967e-05, 1.389000000000945e-06, 2.268100000000009e-05, 1.3610000000018052e-06, 3.044399999999753e-05, 1.3750000000013751e-06, 2.9235999999998458e-05, 1.3470000000022353e-06, 3.2374999999997683e-05, 1.3620000000012789e-06, 3.0124999999998903e-05, 1.3610000000018052e-06]}</msg>
<status status="PASS" starttime="20201030 18:27:15.759" endtime="20201030 18:27:15.763"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:15.755" endtime="20201030 18:27:15.764"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:15.768" level="INFO">${RESULT} = [{'diff': 1.568999999999876e-06}, {'diff': 1.403000000000515e-06}, {'diff': 1.3750000000013751e-06}, {'diff': 1.3620000000012789e-06}, {'diff': 1.3750000000013751e-06}, {'diff': 1.403000000000515e-06}...</msg>
<status status="PASS" starttime="20201030 18:27:15.765" endtime="20201030 18:27:15.768"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:15.773" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.568999999999876e-06, 1.403000000000515e-06, 1.3750000000013751e-06, 1.3620000000012789e-06, 1.3750000000013751e-06, 1.403000000000515e-06, 1.3750000000013751e-06, 1.3610000000018052e-06, 1...</msg>
<status status="PASS" starttime="20201030 18:27:15.769" endtime="20201030 18:27:15.773"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:15.777" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:27:15.776" endtime="20201030 18:27:15.777"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:15.779" level="INFO">VALUE: [1.568999999999876e-06, 1.403000000000515e-06, 1.3750000000013751e-06, 1.3620000000012789e-06, 1.3750000000013751e-06, 1.403000000000515e-06, 1.3750000000013751e-06, 1.3610000000018052e-06, 1.3750000000013751e-06, 1.3609999999983358e-06, 1.3330000000026654e-06, 1.3609999999983358e-06, 1.389000000000945e-06, 1.3609999999983358e-06, 1.3750000000013751e-06, 1.443999999999751e-06, 1.334000000002139e-06, 1.3750000000013751e-06, 1.332999999999196e-06, 1.3609999999983358e-06, 1.3609999999983358e-06, 1.403000000000515e-06, 1.3609999999983358e-06, 1.3750000000013751e-06, 1.389000000000945e-06, 1.3610000000018052e-06, 1.3059999999995298e-06, 1.3609999999983358e-06, 1.3750000000013751e-06, 1.3750000000013751e-06, 1.3750000000013751e-06, 1.3880000000014714e-06, 1.3750000000013751e-06, 1.3610000000018052e-06, 1.3749999999979057e-06, 1.389000000000945e-06, 1.3609999999983358e-06, 1.3889999999974756e-06, 1.3750000000013751e-06, 1.4309999999996548e-06, 1.3889999999974756e-06, 1.3750000000013751e-06, 1.3609999999983358e-06, 1.403000000000515e-06, 1.389000000000945e-06, 1.3610000000018052e-06, 1.3750000000013751e-06, 1.3470000000022353e-06, 1.3620000000012789e-06, 1.3610000000018052e-06]</msg>
<status status="PASS" starttime="20201030 18:27:15.778" endtime="20201030 18:27:15.780"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:15.773" endtime="20201030 18:27:15.780"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:15.784" endtime="20201030 18:27:15.803"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:15.782" endtime="20201030 18:27:15.804"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:15.781" endtime="20201030 18:27:15.804"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:15.396" endtime="20201030 18:27:15.804"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:15.396" endtime="20201030 18:27:15.805"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:15.813" endtime="20201030 18:27:15.822"></status>
</kw>
<msg timestamp="20201030 18:27:15.823" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:15.811" endtime="20201030 18:27:15.823"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:15.825" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:15.824" endtime="20201030 18:27:15.825"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:15.826" endtime="20201030 18:27:15.828"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:15.808" endtime="20201030 18:27:15.828"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:15.807" endtime="20201030 18:27:15.829"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:15.835" endtime="20201030 18:27:16.122"></status>
</kw>
<msg timestamp="20201030 18:27:16.125" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018765278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01876675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:27:15.834" endtime="20201030 18:27:16.125"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:16.134" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018765278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01876675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:27:16.126" endtime="20201030 18:27:16.134"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:16.135" endtime="20201030 18:27:16.137"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:15.831" endtime="20201030 18:27:16.137"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:15.829" endtime="20201030 18:27:16.138"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:27:16.162" level="INFO">${debug} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201030 18:27:16.139" endtime="20201030 18:27:16.162"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:16.163" endtime="20201030 18:27:16.164"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:16.168" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:27:16.167" endtime="20201030 18:27:16.168"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:16.172" level="INFO">VALUE: {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'], 'diff': [0, 1.4719999999988909e-06, 2.513900000000041e-05, 1.3750000000013751e-06, 3.0152999999998042e-05, 1.3610000000018052e-06, 2.6471999999999607e-05, 1.3059999999995298e-06, 3.2332999999998974e-05, 1.3750000000013751e-06, 2.766699999999858e-05, 1.3610000000018052e-06, 3.0776999999999194e-05, 1.3750000000013751e-06, 3.168099999999868e-05, 1.3750000000013751e-06, 2.6721999999999857e-05, 1.3609999999983358e-06, 2.3347999999999425e-05, 1.3190000000030955e-06, 2.6096999999999232e-05, 1.389000000000945e-06, 3.074999999999953e-05, 1.3749999999979057e-06, 2.8277999999999637e-05, 1.3750000000013751e-06, 2.8582999999998693e-05, 1.3750000000013751e-06, 3.10700000000011e-05, 1.3749999999979057e-06, 2.7333000000000912e-05, 1.389000000000945e-06, 2.6082999999999662e-05, 1.3749999999979057e-06, 2.2986000000002615e-05, 1.3749999999979057e-06, 3.044500000000047e-05, 1.389000000000945e-06, 3.200000000000078e-05, 1.3749999999979057e-06, 2.8889000000000692e-05, 1.3880000000014714e-06, 3.199999999999731e-05, 1.4450000000026941e-06, 2.262499999999834e-05, 1.3469999999987659e-06, 2.516700000000302e-05, 1.3889999999974756e-06, 2.2986000000002615e-05, 1.4029999999970455e-06, 3.0111000000002802e-05, 1.3609999999983358e-06, 2.4249999999999966e-05, 1.3469999999987659e-06, 2.7069000000001092e-05, 1.348000000001709e-06, 2.7026999999998913e-05, 1.389000000000945e-06, 2.3584000000000105e-05, 1.3889999999974756e-06, 3.074999999999953e-05, 1.3750000000013751e-06, 2.4263000000000062e-05, 1.348000000001709e-06, 3.2026999999996975e-05, 1.348000000001709e-06, 2.5500000000001216e-05, 1.3609999999983358e-06, 2.4236000000000396e-05, 1.3750000000013751e-06, 2.4221999999997357e-05, 1.3610000000018052e-06, 2.8903000000000262e-05, 1.3889999999974756e-06, 2.39030000000022e-05, 1.389000000000945e-06, 2.4526999999999882e-05, 1.4309999999996548e-06, 3.0402999999998293e-05, 1.4020000000010413e-06, 2.79309999999984e-05, 1.389000000000945e-06, 2.333300000000038e-05, 1.3609999999983358e-06, 3.166700000000258e-05, 1.3609999999983358e-06, 2.9221999999998888e-05, 1.3610000000018052e-06, 2.9542000000000457e-05, 1.3469999999987659e-06, 3.170900000000129e-05, 1.3749999999979057e-06, 3.0180000000001178e-05, 1.3339999999986696e-06, 2.7958000000001537e-05, 1.3750000000013751e-06, 3.0152999999998042e-05, 1.3610000000018052e-06, 2.7957999999998068e-05, 1.403000000000515e-06], 'time': [0.018765278, 0.01876675, 0.018791889, 0.018793264, 0.018823417, 0.018824778, 0.01885125, 0.018852556, 0.018884889, 0.018886264, 0.018913931, 0.018915292, 0.018946069, 0.018947444, 0.018979125, 0.0189805, 0.019007222, 0.019008583, 0.019031931, 0.01903325, 0.019059347, 0.019060736, 0.019091486, 0.019092861, 0.019121139, 0.019122514, 0.019151097, 0.019152472, 0.019183542, 0.019184917, 0.01921225, 0.019213639, 0.019239722, 0.019241097, 0.019264083, 0.019265458, 0.019295903, 0.019297292, 0.019329292, 0.019330667, 0.019359556, 0.019360944, 0.019392944, 0.019394389, 0.019417014, 0.019418361, 0.019443528, 0.019444917, 0.019467903, 0.019469306, 0.019499417, 0.019500778, 0.019525028, 0.019526375, 0.019553444, 0.019554792, 0.019581819, 0.019583208, 0.019606792, 0.019608181, 0.019638931, 0.019640306, 0.019664569, 0.019665917, 0.019697944, 0.019699292, 0.019724792, 0.019726153, 0.019750389, 0.019751764, 0.019775986, 0.019777347, 0.01980625, 0.019807639, 0.019831542, 0.019832931, 0.019857458, 0.019858889, 0.019889292, 0.019890694, 0.019918625, 0.019920014, 0.019943347, 0.019944708, 0.019976375, 0.019977736, 0.020006958, 0.020008319, 0.020037861, 0.020039208, 0.020070917, 0.020072292, 0.020102472, 0.020103806, 0.020131764, 0.020133139, 0.020163292, 0.020164653, 0.020192611, 0.020194014], 'eventsource_diff': [0, 1.4719999999988909e-06, 2.513900000000041e-05, 1.3750000000013751e-06, 3.0152999999998042e-05, 1.3610000000018052e-06, 2.6471999999999607e-05, 1.3059999999995298e-06, 3.2332999999998974e-05, 1.3750000000013751e-06, 2.766699999999858e-05, 1.3610000000018052e-06, 3.0776999999999194e-05, 1.3750000000013751e-06, 3.168099999999868e-05, 1.3750000000013751e-06, 2.6721999999999857e-05, 1.3609999999983358e-06, 2.3347999999999425e-05, 1.3190000000030955e-06, 2.6096999999999232e-05, 1.389000000000945e-06, 3.074999999999953e-05, 1.3749999999979057e-06, 2.8277999999999637e-05, 1.3750000000013751e-06, 2.8582999999998693e-05, 1.3750000000013751e-06, 3.10700000000011e-05, 1.3749999999979057e-06, 2.7333000000000912e-05, 1.389000000000945e-06, 2.6082999999999662e-05, 1.3749999999979057e-06, 2.2986000000002615e-05, 1.3749999999979057e-06, 3.044500000000047e-05, 1.389000000000945e-06, 3.200000000000078e-05, 1.3749999999979057e-06, 2.8889000000000692e-05, 1.3880000000014714e-06, 3.199999999999731e-05, 1.4450000000026941e-06, 2.262499999999834e-05, 1.3469999999987659e-06, 2.516700000000302e-05, 1.3889999999974756e-06, 2.2986000000002615e-05, 1.4029999999970455e-06, 3.0111000000002802e-05, 1.3609999999983358e-06, 2.4249999999999966e-05, 1.3469999999987659e-06, 2.7069000000001092e-05, 1.348000000001709e-06, 2.7026999999998913e-05, 1.389000000000945e-06, 2.3584000000000105e-05, 1.3889999999974756e-06, 3.074999999999953e-05, 1.3750000000013751e-06, 2.4263000000000062e-05, 1.348000000001709e-06, 3.2026999999996975e-05, 1.348000000001709e-06, 2.5500000000001216e-05, 1.3609999999983358e-06, 2.4236000000000396e-05, 1.3750000000013751e-06, 2.4221999999997357e-05, 1.3610000000018052e-06, 2.8903000000000262e-05, 1.3889999999974756e-06, 2.39030000000022e-05, 1.389000000000945e-06, 2.4526999999999882e-05, 1.4309999999996548e-06, 3.0402999999998293e-05, 1.4020000000010413e-06, 2.79309999999984e-05, 1.389000000000945e-06, 2.333300000000038e-05, 1.3609999999983358e-06, 3.166700000000258e-05, 1.3609999999983358e-06, 2.9221999999998888e-05, 1.3610000000018052e-06, 2.9542000000000457e-05, 1.3469999999987659e-06, 3.170900000000129e-05, 1.3749999999979057e-06, 3.0180000000001178e-05, 1.3339999999986696e-06, 2.7958000000001537e-05, 1.3750000000013751e-06, 3.0152999999998042e-05, 1.3610000000018052e-06, 2.7957999999998068e-05, 1.403000000000515e-06]}</msg>
<status status="PASS" starttime="20201030 18:27:16.169" endtime="20201030 18:27:16.173"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:16.165" endtime="20201030 18:27:16.174"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:16.177" level="INFO">${RESULT} = [{'diff': 1.4719999999988909e-06}, {'diff': 1.3750000000013751e-06}, {'diff': 1.3610000000018052e-06}, {'diff': 1.3059999999995298e-06}, {'diff': 1.3750000000013751e-06}, {'diff': 1.3610000000018052e-...</msg>
<status status="PASS" starttime="20201030 18:27:16.174" endtime="20201030 18:27:16.178"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:16.182" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.4719999999988909e-06, 1.3750000000013751e-06, 1.3610000000018052e-06, 1.3059999999995298e-06, 1.3750000000013751e-06, 1.3610000000018052e-06, 1.3750000000013751e-06, 1.3750000000013751e-06...</msg>
<status status="PASS" starttime="20201030 18:27:16.178" endtime="20201030 18:27:16.182"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:16.187" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:27:16.186" endtime="20201030 18:27:16.187"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:16.189" level="INFO">VALUE: [1.4719999999988909e-06, 1.3750000000013751e-06, 1.3610000000018052e-06, 1.3059999999995298e-06, 1.3750000000013751e-06, 1.3610000000018052e-06, 1.3750000000013751e-06, 1.3750000000013751e-06, 1.3609999999983358e-06, 1.3190000000030955e-06, 1.389000000000945e-06, 1.3749999999979057e-06, 1.3750000000013751e-06, 1.3750000000013751e-06, 1.3749999999979057e-06, 1.389000000000945e-06, 1.3749999999979057e-06, 1.3749999999979057e-06, 1.389000000000945e-06, 1.3749999999979057e-06, 1.3880000000014714e-06, 1.4450000000026941e-06, 1.3469999999987659e-06, 1.3889999999974756e-06, 1.4029999999970455e-06, 1.3609999999983358e-06, 1.3469999999987659e-06, 1.348000000001709e-06, 1.389000000000945e-06, 1.3889999999974756e-06, 1.3750000000013751e-06, 1.348000000001709e-06, 1.348000000001709e-06, 1.3609999999983358e-06, 1.3750000000013751e-06, 1.3610000000018052e-06, 1.3889999999974756e-06, 1.389000000000945e-06, 1.4309999999996548e-06, 1.4020000000010413e-06, 1.389000000000945e-06, 1.3609999999983358e-06, 1.3609999999983358e-06, 1.3610000000018052e-06, 1.3469999999987659e-06, 1.3749999999979057e-06, 1.3339999999986696e-06, 1.3750000000013751e-06, 1.3610000000018052e-06, 1.403000000000515e-06]</msg>
<status status="PASS" starttime="20201030 18:27:16.188" endtime="20201030 18:27:16.189"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:16.183" endtime="20201030 18:27:16.190"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:16.194" endtime="20201030 18:27:16.213"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:16.192" endtime="20201030 18:27:16.214"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:16.191" endtime="20201030 18:27:16.214"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:15.805" endtime="20201030 18:27:16.214"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:15.805" endtime="20201030 18:27:16.214"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:07.841" endtime="20201030 18:27:16.215"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:16.218" endtime="20201030 18:27:16.238"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:16.217" endtime="20201030 18:27:16.238"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:16.216" endtime="20201030 18:27:16.239"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:27:07.769" endtime="20201030 18:27:16.239" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:16.246" endtime="20201030 18:27:16.265"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:16.244" endtime="20201030 18:27:16.266"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:16.279" endtime="20201030 18:27:16.291"></status>
</kw>
<msg timestamp="20201030 18:27:16.292" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:16.277" endtime="20201030 18:27:16.292"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:16.294" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:16.293" endtime="20201030 18:27:16.295"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:27:16.298" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:27:16.296" endtime="20201030 18:27:16.298"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:16.275" endtime="20201030 18:27:16.299"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:16.272" endtime="20201030 18:27:16.299"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:16.271" endtime="20201030 18:27:16.299"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:27:16.304" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:27:16.303" endtime="20201030 18:27:16.305"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:16.300" endtime="20201030 18:27:16.305"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:16.270" endtime="20201030 18:27:16.305"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:16.270" endtime="20201030 18:27:16.305"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:16.306" endtime="20201030 18:27:16.307"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:16.268" endtime="20201030 18:27:16.308"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:16.267" endtime="20201030 18:27:16.308"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:16.243" endtime="20201030 18:27:16.309"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:16.318" endtime="20201030 18:27:16.333"></status>
</kw>
<msg timestamp="20201030 18:27:16.333" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:16.316" endtime="20201030 18:27:16.333"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:16.336" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:16.334" endtime="20201030 18:27:16.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:16.338" endtime="20201030 18:27:16.342"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:16.313" endtime="20201030 18:27:16.343"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:16.311" endtime="20201030 18:27:16.344"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:16.354" endtime="20201030 18:27:16.640"></status>
</kw>
<msg timestamp="20201030 18:27:16.643" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065542333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065554125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:16.352" endtime="20201030 18:27:16.643"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:16.653" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065542333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065554125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:16.645" endtime="20201030 18:27:16.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:16.654" endtime="20201030 18:27:16.655"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:16.348" endtime="20201030 18:27:16.656"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:16.345" endtime="20201030 18:27:16.656"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:16.660" level="INFO">${RESULT} = [{'diff': 1.179200000001046e-05}, {'diff': 1.1027999999996263e-05}, {'diff': 1.102800000001014e-05}, {'diff': 1.1014000000003632e-05}, {'diff': 1.0971999999997983e-05}, {'diff': 1.102699999999679e-05}...</msg>
<status status="PASS" starttime="20201030 18:27:16.657" endtime="20201030 18:27:16.661"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:16.666" level="INFO">${OVERHEAD} = {'diff': [1.179200000001046e-05, 1.1027999999996263e-05, 1.102800000001014e-05, 1.1014000000003632e-05, 1.0971999999997983e-05, 1.102699999999679e-05, 1.1027999999996263e-05, 1.1013999999989754e-05, 1...</msg>
<status status="PASS" starttime="20201030 18:27:16.661" endtime="20201030 18:27:16.666"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:16.671" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:27:16.670" endtime="20201030 18:27:16.671"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:16.674" level="INFO">VALUE: [1.179200000001046e-05, 1.1027999999996263e-05, 1.102800000001014e-05, 1.1014000000003632e-05, 1.0971999999997983e-05, 1.102699999999679e-05, 1.1027999999996263e-05, 1.1013999999989754e-05, 1.1041000000003298e-05, 1.1055999999995403e-05, 1.1083000000008947e-05, 1.1027000000010667e-05, 1.0999999999997123e-05, 1.1042000000002772e-05, 1.1027000000010667e-05, 1.1055999999995403e-05, 1.1014000000003632e-05, 1.1014000000003632e-05, 1.0944999999998317e-05, 1.1013000000004158e-05, 1.1027999999996263e-05, 1.1069000000002438e-05, 1.1069000000002438e-05, 1.1027999999996263e-05, 1.1042000000002772e-05, 1.102800000001014e-05, 1.1042000000002772e-05, 1.1027999999996263e-05, 1.1014000000003632e-05, 1.108400000000842e-05, 1.102800000001014e-05, 1.1027999999996263e-05, 1.1014000000003632e-05, 1.1027999999996263e-05, 1.102800000001014e-05, 1.0944999999998317e-05, 1.1027000000010667e-05, 1.1027999999996263e-05, 1.102800000001014e-05, 1.0999999999997123e-05, 1.1042000000002772e-05, 1.1027999999996263e-05, 1.1027999999996263e-05, 1.1042000000002772e-05, 1.1097000000001578e-05, 1.105499999999593e-05, 1.1097000000001578e-05, 1.105499999999593e-05, 1.102699999999679e-05, 1.0958000000005352e-05]</msg>
<status status="PASS" starttime="20201030 18:27:16.672" endtime="20201030 18:27:16.675"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:16.667" endtime="20201030 18:27:16.676"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:16.680" endtime="20201030 18:27:16.699"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:16.678" endtime="20201030 18:27:16.700"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:16.677" endtime="20201030 18:27:16.700"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:16.310" endtime="20201030 18:27:16.701"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:16.310" endtime="20201030 18:27:16.701"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:16.708" endtime="20201030 18:27:16.719"></status>
</kw>
<msg timestamp="20201030 18:27:16.720" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:16.707" endtime="20201030 18:27:16.720"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:16.723" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:16.721" endtime="20201030 18:27:16.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:16.724" endtime="20201030 18:27:16.725"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:16.704" endtime="20201030 18:27:16.726"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:16.703" endtime="20201030 18:27:16.726"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:16.732" endtime="20201030 18:27:17.018"></status>
</kw>
<msg timestamp="20201030 18:27:17.022" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019269639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019281417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:16.731" endtime="20201030 18:27:17.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:17.031" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019269639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019281417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:17.023" endtime="20201030 18:27:17.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:17.033" endtime="20201030 18:27:17.035"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:16.728" endtime="20201030 18:27:17.035"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:16.727" endtime="20201030 18:27:17.036"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:17.041" level="INFO">${RESULT} = [{'diff': 1.1777999999997013e-05}, {'diff': 1.1055999999998872e-05}, {'diff': 1.1027999999999732e-05}, {'diff': 1.1055000000002868e-05}, {'diff': 1.1097000000001578e-05}, {'diff': 1.1027000000000259e-...</msg>
<status status="PASS" starttime="20201030 18:27:17.036" endtime="20201030 18:27:17.041"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:17.045" level="INFO">${OVERHEAD} = {'diff': [1.1777999999997013e-05, 1.1055999999998872e-05, 1.1027999999999732e-05, 1.1055000000002868e-05, 1.1097000000001578e-05, 1.1027000000000259e-05, 1.1027000000000259e-05, 1.0945000000001787e-05...</msg>
<status status="PASS" starttime="20201030 18:27:17.042" endtime="20201030 18:27:17.046"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:17.049" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:27:17.048" endtime="20201030 18:27:17.050"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:17.052" level="INFO">VALUE: [1.1777999999997013e-05, 1.1055999999998872e-05, 1.1027999999999732e-05, 1.1055000000002868e-05, 1.1097000000001578e-05, 1.1027000000000259e-05, 1.1027000000000259e-05, 1.0945000000001787e-05, 1.0986000000001023e-05, 1.1000000000000593e-05, 1.1027999999999732e-05, 1.1056000000002342e-05, 1.1027999999999732e-05, 1.1068999999998969e-05, 1.1027999999999732e-05, 1.1041999999999302e-05, 1.0958999999997887e-05, 1.1027000000000259e-05, 1.1027999999999732e-05, 1.0971999999997983e-05, 1.1041999999999302e-05, 1.1027999999999732e-05, 1.1040999999999829e-05, 1.1041999999999302e-05, 1.1014000000000163e-05, 1.1014000000000163e-05, 1.1041999999999302e-05, 1.1013000000000689e-05, 1.1054999999999399e-05, 1.1042000000002772e-05, 1.1041999999999302e-05, 1.1042000000002772e-05, 1.1027999999999732e-05, 1.1070000000001912e-05, 1.1069999999998442e-05, 1.1013000000000689e-05, 1.1014000000000163e-05, 1.1041999999999302e-05, 1.1027999999999732e-05, 1.1040999999999829e-05, 1.0972000000001453e-05, 1.1027999999999732e-05, 1.1014000000000163e-05, 1.1096999999998108e-05, 1.1042000000002772e-05, 1.1014000000000163e-05, 1.1027999999999732e-05, 1.1014000000000163e-05, 1.1014000000000163e-05, 1.1028000000003202e-05]</msg>
<status status="PASS" starttime="20201030 18:27:17.051" endtime="20201030 18:27:17.052"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:17.046" endtime="20201030 18:27:17.053"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:17.056" endtime="20201030 18:27:17.076"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:17.055" endtime="20201030 18:27:17.076"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:17.054" endtime="20201030 18:27:17.077"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:16.701" endtime="20201030 18:27:17.077"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:16.701" endtime="20201030 18:27:17.077"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:17.085" endtime="20201030 18:27:17.096"></status>
</kw>
<msg timestamp="20201030 18:27:17.097" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:17.084" endtime="20201030 18:27:17.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:17.099" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:17.098" endtime="20201030 18:27:17.100"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:17.101" endtime="20201030 18:27:17.102"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:17.081" endtime="20201030 18:27:17.103"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:17.079" endtime="20201030 18:27:17.103"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:17.111" endtime="20201030 18:27:17.396"></status>
</kw>
<msg timestamp="20201030 18:27:17.399" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019277208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019288986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:17.109" endtime="20201030 18:27:17.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:17.408" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019277208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019288986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:17.400" endtime="20201030 18:27:17.408"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:17.409" endtime="20201030 18:27:17.411"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:17.105" endtime="20201030 18:27:17.412"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:17.104" endtime="20201030 18:27:17.412"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:17.417" level="INFO">${RESULT} = [{'diff': 1.1778000000000483e-05}, {'diff': 1.1055999999998872e-05}, {'diff': 1.0944000000002313e-05}, {'diff': 1.1041999999999302e-05}, {'diff': 1.1027999999999732e-05}, {'diff': 1.1027999999999732e-...</msg>
<status status="PASS" starttime="20201030 18:27:17.413" endtime="20201030 18:27:17.417"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:17.421" level="INFO">${OVERHEAD} = {'diff': [1.1778000000000483e-05, 1.1055999999998872e-05, 1.0944000000002313e-05, 1.1041999999999302e-05, 1.1027999999999732e-05, 1.1027999999999732e-05, 1.1055000000002868e-05, 1.0986000000001023e-05...</msg>
<status status="PASS" starttime="20201030 18:27:17.418" endtime="20201030 18:27:17.421"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:17.425" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:27:17.424" endtime="20201030 18:27:17.425"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:17.427" level="INFO">VALUE: [1.1778000000000483e-05, 1.1055999999998872e-05, 1.0944000000002313e-05, 1.1041999999999302e-05, 1.1027999999999732e-05, 1.1027999999999732e-05, 1.1055000000002868e-05, 1.0986000000001023e-05, 1.1041999999999302e-05, 1.0985999999997553e-05, 1.0972000000001453e-05, 1.1028000000003202e-05, 1.1000000000000593e-05, 1.1027999999999732e-05, 1.1083000000002008e-05, 1.1056000000002342e-05, 1.1041999999999302e-05, 1.1041999999999302e-05, 1.1000000000000593e-05, 1.1014000000000163e-05, 1.1027999999999732e-05, 1.1027999999999732e-05, 1.0945000000001787e-05, 1.1041999999999302e-05, 1.0958000000001883e-05, 1.1083999999998012e-05, 1.1027999999999732e-05, 1.0986000000001023e-05, 1.1041999999999302e-05, 1.1027999999999732e-05, 1.1027999999999732e-05, 1.1054999999999399e-05, 1.1027999999999732e-05, 1.1027999999999732e-05, 1.1027999999999732e-05, 1.0986000000001023e-05, 1.1068999999998969e-05, 1.0986000000001023e-05, 1.1027999999999732e-05, 1.1027999999999732e-05, 1.1028000000003202e-05, 1.1028000000003202e-05, 1.1070000000001912e-05, 1.1014000000000163e-05, 1.0971999999997983e-05, 1.1055999999998872e-05, 1.1014000000000163e-05, 1.1027000000000259e-05, 1.1040999999999829e-05, 1.1027000000000259e-05]</msg>
<status status="PASS" starttime="20201030 18:27:17.426" endtime="20201030 18:27:17.428"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:17.422" endtime="20201030 18:27:17.428"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:17.432" endtime="20201030 18:27:17.451"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:17.430" endtime="20201030 18:27:17.452"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:17.429" endtime="20201030 18:27:17.452"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:17.078" endtime="20201030 18:27:17.452"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:17.078" endtime="20201030 18:27:17.453"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:17.461" endtime="20201030 18:27:17.472"></status>
</kw>
<msg timestamp="20201030 18:27:17.473" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:17.460" endtime="20201030 18:27:17.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:17.475" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:17.474" endtime="20201030 18:27:17.476"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:17.476" endtime="20201030 18:27:17.478"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:17.457" endtime="20201030 18:27:17.478"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:17.455" endtime="20201030 18:27:17.479"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:17.486" endtime="20201030 18:27:17.772"></status>
</kw>
<msg timestamp="20201030 18:27:17.775" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020205361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020217125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:17.484" endtime="20201030 18:27:17.775"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:17.783" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020205361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020217125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:17.776" endtime="20201030 18:27:17.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:17.784" endtime="20201030 18:27:17.786"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:17.481" endtime="20201030 18:27:17.786"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:17.479" endtime="20201030 18:27:17.787"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:17.791" level="INFO">${RESULT} = [{'diff': 1.1763999999997443e-05}, {'diff': 1.1054999999999399e-05}, {'diff': 1.1027000000000259e-05}, {'diff': 1.1027000000000259e-05}, {'diff': 1.1027000000000259e-05}, {'diff': 1.1027999999999732e-...</msg>
<status status="PASS" starttime="20201030 18:27:17.788" endtime="20201030 18:27:17.791"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:17.796" level="INFO">${OVERHEAD} = {'diff': [1.1763999999997443e-05, 1.1054999999999399e-05, 1.1027000000000259e-05, 1.1027000000000259e-05, 1.1027000000000259e-05, 1.1027999999999732e-05, 1.0972000000001453e-05, 1.1028000000003202e-05...</msg>
<status status="PASS" starttime="20201030 18:27:17.792" endtime="20201030 18:27:17.796"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:17.800" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:27:17.799" endtime="20201030 18:27:17.800"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:17.802" level="INFO">VALUE: [1.1763999999997443e-05, 1.1054999999999399e-05, 1.1027000000000259e-05, 1.1027000000000259e-05, 1.1027000000000259e-05, 1.1027999999999732e-05, 1.0972000000001453e-05, 1.1028000000003202e-05, 1.1027999999999732e-05, 1.1054999999999399e-05, 1.0957999999998413e-05, 1.1014000000000163e-05, 1.1040999999999829e-05, 1.1013000000000689e-05, 1.1014000000000163e-05, 1.1068999999998969e-05, 1.1027999999999732e-05, 1.1014000000000163e-05, 1.1027999999999732e-05, 1.1055999999998872e-05, 1.1027999999999732e-05, 1.1000000000000593e-05, 1.1014000000000163e-05, 1.1027999999999732e-05, 1.1014000000000163e-05, 1.1014000000000163e-05, 1.1041999999999302e-05, 1.101299999999722e-05, 1.1027000000000259e-05, 1.1027999999999732e-05, 1.0986000000001023e-05, 1.1027999999999732e-05, 1.1014000000000163e-05, 1.1014000000000163e-05, 1.0971999999997983e-05, 1.1000000000000593e-05, 1.1027999999999732e-05, 1.1042000000002772e-05, 1.1027999999999732e-05, 1.1014000000000163e-05, 1.1014000000000163e-05, 1.1014000000000163e-05, 1.1040999999999829e-05, 1.1097000000001578e-05, 1.1014000000000163e-05, 1.1027999999999732e-05, 1.1027999999999732e-05, 1.1014000000000163e-05, 1.1027999999999732e-05, 1.1014000000000163e-05]</msg>
<status status="PASS" starttime="20201030 18:27:17.801" endtime="20201030 18:27:17.803"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:17.796" endtime="20201030 18:27:17.803"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:17.807" endtime="20201030 18:27:17.826"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:17.805" endtime="20201030 18:27:17.827"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:17.804" endtime="20201030 18:27:17.827"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:17.453" endtime="20201030 18:27:17.827"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:17.453" endtime="20201030 18:27:17.827"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:17.835" endtime="20201030 18:27:17.846"></status>
</kw>
<msg timestamp="20201030 18:27:17.847" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:17.834" endtime="20201030 18:27:17.847"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:17.849" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:17.848" endtime="20201030 18:27:17.849"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:17.850" endtime="20201030 18:27:17.852"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:17.831" endtime="20201030 18:27:17.852"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:17.829" endtime="20201030 18:27:17.853"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:17.859" endtime="20201030 18:27:18.145"></status>
</kw>
<msg timestamp="20201030 18:27:18.149" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019284, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01929575, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201030 18:27:17.858" endtime="20201030 18:27:18.149"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:18.157" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019284, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01929575, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201030 18:27:18.150" endtime="20201030 18:27:18.158"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:18.158" endtime="20201030 18:27:18.160"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:17.855" endtime="20201030 18:27:18.161"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:17.853" endtime="20201030 18:27:18.161"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:18.165" level="INFO">${RESULT} = [{'diff': 1.1750000000001343e-05}, {'diff': 1.1040999999999829e-05}, {'diff': 1.1027999999999732e-05}, {'diff': 1.1027999999999732e-05}, {'diff': 1.1041999999999302e-05}, {'diff': 1.1040999999999829e-...</msg>
<status status="PASS" starttime="20201030 18:27:18.162" endtime="20201030 18:27:18.165"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:18.170" level="INFO">${OVERHEAD} = {'diff': [1.1750000000001343e-05, 1.1040999999999829e-05, 1.1027999999999732e-05, 1.1027999999999732e-05, 1.1041999999999302e-05, 1.1040999999999829e-05, 1.1027000000000259e-05, 1.1027999999999732e-05...</msg>
<status status="PASS" starttime="20201030 18:27:18.166" endtime="20201030 18:27:18.170"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:18.174" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:27:18.173" endtime="20201030 18:27:18.174"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:18.176" level="INFO">VALUE: [1.1750000000001343e-05, 1.1040999999999829e-05, 1.1027999999999732e-05, 1.1027999999999732e-05, 1.1041999999999302e-05, 1.1040999999999829e-05, 1.1027000000000259e-05, 1.1027999999999732e-05, 1.1027000000000259e-05, 1.1013000000000689e-05, 1.102699999999679e-05, 1.1027999999999732e-05, 1.1041999999999302e-05, 1.1027999999999732e-05, 1.0986000000001023e-05, 1.1027999999999732e-05, 1.1027000000000259e-05, 1.1013000000000689e-05, 1.1014000000000163e-05, 1.0971999999997983e-05, 1.1027999999999732e-05, 1.1097999999997582e-05, 1.1040999999999829e-05, 1.1041999999999302e-05, 1.1027999999999732e-05, 1.1041999999999302e-05, 1.1027999999999732e-05, 1.1027000000000259e-05, 1.1028000000003202e-05, 1.1027000000000259e-05, 1.1027999999999732e-05, 1.1027999999999732e-05, 1.1055999999998872e-05, 1.1027999999999732e-05, 1.1027999999999732e-05, 1.1027000000000259e-05, 1.1000000000000593e-05, 1.1014000000000163e-05, 1.1027999999999732e-05, 1.1014000000000163e-05, 1.1014000000000163e-05, 1.1041999999999302e-05, 1.1014000000000163e-05, 1.1041999999999302e-05, 1.1027999999999732e-05, 1.1013000000000689e-05, 1.0999999999997123e-05, 1.1041999999999302e-05, 1.1041999999999302e-05, 1.1027000000000259e-05]</msg>
<status status="PASS" starttime="20201030 18:27:18.175" endtime="20201030 18:27:18.177"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:18.171" endtime="20201030 18:27:18.177"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:18.181" endtime="20201030 18:27:18.200"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:18.179" endtime="20201030 18:27:18.201"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:18.178" endtime="20201030 18:27:18.201"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:17.828" endtime="20201030 18:27:18.202"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:17.828" endtime="20201030 18:27:18.202"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:18.210" endtime="20201030 18:27:18.222"></status>
</kw>
<msg timestamp="20201030 18:27:18.222" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:18.208" endtime="20201030 18:27:18.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:18.225" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:18.223" endtime="20201030 18:27:18.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:18.226" endtime="20201030 18:27:18.228"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:18.206" endtime="20201030 18:27:18.229"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:18.204" endtime="20201030 18:27:18.229"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:18.237" endtime="20201030 18:27:18.524"></status>
</kw>
<msg timestamp="20201030 18:27:18.527" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020285083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020296847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:18.235" endtime="20201030 18:27:18.527"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:18.535" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020285083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020296847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:18.528" endtime="20201030 18:27:18.536"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:18.536" endtime="20201030 18:27:18.538"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:18.232" endtime="20201030 18:27:18.539"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:18.230" endtime="20201030 18:27:18.539"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:18.543" level="INFO">${RESULT} = [{'diff': 1.1764000000000913e-05}, {'diff': 1.1027999999999732e-05}, {'diff': 1.1014000000000163e-05}, {'diff': 1.1027000000000259e-05}, {'diff': 1.1000000000000593e-05}, {'diff': 1.1014000000000163e-...</msg>
<status status="PASS" starttime="20201030 18:27:18.540" endtime="20201030 18:27:18.544"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:18.547" level="INFO">${OVERHEAD} = {'diff': [1.1764000000000913e-05, 1.1027999999999732e-05, 1.1014000000000163e-05, 1.1027000000000259e-05, 1.1000000000000593e-05, 1.1014000000000163e-05, 1.1027999999999732e-05, 1.1027999999999732e-05...</msg>
<status status="PASS" starttime="20201030 18:27:18.544" endtime="20201030 18:27:18.548"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:18.552" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:27:18.551" endtime="20201030 18:27:18.552"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:18.554" level="INFO">VALUE: [1.1764000000000913e-05, 1.1027999999999732e-05, 1.1014000000000163e-05, 1.1027000000000259e-05, 1.1000000000000593e-05, 1.1014000000000163e-05, 1.1027999999999732e-05, 1.1027999999999732e-05, 1.1069000000002438e-05, 1.1027999999999732e-05, 1.1027999999999732e-05, 1.1000000000000593e-05, 1.1041999999999302e-05, 1.1027999999999732e-05, 1.1041999999999302e-05, 1.1000000000000593e-05, 1.101299999999722e-05, 1.1054999999999399e-05, 1.1014000000000163e-05, 1.1014000000000163e-05, 1.1041999999999302e-05, 1.1027999999999732e-05, 1.1027999999999732e-05, 1.1068999999998969e-05, 1.1041999999999302e-05, 1.1027999999999732e-05, 1.0971999999997983e-05, 1.1027999999999732e-05, 1.1014000000000163e-05, 1.1027999999999732e-05, 1.1014000000000163e-05, 1.1068999999998969e-05, 1.1027999999999732e-05, 1.1027000000000259e-05, 1.1027000000000259e-05, 1.1027999999999732e-05, 1.1014000000000163e-05, 1.1014000000000163e-05, 1.1027999999999732e-05, 1.1013000000000689e-05, 1.1000000000000593e-05, 1.1014000000000163e-05, 1.1027000000000259e-05, 1.1014000000000163e-05, 1.1069999999998442e-05, 1.1027999999999732e-05, 1.1041999999999302e-05, 1.1027999999999732e-05, 1.1027999999999732e-05, 1.1027999999999732e-05]</msg>
<status status="PASS" starttime="20201030 18:27:18.553" endtime="20201030 18:27:18.555"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:18.548" endtime="20201030 18:27:18.555"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:18.559" endtime="20201030 18:27:18.578"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:18.557" endtime="20201030 18:27:18.579"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:18.556" endtime="20201030 18:27:18.579"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:18.202" endtime="20201030 18:27:18.579"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:18.202" endtime="20201030 18:27:18.579"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:18.587" endtime="20201030 18:27:18.599"></status>
</kw>
<msg timestamp="20201030 18:27:18.600" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:18.586" endtime="20201030 18:27:18.600"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:18.602" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:18.601" endtime="20201030 18:27:18.603"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:18.604" endtime="20201030 18:27:18.605"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:18.583" endtime="20201030 18:27:18.606"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:18.582" endtime="20201030 18:27:18.606"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:18.613" endtime="20201030 18:27:18.900"></status>
</kw>
<msg timestamp="20201030 18:27:18.904" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020287167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020298958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:18.612" endtime="20201030 18:27:18.904"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:18.912" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020287167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020298958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:18.905" endtime="20201030 18:27:18.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:18.913" endtime="20201030 18:27:18.915"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:18.609" endtime="20201030 18:27:18.915"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:18.607" endtime="20201030 18:27:18.916"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:18.920" level="INFO">${RESULT} = [{'diff': 1.1791000000000579e-05}, {'diff': 1.1041999999999302e-05}, {'diff': 1.1027000000000259e-05}, {'diff': 1.1027999999999732e-05}, {'diff': 1.1027999999999732e-05}, {'diff': 1.1000000000000593e-...</msg>
<status status="PASS" starttime="20201030 18:27:18.916" endtime="20201030 18:27:18.920"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:18.924" level="INFO">${OVERHEAD} = {'diff': [1.1791000000000579e-05, 1.1041999999999302e-05, 1.1027000000000259e-05, 1.1027999999999732e-05, 1.1027999999999732e-05, 1.1000000000000593e-05, 1.1027999999999732e-05, 1.1084000000001482e-05...</msg>
<status status="PASS" starttime="20201030 18:27:18.921" endtime="20201030 18:27:18.924"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:18.928" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:27:18.927" endtime="20201030 18:27:18.928"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:18.930" level="INFO">VALUE: [1.1791000000000579e-05, 1.1041999999999302e-05, 1.1027000000000259e-05, 1.1027999999999732e-05, 1.1027999999999732e-05, 1.1000000000000593e-05, 1.1027999999999732e-05, 1.1084000000001482e-05, 1.1027999999999732e-05, 1.1070000000001912e-05, 1.1027000000000259e-05, 1.1027999999999732e-05, 1.1111000000001148e-05, 1.1027000000000259e-05, 1.1027999999999732e-05, 1.1027999999999732e-05, 1.1014000000000163e-05, 1.1027999999999732e-05, 1.1014000000000163e-05, 1.1027999999999732e-05, 1.1027000000000259e-05, 1.0958999999997887e-05, 1.1014000000000163e-05, 1.1040999999999829e-05, 1.1054999999999399e-05, 1.1040999999999829e-05, 1.1014000000000163e-05, 1.1028000000003202e-05, 1.1041999999999302e-05, 1.1027000000000259e-05, 1.1014000000000163e-05, 1.1040999999999829e-05, 1.1040999999999829e-05, 1.1027999999999732e-05, 1.1027999999999732e-05, 1.1027999999999732e-05, 1.1042000000002772e-05, 1.1042000000002772e-05, 1.1041999999999302e-05, 1.1014000000000163e-05, 1.1041999999999302e-05, 1.1014000000000163e-05, 1.1014000000000163e-05, 1.1013000000000689e-05, 1.1041999999999302e-05, 1.1013999999996693e-05, 1.1027999999999732e-05, 1.1054999999999399e-05, 1.1014000000000163e-05, 1.0999999999997123e-05]</msg>
<status status="PASS" starttime="20201030 18:27:18.929" endtime="20201030 18:27:18.932"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:18.925" endtime="20201030 18:27:18.932"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:18.936" endtime="20201030 18:27:18.955"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:18.934" endtime="20201030 18:27:18.956"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:18.933" endtime="20201030 18:27:18.956"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:18.580" endtime="20201030 18:27:18.956"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:18.580" endtime="20201030 18:27:18.956"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:18.965" endtime="20201030 18:27:18.976"></status>
</kw>
<msg timestamp="20201030 18:27:18.976" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:18.963" endtime="20201030 18:27:18.976"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:18.979" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:18.977" endtime="20201030 18:27:18.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:18.980" endtime="20201030 18:27:18.982"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:18.960" endtime="20201030 18:27:18.982"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:18.959" endtime="20201030 18:27:18.983"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:18.989" endtime="20201030 18:27:19.276"></status>
</kw>
<msg timestamp="20201030 18:27:19.279" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019479472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019491236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:18.988" endtime="20201030 18:27:19.280"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:19.289" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019479472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019491236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:19.281" endtime="20201030 18:27:19.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:19.291" endtime="20201030 18:27:19.293"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:18.985" endtime="20201030 18:27:19.294"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:18.983" endtime="20201030 18:27:19.294"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:19.300" level="INFO">${RESULT} = [{'diff': 1.1763999999997443e-05}, {'diff': 1.1014000000000163e-05}, {'diff': 1.1014000000000163e-05}, {'diff': 1.1000000000000593e-05}, {'diff': 1.1014000000000163e-05}, {'diff': 1.1014000000000163e-...</msg>
<status status="PASS" starttime="20201030 18:27:19.295" endtime="20201030 18:27:19.300"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:19.307" level="INFO">${OVERHEAD} = {'diff': [1.1763999999997443e-05, 1.1014000000000163e-05, 1.1014000000000163e-05, 1.1000000000000593e-05, 1.1014000000000163e-05, 1.1014000000000163e-05, 1.1040999999999829e-05, 1.1028000000003202e-05...</msg>
<status status="PASS" starttime="20201030 18:27:19.301" endtime="20201030 18:27:19.307"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:19.313" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:27:19.312" endtime="20201030 18:27:19.313"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:19.315" level="INFO">VALUE: [1.1763999999997443e-05, 1.1014000000000163e-05, 1.1014000000000163e-05, 1.1000000000000593e-05, 1.1014000000000163e-05, 1.1014000000000163e-05, 1.1040999999999829e-05, 1.1028000000003202e-05, 1.1014000000000163e-05, 1.1027999999999732e-05, 1.1027999999999732e-05, 1.1014000000000163e-05, 1.1014000000000163e-05, 1.1041999999999302e-05, 1.1069999999998442e-05, 1.1040999999999829e-05, 1.1028000000003202e-05, 1.1000000000000593e-05, 1.1042000000002772e-05, 1.1014000000000163e-05, 1.1000000000000593e-05, 1.1027999999999732e-05, 1.1013999999996693e-05, 1.1054999999999399e-05, 1.1041999999999302e-05, 1.1027999999999732e-05, 1.1027999999999732e-05, 1.1027999999999732e-05, 1.1040999999999829e-05, 1.1027999999999732e-05, 1.1055999999998872e-05, 1.1027999999999732e-05, 1.1027999999999732e-05, 1.1014000000000163e-05, 1.1014000000000163e-05, 1.1027999999999732e-05, 1.1028000000003202e-05, 1.0999999999997123e-05, 1.1014000000000163e-05, 1.1055999999998872e-05, 1.1027999999999732e-05, 1.1027000000000259e-05, 1.1014000000000163e-05, 1.0945000000001787e-05, 1.1068999999998969e-05, 1.1041999999999302e-05, 1.0958000000001883e-05, 1.1000000000000593e-05, 1.1014000000000163e-05, 1.1027999999999732e-05]</msg>
<status status="PASS" starttime="20201030 18:27:19.314" endtime="20201030 18:27:19.316"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:19.308" endtime="20201030 18:27:19.316"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:19.320" endtime="20201030 18:27:19.339"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:19.318" endtime="20201030 18:27:19.340"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:19.317" endtime="20201030 18:27:19.340"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:18.957" endtime="20201030 18:27:19.340"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:18.957" endtime="20201030 18:27:19.341"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:19.348" endtime="20201030 18:27:19.359"></status>
</kw>
<msg timestamp="20201030 18:27:19.360" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:19.347" endtime="20201030 18:27:19.360"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:19.363" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:19.361" endtime="20201030 18:27:19.363"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:19.364" endtime="20201030 18:27:19.365"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:19.344" endtime="20201030 18:27:19.366"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:19.343" endtime="20201030 18:27:19.366"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:19.373" endtime="20201030 18:27:19.659"></status>
</kw>
<msg timestamp="20201030 18:27:19.662" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019121889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019133667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:19.371" endtime="20201030 18:27:19.662"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:19.670" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019121889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019133667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:19.663" endtime="20201030 18:27:19.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:19.672" endtime="20201030 18:27:19.673"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:19.369" endtime="20201030 18:27:19.674"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:19.367" endtime="20201030 18:27:19.674"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:19.678" level="INFO">${RESULT} = [{'diff': 1.1778000000000483e-05}, {'diff': 1.1014000000000163e-05}, {'diff': 1.1083999999998012e-05}, {'diff': 1.1027999999999732e-05}, {'diff': 1.1027000000000259e-05}, {'diff': 1.1000000000000593e-...</msg>
<status status="PASS" starttime="20201030 18:27:19.675" endtime="20201030 18:27:19.678"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:19.682" level="INFO">${OVERHEAD} = {'diff': [1.1778000000000483e-05, 1.1014000000000163e-05, 1.1083999999998012e-05, 1.1027999999999732e-05, 1.1027000000000259e-05, 1.1000000000000593e-05, 1.1041999999999302e-05, 1.1027999999999732e-05...</msg>
<status status="PASS" starttime="20201030 18:27:19.679" endtime="20201030 18:27:19.682"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:19.686" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:27:19.685" endtime="20201030 18:27:19.686"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:19.688" level="INFO">VALUE: [1.1778000000000483e-05, 1.1014000000000163e-05, 1.1083999999998012e-05, 1.1027999999999732e-05, 1.1027000000000259e-05, 1.1000000000000593e-05, 1.1041999999999302e-05, 1.1027999999999732e-05, 1.1027000000000259e-05, 1.1014000000000163e-05, 1.101299999999722e-05, 1.1027000000000259e-05, 1.1027999999999732e-05, 1.1027999999999732e-05, 1.1014000000000163e-05, 1.1041999999999302e-05, 1.1027999999999732e-05, 1.1014000000000163e-05, 1.1028000000003202e-05, 1.1014000000000163e-05, 1.1028000000003202e-05, 1.1027999999999732e-05, 1.1014000000000163e-05, 1.1000000000000593e-05, 1.1040999999999829e-05, 1.1027999999999732e-05, 1.1027999999999732e-05, 1.1097000000001578e-05, 1.0986000000001023e-05, 1.1041999999999302e-05, 1.1027999999999732e-05, 1.1042000000002772e-05, 1.1027999999999732e-05, 1.1027999999999732e-05, 1.1027000000000259e-05, 1.1068999999998969e-05, 1.1069999999998442e-05, 1.0972000000001453e-05, 1.1027999999999732e-05, 1.1027999999999732e-05, 1.1097999999997582e-05, 1.1041999999999302e-05, 1.1041999999999302e-05, 1.1027999999999732e-05, 1.1027999999999732e-05, 1.1069999999998442e-05, 1.1027000000000259e-05, 1.1042000000002772e-05, 1.1028000000003202e-05, 1.1028000000003202e-05]</msg>
<status status="PASS" starttime="20201030 18:27:19.687" endtime="20201030 18:27:19.689"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:19.683" endtime="20201030 18:27:19.689"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:19.693" endtime="20201030 18:27:19.712"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:19.691" endtime="20201030 18:27:19.713"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:19.690" endtime="20201030 18:27:19.713"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:19.341" endtime="20201030 18:27:19.713"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:19.341" endtime="20201030 18:27:19.714"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:19.722" endtime="20201030 18:27:19.733"></status>
</kw>
<msg timestamp="20201030 18:27:19.734" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:19.720" endtime="20201030 18:27:19.734"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:19.736" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:19.735" endtime="20201030 18:27:19.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:19.737" endtime="20201030 18:27:19.739"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:19.717" endtime="20201030 18:27:19.740"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:19.716" endtime="20201030 18:27:19.740"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:19.747" endtime="20201030 18:27:20.032"></status>
</kw>
<msg timestamp="20201030 18:27:20.035" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019774486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019786181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:19.745" endtime="20201030 18:27:20.035"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:20.043" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019774486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019786181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:20.036" endtime="20201030 18:27:20.044"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:20.045" endtime="20201030 18:27:20.046"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:19.743" endtime="20201030 18:27:20.047"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:19.741" endtime="20201030 18:27:20.047"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:20.051" level="INFO">${RESULT} = [{'diff': 1.1694999999999067e-05}, {'diff': 1.1040999999999829e-05}, {'diff': 1.1041999999999302e-05}, {'diff': 1.1096999999998108e-05}, {'diff': 1.1027999999999732e-05}, {'diff': 1.1014000000000163e-...</msg>
<status status="PASS" starttime="20201030 18:27:20.048" endtime="20201030 18:27:20.051"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:20.055" level="INFO">${OVERHEAD} = {'diff': [1.1694999999999067e-05, 1.1040999999999829e-05, 1.1041999999999302e-05, 1.1096999999998108e-05, 1.1027999999999732e-05, 1.1014000000000163e-05, 1.1027999999999732e-05, 1.1041999999999302e-05...</msg>
<status status="PASS" starttime="20201030 18:27:20.052" endtime="20201030 18:27:20.055"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:20.059" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:27:20.058" endtime="20201030 18:27:20.059"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:20.063" level="INFO">VALUE: [1.1694999999999067e-05, 1.1040999999999829e-05, 1.1041999999999302e-05, 1.1096999999998108e-05, 1.1027999999999732e-05, 1.1014000000000163e-05, 1.1027999999999732e-05, 1.1041999999999302e-05, 1.1027999999999732e-05, 1.1014000000000163e-05, 1.1027999999999732e-05, 1.1014000000000163e-05, 1.1041999999999302e-05, 1.1083999999998012e-05, 1.1027999999999732e-05, 1.1042000000002772e-05, 1.1027999999999732e-05, 1.1040999999999829e-05, 1.1027000000000259e-05, 1.1027999999999732e-05, 1.1014000000000163e-05, 1.1027999999999732e-05, 1.1040999999999829e-05, 1.1027999999999732e-05, 1.1041999999999302e-05, 1.1000000000000593e-05, 1.1014000000000163e-05, 1.1070000000001912e-05, 1.1027999999999732e-05, 1.1041999999999302e-05, 1.1014000000000163e-05, 1.1027999999999732e-05, 1.1068999999998969e-05, 1.1041999999999302e-05, 1.1098000000001051e-05, 1.0986000000001023e-05, 1.1014000000000163e-05, 1.1027999999999732e-05, 1.1014000000000163e-05, 1.1027999999999732e-05, 1.1014000000000163e-05, 1.1028000000003202e-05, 1.1014000000000163e-05, 1.1027999999999732e-05, 1.0972000000001453e-05, 1.1041999999999302e-05, 1.1069999999998442e-05, 1.1040999999999829e-05, 1.0971999999997983e-05, 1.1014000000000163e-05]</msg>
<status status="PASS" starttime="20201030 18:27:20.060" endtime="20201030 18:27:20.067"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:20.056" endtime="20201030 18:27:20.067"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:20.071" endtime="20201030 18:27:20.091"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:20.070" endtime="20201030 18:27:20.091"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:20.068" endtime="20201030 18:27:20.092"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:19.714" endtime="20201030 18:27:20.092"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:19.714" endtime="20201030 18:27:20.092"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:20.102" endtime="20201030 18:27:20.114"></status>
</kw>
<msg timestamp="20201030 18:27:20.114" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:20.101" endtime="20201030 18:27:20.115"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:20.117" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:20.115" endtime="20201030 18:27:20.117"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:20.118" endtime="20201030 18:27:20.119"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:20.098" endtime="20201030 18:27:20.120"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:20.095" endtime="20201030 18:27:20.120"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:20.127" endtime="20201030 18:27:20.412"></status>
</kw>
<msg timestamp="20201030 18:27:20.415" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022359694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022371486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:20.126" endtime="20201030 18:27:20.416"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:20.423" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022359694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022371486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:20.416" endtime="20201030 18:27:20.424"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:20.425" endtime="20201030 18:27:20.426"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:20.123" endtime="20201030 18:27:20.427"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:20.121" endtime="20201030 18:27:20.427"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:20.431" level="INFO">${RESULT} = [{'diff': 1.1792000000000052e-05}, {'diff': 1.1014000000000163e-05}, {'diff': 1.1014000000000163e-05}, {'diff': 1.1040999999999829e-05}, {'diff': 1.1014000000000163e-05}, {'diff': 1.1028000000003202e-...</msg>
<status status="PASS" starttime="20201030 18:27:20.428" endtime="20201030 18:27:20.431"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:20.436" level="INFO">${OVERHEAD} = {'diff': [1.1792000000000052e-05, 1.1014000000000163e-05, 1.1014000000000163e-05, 1.1040999999999829e-05, 1.1014000000000163e-05, 1.1028000000003202e-05, 1.1082999999998538e-05, 1.1040999999999829e-05...</msg>
<status status="PASS" starttime="20201030 18:27:20.432" endtime="20201030 18:27:20.436"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:20.440" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:27:20.439" endtime="20201030 18:27:20.440"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:20.442" level="INFO">VALUE: [1.1792000000000052e-05, 1.1014000000000163e-05, 1.1014000000000163e-05, 1.1040999999999829e-05, 1.1014000000000163e-05, 1.1028000000003202e-05, 1.1082999999998538e-05, 1.1040999999999829e-05, 1.1027999999999732e-05, 1.1027999999999732e-05, 1.1056000000002342e-05, 1.1028000000003202e-05, 1.1027999999999732e-05, 1.1027999999999732e-05, 1.1014000000000163e-05, 1.1041999999999302e-05, 1.1027999999999732e-05, 1.1027000000000259e-05, 1.1027000000000259e-05, 1.1013000000000689e-05, 1.1096999999998108e-05, 1.1027000000000259e-05, 1.1027999999999732e-05, 1.1014000000000163e-05, 1.1041999999999302e-05, 1.1014000000000163e-05, 1.0958999999997887e-05, 1.1027999999999732e-05, 1.1014000000000163e-05, 1.1027999999999732e-05, 1.1027999999999732e-05, 1.1014000000000163e-05, 1.1027999999999732e-05, 1.1068999999998969e-05, 1.1041999999999302e-05, 1.1027000000000259e-05, 1.1040999999999829e-05, 1.1040999999999829e-05, 1.1041999999999302e-05, 1.1027999999999732e-05, 1.1014000000000163e-05, 1.1041999999999302e-05, 1.1027999999999732e-05, 1.1028000000003202e-05, 1.1054999999999399e-05, 1.1027999999999732e-05, 1.1000000000000593e-05, 1.1027999999999732e-05, 1.1027999999999732e-05, 1.1013999999996693e-05]</msg>
<status status="PASS" starttime="20201030 18:27:20.441" endtime="20201030 18:27:20.443"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:20.437" endtime="20201030 18:27:20.443"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:20.447" endtime="20201030 18:27:20.467"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:20.446" endtime="20201030 18:27:20.468"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:20.444" endtime="20201030 18:27:20.468"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:20.093" endtime="20201030 18:27:20.468"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:20.093" endtime="20201030 18:27:20.469"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:20.477" endtime="20201030 18:27:20.488"></status>
</kw>
<msg timestamp="20201030 18:27:20.488" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:20.475" endtime="20201030 18:27:20.489"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:20.491" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:20.489" endtime="20201030 18:27:20.491"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:20.492" endtime="20201030 18:27:20.493"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:20.472" endtime="20201030 18:27:20.494"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:20.471" endtime="20201030 18:27:20.494"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:20.501" endtime="20201030 18:27:20.786"></status>
</kw>
<msg timestamp="20201030 18:27:20.789" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020054181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020065958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:20.499" endtime="20201030 18:27:20.789"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:20.797" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020054181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020065958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:20.790" endtime="20201030 18:27:20.797"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:20.798" endtime="20201030 18:27:20.801"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:20.497" endtime="20201030 18:27:20.801"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:20.495" endtime="20201030 18:27:20.802"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:20.805" level="INFO">${RESULT} = [{'diff': 1.177699999999754e-05}, {'diff': 1.1027999999999732e-05}, {'diff': 1.1097000000001578e-05}, {'diff': 1.1027999999999732e-05}, {'diff': 1.1014000000000163e-05}, {'diff': 1.1014000000000163e-0...</msg>
<status status="PASS" starttime="20201030 18:27:20.802" endtime="20201030 18:27:20.806"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:20.810" level="INFO">${OVERHEAD} = {'diff': [1.177699999999754e-05, 1.1027999999999732e-05, 1.1097000000001578e-05, 1.1027999999999732e-05, 1.1014000000000163e-05, 1.1014000000000163e-05, 1.1027999999999732e-05, 1.1041999999999302e-05,...</msg>
<status status="PASS" starttime="20201030 18:27:20.806" endtime="20201030 18:27:20.810"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:20.814" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:27:20.813" endtime="20201030 18:27:20.814"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:20.816" level="INFO">VALUE: [1.177699999999754e-05, 1.1027999999999732e-05, 1.1097000000001578e-05, 1.1027999999999732e-05, 1.1014000000000163e-05, 1.1014000000000163e-05, 1.1027999999999732e-05, 1.1041999999999302e-05, 1.1027999999999732e-05, 1.1014000000000163e-05, 1.1027999999999732e-05, 1.1096999999998108e-05, 1.1054999999999399e-05, 1.1027000000000259e-05, 1.1014000000000163e-05, 1.1027999999999732e-05, 1.1083000000002008e-05, 1.0958999999997887e-05, 1.1000000000000593e-05, 1.1027999999999732e-05, 1.1042000000002772e-05, 1.1028000000003202e-05, 1.1027999999999732e-05, 1.1027999999999732e-05, 1.0957999999998413e-05, 1.1027999999999732e-05, 1.1027999999999732e-05, 1.1027999999999732e-05, 1.1027999999999732e-05, 1.1014000000000163e-05, 1.1027999999999732e-05, 1.1083999999998012e-05, 1.1013999999996693e-05, 1.1042000000002772e-05, 1.1027999999999732e-05, 1.1054999999999399e-05, 1.1027999999999732e-05, 1.1014000000000163e-05, 1.1014000000000163e-05, 1.1027999999999732e-05, 1.1068999999998969e-05, 1.1027999999999732e-05, 1.1027999999999732e-05, 1.1041999999999302e-05, 1.1027999999999732e-05, 1.0985999999997553e-05, 1.1027999999999732e-05, 1.1014000000000163e-05, 1.1027999999999732e-05, 1.1014000000000163e-05]</msg>
<status status="PASS" starttime="20201030 18:27:20.815" endtime="20201030 18:27:20.816"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:20.810" endtime="20201030 18:27:20.817"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:20.821" endtime="20201030 18:27:20.840"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:20.819" endtime="20201030 18:27:20.841"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:20.818" endtime="20201030 18:27:20.841"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:20.469" endtime="20201030 18:27:20.842"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:20.469" endtime="20201030 18:27:20.842"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:20.849" endtime="20201030 18:27:20.860"></status>
</kw>
<msg timestamp="20201030 18:27:20.861" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:20.848" endtime="20201030 18:27:20.861"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:20.863" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:20.862" endtime="20201030 18:27:20.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:20.864" endtime="20201030 18:27:20.867"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:20.845" endtime="20201030 18:27:20.867"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:20.844" endtime="20201030 18:27:20.868"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:20.874" endtime="20201030 18:27:21.160"></status>
</kw>
<msg timestamp="20201030 18:27:21.164" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019139319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019151056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:20.873" endtime="20201030 18:27:21.164"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:21.172" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019139319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019151056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:21.165" endtime="20201030 18:27:21.172"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:21.173" endtime="20201030 18:27:21.175"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:20.870" endtime="20201030 18:27:21.175"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:20.868" endtime="20201030 18:27:21.176"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:21.179" level="INFO">${RESULT} = [{'diff': 1.1737000000001246e-05}, {'diff': 1.1014000000000163e-05}, {'diff': 1.1041999999999302e-05}, {'diff': 1.1014000000000163e-05}, {'diff': 1.1028000000003202e-05}, {'diff': 1.0943999999998844e-...</msg>
<status status="PASS" starttime="20201030 18:27:21.176" endtime="20201030 18:27:21.180"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:21.184" level="INFO">${OVERHEAD} = {'diff': [1.1737000000001246e-05, 1.1014000000000163e-05, 1.1041999999999302e-05, 1.1014000000000163e-05, 1.1028000000003202e-05, 1.0943999999998844e-05, 1.1013000000000689e-05, 1.1027999999999732e-05...</msg>
<status status="PASS" starttime="20201030 18:27:21.180" endtime="20201030 18:27:21.184"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:21.188" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:27:21.187" endtime="20201030 18:27:21.188"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:21.190" level="INFO">VALUE: [1.1737000000001246e-05, 1.1014000000000163e-05, 1.1041999999999302e-05, 1.1014000000000163e-05, 1.1028000000003202e-05, 1.0943999999998844e-05, 1.1013000000000689e-05, 1.1027999999999732e-05, 1.1014000000000163e-05, 1.1000000000000593e-05, 1.1027999999999732e-05, 1.1042000000002772e-05, 1.1027999999999732e-05, 1.1014000000000163e-05, 1.1014000000000163e-05, 1.1027000000000259e-05, 1.1055999999998872e-05, 1.1027999999999732e-05, 1.1014000000000163e-05, 1.1096999999998108e-05, 1.0957999999998413e-05, 1.1069999999998442e-05, 1.1014000000000163e-05, 1.0971999999997983e-05, 1.1040999999999829e-05, 1.1014000000000163e-05, 1.1027000000000259e-05, 1.1014000000000163e-05, 1.1027999999999732e-05, 1.1027999999999732e-05, 1.1014000000000163e-05, 1.1014000000000163e-05, 1.1027000000000259e-05, 1.1027000000000259e-05, 1.1014000000000163e-05, 1.0999999999997123e-05, 1.1027999999999732e-05, 1.1055999999998872e-05, 1.0971999999997983e-05, 1.1027000000000259e-05, 1.1027999999999732e-05, 1.1027000000000259e-05, 1.1013000000000689e-05, 1.1027000000000259e-05, 1.1014000000000163e-05, 1.1041999999999302e-05, 1.1027999999999732e-05, 1.1068999999998969e-05, 1.1014000000000163e-05, 1.0987000000000496e-05]</msg>
<status status="PASS" starttime="20201030 18:27:21.189" endtime="20201030 18:27:21.192"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:21.185" endtime="20201030 18:27:21.192"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:21.196" endtime="20201030 18:27:21.215"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:21.195" endtime="20201030 18:27:21.216"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:21.193" endtime="20201030 18:27:21.216"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:20.842" endtime="20201030 18:27:21.217"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:20.842" endtime="20201030 18:27:21.217"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:21.225" endtime="20201030 18:27:21.236"></status>
</kw>
<msg timestamp="20201030 18:27:21.236" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:21.223" endtime="20201030 18:27:21.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:21.239" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:21.237" endtime="20201030 18:27:21.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:21.240" endtime="20201030 18:27:21.241"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:21.221" endtime="20201030 18:27:21.242"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:21.219" endtime="20201030 18:27:21.242"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:21.249" endtime="20201030 18:27:21.552"></status>
</kw>
<msg timestamp="20201030 18:27:21.555" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019383903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019395681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:21.247" endtime="20201030 18:27:21.556"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:21.564" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019383903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019395681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:21.557" endtime="20201030 18:27:21.564"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:21.565" endtime="20201030 18:27:21.567"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:21.245" endtime="20201030 18:27:21.567"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:21.243" endtime="20201030 18:27:21.568"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:21.572" level="INFO">${RESULT} = [{'diff': 1.1778000000000483e-05}, {'diff': 1.1084000000001482e-05}, {'diff': 1.1027999999999732e-05}, {'diff': 1.1042000000002772e-05}, {'diff': 1.1027999999999732e-05}, {'diff': 1.0972000000001453e-...</msg>
<status status="PASS" starttime="20201030 18:27:21.568" endtime="20201030 18:27:21.572"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:21.577" level="INFO">${OVERHEAD} = {'diff': [1.1778000000000483e-05, 1.1084000000001482e-05, 1.1027999999999732e-05, 1.1042000000002772e-05, 1.1027999999999732e-05, 1.0972000000001453e-05, 1.1014000000000163e-05, 1.1014000000000163e-05...</msg>
<status status="PASS" starttime="20201030 18:27:21.573" endtime="20201030 18:27:21.577"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:21.581" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:27:21.580" endtime="20201030 18:27:21.581"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:21.583" level="INFO">VALUE: [1.1778000000000483e-05, 1.1084000000001482e-05, 1.1027999999999732e-05, 1.1042000000002772e-05, 1.1027999999999732e-05, 1.0972000000001453e-05, 1.1014000000000163e-05, 1.1014000000000163e-05, 1.1027999999999732e-05, 1.1014000000000163e-05, 1.1027000000000259e-05, 1.1097000000001578e-05, 1.1041999999999302e-05, 1.1014000000000163e-05, 1.1069999999998442e-05, 1.1014000000000163e-05, 1.102699999999679e-05, 1.0957999999998413e-05, 1.1000000000000593e-05, 1.1096999999998108e-05, 1.1027999999999732e-05, 1.1040999999999829e-05, 1.1027999999999732e-05, 1.1055000000002868e-05, 1.1055999999998872e-05, 1.0999999999997123e-05, 1.1027999999999732e-05, 1.1027999999999732e-05, 1.1027999999999732e-05, 1.0971999999997983e-05, 1.0987000000000496e-05, 1.1014000000000163e-05, 1.1014000000000163e-05, 1.1027999999999732e-05, 1.1027999999999732e-05, 1.1082999999998538e-05, 1.1041999999999302e-05, 1.1014000000000163e-05, 1.1014000000000163e-05, 1.1000000000000593e-05, 1.1027000000000259e-05, 1.1027999999999732e-05, 1.1027999999999732e-05, 1.1014000000000163e-05, 1.1027999999999732e-05, 1.1042000000002772e-05, 1.1040999999999829e-05, 1.1027000000000259e-05, 1.1014000000000163e-05, 1.0973000000000926e-05]</msg>
<status status="PASS" starttime="20201030 18:27:21.582" endtime="20201030 18:27:21.584"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:21.577" endtime="20201030 18:27:21.585"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:21.588" endtime="20201030 18:27:21.608"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:21.587" endtime="20201030 18:27:21.608"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:21.585" endtime="20201030 18:27:21.608"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:21.218" endtime="20201030 18:27:21.609"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:21.217" endtime="20201030 18:27:21.609"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:21.617" endtime="20201030 18:27:21.628"></status>
</kw>
<msg timestamp="20201030 18:27:21.628" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:21.615" endtime="20201030 18:27:21.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:21.631" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:21.629" endtime="20201030 18:27:21.631"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:21.632" endtime="20201030 18:27:21.634"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:21.613" endtime="20201030 18:27:21.634"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:21.611" endtime="20201030 18:27:21.635"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:21.641" endtime="20201030 18:27:21.925"></status>
</kw>
<msg timestamp="20201030 18:27:21.928" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019355, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019366778, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:27:21.639" endtime="20201030 18:27:21.928"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:21.936" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019355, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019366778, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:27:21.929" endtime="20201030 18:27:21.937"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:21.938" endtime="20201030 18:27:21.940"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:21.637" endtime="20201030 18:27:21.941"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:21.635" endtime="20201030 18:27:21.941"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:21.945" level="INFO">${RESULT} = [{'diff': 1.1778000000000483e-05}, {'diff': 1.1069000000002438e-05}, {'diff': 1.1014000000000163e-05}, {'diff': 1.1027999999999732e-05}, {'diff': 1.1027999999999732e-05}, {'diff': 1.1027999999999732e-...</msg>
<status status="PASS" starttime="20201030 18:27:21.942" endtime="20201030 18:27:21.945"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:21.949" level="INFO">${OVERHEAD} = {'diff': [1.1778000000000483e-05, 1.1069000000002438e-05, 1.1014000000000163e-05, 1.1027999999999732e-05, 1.1027999999999732e-05, 1.1027999999999732e-05, 1.1000000000000593e-05, 1.1097000000001578e-05...</msg>
<status status="PASS" starttime="20201030 18:27:21.946" endtime="20201030 18:27:21.949"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:21.953" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:27:21.952" endtime="20201030 18:27:21.954"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:21.956" level="INFO">VALUE: [1.1778000000000483e-05, 1.1069000000002438e-05, 1.1014000000000163e-05, 1.1027999999999732e-05, 1.1027999999999732e-05, 1.1027999999999732e-05, 1.1000000000000593e-05, 1.1097000000001578e-05, 1.1027999999999732e-05, 1.1041999999999302e-05, 1.1028000000003202e-05, 1.1083000000002008e-05, 1.1027999999999732e-05, 1.1041999999999302e-05, 1.1027999999999732e-05, 1.1069999999998442e-05, 1.1041999999999302e-05, 1.1054999999999399e-05, 1.1027999999999732e-05, 1.1027999999999732e-05, 1.1027999999999732e-05, 1.1027000000000259e-05, 1.1013999999996693e-05, 1.1000000000000593e-05, 1.1027999999999732e-05, 1.1084000000001482e-05, 1.1014000000000163e-05, 1.1069999999998442e-05, 1.1027999999999732e-05, 1.1068999999998969e-05, 1.1027999999999732e-05, 1.1014000000000163e-05, 1.1027999999999732e-05, 1.1041999999999302e-05, 1.1041999999999302e-05, 1.1014000000000163e-05, 1.1000000000000593e-05, 1.1027999999999732e-05, 1.1055999999998872e-05, 1.1027000000000259e-05, 1.1027999999999732e-05, 1.1027999999999732e-05, 1.0957999999998413e-05, 1.1000000000000593e-05, 1.1027999999999732e-05, 1.1027000000000259e-05, 1.1027999999999732e-05, 1.1000000000000593e-05, 1.0985999999997553e-05, 1.1014000000000163e-05]</msg>
<status status="PASS" starttime="20201030 18:27:21.955" endtime="20201030 18:27:21.957"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:21.950" endtime="20201030 18:27:21.957"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:21.961" endtime="20201030 18:27:21.980"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:21.959" endtime="20201030 18:27:21.981"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:21.958" endtime="20201030 18:27:21.981"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:21.610" endtime="20201030 18:27:21.982"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:21.609" endtime="20201030 18:27:21.982"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:21.990" endtime="20201030 18:27:22.001"></status>
</kw>
<msg timestamp="20201030 18:27:22.001" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:21.988" endtime="20201030 18:27:22.002"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:22.004" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:22.002" endtime="20201030 18:27:22.004"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:22.005" endtime="20201030 18:27:22.007"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:21.985" endtime="20201030 18:27:22.008"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:21.984" endtime="20201030 18:27:22.008"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:22.015" endtime="20201030 18:27:22.301"></status>
</kw>
<msg timestamp="20201030 18:27:22.304" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019413042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019424833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:22.013" endtime="20201030 18:27:22.304"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:22.312" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019413042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019424833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:22.305" endtime="20201030 18:27:22.313"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:22.313" endtime="20201030 18:27:22.315"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:22.011" endtime="20201030 18:27:22.316"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:22.009" endtime="20201030 18:27:22.316"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:22.320" level="INFO">${RESULT} = [{'diff': 1.1791000000000579e-05}, {'diff': 1.1055000000002868e-05}, {'diff': 1.1027999999999732e-05}, {'diff': 1.1027999999999732e-05}, {'diff': 1.1014000000000163e-05}, {'diff': 1.1028000000003202e-...</msg>
<status status="PASS" starttime="20201030 18:27:22.317" endtime="20201030 18:27:22.320"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:22.324" level="INFO">${OVERHEAD} = {'diff': [1.1791000000000579e-05, 1.1055000000002868e-05, 1.1027999999999732e-05, 1.1027999999999732e-05, 1.1014000000000163e-05, 1.1028000000003202e-05, 1.1014000000000163e-05, 1.1054999999999399e-05...</msg>
<status status="PASS" starttime="20201030 18:27:22.321" endtime="20201030 18:27:22.324"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:22.328" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:27:22.327" endtime="20201030 18:27:22.329"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:22.331" level="INFO">VALUE: [1.1791000000000579e-05, 1.1055000000002868e-05, 1.1027999999999732e-05, 1.1027999999999732e-05, 1.1014000000000163e-05, 1.1028000000003202e-05, 1.1014000000000163e-05, 1.1054999999999399e-05, 1.1040999999999829e-05, 1.1000000000000593e-05, 1.1027999999999732e-05, 1.1068999999998969e-05, 1.1014000000000163e-05, 1.1027999999999732e-05, 1.1040999999999829e-05, 1.1028000000003202e-05, 1.1027000000000259e-05, 1.1041999999999302e-05, 1.0985999999997553e-05, 1.1014000000000163e-05, 1.1000000000000593e-05, 1.1041999999999302e-05, 1.1014000000000163e-05, 1.1056000000002342e-05, 1.1027000000000259e-05, 1.1014000000000163e-05, 1.1014000000000163e-05, 1.1042000000002772e-05, 1.1041999999999302e-05, 1.1014000000000163e-05, 1.1014000000000163e-05, 1.0986000000001023e-05, 1.1041999999999302e-05, 1.1014000000000163e-05, 1.1027999999999732e-05, 1.1027000000000259e-05, 1.1027999999999732e-05, 1.0999999999997123e-05, 1.1042000000002772e-05, 1.1054999999999399e-05, 1.1027999999999732e-05, 1.1054999999999399e-05, 1.1013999999996693e-05, 1.1014000000000163e-05, 1.1027999999999732e-05, 1.1041999999999302e-05, 1.1027999999999732e-05, 1.1027000000000259e-05, 1.1014000000000163e-05, 1.1082999999998538e-05]</msg>
<status status="PASS" starttime="20201030 18:27:22.329" endtime="20201030 18:27:22.332"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:22.325" endtime="20201030 18:27:22.333"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:22.336" endtime="20201030 18:27:22.356"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:22.335" endtime="20201030 18:27:22.357"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:22.334" endtime="20201030 18:27:22.357"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:21.983" endtime="20201030 18:27:22.357"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:21.982" endtime="20201030 18:27:22.357"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:22.365" endtime="20201030 18:27:22.376"></status>
</kw>
<msg timestamp="20201030 18:27:22.377" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:22.364" endtime="20201030 18:27:22.377"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:22.379" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:22.378" endtime="20201030 18:27:22.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:22.380" endtime="20201030 18:27:22.382"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:22.361" endtime="20201030 18:27:22.382"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:22.359" endtime="20201030 18:27:22.383"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:22.389" endtime="20201030 18:27:22.674"></status>
</kw>
<msg timestamp="20201030 18:27:22.677" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019373153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019384931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:22.388" endtime="20201030 18:27:22.678"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:22.686" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019373153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019384931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:22.678" endtime="20201030 18:27:22.686"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:22.687" endtime="20201030 18:27:22.688"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:22.385" endtime="20201030 18:27:22.689"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:22.383" endtime="20201030 18:27:22.689"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:22.693" level="INFO">${RESULT} = [{'diff': 1.1778000000000483e-05}, {'diff': 1.1013999999996693e-05}, {'diff': 1.1013999999996693e-05}, {'diff': 1.1041999999999302e-05}, {'diff': 1.1014000000000163e-05}, {'diff': 1.0986000000001023e-...</msg>
<status status="PASS" starttime="20201030 18:27:22.690" endtime="20201030 18:27:22.694"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:22.698" level="INFO">${OVERHEAD} = {'diff': [1.1778000000000483e-05, 1.1013999999996693e-05, 1.1013999999996693e-05, 1.1041999999999302e-05, 1.1014000000000163e-05, 1.0986000000001023e-05, 1.1041999999999302e-05, 1.1056000000002342e-05...</msg>
<status status="PASS" starttime="20201030 18:27:22.694" endtime="20201030 18:27:22.698"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:22.703" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:27:22.701" endtime="20201030 18:27:22.703"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:22.705" level="INFO">VALUE: [1.1778000000000483e-05, 1.1013999999996693e-05, 1.1013999999996693e-05, 1.1041999999999302e-05, 1.1014000000000163e-05, 1.0986000000001023e-05, 1.1041999999999302e-05, 1.1056000000002342e-05, 1.1014000000000163e-05, 1.1014000000000163e-05, 1.1041999999999302e-05, 1.1027999999999732e-05, 1.1014000000000163e-05, 1.1014000000000163e-05, 1.0958999999997887e-05, 1.1027999999999732e-05, 1.1000000000000593e-05, 1.1040999999999829e-05, 1.1027000000000259e-05, 1.1014000000000163e-05, 1.1070000000001912e-05, 1.1027999999999732e-05, 1.1027000000000259e-05, 1.102699999999679e-05, 1.1027000000000259e-05, 1.1028000000003202e-05, 1.1014000000000163e-05, 1.1013000000000689e-05, 1.1027999999999732e-05, 1.1027999999999732e-05, 1.1014000000000163e-05, 1.1027999999999732e-05, 1.1027999999999732e-05, 1.1027999999999732e-05, 1.1069999999998442e-05, 1.1014000000000163e-05, 1.1027000000000259e-05, 1.1054999999999399e-05, 1.1027999999999732e-05, 1.1027999999999732e-05, 1.1041999999999302e-05, 1.1000000000000593e-05, 1.1014000000000163e-05, 1.1027000000000259e-05, 1.1014000000000163e-05, 1.1013000000000689e-05, 1.1041999999999302e-05, 1.1027999999999732e-05, 1.1027999999999732e-05, 1.1027999999999732e-05]</msg>
<status status="PASS" starttime="20201030 18:27:22.704" endtime="20201030 18:27:22.706"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:22.699" endtime="20201030 18:27:22.706"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:22.710" endtime="20201030 18:27:22.729"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:22.708" endtime="20201030 18:27:22.730"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:22.707" endtime="20201030 18:27:22.730"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:22.358" endtime="20201030 18:27:22.731"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:22.358" endtime="20201030 18:27:22.731"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:22.739" endtime="20201030 18:27:22.750"></status>
</kw>
<msg timestamp="20201030 18:27:22.750" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:22.737" endtime="20201030 18:27:22.751"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:22.753" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:22.751" endtime="20201030 18:27:22.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:22.754" endtime="20201030 18:27:22.756"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:22.735" endtime="20201030 18:27:22.756"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:22.733" endtime="20201030 18:27:22.757"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:22.763" endtime="20201030 18:27:23.049"></status>
</kw>
<msg timestamp="20201030 18:27:23.052" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019366958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01937875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:27:22.761" endtime="20201030 18:27:23.052"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:23.060" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019366958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01937875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:27:23.053" endtime="20201030 18:27:23.060"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:23.061" endtime="20201030 18:27:23.064"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:22.759" endtime="20201030 18:27:23.064"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:22.757" endtime="20201030 18:27:23.065"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:23.069" level="INFO">${RESULT} = [{'diff': 1.1792000000000052e-05}, {'diff': 1.1027999999999732e-05}, {'diff': 1.1000000000000593e-05}, {'diff': 1.1042000000002772e-05}, {'diff': 1.1014000000000163e-05}, {'diff': 1.1027000000000259e-...</msg>
<status status="PASS" starttime="20201030 18:27:23.065" endtime="20201030 18:27:23.069"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:23.073" level="INFO">${OVERHEAD} = {'diff': [1.1792000000000052e-05, 1.1027999999999732e-05, 1.1000000000000593e-05, 1.1042000000002772e-05, 1.1014000000000163e-05, 1.1027000000000259e-05, 1.1014000000000163e-05, 1.1027999999999732e-05...</msg>
<status status="PASS" starttime="20201030 18:27:23.070" endtime="20201030 18:27:23.073"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:23.077" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:27:23.076" endtime="20201030 18:27:23.077"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:23.080" level="INFO">VALUE: [1.1792000000000052e-05, 1.1027999999999732e-05, 1.1000000000000593e-05, 1.1042000000002772e-05, 1.1014000000000163e-05, 1.1027000000000259e-05, 1.1014000000000163e-05, 1.1027999999999732e-05, 1.1014000000000163e-05, 1.1014000000000163e-05, 1.1027999999999732e-05, 1.1027999999999732e-05, 1.1028000000003202e-05, 1.1014000000000163e-05, 1.1000000000000593e-05, 1.1042000000002772e-05, 1.0945000000001787e-05, 1.1041999999999302e-05, 1.1040999999999829e-05, 1.1027999999999732e-05, 1.1027999999999732e-05, 1.0972000000001453e-05, 1.1070000000001912e-05, 1.1027999999999732e-05, 1.1027999999999732e-05, 1.1027999999999732e-05, 1.1014000000000163e-05, 1.1027999999999732e-05, 1.1014000000000163e-05, 1.1041999999999302e-05, 1.1000000000000593e-05, 1.1027999999999732e-05, 1.1040999999999829e-05, 1.1040999999999829e-05, 1.1041999999999302e-05, 1.1068999999998969e-05, 1.1041999999999302e-05, 1.1041999999999302e-05, 1.1027999999999732e-05, 1.1027000000000259e-05, 1.1014000000000163e-05, 1.1027999999999732e-05, 1.1027999999999732e-05, 1.1040999999999829e-05, 1.1084000000001482e-05, 1.1027999999999732e-05, 1.1084000000001482e-05, 1.1027999999999732e-05, 1.1042000000002772e-05, 1.1027999999999732e-05]</msg>
<status status="PASS" starttime="20201030 18:27:23.078" endtime="20201030 18:27:23.080"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:23.074" endtime="20201030 18:27:23.081"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:23.085" endtime="20201030 18:27:23.104"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:23.083" endtime="20201030 18:27:23.105"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:23.082" endtime="20201030 18:27:23.105"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:22.732" endtime="20201030 18:27:23.105"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:22.731" endtime="20201030 18:27:23.105"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:23.113" endtime="20201030 18:27:23.124"></status>
</kw>
<msg timestamp="20201030 18:27:23.125" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:23.112" endtime="20201030 18:27:23.125"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:23.127" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:23.126" endtime="20201030 18:27:23.128"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:23.128" endtime="20201030 18:27:23.131"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:23.109" endtime="20201030 18:27:23.131"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:23.107" endtime="20201030 18:27:23.132"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:23.138" endtime="20201030 18:27:23.424"></status>
</kw>
<msg timestamp="20201030 18:27:23.427" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019432861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019444639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:23.137" endtime="20201030 18:27:23.427"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:23.435" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019432861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019444639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:23.428" endtime="20201030 18:27:23.435"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:23.436" endtime="20201030 18:27:23.438"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:23.134" endtime="20201030 18:27:23.438"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:23.132" endtime="20201030 18:27:23.439"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:23.443" level="INFO">${RESULT} = [{'diff': 1.1778000000000483e-05}, {'diff': 1.102699999999679e-05}, {'diff': 1.1014000000000163e-05}, {'diff': 1.1027999999999732e-05}, {'diff': 1.1014000000000163e-05}, {'diff': 1.1070000000001912e-0...</msg>
<status status="PASS" starttime="20201030 18:27:23.439" endtime="20201030 18:27:23.443"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:23.447" level="INFO">${OVERHEAD} = {'diff': [1.1778000000000483e-05, 1.102699999999679e-05, 1.1014000000000163e-05, 1.1027999999999732e-05, 1.1014000000000163e-05, 1.1070000000001912e-05, 1.1097000000001578e-05, 1.1027999999999732e-05,...</msg>
<status status="PASS" starttime="20201030 18:27:23.444" endtime="20201030 18:27:23.447"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:23.451" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:27:23.450" endtime="20201030 18:27:23.451"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:23.453" level="INFO">VALUE: [1.1778000000000483e-05, 1.102699999999679e-05, 1.1014000000000163e-05, 1.1027999999999732e-05, 1.1014000000000163e-05, 1.1070000000001912e-05, 1.1097000000001578e-05, 1.1027999999999732e-05, 1.1014000000000163e-05, 1.1014000000000163e-05, 1.1027000000000259e-05, 1.1069999999998442e-05, 1.1041999999999302e-05, 1.1014000000000163e-05, 1.1027999999999732e-05, 1.1041000000003298e-05, 1.1027000000000259e-05, 1.1041999999999302e-05, 1.1027999999999732e-05, 1.1027999999999732e-05, 1.1027999999999732e-05, 1.1027999999999732e-05, 1.1027000000000259e-05, 1.0958000000001883e-05, 1.0972999999997457e-05, 1.1041999999999302e-05, 1.1069000000002438e-05, 1.1027999999999732e-05, 1.1027999999999732e-05, 1.1027999999999732e-05, 1.1027000000000259e-05, 1.1055999999998872e-05, 1.1042000000002772e-05, 1.1041999999999302e-05, 1.1040999999999829e-05, 1.1027999999999732e-05, 1.1014000000000163e-05, 1.1041999999999302e-05, 1.1027999999999732e-05, 1.1027999999999732e-05, 1.1027999999999732e-05, 1.1040999999999829e-05, 1.1014000000000163e-05, 1.1083999999998012e-05, 1.0959000000001357e-05, 1.1027999999999732e-05, 1.1055999999998872e-05, 1.1027000000000259e-05, 1.1042000000002772e-05, 1.1014000000000163e-05]</msg>
<status status="PASS" starttime="20201030 18:27:23.452" endtime="20201030 18:27:23.468"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:23.448" endtime="20201030 18:27:23.468"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:23.472" endtime="20201030 18:27:23.492"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:23.471" endtime="20201030 18:27:23.493"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:23.469" endtime="20201030 18:27:23.493"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:23.106" endtime="20201030 18:27:23.493"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:23.106" endtime="20201030 18:27:23.493"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:23.507" endtime="20201030 18:27:23.519"></status>
</kw>
<msg timestamp="20201030 18:27:23.520" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:23.504" endtime="20201030 18:27:23.520"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:23.524" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:23.522" endtime="20201030 18:27:23.524"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:23.525" endtime="20201030 18:27:23.527"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:23.500" endtime="20201030 18:27:23.527"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:23.496" endtime="20201030 18:27:23.528"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:23.536" endtime="20201030 18:27:23.826"></status>
</kw>
<msg timestamp="20201030 18:27:23.829" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025730556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025742333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:23.534" endtime="20201030 18:27:23.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:23.837" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025730556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025742333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:23.830" endtime="20201030 18:27:23.838"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:23.838" endtime="20201030 18:27:23.840"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:23.530" endtime="20201030 18:27:23.841"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:23.528" endtime="20201030 18:27:23.841"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:23.845" level="INFO">${RESULT} = [{'diff': 1.177699999999754e-05}, {'diff': 1.1054999999999399e-05}, {'diff': 1.1054999999999399e-05}, {'diff': 1.1027000000000259e-05}, {'diff': 1.1027999999999732e-05}, {'diff': 1.1027999999999732e-0...</msg>
<status status="PASS" starttime="20201030 18:27:23.842" endtime="20201030 18:27:23.845"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:23.850" level="INFO">${OVERHEAD} = {'diff': [1.177699999999754e-05, 1.1054999999999399e-05, 1.1054999999999399e-05, 1.1027000000000259e-05, 1.1027999999999732e-05, 1.1027999999999732e-05, 1.1014000000000163e-05, 1.1055999999998872e-05,...</msg>
<status status="PASS" starttime="20201030 18:27:23.846" endtime="20201030 18:27:23.850"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:23.854" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:27:23.853" endtime="20201030 18:27:23.855"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:23.857" level="INFO">VALUE: [1.177699999999754e-05, 1.1054999999999399e-05, 1.1054999999999399e-05, 1.1027000000000259e-05, 1.1027999999999732e-05, 1.1027999999999732e-05, 1.1014000000000163e-05, 1.1055999999998872e-05, 1.1014000000000163e-05, 1.1027999999999732e-05, 1.1040999999999829e-05, 1.1014000000000163e-05, 1.1055999999998872e-05, 1.1027999999999732e-05, 1.1027999999999732e-05, 1.1014000000000163e-05, 1.1013000000000689e-05, 1.1027999999999732e-05, 1.1027999999999732e-05, 1.1042000000002772e-05, 1.1042000000002772e-05, 1.1014000000000163e-05, 1.1000000000000593e-05, 1.1027999999999732e-05, 1.1014000000000163e-05, 1.1041999999999302e-05, 1.1040999999999829e-05, 1.1014000000000163e-05, 1.1027000000000259e-05, 1.1027999999999732e-05, 1.0986000000001023e-05, 1.1014000000000163e-05, 1.1027999999999732e-05, 1.1014000000000163e-05, 1.1027999999999732e-05, 1.1027999999999732e-05, 1.1097000000001578e-05, 1.1027999999999732e-05, 1.1027999999999732e-05, 1.1027000000000259e-05, 1.0985999999997553e-05, 1.1014000000000163e-05, 1.0943999999998844e-05, 1.1027000000000259e-05, 1.1040999999999829e-05, 1.1028000000003202e-05, 1.1069999999998442e-05, 1.0999999999997123e-05, 1.1040999999999829e-05, 1.1027000000000259e-05]</msg>
<status status="PASS" starttime="20201030 18:27:23.855" endtime="20201030 18:27:23.857"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:23.851" endtime="20201030 18:27:23.858"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:23.862" endtime="20201030 18:27:23.881"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:23.860" endtime="20201030 18:27:23.882"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:23.859" endtime="20201030 18:27:23.882"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:23.494" endtime="20201030 18:27:23.882"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:23.494" endtime="20201030 18:27:23.882"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:16.309" endtime="20201030 18:27:23.883"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:23.886" endtime="20201030 18:27:23.906"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:23.885" endtime="20201030 18:27:23.906"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:23.884" endtime="20201030 18:27:23.907"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:27:16.241" endtime="20201030 18:27:23.907" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:23.914" endtime="20201030 18:27:23.933"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:23.912" endtime="20201030 18:27:23.934"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:23.947" endtime="20201030 18:27:23.960"></status>
</kw>
<msg timestamp="20201030 18:27:23.960" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:23.945" endtime="20201030 18:27:23.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:23.963" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:23.961" endtime="20201030 18:27:23.963"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:27:23.966" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:27:23.964" endtime="20201030 18:27:23.966"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:23.943" endtime="20201030 18:27:23.967"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:23.940" endtime="20201030 18:27:23.967"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:23.939" endtime="20201030 18:27:23.968"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:27:23.971" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:27:23.971" endtime="20201030 18:27:23.972"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:23.969" endtime="20201030 18:27:23.972"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:23.938" endtime="20201030 18:27:23.972"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:23.937" endtime="20201030 18:27:23.972"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:23.973" endtime="20201030 18:27:23.975"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:23.936" endtime="20201030 18:27:23.975"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:23.934" endtime="20201030 18:27:23.976"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:23.911" endtime="20201030 18:27:23.976"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:23.984" endtime="20201030 18:27:24.005"></status>
</kw>
<msg timestamp="20201030 18:27:24.005" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:23.983" endtime="20201030 18:27:24.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:24.008" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:24.007" endtime="20201030 18:27:24.008"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:24.009" endtime="20201030 18:27:24.011"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:23.980" endtime="20201030 18:27:24.011"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:23.978" endtime="20201030 18:27:24.012"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:24.014" endtime="20201030 18:27:24.015"></status>
</kw>
<msg timestamp="20201030 18:27:24.016" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201030 18:27:24.013" endtime="20201030 18:27:24.016"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:24.020" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 18:27:24.019" endtime="20201030 18:27:24.020"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:24.022" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 18:27:24.021" endtime="20201030 18:27:24.023"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.017" endtime="20201030 18:27:24.023"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:24.027" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 18:27:24.026" endtime="20201030 18:27:24.027"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:24.029" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 18:27:24.028" endtime="20201030 18:27:24.029"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.024" endtime="20201030 18:27:24.030"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:24.036" endtime="20201030 18:27:24.322"></status>
</kw>
<msg timestamp="20201030 18:27:24.325" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062878583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.062911264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:24.035" endtime="20201030 18:27:24.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:24.334" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062878583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.062911264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:24.327" endtime="20201030 18:27:24.334"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:24.335" endtime="20201030 18:27:24.337"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.032" endtime="20201030 18:27:24.337"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.030" endtime="20201030 18:27:24.338"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:24.342" level="INFO">${RESULT} = [{'diff': 3.2680999999992744e-05}, {'diff': 3.166699999999911e-05}, {'diff': 3.170799999999141e-05}, {'diff': 3.169499999999825e-05}, {'diff': 3.169499999999825e-05}, {'diff': 3.1776999999996725e-05},...</msg>
<status status="PASS" starttime="20201030 18:27:24.338" endtime="20201030 18:27:24.342"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:24.346" level="INFO">${OVERHEAD} = {'diff': [3.2680999999992744e-05, 3.166699999999911e-05, 3.170799999999141e-05, 3.169499999999825e-05, 3.169499999999825e-05, 3.1776999999996725e-05, 3.1694000000012656e-05, 3.165300000000648e-05, 3.1...</msg>
<status status="PASS" starttime="20201030 18:27:24.342" endtime="20201030 18:27:24.346"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:24.350" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201030 18:27:24.349" endtime="20201030 18:27:24.350"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:24.353" level="INFO">VALUE: [3.2680999999992744e-05, 3.166699999999911e-05, 3.170799999999141e-05, 3.169499999999825e-05, 3.169499999999825e-05, 3.1776999999996725e-05, 3.1694000000012656e-05, 3.165300000000648e-05, 3.170900000000476e-05, 3.168100000000562e-05, 3.1722000000011796e-05, 3.169399999999878e-05, 3.169499999999825e-05, 3.170800000000529e-05, 3.170799999999141e-05, 3.170900000000476e-05, 3.174999999999706e-05, 3.170800000000529e-05, 3.172199999999792e-05, 3.172199999999792e-05, 3.1680999999991744e-05, 3.168100000000562e-05, 3.169499999999825e-05, 3.169399999999878e-05, 3.170900000000476e-05, 3.170799999999141e-05, 3.173600000000443e-05, 3.166599999999964e-05, 3.166699999999911e-05, 3.169499999999825e-05, 3.170800000000529e-05, 3.169499999999825e-05, 3.170900000000476e-05, 3.168100000000562e-05, 3.167999999999227e-05, 3.170800000000529e-05, 3.172199999999792e-05, 3.162500000000734e-05, 3.163899999999997e-05, 3.170799999999141e-05, 3.170900000000476e-05, 3.170899999999088e-05, 3.169399999999878e-05, 3.170899999999088e-05, 3.169399999999878e-05, 3.170800000000529e-05, 3.170899999999088e-05, 3.1680999999991744e-05, 3.163899999999997e-05, 3.172199999999792e-05]</msg>
<status status="PASS" starttime="20201030 18:27:24.351" endtime="20201030 18:27:24.353"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.346" endtime="20201030 18:27:24.354"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:24.358" endtime="20201030 18:27:24.377"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.356" endtime="20201030 18:27:24.378"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.355" endtime="20201030 18:27:24.378"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:23.976" endtime="20201030 18:27:24.378"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:27:23.908" endtime="20201030 18:27:24.379" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:24.386" endtime="20201030 18:27:24.405"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.384" endtime="20201030 18:27:24.406"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:24.419" endtime="20201030 18:27:24.432"></status>
</kw>
<msg timestamp="20201030 18:27:24.432" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:24.418" endtime="20201030 18:27:24.433"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:24.435" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:24.433" endtime="20201030 18:27:24.435"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:27:24.438" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:27:24.436" endtime="20201030 18:27:24.438"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:24.415" endtime="20201030 18:27:24.439"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:24.413" endtime="20201030 18:27:24.439"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.412" endtime="20201030 18:27:24.440"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:27:24.444" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:27:24.443" endtime="20201030 18:27:24.444"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.441" endtime="20201030 18:27:24.444"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.411" endtime="20201030 18:27:24.444"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.410" endtime="20201030 18:27:24.445"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:24.445" endtime="20201030 18:27:24.447"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.408" endtime="20201030 18:27:24.447"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.406" endtime="20201030 18:27:24.448"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.383" endtime="20201030 18:27:24.448"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:24.457" endtime="20201030 18:27:24.700"></status>
</kw>
<msg timestamp="20201030 18:27:24.700" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:24.455" endtime="20201030 18:27:24.700"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:24.703" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:24.701" endtime="20201030 18:27:24.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:24.704" endtime="20201030 18:27:24.705"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.452" endtime="20201030 18:27:24.706"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.450" endtime="20201030 18:27:24.706"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:24.708" endtime="20201030 18:27:24.710"></status>
</kw>
<msg timestamp="20201030 18:27:24.711" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201030 18:27:24.707" endtime="20201030 18:27:24.711"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:24.716" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 18:27:24.714" endtime="20201030 18:27:24.716"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:24.718" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 18:27:24.717" endtime="20201030 18:27:24.718"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.711" endtime="20201030 18:27:24.719"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:24.723" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 18:27:24.722" endtime="20201030 18:27:24.723"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:24.725" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 18:27:24.724" endtime="20201030 18:27:24.725"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.719" endtime="20201030 18:27:24.726"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:24.732" endtime="20201030 18:27:25.034"></status>
</kw>
<msg timestamp="20201030 18:27:25.040" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067871792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068016111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:24.730" endtime="20201030 18:27:25.041"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:25.058" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067871792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068016111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:25.043" endtime="20201030 18:27:25.058"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:25.060" endtime="20201030 18:27:25.064"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.728" endtime="20201030 18:27:25.065"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.726" endtime="20201030 18:27:25.066"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:25.074" level="INFO">${RESULT} = [{'diff': 0.00014431900000000386}, {'diff': 0.00014305600000000251}, {'diff': 0.00014305600000000251}, {'diff': 0.00014306900000000955}, {'diff': 0.00014308300000000218}, {'diff': 0.000143055999999988...</msg>
<status status="PASS" starttime="20201030 18:27:25.067" endtime="20201030 18:27:25.074"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:25.083" level="INFO">${OVERHEAD} = {'diff': [0.00014431900000000386, 0.00014305600000000251, 0.00014305600000000251, 0.00014306900000000955, 0.00014308300000000218, 0.00014305599999998864, 0.00014306999999999515, 0.00014306899999999567...</msg>
<status status="PASS" starttime="20201030 18:27:25.076" endtime="20201030 18:27:25.083"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:25.094" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201030 18:27:25.092" endtime="20201030 18:27:25.094"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:25.096" level="INFO">VALUE: [0.00014431900000000386, 0.00014305600000000251, 0.00014305600000000251, 0.00014306900000000955, 0.00014308300000000218, 0.00014305599999998864, 0.00014306999999999515, 0.00014306899999999567, 0.00014308300000000218, 0.00014306999999999515, 0.00014307000000000902, 0.00014306899999999567, 0.0001430969999999948, 0.00014306999999999515, 0.00014306899999999567, 0.00014306999999999515, 0.00014300000000000423, 0.00014308400000001553, 0.00014306999999999515, 0.00014305600000000251, 0.00014305600000000251, 0.00014305500000000304, 0.0001430829999999883, 0.00014309800000000816, 0.00014301399999999687, 0.0001430970000000087, 0.0001431669999999996, 0.00014306899999999567, 0.00014305600000000251, 0.00014306999999999515, 0.00014309800000000816, 0.00014312499999999395, 0.00014305500000000304, 0.00014308399999998778, 0.00014305500000000304, 0.0001430410000000104, 0.0001430829999999883, 0.00014306899999999567, 0.0001430829999999883, 0.00014302800000001725, 0.00014306899999999567, 0.00014311100000002908, 0.00014305500000000304, 0.0001430279999999895, 0.00014305600000003027, 0.0001430829999999883, 0.00014306899999999567, 0.00014305499999994753, 0.00014305600000003027, 0.00014306899999999567]</msg>
<status status="PASS" starttime="20201030 18:27:25.095" endtime="20201030 18:27:25.096"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:25.085" endtime="20201030 18:27:25.097"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:25.100" endtime="20201030 18:27:25.121"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:25.099" endtime="20201030 18:27:25.122"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:25.098" endtime="20201030 18:27:25.122"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.448" endtime="20201030 18:27:25.123"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:27:24.380" endtime="20201030 18:27:25.123" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:25.134" endtime="20201030 18:27:25.153"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:25.132" endtime="20201030 18:27:25.154"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:25.167" endtime="20201030 18:27:25.179"></status>
</kw>
<msg timestamp="20201030 18:27:25.179" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:25.165" endtime="20201030 18:27:25.180"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:25.182" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:25.181" endtime="20201030 18:27:25.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:27:25.185" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:27:25.183" endtime="20201030 18:27:25.185"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:25.163" endtime="20201030 18:27:25.186"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:25.160" endtime="20201030 18:27:25.186"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:25.159" endtime="20201030 18:27:25.187"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:27:25.190" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:27:25.190" endtime="20201030 18:27:25.191"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:25.188" endtime="20201030 18:27:25.191"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:25.158" endtime="20201030 18:27:25.191"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:25.158" endtime="20201030 18:27:25.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:25.192" endtime="20201030 18:27:25.194"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:25.156" endtime="20201030 18:27:25.194"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:25.155" endtime="20201030 18:27:25.195"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:25.131" endtime="20201030 18:27:25.195"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:25.205" endtime="20201030 18:27:26.045"></status>
</kw>
<msg timestamp="20201030 18:27:26.046" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:25.203" endtime="20201030 18:27:26.046"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:26.051" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:26.048" endtime="20201030 18:27:26.052"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:26.054" endtime="20201030 18:27:26.057"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:25.199" endtime="20201030 18:27:26.058"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:25.197" endtime="20201030 18:27:26.059"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:26.063" endtime="20201030 18:27:26.066"></status>
</kw>
<msg timestamp="20201030 18:27:26.067" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201030 18:27:26.061" endtime="20201030 18:27:26.068"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:26.075" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 18:27:26.073" endtime="20201030 18:27:26.076"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:26.080" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 18:27:26.078" endtime="20201030 18:27:26.080"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.069" endtime="20201030 18:27:26.081"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:26.089" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 18:27:26.087" endtime="20201030 18:27:26.090"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:26.093" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 18:27:26.091" endtime="20201030 18:27:26.094"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.083" endtime="20201030 18:27:26.095"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:26.108" endtime="20201030 18:27:26.400"></status>
</kw>
<msg timestamp="20201030 18:27:26.403" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.077325236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.077594083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:26.105" endtime="20201030 18:27:26.403"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:26.411" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.077325236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.077594083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:26.404" endtime="20201030 18:27:26.411"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:26.412" endtime="20201030 18:27:26.413"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.100" endtime="20201030 18:27:26.414"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.096" endtime="20201030 18:27:26.414"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:26.418" level="INFO">${RESULT} = [{'diff': 0.00026884699999998873}, {'diff': 0.000262042000000004}, {'diff': 0.000262013999999991}, {'diff': 0.00026201400000000485}, {'diff': 0.0002620279999999975}, {'diff': 0.0002620279999999975}, {...</msg>
<status status="PASS" starttime="20201030 18:27:26.415" endtime="20201030 18:27:26.418"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:26.423" level="INFO">${OVERHEAD} = {'diff': [0.00026884699999998873, 0.000262042000000004, 0.000262013999999991, 0.00026201400000000485, 0.0002620279999999975, 0.0002620279999999975, 0.0002619450000000134, 0.0002619860000000196, 0.0002...</msg>
<status status="PASS" starttime="20201030 18:27:26.419" endtime="20201030 18:27:26.423"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:26.428" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201030 18:27:26.427" endtime="20201030 18:27:26.428"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:26.430" level="INFO">VALUE: [0.00026884699999998873, 0.000262042000000004, 0.000262013999999991, 0.00026201400000000485, 0.0002620279999999975, 0.0002620279999999975, 0.0002619450000000134, 0.0002619860000000196, 0.0002620000000000122, 0.0002620130000000054, 0.00026198700000001907, 0.00026200000000004, 0.0002619729999999709, 0.00026202799999996973, 0.0002620549999999833, 0.0002620140000000326, 0.00026208399999999576, 0.00026202799999996973, 0.00026202799999996973, 0.00026204200000001787, 0.0002620139999999771, 0.00026199999999998447, 0.00026202799999996973, 0.00026208299999996854, 0.00026190299999995226, 0.00026204099999999064, 0.000262056000000066, 0.00026199999999998447, 0.00026202800000008075, 0.00026207000000000313, 0.00026204200000001787, 0.0002620140000000326, 0.00026199999999998447, 0.00026199999999998447, 0.0002620140000000326, 0.00026199999999998447, 0.00026204200000001787, 0.00026204200000001787, 0.0002619719999999992, 0.00026202799999996973, 0.0002621110000000648, 0.0002620140000000326, 0.00026202799999996973, 0.00026207000000000313, 0.0002620140000000326, 0.00026199999999998447, 0.000262026999999998, 0.0002620549999999833, 0.00026204200000001787, 0.00026204099999993513]</msg>
<status status="PASS" starttime="20201030 18:27:26.429" endtime="20201030 18:27:26.431"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.424" endtime="20201030 18:27:26.431"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:26.435" endtime="20201030 18:27:26.454"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.433" endtime="20201030 18:27:26.455"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.432" endtime="20201030 18:27:26.455"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:25.195" endtime="20201030 18:27:26.455"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:27:25.126" endtime="20201030 18:27:26.456" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:26.462" endtime="20201030 18:27:26.482"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.461" endtime="20201030 18:27:26.482"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:26.495" endtime="20201030 18:27:26.508"></status>
</kw>
<msg timestamp="20201030 18:27:26.509" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:26.494" endtime="20201030 18:27:26.509"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:26.511" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:26.510" endtime="20201030 18:27:26.512"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:27:26.514" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:27:26.512" endtime="20201030 18:27:26.514"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:26.491" endtime="20201030 18:27:26.515"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:26.489" endtime="20201030 18:27:26.516"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.488" endtime="20201030 18:27:26.516"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:27:26.520" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:27:26.519" endtime="20201030 18:27:26.520"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.517" endtime="20201030 18:27:26.520"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.487" endtime="20201030 18:27:26.520"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.486" endtime="20201030 18:27:26.521"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:26.521" endtime="20201030 18:27:26.523"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.485" endtime="20201030 18:27:26.523"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.483" endtime="20201030 18:27:26.524"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.460" endtime="20201030 18:27:26.524"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:26.533" endtime="20201030 18:27:26.554"></status>
</kw>
<msg timestamp="20201030 18:27:26.554" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:26.531" endtime="20201030 18:27:26.554"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:26.557" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:26.555" endtime="20201030 18:27:26.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:26.558" endtime="20201030 18:27:26.559"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.529" endtime="20201030 18:27:26.560"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.527" endtime="20201030 18:27:26.560"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:26.562" endtime="20201030 18:27:26.564"></status>
</kw>
<msg timestamp="20201030 18:27:26.564" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201030 18:27:26.561" endtime="20201030 18:27:26.565"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:26.568" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 18:27:26.567" endtime="20201030 18:27:26.569"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:26.571" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 18:27:26.570" endtime="20201030 18:27:26.571"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.565" endtime="20201030 18:27:26.571"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:26.575" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 18:27:26.574" endtime="20201030 18:27:26.576"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:26.577" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 18:27:26.576" endtime="20201030 18:27:26.578"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.572" endtime="20201030 18:27:26.578"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:26.584" endtime="20201030 18:27:26.871"></status>
</kw>
<msg timestamp="20201030 18:27:26.874" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063131014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.063137181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:26.583" endtime="20201030 18:27:26.875"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:26.882" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063131014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.063137181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:26.875" endtime="20201030 18:27:26.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:26.884" endtime="20201030 18:27:26.885"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.580" endtime="20201030 18:27:26.886"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.579" endtime="20201030 18:27:26.886"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:26.890" level="INFO">${RESULT} = [{'diff': 6.167000000001366e-06}, {'diff': 6.139000000002226e-06}, {'diff': 6.181000000007875e-06}, {'diff': 6.096999999996577e-06}, {'diff': 6.111000000003086e-06}, {'diff': 6.111000000003086e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:27:26.887" endtime="20201030 18:27:26.890"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:26.895" level="INFO">${OVERHEAD} = {'diff': [6.167000000001366e-06, 6.139000000002226e-06, 6.181000000007875e-06, 6.096999999996577e-06, 6.111000000003086e-06, 6.111000000003086e-06, 6.11200000000256e-06, 6.083000000003946e-06, 6.09699...</msg>
<status status="PASS" starttime="20201030 18:27:26.891" endtime="20201030 18:27:26.895"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:26.899" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201030 18:27:26.898" endtime="20201030 18:27:26.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:26.901" level="INFO">VALUE: [6.167000000001366e-06, 6.139000000002226e-06, 6.181000000007875e-06, 6.096999999996577e-06, 6.111000000003086e-06, 6.111000000003086e-06, 6.11200000000256e-06, 6.083000000003946e-06, 6.096999999996577e-06, 6.0829999999900686e-06, 6.05600000000428e-06, 6.124999999995717e-06, 6.096999999996577e-06, 6.083000000003946e-06, 6.097999999996051e-06, 6.097999999996051e-06, 6.110999999989208e-06, 6.110999999989208e-06, 6.097000000010455e-06, 6.111000000003086e-06, 6.11200000000256e-06, 6.124999999995717e-06, 6.139000000002226e-06, 6.180999999993997e-06, 6.0829999999900686e-06, 6.139000000002226e-06, 6.111000000003086e-06, 6.111000000003086e-06, 6.111000000003086e-06, 6.167000000001366e-06, 6.096999999996577e-06, 6.110999999989208e-06, 6.124999999995717e-06, 6.124999999995717e-06, 6.111000000003086e-06, 6.110999999989208e-06, 6.096999999996577e-06, 6.097000000010455e-06, 6.096999999996577e-06, 6.069999999996911e-06, 6.111000000003086e-06, 6.111000000003086e-06, 6.083000000003946e-06, 6.097999999996051e-06, 6.110999999989208e-06, 6.111000000003086e-06, 6.069000000011315e-06, 6.152999999994857e-06, 6.124999999995717e-06, 6.167000000001366e-06]</msg>
<status status="PASS" starttime="20201030 18:27:26.900" endtime="20201030 18:27:26.902"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.895" endtime="20201030 18:27:26.902"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:26.906" endtime="20201030 18:27:26.925"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.904" endtime="20201030 18:27:26.926"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.903" endtime="20201030 18:27:26.926"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.525" endtime="20201030 18:27:26.927"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:27:26.457" endtime="20201030 18:27:26.927" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:26.935" endtime="20201030 18:27:26.954"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.933" endtime="20201030 18:27:26.955"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:26.969" endtime="20201030 18:27:26.981"></status>
</kw>
<msg timestamp="20201030 18:27:26.982" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:26.967" endtime="20201030 18:27:26.982"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:26.984" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:26.983" endtime="20201030 18:27:26.984"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:27:26.987" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:27:26.985" endtime="20201030 18:27:26.987"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:26.965" endtime="20201030 18:27:26.988"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:26.962" endtime="20201030 18:27:26.988"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.961" endtime="20201030 18:27:26.989"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:27:26.993" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:27:26.992" endtime="20201030 18:27:26.993"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.990" endtime="20201030 18:27:26.993"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.960" endtime="20201030 18:27:26.993"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.960" endtime="20201030 18:27:26.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:26.995" endtime="20201030 18:27:26.997"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.958" endtime="20201030 18:27:26.998"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.956" endtime="20201030 18:27:26.999"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.932" endtime="20201030 18:27:26.999"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:27.008" endtime="20201030 18:27:27.253"></status>
</kw>
<msg timestamp="20201030 18:27:27.254" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:27.006" endtime="20201030 18:27:27.254"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:27.256" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:27.255" endtime="20201030 18:27:27.257"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:27.258" endtime="20201030 18:27:27.259"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.004" endtime="20201030 18:27:27.260"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.001" endtime="20201030 18:27:27.260"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:27.262" endtime="20201030 18:27:27.264"></status>
</kw>
<msg timestamp="20201030 18:27:27.264" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201030 18:27:27.261" endtime="20201030 18:27:27.264"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:27.272" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 18:27:27.267" endtime="20201030 18:27:27.272"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:27.274" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 18:27:27.273" endtime="20201030 18:27:27.275"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.265" endtime="20201030 18:27:27.275"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:27.279" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 18:27:27.278" endtime="20201030 18:27:27.279"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:27.281" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 18:27:27.280" endtime="20201030 18:27:27.281"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.276" endtime="20201030 18:27:27.282"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:27.288" endtime="20201030 18:27:27.587"></status>
</kw>
<msg timestamp="20201030 18:27:27.594" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069760042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069793611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:27.286" endtime="20201030 18:27:27.596"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:27.614" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069760042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069793611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:27.598" endtime="20201030 18:27:27.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:27.616" endtime="20201030 18:27:27.620"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.284" endtime="20201030 18:27:27.621"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.282" endtime="20201030 18:27:27.622"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:27.631" level="INFO">${RESULT} = [{'diff': 3.356900000001106e-05}, {'diff': 3.3512999999998905e-05}, {'diff': 3.349999999999187e-05}, {'diff': 3.344399999999359e-05}, {'diff': 3.351399999999838e-05}, {'diff': 3.352800000000489e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:27:27.623" endtime="20201030 18:27:27.632"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:27.640" level="INFO">${OVERHEAD} = {'diff': [3.356900000001106e-05, 3.3512999999998905e-05, 3.349999999999187e-05, 3.344399999999359e-05, 3.351399999999838e-05, 3.352800000000489e-05, 3.352799999999101e-05, 3.350000000000575e-05, 3.350...</msg>
<status status="PASS" starttime="20201030 18:27:27.633" endtime="20201030 18:27:27.641"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:27.647" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201030 18:27:27.645" endtime="20201030 18:27:27.647"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:27.649" level="INFO">VALUE: [3.356900000001106e-05, 3.3512999999998905e-05, 3.349999999999187e-05, 3.344399999999359e-05, 3.351399999999838e-05, 3.352800000000489e-05, 3.352799999999101e-05, 3.350000000000575e-05, 3.350000000000575e-05, 3.351399999999838e-05, 3.352800000000489e-05, 3.351399999999838e-05, 3.349999999999187e-05, 3.349999999999187e-05, 3.3514000000012256e-05, 3.349999999999187e-05, 3.3556000000017905e-05, 3.349999999999187e-05, 3.3514000000012256e-05, 3.356999999998278e-05, 3.3486000000026994e-05, 3.3514000000012256e-05, 3.3500000000019625e-05, 3.344500000002082e-05, 3.35139999999845e-05, 3.349999999999187e-05, 3.35139999999845e-05, 3.3514000000012256e-05, 3.349999999999187e-05, 3.3514000000012256e-05, 3.349999999999187e-05, 3.351299999998503e-05, 3.3514000000012256e-05, 3.35139999999845e-05, 3.347200000000661e-05, 3.351300000001278e-05, 3.3514000000012256e-05, 3.356900000001106e-05, 3.355599999999015e-05, 3.348599999999924e-05, 3.3514000000012256e-05, 3.343000000000096e-05, 3.3514000000012256e-05, 3.352699999997766e-05, 3.351299999998503e-05, 3.3514000000012256e-05, 3.355499999996292e-05, 3.352800000000489e-05, 3.3514000000012256e-05, 3.345799999998622e-05]</msg>
<status status="PASS" starttime="20201030 18:27:27.648" endtime="20201030 18:27:27.649"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.642" endtime="20201030 18:27:27.650"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:27.654" endtime="20201030 18:27:27.673"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.652" endtime="20201030 18:27:27.674"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.651" endtime="20201030 18:27:27.674"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.000" endtime="20201030 18:27:27.674"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:27:26.929" endtime="20201030 18:27:27.675" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:27.681" endtime="20201030 18:27:27.701"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.680" endtime="20201030 18:27:27.701"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:27.714" endtime="20201030 18:27:27.726"></status>
</kw>
<msg timestamp="20201030 18:27:27.727" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:27.712" endtime="20201030 18:27:27.727"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:27.729" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:27.728" endtime="20201030 18:27:27.729"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:27:27.732" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:27:27.730" endtime="20201030 18:27:27.732"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:27.710" endtime="20201030 18:27:27.733"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:27.707" endtime="20201030 18:27:27.734"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.706" endtime="20201030 18:27:27.734"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:27:27.737" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:27:27.737" endtime="20201030 18:27:27.738"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.735" endtime="20201030 18:27:27.738"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.706" endtime="20201030 18:27:27.739"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.705" endtime="20201030 18:27:27.739"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:27.740" endtime="20201030 18:27:27.741"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.704" endtime="20201030 18:27:27.742"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.702" endtime="20201030 18:27:27.742"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.679" endtime="20201030 18:27:27.742"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:27.752" endtime="20201030 18:27:28.597"></status>
</kw>
<msg timestamp="20201030 18:27:28.598" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:27.750" endtime="20201030 18:27:28.599"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:28.604" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:28.600" endtime="20201030 18:27:28.605"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:28.607" endtime="20201030 18:27:28.611"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.746" endtime="20201030 18:27:28.612"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.744" endtime="20201030 18:27:28.614"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:28.620" endtime="20201030 18:27:28.624"></status>
</kw>
<msg timestamp="20201030 18:27:28.626" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201030 18:27:28.616" endtime="20201030 18:27:28.626"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:28.636" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 18:27:28.633" endtime="20201030 18:27:28.637"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:28.642" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 18:27:28.639" endtime="20201030 18:27:28.642"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:28.628" endtime="20201030 18:27:28.644"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:28.653" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 18:27:28.651" endtime="20201030 18:27:28.654"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:28.657" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 18:27:28.655" endtime="20201030 18:27:28.658"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:28.645" endtime="20201030 18:27:28.659"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:28.673" endtime="20201030 18:27:28.964"></status>
</kw>
<msg timestamp="20201030 18:27:28.967" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.077572903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.077634486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:28.669" endtime="20201030 18:27:28.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:28.975" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.077572903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.077634486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:28.968" endtime="20201030 18:27:28.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:28.976" endtime="20201030 18:27:28.978"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:28.664" endtime="20201030 18:27:28.979"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:28.660" endtime="20201030 18:27:28.979"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:28.983" level="INFO">${RESULT} = [{'diff': 6.158300000000394e-05}, {'diff': 6.154199999999777e-05}, {'diff': 6.161100000000308e-05}, {'diff': 6.155600000001815e-05}, {'diff': 6.154199999999777e-05}, {'diff': 6.154199999999777e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:27:28.980" endtime="20201030 18:27:28.983"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:28.988" level="INFO">${OVERHEAD} = {'diff': [6.158300000000394e-05, 6.154199999999777e-05, 6.161100000000308e-05, 6.155600000001815e-05, 6.154199999999777e-05, 6.154199999999777e-05, 6.154199999999777e-05, 6.155499999999092e-05, 6.1541...</msg>
<status status="PASS" starttime="20201030 18:27:28.984" endtime="20201030 18:27:28.988"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:28.993" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201030 18:27:28.992" endtime="20201030 18:27:28.993"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:28.995" level="INFO">VALUE: [6.158300000000394e-05, 6.154199999999777e-05, 6.161100000000308e-05, 6.155600000001815e-05, 6.154199999999777e-05, 6.154199999999777e-05, 6.154199999999777e-05, 6.155499999999092e-05, 6.154199999999777e-05, 6.149999999999212e-05, 6.15559999999904e-05, 6.158299999997618e-05, 6.154199999997001e-05, 6.154199999997001e-05, 6.154099999999829e-05, 6.154199999997001e-05, 6.154199999997001e-05, 6.154200000002552e-05, 6.148599999999949e-05, 6.154099999999829e-05, 6.156899999998355e-05, 6.152799999997738e-05, 6.154200000002552e-05, 6.154199999997001e-05, 6.152799999997738e-05, 6.154199999997001e-05, 6.154200000008103e-05, 6.156899999998355e-05, 6.154199999997001e-05, 6.154199999997001e-05, 6.152699999995015e-05, 6.154199999997001e-05, 6.154200000008103e-05, 6.152699999995015e-05, 6.15700000000663e-05, 6.156999999995527e-05, 6.152800000003289e-05, 6.154099999999829e-05, 6.154200000008103e-05, 6.155599999990713e-05, 6.155600000001815e-05, 6.154099999999829e-05, 6.155500000004643e-05, 6.151399999998475e-05, 6.152699999995015e-05, 6.148599999999949e-05, 6.154099999999829e-05, 6.150000000004763e-05, 6.155600000001815e-05, 6.152800000003289e-05]</msg>
<status status="PASS" starttime="20201030 18:27:28.994" endtime="20201030 18:27:28.995"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:28.989" endtime="20201030 18:27:28.996"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:28.999" endtime="20201030 18:27:29.019"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:28.998" endtime="20201030 18:27:29.020"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:28.997" endtime="20201030 18:27:29.020"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.743" endtime="20201030 18:27:29.021"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:27:27.676" endtime="20201030 18:27:29.022" critical="yes"></status>
</test>
<test id="s1-s2-t9" name="Measure Add Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:29.029" endtime="20201030 18:27:29.049"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.027" endtime="20201030 18:27:29.051"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:29.063" endtime="20201030 18:27:29.076"></status>
</kw>
<msg timestamp="20201030 18:27:29.077" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:29.062" endtime="20201030 18:27:29.077"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:29.079" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:29.078" endtime="20201030 18:27:29.080"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:27:29.082" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:27:29.081" endtime="20201030 18:27:29.083"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:29.059" endtime="20201030 18:27:29.083"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:29.057" endtime="20201030 18:27:29.084"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.056" endtime="20201030 18:27:29.084"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:27:29.088" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:27:29.088" endtime="20201030 18:27:29.089"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.085" endtime="20201030 18:27:29.089"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.055" endtime="20201030 18:27:29.089"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.054" endtime="20201030 18:27:29.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:29.090" endtime="20201030 18:27:29.092"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.053" endtime="20201030 18:27:29.092"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.051" endtime="20201030 18:27:29.092"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.026" endtime="20201030 18:27:29.093"></status>
</kw>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 18:27:29.096" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 18:27:29.105" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 18:27:30.310" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 18:27:29.095" endtime="20201030 18:27:30.311"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 18:27:30.313" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 18:27:30.312" endtime="20201030 18:27:30.313"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.093" endtime="20201030 18:27:30.314"></status>
</kw>
<kw name="${n} IN RANGE [ 1 | 51 ]" type="for">
<kw name="${n} = 1" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:30.323" endtime="20201030 18:27:30.331"></status>
</kw>
<msg timestamp="20201030 18:27:30.332" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:30.322" endtime="20201030 18:27:30.332"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:30.334" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:30.333" endtime="20201030 18:27:30.334"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:30.335" endtime="20201030 18:27:30.337"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:30.319" endtime="20201030 18:27:30.337"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:30.317" endtime="20201030 18:27:30.338"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:30.344" endtime="20201030 18:27:30.646"></status>
</kw>
<msg timestamp="20201030 18:27:30.649" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.903652278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.228830222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:30.343" endtime="20201030 18:27:30.649"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:30.658" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.903652278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.228830222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:30.650" endtime="20201030 18:27:30.658"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:30.659" endtime="20201030 18:27:30.661"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:30.340" endtime="20201030 18:27:30.662"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:30.338" endtime="20201030 18:27:30.662"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:30.666" level="INFO">${PHILIP_RES} = [{'diff': 0.325177944}, {'diff': 3.3875000000183064e-05}, {'diff': 3.205600000000253e-05}, {'diff': 3.20139999998581e-05}, {'diff': 3.2014000000080145e-05}, {'diff': 3.20139999998581e-05}, {'diff': 3....</msg>
<status status="PASS" starttime="20201030 18:27:30.663" endtime="20201030 18:27:30.666"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:30.672" level="INFO">${RESULT} = {'diff': [0.325177944, 3.3875000000183064e-05, 3.205600000000253e-05, 3.20139999998581e-05, 3.2014000000080145e-05, 3.20139999998581e-05, 3.202799999990624e-05, 3.202799999990624e-05, 3.20279999999062...</msg>
<status status="PASS" starttime="20201030 18:27:30.667" endtime="20201030 18:27:30.672"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:30.677" level="INFO">NAME: 1-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:30.675" endtime="20201030 18:27:30.677"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:30.679" level="INFO">VALUE: [0.325177944, 3.3875000000183064e-05, 3.205600000000253e-05, 3.20139999998581e-05, 3.2014000000080145e-05, 3.20139999998581e-05, 3.202799999990624e-05, 3.202799999990624e-05, 3.202799999990624e-05, 3.2014000000080145e-05, 3.2014000000080145e-05, 3.198599999998386e-05, 3.2014000000080145e-05, 3.2041999999954385e-05, 3.202799999990624e-05, 3.2000000000032e-05, 3.202800000012829e-05, 3.2000000000032e-05, 3.2041999999954385e-05, 3.204200000017643e-05, 3.2040999999871644e-05, 3.202700000004555e-05, 3.2000000000032e-05, 3.20269999998235e-05, 3.2000000000032e-05, 3.2014000000080145e-05, 3.20139999998581e-05, 3.198599999998386e-05, 3.204100000009369e-05, 3.2014000000080145e-05, 3.20139999998581e-05, 3.2014000000080145e-05, 3.202799999990624e-05, 3.202799999990624e-05, 3.2014000000080145e-05, 3.202800000012829e-05, 3.199999999980996e-05, 3.202799999990624e-05, 3.2014000000080145e-05, 3.202800000012829e-05, 3.20139999998581e-05, 3.2012999999997405e-05, 3.195800000010962e-05, 3.2012999999997405e-05, 3.2014000000080145e-05, 3.2014000000080145e-05, 3.202799999990624e-05, 3.2000000000032e-05, 3.2014000000080145e-05, 3.202800000012829e-05, 3.20139999998581e-05]</msg>
<status status="PASS" starttime="20201030 18:27:30.678" endtime="20201030 18:27:30.679"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:30.673" endtime="20201030 18:27:30.680"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:30.684" endtime="20201030 18:27:30.703"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:30.682" endtime="20201030 18:27:30.704"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:30.681" endtime="20201030 18:27:30.704"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:30.316" endtime="20201030 18:27:30.704"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:30.315" endtime="20201030 18:27:30.705"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:30.713" endtime="20201030 18:27:30.722"></status>
</kw>
<msg timestamp="20201030 18:27:30.723" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:30.711" endtime="20201030 18:27:30.723"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:30.725" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:30.724" endtime="20201030 18:27:30.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:30.726" endtime="20201030 18:27:30.728"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:30.709" endtime="20201030 18:27:30.728"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:30.707" endtime="20201030 18:27:30.729"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:30.736" endtime="20201030 18:27:31.039"></status>
</kw>
<msg timestamp="20201030 18:27:31.042" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018640069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018698903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:30.734" endtime="20201030 18:27:31.043"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:31.051" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018640069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018698903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:31.044" endtime="20201030 18:27:31.051"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:31.052" endtime="20201030 18:27:31.054"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:30.731" endtime="20201030 18:27:31.054"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:30.729" endtime="20201030 18:27:31.054"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:31.058" level="INFO">${PHILIP_RES} = [{'diff': 5.8834000000000664e-05}, {'diff': 5.641699999999958e-05}, {'diff': 5.6486000000001424e-05}, {'diff': 5.643099999999915e-05}, {'diff': 5.643099999999915e-05}, {'diff': 5.637500000000087e-05},...</msg>
<status status="PASS" starttime="20201030 18:27:31.055" endtime="20201030 18:27:31.059"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:31.063" level="INFO">${RESULT} = {'diff': [5.8834000000000664e-05, 5.641699999999958e-05, 5.6486000000001424e-05, 5.643099999999915e-05, 5.643099999999915e-05, 5.637500000000087e-05, 5.641699999999958e-05, 5.6443999999999245e-05, 5.6...</msg>
<status status="PASS" starttime="20201030 18:27:31.060" endtime="20201030 18:27:31.063"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:31.067" level="INFO">NAME: 2-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:31.066" endtime="20201030 18:27:31.068"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:31.070" level="INFO">VALUE: [5.8834000000000664e-05, 5.641699999999958e-05, 5.6486000000001424e-05, 5.643099999999915e-05, 5.643099999999915e-05, 5.637500000000087e-05, 5.641699999999958e-05, 5.6443999999999245e-05, 5.643099999999915e-05, 5.643099999999915e-05, 5.6429999999999675e-05, 5.641699999999958e-05, 5.6429999999999675e-05, 5.6514000000000564e-05, 5.6429999999999675e-05, 5.641699999999958e-05, 5.6429999999999675e-05, 5.641699999999958e-05, 5.641700000000305e-05, 5.6416000000000105e-05, 5.641699999999958e-05, 5.6416000000000105e-05, 5.641699999999958e-05, 5.643099999999915e-05, 5.641699999999958e-05, 5.638899999999697e-05, 5.6416000000000105e-05, 5.645899999999829e-05, 5.6416000000000105e-05, 5.644499999999872e-05, 5.6429999999999675e-05, 5.640300000000001e-05, 5.645899999999829e-05, 5.6415999999996636e-05, 5.644500000000219e-05, 5.6443999999999245e-05, 5.640300000000001e-05, 5.6402000000000535e-05, 5.644499999999872e-05, 5.6429999999999675e-05, 5.643100000000262e-05, 5.6429999999999675e-05, 5.640300000000001e-05, 5.641699999999958e-05, 5.6429999999999675e-05, 5.643099999999915e-05, 5.6443999999999245e-05, 5.644500000000219e-05, 5.6458000000002284e-05, 5.640300000000001e-05]</msg>
<status status="PASS" starttime="20201030 18:27:31.068" endtime="20201030 18:27:31.070"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.064" endtime="20201030 18:27:31.071"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:31.074" endtime="20201030 18:27:31.094"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.073" endtime="20201030 18:27:31.094"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.072" endtime="20201030 18:27:31.095"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:30.705" endtime="20201030 18:27:31.095"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:30.705" endtime="20201030 18:27:31.095"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:31.104" endtime="20201030 18:27:31.115"></status>
</kw>
<msg timestamp="20201030 18:27:31.116" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:31.103" endtime="20201030 18:27:31.116"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:31.118" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:31.117" endtime="20201030 18:27:31.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:31.119" endtime="20201030 18:27:31.122"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.099" endtime="20201030 18:27:31.122"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.097" endtime="20201030 18:27:31.123"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:31.132" endtime="20201030 18:27:31.419"></status>
</kw>
<msg timestamp="20201030 18:27:31.423" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019497458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019583236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:31.130" endtime="20201030 18:27:31.423"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:31.431" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019497458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019583236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:31.424" endtime="20201030 18:27:31.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:31.432" endtime="20201030 18:27:31.433"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.125" endtime="20201030 18:27:31.434"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.123" endtime="20201030 18:27:31.434"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:31.439" level="INFO">${PHILIP_RES} = [{'diff': 8.577800000000163e-05}, {'diff': 8.334700000000098e-05}, {'diff': 8.32919999999987e-05}, {'diff': 8.329099999999923e-05}, {'diff': 8.32780000000026e-05}, {'diff': 8.327799999999913e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:27:31.435" endtime="20201030 18:27:31.439"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:31.443" level="INFO">${RESULT} = {'diff': [8.577800000000163e-05, 8.334700000000098e-05, 8.32919999999987e-05, 8.329099999999923e-05, 8.32780000000026e-05, 8.327799999999913e-05, 8.33049999999988e-05, 8.33049999999988e-05, 8.32639999...</msg>
<status status="PASS" starttime="20201030 18:27:31.440" endtime="20201030 18:27:31.443"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:31.448" level="INFO">NAME: 3-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:31.447" endtime="20201030 18:27:31.448"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:31.450" level="INFO">VALUE: [8.577800000000163e-05, 8.334700000000098e-05, 8.32919999999987e-05, 8.329099999999923e-05, 8.32780000000026e-05, 8.327799999999913e-05, 8.33049999999988e-05, 8.33049999999988e-05, 8.326399999999956e-05, 8.32910000000027e-05, 8.326399999999956e-05, 8.324999999999999e-05, 8.324999999999999e-05, 8.326399999999956e-05, 8.324999999999999e-05, 8.326399999999956e-05, 8.327799999999913e-05, 8.326399999999956e-05, 8.331900000000184e-05, 8.32919999999987e-05, 8.329099999999923e-05, 8.329200000000217e-05, 8.326399999999956e-05, 8.327799999999913e-05, 8.326399999999956e-05, 8.326399999999956e-05, 8.334700000000098e-05, 8.329200000000217e-05, 8.324999999999999e-05, 8.327699999999966e-05, 8.327799999999913e-05, 8.326400000000303e-05, 8.327799999999913e-05, 8.322300000000032e-05, 8.327799999999913e-05, 8.32919999999987e-05, 8.326400000000303e-05, 8.324999999999999e-05, 8.326300000000009e-05, 8.327799999999913e-05, 8.324999999999999e-05, 8.327699999999966e-05, 8.326399999999956e-05, 8.326400000000303e-05, 8.324999999999999e-05, 8.327799999999913e-05, 8.326300000000009e-05, 8.32919999999987e-05, 8.327799999999913e-05, 8.324999999999999e-05]</msg>
<status status="PASS" starttime="20201030 18:27:31.449" endtime="20201030 18:27:31.451"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.444" endtime="20201030 18:27:31.451"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:31.455" endtime="20201030 18:27:31.474"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.453" endtime="20201030 18:27:31.475"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.452" endtime="20201030 18:27:31.475"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.096" endtime="20201030 18:27:31.475"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.096" endtime="20201030 18:27:31.475"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:31.484" endtime="20201030 18:27:31.496"></status>
</kw>
<msg timestamp="20201030 18:27:31.496" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:31.482" endtime="20201030 18:27:31.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:31.499" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:31.498" endtime="20201030 18:27:31.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:31.500" endtime="20201030 18:27:31.502"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.480" endtime="20201030 18:27:31.502"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.478" endtime="20201030 18:27:31.503"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:31.509" endtime="20201030 18:27:31.814"></status>
</kw>
<msg timestamp="20201030 18:27:31.822" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018483472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018598569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:31.507" endtime="20201030 18:27:31.822"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:31.833" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018483472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018598569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:31.823" endtime="20201030 18:27:31.833"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:31.834" endtime="20201030 18:27:31.837"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.505" endtime="20201030 18:27:31.837"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.503" endtime="20201030 18:27:31.838"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:31.844" level="INFO">${PHILIP_RES} = [{'diff': 0.00011509699999999803}, {'diff': 0.000112596999999999}, {'diff': 0.00011261099999999857}, {'diff': 0.00011262499999999814}, {'diff': 0.00011259799999999848}, {'diff': 0.00011263899999999771...</msg>
<status status="PASS" starttime="20201030 18:27:31.839" endtime="20201030 18:27:31.844"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:31.849" level="INFO">${RESULT} = {'diff': [0.00011509699999999803, 0.000112596999999999, 0.00011261099999999857, 0.00011262499999999814, 0.00011259799999999848, 0.00011263899999999771, 0.00011261099999999857, 0.00011261099999999857, ...</msg>
<status status="PASS" starttime="20201030 18:27:31.845" endtime="20201030 18:27:31.849"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:31.853" level="INFO">NAME: 4-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:31.852" endtime="20201030 18:27:31.853"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:31.855" level="INFO">VALUE: [0.00011509699999999803, 0.000112596999999999, 0.00011261099999999857, 0.00011262499999999814, 0.00011259799999999848, 0.00011263899999999771, 0.00011261099999999857, 0.00011261099999999857, 0.00011263899999999771, 0.00011262499999999814, 0.00011261199999999805, 0.00011258399999999891, 0.000112596999999999, 0.000112596999999999, 0.00011261099999999857, 0.00011269399999999999, 0.0001125420000000002, 0.00011262499999999814, 0.00011262499999999814, 0.00011261099999999857, 0.00011265300000000075, 0.00011259800000000195, 0.00011261099999999857, 0.00011263900000000118, 0.00011262499999999814, 0.00011262500000000161, 0.00011258399999999891, 0.00011268000000000042, 0.00011262499999999814, 0.000112596999999999, 0.00011262499999999814, 0.00011262500000000161, 0.00011261099999999857, 0.00011262500000000161, 0.00011261099999999857, 0.000112596999999999, 0.00011262500000000161, 0.00011261099999999857, 0.00011259700000000247, 0.00011259700000000247, 0.00011259700000000247, 0.00011259700000000247, 0.00011261099999999857, 0.00011268099999999989, 0.00011262499999999814, 0.00011261099999999857, 0.000112596999999999, 0.00011265299999999728, 0.000112596999999999, 0.00011262499999999814]</msg>
<status status="PASS" starttime="20201030 18:27:31.854" endtime="20201030 18:27:31.856"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.849" endtime="20201030 18:27:31.856"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:31.860" endtime="20201030 18:27:31.879"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.858" endtime="20201030 18:27:31.880"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.857" endtime="20201030 18:27:31.880"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.476" endtime="20201030 18:27:31.880"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.476" endtime="20201030 18:27:31.881"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:31.889" endtime="20201030 18:27:31.903"></status>
</kw>
<msg timestamp="20201030 18:27:31.903" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:31.887" endtime="20201030 18:27:31.904"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:31.906" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:31.905" endtime="20201030 18:27:31.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:31.907" endtime="20201030 18:27:31.908"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.885" endtime="20201030 18:27:31.909"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.883" endtime="20201030 18:27:31.909"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:31.916" endtime="20201030 18:27:32.202"></status>
</kw>
<msg timestamp="20201030 18:27:32.205" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018476222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018623153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:31.914" endtime="20201030 18:27:32.205"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:32.213" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018476222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018623153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:32.206" endtime="20201030 18:27:32.214"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:32.215" endtime="20201030 18:27:32.216"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.912" endtime="20201030 18:27:32.217"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.910" endtime="20201030 18:27:32.217"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:32.221" level="INFO">${PHILIP_RES} = [{'diff': 0.00014693099999999945}, {'diff': 0.00014441700000000085}, {'diff': 0.00014443000000000095}, {'diff': 0.00014443000000000095}, {'diff': 0.000144445}, {'diff': 0.00014443100000000042}, {'diff...</msg>
<status status="PASS" starttime="20201030 18:27:32.218" endtime="20201030 18:27:32.221"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:32.225" level="INFO">${RESULT} = {'diff': [0.00014693099999999945, 0.00014441700000000085, 0.00014443000000000095, 0.00014443000000000095, 0.000144445, 0.00014443100000000042, 0.00014443000000000095, 0.00014445800000000009, 0.0001444...</msg>
<status status="PASS" starttime="20201030 18:27:32.222" endtime="20201030 18:27:32.225"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:32.229" level="INFO">NAME: 5-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:32.228" endtime="20201030 18:27:32.230"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:32.232" level="INFO">VALUE: [0.00014693099999999945, 0.00014441700000000085, 0.00014443000000000095, 0.00014443000000000095, 0.000144445, 0.00014443100000000042, 0.00014443000000000095, 0.00014445800000000009, 0.00014443099999999695, 0.00014436100000000257, 0.00014440300000000128, 0.00014443100000000042, 0.00014447199999999966, 0.0001443890000000017, 0.00014443100000000042, 0.00014443000000000095, 0.00014443100000000042, 0.00014441699999999738, 0.00014444400000000052, 0.00014441700000000085, 0.00014444400000000052, 0.00014438899999999824, 0.00014443100000000042, 0.00014441600000000138, 0.00014443100000000042, 0.00014443099999999695, 0.00014444400000000052, 0.00014445800000000009, 0.00014443099999999695, 0.000144445, 0.0001443890000000017, 0.00014443100000000042, 0.00014444400000000052, 0.00014444400000000052, 0.00014448599999999923, 0.00014443100000000042, 0.00014447199999999966, 0.00014441699999999738, 0.00014443100000000042, 0.00014448599999999923, 0.00014443100000000042, 0.00014443100000000042, 0.00014443000000000095, 0.00014444400000000052, 0.00014443100000000042, 0.00014442999999999748, 0.00014443000000000095, 0.00014438899999999824, 0.00014442999999999748, 0.00014442999999999748]</msg>
<status status="PASS" starttime="20201030 18:27:32.230" endtime="20201030 18:27:32.232"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.226" endtime="20201030 18:27:32.233"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:32.236" endtime="20201030 18:27:32.255"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.235" endtime="20201030 18:27:32.256"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.233" endtime="20201030 18:27:32.256"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.881" endtime="20201030 18:27:32.257"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.881" endtime="20201030 18:27:32.257"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:32.265" endtime="20201030 18:27:32.282"></status>
</kw>
<msg timestamp="20201030 18:27:32.283" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:32.264" endtime="20201030 18:27:32.283"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:32.285" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:32.284" endtime="20201030 18:27:32.285"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:32.286" endtime="20201030 18:27:32.288"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.261" endtime="20201030 18:27:32.288"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.259" endtime="20201030 18:27:32.289"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:32.295" endtime="20201030 18:27:32.581"></status>
</kw>
<msg timestamp="20201030 18:27:32.584" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019320153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019501389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:32.294" endtime="20201030 18:27:32.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:32.592" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019320153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019501389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:32.585" endtime="20201030 18:27:32.593"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:32.593" endtime="20201030 18:27:32.595"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.291" endtime="20201030 18:27:32.596"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.289" endtime="20201030 18:27:32.596"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:32.601" level="INFO">${PHILIP_RES} = [{'diff': 0.00018123600000000128}, {'diff': 0.00017873599999999878}, {'diff': 0.00017875000000000182}, {'diff': 0.00017873600000000225}, {'diff': 0.00017874999999999835}, {'diff': 0.000178735999999998...</msg>
<status status="PASS" starttime="20201030 18:27:32.598" endtime="20201030 18:27:32.601"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:32.605" level="INFO">${RESULT} = {'diff': [0.00018123600000000128, 0.00017873599999999878, 0.00017875000000000182, 0.00017873600000000225, 0.00017874999999999835, 0.00017873599999999878, 0.00017873600000000225, 0.00017870799999999964...</msg>
<status status="PASS" starttime="20201030 18:27:32.602" endtime="20201030 18:27:32.605"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:32.612" level="INFO">NAME: 6-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:32.611" endtime="20201030 18:27:32.612"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:32.614" level="INFO">VALUE: [0.00018123600000000128, 0.00017873599999999878, 0.00017875000000000182, 0.00017873600000000225, 0.00017874999999999835, 0.00017873599999999878, 0.00017873600000000225, 0.00017870799999999964, 0.00017872200000000268, 0.0001787229999999987, 0.00017875000000000182, 0.00017868099999999998, 0.00017870899999999912, 0.0001786800000000005, 0.00017877699999999802, 0.0001786800000000005, 0.0001786670000000004, 0.00017876299999999845, 0.00017873599999999878, 0.00017874999999999835, 0.00017876399999999792, 0.00017876399999999792, 0.00017883299999999977, 0.0001787640000000014, 0.00017876300000000192, 0.00017877800000000096, 0.00017874999999999835, 0.00017875000000000182, 0.0001787090000000026, 0.00017869400000000008, 0.00017870899999999912, 0.00017873600000000225, 0.00017870899999999912, 0.00017876399999999792, 0.00017873600000000225, 0.00017873600000000225, 0.00017877800000000096, 0.00017873599999999878, 0.00017873600000000225, 0.00017872199999999921, 0.00017872199999999921, 0.00017882000000000314, 0.00017873600000000225, 0.00017872199999999921, 0.00017873599999999878, 0.0001787640000000014, 0.00017869500000000302, 0.00017869400000000008, 0.00017873599999999878, 0.00017875000000000182]</msg>
<status status="PASS" starttime="20201030 18:27:32.613" endtime="20201030 18:27:32.618"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.606" endtime="20201030 18:27:32.618"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:32.622" endtime="20201030 18:27:32.643"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.621" endtime="20201030 18:27:32.643"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.619" endtime="20201030 18:27:32.644"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.258" endtime="20201030 18:27:32.644"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.257" endtime="20201030 18:27:32.644"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:32.655" endtime="20201030 18:27:32.674"></status>
</kw>
<msg timestamp="20201030 18:27:32.675" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:32.654" endtime="20201030 18:27:32.675"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:32.678" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:32.676" endtime="20201030 18:27:32.678"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:32.679" endtime="20201030 18:27:32.682"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.651" endtime="20201030 18:27:32.682"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.646" endtime="20201030 18:27:32.683"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:32.690" endtime="20201030 18:27:32.976"></status>
</kw>
<msg timestamp="20201030 18:27:32.979" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021998778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022216806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:32.689" endtime="20201030 18:27:32.979"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:32.987" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021998778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022216806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:32.980" endtime="20201030 18:27:32.987"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:32.988" endtime="20201030 18:27:32.990"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.685" endtime="20201030 18:27:32.990"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.683" endtime="20201030 18:27:32.991"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:32.994" level="INFO">${PHILIP_RES} = [{'diff': 0.00021802799999999858}, {'diff': 0.00021558299999999836}, {'diff': 0.00021555499999999922}, {'diff': 0.00021552799999999955}, {'diff': 0.00021552799999999955}, {'diff': 0.000215583000000001...</msg>
<status status="PASS" starttime="20201030 18:27:32.991" endtime="20201030 18:27:32.995"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:32.999" level="INFO">${RESULT} = {'diff': [0.00021802799999999858, 0.00021558299999999836, 0.00021555499999999922, 0.00021552799999999955, 0.00021552799999999955, 0.00021558300000000183, 0.00021556999999999826, 0.00021556999999999826...</msg>
<status status="PASS" starttime="20201030 18:27:32.995" endtime="20201030 18:27:33.000"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:33.004" level="INFO">NAME: 7-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:33.003" endtime="20201030 18:27:33.004"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:33.008" level="INFO">VALUE: [0.00021802799999999858, 0.00021558299999999836, 0.00021555499999999922, 0.00021552799999999955, 0.00021552799999999955, 0.00021558300000000183, 0.00021556999999999826, 0.00021556999999999826, 0.0002155689999999988, 0.00021557000000000173, 0.0002155689999999988, 0.00021558299999999836, 0.00021556900000000226, 0.00021562500000000054, 0.00021556999999999826, 0.00021558300000000183, 0.00021557000000000173, 0.00021555499999999922, 0.00021558399999999783, 0.00021556900000000226, 0.00021556999999999826, 0.00021562500000000054, 0.00021558300000000183, 0.00021558300000000183, 0.0002155689999999988, 0.00021561200000000044, 0.0002155689999999988, 0.00021556900000000226, 0.0002155840000000013, 0.00021555499999999922, 0.00021559800000000087, 0.0002155970000000014, 0.00021558300000000183, 0.00021552799999999955, 0.00021558299999999836, 0.0002155689999999988, 0.00021558400000000477, 0.00021558299999999836, 0.0002155689999999988, 0.0002155700000000052, 0.0002155689999999988, 0.00021558299999999836, 0.00021563899999999664, 0.00021559699999999793, 0.00021561100000000444, 0.0002155559999999987, 0.00021556900000000573, 0.00021559699999999793, 0.0002155979999999974, 0.00021559699999999793]</msg>
<status status="PASS" starttime="20201030 18:27:33.006" endtime="20201030 18:27:33.009"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.000" endtime="20201030 18:27:33.010"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:33.014" endtime="20201030 18:27:33.033"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.012" endtime="20201030 18:27:33.034"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.011" endtime="20201030 18:27:33.034"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.645" endtime="20201030 18:27:33.034"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.644" endtime="20201030 18:27:33.034"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:33.043" endtime="20201030 18:27:33.063"></status>
</kw>
<msg timestamp="20201030 18:27:33.064" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:33.041" endtime="20201030 18:27:33.064"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:33.066" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:33.065" endtime="20201030 18:27:33.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:33.067" endtime="20201030 18:27:33.069"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.038" endtime="20201030 18:27:33.070"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.037" endtime="20201030 18:27:33.070"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:33.077" endtime="20201030 18:27:33.381"></status>
</kw>
<msg timestamp="20201030 18:27:33.384" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018674194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018931611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:33.075" endtime="20201030 18:27:33.384"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:33.392" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018674194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018931611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:33.385" endtime="20201030 18:27:33.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:33.393" endtime="20201030 18:27:33.396"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.073" endtime="20201030 18:27:33.396"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.071" endtime="20201030 18:27:33.397"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:33.401" level="INFO">${PHILIP_RES} = [{'diff': 0.00025741699999999937}, {'diff': 0.0002548890000000012}, {'diff': 0.00025487500000000163}, {'diff': 0.00025487500000000163}, {'diff': 0.00025491700000000034}, {'diff': 0.0002548470000000025...</msg>
<status status="PASS" starttime="20201030 18:27:33.398" endtime="20201030 18:27:33.401"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:33.405" level="INFO">${RESULT} = {'diff': [0.00025741699999999937, 0.0002548890000000012, 0.00025487500000000163, 0.00025487500000000163, 0.00025491700000000034, 0.0002548470000000025, 0.00025491700000000034, 0.00025487499999999816, ...</msg>
<status status="PASS" starttime="20201030 18:27:33.402" endtime="20201030 18:27:33.405"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:33.409" level="INFO">NAME: 8-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:33.408" endtime="20201030 18:27:33.409"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:33.411" level="INFO">VALUE: [0.00025741699999999937, 0.0002548890000000012, 0.00025487500000000163, 0.00025487500000000163, 0.00025491700000000034, 0.0002548470000000025, 0.00025491700000000034, 0.00025487499999999816, 0.0002548890000000012, 0.00025495899999999905, 0.00025490300000000077, 0.00025487500000000163, 0.00025490300000000077, 0.0002548890000000012, 0.000254944, 0.00025488899999999773, 0.0002549159999999974, 0.00025491700000000034, 0.000254944, 0.00025490300000000077, 0.00025490300000000077, 0.00025488799999999825, 0.00025495800000000304, 0.0002549309999999999, 0.0002549159999999974, 0.00025491699999999687, 0.00025490300000000077, 0.00025488899999999773, 0.00025494500000000295, 0.0002548890000000012, 0.00025491700000000034, 0.0002549020000000013, 0.00025491700000000034, 0.0002548890000000012, 0.00025490300000000077, 0.00025501399999999785, 0.00025490300000000077, 0.000254944, 0.00025487500000000163, 0.00025491600000000086, 0.0002548890000000012, 0.00025490300000000077, 0.0002548890000000012, 0.0002548189999999964, 0.00025491700000000034, 0.00025490300000000077, 0.0002549579999999996, 0.0002548749999999947, 0.00025490300000000077, 0.0002549020000000013]</msg>
<status status="PASS" starttime="20201030 18:27:33.410" endtime="20201030 18:27:33.412"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.406" endtime="20201030 18:27:33.412"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:33.416" endtime="20201030 18:27:33.435"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.414" endtime="20201030 18:27:33.436"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.413" endtime="20201030 18:27:33.436"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.035" endtime="20201030 18:27:33.437"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.035" endtime="20201030 18:27:33.437"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:33.445" endtime="20201030 18:27:33.469"></status>
</kw>
<msg timestamp="20201030 18:27:33.469" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:33.444" endtime="20201030 18:27:33.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:33.472" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:33.470" endtime="20201030 18:27:33.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:33.473" endtime="20201030 18:27:33.475"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.441" endtime="20201030 18:27:33.475"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.439" endtime="20201030 18:27:33.476"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:33.482" endtime="20201030 18:27:33.769"></status>
</kw>
<msg timestamp="20201030 18:27:33.772" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019415458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019714611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:33.481" endtime="20201030 18:27:33.773"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:33.780" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019415458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019714611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:33.774" endtime="20201030 18:27:33.781"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:33.782" endtime="20201030 18:27:33.783"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.478" endtime="20201030 18:27:33.784"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.477" endtime="20201030 18:27:33.784"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:33.788" level="INFO">${PHILIP_RES} = [{'diff': 0.0002991529999999999}, {'diff': 0.0002966379999999984}, {'diff': 0.0002966659999999975}, {'diff': 0.00029666700000000046}, {'diff': 0.000296666000000001}, {'diff': 0.00029668000000000055}, ...</msg>
<status status="PASS" starttime="20201030 18:27:33.785" endtime="20201030 18:27:33.788"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:33.792" level="INFO">${RESULT} = {'diff': [0.0002991529999999999, 0.0002966379999999984, 0.0002966659999999975, 0.00029666700000000046, 0.000296666000000001, 0.00029668000000000055, 0.00029666700000000046, 0.00029668100000000003, 0.0...</msg>
<status status="PASS" starttime="20201030 18:27:33.789" endtime="20201030 18:27:33.792"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:33.797" level="INFO">NAME: 9-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:33.796" endtime="20201030 18:27:33.797"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:33.800" level="INFO">VALUE: [0.0002991529999999999, 0.0002966379999999984, 0.0002966659999999975, 0.00029666700000000046, 0.000296666000000001, 0.00029668000000000055, 0.00029666700000000046, 0.00029668100000000003, 0.00029672299999999874, 0.0002967079999999997, 0.00029672199999999926, 0.0002966940000000001, 0.0002966529999999974, 0.0002966529999999974, 0.00029670900000000264, 0.0002967079999999997, 0.00029668000000000055, 0.0002966940000000001, 0.0002966949999999996, 0.0002966530000000009, 0.00029666700000000046, 0.00029668100000000003, 0.00029668100000000003, 0.00029666700000000046, 0.0002966249999999983, 0.0002966390000000013, 0.0002966390000000013, 0.00029663899999999785, 0.0002966659999999975, 0.00029668000000000055, 0.0002967500000000019, 0.00029670900000000264, 0.00029672200000000273, 0.0002966799999999971, 0.00029669399999999665, 0.00029670899999999917, 0.0002967360000000058, 0.0002966940000000001, 0.000296763999999998, 0.0002966940000000001, 0.0002966390000000013, 0.00029668100000000003, 0.0002966940000000001, 0.00029668100000000003, 0.00029666700000000046, 0.0002966940000000001, 0.0002966940000000001, 0.0002966940000000001, 0.0002966949999999996, 0.00029672199999999926]</msg>
<status status="PASS" starttime="20201030 18:27:33.798" endtime="20201030 18:27:33.802"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.793" endtime="20201030 18:27:33.802"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:33.806" endtime="20201030 18:27:33.826"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.805" endtime="20201030 18:27:33.826"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.803" endtime="20201030 18:27:33.827"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.438" endtime="20201030 18:27:33.827"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.437" endtime="20201030 18:27:33.827"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:33.836" endtime="20201030 18:27:33.862"></status>
</kw>
<msg timestamp="20201030 18:27:33.862" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:33.834" endtime="20201030 18:27:33.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:33.865" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:33.863" endtime="20201030 18:27:33.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:33.866" endtime="20201030 18:27:33.867"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.832" endtime="20201030 18:27:33.868"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.830" endtime="20201030 18:27:33.868"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:33.875" endtime="20201030 18:27:34.179"></status>
</kw>
<msg timestamp="20201030 18:27:34.182" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019631208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019974778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:33.873" endtime="20201030 18:27:34.182"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:34.189" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019631208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019974778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:34.183" endtime="20201030 18:27:34.190"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:34.191" endtime="20201030 18:27:34.192"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.871" endtime="20201030 18:27:34.193"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.869" endtime="20201030 18:27:34.193"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:34.197" level="INFO">${PHILIP_RES} = [{'diff': 0.0003435699999999979}, {'diff': 0.00034102800000000016}, {'diff': 0.0003410140000000006}, {'diff': 0.0003410140000000006}, {'diff': 0.00034099999999999756}, {'diff': 0.00034098600000000145}...</msg>
<status status="PASS" starttime="20201030 18:27:34.194" endtime="20201030 18:27:34.197"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:34.202" level="INFO">${RESULT} = {'diff': [0.0003435699999999979, 0.00034102800000000016, 0.0003410140000000006, 0.0003410140000000006, 0.00034099999999999756, 0.00034098600000000145, 0.00034090300000000004, 0.0003409580000000023, 0....</msg>
<status status="PASS" starttime="20201030 18:27:34.198" endtime="20201030 18:27:34.202"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:34.206" level="INFO">NAME: 10-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:34.205" endtime="20201030 18:27:34.206"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:34.208" level="INFO">VALUE: [0.0003435699999999979, 0.00034102800000000016, 0.0003410140000000006, 0.0003410140000000006, 0.00034099999999999756, 0.00034098600000000145, 0.00034090300000000004, 0.0003409580000000023, 0.00034095799999999885, 0.000341000000000001, 0.00034095799999999885, 0.000341000000000001, 0.000340985999999998, 0.000340985999999998, 0.0003409590000000018, 0.0003409719999999984, 0.0003410270000000007, 0.00034095799999999885, 0.0003409439999999993, 0.0003409450000000022, 0.00034095799999999885, 0.00034094499999999875, 0.00034093100000000265, 0.00034094400000000274, 0.00034094499999999875, 0.0003409450000000022, 0.0003410140000000006, 0.000341000000000001, 0.0003410140000000006, 0.00034098699999999746, 0.00034098700000000093, 0.0003409590000000018, 0.0003409590000000018, 0.0003409449999999953, 0.0003409580000000023, 0.000341000000000001, 0.0003409999999999941, 0.00034104199999999973, 0.0003409720000000019, 0.0003409720000000019, 0.0003409590000000018, 0.0003409859999999945, 0.0003409720000000019, 0.0003409720000000019, 0.00034097199999999495, 0.00034097199999999495, 0.00034093100000000265, 0.0003409720000000019, 0.00034094400000000274, 0.00034097300000000136]</msg>
<status status="PASS" starttime="20201030 18:27:34.207" endtime="20201030 18:27:34.209"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.203" endtime="20201030 18:27:34.209"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:34.213" endtime="20201030 18:27:34.232"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.211" endtime="20201030 18:27:34.233"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.210" endtime="20201030 18:27:34.233"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.828" endtime="20201030 18:27:34.233"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.828" endtime="20201030 18:27:34.234"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:34.250" endtime="20201030 18:27:34.278"></status>
</kw>
<msg timestamp="20201030 18:27:34.278" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:34.248" endtime="20201030 18:27:34.279"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:34.281" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:34.279" endtime="20201030 18:27:34.281"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:34.282" endtime="20201030 18:27:34.284"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.238" endtime="20201030 18:27:34.284"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.236" endtime="20201030 18:27:34.285"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:34.291" endtime="20201030 18:27:34.576"></status>
</kw>
<msg timestamp="20201030 18:27:34.579" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026626514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02701675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:27:34.289" endtime="20201030 18:27:34.579"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:34.587" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026626514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02701675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:27:34.580" endtime="20201030 18:27:34.587"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:34.588" endtime="20201030 18:27:34.591"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.287" endtime="20201030 18:27:34.591"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.285" endtime="20201030 18:27:34.592"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:34.595" level="INFO">${PHILIP_RES} = [{'diff': 0.00039023599999999867}, {'diff': 0.00038772200000000007}, {'diff': 0.00038772200000000007}, {'diff': 0.0003877080000000005}, {'diff': 0.0003877780000000018}, {'diff': 0.00038776400000000225...</msg>
<status status="PASS" starttime="20201030 18:27:34.592" endtime="20201030 18:27:34.596"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:34.599" level="INFO">${RESULT} = {'diff': [0.00039023599999999867, 0.00038772200000000007, 0.00038772200000000007, 0.0003877080000000005, 0.0003877780000000018, 0.00038776400000000225, 0.00038773599999999964, 0.00038777799999999835, ...</msg>
<status status="PASS" starttime="20201030 18:27:34.596" endtime="20201030 18:27:34.600"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:34.604" level="INFO">NAME: 11-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:34.603" endtime="20201030 18:27:34.604"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:34.606" level="INFO">VALUE: [0.00039023599999999867, 0.00038772200000000007, 0.00038772200000000007, 0.0003877080000000005, 0.0003877780000000018, 0.00038776400000000225, 0.00038773599999999964, 0.00038777799999999835, 0.0003876529999999982, 0.0003877369999999991, 0.00038769499999999693, 0.00038772299999999954, 0.0003876950000000004, 0.0003877369999999991, 0.00038772200000000007, 0.0003876940000000009, 0.00038773599999999964, 0.0003876950000000004, 0.00038773599999999964, 0.00038768100000000083, 0.00038772200000000007, 0.0003875980000000029, 0.000387611000000003, 0.0003876809999999939, 0.0003876809999999939, 0.0003877360000000066, 0.00038768100000000083, 0.0003876669999999943, 0.0003876940000000009, 0.00038773599999999964, 0.0003877499999999992, 0.0003877499999999992, 0.0003877499999999992, 0.0003878189999999976, 0.0003877499999999992, 0.0003876940000000009, 0.0003877080000000005, 0.00038770899999999997, 0.00038777799999999835, 0.00038775000000000615, 0.00038770899999999997, 0.00038777799999999835, 0.0003876940000000009, 0.0003877919999999979, 0.00038777799999999835, 0.00038776300000000624, 0.0003878190000000045, 0.0003876660000000018, 0.0003877499999999992, 0.0003877639999999988]</msg>
<status status="PASS" starttime="20201030 18:27:34.605" endtime="20201030 18:27:34.607"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.600" endtime="20201030 18:27:34.607"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:34.611" endtime="20201030 18:27:34.630"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.609" endtime="20201030 18:27:34.631"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.608" endtime="20201030 18:27:34.631"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.234" endtime="20201030 18:27:34.631"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.234" endtime="20201030 18:27:34.632"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:34.640" endtime="20201030 18:27:34.671"></status>
</kw>
<msg timestamp="20201030 18:27:34.672" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:34.638" endtime="20201030 18:27:34.672"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:34.674" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:34.673" endtime="20201030 18:27:34.675"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:34.675" endtime="20201030 18:27:34.677"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.636" endtime="20201030 18:27:34.677"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.634" endtime="20201030 18:27:34.678"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:34.684" endtime="20201030 18:27:34.970"></status>
</kw>
<msg timestamp="20201030 18:27:34.973" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019762347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020201778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:34.683" endtime="20201030 18:27:34.973"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:34.981" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019762347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020201778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:34.974" endtime="20201030 18:27:34.981"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:34.982" endtime="20201030 18:27:34.983"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.680" endtime="20201030 18:27:34.984"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.679" endtime="20201030 18:27:34.984"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:34.988" level="INFO">${PHILIP_RES} = [{'diff': 0.00043943100000000054}, {'diff': 0.0004369580000000012}, {'diff': 0.000436915999999999}, {'diff': 0.0004369860000000003}, {'diff': 0.00043697200000000075}, {'diff': 0.00043693099999999804},...</msg>
<status status="PASS" starttime="20201030 18:27:34.985" endtime="20201030 18:27:34.988"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:34.992" level="INFO">${RESULT} = {'diff': [0.00043943100000000054, 0.0004369580000000012, 0.000436915999999999, 0.0004369860000000003, 0.00043697200000000075, 0.00043693099999999804, 0.0004369999999999999, 0.0004369860000000003, 0.00...</msg>
<status status="PASS" starttime="20201030 18:27:34.989" endtime="20201030 18:27:34.992"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:34.996" level="INFO">NAME: 12-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:34.995" endtime="20201030 18:27:34.997"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:34.999" level="INFO">VALUE: [0.00043943100000000054, 0.0004369580000000012, 0.000436915999999999, 0.0004369860000000003, 0.00043697200000000075, 0.00043693099999999804, 0.0004369999999999999, 0.0004369860000000003, 0.00043697200000000075, 0.0004369450000000011, 0.00043694399999999814, 0.0004369999999999999, 0.0004369999999999999, 0.00043697200000000075, 0.00043706900000000173, 0.0004370419999999986, 0.00043701399999999946, 0.00043702799999999903, 0.00043701399999999946, 0.0004369999999999999, 0.0004369999999999999, 0.00043698599999999685, 0.0004369860000000003, 0.0004370419999999986, 0.0004369999999999999, 0.00043693000000000204, 0.0004369859999999934, 0.0004369999999999999, 0.00043701399999999946, 0.00043701399999999946, 0.00043701399999999946, 0.0004369860000000003, 0.00043701399999999946, 0.00043702799999999903, 0.0004370409999999991, 0.0004369859999999934, 0.0004369860000000003, 0.0004369580000000012, 0.0004369999999999999, 0.0004369999999999999, 0.00043697200000000075, 0.00043702799999999903, 0.0004369860000000003, 0.0004369999999999999, 0.0004369860000000003, 0.0004369860000000003, 0.0004369999999999999, 0.00043697200000000075, 0.0004369860000000003, 0.0004369310000000015]</msg>
<status status="PASS" starttime="20201030 18:27:34.997" endtime="20201030 18:27:35.000"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.993" endtime="20201030 18:27:35.000"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:35.005" endtime="20201030 18:27:35.024"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:35.003" endtime="20201030 18:27:35.025"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:35.001" endtime="20201030 18:27:35.025"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.633" endtime="20201030 18:27:35.025"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.632" endtime="20201030 18:27:35.025"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:35.034" endtime="20201030 18:27:35.067"></status>
</kw>
<msg timestamp="20201030 18:27:35.068" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:35.032" endtime="20201030 18:27:35.068"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:35.070" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:35.069" endtime="20201030 18:27:35.071"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:35.071" endtime="20201030 18:27:35.073"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:35.030" endtime="20201030 18:27:35.073"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:35.028" endtime="20201030 18:27:35.074"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:35.080" endtime="20201030 18:27:35.365"></status>
</kw>
<msg timestamp="20201030 18:27:35.368" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018590944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019082236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:35.079" endtime="20201030 18:27:35.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:35.376" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018590944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019082236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:35.369" endtime="20201030 18:27:35.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:35.377" endtime="20201030 18:27:35.379"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:35.076" endtime="20201030 18:27:35.379"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:35.074" endtime="20201030 18:27:35.380"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:35.384" level="INFO">${PHILIP_RES} = [{'diff': 0.0004912919999999973}, {'diff': 0.0004887640000000026}, {'diff': 0.000488736}, {'diff': 0.000488736}, {'diff': 0.0004887769999999993}, {'diff': 0.0004887769999999993}, {'diff': 0.000488736}...</msg>
<status status="PASS" starttime="20201030 18:27:35.380" endtime="20201030 18:27:35.384"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:35.388" level="INFO">${RESULT} = {'diff': [0.0004912919999999973, 0.0004887640000000026, 0.000488736, 0.000488736, 0.0004887769999999993, 0.0004887769999999993, 0.000488736, 0.0004887639999999992, 0.0004887779999999987, 0.00048877799...</msg>
<status status="PASS" starttime="20201030 18:27:35.384" endtime="20201030 18:27:35.388"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:35.393" level="INFO">NAME: 13-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:35.392" endtime="20201030 18:27:35.393"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:35.395" level="INFO">VALUE: [0.0004912919999999973, 0.0004887640000000026, 0.000488736, 0.000488736, 0.0004887769999999993, 0.0004887769999999993, 0.000488736, 0.0004887639999999992, 0.0004887779999999987, 0.0004887779999999987, 0.0004887499999999996, 0.0004887640000000026, 0.0004887640000000026, 0.0004887499999999996, 0.0004887080000000009, 0.0004886390000000025, 0.000488736, 0.000488736, 0.0004887639999999992, 0.0004887369999999995, 0.0004887369999999995, 0.0004887369999999995, 0.0004887640000000026, 0.0004887919999999948, 0.0004887770000000027, 0.0004888059999999944, 0.0004887640000000026, 0.0004887639999999957, 0.0004887910000000023, 0.0004887780000000022, 0.000488833000000001, 0.0004888200000000009, 0.0004887500000000031, 0.0004887909999999954, 0.0004887500000000031, 0.0004887499999999961, 0.0004887640000000026, 0.0004887500000000031, 0.0004887639999999957, 0.0004887360000000035, 0.0004887359999999966, 0.0004887910000000023, 0.000488721999999997, 0.0004887920000000018, 0.0004887770000000027, 0.0004887640000000026, 0.000488721999999997, 0.0004887920000000018, 0.0004888060000000014, 0.0004887920000000018]</msg>
<status status="PASS" starttime="20201030 18:27:35.394" endtime="20201030 18:27:35.396"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:35.389" endtime="20201030 18:27:35.396"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:35.400" endtime="20201030 18:27:35.419"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:35.398" endtime="20201030 18:27:35.420"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:35.397" endtime="20201030 18:27:35.420"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:35.026" endtime="20201030 18:27:35.420"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:35.026" endtime="20201030 18:27:35.421"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:35.429" endtime="20201030 18:27:35.465"></status>
</kw>
<msg timestamp="20201030 18:27:35.466" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:35.427" endtime="20201030 18:27:35.466"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:35.468" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:35.467" endtime="20201030 18:27:35.468"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:35.469" endtime="20201030 18:27:35.471"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:35.425" endtime="20201030 18:27:35.471"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:35.423" endtime="20201030 18:27:35.472"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:35.478" endtime="20201030 18:27:35.763"></status>
</kw>
<msg timestamp="20201030 18:27:35.766" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018518611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019064056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:35.477" endtime="20201030 18:27:35.766"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:35.773" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018518611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019064056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:35.767" endtime="20201030 18:27:35.774"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:35.775" endtime="20201030 18:27:35.777"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:35.474" endtime="20201030 18:27:35.778"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:35.472" endtime="20201030 18:27:35.778"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:35.782" level="INFO">${PHILIP_RES} = [{'diff': 0.0005454449999999986}, {'diff': 0.0005429440000000001}, {'diff': 0.0005429859999999988}, {'diff': 0.0005429579999999996}, {'diff': 0.0005429860000000022}, {'diff': 0.0005429720000000027}, {...</msg>
<status status="PASS" starttime="20201030 18:27:35.779" endtime="20201030 18:27:35.782"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:35.786" level="INFO">${RESULT} = {'diff': [0.0005454449999999986, 0.0005429440000000001, 0.0005429859999999988, 0.0005429579999999996, 0.0005429860000000022, 0.0005429720000000027, 0.0005429719999999992, 0.0005429579999999996, 0.0005...</msg>
<status status="PASS" starttime="20201030 18:27:35.783" endtime="20201030 18:27:35.787"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:35.791" level="INFO">NAME: 14-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:35.790" endtime="20201030 18:27:35.791"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:35.793" level="INFO">VALUE: [0.0005454449999999986, 0.0005429440000000001, 0.0005429859999999988, 0.0005429579999999996, 0.0005429860000000022, 0.0005429720000000027, 0.0005429719999999992, 0.0005429579999999996, 0.0005429999999999983, 0.0005429860000000022, 0.0005429729999999987, 0.0005429160000000009, 0.0005429589999999991, 0.0005429719999999992, 0.0005429440000000001, 0.0005430139999999979, 0.0005429300000000005, 0.0005428620000000016, 0.0005429449999999995, 0.0005429030000000008, 0.0005429029999999974, 0.0005428610000000056, 0.000542929999999997, 0.0005429029999999974, 0.0005428890000000047, 0.0005429159999999975, 0.0005429439999999966, 0.000542945000000003, 0.0005428889999999978, 0.0005428889999999978, 0.0005429030000000043, 0.0005429019999999979, 0.0005429170000000039, 0.0005428890000000047, 0.0005428609999999987, 0.0005429170000000039, 0.0005429019999999979, 0.0005429030000000043, 0.0005429159999999975, 0.0005429029999999974, 0.0005429310000000034, 0.0005429029999999974, 0.0005430420000000005, 0.0005429720000000027, 0.000542930000000004, 0.0005429160000000044, 0.0005429579999999962, 0.0005429449999999961, 0.0005429590000000026, 0.0005429310000000034]</msg>
<status status="PASS" starttime="20201030 18:27:35.792" endtime="20201030 18:27:35.794"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:35.787" endtime="20201030 18:27:35.794"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:35.798" endtime="20201030 18:27:35.817"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:35.796" endtime="20201030 18:27:35.818"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:35.795" endtime="20201030 18:27:35.818"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:35.421" endtime="20201030 18:27:35.818"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:35.421" endtime="20201030 18:27:35.819"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:35.827" endtime="20201030 18:27:35.867"></status>
</kw>
<msg timestamp="20201030 18:27:35.868" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:35.825" endtime="20201030 18:27:35.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:35.870" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:35.869" endtime="20201030 18:27:35.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:35.871" endtime="20201030 18:27:35.873"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:35.823" endtime="20201030 18:27:35.873"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:35.821" endtime="20201030 18:27:35.874"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:35.880" endtime="20201030 18:27:36.168"></status>
</kw>
<msg timestamp="20201030 18:27:36.171" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019422139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020024403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:35.879" endtime="20201030 18:27:36.172"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:36.179" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019422139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020024403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:36.173" endtime="20201030 18:27:36.180"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:36.180" endtime="20201030 18:27:36.182"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:35.876" endtime="20201030 18:27:36.183"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:35.874" endtime="20201030 18:27:36.183"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:36.187" level="INFO">${PHILIP_RES} = [{'diff': 0.0006022639999999982}, {'diff': 0.0005997909999999988}, {'diff': 0.0005996799999999983}, {'diff': 0.0005996949999999973}, {'diff': 0.0005997080000000009}, {'diff': 0.0005996530000000021}, {...</msg>
<status status="PASS" starttime="20201030 18:27:36.184" endtime="20201030 18:27:36.187"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:36.191" level="INFO">${RESULT} = {'diff': [0.0006022639999999982, 0.0005997909999999988, 0.0005996799999999983, 0.0005996949999999973, 0.0005997080000000009, 0.0005996530000000021, 0.0005996950000000008, 0.000599638999999999, 0.00059...</msg>
<status status="PASS" starttime="20201030 18:27:36.188" endtime="20201030 18:27:36.191"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:36.195" level="INFO">NAME: 15-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:36.194" endtime="20201030 18:27:36.195"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:36.197" level="INFO">VALUE: [0.0006022639999999982, 0.0005997909999999988, 0.0005996799999999983, 0.0005996949999999973, 0.0005997080000000009, 0.0005996530000000021, 0.0005996950000000008, 0.000599638999999999, 0.0005997080000000009, 0.0005997220000000004, 0.0005997079999999974, 0.0005997080000000009, 0.0005997920000000018, 0.0005997220000000004, 0.0005996670000000016, 0.0005997080000000009, 0.000599736, 0.0005997079999999974, 0.0005997229999999965, 0.0005996939999999978, 0.0005997500000000031, 0.0005997500000000031, 0.0005997079999999974, 0.0005997359999999965, 0.0005997220000000039, 0.0005997220000000039, 0.0005997090000000038, 0.0005997079999999974, 0.000599721999999997, 0.000599721999999997, 0.0005996809999999977, 0.0005997090000000038, 0.0005997220000000039, 0.0005996950000000043, 0.0005997220000000039, 0.0005997229999999965, 0.000599721999999997, 0.0005997229999999965, 0.0005996939999999978, 0.000599737000000003, 0.0005996940000000048, 0.0005997090000000038, 0.0005996799999999983, 0.0005997079999999974, 0.0005997639999999957, 0.0005997360000000035, 0.0005996800000000052, 0.0005996950000000043, 0.0005997220000000039, 0.0005996949999999973]</msg>
<status status="PASS" starttime="20201030 18:27:36.196" endtime="20201030 18:27:36.201"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.191" endtime="20201030 18:27:36.202"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:36.205" endtime="20201030 18:27:36.225"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.204" endtime="20201030 18:27:36.225"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.202" endtime="20201030 18:27:36.225"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:35.819" endtime="20201030 18:27:36.226"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:35.819" endtime="20201030 18:27:36.226"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:36.234" endtime="20201030 18:27:36.277"></status>
</kw>
<msg timestamp="20201030 18:27:36.277" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:36.233" endtime="20201030 18:27:36.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:36.280" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:36.278" endtime="20201030 18:27:36.280"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:36.281" endtime="20201030 18:27:36.283"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.230" endtime="20201030 18:27:36.283"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.228" endtime="20201030 18:27:36.283"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:36.290" endtime="20201030 18:27:36.575"></status>
</kw>
<msg timestamp="20201030 18:27:36.578" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018537736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019199181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:36.288" endtime="20201030 18:27:36.578"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:36.586" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018537736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019199181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:36.579" endtime="20201030 18:27:36.586"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:36.587" endtime="20201030 18:27:36.589"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.286" endtime="20201030 18:27:36.589"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.284" endtime="20201030 18:27:36.590"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:36.594" level="INFO">${PHILIP_RES} = [{'diff': 0.0006614450000000001}, {'diff': 0.0006589720000000007}, {'diff': 0.0006589860000000003}, {'diff': 0.0006589439999999981}, {'diff': 0.0006589310000000015}, {'diff': 0.0006589020000000029}, {...</msg>
<status status="PASS" starttime="20201030 18:27:36.591" endtime="20201030 18:27:36.594"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:36.598" level="INFO">${RESULT} = {'diff': [0.0006614450000000001, 0.0006589720000000007, 0.0006589860000000003, 0.0006589439999999981, 0.0006589310000000015, 0.0006589020000000029, 0.000658930999999998, 0.0006589019999999994, 0.00065...</msg>
<status status="PASS" starttime="20201030 18:27:36.595" endtime="20201030 18:27:36.599"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:36.603" level="INFO">NAME: 16-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:36.602" endtime="20201030 18:27:36.603"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:36.605" level="INFO">VALUE: [0.0006614450000000001, 0.0006589720000000007, 0.0006589860000000003, 0.0006589439999999981, 0.0006589310000000015, 0.0006589020000000029, 0.000658930999999998, 0.0006589019999999994, 0.0006589169999999984, 0.000658930000000002, 0.0006589450000000011, 0.0006589590000000006, 0.000658930999999998, 0.0006589019999999994, 0.0006589860000000003, 0.0006588610000000002, 0.000658930000000002, 0.0006588749999999963, 0.0006589730000000002, 0.0006589309999999945, 0.0006589159999999955, 0.0006589449999999941, 0.0006589160000000024, 0.0006589860000000003, 0.0006589720000000007, 0.0006589580000000012, 0.0006588880000000033, 0.0006589450000000011, 0.0006589159999999955, 0.0006589719999999938, 0.0006589170000000019, 0.0006589299999999951, 0.0006589029999999954, 0.000659027999999999, 0.0006589450000000011, 0.0006589720000000007, 0.0006589440000000016, 0.0006589020000000029, 0.0006589170000000019, 0.0006589720000000007, 0.0006588890000000028, 0.0006589030000000023, 0.000659027999999999, 0.0006589999999999999, 0.0006589719999999938, 0.0006589999999999999, 0.0006590139999999994, 0.0006589999999999999, 0.0006589450000000011, 0.0006589310000000015]</msg>
<status status="PASS" starttime="20201030 18:27:36.604" endtime="20201030 18:27:36.606"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.599" endtime="20201030 18:27:36.606"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:36.610" endtime="20201030 18:27:36.629"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.608" endtime="20201030 18:27:36.630"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.607" endtime="20201030 18:27:36.630"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.227" endtime="20201030 18:27:36.631"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.226" endtime="20201030 18:27:36.631"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:36.639" endtime="20201030 18:27:36.685"></status>
</kw>
<msg timestamp="20201030 18:27:36.686" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:36.637" endtime="20201030 18:27:36.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:36.688" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:36.687" endtime="20201030 18:27:36.688"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:36.689" endtime="20201030 18:27:36.691"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.635" endtime="20201030 18:27:36.691"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.633" endtime="20201030 18:27:36.692"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:36.698" endtime="20201030 18:27:36.990"></status>
</kw>
<msg timestamp="20201030 18:27:36.997" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01851575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019238917, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:27:36.696" endtime="20201030 18:27:36.997"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:37.014" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01851575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019238917, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:27:36.999" endtime="20201030 18:27:37.015"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:37.017" endtime="20201030 18:27:37.022"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.694" endtime="20201030 18:27:37.023"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.692" endtime="20201030 18:27:37.024"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:37.032" level="INFO">${PHILIP_RES} = [{'diff': 0.0007231670000000003}, {'diff': 0.0007206530000000017}, {'diff': 0.0007205560000000007}, {'diff': 0.000720611999999999}, {'diff': 0.0007206810000000008}, {'diff': 0.0007206660000000017}, {'...</msg>
<status status="PASS" starttime="20201030 18:27:37.026" endtime="20201030 18:27:37.032"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:37.040" level="INFO">${RESULT} = {'diff': [0.0007231670000000003, 0.0007206530000000017, 0.0007205560000000007, 0.000720611999999999, 0.0007206810000000008, 0.0007206660000000017, 0.0007206530000000017, 0.0007206389999999986, 0.00072...</msg>
<status status="PASS" starttime="20201030 18:27:37.034" endtime="20201030 18:27:37.041"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:37.049" level="INFO">NAME: 17-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:37.047" endtime="20201030 18:27:37.050"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:37.054" level="INFO">VALUE: [0.0007231670000000003, 0.0007206530000000017, 0.0007205560000000007, 0.000720611999999999, 0.0007206810000000008, 0.0007206660000000017, 0.0007206530000000017, 0.0007206389999999986, 0.0007205560000000007, 0.0007206389999999986, 0.0007206659999999983, 0.000720624999999999, 0.0007206390000000021, 0.000720611999999999, 0.0007205689999999973, 0.000720610999999996, 0.0007206250000000025, 0.000720722, 0.000720722, 0.0007206390000000021, 0.0007206110000000029, 0.0007206249999999956, 0.0007206670000000012, 0.0007205970000000034, 0.0007206249999999956, 0.0007206670000000012, 0.0007206670000000012, 0.0007207359999999996, 0.0007206800000000013, 0.0007206530000000017, 0.0007207089999999999, 0.0007206670000000012, 0.0007206110000000029, 0.0007206519999999952, 0.0007206670000000012, 0.0007205700000000037, 0.0007206249999999956, 0.0007205969999999964, 0.0007205559999999972, 0.0007205829999999969, 0.0007206250000000025, 0.0007205549999999977, 0.0007206249999999956, 0.0007205549999999977, 0.0007205689999999973, 0.0007206380000000026, 0.0007206940000000009, 0.0007206670000000012, 0.0007205689999999973, 0.0007206800000000013]</msg>
<status status="PASS" starttime="20201030 18:27:37.051" endtime="20201030 18:27:37.056"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.042" endtime="20201030 18:27:37.057"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:37.063" endtime="20201030 18:27:37.083"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.061" endtime="20201030 18:27:37.083"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.059" endtime="20201030 18:27:37.084"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.632" endtime="20201030 18:27:37.084"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.631" endtime="20201030 18:27:37.084"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:37.092" endtime="20201030 18:27:37.143"></status>
</kw>
<msg timestamp="20201030 18:27:37.143" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:37.091" endtime="20201030 18:27:37.143"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:37.146" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:37.144" endtime="20201030 18:27:37.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:37.147" endtime="20201030 18:27:37.148"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.088" endtime="20201030 18:27:37.149"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.086" endtime="20201030 18:27:37.149"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:37.156" endtime="20201030 18:27:37.441"></status>
</kw>
<msg timestamp="20201030 18:27:37.444" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019328222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0201155, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:27:37.154" endtime="20201030 18:27:37.444"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:37.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019328222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0201155, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:27:37.445" endtime="20201030 18:27:37.452"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:37.453" endtime="20201030 18:27:37.455"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.152" endtime="20201030 18:27:37.455"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.150" endtime="20201030 18:27:37.456"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:37.460" level="INFO">${PHILIP_RES} = [{'diff': 0.0007872780000000024}, {'diff': 0.0007848190000000026}, {'diff': 0.0007848199999999986}, {'diff': 0.0007848890000000004}, {'diff': 0.0007848750000000008}, {'diff': 0.0007847640000000003}, {...</msg>
<status status="PASS" starttime="20201030 18:27:37.456" endtime="20201030 18:27:37.460"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:37.463" level="INFO">${RESULT} = {'diff': [0.0007872780000000024, 0.0007848190000000026, 0.0007848199999999986, 0.0007848890000000004, 0.0007848750000000008, 0.0007847640000000003, 0.0007847779999999999, 0.0007848339999999981, 0.0007...</msg>
<status status="PASS" starttime="20201030 18:27:37.461" endtime="20201030 18:27:37.464"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:37.468" level="INFO">NAME: 18-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:37.467" endtime="20201030 18:27:37.468"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:37.470" level="INFO">VALUE: [0.0007872780000000024, 0.0007848190000000026, 0.0007848199999999986, 0.0007848890000000004, 0.0007848750000000008, 0.0007847640000000003, 0.0007847779999999999, 0.0007848339999999981, 0.0007848469999999982, 0.000784820000000002, 0.0007847770000000004, 0.000784791, 0.000784791, 0.0007847910000000034, 0.0007847770000000004, 0.0007847779999999999, 0.0007848329999999987, 0.0007847500000000007, 0.0007847640000000003, 0.000784888999999997, 0.0007848049999999995, 0.0007848329999999987, 0.0007847779999999999, 0.0007847919999999994, 0.0007847919999999994, 0.0007847779999999999, 0.0007847640000000003, 0.0007847500000000007, 0.0007847779999999999, 0.0007847779999999999, 0.0007847640000000003, 0.0007848199999999986, 0.0007848330000000056, 0.0007847499999999938, 0.000784791, 0.0007848469999999982, 0.0007847220000000016, 0.000784791, 0.0007847640000000003, 0.0007847640000000003, 0.0007847770000000004, 0.0007847220000000016, 0.0007847360000000012, 0.0007848199999999986, 0.0007848049999999995, 0.0007847500000000007, 0.0007847640000000003, 0.0007847220000000016, 0.0007847640000000003, 0.000784791]</msg>
<status status="PASS" starttime="20201030 18:27:37.469" endtime="20201030 18:27:37.472"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.464" endtime="20201030 18:27:37.472"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:37.476" endtime="20201030 18:27:37.495"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.474" endtime="20201030 18:27:37.496"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.473" endtime="20201030 18:27:37.496"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.085" endtime="20201030 18:27:37.496"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.084" endtime="20201030 18:27:37.496"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:37.505" endtime="20201030 18:27:37.558"></status>
</kw>
<msg timestamp="20201030 18:27:37.558" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:37.503" endtime="20201030 18:27:37.559"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:37.561" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:37.559" endtime="20201030 18:27:37.561"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:37.562" endtime="20201030 18:27:37.563"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.501" endtime="20201030 18:27:37.564"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.499" endtime="20201030 18:27:37.564"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:37.571" endtime="20201030 18:27:37.876"></status>
</kw>
<msg timestamp="20201030 18:27:37.879" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018540375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019394514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:37.569" endtime="20201030 18:27:37.879"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:37.887" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018540375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019394514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:37.880" endtime="20201030 18:27:37.887"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:37.888" endtime="20201030 18:27:37.890"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.567" endtime="20201030 18:27:37.890"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.565" endtime="20201030 18:27:37.891"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:37.894" level="INFO">${PHILIP_RES} = [{'diff': 0.0008541390000000003}, {'diff': 0.0008515139999999977}, {'diff': 0.0008516250000000017}, {'diff': 0.0008515550000000004}, {'diff': 0.0008516110000000021}, {'diff': 0.0008516110000000021}, {...</msg>
<status status="PASS" starttime="20201030 18:27:37.891" endtime="20201030 18:27:37.895"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:37.899" level="INFO">${RESULT} = {'diff': [0.0008541390000000003, 0.0008515139999999977, 0.0008516250000000017, 0.0008515550000000004, 0.0008516110000000021, 0.0008516110000000021, 0.0008516390000000013, 0.0008516250000000017, 0.0008...</msg>
<status status="PASS" starttime="20201030 18:27:37.895" endtime="20201030 18:27:37.899"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:37.903" level="INFO">NAME: 19-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:37.902" endtime="20201030 18:27:37.904"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:37.906" level="INFO">VALUE: [0.0008541390000000003, 0.0008515139999999977, 0.0008516250000000017, 0.0008515550000000004, 0.0008516110000000021, 0.0008516110000000021, 0.0008516390000000013, 0.0008516250000000017, 0.0008515279999999972, 0.0008515689999999999, 0.000851598000000002, 0.0008516669999999969, 0.0008516249999999982, 0.000851583999999999, 0.0008516110000000021, 0.0008517229999999987, 0.0008517089999999991, 0.0008516110000000021, 0.0008515690000000034, 0.0008515969999999956, 0.0008515549999999969, 0.0008515139999999977, 0.0008515839999999955, 0.0008515559999999964, 0.000851471999999999, 0.0008515279999999972, 0.0008515689999999965, 0.0008515140000000046, 0.0008515139999999977, 0.0008515690000000034, 0.0008515690000000034, 0.0008515560000000033, 0.000851500000000005, 0.0008515559999999964, 0.000851471999999999, 0.0008515279999999972, 0.0008514860000000055, 0.0008515410000000043, 0.0008514729999999984, 0.0008515839999999955, 0.0008515279999999972, 0.0008515559999999964, 0.000851582999999996, 0.0008516109999999952, 0.0008515139999999977, 0.0008516530000000008, 0.0008515420000000037, 0.0008515409999999973, 0.0008515140000000115, 0.0008514579999999994]</msg>
<status status="PASS" starttime="20201030 18:27:37.904" endtime="20201030 18:27:37.907"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.900" endtime="20201030 18:27:37.907"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:37.911" endtime="20201030 18:27:37.930"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.909" endtime="20201030 18:27:37.931"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.908" endtime="20201030 18:27:37.931"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.497" endtime="20201030 18:27:37.931"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.497" endtime="20201030 18:27:37.931"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:37.940" endtime="20201030 18:27:37.997"></status>
</kw>
<msg timestamp="20201030 18:27:37.997" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:37.938" endtime="20201030 18:27:37.997"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:38.000" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:37.998" endtime="20201030 18:27:38.000"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:38.001" endtime="20201030 18:27:38.003"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.936" endtime="20201030 18:27:38.003"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.934" endtime="20201030 18:27:38.003"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:38.010" endtime="20201030 18:27:38.296"></status>
</kw>
<msg timestamp="20201030 18:27:38.299" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018624917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019548292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:38.008" endtime="20201030 18:27:38.299"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:38.306" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018624917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019548292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:38.300" endtime="20201030 18:27:38.307"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:38.307" endtime="20201030 18:27:38.310"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.006" endtime="20201030 18:27:38.311"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.004" endtime="20201030 18:27:38.311"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:38.315" level="INFO">${PHILIP_RES} = [{'diff': 0.0009233749999999971}, {'diff': 0.0009208199999999993}, {'diff': 0.0009208750000000016}, {'diff': 0.0009208189999999998}, {'diff': 0.0009208749999999981}, {'diff': 0.0009208199999999993}, {...</msg>
<status status="PASS" starttime="20201030 18:27:38.312" endtime="20201030 18:27:38.315"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:38.319" level="INFO">${RESULT} = {'diff': [0.0009233749999999971, 0.0009208199999999993, 0.0009208750000000016, 0.0009208189999999998, 0.0009208749999999981, 0.0009208199999999993, 0.0009208059999999997, 0.0009207500000000014, 0.0009...</msg>
<status status="PASS" starttime="20201030 18:27:38.316" endtime="20201030 18:27:38.319"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:38.323" level="INFO">NAME: 20-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:38.322" endtime="20201030 18:27:38.323"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:38.325" level="INFO">VALUE: [0.0009233749999999971, 0.0009208199999999993, 0.0009208750000000016, 0.0009208189999999998, 0.0009208749999999981, 0.0009208199999999993, 0.0009208059999999997, 0.0009207500000000014, 0.0009208479999999984, 0.0009208189999999998, 0.000920749999999998, 0.000920861000000002, 0.0009208050000000002, 0.0009207910000000041, 0.0009207639999999975, 0.0009207359999999984, 0.0009207500000000049, 0.0009207359999999984, 0.000920749999999998, 0.0009207079999999992, 0.0009208050000000037, 0.0009207779999999971, 0.000920667, 0.0009207219999999988, 0.0009208049999999968, 0.000920778000000004, 0.0009208199999999958, 0.0009208330000000028, 0.0009208470000000024, 0.0009207909999999972, 0.0009208200000000027, 0.000920860999999995, 0.0009209439999999999, 0.0009209020000000012, 0.0009207920000000036, 0.0009207639999999975, 0.000920749999999998, 0.000920652000000001, 0.0009207910000000041, 0.0009207909999999972, 0.0009207219999999988, 0.0009207360000000053, 0.0009208050000000037, 0.0009207779999999971, 0.000920749999999998, 0.0009208470000000024, 0.0009208200000000027, 0.0009207779999999971, 0.0009208200000000027, 0.0009208200000000027]</msg>
<status status="PASS" starttime="20201030 18:27:38.324" endtime="20201030 18:27:38.326"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.319" endtime="20201030 18:27:38.327"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:38.330" endtime="20201030 18:27:38.350"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.329" endtime="20201030 18:27:38.350"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.328" endtime="20201030 18:27:38.350"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.932" endtime="20201030 18:27:38.351"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.932" endtime="20201030 18:27:38.351"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:38.359" endtime="20201030 18:27:38.421"></status>
</kw>
<msg timestamp="20201030 18:27:38.421" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:38.358" endtime="20201030 18:27:38.421"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:38.424" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:38.422" endtime="20201030 18:27:38.424"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:38.425" endtime="20201030 18:27:38.426"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.355" endtime="20201030 18:27:38.427"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.353" endtime="20201030 18:27:38.427"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:38.434" endtime="20201030 18:27:38.738"></status>
</kw>
<msg timestamp="20201030 18:27:38.741" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019428014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020423, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:27:38.432" endtime="20201030 18:27:38.741"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:38.748" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019428014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020423, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:27:38.742" endtime="20201030 18:27:38.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:38.749" endtime="20201030 18:27:38.751"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.429" endtime="20201030 18:27:38.752"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.428" endtime="20201030 18:27:38.752"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:38.756" level="INFO">${PHILIP_RES} = [{'diff': 0.0009949859999999998}, {'diff': 0.0009924730000000007}, {'diff': 0.0009924170000000024}, {'diff': 0.0009924309999999985}, {'diff': 0.0009924029999999993}, {'diff': 0.0009924159999999994}, {...</msg>
<status status="PASS" starttime="20201030 18:27:38.753" endtime="20201030 18:27:38.757"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:38.760" level="INFO">${RESULT} = {'diff': [0.0009949859999999998, 0.0009924730000000007, 0.0009924170000000024, 0.0009924309999999985, 0.0009924029999999993, 0.0009924159999999994, 0.0009924029999999993, 0.0009924720000000012, 0.0009...</msg>
<status status="PASS" starttime="20201030 18:27:38.757" endtime="20201030 18:27:38.761"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:38.765" level="INFO">NAME: 21-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:38.764" endtime="20201030 18:27:38.765"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:38.768" level="INFO">VALUE: [0.0009949859999999998, 0.0009924730000000007, 0.0009924170000000024, 0.0009924309999999985, 0.0009924029999999993, 0.0009924159999999994, 0.0009924029999999993, 0.0009924720000000012, 0.0009924450000000015, 0.0009924439999999986, 0.0009924029999999993, 0.0009924449999999946, 0.0009924720000000012, 0.0009924720000000012, 0.0009923880000000038, 0.000992459000000001, 0.0009924719999999942, 0.0009924860000000008, 0.0009925000000000003, 0.0009925410000000065, 0.000992514, 0.0009924860000000008, 0.000992443999999995, 0.0009924450000000015, 0.0009924580000000016, 0.0009923750000000037, 0.000992444000000002, 0.0009923609999999972, 0.0009924450000000015, 0.000992415999999996, 0.0009923749999999967, 0.0009924169999999954, 0.0009922639999999996, 0.0009924589999999942, 0.0009924300000000025, 0.000992431000000002, 0.0009923750000000037, 0.000992431000000002, 0.0009924030000000028, 0.0009923470000000045, 0.0009924030000000028, 0.0009924300000000025, 0.0009925000000000073, 0.000992459000000001, 0.0009925409999999996, 0.0009923889999999963, 0.0009923339999999975, 0.0009924299999999886, 0.0009924449999999946, 0.0009924299999999886]</msg>
<status status="PASS" starttime="20201030 18:27:38.766" endtime="20201030 18:27:38.770"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.761" endtime="20201030 18:27:38.770"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:38.774" endtime="20201030 18:27:38.794"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.773" endtime="20201030 18:27:38.795"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.771" endtime="20201030 18:27:38.795"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.352" endtime="20201030 18:27:38.795"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.351" endtime="20201030 18:27:38.796"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:38.805" endtime="20201030 18:27:38.870"></status>
</kw>
<msg timestamp="20201030 18:27:38.871" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:38.804" endtime="20201030 18:27:38.871"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:38.873" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:38.872" endtime="20201030 18:27:38.873"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:38.874" endtime="20201030 18:27:38.876"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.800" endtime="20201030 18:27:38.876"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.798" endtime="20201030 18:27:38.877"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:38.883" endtime="20201030 18:27:39.169"></status>
</kw>
<msg timestamp="20201030 18:27:39.172" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020160472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021229639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:38.881" endtime="20201030 18:27:39.172"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:39.180" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020160472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021229639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:39.173" endtime="20201030 18:27:39.180"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:39.181" endtime="20201030 18:27:39.182"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.879" endtime="20201030 18:27:39.183"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.877" endtime="20201030 18:27:39.183"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:39.187" level="INFO">${PHILIP_RES} = [{'diff': 0.0010691670000000028}, {'diff': 0.0010666809999999999}, {'diff': 0.0010666809999999999}, {'diff': 0.001066611000000002}, {'diff': 0.0010666249999999981}, {'diff': 0.001066611000000002}, {'d...</msg>
<status status="PASS" starttime="20201030 18:27:39.184" endtime="20201030 18:27:39.187"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:39.192" level="INFO">${RESULT} = {'diff': [0.0010691670000000028, 0.0010666809999999999, 0.0010666809999999999, 0.001066611000000002, 0.0010666249999999981, 0.001066611000000002, 0.0010666520000000013, 0.0010666809999999999, 0.001066...</msg>
<status status="PASS" starttime="20201030 18:27:39.188" endtime="20201030 18:27:39.192"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:39.196" level="INFO">NAME: 22-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:39.195" endtime="20201030 18:27:39.197"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:39.199" level="INFO">VALUE: [0.0010691670000000028, 0.0010666809999999999, 0.0010666809999999999, 0.001066611000000002, 0.0010666249999999981, 0.001066611000000002, 0.0010666520000000013, 0.0010666809999999999, 0.0010666390000000012, 0.0010667089999999955, 0.0010667080000000065, 0.0010666809999999999, 0.001066611000000002, 0.0010666809999999999, 0.0010666670000000003, 0.0010666250000000016, 0.0010666389999999942, 0.0010666530000000007, 0.0010666250000000016, 0.0010666809999999999, 0.0010666250000000016, 0.0010667500000000052, 0.0010665840000000024, 0.0010666530000000007, 0.001066582999999996, 0.001066611000000002, 0.0010666250000000016, 0.001066611000000002, 0.001066610999999995, 0.0010665830000000029, 0.0010665839999999954, 0.0010665970000000025, 0.0010666809999999999, 0.0010666949999999994, 0.0010666949999999994, 0.0010667229999999917, 0.0010667359999999987, 0.0010668190000000105, 0.0010666800000000004, 0.0010667639999999978, 0.0010667079999999995, 0.0010666530000000007, 0.0010666529999999869, 0.0010667079999999995, 0.0010667079999999995, 0.0010667079999999995, 0.0010667079999999995, 0.001066693999999993, 0.0010666389999999942, 0.0010666809999999999]</msg>
<status status="PASS" starttime="20201030 18:27:39.197" endtime="20201030 18:27:39.200"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:39.193" endtime="20201030 18:27:39.200"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:39.205" endtime="20201030 18:27:39.224"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:39.203" endtime="20201030 18:27:39.225"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:39.202" endtime="20201030 18:27:39.225"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.796" endtime="20201030 18:27:39.225"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.796" endtime="20201030 18:27:39.226"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:39.234" endtime="20201030 18:27:39.303"></status>
</kw>
<msg timestamp="20201030 18:27:39.303" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:39.232" endtime="20201030 18:27:39.303"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:39.306" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:39.304" endtime="20201030 18:27:39.306"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:39.307" endtime="20201030 18:27:39.308"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:39.230" endtime="20201030 18:27:39.309"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:39.228" endtime="20201030 18:27:39.309"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:39.316" endtime="20201030 18:27:39.621"></status>
</kw>
<msg timestamp="20201030 18:27:39.624" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018674986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019820778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:39.314" endtime="20201030 18:27:39.624"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:39.632" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018674986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019820778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:39.625" endtime="20201030 18:27:39.632"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:39.633" endtime="20201030 18:27:39.636"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:39.312" endtime="20201030 18:27:39.636"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:39.310" endtime="20201030 18:27:39.637"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:39.641" level="INFO">${PHILIP_RES} = [{'diff': 0.0011457919999999996}, {'diff': 0.001143278000000001}, {'diff': 0.0011431940000000002}, {'diff': 0.0011432229999999988}, {'diff': 0.0011431670000000005}, {'diff': 0.0011431949999999996}, {'...</msg>
<status status="PASS" starttime="20201030 18:27:39.637" endtime="20201030 18:27:39.641"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:39.644" level="INFO">${RESULT} = {'diff': [0.0011457919999999996, 0.001143278000000001, 0.0011431940000000002, 0.0011432229999999988, 0.0011431670000000005, 0.0011431949999999996, 0.001143153000000001, 0.001143181, 0.0011432369999999...</msg>
<status status="PASS" starttime="20201030 18:27:39.642" endtime="20201030 18:27:39.645"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:39.649" level="INFO">NAME: 23-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:39.648" endtime="20201030 18:27:39.649"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:39.651" level="INFO">VALUE: [0.0011457919999999996, 0.001143278000000001, 0.0011431940000000002, 0.0011432229999999988, 0.0011431670000000005, 0.0011431949999999996, 0.001143153000000001, 0.001143181, 0.0011432369999999983, 0.0011433190000000003, 0.0011432359999999989, 0.0011432779999999976, 0.001143263999999998, 0.0011432089999999992, 0.0011433199999999963, 0.0011433329999999964, 0.0011434029999999942, 0.0011433610000000025, 0.001143346999999996, 0.0011433189999999968, 0.0011433049999999972, 0.001143292000000004, 0.0011433190000000037, 0.0011432499999999984, 0.0011431940000000002, 0.0011432919999999971, 0.0011432219999999993, 0.0011433480000000024, 0.0011433190000000037, 0.001143181, 0.0011432230000000057, 0.0011432359999999989, 0.0011432910000000046, 0.0011432219999999993, 0.0011431669999999935, 0.0011431949999999996, 0.0011432219999999993, 0.0011432910000000046, 0.0011433049999999972, 0.001143263999999991, 0.0011432499999999984, 0.0011433329999999964, 0.001143264000000005, 0.0011432360000000058, 0.001143292000000004, 0.001143263999999991, 0.0011432910000000046, 0.0011432499999999984, 0.0011433049999999972, 0.0011432080000000067]</msg>
<status status="PASS" starttime="20201030 18:27:39.650" endtime="20201030 18:27:39.659"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:39.645" endtime="20201030 18:27:39.660"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:39.663" endtime="20201030 18:27:39.683"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:39.662" endtime="20201030 18:27:39.684"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:39.661" endtime="20201030 18:27:39.684"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:39.226" endtime="20201030 18:27:39.684"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:39.226" endtime="20201030 18:27:39.684"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:39.693" endtime="20201030 18:27:39.767"></status>
</kw>
<msg timestamp="20201030 18:27:39.767" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:39.691" endtime="20201030 18:27:39.767"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:39.770" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:39.768" endtime="20201030 18:27:39.770"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:39.771" endtime="20201030 18:27:39.772"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:39.689" endtime="20201030 18:27:39.773"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:39.687" endtime="20201030 18:27:39.773"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:39.780" endtime="20201030 18:27:40.066"></status>
</kw>
<msg timestamp="20201030 18:27:40.069" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019742264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02096725, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:27:39.778" endtime="20201030 18:27:40.069"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:40.077" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019742264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02096725, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:27:40.070" endtime="20201030 18:27:40.077"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:40.078" endtime="20201030 18:27:40.079"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:39.776" endtime="20201030 18:27:40.080"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:39.774" endtime="20201030 18:27:40.080"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:40.084" level="INFO">${PHILIP_RES} = [{'diff': 0.0012249860000000008}, {'diff': 0.0012224720000000022}, {'diff': 0.0012224580000000027}, {'diff': 0.0012224719999999988}, {'diff': 0.001222514000000001}, {'diff': 0.0012226389999999976}, {'...</msg>
<status status="PASS" starttime="20201030 18:27:40.081" endtime="20201030 18:27:40.085"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:40.088" level="INFO">${RESULT} = {'diff': [0.0012249860000000008, 0.0012224720000000022, 0.0012224580000000027, 0.0012224719999999988, 0.001222514000000001, 0.0012226389999999976, 0.001222444999999999, 0.0012225280000000005, 0.001222...</msg>
<status status="PASS" starttime="20201030 18:27:40.085" endtime="20201030 18:27:40.088"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:40.093" level="INFO">NAME: 24-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:40.092" endtime="20201030 18:27:40.093"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:40.095" level="INFO">VALUE: [0.0012249860000000008, 0.0012224720000000022, 0.0012224580000000027, 0.0012224719999999988, 0.001222514000000001, 0.0012226389999999976, 0.001222444999999999, 0.0012225280000000005, 0.0012224859999999983, 0.0012224720000000022, 0.0012225000000000014, 0.0012224860000000018, 0.0012226389999999976, 0.0012225550000000002, 0.0012225699999999992, 0.0012225699999999992, 0.001222527000000001, 0.001222513999999994, 0.0012225969999999989, 0.0012226390000000045, 0.001222514000000001, 0.001222542, 0.0012225280000000005, 0.0012224859999999949, 0.001222347999999998, 0.0012224719999999953, 0.001222514000000001, 0.0012225280000000005, 0.0012224729999999948, 0.0012225689999999997, 0.001222624999999998, 0.0012225559999999927, 0.0012224859999999949, 0.0012224439999999892, 0.0012224720000000022, 0.0012225409999999937, 0.0012224860000000087, 0.0012224730000000017, 0.0012224720000000022, 0.0012225140000000079, 0.0012224579999999957, 0.001222542000000007, 0.001222444000000003, 0.0012224589999999952, 0.0012224579999999957, 0.001222444000000003, 0.0012224720000000022, 0.0012224730000000017, 0.00122241599999999, 0.001222459000000009]</msg>
<status status="PASS" starttime="20201030 18:27:40.094" endtime="20201030 18:27:40.099"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:40.089" endtime="20201030 18:27:40.099"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:40.103" endtime="20201030 18:27:40.122"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:40.102" endtime="20201030 18:27:40.123"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:40.100" endtime="20201030 18:27:40.123"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:39.685" endtime="20201030 18:27:40.124"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:39.685" endtime="20201030 18:27:40.124"></status>
</kw>
<kw name="${n} = 25" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:40.132" endtime="20201030 18:27:40.211"></status>
</kw>
<msg timestamp="20201030 18:27:40.212" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:40.131" endtime="20201030 18:27:40.213"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:40.218" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:40.215" endtime="20201030 18:27:40.218"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:40.220" endtime="20201030 18:27:40.223"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:40.128" endtime="20201030 18:27:40.224"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:40.126" endtime="20201030 18:27:40.225"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:40.239" endtime="20201030 18:27:40.533"></status>
</kw>
<msg timestamp="20201030 18:27:40.535" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018753931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020060556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:40.236" endtime="20201030 18:27:40.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:40.543" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018753931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020060556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:40.536" endtime="20201030 18:27:40.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:40.544" endtime="20201030 18:27:40.546"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:40.230" endtime="20201030 18:27:40.546"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:40.227" endtime="20201030 18:27:40.547"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:40.551" level="INFO">${PHILIP_RES} = [{'diff': 0.0013066249999999988}, {'diff': 0.0013042220000000007}, {'diff': 0.0013040840000000005}, {'diff': 0.0013041109999999967}, {'diff': 0.001304083000000001}, {'diff': 0.0013039999999999996}, {'...</msg>
<status status="PASS" starttime="20201030 18:27:40.548" endtime="20201030 18:27:40.551"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:40.556" level="INFO">${RESULT} = {'diff': [0.0013066249999999988, 0.0013042220000000007, 0.0013040840000000005, 0.0013041109999999967, 0.001304083000000001, 0.0013039999999999996, 0.0013039579999999974, 0.0013040280000000022, 0.00130...</msg>
<status status="PASS" starttime="20201030 18:27:40.552" endtime="20201030 18:27:40.556"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:40.560" level="INFO">NAME: 25-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:40.559" endtime="20201030 18:27:40.560"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:40.562" level="INFO">VALUE: [0.0013066249999999988, 0.0013042220000000007, 0.0013040840000000005, 0.0013041109999999967, 0.001304083000000001, 0.0013039999999999996, 0.0013039579999999974, 0.0013040280000000022, 0.0013041519999999994, 0.0013042079999999942, 0.0013042220000000007, 0.0013041660000000024, 0.001304167000000002, 0.0013042360000000003, 0.001304084000000004, 0.0013041249999999963, 0.001304166999999995, 0.0013040559999999979, 0.0013042090000000006, 0.0013041250000000032, 0.0013042080000000011, 0.0013041250000000032, 0.001304167000000002, 0.0013042639999999994, 0.0013042079999999942, 0.0013042080000000011, 0.0013041390000000028, 0.001304167000000002, 0.0013040559999999979, 0.0013040550000000053, 0.0013042359999999933, 0.0013041520000000029, 0.0013041250000000032, 0.0013041250000000032, 0.0013042500000000068, 0.0013041940000000085, 0.0013041249999999893, 0.0013041390000000097, 0.0013041110000000106, 0.0013041810000000015, 0.0013040699999999905, 0.0013040969999999902, 0.0013041390000000097, 0.0013041949999999941, 0.0013041659999999955, 0.0013041670000000088, 0.0013042090000000006, 0.0013042919999999986, 0.0013042360000000003, 0.0013041110000000106]</msg>
<status status="PASS" starttime="20201030 18:27:40.561" endtime="20201030 18:27:40.563"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:40.556" endtime="20201030 18:27:40.564"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:40.567" endtime="20201030 18:27:40.587"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:40.566" endtime="20201030 18:27:40.587"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:40.565" endtime="20201030 18:27:40.588"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:40.125" endtime="20201030 18:27:40.588"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:40.124" endtime="20201030 18:27:40.588"></status>
</kw>
<kw name="${n} = 26" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:40.597" endtime="20201030 18:27:40.678"></status>
</kw>
<msg timestamp="20201030 18:27:40.679" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:40.595" endtime="20201030 18:27:40.679"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:40.681" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:40.680" endtime="20201030 18:27:40.682"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:40.682" endtime="20201030 18:27:40.684"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:40.592" endtime="20201030 18:27:40.685"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:40.590" endtime="20201030 18:27:40.685"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:40.692" endtime="20201030 18:27:40.979"></status>
</kw>
<msg timestamp="20201030 18:27:40.982" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018842736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020233639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:40.690" endtime="20201030 18:27:40.982"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:40.989" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018842736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020233639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:40.983" endtime="20201030 18:27:40.990"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:40.991" endtime="20201030 18:27:40.993"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:40.687" endtime="20201030 18:27:40.994"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:40.686" endtime="20201030 18:27:40.994"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:40.998" level="INFO">${PHILIP_RES} = [{'diff': 0.0013909030000000024}, {'diff': 0.0013884579999999987}, {'diff': 0.001388417000000003}, {'diff': 0.0013883199999999984}, {'diff': 0.0013883609999999977}, {'diff': 0.001388443999999999}, {'d...</msg>
<status status="PASS" starttime="20201030 18:27:40.995" endtime="20201030 18:27:40.998"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:41.002" level="INFO">${RESULT} = {'diff': [0.0013909030000000024, 0.0013884579999999987, 0.001388417000000003, 0.0013883199999999984, 0.0013883609999999977, 0.001388443999999999, 0.0013884579999999987, 0.0013884720000000017, 0.001388...</msg>
<status status="PASS" starttime="20201030 18:27:40.999" endtime="20201030 18:27:41.002"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:41.007" level="INFO">NAME: 26-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:41.006" endtime="20201030 18:27:41.007"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:41.009" level="INFO">VALUE: [0.0013909030000000024, 0.0013884579999999987, 0.001388417000000003, 0.0013883199999999984, 0.0013883609999999977, 0.001388443999999999, 0.0013884579999999987, 0.0013884720000000017, 0.0013886250000000044, 0.0013884310000000025, 0.001388318999999999, 0.001388416999999996, 0.0013884310000000025, 0.0013883610000000046, 0.0013883059999999989, 0.0013882500000000006, 0.0013882640000000002, 0.0013882640000000002, 0.0013881940000000023, 0.0013883059999999989, 0.001388347000000005, 0.0013883060000000058, 0.0013884590000000016, 0.0013883749999999973, 0.0013883329999999985, 0.0013883749999999973, 0.0013883049999999994, 0.0013883479999999976, 0.001388319000000006, 0.0013882909999999998, 0.001388305999999992, 0.0013882640000000002, 0.0013883479999999976, 0.0013882640000000002, 0.0013881670000000096, 0.0013882779999999928, 0.0013883329999999916, 0.001388334000000005, 0.0013883469999999981, 0.0013883749999999973, 0.0013883609999999907, 0.0013884310000000094, 0.0013883480000000115, 0.0013883749999999973, 0.0013883889999999899, 0.0013883329999999916, 0.001388318999999999, 0.001388305999999992, 0.0013882499999999937, 0.0013883610000000046]</msg>
<status status="PASS" starttime="20201030 18:27:41.008" endtime="20201030 18:27:41.010"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:41.003" endtime="20201030 18:27:41.010"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:41.018" endtime="20201030 18:27:41.040"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:41.015" endtime="20201030 18:27:41.041"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:41.012" endtime="20201030 18:27:41.042"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:40.589" endtime="20201030 18:27:41.042"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:40.588" endtime="20201030 18:27:41.043"></status>
</kw>
<kw name="${n} = 27" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:41.061" endtime="20201030 18:27:41.152"></status>
</kw>
<msg timestamp="20201030 18:27:41.153" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:41.057" endtime="20201030 18:27:41.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:41.158" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:41.155" endtime="20201030 18:27:41.159"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:41.160" endtime="20201030 18:27:41.164"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:41.052" endtime="20201030 18:27:41.165"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:41.048" endtime="20201030 18:27:41.166"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:41.179" endtime="20201030 18:27:41.476"></status>
</kw>
<msg timestamp="20201030 18:27:41.478" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0344245, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035902181, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:27:41.176" endtime="20201030 18:27:41.479"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:41.486" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0344245, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035902181, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:27:41.480" endtime="20201030 18:27:41.487"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:41.488" endtime="20201030 18:27:41.489"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:41.171" endtime="20201030 18:27:41.490"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:41.167" endtime="20201030 18:27:41.490"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:41.494" level="INFO">${PHILIP_RES} = [{'diff': 0.0014776810000000015}, {'diff': 0.0014752779999999965}, {'diff': 0.0014752220000000052}, {'diff': 0.0014751939999999991}, {'diff': 0.001475166}, {'diff': 0.0014752780000000035}, {'diff': 0....</msg>
<status status="PASS" starttime="20201030 18:27:41.491" endtime="20201030 18:27:41.494"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:41.498" level="INFO">${RESULT} = {'diff': [0.0014776810000000015, 0.0014752779999999965, 0.0014752220000000052, 0.0014751939999999991, 0.001475166, 0.0014752780000000035, 0.0014751250000000007, 0.0014751250000000007, 0.00147509700000...</msg>
<status status="PASS" starttime="20201030 18:27:41.495" endtime="20201030 18:27:41.498"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:41.502" level="INFO">NAME: 27-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:41.501" endtime="20201030 18:27:41.503"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:41.505" level="INFO">VALUE: [0.0014776810000000015, 0.0014752779999999965, 0.0014752220000000052, 0.0014751939999999991, 0.001475166, 0.0014752780000000035, 0.0014751250000000007, 0.0014751250000000007, 0.0014750970000000016, 0.001475166, 0.0014752089999999982, 0.0014750970000000016, 0.0014751110000000012, 0.001475209000000005, 0.0014752369999999973, 0.0014751669999999995, 0.0014752220000000052, 0.0014751949999999986, 0.0014751110000000012, 0.0014751110000000012, 0.0014750419999999959, 0.0014750139999999967, 0.0014749299999999993, 0.0014749859999999976, 0.0014750409999999964, 0.0014750560000000024, 0.0014750840000000015, 0.0014750689999999955, 0.0014750419999999959, 0.0014751939999999991, 0.0014752080000000056, 0.0014752220000000121, 0.001475098000000008, 0.001475098000000008, 0.001475180999999992, 0.0014751390000000003, 0.0014752499999999974, 0.0014752219999999983, 0.0014751110000000012, 0.001475166, 0.0014751799999999926, 0.0014751669999999995, 0.001475209000000005, 0.0014750970000000085, 0.0014750969999999947, 0.0014750130000000111, 0.0014750419999999959, 0.0014749440000000058, 0.0014749579999999984, 0.0014749859999999976]</msg>
<status status="PASS" starttime="20201030 18:27:41.504" endtime="20201030 18:27:41.506"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:41.499" endtime="20201030 18:27:41.507"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:41.511" endtime="20201030 18:27:41.530"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:41.509" endtime="20201030 18:27:41.531"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:41.508" endtime="20201030 18:27:41.531"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:41.045" endtime="20201030 18:27:41.531"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:41.043" endtime="20201030 18:27:41.532"></status>
</kw>
<kw name="${n} = 28" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:41.540" endtime="20201030 18:27:41.631"></status>
</kw>
<msg timestamp="20201030 18:27:41.632" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:41.538" endtime="20201030 18:27:41.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:41.634" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:41.633" endtime="20201030 18:27:41.634"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:41.635" endtime="20201030 18:27:41.637"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:41.536" endtime="20201030 18:27:41.637"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:41.534" endtime="20201030 18:27:41.638"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:41.644" endtime="20201030 18:27:41.934"></status>
</kw>
<msg timestamp="20201030 18:27:41.940" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018772778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020339653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:41.643" endtime="20201030 18:27:41.941"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:41.958" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018772778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020339653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:41.943" endtime="20201030 18:27:41.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:41.960" endtime="20201030 18:27:41.964"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:41.640" endtime="20201030 18:27:41.965"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:41.638" endtime="20201030 18:27:41.966"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:41.974" level="INFO">${PHILIP_RES} = [{'diff': 0.0015668749999999988}, {'diff': 0.0015642220000000005}, {'diff': 0.0015642920000000018}, {'diff': 0.0015642220000000005}, {'diff': 0.0015641389999999991}, {'diff': 0.0015641800000000018}, {...</msg>
<status status="PASS" starttime="20201030 18:27:41.967" endtime="20201030 18:27:41.974"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:41.984" level="INFO">${RESULT} = {'diff': [0.0015668749999999988, 0.0015642220000000005, 0.0015642920000000018, 0.0015642220000000005, 0.0015641389999999991, 0.0015641800000000018, 0.0015643049999999985, 0.0015643619999999997, 0.0015...</msg>
<status status="PASS" starttime="20201030 18:27:41.976" endtime="20201030 18:27:41.985"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:41.996" level="INFO">NAME: 28-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:41.993" endtime="20201030 18:27:41.997"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:42.003" level="INFO">VALUE: [0.0015668749999999988, 0.0015642220000000005, 0.0015642920000000018, 0.0015642220000000005, 0.0015641389999999991, 0.0015641800000000018, 0.0015643049999999985, 0.0015643619999999997, 0.0015642779999999953, 0.0015643340000000006, 0.0015642639999999958, 0.0015642499999999962, 0.0015642080000000044, 0.0015641379999999996, 0.0015641389999999991, 0.0015641389999999991, 0.0015640969999999935, 0.0015642500000000031, 0.0015641119999999994, 0.0015642780000000023, 0.0015640410000000021, 0.0015640409999999952, 0.0015640690000000013, 0.0015641389999999991, 0.0015640970000000004, 0.001564082999999994, 0.0015641120000000064, 0.0015642500000000031, 0.0015641389999999922, 0.0015641809999999978, 0.0015642229999999896, 0.0015643060000000014, 0.001564333000000001, 0.0015640410000000021, 0.0015640970000000004, 0.001564139000000006, 0.001564082999999994, 0.0015641659999999918, 0.0015641799999999983, 0.0015643060000000014, 0.001564111000000007, 0.0015642499999999893, 0.0015642079999999975, 0.0015640979999999999, 0.0015641670000000052, 0.0015641670000000052, 0.0015641120000000064, 0.0015640970000000004, 0.001564111000000007, 0.0015641950000000043]</msg>
<status status="PASS" starttime="20201030 18:27:41.998" endtime="20201030 18:27:42.005"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:41.986" endtime="20201030 18:27:42.007"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:42.018" endtime="20201030 18:27:42.039"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:42.013" endtime="20201030 18:27:42.039"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:42.009" endtime="20201030 18:27:42.040"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:41.532" endtime="20201030 18:27:42.040"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:41.532" endtime="20201030 18:27:42.040"></status>
</kw>
<kw name="${n} = 29" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:42.049" endtime="20201030 18:27:42.145"></status>
</kw>
<msg timestamp="20201030 18:27:42.145" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:42.047" endtime="20201030 18:27:42.145"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:42.148" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:42.146" endtime="20201030 18:27:42.148"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:42.149" endtime="20201030 18:27:42.150"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:42.045" endtime="20201030 18:27:42.151"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:42.043" endtime="20201030 18:27:42.151"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:42.158" endtime="20201030 18:27:42.445"></status>
</kw>
<msg timestamp="20201030 18:27:42.448" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018823389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020481556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:42.156" endtime="20201030 18:27:42.449"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:42.456" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018823389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020481556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:42.449" endtime="20201030 18:27:42.457"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:42.457" endtime="20201030 18:27:42.460"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:42.154" endtime="20201030 18:27:42.461"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:42.152" endtime="20201030 18:27:42.461"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:42.465" level="INFO">${PHILIP_RES} = [{'diff': 0.001658167000000002}, {'diff': 0.0016557780000000001}, {'diff': 0.001655750000000001}, {'diff': 0.0016557640000000005}, {'diff': 0.0016557080000000023}, {'diff': 0.0016556939999999992}, {'d...</msg>
<status status="PASS" starttime="20201030 18:27:42.462" endtime="20201030 18:27:42.465"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:42.469" level="INFO">${RESULT} = {'diff': [0.001658167000000002, 0.0016557780000000001, 0.001655750000000001, 0.0016557640000000005, 0.0016557080000000023, 0.0016556939999999992, 0.0016558339999999984, 0.0016557909999999967, 0.001655...</msg>
<status status="PASS" starttime="20201030 18:27:42.466" endtime="20201030 18:27:42.469"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:42.473" level="INFO">NAME: 29-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:42.472" endtime="20201030 18:27:42.474"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:42.476" level="INFO">VALUE: [0.001658167000000002, 0.0016557780000000001, 0.001655750000000001, 0.0016557640000000005, 0.0016557080000000023, 0.0016556939999999992, 0.0016558339999999984, 0.0016557909999999967, 0.001655847000000002, 0.0016558060000000027, 0.001655763999999997, 0.0016557089999999983, 0.0016557769999999972, 0.001655735999999998, 0.0016559030000000002, 0.0016558199999999954, 0.0016556799999999997, 0.001655624999999994, 0.0016556799999999997, 0.0016555980000000012, 0.001655666, 0.0016557219999999984, 0.0016557910000000037, 0.0016557499999999975, 0.0016557230000000048, 0.0016555980000000081, 0.0016557910000000037, 0.0016557079999999919, 0.001655847000000002, 0.001655624999999994, 0.001655652999999993, 0.0016556669999999996, 0.0016557910000000037, 0.001655652999999993, 0.0016556669999999996, 0.0016556939999999992, 0.001655735999999991, 0.0016556669999999996, 0.0016556110000000013, 0.0016556939999999992, 0.0016556250000000078, 0.001655624999999994, 0.001655666, 0.0016556669999999996, 0.0016556110000000013, 0.0016555139999999968, 0.0016555970000000086, 0.0016556390000000004, 0.0016556800000000066, 0.0016557079999999919]</msg>
<status status="PASS" starttime="20201030 18:27:42.474" endtime="20201030 18:27:42.476"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:42.470" endtime="20201030 18:27:42.477"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:42.481" endtime="20201030 18:27:42.500"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:42.479" endtime="20201030 18:27:42.501"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:42.478" endtime="20201030 18:27:42.501"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:42.041" endtime="20201030 18:27:42.501"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:42.041" endtime="20201030 18:27:42.502"></status>
</kw>
<kw name="${n} = 30" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:42.510" endtime="20201030 18:27:42.612"></status>
</kw>
<msg timestamp="20201030 18:27:42.612" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:42.508" endtime="20201030 18:27:42.613"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:42.615" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:42.613" endtime="20201030 18:27:42.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:42.616" endtime="20201030 18:27:42.617"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:42.506" endtime="20201030 18:27:42.618"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:42.504" endtime="20201030 18:27:42.618"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:42.625" endtime="20201030 18:27:42.933"></status>
</kw>
<msg timestamp="20201030 18:27:42.936" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019629403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021382014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:42.623" endtime="20201030 18:27:42.937"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:42.944" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019629403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021382014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:42.937" endtime="20201030 18:27:42.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:42.945" endtime="20201030 18:27:42.947"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:42.621" endtime="20201030 18:27:42.947"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:42.619" endtime="20201030 18:27:42.948"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:42.952" level="INFO">${PHILIP_RES} = [{'diff': 0.0017526110000000011}, {'diff': 0.0017501110000000021}, {'diff': 0.0017502219999999992}, {'diff': 0.0017502229999999987}, {'diff': 0.0017501529999999973}, {'diff': 0.0017501249999999982}, {...</msg>
<status status="PASS" starttime="20201030 18:27:42.949" endtime="20201030 18:27:42.952"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:42.956" level="INFO">${RESULT} = {'diff': [0.0017526110000000011, 0.0017501110000000021, 0.0017502219999999992, 0.0017502229999999987, 0.0017501529999999973, 0.0017501249999999982, 0.0017499439999999998, 0.0017500140000000011, 0.0017...</msg>
<status status="PASS" starttime="20201030 18:27:42.953" endtime="20201030 18:27:42.956"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:42.960" level="INFO">NAME: 30-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:42.959" endtime="20201030 18:27:42.960"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:42.962" level="INFO">VALUE: [0.0017526110000000011, 0.0017501110000000021, 0.0017502219999999992, 0.0017502229999999987, 0.0017501529999999973, 0.0017501249999999982, 0.0017499439999999998, 0.0017500140000000011, 0.0017499730000000019, 0.0017500279999999938, 0.0017499170000000036, 0.0017500140000000011, 0.0017500280000000007, 0.0017500280000000007, 0.001750096999999999, 0.001750083999999999, 0.001750084000000006, 0.0017501810000000034, 0.0017500420000000003, 0.0017501529999999973, 0.0017501109999999986, 0.0017500550000000004, 0.001749957999999996, 0.0017500969999999921, 0.001749874999999998, 0.0017500000000000016, 0.0017500000000000016, 0.0017499730000000019, 0.0017500699999999925, 0.0017500000000000016, 0.0017498189999999997, 0.001749957999999996, 0.0017498610000000053, 0.0017500409999999939, 0.0017499720000000024, 0.0017499870000000084, 0.0017499160000000041, 0.0017499170000000036, 0.0017499590000000093, 0.0017500000000000016, 0.001750068999999993, 0.001749957999999996, 0.001750014000000008, 0.0017499730000000019, 0.0017499310000000101, 0.0017499589999999954, 0.001749986000000009, 0.0017499869999999945, 0.0017499309999999962, 0.0017500699999999925]</msg>
<status status="PASS" starttime="20201030 18:27:42.961" endtime="20201030 18:27:42.964"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:42.957" endtime="20201030 18:27:42.965"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:42.968" endtime="20201030 18:27:42.988"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:42.967" endtime="20201030 18:27:42.988"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:42.966" endtime="20201030 18:27:42.989"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:42.503" endtime="20201030 18:27:42.989"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:42.502" endtime="20201030 18:27:42.989"></status>
</kw>
<kw name="${n} = 31" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:42.998" endtime="20201030 18:27:43.104"></status>
</kw>
<msg timestamp="20201030 18:27:43.104" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:42.996" endtime="20201030 18:27:43.104"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:43.107" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:43.105" endtime="20201030 18:27:43.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:43.108" endtime="20201030 18:27:43.109"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:42.993" endtime="20201030 18:27:43.110"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:42.991" endtime="20201030 18:27:43.110"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:43.117" endtime="20201030 18:27:43.405"></status>
</kw>
<msg timestamp="20201030 18:27:43.407" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018844833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020693847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:43.115" endtime="20201030 18:27:43.408"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:43.415" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018844833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020693847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:43.409" endtime="20201030 18:27:43.416"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:43.416" endtime="20201030 18:27:43.418"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.113" endtime="20201030 18:27:43.419"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.111" endtime="20201030 18:27:43.419"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:43.423" level="INFO">${PHILIP_RES} = [{'diff': 0.001849014000000003}, {'diff': 0.001846597000000002}, {'diff': 0.0018464719999999983}, {'diff': 0.0018465140000000005}, {'diff': 0.0018464579999999987}, {'diff': 0.0018464020000000005}, {'d...</msg>
<status status="PASS" starttime="20201030 18:27:43.420" endtime="20201030 18:27:43.423"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:43.428" level="INFO">${RESULT} = {'diff': [0.001849014000000003, 0.001846597000000002, 0.0018464719999999983, 0.0018465140000000005, 0.0018464579999999987, 0.0018464020000000005, 0.0018464859999999979, 0.0018463890000000038, 0.001846...</msg>
<status status="PASS" starttime="20201030 18:27:43.424" endtime="20201030 18:27:43.428"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:43.432" level="INFO">NAME: 31-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:43.431" endtime="20201030 18:27:43.432"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:43.434" level="INFO">VALUE: [0.001849014000000003, 0.001846597000000002, 0.0018464719999999983, 0.0018465140000000005, 0.0018464579999999987, 0.0018464020000000005, 0.0018464859999999979, 0.0018463890000000038, 0.001846388999999997, 0.0018463470000000051, 0.0018465969999999984, 0.0018465839999999983, 0.0018466529999999967, 0.0018467080000000025, 0.001846709000000002, 0.0018466940000000029, 0.0018464309999999956, 0.001846430000000003, 0.0018465140000000005, 0.0018466529999999967, 0.0018464720000000018, 0.0018465559999999992, 0.0018464589999999947, 0.0018463890000000038, 0.0018464310000000095, 0.001846500000000001, 0.0018467640000000007, 0.001846528, 0.0018465829999999989, 0.0018465559999999992, 0.001846528, 0.0018465829999999989, 0.0018463890000000038, 0.0018466949999999954, 0.0018465840000000122, 0.0018467360000000016, 0.0018467229999999946, 0.0018467360000000016, 0.001846610999999998, 0.0018464579999999953, 0.001846528, 0.0018466120000000114, 0.001846639000000011, 0.001846610999999998, 0.001846639000000011, 0.0018465829999999989, 0.0018465549999999997, 0.0018465699999999918, 0.0018464450000000021, 0.0018465829999999989]</msg>
<status status="PASS" starttime="20201030 18:27:43.433" endtime="20201030 18:27:43.435"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.429" endtime="20201030 18:27:43.436"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:43.439" endtime="20201030 18:27:43.459"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.438" endtime="20201030 18:27:43.459"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.437" endtime="20201030 18:27:43.460"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:42.990" endtime="20201030 18:27:43.460"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:42.989" endtime="20201030 18:27:43.460"></status>
</kw>
<kw name="${n} = 32" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:43.468" endtime="20201030 18:27:43.582"></status>
</kw>
<msg timestamp="20201030 18:27:43.583" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:43.467" endtime="20201030 18:27:43.583"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:43.588" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:43.585" endtime="20201030 18:27:43.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:43.590" endtime="20201030 18:27:43.593"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.464" endtime="20201030 18:27:43.595"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.463" endtime="20201030 18:27:43.596"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:43.609" endtime="20201030 18:27:43.906"></status>
</kw>
<msg timestamp="20201030 18:27:43.909" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018736139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020684278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:43.606" endtime="20201030 18:27:43.909"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:43.917" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018736139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020684278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:43.910" endtime="20201030 18:27:43.917"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:43.918" endtime="20201030 18:27:43.920"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.600" endtime="20201030 18:27:43.920"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.597" endtime="20201030 18:27:43.921"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:43.925" level="INFO">${PHILIP_RES} = [{'diff': 0.0019481390000000015}, {'diff': 0.0019458200000000009}, {'diff': 0.0019457769999999992}, {'diff': 0.001945723}, {'diff': 0.001945736}, {'diff': 0.0019455830000000007}, {'diff': 0.0019457780...</msg>
<status status="PASS" starttime="20201030 18:27:43.922" endtime="20201030 18:27:43.925"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:43.929" level="INFO">${RESULT} = {'diff': [0.0019481390000000015, 0.0019458200000000009, 0.0019457769999999992, 0.001945723, 0.001945736, 0.0019455830000000007, 0.0019457780000000022, 0.0019457640000000026, 0.0019456809999999977, 0.0...</msg>
<status status="PASS" starttime="20201030 18:27:43.926" endtime="20201030 18:27:43.929"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:43.933" level="INFO">NAME: 32-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:43.932" endtime="20201030 18:27:43.933"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:43.935" level="INFO">VALUE: [0.0019481390000000015, 0.0019458200000000009, 0.0019457769999999992, 0.001945723, 0.001945736, 0.0019455830000000007, 0.0019457780000000022, 0.0019457640000000026, 0.0019456809999999977, 0.001945667000000005, 0.0019456799999999982, 0.0019457780000000022, 0.0019456800000000052, 0.0019457640000000026, 0.0019456669999999981, 0.0019456939999999978, 0.001945749999999996, 0.0019458060000000013, 0.001945750000000003, 0.0019458060000000013, 0.0019459019999999924, 0.0019459450000000045, 0.0019457640000000026, 0.0019459029999999988, 0.0019458339999999935, 0.0019457360000000035, 0.0019457360000000035, 0.0019459019999999994, 0.0019457640000000026, 0.0019457079999999904, 0.0019457229999999964, 0.0019457229999999964, 0.001945749999999996, 0.0019457640000000026, 0.0019458060000000083, 0.0019457780000000091, 0.001945721999999997, 0.0019458890000000062, 0.0019458200000000009, 0.0019456810000000047, 0.0019457360000000035, 0.0019457360000000035, 0.001945749999999996, 0.0019458339999999935, 0.0019456659999999987, 0.0019455689999999942, 0.0019456109999999999, 0.0019455840000000002, 0.0019457360000000035, 0.0019456799999999913]</msg>
<status status="PASS" starttime="20201030 18:27:43.934" endtime="20201030 18:27:43.936"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.929" endtime="20201030 18:27:43.937"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:43.940" endtime="20201030 18:27:43.960"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.939" endtime="20201030 18:27:43.961"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.938" endtime="20201030 18:27:43.961"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.461" endtime="20201030 18:27:43.961"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.461" endtime="20201030 18:27:43.961"></status>
</kw>
<kw name="${n} = 33" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:43.970" endtime="20201030 18:27:44.087"></status>
</kw>
<msg timestamp="20201030 18:27:44.088" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:43.968" endtime="20201030 18:27:44.088"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:44.090" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:44.089" endtime="20201030 18:27:44.091"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:44.091" endtime="20201030 18:27:44.093"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.966" endtime="20201030 18:27:44.093"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.964" endtime="20201030 18:27:44.094"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:44.100" endtime="20201030 18:27:44.398"></status>
</kw>
<msg timestamp="20201030 18:27:44.405" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019661778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021711417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:44.099" endtime="20201030 18:27:44.405"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:44.422" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019661778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021711417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:44.407" endtime="20201030 18:27:44.423"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:44.424" endtime="20201030 18:27:44.428"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.096" endtime="20201030 18:27:44.429"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.094" endtime="20201030 18:27:44.430"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:44.438" level="INFO">${PHILIP_RES} = [{'diff': 0.002049638999999999}, {'diff': 0.0020471800000000026}, {'diff': 0.002047374999999997}, {'diff': 0.0020475140000000003}, {'diff': 0.002047486000000001}, {'diff': 0.0020474859999999977}, {'di...</msg>
<status status="PASS" starttime="20201030 18:27:44.431" endtime="20201030 18:27:44.438"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:44.447" level="INFO">${RESULT} = {'diff': [0.002049638999999999, 0.0020471800000000026, 0.002047374999999997, 0.0020475140000000003, 0.002047486000000001, 0.0020474859999999977, 0.0020474439999999955, 0.002047430000000003, 0.00204730...</msg>
<status status="PASS" starttime="20201030 18:27:44.440" endtime="20201030 18:27:44.447"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:44.456" level="INFO">NAME: 33-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:44.453" endtime="20201030 18:27:44.456"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:44.461" level="INFO">VALUE: [0.002049638999999999, 0.0020471800000000026, 0.002047374999999997, 0.0020475140000000003, 0.002047486000000001, 0.0020474859999999977, 0.0020474439999999955, 0.002047430000000003, 0.0020473049999999993, 0.0020474720000000016, 0.002047374999999997, 0.0020472220000000013, 0.002047236000000001, 0.0020473049999999993, 0.0020473329999999984, 0.002047264, 0.002047318999999999, 0.002047333999999998, 0.002047291999999999, 0.0020475000000000076, 0.0020474309999999885, 0.0020475140000000003, 0.0020474590000000015, 0.00204737499999999, 0.0020474159999999963, 0.0020474029999999893, 0.0020474720000000085, 0.0020475969999999982, 0.002047403000000003, 0.002047416999999996, 0.002047556000000006, 0.0020475829999999917, 0.0020476940000000027, 0.0020474999999999938, 0.0020474999999999938, 0.0020474310000000023, 0.002047445000000009, 0.0020475699999999986, 0.002047429999999989, 0.002047556000000006, 0.0020474720000000085, 0.0020474590000000015, 0.0020474170000000097, 0.002047416999999996, 0.0020475140000000003, 0.0020475549999999926, 0.0020475550000000065, 0.0020473340000000118, 0.002047292000000006, 0.002047388000000011]</msg>
<status status="PASS" starttime="20201030 18:27:44.458" endtime="20201030 18:27:44.465"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.448" endtime="20201030 18:27:44.466"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:44.470" endtime="20201030 18:27:44.489"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.468" endtime="20201030 18:27:44.490"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.467" endtime="20201030 18:27:44.490"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.962" endtime="20201030 18:27:44.490"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.962" endtime="20201030 18:27:44.490"></status>
</kw>
<kw name="${n} = 34" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:44.499" endtime="20201030 18:27:44.621"></status>
</kw>
<msg timestamp="20201030 18:27:44.621" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:44.497" endtime="20201030 18:27:44.622"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:44.624" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:44.622" endtime="20201030 18:27:44.624"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:44.625" endtime="20201030 18:27:44.626"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.495" endtime="20201030 18:27:44.627"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.493" endtime="20201030 18:27:44.627"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:44.634" endtime="20201030 18:27:44.923"></status>
</kw>
<msg timestamp="20201030 18:27:44.926" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018771944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020925944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:44.632" endtime="20201030 18:27:44.926"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:44.934" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018771944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020925944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:44.927" endtime="20201030 18:27:44.934"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:44.935" endtime="20201030 18:27:44.937"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.630" endtime="20201030 18:27:44.937"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.628" endtime="20201030 18:27:44.937"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:44.941" level="INFO">${PHILIP_RES} = [{'diff': 0.0021539999999999997}, {'diff': 0.002151568999999999}, {'diff': 0.002151430999999999}, {'diff': 0.0021513470000000014}, {'diff': 0.0021515840000000015}, {'diff': 0.0021516250000000008}, {'d...</msg>
<status status="PASS" starttime="20201030 18:27:44.938" endtime="20201030 18:27:44.942"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:44.946" level="INFO">${RESULT} = {'diff': [0.0021539999999999997, 0.002151568999999999, 0.002151430999999999, 0.0021513470000000014, 0.0021515840000000015, 0.0021516250000000008, 0.0021515130000000007, 0.002151486000000001, 0.0021516...</msg>
<status status="PASS" starttime="20201030 18:27:44.942" endtime="20201030 18:27:44.946"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:44.950" level="INFO">NAME: 34-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:44.949" endtime="20201030 18:27:44.951"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:44.953" level="INFO">VALUE: [0.0021539999999999997, 0.002151568999999999, 0.002151430999999999, 0.0021513470000000014, 0.0021515840000000015, 0.0021516250000000008, 0.0021515130000000007, 0.002151486000000001, 0.0021516810000000025, 0.002151555999999999, 0.002151445000000002, 0.0021515000000000006, 0.002151374999999997, 0.0021514719999999946, 0.002151514, 0.0021514310000000023, 0.0021515000000000006, 0.0021514440000000024, 0.0021515279999999998, 0.002151416000000003, 0.0021514170000000027, 0.002151291999999999, 0.0021514589999999945, 0.002151458000000009, 0.002151457999999995, 0.0021515829999999986, 0.002151305000000006, 0.0021513889999999897, 0.002151486000000008, 0.002151375000000011, 0.0021515000000000006, 0.002151485999999994, 0.0021513890000000035, 0.0021514309999999953, 0.0021515000000000006, 0.002151457999999995, 0.0021513060000000056, 0.0021515829999999986, 0.002151473000000001, 0.002151388000000004, 0.002151458000000009, 0.002151458000000009, 0.002151540999999993, 0.002151485999999994, 0.002151458000000009, 0.0021514309999999953, 0.0021514309999999814, 0.0021512779999999787, 0.0021513049999999923, 0.002151429999999982]</msg>
<status status="PASS" starttime="20201030 18:27:44.951" endtime="20201030 18:27:44.957"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.947" endtime="20201030 18:27:44.958"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:44.962" endtime="20201030 18:27:44.981"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.960" endtime="20201030 18:27:44.982"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.959" endtime="20201030 18:27:44.982"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.491" endtime="20201030 18:27:44.982"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.491" endtime="20201030 18:27:44.982"></status>
</kw>
<kw name="${n} = 35" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:44.991" endtime="20201030 18:27:45.118"></status>
</kw>
<msg timestamp="20201030 18:27:45.119" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:44.989" endtime="20201030 18:27:45.119"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:45.121" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:45.120" endtime="20201030 18:27:45.122"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:45.123" endtime="20201030 18:27:45.124"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.987" endtime="20201030 18:27:45.125"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.985" endtime="20201030 18:27:45.125"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:45.132" endtime="20201030 18:27:45.442"></status>
</kw>
<msg timestamp="20201030 18:27:45.445" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018666014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020926458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:45.130" endtime="20201030 18:27:45.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:45.453" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018666014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020926458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:45.446" endtime="20201030 18:27:45.453"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:45.454" endtime="20201030 18:27:45.456"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:45.127" endtime="20201030 18:27:45.456"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:45.126" endtime="20201030 18:27:45.457"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:45.460" level="INFO">${PHILIP_RES} = [{'diff': 0.002260443999999997}, {'diff': 0.0022579999999999996}, {'diff': 0.0022580269999999993}, {'diff': 0.002257791999999998}, {'diff': 0.0022578749999999995}, {'diff': 0.0022578610000000034}, {'d...</msg>
<status status="PASS" starttime="20201030 18:27:45.457" endtime="20201030 18:27:45.461"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:45.464" level="INFO">${RESULT} = {'diff': [0.002260443999999997, 0.0022579999999999996, 0.0022580269999999993, 0.002257791999999998, 0.0022578749999999995, 0.0022578610000000034, 0.0022579450000000043, 0.0022578879999999996, 0.002257...</msg>
<status status="PASS" starttime="20201030 18:27:45.461" endtime="20201030 18:27:45.465"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:45.469" level="INFO">NAME: 35-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:45.468" endtime="20201030 18:27:45.469"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:45.471" level="INFO">VALUE: [0.002260443999999997, 0.0022579999999999996, 0.0022580269999999993, 0.002257791999999998, 0.0022578749999999995, 0.0022578610000000034, 0.0022579450000000043, 0.0022578879999999996, 0.002257652000000006, 0.0022579030000000055, 0.0022577920000000015, 0.0022579859999999966, 0.002257750000000003, 0.0022577359999999963, 0.002257666999999998, 0.002257723000000003, 0.0022575830000000005, 0.0022577360000000032, 0.0022578340000000002, 0.002257750000000003, 0.0022578189999999942, 0.002257888999999999, 0.0022576110000000066, 0.0022576529999999984, 0.002257707999999997, 0.002257707999999997, 0.002257861, 0.0022580970000000006, 0.002257999999999996, 0.002257861, 0.002257999999999996, 0.00225800000000001, 0.002258028000000009, 0.002258110999999993, 0.0022581799999999985, 0.0022581249999999997, 0.002257999999999996, 0.0022579029999999917, 0.0022579029999999917, 0.0022578340000000002, 0.002257901999999992, 0.002257916999999998, 0.0022579440000000117, 0.0022580560000000083, 0.0022580270000000235, 0.0022579310000000186, 0.0022580409999999884, 0.0022580560000000083, 0.0022578749999999925, 0.002257959000000004]</msg>
<status status="PASS" starttime="20201030 18:27:45.470" endtime="20201030 18:27:45.472"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:45.465" endtime="20201030 18:27:45.472"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:45.476" endtime="20201030 18:27:45.495"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:45.474" endtime="20201030 18:27:45.496"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:45.473" endtime="20201030 18:27:45.496"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.983" endtime="20201030 18:27:45.497"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.983" endtime="20201030 18:27:45.497"></status>
</kw>
<kw name="${n} = 36" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:45.505" endtime="20201030 18:27:45.639"></status>
</kw>
<msg timestamp="20201030 18:27:45.640" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:45.504" endtime="20201030 18:27:45.640"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:45.642" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:45.641" endtime="20201030 18:27:45.643"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:45.643" endtime="20201030 18:27:45.645"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:45.501" endtime="20201030 18:27:45.646"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:45.499" endtime="20201030 18:27:45.646"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:45.652" endtime="20201030 18:27:45.942"></status>
</kw>
<msg timestamp="20201030 18:27:45.945" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019593861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021963069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:45.651" endtime="20201030 18:27:45.945"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:45.952" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019593861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021963069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:45.946" endtime="20201030 18:27:45.953"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:45.954" endtime="20201030 18:27:45.955"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:45.648" endtime="20201030 18:27:45.956"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:45.647" endtime="20201030 18:27:45.956"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:45.960" level="INFO">${PHILIP_RES} = [{'diff': 0.002369208000000001}, {'diff': 0.0023666379999999973}, {'diff': 0.0023667919999999995}, {'diff': 0.0023666669999999994}, {'diff': 0.002366680000000003}, {'diff': 0.0023669160000000036}, {'d...</msg>
<status status="PASS" starttime="20201030 18:27:45.957" endtime="20201030 18:27:45.960"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:45.964" level="INFO">${RESULT} = {'diff': [0.002369208000000001, 0.0023666379999999973, 0.0023667919999999995, 0.0023666669999999994, 0.002366680000000003, 0.0023669160000000036, 0.002366930000000003, 0.0023667919999999995, 0.0023665...</msg>
<status status="PASS" starttime="20201030 18:27:45.961" endtime="20201030 18:27:45.964"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:45.968" level="INFO">NAME: 36-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:45.967" endtime="20201030 18:27:45.969"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:45.971" level="INFO">VALUE: [0.002369208000000001, 0.0023666379999999973, 0.0023667919999999995, 0.0023666669999999994, 0.002366680000000003, 0.0023669160000000036, 0.002366930000000003, 0.0023667919999999995, 0.0023665979999999975, 0.0023666810000000024, 0.002366750000000001, 0.002366806000000006, 0.0023666529999999963, 0.0023665000000000005, 0.0023666530000000033, 0.002366750000000001, 0.0023668339999999982, 0.0023668619999999974, 0.002366860999999998, 0.0023668329999999987, 0.0023669159999999967, 0.0023668750000000044, 0.0023669030000000035, 0.002366805999999999, 0.0023668329999999987, 0.0023667359999999943, 0.002366707999999995, 0.002366624999999997, 0.002366750000000001, 0.0023667220000000017, 0.002366805999999999, 0.00236691700000001, 0.0023669029999999897, 0.0023668339999999982, 0.0023667919999999926, 0.0023668619999999974, 0.0023668469999999914, 0.002366860999999998, 0.0023669299999999893, 0.002366916999999996, 0.0023668480000000047, 0.0023667639999999934, 0.0023665280000000066, 0.002366596999999998, 0.0023667639999999934, 0.002366889000000011, 0.0023666660000000173, 0.0023667370000000076, 0.002366805999999999, 0.0023668330000000126]</msg>
<status status="PASS" starttime="20201030 18:27:45.969" endtime="20201030 18:27:45.972"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:45.965" endtime="20201030 18:27:45.973"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:45.976" endtime="20201030 18:27:45.998"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:45.975" endtime="20201030 18:27:45.999"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:45.974" endtime="20201030 18:27:45.999"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:45.498" endtime="20201030 18:27:46.000"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:45.497" endtime="20201030 18:27:46.001"></status>
</kw>
<kw name="${n} = 37" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:46.019" endtime="20201030 18:27:46.161"></status>
</kw>
<msg timestamp="20201030 18:27:46.162" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:46.016" endtime="20201030 18:27:46.163"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:46.168" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:46.165" endtime="20201030 18:27:46.168"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:46.170" endtime="20201030 18:27:46.173"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.011" endtime="20201030 18:27:46.174"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.006" endtime="20201030 18:27:46.175"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:46.189" endtime="20201030 18:27:46.500"></status>
</kw>
<msg timestamp="20201030 18:27:46.503" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034002708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036483611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:46.185" endtime="20201030 18:27:46.503"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:46.511" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034002708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036483611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:46.504" endtime="20201030 18:27:46.511"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:46.512" endtime="20201030 18:27:46.514"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.180" endtime="20201030 18:27:46.514"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.176" endtime="20201030 18:27:46.515"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:46.518" level="INFO">${PHILIP_RES} = [{'diff': 0.0024809029999999996}, {'diff': 0.002478374999999998}, {'diff': 0.0024785000000000015}, {'diff': 0.0024783189999999997}, {'diff': 0.002478486000000002}, {'diff': 0.0024785000000000015}, {'d...</msg>
<status status="PASS" starttime="20201030 18:27:46.515" endtime="20201030 18:27:46.519"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:46.523" level="INFO">${RESULT} = {'diff': [0.0024809029999999996, 0.002478374999999998, 0.0024785000000000015, 0.0024783189999999997, 0.002478486000000002, 0.0024785000000000015, 0.002478402999999997, 0.002478514000000001, 0.00247855...</msg>
<status status="PASS" starttime="20201030 18:27:46.519" endtime="20201030 18:27:46.523"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:46.528" level="INFO">NAME: 37-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:46.527" endtime="20201030 18:27:46.528"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:46.530" level="INFO">VALUE: [0.0024809029999999996, 0.002478374999999998, 0.0024785000000000015, 0.0024783189999999997, 0.002478486000000002, 0.0024785000000000015, 0.002478402999999997, 0.002478514000000001, 0.0024785550000000003, 0.0024785420000000002, 0.0024783889999999975, 0.002478514000000001, 0.0024784590000000023, 0.0024783610000000122, 0.0024785410000000008, 0.0024785410000000008, 0.002478555999999993, 0.0024785560000000068, 0.0024784309999999893, 0.0024784170000000105, 0.002478597000000013, 0.0024785279999999937, 0.0024786939999999896, 0.0024786390000000047, 0.0024785560000000068, 0.002478444999999996, 0.0024785830000000064, 0.002478555999999993, 0.002478624999999998, 0.002478569, 0.002478624999999998, 0.0024785000000000085, 0.002478375000000005, 0.002478638999999991, 0.0024786109999999917, 0.0024786390000000047, 0.002478596999999999, 0.002478596999999999, 0.0024786390000000047, 0.002478569000000014, 0.0024786249999999843, 0.0024784999999999946, 0.002478625000000012, 0.0024785420000000002, 0.002478457999999989, 0.0024784169999999828, 0.0024784999999999946, 0.0024785700000000133, 0.002478444000000024, 0.0024784169999999828]</msg>
<status status="PASS" starttime="20201030 18:27:46.529" endtime="20201030 18:27:46.531"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.524" endtime="20201030 18:27:46.531"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:46.535" endtime="20201030 18:27:46.554"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.533" endtime="20201030 18:27:46.555"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.532" endtime="20201030 18:27:46.555"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.003" endtime="20201030 18:27:46.555"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.002" endtime="20201030 18:27:46.556"></status>
</kw>
<kw name="${n} = 38" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:46.564" endtime="20201030 18:27:46.709"></status>
</kw>
<msg timestamp="20201030 18:27:46.710" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:46.563" endtime="20201030 18:27:46.710"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:46.712" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:46.711" endtime="20201030 18:27:46.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:46.713" endtime="20201030 18:27:46.715"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.560" endtime="20201030 18:27:46.715"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.558" endtime="20201030 18:27:46.716"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:46.722" endtime="20201030 18:27:47.013"></status>
</kw>
<msg timestamp="20201030 18:27:47.016" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018815347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021410236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:46.721" endtime="20201030 18:27:47.016"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:47.027" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018815347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021410236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:47.017" endtime="20201030 18:27:47.028"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:47.030" endtime="20201030 18:27:47.033"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.718" endtime="20201030 18:27:47.034"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.716" endtime="20201030 18:27:47.035"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:47.043" level="INFO">${PHILIP_RES} = [{'diff': 0.0025948889999999995}, {'diff': 0.002592153}, {'diff': 0.002592195000000002}, {'diff': 0.0025923480000000013}, {'diff': 0.002592430999999999}, {'diff': 0.0025923610000000014}, {'diff': 0.00...</msg>
<status status="PASS" starttime="20201030 18:27:47.037" endtime="20201030 18:27:47.044"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:47.052" level="INFO">${RESULT} = {'diff': [0.0025948889999999995, 0.002592153, 0.002592195000000002, 0.0025923480000000013, 0.002592430999999999, 0.0025923610000000014, 0.0025924169999999996, 0.0025923330000000022, 0.0025921809999999...</msg>
<status status="PASS" starttime="20201030 18:27:47.045" endtime="20201030 18:27:47.052"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:47.061" level="INFO">NAME: 38-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:47.058" endtime="20201030 18:27:47.061"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:47.066" level="INFO">VALUE: [0.0025948889999999995, 0.002592153, 0.002592195000000002, 0.0025923480000000013, 0.002592430999999999, 0.0025923610000000014, 0.0025924169999999996, 0.0025923330000000022, 0.002592180999999999, 0.002592347000000002, 0.002592457999999999, 0.0025924169999999996, 0.002592457999999999, 0.002592375000000001, 0.002592347000000002, 0.002592374999999994, 0.0025922500000000043, 0.002592514000000004, 0.002592569000000003, 0.0025925560000000097, 0.0025924300000000067, 0.002592597000000002, 0.002592625000000001, 0.0025925410000000038, 0.0025925420000000032, 0.002592263999999997, 0.0025925279999999967, 0.0025924019999999937, 0.0025923890000000005, 0.0025923610000000014, 0.002592403000000007, 0.002592457999999992, 0.0025925129999999907, 0.0025924999999999976, 0.002592514000000004, 0.002592638999999994, 0.0025926109999999947, 0.0025927089999999986, 0.002592707999999999, 0.0025926109999999947, 0.002592485999999977, 0.0025924439999999993, 0.0025926809999999856, 0.0025927919999999827, 0.0025926249999999873, 0.0025926390000000077, 0.002592486000000005, 0.002592375000000008, 0.002592486000000005, 0.0025923329999999745]</msg>
<status status="PASS" starttime="20201030 18:27:47.063" endtime="20201030 18:27:47.067"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.053" endtime="20201030 18:27:47.068"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:47.076" endtime="20201030 18:27:47.098"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.073" endtime="20201030 18:27:47.099"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.070" endtime="20201030 18:27:47.100"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.556" endtime="20201030 18:27:47.100"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.556" endtime="20201030 18:27:47.101"></status>
</kw>
<kw name="${n} = 39" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:47.118" endtime="20201030 18:27:47.273"></status>
</kw>
<msg timestamp="20201030 18:27:47.273" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:47.115" endtime="20201030 18:27:47.273"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:47.275" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:47.274" endtime="20201030 18:27:47.276"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:47.277" endtime="20201030 18:27:47.278"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.110" endtime="20201030 18:27:47.279"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.106" endtime="20201030 18:27:47.279"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:47.286" endtime="20201030 18:27:47.576"></status>
</kw>
<msg timestamp="20201030 18:27:47.579" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034323778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037035139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:47.284" endtime="20201030 18:27:47.579"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:47.587" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034323778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037035139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:47.580" endtime="20201030 18:27:47.587"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:47.588" endtime="20201030 18:27:47.589"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.282" endtime="20201030 18:27:47.590"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.280" endtime="20201030 18:27:47.590"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:47.594" level="INFO">${PHILIP_RES} = [{'diff': 0.0027113610000000024}, {'diff': 0.002708805999999994}, {'diff': 0.0027089309999999978}, {'diff': 0.0027087089999999966}, {'diff': 0.0027087639999999955}, {'diff': 0.0027090410000000023}, {'...</msg>
<status status="PASS" starttime="20201030 18:27:47.591" endtime="20201030 18:27:47.594"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:47.598" level="INFO">${RESULT} = {'diff': [0.0027113610000000024, 0.002708805999999994, 0.0027089309999999978, 0.0027087089999999966, 0.0027087639999999955, 0.0027090410000000023, 0.0027091519999999994, 0.0027091249999999997, 0.00270...</msg>
<status status="PASS" starttime="20201030 18:27:47.595" endtime="20201030 18:27:47.598"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:47.603" level="INFO">NAME: 39-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:47.602" endtime="20201030 18:27:47.604"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:47.606" level="INFO">VALUE: [0.0027113610000000024, 0.002708805999999994, 0.0027089309999999978, 0.0027087089999999966, 0.0027087639999999955, 0.0027090410000000023, 0.0027091519999999994, 0.0027091249999999997, 0.002709098, 0.002709152999999992, 0.0027091389999999993, 0.002709069999999994, 0.0027090840000000005, 0.0027092079999999907, 0.0027092779999999955, 0.002709000000000003, 0.0027091119999999996, 0.002709055000000002, 0.002709041999999995, 0.0027090140000000096, 0.0027090969999999936, 0.0027089859999999966, 0.0027089309999999978, 0.0027089029999999986, 0.0027088749999999995, 0.0027089159999999918, 0.002708972000000004, 0.002708889000000006, 0.002708930000000012, 0.002708861000000007, 0.0027090140000000096, 0.0027089730000000034, 0.002709028000000002, 0.0027090279999999745, 0.0027089440000000187, 0.002709028000000002, 0.0027089580000000113, 0.0027090690000000084, 0.002709054999999988, 0.0027091530000000197, 0.002709181000000005, 0.002708943999999991, 0.002708777999999995, 0.002708902000000013, 0.0027089160000000057, 0.0027090969999999936, 0.002709181000000005, 0.0027091119999999858, 0.002709152999999992, 0.002709000000000017]</msg>
<status status="PASS" starttime="20201030 18:27:47.604" endtime="20201030 18:27:47.607"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.599" endtime="20201030 18:27:47.608"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:47.612" endtime="20201030 18:27:47.631"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.610" endtime="20201030 18:27:47.632"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.609" endtime="20201030 18:27:47.632"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.103" endtime="20201030 18:27:47.632"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.102" endtime="20201030 18:27:47.632"></status>
</kw>
<kw name="${n} = 40" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:47.641" endtime="20201030 18:27:47.798"></status>
</kw>
<msg timestamp="20201030 18:27:47.799" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:47.639" endtime="20201030 18:27:47.799"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:47.802" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:47.800" endtime="20201030 18:27:47.803"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:47.803" endtime="20201030 18:27:47.805"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.637" endtime="20201030 18:27:47.805"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.635" endtime="20201030 18:27:47.806"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:47.812" endtime="20201030 18:27:48.120"></status>
</kw>
<msg timestamp="20201030 18:27:48.123" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018714875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021545403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:47.811" endtime="20201030 18:27:48.123"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:48.132" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018714875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021545403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:48.124" endtime="20201030 18:27:48.133"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:48.133" endtime="20201030 18:27:48.135"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.808" endtime="20201030 18:27:48.136"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.806" endtime="20201030 18:27:48.136"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:48.140" level="INFO">${PHILIP_RES} = [{'diff': 0.0028305280000000023}, {'diff': 0.002827973000000001}, {'diff': 0.0028279720000000015}, {'diff': 0.002828111000000001}, {'diff': 0.002828068999999999}, {'diff': 0.002828292000000003}, {'dif...</msg>
<status status="PASS" starttime="20201030 18:27:48.137" endtime="20201030 18:27:48.140"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:48.146" level="INFO">${RESULT} = {'diff': [0.0028305280000000023, 0.002827973000000001, 0.0028279720000000015, 0.002828111000000001, 0.002828068999999999, 0.002828292000000003, 0.0028280970000000016, 0.002828055000000003, 0.002828042...</msg>
<status status="PASS" starttime="20201030 18:27:48.141" endtime="20201030 18:27:48.147"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:48.152" level="INFO">NAME: 40-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:48.151" endtime="20201030 18:27:48.153"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:48.156" level="INFO">VALUE: [0.0028305280000000023, 0.002827973000000001, 0.0028279720000000015, 0.002828111000000001, 0.002828068999999999, 0.002828292000000003, 0.0028280970000000016, 0.002828055000000003, 0.002828042000000003, 0.0028280969999999947, 0.0028278339999999944, 0.002827749999999997, 0.0028276939999999987, 0.0028278340000000013, 0.0028277770000000035, 0.0028278750000000075, 0.0028279580000000054, 0.002827889, 0.0028279169999999992, 0.002828111000000008, 0.0028279859999999907, 0.0028280279999999963, 0.0028279159999999998, 0.0028279030000000066, 0.0028279169999999992, 0.0028280140000000037, 0.0028280559999999955, 0.002827889, 0.0028278620000000004, 0.002828054999999996, 0.002827959000000005, 0.002828026999999997, 0.002827999999999997, 0.0028279169999999992, 0.0028279299999999924, 0.002828054999999996, 0.002827999999999997, 0.0028280270000000107, 0.002828054999999996, 0.0028279590000000188, 0.0028280970000000016, 0.0028282500000000044, 0.0028283199999999953, 0.002828194000000006, 0.002828222000000019, 0.002828263999999997, 0.0028283329999999884, 0.0028282779999999896, 0.002828208999999998, 0.0028282079999999987]</msg>
<status status="PASS" starttime="20201030 18:27:48.154" endtime="20201030 18:27:48.161"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.148" endtime="20201030 18:27:48.162"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:48.169" endtime="20201030 18:27:48.190"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.167" endtime="20201030 18:27:48.190"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.165" endtime="20201030 18:27:48.191"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.633" endtime="20201030 18:27:48.191"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.633" endtime="20201030 18:27:48.191"></status>
</kw>
<kw name="${n} = 41" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:48.199" endtime="20201030 18:27:48.363"></status>
</kw>
<msg timestamp="20201030 18:27:48.364" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:48.198" endtime="20201030 18:27:48.364"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:48.366" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:48.365" endtime="20201030 18:27:48.366"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:48.367" endtime="20201030 18:27:48.369"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.195" endtime="20201030 18:27:48.370"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.193" endtime="20201030 18:27:48.370"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:48.376" endtime="20201030 18:27:48.676"></status>
</kw>
<msg timestamp="20201030 18:27:48.682" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018941875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021894222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:48.375" endtime="20201030 18:27:48.682"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:48.699" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018941875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021894222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:48.684" endtime="20201030 18:27:48.699"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:48.701" endtime="20201030 18:27:48.704"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.372" endtime="20201030 18:27:48.705"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.371" endtime="20201030 18:27:48.706"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:48.714" level="INFO">${PHILIP_RES} = [{'diff': 0.002952347000000001}, {'diff': 0.002949778}, {'diff': 0.0029496939999999992}, {'diff': 0.0029496249999999974}, {'diff': 0.0029494720000000016}, {'diff': 0.0029495270000000004}, {'diff': 0.0...</msg>
<status status="PASS" starttime="20201030 18:27:48.708" endtime="20201030 18:27:48.715"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:48.723" level="INFO">${RESULT} = {'diff': [0.002952347000000001, 0.002949778, 0.0029496939999999992, 0.0029496249999999974, 0.0029494720000000016, 0.0029495270000000004, 0.0029495699999999986, 0.002949639000000004, 0.0029495840000000...</msg>
<status status="PASS" starttime="20201030 18:27:48.716" endtime="20201030 18:27:48.723"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:48.732" level="INFO">NAME: 41-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:48.729" endtime="20201030 18:27:48.732"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:48.736" level="INFO">VALUE: [0.002952347000000001, 0.002949778, 0.0029496939999999992, 0.0029496249999999974, 0.0029494720000000016, 0.0029495270000000004, 0.0029495699999999986, 0.002949639000000004, 0.002949584000000005, 0.002949667000000003, 0.0029495549999999995, 0.0029495549999999995, 0.0029496529999999965, 0.002949777999999993, 0.002949750000000001, 0.0029497919999999928, 0.00294994400000001, 0.0029496529999999965, 0.0029497640000000075, 0.0029498339999999984, 0.002949639000000004, 0.002949737000000008, 0.002949943999999996, 0.002949832999999999, 0.002949805, 0.0029496810000000095, 0.0029497359999999945, 0.002949888999999997, 0.00294963899999999, 0.0029495969999999982, 0.002949666999999989, 0.002949527999999993, 0.0029497090000000087, 0.0029498059999999993, 0.0029495969999999982, 0.0029496799999999823, 0.0029495969999999982, 0.002949499999999994, 0.0029496250000000113, 0.0029496249999999835, 0.002949805, 0.002949610999999991, 0.002949584000000005, 0.002949695000000002, 0.002949695000000002, 0.0029500130000000013, 0.0029497920000000066, 0.002949708999999995, 0.0029495419999999994, 0.002949708999999995]</msg>
<status status="PASS" starttime="20201030 18:27:48.734" endtime="20201030 18:27:48.738"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.725" endtime="20201030 18:27:48.739"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:48.745" endtime="20201030 18:27:48.764"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.743" endtime="20201030 18:27:48.765"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.741" endtime="20201030 18:27:48.765"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.192" endtime="20201030 18:27:48.765"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.191" endtime="20201030 18:27:48.765"></status>
</kw>
<kw name="${n} = 42" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:48.774" endtime="20201030 18:27:48.945"></status>
</kw>
<msg timestamp="20201030 18:27:48.945" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:48.772" endtime="20201030 18:27:48.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:48.948" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:48.946" endtime="20201030 18:27:48.948"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:48.949" endtime="20201030 18:27:48.951"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.770" endtime="20201030 18:27:48.952"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.768" endtime="20201030 18:27:48.952"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:48.958" endtime="20201030 18:27:49.249"></status>
</kw>
<msg timestamp="20201030 18:27:49.252" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019671472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022747583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:48.957" endtime="20201030 18:27:49.252"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:49.259" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019671472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022747583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:49.253" endtime="20201030 18:27:49.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:49.261" endtime="20201030 18:27:49.262"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.954" endtime="20201030 18:27:49.263"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.953" endtime="20201030 18:27:49.263"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:49.267" level="INFO">${PHILIP_RES} = [{'diff': 0.0030761109999999994}, {'diff': 0.003073652999999999}, {'diff': 0.0030733340000000005}, {'diff': 0.0030734860000000003}, {'diff': 0.0030734720000000007}, {'diff': 0.0030734590000000006}, {'...</msg>
<status status="PASS" starttime="20201030 18:27:49.264" endtime="20201030 18:27:49.267"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:49.271" level="INFO">${RESULT} = {'diff': [0.0030761109999999994, 0.003073652999999999, 0.0030733340000000005, 0.0030734860000000003, 0.0030734720000000007, 0.0030734590000000006, 0.003073610999999997, 0.003073611000000004, 0.0030736...</msg>
<status status="PASS" starttime="20201030 18:27:49.268" endtime="20201030 18:27:49.271"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:49.275" level="INFO">NAME: 42-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:49.274" endtime="20201030 18:27:49.276"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:49.278" level="INFO">VALUE: [0.0030761109999999994, 0.003073652999999999, 0.0030733340000000005, 0.0030734860000000003, 0.0030734720000000007, 0.0030734590000000006, 0.003073610999999997, 0.003073611000000004, 0.0030736799999999953, 0.0030735419999999986, 0.003073639000000003, 0.003073791999999999, 0.0030737360000000005, 0.003073749999999993, 0.003073819999999991, 0.0030737640000000066, 0.003073721999999987, 0.003073804999999999, 0.003073665999999989, 0.0030738060000000123, 0.0030738339999999975, 0.0030738059999999984, 0.0030737920000000057, 0.003073832999999998, 0.0030739719999999943, 0.0030740689999999987, 0.0030739999999999934, 0.0030739450000000085, 0.003073639000000003, 0.0030737360000000075, 0.0030737779999999992, 0.0030739860000000008, 0.00307375, 0.0030736120000000033, 0.003073639000000017, 0.0030738190000000054, 0.0030737909999999924, 0.0030737640000000066, 0.0030736660000000027, 0.0030738050000000128, 0.003073638999999989, 0.0030735139999999994, 0.00307370899999998, 0.0030736799999999953, 0.0030737359999999936, 0.0030735420000000124, 0.00307365200000001, 0.003073582999999991, 0.003073388999999982, 0.0030735139999999994]</msg>
<status status="PASS" starttime="20201030 18:27:49.276" endtime="20201030 18:27:49.281"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.272" endtime="20201030 18:27:49.282"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:49.286" endtime="20201030 18:27:49.305"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.284" endtime="20201030 18:27:49.306"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.283" endtime="20201030 18:27:49.306"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.766" endtime="20201030 18:27:49.306"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.766" endtime="20201030 18:27:49.306"></status>
</kw>
<kw name="${n} = 43" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:49.315" endtime="20201030 18:27:49.493"></status>
</kw>
<msg timestamp="20201030 18:27:49.494" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:49.313" endtime="20201030 18:27:49.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:49.499" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:49.496" endtime="20201030 18:27:49.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:49.501" endtime="20201030 18:27:49.504"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.311" endtime="20201030 18:27:49.505"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.309" endtime="20201030 18:27:49.506"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:49.520" endtime="20201030 18:27:49.818"></status>
</kw>
<msg timestamp="20201030 18:27:49.821" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018581444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021784194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:49.516" endtime="20201030 18:27:49.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:49.828" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018581444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021784194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:49.822" endtime="20201030 18:27:49.829"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:49.829" endtime="20201030 18:27:49.831"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.511" endtime="20201030 18:27:49.832"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.508" endtime="20201030 18:27:49.832"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:49.836" level="INFO">${PHILIP_RES} = [{'diff': 0.0032027500000000007}, {'diff': 0.0032000559999999997}, {'diff': 0.0031998750000000013}, {'diff': 0.0031998329999999957}, {'diff': 0.003199693999999996}, {'diff': 0.0031997359999999947}, {'...</msg>
<status status="PASS" starttime="20201030 18:27:49.833" endtime="20201030 18:27:49.836"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:49.840" level="INFO">${RESULT} = {'diff': [0.0032027500000000007, 0.0032000559999999997, 0.0031998750000000013, 0.0031998329999999957, 0.003199693999999996, 0.0031997359999999947, 0.0031999299999999967, 0.0031997910000000004, 0.00319...</msg>
<status status="PASS" starttime="20201030 18:27:49.837" endtime="20201030 18:27:49.841"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:49.845" level="INFO">NAME: 43-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:49.844" endtime="20201030 18:27:49.845"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:49.847" level="INFO">VALUE: [0.0032027500000000007, 0.0032000559999999997, 0.0031998750000000013, 0.0031998329999999957, 0.003199693999999996, 0.0031997359999999947, 0.0031999299999999967, 0.0031997910000000004, 0.0031998059999999995, 0.0031999719999999954, 0.003199930999999996, 0.003200014000000001, 0.0031999170000000035, 0.003199916000000011, 0.0031999580000000027, 0.0031998339999999986, 0.0032001529999999972, 0.0032001390000000046, 0.003200042, 0.0032000699999999993, 0.0031999580000000027, 0.0032000279999999937, 0.0031998609999999983, 0.0032001670000000038, 0.003200014000000001, 0.0032001660000000043, 0.0032001529999999972, 0.003200055000000007, 0.003200097000000013, 0.0031999580000000027, 0.0031999719999999954, 0.003200125000000012, 0.003200042000000014, 0.0031999580000000027, 0.0031999860000000158, 0.0031997629999999944, 0.003199915999999997, 0.00319982000000002, 0.0031999860000000158, 0.0032001390000000185, 0.0032000829999999925, 0.0031999719999999954, 0.0032002089999999817, 0.003200319000000007, 0.0032001109999999777, 0.003200096999999985, 0.0032001950000000168, 0.0032000830000000202, 0.0032001950000000168, 0.0032000279999999937]</msg>
<status status="PASS" starttime="20201030 18:27:49.846" endtime="20201030 18:27:49.848"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.841" endtime="20201030 18:27:49.848"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:49.852" endtime="20201030 18:27:49.871"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.851" endtime="20201030 18:27:49.872"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.849" endtime="20201030 18:27:49.872"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.307" endtime="20201030 18:27:49.873"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.307" endtime="20201030 18:27:49.873"></status>
</kw>
<kw name="${n} = 44" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:49.881" endtime="20201030 18:27:50.065"></status>
</kw>
<msg timestamp="20201030 18:27:50.065" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:49.879" endtime="20201030 18:27:50.065"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:50.067" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:50.066" endtime="20201030 18:27:50.068"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:50.069" endtime="20201030 18:27:50.070"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.877" endtime="20201030 18:27:50.071"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.875" endtime="20201030 18:27:50.071"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:50.078" endtime="20201030 18:27:50.387"></status>
</kw>
<msg timestamp="20201030 18:27:50.390" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018595681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021927028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:50.076" endtime="20201030 18:27:50.390"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:50.397" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018595681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021927028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:50.391" endtime="20201030 18:27:50.398"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:50.398" endtime="20201030 18:27:50.400"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.074" endtime="20201030 18:27:50.401"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.072" endtime="20201030 18:27:50.401"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:50.405" level="INFO">${PHILIP_RES} = [{'diff': 0.003331347000000002}, {'diff': 0.003328833}, {'diff': 0.0033284579999999994}, {'diff': 0.0033283050000000036}, {'diff': 0.003328570000000003}, {'diff': 0.0033285409999999974}, {'diff': 0.00...</msg>
<status status="PASS" starttime="20201030 18:27:50.402" endtime="20201030 18:27:50.405"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:50.409" level="INFO">${RESULT} = {'diff': [0.003331347000000002, 0.003328833, 0.0033284579999999994, 0.0033283050000000036, 0.003328570000000003, 0.0033285409999999974, 0.003328653000000001, 0.003328417, 0.003328471999999999, 0.00332...</msg>
<status status="PASS" starttime="20201030 18:27:50.406" endtime="20201030 18:27:50.409"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:50.413" level="INFO">NAME: 44-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:50.412" endtime="20201030 18:27:50.413"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:50.415" level="INFO">VALUE: [0.003331347000000002, 0.003328833, 0.0033284579999999994, 0.0033283050000000036, 0.003328570000000003, 0.0033285409999999974, 0.003328653000000001, 0.003328417, 0.003328471999999999, 0.003328417, 0.0033285139999999977, 0.003328499999999998, 0.0033285409999999974, 0.0033284449999999993, 0.0033285140000000046, 0.0033285839999999955, 0.003328526999999998, 0.003328471999999999, 0.003328554999999997, 0.0033285420000000038, 0.0033284860000000055, 0.003328708999999999, 0.003328653000000001, 0.003328791999999997, 0.003328735999999999, 0.003328722000000006, 0.0033288470000000098, 0.003328681, 0.003328722000000006, 0.0033289170000000007, 0.0033289859999999782, 0.003328875000000009, 0.003328874999999981, 0.0033286800000000005, 0.003328818999999983, 0.003328791999999997, 0.003328986000000006, 0.003328639000000022, 0.0033288890000000015, 0.0033287779999999767, 0.003328791999999997, 0.0033287779999999767, 0.003328973000000013, 0.0033289309999999794, 0.003328652999999987, 0.0033286800000000005, 0.0033287219999999784, 0.0033288610000000163, 0.0033285969999999887, 0.0033287499999999914]</msg>
<status status="PASS" starttime="20201030 18:27:50.414" endtime="20201030 18:27:50.416"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.409" endtime="20201030 18:27:50.416"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:50.420" endtime="20201030 18:27:50.439"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.418" endtime="20201030 18:27:50.440"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.417" endtime="20201030 18:27:50.440"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.874" endtime="20201030 18:27:50.441"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.873" endtime="20201030 18:27:50.441"></status>
</kw>
<kw name="${n} = 45" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:50.449" endtime="20201030 18:27:50.640"></status>
</kw>
<msg timestamp="20201030 18:27:50.641" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:50.448" endtime="20201030 18:27:50.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:50.643" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:50.642" endtime="20201030 18:27:50.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:50.644" endtime="20201030 18:27:50.646"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.445" endtime="20201030 18:27:50.646"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.443" endtime="20201030 18:27:50.647"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:50.653" endtime="20201030 18:27:50.945"></status>
</kw>
<msg timestamp="20201030 18:27:50.948" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019505667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022968458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:50.652" endtime="20201030 18:27:50.948"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:50.955" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019505667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022968458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:50.949" endtime="20201030 18:27:50.956"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:50.956" endtime="20201030 18:27:50.958"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.649" endtime="20201030 18:27:50.958"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.647" endtime="20201030 18:27:50.959"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:50.963" level="INFO">${PHILIP_RES} = [{'diff': 0.003462791}, {'diff': 0.0034603050000000003}, {'diff': 0.003460167}, {'diff': 0.003460056000000003}, {'diff': 0.003460319999999996}, {'diff': 0.003460236999999998}, {'diff': 0.0034602219999...</msg>
<status status="PASS" starttime="20201030 18:27:50.960" endtime="20201030 18:27:50.963"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:50.982" level="INFO">${RESULT} = {'diff': [0.003462791, 0.0034603050000000003, 0.003460167, 0.003460056000000003, 0.003460319999999996, 0.003460236999999998, 0.003460221999999999, 0.003460040999999997, 0.003460056000000003, 0.0034600...</msg>
<status status="PASS" starttime="20201030 18:27:50.964" endtime="20201030 18:27:50.982"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:50.986" level="INFO">NAME: 45-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:50.985" endtime="20201030 18:27:50.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:50.988" level="INFO">VALUE: [0.003462791, 0.0034603050000000003, 0.003460167, 0.003460056000000003, 0.003460319999999996, 0.003460236999999998, 0.003460221999999999, 0.003460040999999997, 0.003460056000000003, 0.003460056000000003, 0.003459875000000001, 0.0034599719999999987, 0.003459819000000003, 0.003460139000000001, 0.0034601809999999927, 0.0034602090000000058, 0.003460082999999989, 0.0034601250000000083, 0.003460139000000001, 0.0034602639999999907, 0.0034602080000000063, 0.0034601949999999992, 0.0034603340000000093, 0.0034603750000000016, 0.0034603750000000016, 0.0034604579999999996, 0.003460443999999993, 0.0034601949999999992, 0.003460278000000011, 0.0034602639999999907, 0.0034601529999999936, 0.003460167000000014, 0.0034601529999999936, 0.003460249999999998, 0.003460389000000008, 0.0034604450000000064, 0.003460444000000007, 0.0034605000000000052, 0.0034601949999999992, 0.0034600420000000243, 0.0034603059999999963, 0.0034603059999999963, 0.0034602779999999833, 0.003460278000000011, 0.0034602359999999777, 0.00346020800000002, 0.0034604869999999843, 0.00346033300000001, 0.003460430999999986, 0.003460249999999998]</msg>
<status status="PASS" starttime="20201030 18:27:50.987" endtime="20201030 18:27:50.990"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.983" endtime="20201030 18:27:50.990"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:50.994" endtime="20201030 18:27:51.014"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.993" endtime="20201030 18:27:51.014"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.991" endtime="20201030 18:27:51.014"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.442" endtime="20201030 18:27:51.015"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.441" endtime="20201030 18:27:51.015"></status>
</kw>
<kw name="${n} = 46" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:51.023" endtime="20201030 18:27:51.222"></status>
</kw>
<msg timestamp="20201030 18:27:51.223" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:51.022" endtime="20201030 18:27:51.224"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:51.228" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:51.225" endtime="20201030 18:27:51.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:51.231" endtime="20201030 18:27:51.234"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.019" endtime="20201030 18:27:51.235"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.017" endtime="20201030 18:27:51.236"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:51.249" endtime="20201030 18:27:51.549"></status>
</kw>
<msg timestamp="20201030 18:27:51.552" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018724125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022320875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:51.246" endtime="20201030 18:27:51.552"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:51.559" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018724125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022320875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:51.553" endtime="20201030 18:27:51.559"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:51.560" endtime="20201030 18:27:51.562"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.241" endtime="20201030 18:27:51.562"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.237" endtime="20201030 18:27:51.563"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:51.566" level="INFO">${PHILIP_RES} = [{'diff': 0.0035967499999999993}, {'diff': 0.003594291999999999}, {'diff': 0.0035943059999999985}, {'diff': 0.003594125}, {'diff': 0.003594457999999995}, {'diff': 0.0035945829999999984}, {'diff': 0.00...</msg>
<status status="PASS" starttime="20201030 18:27:51.563" endtime="20201030 18:27:51.567"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:51.571" level="INFO">${RESULT} = {'diff': [0.0035967499999999993, 0.003594291999999999, 0.0035943059999999985, 0.003594125, 0.003594457999999995, 0.0035945829999999984, 0.003594473000000001, 0.003594332999999998, 0.003594264, 0.00359...</msg>
<status status="PASS" starttime="20201030 18:27:51.567" endtime="20201030 18:27:51.571"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:51.575" level="INFO">NAME: 46-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:51.574" endtime="20201030 18:27:51.576"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:51.578" level="INFO">VALUE: [0.0035967499999999993, 0.003594291999999999, 0.0035943059999999985, 0.003594125, 0.003594457999999995, 0.0035945829999999984, 0.003594473000000001, 0.003594332999999998, 0.003594264, 0.0035940839999999974, 0.0035940549999999988, 0.003594040999999999, 0.0035940420000000056, 0.003594110999999997, 0.0035938619999999893, 0.0035941530000000027, 0.003594264, 0.0035940969999999905, 0.0035942499999999933, 0.0035942779999999924, 0.003594374999999997, 0.0035942780000000063, 0.003594264, 0.003594333000000005, 0.003594221999999994, 0.003594291999999999, 0.0035943060000000054, 0.00359440300000001, 0.0035945000000000005, 0.0035942780000000063, 0.0035945000000000005, 0.0035945829999999845, 0.0035945000000000005, 0.003594222000000008, 0.0035944450000000017, 0.0035944730000000147, 0.003594486000000008, 0.0035946800000000168, 0.0035945000000000005, 0.003594304999999992, 0.0035942360000000007, 0.0035940419999999917, 0.0035941519999999894, 0.0035944719999999875, 0.0035943890000000034, 0.003594167000000009, 0.003594514000000021, 0.0035947090000000015, 0.0035943469999999977, 0.003594513999999993]</msg>
<status status="PASS" starttime="20201030 18:27:51.576" endtime="20201030 18:27:51.578"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.572" endtime="20201030 18:27:51.579"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:51.583" endtime="20201030 18:27:51.602"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.581" endtime="20201030 18:27:51.603"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.580" endtime="20201030 18:27:51.603"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.016" endtime="20201030 18:27:51.603"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.015" endtime="20201030 18:27:51.604"></status>
</kw>
<kw name="${n} = 47" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:51.612" endtime="20201030 18:27:51.816"></status>
</kw>
<msg timestamp="20201030 18:27:51.817" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:51.610" endtime="20201030 18:27:51.817"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:51.819" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:51.818" endtime="20201030 18:27:51.819"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:51.820" endtime="20201030 18:27:51.822"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.608" endtime="20201030 18:27:51.822"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.606" endtime="20201030 18:27:51.823"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:51.829" endtime="20201030 18:27:52.140"></status>
</kw>
<msg timestamp="20201030 18:27:52.143" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018576208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022309903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:51.827" endtime="20201030 18:27:52.144"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:52.151" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018576208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022309903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:52.144" endtime="20201030 18:27:52.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:52.152" endtime="20201030 18:27:52.154"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.825" endtime="20201030 18:27:52.154"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.823" endtime="20201030 18:27:52.155"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:52.158" level="INFO">${PHILIP_RES} = [{'diff': 0.0037336949999999987}, {'diff': 0.0037305839999999986}, {'diff': 0.0037307080000000027}, {'diff': 0.003731069}, {'diff': 0.0037309860000000056}, {'diff': 0.003730736999999998}, {'diff': 0.0...</msg>
<status status="PASS" starttime="20201030 18:27:52.155" endtime="20201030 18:27:52.158"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:52.162" level="INFO">${RESULT} = {'diff': [0.0037336949999999987, 0.0037305839999999986, 0.0037307080000000027, 0.003731069, 0.0037309860000000056, 0.003730736999999998, 0.003730778000000004, 0.003730971999999999, 0.00373101300000000...</msg>
<status status="PASS" starttime="20201030 18:27:52.159" endtime="20201030 18:27:52.162"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:52.166" level="INFO">NAME: 47-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:52.165" endtime="20201030 18:27:52.167"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:52.169" level="INFO">VALUE: [0.0037336949999999987, 0.0037305839999999986, 0.0037307080000000027, 0.003731069, 0.0037309860000000056, 0.003730736999999998, 0.003730778000000004, 0.003730971999999999, 0.0037310130000000052, 0.003731082999999996, 0.0037310689999999966, 0.003731041999999997, 0.0037309729999999985, 0.003731263999999998, 0.003731096999999989, 0.0037310279999999973, 0.003731042000000004, 0.003731026999999998, 0.0037309860000000056, 0.003730999999999998, 0.003731069999999989, 0.0037309449999999994, 0.003730999999999998, 0.0037307359999999984, 0.003730806000000003, 0.003730778000000004, 0.00373077799999999, 0.003730695000000006, 0.0037306530000000004, 0.0037309580000000064, 0.0037309729999999985, 0.003730889000000015, 0.003730986999999991, 0.00373090299999998, 0.0037310279999999973, 0.003730680000000014, 0.003730610999999995, 0.003730610999999995, 0.003730666999999993, 0.0037306809999999857, 0.0037305280000000107, 0.003730597000000002, 0.0037304999999999977, 0.0037304310000000063, 0.003730444999999999, 0.0037303479999999944, 0.0037305280000000107, 0.003730180999999999, 0.0037303330000000023, 0.0037305419999999756]</msg>
<status status="PASS" starttime="20201030 18:27:52.168" endtime="20201030 18:27:52.169"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.163" endtime="20201030 18:27:52.170"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:52.174" endtime="20201030 18:27:52.193"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.172" endtime="20201030 18:27:52.194"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.171" endtime="20201030 18:27:52.194"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.604" endtime="20201030 18:27:52.194"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.604" endtime="20201030 18:27:52.195"></status>
</kw>
<kw name="${n} = 48" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:52.203" endtime="20201030 18:27:52.415"></status>
</kw>
<msg timestamp="20201030 18:27:52.416" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:52.201" endtime="20201030 18:27:52.416"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:52.418" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:52.417" endtime="20201030 18:27:52.418"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:52.419" endtime="20201030 18:27:52.421"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.199" endtime="20201030 18:27:52.421"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.197" endtime="20201030 18:27:52.422"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:52.428" endtime="20201030 18:27:52.720"></status>
</kw>
<msg timestamp="20201030 18:27:52.723" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019534097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023406125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:52.427" endtime="20201030 18:27:52.723"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:52.730" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019534097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023406125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:52.724" endtime="20201030 18:27:52.731"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:52.731" endtime="20201030 18:27:52.733"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.424" endtime="20201030 18:27:52.733"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.422" endtime="20201030 18:27:52.734"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:52.738" level="INFO">${PHILIP_RES} = [{'diff': 0.0038720279999999996}, {'diff': 0.0038696670000000002}, {'diff': 0.003869624999999998}, {'diff': 0.0038698190000000035}, {'diff': 0.0038695690000000033}, {'diff': 0.003869611000000002}, {'d...</msg>
<status status="PASS" starttime="20201030 18:27:52.735" endtime="20201030 18:27:52.738"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:52.741" level="INFO">${RESULT} = {'diff': [0.0038720279999999996, 0.0038696670000000002, 0.003869624999999998, 0.0038698190000000035, 0.0038695690000000033, 0.003869611000000002, 0.0038694860000000053, 0.0038695420000000036, 0.003869...</msg>
<status status="PASS" starttime="20201030 18:27:52.739" endtime="20201030 18:27:52.742"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:52.746" level="INFO">NAME: 48-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:52.745" endtime="20201030 18:27:52.746"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:52.748" level="INFO">VALUE: [0.0038720279999999996, 0.0038696670000000002, 0.003869624999999998, 0.0038698190000000035, 0.0038695690000000033, 0.003869611000000002, 0.0038694860000000053, 0.0038695420000000036, 0.003869500000000005, 0.0038694309999999996, 0.0038695690000000033, 0.003869527999999997, 0.003869667000000007, 0.003869708999999999, 0.003869401999999994, 0.003869499999999998, 0.0038694859999999914, 0.0038696250000000015, 0.0038697079999999995, 0.0038697499999999913, 0.003869417, 0.0038694029999999935, 0.0038694859999999914, 0.0038695269999999976, 0.0038693880000000014, 0.003869318999999996, 0.0038694439999999997, 0.003869417000000014, 0.003869208000000013, 0.003869389000000001, 0.0038694310000000065, 0.003869444999999999, 0.003869264000000011, 0.0038693049999999896, 0.0038691939999999925, 0.003869360999999988, 0.0038693330000000026, 0.0038694860000000053, 0.0038695840000000092, 0.003869389000000001, 0.003869264000000011, 0.0038691249999999733, 0.0038692090000000123, 0.003869318999999982, 0.003869389000000001, 0.003869471999999985, 0.0038693750000000082, 0.003869346999999995, 0.0038693330000000026, 0.0038692220000000055]</msg>
<status status="PASS" starttime="20201030 18:27:52.747" endtime="20201030 18:27:52.750"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.742" endtime="20201030 18:27:52.750"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:52.754" endtime="20201030 18:27:52.773"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.752" endtime="20201030 18:27:52.774"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.751" endtime="20201030 18:27:52.774"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.195" endtime="20201030 18:27:52.775"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.195" endtime="20201030 18:27:52.775"></status>
</kw>
<kw name="${n} = 49" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:52.783" endtime="20201030 18:27:53.014"></status>
</kw>
<msg timestamp="20201030 18:27:53.015" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:52.781" endtime="20201030 18:27:53.015"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:53.020" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:53.017" endtime="20201030 18:27:53.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:53.022" endtime="20201030 18:27:53.025"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.779" endtime="20201030 18:27:53.027"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.777" endtime="20201030 18:27:53.028"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:53.042" endtime="20201030 18:27:53.350"></status>
</kw>
<msg timestamp="20201030 18:27:53.353" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018571069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022584125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:53.038" endtime="20201030 18:27:53.353"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:53.360" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018571069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022584125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:53.354" endtime="20201030 18:27:53.360"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:53.361" endtime="20201030 18:27:53.363"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.033" endtime="20201030 18:27:53.363"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.029" endtime="20201030 18:27:53.364"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:53.367" level="INFO">${PHILIP_RES} = [{'diff': 0.004013056000000001}, {'diff': 0.004010611000000001}, {'diff': 0.004010820000000002}, {'diff': 0.004010694000000002}, {'diff': 0.004010736000000001}, {'diff': 0.004010736000000001}, {'diff'...</msg>
<status status="PASS" starttime="20201030 18:27:53.364" endtime="20201030 18:27:53.368"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:53.372" level="INFO">${RESULT} = {'diff': [0.004013056000000001, 0.004010611000000001, 0.004010820000000002, 0.004010694000000002, 0.004010736000000001, 0.004010736000000001, 0.0040109720000000015, 0.004011041999999999, 0.004011014, ...</msg>
<status status="PASS" starttime="20201030 18:27:53.368" endtime="20201030 18:27:53.372"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:53.376" level="INFO">NAME: 49-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:53.375" endtime="20201030 18:27:53.377"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:53.379" level="INFO">VALUE: [0.004013056000000001, 0.004010611000000001, 0.004010820000000002, 0.004010694000000002, 0.004010736000000001, 0.004010736000000001, 0.0040109720000000015, 0.004011041999999999, 0.004011014, 0.004010596999999998, 0.004010806000000006, 0.004011000000000001, 0.004010764, 0.00401093000000001, 0.00401088899999999, 0.0040111529999999895, 0.004010889000000004, 0.004010819999999998, 0.004010542000000006, 0.0040105690000000055, 0.004010554999999999, 0.004010625000000004, 0.004010764, 0.00401088899999999, 0.0040107499999999935, 0.004010540999999979, 0.004010750000000007, 0.004010819999999998, 0.0040109720000000015, 0.004010874999999997, 0.004010819999999998, 0.0040106950000000086, 0.0040108610000000045, 0.004010680999999988, 0.004010805000000006, 0.004010999999999987, 0.0040108610000000045, 0.00401077800000002, 0.004010555000000027, 0.004010679999999989, 0.004010931000000023, 0.004010679999999989, 0.004010513999999993, 0.0040105, 0.0040106669999999955, 0.004010694000000009, 0.004010944999999988, 0.004011055999999985, 0.0040108890000000175, 0.004010902000000011]</msg>
<status status="PASS" starttime="20201030 18:27:53.377" endtime="20201030 18:27:53.379"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.373" endtime="20201030 18:27:53.380"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:53.384" endtime="20201030 18:27:53.403"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.382" endtime="20201030 18:27:53.404"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.381" endtime="20201030 18:27:53.404"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.776" endtime="20201030 18:27:53.404"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.775" endtime="20201030 18:27:53.404"></status>
</kw>
<kw name="${n} = 50" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:53.413" endtime="20201030 18:27:53.639"></status>
</kw>
<msg timestamp="20201030 18:27:53.639" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:53.411" endtime="20201030 18:27:53.640"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:53.642" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:53.641" endtime="20201030 18:27:53.642"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:53.643" endtime="20201030 18:27:53.645"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.409" endtime="20201030 18:27:53.645"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.407" endtime="20201030 18:27:53.646"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:53.652" endtime="20201030 18:27:53.966"></status>
</kw>
<msg timestamp="20201030 18:27:53.969" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018617375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022775139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:53.651" endtime="20201030 18:27:53.969"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:53.976" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018617375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022775139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:53.970" endtime="20201030 18:27:53.977"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:53.977" endtime="20201030 18:27:53.979"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.648" endtime="20201030 18:27:53.980"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.646" endtime="20201030 18:27:53.980"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:53.984" level="INFO">${PHILIP_RES} = [{'diff': 0.004157764000000001}, {'diff': 0.0041552080000000005}, {'diff': 0.004155179999999998}, {'diff': 0.004155153000000002}, {'diff': 0.004155111000000003}, {'diff': 0.004154999999999999}, {'diff...</msg>
<status status="PASS" starttime="20201030 18:27:53.981" endtime="20201030 18:27:53.984"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:53.988" level="INFO">${RESULT} = {'diff': [0.004157764000000001, 0.0041552080000000005, 0.004155179999999998, 0.004155153000000002, 0.004155111000000003, 0.004154999999999999, 0.0041551120000000025, 0.004154958, 0.004155082999999997,...</msg>
<status status="PASS" starttime="20201030 18:27:53.985" endtime="20201030 18:27:53.988"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:53.992" level="INFO">NAME: 50-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:53.991" endtime="20201030 18:27:53.992"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:53.994" level="INFO">VALUE: [0.004157764000000001, 0.0041552080000000005, 0.004155179999999998, 0.004155153000000002, 0.004155111000000003, 0.004154999999999999, 0.0041551120000000025, 0.004154958, 0.004155082999999997, 0.004155027999999998, 0.004155027999999991, 0.004155332999999997, 0.004155097999999996, 0.004154986999999999, 0.004155056000000004, 0.004155014000000012, 0.004155083000000004, 0.004154875000000002, 0.004154930000000001, 0.004154985999999999, 0.004154749999999999, 0.004154792000000004, 0.004154736000000006, 0.004154875000000002, 0.004154805999999997, 0.004154832999999997, 0.004154694000000014, 0.004154888999999995, 0.004155139000000002, 0.004155084000000003, 0.0041553059999999975, 0.004155236000000007, 0.004155263999999992, 0.004154999999999992, 0.004154875000000002, 0.0041547919999999905, 0.004155194000000001, 0.004155151999999995, 0.004155360999999996, 0.00415505599999999, 0.004155097999999996, 0.004155263999999992, 0.0041554020000000025, 0.004155235999999979, 0.004154985999999999, 0.004154902000000016, 0.004154930000000001, 0.004154888999999995, 0.004154791000000019, 0.0041548200000000035]</msg>
<status status="PASS" starttime="20201030 18:27:53.993" endtime="20201030 18:27:53.995"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.988" endtime="20201030 18:27:53.996"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:53.999" endtime="20201030 18:27:54.019"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.998" endtime="20201030 18:27:54.019"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.997" endtime="20201030 18:27:54.020"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.405" endtime="20201030 18:27:54.020"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.405" endtime="20201030 18:27:54.020"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:30.314" endtime="20201030 18:27:54.020"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:54.024" endtime="20201030 18:27:54.044"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.023" endtime="20201030 18:27:54.044"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.022" endtime="20201030 18:27:54.045"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:27:29.023" endtime="20201030 18:27:54.045" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 18:27:06.160" endtime="20201030 18:27:54.056"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 18:27:54.128" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 18:27:54.136" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 18:27:55.323" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 18:27:54.127" endtime="20201030 18:27:55.324"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 18:27:55.326" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 18:27:55.325" endtime="20201030 18:27:55.326"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.126" endtime="20201030 18:27:55.327"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:55.329" endtime="20201030 18:27:55.549"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.328" endtime="20201030 18:27:55.550"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:55.574" endtime="20201030 18:27:55.586"></status>
</kw>
<msg timestamp="20201030 18:27:55.587" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:55.572" endtime="20201030 18:27:55.587"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:55.589" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:55.588" endtime="20201030 18:27:55.590"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:27:55.593" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:27:55.591" endtime="20201030 18:27:55.593"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:55.567" endtime="20201030 18:27:55.594"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:55.563" endtime="20201030 18:27:55.594"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.560" endtime="20201030 18:27:55.594"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:27:55.598" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:27:55.597" endtime="20201030 18:27:55.599"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.595" endtime="20201030 18:27:55.600"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.558" endtime="20201030 18:27:55.600"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.557" endtime="20201030 18:27:55.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:55.601" endtime="20201030 18:27:55.603"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.555" endtime="20201030 18:27:55.612"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:55.613" endtime="20201030 18:27:55.614"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.552" endtime="20201030 18:27:55.615"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.124" endtime="20201030 18:27:55.615"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:55.621" endtime="20201030 18:27:55.640"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.619" endtime="20201030 18:27:55.641"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:55.654" endtime="20201030 18:27:55.666"></status>
</kw>
<msg timestamp="20201030 18:27:55.667" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:55.652" endtime="20201030 18:27:55.667"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:55.669" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:55.668" endtime="20201030 18:27:55.669"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:27:55.672" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:27:55.670" endtime="20201030 18:27:55.672"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:55.650" endtime="20201030 18:27:55.673"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:55.647" endtime="20201030 18:27:55.673"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.646" endtime="20201030 18:27:55.674"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:27:55.677" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:27:55.677" endtime="20201030 18:27:55.678"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.675" endtime="20201030 18:27:55.678"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.645" endtime="20201030 18:27:55.678"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.645" endtime="20201030 18:27:55.678"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:55.679" endtime="20201030 18:27:55.681"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.643" endtime="20201030 18:27:55.681"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.642" endtime="20201030 18:27:55.681"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.618" endtime="20201030 18:27:55.682"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:55.692" endtime="20201030 18:27:55.706"></status>
</kw>
<msg timestamp="20201030 18:27:55.707" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:55.691" endtime="20201030 18:27:55.707"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:55.709" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:55.708" endtime="20201030 18:27:55.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:55.710" endtime="20201030 18:27:55.712"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.687" endtime="20201030 18:27:55.712"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.685" endtime="20201030 18:27:55.713"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:55.719" endtime="20201030 18:27:56.009"></status>
</kw>
<msg timestamp="20201030 18:27:56.012" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063445569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.063464708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:55.718" endtime="20201030 18:27:56.012"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:56.020" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063445569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.063464708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:56.013" endtime="20201030 18:27:56.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:56.021" endtime="20201030 18:27:56.023"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.715" endtime="20201030 18:27:56.023"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.714" endtime="20201030 18:27:56.024"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:56.028" level="INFO">${RESULT} = [{'diff': 1.913900000000135e-05}, {'diff': 1.830500000001012e-05}, {'diff': 1.831900000000275e-05}, {'diff': 1.8319999999988346e-05}, {'diff': 1.830499999999624e-05}, {'diff': 1.830500000001012e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:27:56.024" endtime="20201030 18:27:56.028"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:56.032" level="INFO">${ACCURACY} = {'diff': [1.913900000000135e-05, 1.830500000001012e-05, 1.831900000000275e-05, 1.8319999999988346e-05, 1.830499999999624e-05, 1.830500000001012e-05, 1.831900000000275e-05, 1.830500000001012e-05, 1.829...</msg>
<status status="PASS" starttime="20201030 18:27:56.029" endtime="20201030 18:27:56.032"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:56.037" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201030 18:27:56.036" endtime="20201030 18:27:56.038"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:56.040" level="INFO">VALUE: [1.913900000000135e-05, 1.830500000001012e-05, 1.831900000000275e-05, 1.8319999999988346e-05, 1.830499999999624e-05, 1.830500000001012e-05, 1.831900000000275e-05, 1.830500000001012e-05, 1.8290999999989732e-05, 1.830499999999624e-05, 1.8318999999988872e-05, 1.8292000000003084e-05, 1.831900000000275e-05, 1.836099999999452e-05, 1.837499999998715e-05, 1.8320000000002223e-05, 1.833299999999538e-05, 1.8361999999993994e-05, 1.8250000000011313e-05, 1.830499999999624e-05, 1.8292000000003084e-05, 1.8305999999995715e-05, 1.830500000001012e-05, 1.8292000000003084e-05, 1.829100000000361e-05, 1.8320000000002223e-05, 1.8334000000008732e-05, 1.837500000000103e-05, 1.830499999999624e-05, 1.8320000000002223e-05, 1.8318999999988872e-05, 1.831900000000275e-05, 1.830499999999624e-05, 1.830499999999624e-05, 1.8319999999988346e-05, 1.83610000000084e-05, 1.831900000000275e-05, 1.8320000000002223e-05, 1.8306000000009592e-05, 1.840300000000017e-05, 1.830499999999624e-05, 1.8319999999988346e-05, 1.8305999999995715e-05, 1.8305999999995715e-05, 1.8320000000002223e-05, 1.8333999999994854e-05, 1.830499999999624e-05, 1.829100000000361e-05, 1.8320000000002223e-05, 1.831900000000275e-05]</msg>
<status status="PASS" starttime="20201030 18:27:56.038" endtime="20201030 18:27:56.040"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.033" endtime="20201030 18:27:56.041"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:56.044" endtime="20201030 18:27:56.064"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.043" endtime="20201030 18:27:56.064"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.042" endtime="20201030 18:27:56.064"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.683" endtime="20201030 18:27:56.065"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.683" endtime="20201030 18:27:56.065"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:56.073" endtime="20201030 18:27:56.087"></status>
</kw>
<msg timestamp="20201030 18:27:56.088" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:56.072" endtime="20201030 18:27:56.088"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:56.091" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:56.089" endtime="20201030 18:27:56.091"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:56.092" endtime="20201030 18:27:56.094"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.069" endtime="20201030 18:27:56.094"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.067" endtime="20201030 18:27:56.095"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:56.101" endtime="20201030 18:27:56.388"></status>
</kw>
<msg timestamp="20201030 18:27:56.391" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021327986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021347028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:56.100" endtime="20201030 18:27:56.391"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:56.399" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021327986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021347028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:56.392" endtime="20201030 18:27:56.399"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:56.400" endtime="20201030 18:27:56.402"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.097" endtime="20201030 18:27:56.402"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.095" endtime="20201030 18:27:56.403"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:56.407" level="INFO">${RESULT} = [{'diff': 1.9042000000000364e-05}, {'diff': 1.8264000000000474e-05}, {'diff': 1.831899999999928e-05}, {'diff': 1.829100000000014e-05}, {'diff': 1.837500000000103e-05}, {'diff': 1.831899999999928e-05},...</msg>
<status status="PASS" starttime="20201030 18:27:56.404" endtime="20201030 18:27:56.407"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:56.412" level="INFO">${ACCURACY} = {'diff': [1.9042000000000364e-05, 1.8264000000000474e-05, 1.831899999999928e-05, 1.829100000000014e-05, 1.837500000000103e-05, 1.831899999999928e-05, 1.8278000000000044e-05, 1.8320000000002223e-05, 1....</msg>
<status status="PASS" starttime="20201030 18:27:56.408" endtime="20201030 18:27:56.412"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:56.416" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201030 18:27:56.415" endtime="20201030 18:27:56.417"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:56.419" level="INFO">VALUE: [1.9042000000000364e-05, 1.8264000000000474e-05, 1.831899999999928e-05, 1.829100000000014e-05, 1.837500000000103e-05, 1.831899999999928e-05, 1.8278000000000044e-05, 1.8320000000002223e-05, 1.830500000000318e-05, 1.831899999999928e-05, 1.8305999999999184e-05, 1.831899999999928e-05, 1.831899999999928e-05, 1.833299999999885e-05, 1.830499999999971e-05, 1.834699999999842e-05, 1.830499999999971e-05, 1.831899999999928e-05, 1.8320000000002223e-05, 1.8305999999999184e-05, 1.833299999999885e-05, 1.8319999999998754e-05, 1.830499999999971e-05, 1.833299999999885e-05, 1.8319999999998754e-05, 1.831899999999928e-05, 1.8305999999999184e-05, 1.831899999999928e-05, 1.831899999999928e-05, 1.829100000000014e-05, 1.8278000000000044e-05, 1.82769999999971e-05, 1.8305999999999184e-05, 1.8319999999998754e-05, 1.8319999999998754e-05, 1.8320000000002223e-05, 1.830499999999971e-05, 1.831899999999928e-05, 1.833299999999885e-05, 1.8305999999999184e-05, 1.8334000000001793e-05, 1.831899999999928e-05, 1.8291999999999614e-05, 1.837500000000103e-05, 1.8305999999999184e-05, 1.8319999999998754e-05, 1.8306000000002653e-05, 1.830499999999971e-05, 1.831899999999928e-05, 1.830499999999971e-05]</msg>
<status status="PASS" starttime="20201030 18:27:56.417" endtime="20201030 18:27:56.419"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.413" endtime="20201030 18:27:56.419"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:56.423" endtime="20201030 18:27:56.442"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.422" endtime="20201030 18:27:56.443"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.420" endtime="20201030 18:27:56.443"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.066" endtime="20201030 18:27:56.444"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.065" endtime="20201030 18:27:56.444"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:56.452" endtime="20201030 18:27:56.466"></status>
</kw>
<msg timestamp="20201030 18:27:56.467" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:56.451" endtime="20201030 18:27:56.467"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:56.470" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:56.468" endtime="20201030 18:27:56.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:56.471" endtime="20201030 18:27:56.472"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.448" endtime="20201030 18:27:56.473"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.446" endtime="20201030 18:27:56.473"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:56.480" endtime="20201030 18:27:56.766"></status>
</kw>
<msg timestamp="20201030 18:27:56.769" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021366139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02138525, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:27:56.478" endtime="20201030 18:27:56.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:56.778" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021366139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02138525, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:27:56.770" endtime="20201030 18:27:56.778"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:56.779" endtime="20201030 18:27:56.780"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.476" endtime="20201030 18:27:56.781"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.474" endtime="20201030 18:27:56.781"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:56.785" level="INFO">${RESULT} = [{'diff': 1.911100000000221e-05}, {'diff': 1.8306000000002653e-05}, {'diff': 1.830499999999971e-05}, {'diff': 1.8278000000000044e-05}, {'diff': 1.829100000000014e-05}, {'diff': 1.830499999999971e-05},...</msg>
<status status="PASS" starttime="20201030 18:27:56.782" endtime="20201030 18:27:56.785"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:56.789" level="INFO">${ACCURACY} = {'diff': [1.911100000000221e-05, 1.8306000000002653e-05, 1.830499999999971e-05, 1.8278000000000044e-05, 1.829100000000014e-05, 1.830499999999971e-05, 1.836100000000146e-05, 1.833299999999885e-05, 1.83...</msg>
<status status="PASS" starttime="20201030 18:27:56.786" endtime="20201030 18:27:56.789"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:56.794" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201030 18:27:56.793" endtime="20201030 18:27:56.794"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:56.796" level="INFO">VALUE: [1.911100000000221e-05, 1.8306000000002653e-05, 1.830499999999971e-05, 1.8278000000000044e-05, 1.829100000000014e-05, 1.830499999999971e-05, 1.836100000000146e-05, 1.833299999999885e-05, 1.831899999999928e-05, 1.830499999999971e-05, 1.8277999999996575e-05, 1.833299999999885e-05, 1.8319999999998754e-05, 1.830499999999971e-05, 1.8278000000000044e-05, 1.831899999999928e-05, 1.8320000000002223e-05, 1.8305999999999184e-05, 1.831899999999928e-05, 1.831899999999928e-05, 1.8305999999999184e-05, 1.831899999999928e-05, 1.834700000000189e-05, 1.8319999999998754e-05, 1.831900000000275e-05, 1.8306000000002653e-05, 1.831899999999928e-05, 1.830499999999971e-05, 1.8305999999999184e-05, 1.8320000000002223e-05, 1.831900000000275e-05, 1.8348000000001363e-05, 1.8306000000002653e-05, 1.8305999999999184e-05, 1.830499999999971e-05, 1.831900000000275e-05, 1.8250000000000904e-05, 1.834699999999842e-05, 1.831899999999928e-05, 1.8305999999999184e-05, 1.8250000000000904e-05, 1.8305999999999184e-05, 1.83890000000006e-05, 1.8291999999999614e-05, 1.827700000000057e-05, 1.8319999999998754e-05, 1.8319999999998754e-05, 1.8348000000001363e-05, 1.830499999999971e-05, 1.8291999999999614e-05]</msg>
<status status="PASS" starttime="20201030 18:27:56.795" endtime="20201030 18:27:56.796"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.790" endtime="20201030 18:27:56.797"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:56.801" endtime="20201030 18:27:56.820"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.799" endtime="20201030 18:27:56.821"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.798" endtime="20201030 18:27:56.821"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.445" endtime="20201030 18:27:56.821"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.444" endtime="20201030 18:27:56.821"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:56.831" endtime="20201030 18:27:56.845"></status>
</kw>
<msg timestamp="20201030 18:27:56.846" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:56.829" endtime="20201030 18:27:56.846"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:56.848" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:56.847" endtime="20201030 18:27:56.848"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:56.849" endtime="20201030 18:27:56.851"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.826" endtime="20201030 18:27:56.851"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.824" endtime="20201030 18:27:56.852"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:56.858" endtime="20201030 18:27:57.144"></status>
</kw>
<msg timestamp="20201030 18:27:57.147" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022602292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022621431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:56.857" endtime="20201030 18:27:57.147"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:57.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022602292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022621431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:57.148" endtime="20201030 18:27:57.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:57.157" endtime="20201030 18:27:57.158"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.854" endtime="20201030 18:27:57.159"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.852" endtime="20201030 18:27:57.159"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:57.163" level="INFO">${RESULT} = [{'diff': 1.913900000000135e-05}, {'diff': 1.8333999999998324e-05}, {'diff': 1.8319999999998754e-05}, {'diff': 1.830499999999971e-05}, {'diff': 1.8305999999999184e-05}, {'diff': 1.830499999999971e-05}...</msg>
<status status="PASS" starttime="20201030 18:27:57.160" endtime="20201030 18:27:57.163"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:57.167" level="INFO">${ACCURACY} = {'diff': [1.913900000000135e-05, 1.8333999999998324e-05, 1.8319999999998754e-05, 1.830499999999971e-05, 1.8305999999999184e-05, 1.830499999999971e-05, 1.8348000000001363e-05, 1.834699999999842e-05, 1....</msg>
<status status="PASS" starttime="20201030 18:27:57.164" endtime="20201030 18:27:57.167"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:57.172" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201030 18:27:57.171" endtime="20201030 18:27:57.172"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:57.174" level="INFO">VALUE: [1.913900000000135e-05, 1.8333999999998324e-05, 1.8319999999998754e-05, 1.830499999999971e-05, 1.8305999999999184e-05, 1.830499999999971e-05, 1.8348000000001363e-05, 1.834699999999842e-05, 1.831900000000275e-05, 1.830499999999971e-05, 1.831900000000275e-05, 1.830499999999971e-05, 1.8305999999999184e-05, 1.8319999999998754e-05, 1.833299999999885e-05, 1.829100000000014e-05, 1.8306000000002653e-05, 1.8305999999999184e-05, 1.831899999999928e-05, 1.8264000000000474e-05, 1.833299999999885e-05, 1.833299999999885e-05, 1.8347999999997894e-05, 1.8263999999997005e-05, 1.8305999999999184e-05, 1.834699999999842e-05, 1.831899999999928e-05, 1.8278000000000044e-05, 1.8319999999998754e-05, 1.831900000000275e-05, 1.830499999999971e-05, 1.834700000000189e-05, 1.833300000000232e-05, 1.8305999999999184e-05, 1.8334000000001793e-05, 1.8320000000002223e-05, 1.8402000000000696e-05, 1.831899999999928e-05, 1.8348000000001363e-05, 1.831899999999928e-05, 1.830499999999971e-05, 1.8319999999998754e-05, 1.8348000000001363e-05, 1.833299999999885e-05, 1.833300000000232e-05, 1.831899999999928e-05, 1.8305999999999184e-05, 1.8223000000001238e-05, 1.833300000000232e-05, 1.829100000000014e-05]</msg>
<status status="PASS" starttime="20201030 18:27:57.173" endtime="20201030 18:27:57.175"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.168" endtime="20201030 18:27:57.176"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:57.180" endtime="20201030 18:27:57.199"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.178" endtime="20201030 18:27:57.199"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.177" endtime="20201030 18:27:57.200"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.822" endtime="20201030 18:27:57.201"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.822" endtime="20201030 18:27:57.201"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:57.209" endtime="20201030 18:27:57.224"></status>
</kw>
<msg timestamp="20201030 18:27:57.225" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:57.208" endtime="20201030 18:27:57.225"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:57.229" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:57.226" endtime="20201030 18:27:57.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:57.230" endtime="20201030 18:27:57.232"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.205" endtime="20201030 18:27:57.234"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.203" endtime="20201030 18:27:57.235"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:57.243" endtime="20201030 18:27:57.529"></status>
</kw>
<msg timestamp="20201030 18:27:57.532" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021933514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021952639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:57.241" endtime="20201030 18:27:57.532"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:57.540" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021933514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021952639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:57.533" endtime="20201030 18:27:57.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:57.541" endtime="20201030 18:27:57.543"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.238" endtime="20201030 18:27:57.543"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.235" endtime="20201030 18:27:57.544"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:57.548" level="INFO">${RESULT} = [{'diff': 1.912499999999831e-05}, {'diff': 1.830499999999971e-05}, {'diff': 1.8291999999999614e-05}, {'diff': 1.831899999999928e-05}, {'diff': 1.829100000000014e-05}, {'diff': 1.830499999999971e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:27:57.544" endtime="20201030 18:27:57.548"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:57.553" level="INFO">${ACCURACY} = {'diff': [1.912499999999831e-05, 1.830499999999971e-05, 1.8291999999999614e-05, 1.831899999999928e-05, 1.829100000000014e-05, 1.830499999999971e-05, 1.8306000000002653e-05, 1.833299999999885e-05, 1.83...</msg>
<status status="PASS" starttime="20201030 18:27:57.549" endtime="20201030 18:27:57.554"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:57.560" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201030 18:27:57.558" endtime="20201030 18:27:57.560"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:57.563" level="INFO">VALUE: [1.912499999999831e-05, 1.830499999999971e-05, 1.8291999999999614e-05, 1.831899999999928e-05, 1.829100000000014e-05, 1.830499999999971e-05, 1.8306000000002653e-05, 1.833299999999885e-05, 1.833300000000232e-05, 1.829100000000014e-05, 1.833300000000232e-05, 1.830500000000318e-05, 1.831899999999928e-05, 1.831899999999928e-05, 1.8250000000000904e-05, 1.8319999999998754e-05, 1.8320000000002223e-05, 1.8319999999998754e-05, 1.831899999999928e-05, 1.831899999999928e-05, 1.8334000000001793e-05, 1.833300000000232e-05, 1.830499999999971e-05, 1.8305999999999184e-05, 1.831899999999928e-05, 1.8292000000003084e-05, 1.830499999999971e-05, 1.8292000000003084e-05, 1.8305999999999184e-05, 1.8250000000000904e-05, 1.8306000000002653e-05, 1.834700000000189e-05, 1.8319999999998754e-05, 1.833299999999885e-05, 1.831899999999928e-05, 1.831899999999928e-05, 1.831899999999928e-05, 1.8305999999999184e-05, 1.8305999999999184e-05, 1.8305999999999184e-05, 1.8291999999999614e-05, 1.833299999999885e-05, 1.8333999999998324e-05, 1.8235999999997865e-05, 1.8236000000001334e-05, 1.831899999999928e-05, 1.8305999999999184e-05, 1.8319999999998754e-05, 1.8292000000003084e-05, 1.829100000000014e-05]</msg>
<status status="PASS" starttime="20201030 18:27:57.561" endtime="20201030 18:27:57.564"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.555" endtime="20201030 18:27:57.565"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:57.570" endtime="20201030 18:27:57.590"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.568" endtime="20201030 18:27:57.591"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.566" endtime="20201030 18:27:57.591"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.202" endtime="20201030 18:27:57.591"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.201" endtime="20201030 18:27:57.591"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:57.600" endtime="20201030 18:27:57.614"></status>
</kw>
<msg timestamp="20201030 18:27:57.615" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:57.598" endtime="20201030 18:27:57.615"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:57.617" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:57.616" endtime="20201030 18:27:57.617"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:57.618" endtime="20201030 18:27:57.620"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.596" endtime="20201030 18:27:57.620"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.594" endtime="20201030 18:27:57.621"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:57.627" endtime="20201030 18:27:57.912"></status>
</kw>
<msg timestamp="20201030 18:27:57.915" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021492403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021516444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:57.626" endtime="20201030 18:27:57.916"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:57.924" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021492403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021516444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:57.916" endtime="20201030 18:27:57.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:57.925" endtime="20201030 18:27:57.926"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.623" endtime="20201030 18:27:57.927"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.621" endtime="20201030 18:27:57.927"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:57.931" level="INFO">${RESULT} = [{'diff': 2.4040999999998952e-05}, {'diff': 2.3221999999999826e-05}, {'diff': 2.3221999999999826e-05}, {'diff': 2.3221999999999826e-05}, {'diff': 2.3235999999999396e-05}, {'diff': 2.3249999999998966e-...</msg>
<status status="PASS" starttime="20201030 18:27:57.928" endtime="20201030 18:27:57.931"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:57.935" level="INFO">${ACCURACY} = {'diff': [2.4040999999998952e-05, 2.3221999999999826e-05, 2.3221999999999826e-05, 2.3221999999999826e-05, 2.3235999999999396e-05, 2.3249999999998966e-05, 2.3235999999999396e-05, 2.3250000000002435e-05...</msg>
<status status="PASS" starttime="20201030 18:27:57.932" endtime="20201030 18:27:57.935"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:57.940" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201030 18:27:57.939" endtime="20201030 18:27:57.940"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:57.942" level="INFO">VALUE: [2.4040999999998952e-05, 2.3221999999999826e-05, 2.3221999999999826e-05, 2.3221999999999826e-05, 2.3235999999999396e-05, 2.3249999999998966e-05, 2.3235999999999396e-05, 2.3250000000002435e-05, 2.3235999999999396e-05, 2.3250000000002435e-05, 2.3264000000002005e-05, 2.3208000000000256e-05, 1.833300000000232e-05, 2.316700000000102e-05, 2.3207999999996787e-05, 2.3250000000002435e-05, 2.3263999999998536e-05, 2.3235999999999396e-05, 2.323700000000234e-05, 2.3208000000000256e-05, 2.3194000000000686e-05, 2.3291999999997676e-05, 2.3235999999999396e-05, 2.3263999999998536e-05, 2.319500000000016e-05, 2.3249999999998966e-05, 1.8319999999998754e-05, 2.3235999999999396e-05, 2.3235999999999396e-05, 2.3264000000002005e-05, 2.3236000000002865e-05, 2.3221999999999826e-05, 2.3235999999999396e-05, 2.3292000000001145e-05, 2.3263999999998536e-05, 2.3235999999999396e-05, 2.3208000000000256e-05, 2.3221999999999826e-05, 2.3235999999999396e-05, 2.3236000000002865e-05, 2.3250000000002435e-05, 2.3249999999998966e-05, 2.32229999999993e-05, 2.3235999999999396e-05, 2.3320000000000285e-05, 2.32229999999993e-05, 2.3236000000002865e-05, 2.3221999999999826e-05, 2.3250000000002435e-05, 2.3264000000002005e-05]</msg>
<status status="PASS" starttime="20201030 18:27:57.941" endtime="20201030 18:27:57.943"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.936" endtime="20201030 18:27:57.945"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:57.951" endtime="20201030 18:27:57.970"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.949" endtime="20201030 18:27:57.971"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.947" endtime="20201030 18:27:57.971"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.592" endtime="20201030 18:27:57.972"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.592" endtime="20201030 18:27:57.972"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:57.982" endtime="20201030 18:27:57.997"></status>
</kw>
<msg timestamp="20201030 18:27:57.998" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:57.981" endtime="20201030 18:27:57.998"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:58.001" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:57.999" endtime="20201030 18:27:58.001"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:58.002" endtime="20201030 18:27:58.003"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.977" endtime="20201030 18:27:58.004"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.975" endtime="20201030 18:27:58.004"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:58.011" endtime="20201030 18:27:58.296"></status>
</kw>
<msg timestamp="20201030 18:27:58.300" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024673111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024697139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:58.009" endtime="20201030 18:27:58.300"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:58.308" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024673111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024697139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:58.301" endtime="20201030 18:27:58.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:58.309" endtime="20201030 18:27:58.311"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.007" endtime="20201030 18:27:58.311"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.005" endtime="20201030 18:27:58.312"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:58.316" level="INFO">${RESULT} = [{'diff': 2.4027999999998856e-05}, {'diff': 2.323699999999887e-05}, {'diff': 2.323699999999887e-05}, {'diff': 2.3278000000001575e-05}, {'diff': 2.3263999999998536e-05}, {'diff': 2.3290999999998202e-05...</msg>
<status status="PASS" starttime="20201030 18:27:58.312" endtime="20201030 18:27:58.316"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:58.320" level="INFO">${ACCURACY} = {'diff': [2.4027999999998856e-05, 2.323699999999887e-05, 2.323699999999887e-05, 2.3278000000001575e-05, 2.3263999999998536e-05, 2.3290999999998202e-05, 2.3250000000002435e-05, 2.3235999999999396e-05, ...</msg>
<status status="PASS" starttime="20201030 18:27:58.317" endtime="20201030 18:27:58.320"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:58.324" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201030 18:27:58.323" endtime="20201030 18:27:58.324"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:58.326" level="INFO">VALUE: [2.4027999999998856e-05, 2.323699999999887e-05, 2.323699999999887e-05, 2.3278000000001575e-05, 2.3263999999998536e-05, 2.3290999999998202e-05, 2.3250000000002435e-05, 2.3235999999999396e-05, 2.3208000000000256e-05, 2.322300000000277e-05, 2.323699999999887e-05, 2.3221999999999826e-05, 2.3222000000003296e-05, 2.3263999999998536e-05, 2.322300000000277e-05, 2.3221999999999826e-05, 2.323700000000234e-05, 2.3236000000002865e-05, 2.318100000000059e-05, 2.3235999999999396e-05, 2.3235999999999396e-05, 2.3249999999998966e-05, 2.3235999999999396e-05, 2.3249999999998966e-05, 2.3235999999999396e-05, 2.3221999999999826e-05, 2.3221999999999826e-05, 2.3221999999999826e-05, 2.3236000000002865e-05, 2.3235999999999396e-05, 2.3250000000002435e-05, 2.3235999999999396e-05, 2.3235999999999396e-05, 2.3194000000000686e-05, 2.3221999999999826e-05, 2.32229999999993e-05, 2.32229999999993e-05, 2.3235999999999396e-05, 2.3235999999999396e-05, 2.3236000000002865e-05, 2.3235999999999396e-05, 2.3235999999999396e-05, 2.3221999999999826e-05, 2.3235999999999396e-05, 2.3235999999999396e-05, 2.3221999999999826e-05, 2.3180000000001116e-05, 2.3249999999998966e-05, 2.3277999999998106e-05, 2.3235999999999396e-05]</msg>
<status status="PASS" starttime="20201030 18:27:58.325" endtime="20201030 18:27:58.328"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.321" endtime="20201030 18:27:58.329"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:58.332" endtime="20201030 18:27:58.352"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.331" endtime="20201030 18:27:58.352"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.330" endtime="20201030 18:27:58.353"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.973" endtime="20201030 18:27:58.353"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.972" endtime="20201030 18:27:58.353"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:58.362" endtime="20201030 18:27:58.376"></status>
</kw>
<msg timestamp="20201030 18:27:58.376" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:58.360" endtime="20201030 18:27:58.377"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:58.379" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:58.377" endtime="20201030 18:27:58.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:58.380" endtime="20201030 18:27:58.381"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.358" endtime="20201030 18:27:58.382"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.356" endtime="20201030 18:27:58.382"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:58.389" endtime="20201030 18:27:58.701"></status>
</kw>
<msg timestamp="20201030 18:27:58.704" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021498889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021522958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:58.387" endtime="20201030 18:27:58.704"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:58.712" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021498889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021522958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:58.705" endtime="20201030 18:27:58.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:58.714" endtime="20201030 18:27:58.715"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.385" endtime="20201030 18:27:58.716"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.383" endtime="20201030 18:27:58.716"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:58.720" level="INFO">${RESULT} = [{'diff': 2.4068999999998092e-05}, {'diff': 2.320899999999973e-05}, {'diff': 2.3250000000002435e-05}, {'diff': 2.3221999999999826e-05}, {'diff': 2.3235999999999396e-05}, {'diff': 2.3235999999999396e-0...</msg>
<status status="PASS" starttime="20201030 18:27:58.717" endtime="20201030 18:27:58.720"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:58.727" level="INFO">${ACCURACY} = {'diff': [2.4068999999998092e-05, 2.320899999999973e-05, 2.3250000000002435e-05, 2.3221999999999826e-05, 2.3235999999999396e-05, 2.3235999999999396e-05, 2.3250000000002435e-05, 2.320899999999973e-05, ...</msg>
<status status="PASS" starttime="20201030 18:27:58.721" endtime="20201030 18:27:58.727"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:58.732" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201030 18:27:58.731" endtime="20201030 18:27:58.732"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:58.734" level="INFO">VALUE: [2.4068999999998092e-05, 2.320899999999973e-05, 2.3250000000002435e-05, 2.3221999999999826e-05, 2.3235999999999396e-05, 2.3235999999999396e-05, 2.3250000000002435e-05, 2.320899999999973e-05, 2.323699999999887e-05, 2.3263999999998536e-05, 2.3221999999999826e-05, 2.3208000000000256e-05, 2.3235999999999396e-05, 2.3208000000000256e-05, 2.3277999999998106e-05, 2.323700000000234e-05, 2.3221999999999826e-05, 2.3235999999999396e-05, 2.3250000000002435e-05, 2.3263999999998536e-05, 2.3221999999999826e-05, 2.3306000000000715e-05, 2.3250000000002435e-05, 2.3235999999999396e-05, 2.3221999999999826e-05, 2.318100000000059e-05, 2.3208000000000256e-05, 2.3250000000002435e-05, 2.32229999999993e-05, 2.3221999999999826e-05, 2.3249999999998966e-05, 2.3249999999998966e-05, 2.3221999999999826e-05, 2.3276999999998632e-05, 2.3236000000002865e-05, 2.3250000000002435e-05, 2.3221999999999826e-05, 2.323700000000234e-05, 2.32229999999993e-05, 2.3235999999999396e-05, 2.3290999999998202e-05, 2.3235999999999396e-05, 2.3235999999999396e-05, 2.3249999999998966e-05, 2.3221999999999826e-05, 2.3249999999998966e-05, 2.3221999999999826e-05, 2.3221999999999826e-05, 2.3221999999999826e-05, 2.3208000000000256e-05]</msg>
<status status="PASS" starttime="20201030 18:27:58.733" endtime="20201030 18:27:58.735"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.728" endtime="20201030 18:27:58.735"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:58.739" endtime="20201030 18:27:58.758"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.737" endtime="20201030 18:27:58.759"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.736" endtime="20201030 18:27:58.759"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.354" endtime="20201030 18:27:58.759"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.353" endtime="20201030 18:27:58.760"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:58.768" endtime="20201030 18:27:58.782"></status>
</kw>
<msg timestamp="20201030 18:27:58.783" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:58.767" endtime="20201030 18:27:58.783"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:58.785" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:58.784" endtime="20201030 18:27:58.785"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:58.786" endtime="20201030 18:27:58.788"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.764" endtime="20201030 18:27:58.788"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.762" endtime="20201030 18:27:58.789"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:58.795" endtime="20201030 18:27:59.081"></status>
</kw>
<msg timestamp="20201030 18:27:59.085" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021187889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021211931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:58.793" endtime="20201030 18:27:59.085"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:59.093" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021187889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021211931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:59.086" endtime="20201030 18:27:59.093"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:59.094" endtime="20201030 18:27:59.096"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.791" endtime="20201030 18:27:59.096"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.789" endtime="20201030 18:27:59.096"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:59.100" level="INFO">${RESULT} = [{'diff': 2.4041999999998426e-05}, {'diff': 2.3249999999998966e-05}, {'diff': 2.3292000000001145e-05}, {'diff': 2.32229999999993e-05}, {'diff': 2.3235999999999396e-05}, {'diff': 2.3235999999999396e-05...</msg>
<status status="PASS" starttime="20201030 18:27:59.097" endtime="20201030 18:27:59.101"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:59.104" level="INFO">${ACCURACY} = {'diff': [2.4041999999998426e-05, 2.3249999999998966e-05, 2.3292000000001145e-05, 2.32229999999993e-05, 2.3235999999999396e-05, 2.3235999999999396e-05, 2.3236000000002865e-05, 2.3250000000002435e-05, ...</msg>
<status status="PASS" starttime="20201030 18:27:59.101" endtime="20201030 18:27:59.105"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:59.109" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201030 18:27:59.108" endtime="20201030 18:27:59.109"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:59.111" level="INFO">VALUE: [2.4041999999998426e-05, 2.3249999999998966e-05, 2.3292000000001145e-05, 2.32229999999993e-05, 2.3235999999999396e-05, 2.3235999999999396e-05, 2.3236000000002865e-05, 2.3250000000002435e-05, 2.3264000000002005e-05, 2.3236000000002865e-05, 2.3235999999999396e-05, 2.320899999999973e-05, 2.318100000000059e-05, 2.3235999999999396e-05, 2.3235999999999396e-05, 2.3249999999998966e-05, 2.3278000000001575e-05, 2.3221999999999826e-05, 2.3250000000002435e-05, 2.3221999999999826e-05, 2.318099999999712e-05, 2.3277999999998106e-05, 2.3250000000002435e-05, 2.3249999999998966e-05, 2.323700000000234e-05, 2.3305999999997246e-05, 2.3250000000002435e-05, 2.3221999999999826e-05, 2.3221999999999826e-05, 2.3235999999999396e-05, 2.319500000000016e-05, 2.3221999999999826e-05, 2.3278000000001575e-05, 2.3221999999999826e-05, 2.323699999999887e-05, 2.3221999999999826e-05, 2.3235999999999396e-05, 2.3221999999999826e-05, 2.3235999999999396e-05, 2.3194000000000686e-05, 2.3249999999998966e-05, 2.3249999999998966e-05, 2.3221999999999826e-05, 2.323699999999887e-05, 2.3250000000002435e-05, 2.3236000000002865e-05, 2.3249999999998966e-05, 2.3235999999999396e-05, 2.3236000000002865e-05, 2.322300000000277e-05]</msg>
<status status="PASS" starttime="20201030 18:27:59.110" endtime="20201030 18:27:59.112"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.105" endtime="20201030 18:27:59.113"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:59.116" endtime="20201030 18:27:59.136"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.115" endtime="20201030 18:27:59.136"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.114" endtime="20201030 18:27:59.137"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.760" endtime="20201030 18:27:59.137"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.760" endtime="20201030 18:27:59.137"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:59.146" endtime="20201030 18:27:59.161"></status>
</kw>
<msg timestamp="20201030 18:27:59.161" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:59.144" endtime="20201030 18:27:59.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:59.164" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:59.162" endtime="20201030 18:27:59.164"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:59.165" endtime="20201030 18:27:59.166"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.142" endtime="20201030 18:27:59.167"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.139" endtime="20201030 18:27:59.167"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:59.174" endtime="20201030 18:27:59.459"></status>
</kw>
<msg timestamp="20201030 18:27:59.462" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022464222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022488264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:59.172" endtime="20201030 18:27:59.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:59.471" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022464222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022488264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:59.464" endtime="20201030 18:27:59.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:59.472" endtime="20201030 18:27:59.473"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.170" endtime="20201030 18:27:59.474"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.168" endtime="20201030 18:27:59.474"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:59.478" level="INFO">${RESULT} = [{'diff': 2.4042000000001895e-05}, {'diff': 2.3236000000002865e-05}, {'diff': 2.3235999999999396e-05}, {'diff': 2.3249999999998966e-05}, {'diff': 2.3235999999999396e-05}, {'diff': 2.3221999999999826e-...</msg>
<status status="PASS" starttime="20201030 18:27:59.475" endtime="20201030 18:27:59.479"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:59.482" level="INFO">${ACCURACY} = {'diff': [2.4042000000001895e-05, 2.3236000000002865e-05, 2.3235999999999396e-05, 2.3249999999998966e-05, 2.3235999999999396e-05, 2.3221999999999826e-05, 2.3263999999998536e-05, 2.3249999999998966e-05...</msg>
<status status="PASS" starttime="20201030 18:27:59.479" endtime="20201030 18:27:59.483"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:59.487" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201030 18:27:59.486" endtime="20201030 18:27:59.487"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:59.489" level="INFO">VALUE: [2.4042000000001895e-05, 2.3236000000002865e-05, 2.3235999999999396e-05, 2.3249999999998966e-05, 2.3235999999999396e-05, 2.3221999999999826e-05, 2.3263999999998536e-05, 2.3249999999998966e-05, 2.3235999999999396e-05, 2.3221999999999826e-05, 2.3221999999999826e-05, 2.3235999999999396e-05, 2.3236000000002865e-05, 2.318099999999712e-05, 2.3235999999999396e-05, 2.3235999999999396e-05, 2.3263999999998536e-05, 2.3235999999999396e-05, 2.3250000000002435e-05, 2.3249999999998966e-05, 2.3235999999999396e-05, 2.3179999999997647e-05, 2.3249999999998966e-05, 2.3235999999999396e-05, 2.3235999999999396e-05, 2.3249999999998966e-05, 2.3194000000000686e-05, 2.3249999999998966e-05, 2.3292000000001145e-05, 2.3179999999997647e-05, 2.3235999999999396e-05, 2.320899999999973e-05, 2.3235999999999396e-05, 2.3278000000001575e-05, 2.3235999999999396e-05, 2.3249999999998966e-05, 2.3264000000002005e-05, 2.3235999999999396e-05, 2.3235999999999396e-05, 2.3249999999998966e-05, 2.3221999999999826e-05, 2.32229999999993e-05, 2.318099999999712e-05, 2.3235999999999396e-05, 2.3249999999998966e-05, 2.3235999999999396e-05, 2.3235999999999396e-05, 2.3235999999999396e-05, 2.3250000000002435e-05, 2.3221999999999826e-05]</msg>
<status status="PASS" starttime="20201030 18:27:59.488" endtime="20201030 18:27:59.491"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.483" endtime="20201030 18:27:59.491"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:59.495" endtime="20201030 18:27:59.514"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.494" endtime="20201030 18:27:59.515"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.492" endtime="20201030 18:27:59.515"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.138" endtime="20201030 18:27:59.516"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.137" endtime="20201030 18:27:59.516"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:59.524" endtime="20201030 18:27:59.539"></status>
</kw>
<msg timestamp="20201030 18:27:59.539" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:59.523" endtime="20201030 18:27:59.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:59.542" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:59.540" endtime="20201030 18:27:59.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:59.543" endtime="20201030 18:27:59.544"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.520" endtime="20201030 18:27:59.545"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.518" endtime="20201030 18:27:59.545"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:59.552" endtime="20201030 18:27:59.838"></status>
</kw>
<msg timestamp="20201030 18:27:59.841" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021390847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021419833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:59.550" endtime="20201030 18:27:59.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:59.849" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021390847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021419833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:59.842" endtime="20201030 18:27:59.850"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:59.850" endtime="20201030 18:27:59.852"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.548" endtime="20201030 18:27:59.853"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.546" endtime="20201030 18:27:59.853"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:59.857" level="INFO">${RESULT} = [{'diff': 2.8985999999998208e-05}, {'diff': 2.8110999999997333e-05}, {'diff': 2.816699999999908e-05}, {'diff': 2.8152999999999512e-05}, {'diff': 2.8152999999999512e-05}, {'diff': 2.8152999999999512e-0...</msg>
<status status="PASS" starttime="20201030 18:27:59.854" endtime="20201030 18:27:59.857"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:59.862" level="INFO">${ACCURACY} = {'diff': [2.8985999999998208e-05, 2.8110999999997333e-05, 2.816699999999908e-05, 2.8152999999999512e-05, 2.8152999999999512e-05, 2.8152999999999512e-05, 2.818100000000212e-05, 2.3235999999999396e-05, ...</msg>
<status status="PASS" starttime="20201030 18:27:59.858" endtime="20201030 18:27:59.862"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:59.866" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201030 18:27:59.865" endtime="20201030 18:27:59.867"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:59.869" level="INFO">VALUE: [2.8985999999998208e-05, 2.8110999999997333e-05, 2.816699999999908e-05, 2.8152999999999512e-05, 2.8152999999999512e-05, 2.8152999999999512e-05, 2.818100000000212e-05, 2.3235999999999396e-05, 2.819499999999822e-05, 2.816699999999908e-05, 2.816699999999908e-05, 2.815300000000298e-05, 2.816699999999908e-05, 2.8152999999999512e-05, 2.8152999999999512e-05, 2.8124999999996902e-05, 2.816699999999908e-05, 2.818099999999865e-05, 2.816699999999908e-05, 2.8152000000000038e-05, 2.3250000000002435e-05, 2.8165999999999608e-05, 2.816699999999908e-05, 2.8138999999999942e-05, 2.8152000000000038e-05, 2.8180000000002647e-05, 2.8138999999999942e-05, 2.8152999999999512e-05, 2.8138999999999942e-05, 2.8152999999999512e-05, 2.8165999999999608e-05, 2.8138999999999942e-05, 2.816700000000255e-05, 2.8152999999999512e-05, 2.8208000000001787e-05, 2.8138000000000468e-05, 2.3235999999999396e-05, 2.3264000000002005e-05, 2.8152999999999512e-05, 2.8138999999999942e-05, 2.8152000000000038e-05, 2.8138999999999942e-05, 2.8098000000000706e-05, 2.816699999999908e-05, 2.8152999999999512e-05, 2.818100000000212e-05, 2.8111000000000802e-05, 2.8236000000000927e-05, 2.818099999999865e-05, 2.8152999999999512e-05]</msg>
<status status="PASS" starttime="20201030 18:27:59.868" endtime="20201030 18:27:59.870"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.863" endtime="20201030 18:27:59.870"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:59.874" endtime="20201030 18:27:59.893"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.872" endtime="20201030 18:27:59.894"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.871" endtime="20201030 18:27:59.894"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.517" endtime="20201030 18:27:59.894"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.516" endtime="20201030 18:27:59.895"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:59.903" endtime="20201030 18:27:59.918"></status>
</kw>
<msg timestamp="20201030 18:27:59.918" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:59.902" endtime="20201030 18:27:59.918"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:59.921" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:59.919" endtime="20201030 18:27:59.921"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:59.922" endtime="20201030 18:27:59.923"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.899" endtime="20201030 18:27:59.924"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.897" endtime="20201030 18:27:59.924"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:59.931" endtime="20201030 18:28:00.219"></status>
</kw>
<msg timestamp="20201030 18:28:00.222" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021363667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021392611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:59.929" endtime="20201030 18:28:00.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:00.230" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021363667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021392611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:00.223" endtime="20201030 18:28:00.230"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:00.231" endtime="20201030 18:28:00.233"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.927" endtime="20201030 18:28:00.233"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.925" endtime="20201030 18:28:00.234"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:00.238" level="INFO">${RESULT} = [{'diff': 2.8943999999999498e-05}, {'diff': 2.8193999999998748e-05}, {'diff': 2.8152999999999512e-05}, {'diff': 2.8152999999999512e-05}, {'diff': 2.8179999999999178e-05}, {'diff': 2.8096999999997763e-...</msg>
<status status="PASS" starttime="20201030 18:28:00.234" endtime="20201030 18:28:00.238"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:00.242" level="INFO">${ACCURACY} = {'diff': [2.8943999999999498e-05, 2.8193999999998748e-05, 2.8152999999999512e-05, 2.8152999999999512e-05, 2.8179999999999178e-05, 2.8096999999997763e-05, 2.8152000000000038e-05, 2.8152999999999512e-05...</msg>
<status status="PASS" starttime="20201030 18:28:00.239" endtime="20201030 18:28:00.242"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:00.246" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201030 18:28:00.245" endtime="20201030 18:28:00.246"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:00.249" level="INFO">VALUE: [2.8943999999999498e-05, 2.8193999999998748e-05, 2.8152999999999512e-05, 2.8152999999999512e-05, 2.8179999999999178e-05, 2.8096999999997763e-05, 2.8152000000000038e-05, 2.8152999999999512e-05, 2.8138999999999942e-05, 2.8138999999999942e-05, 2.8125000000000372e-05, 2.8152999999999512e-05, 2.8138999999999942e-05, 2.8152000000000038e-05, 2.8152999999999512e-05, 2.8152999999999512e-05, 2.815300000000298e-05, 2.818099999999865e-05, 2.816699999999908e-05, 2.8152000000000038e-05, 2.8138999999999942e-05, 2.8138999999999942e-05, 2.8152999999999512e-05, 2.8097000000001232e-05, 2.8152999999999512e-05, 2.8179999999999178e-05, 2.8152999999999512e-05, 2.8165999999999608e-05, 2.8193999999998748e-05, 2.820900000000126e-05, 2.8165999999999608e-05, 2.8165999999999608e-05, 2.8138999999999942e-05, 2.8152999999999512e-05, 2.818100000000212e-05, 2.8152999999999512e-05, 2.8125000000000372e-05, 2.8152999999999512e-05, 2.8138999999999942e-05, 2.8152999999999512e-05, 2.8111000000000802e-05, 2.8236000000000927e-05, 2.8152999999999512e-05, 2.8152999999999512e-05, 2.8138999999999942e-05, 2.8152999999999512e-05, 2.816699999999908e-05, 2.816699999999908e-05, 2.8152999999999512e-05, 2.8152999999999512e-05]</msg>
<status status="PASS" starttime="20201030 18:28:00.247" endtime="20201030 18:28:00.249"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.243" endtime="20201030 18:28:00.250"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:00.253" endtime="20201030 18:28:00.273"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.252" endtime="20201030 18:28:00.274"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.251" endtime="20201030 18:28:00.274"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.895" endtime="20201030 18:28:00.274"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.895" endtime="20201030 18:28:00.274"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:00.283" endtime="20201030 18:28:00.298"></status>
</kw>
<msg timestamp="20201030 18:28:00.299" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:00.281" endtime="20201030 18:28:00.299"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:00.301" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:00.300" endtime="20201030 18:28:00.302"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:00.302" endtime="20201030 18:28:00.304"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.279" endtime="20201030 18:28:00.304"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.277" endtime="20201030 18:28:00.305"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:00.311" endtime="20201030 18:28:00.598"></status>
</kw>
<msg timestamp="20201030 18:28:00.601" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022366069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022395028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:00.310" endtime="20201030 18:28:00.601"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:00.609" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022366069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022395028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:00.602" endtime="20201030 18:28:00.610"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:00.611" endtime="20201030 18:28:00.612"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.307" endtime="20201030 18:28:00.613"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.305" endtime="20201030 18:28:00.613"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:00.617" level="INFO">${RESULT} = [{'diff': 2.895900000000201e-05}, {'diff': 2.8152999999999512e-05}, {'diff': 2.8138999999999942e-05}, {'diff': 2.816699999999908e-05}, {'diff': 2.818100000000212e-05}, {'diff': 2.818100000000212e-05},...</msg>
<status status="PASS" starttime="20201030 18:28:00.614" endtime="20201030 18:28:00.617"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:00.621" level="INFO">${ACCURACY} = {'diff': [2.895900000000201e-05, 2.8152999999999512e-05, 2.8138999999999942e-05, 2.816699999999908e-05, 2.818100000000212e-05, 2.818100000000212e-05, 2.820900000000126e-05, 2.818100000000212e-05, 2.81...</msg>
<status status="PASS" starttime="20201030 18:28:00.618" endtime="20201030 18:28:00.621"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:00.626" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201030 18:28:00.625" endtime="20201030 18:28:00.626"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:00.628" level="INFO">VALUE: [2.895900000000201e-05, 2.8152999999999512e-05, 2.8138999999999942e-05, 2.816699999999908e-05, 2.818100000000212e-05, 2.818100000000212e-05, 2.820900000000126e-05, 2.818100000000212e-05, 2.8152999999999512e-05, 2.818100000000212e-05, 2.8152999999999512e-05, 2.8165999999999608e-05, 2.8165999999999608e-05, 2.8138999999999942e-05, 2.8152000000000038e-05, 2.8125000000000372e-05, 2.8125000000000372e-05, 2.8152999999999512e-05, 2.8138999999999942e-05, 2.8152999999999512e-05, 2.8138999999999942e-05, 2.8236000000000927e-05, 2.8125000000000372e-05, 2.8180000000002647e-05, 2.8138999999999942e-05, 2.816699999999908e-05, 2.8138999999999942e-05, 2.816700000000255e-05, 2.8193999999998748e-05, 2.8152999999999512e-05, 2.8236000000000927e-05, 2.8165999999999608e-05, 2.816699999999908e-05, 2.815300000000298e-05, 2.8152999999999512e-05, 2.816699999999908e-05, 2.8152999999999512e-05, 2.8125000000000372e-05, 2.8138999999999942e-05, 2.815300000000298e-05, 2.8138999999999942e-05, 2.8125000000000372e-05, 2.8152999999999512e-05, 2.820899999999779e-05, 2.816699999999908e-05, 2.8152999999999512e-05, 2.8125000000000372e-05, 2.8138999999999942e-05, 2.8138999999999942e-05, 2.816699999999908e-05]</msg>
<status status="PASS" starttime="20201030 18:28:00.627" endtime="20201030 18:28:00.633"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.622" endtime="20201030 18:28:00.634"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:00.638" endtime="20201030 18:28:00.657"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.636" endtime="20201030 18:28:00.657"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.635" endtime="20201030 18:28:00.658"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.275" endtime="20201030 18:28:00.658"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.275" endtime="20201030 18:28:00.658"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:00.667" endtime="20201030 18:28:00.682"></status>
</kw>
<msg timestamp="20201030 18:28:00.682" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:00.665" endtime="20201030 18:28:00.682"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:00.684" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:00.683" endtime="20201030 18:28:00.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:00.685" endtime="20201030 18:28:00.687"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.663" endtime="20201030 18:28:00.688"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.661" endtime="20201030 18:28:00.688"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:00.694" endtime="20201030 18:28:00.980"></status>
</kw>
<msg timestamp="20201030 18:28:00.983" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021539236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021568208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:00.693" endtime="20201030 18:28:00.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:00.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021539236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021568208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:00.984" endtime="20201030 18:28:00.991"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:00.992" endtime="20201030 18:28:00.994"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.690" endtime="20201030 18:28:00.994"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.689" endtime="20201030 18:28:00.994"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:00.998" level="INFO">${RESULT} = [{'diff': 2.8971999999998638e-05}, {'diff': 2.815300000000298e-05}, {'diff': 2.8138999999999942e-05}, {'diff': 2.8125000000000372e-05}, {'diff': 2.8138999999999942e-05}, {'diff': 2.8152999999999512e-0...</msg>
<status status="PASS" starttime="20201030 18:28:00.995" endtime="20201030 18:28:00.999"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:01.003" level="INFO">${ACCURACY} = {'diff': [2.8971999999998638e-05, 2.815300000000298e-05, 2.8138999999999942e-05, 2.8125000000000372e-05, 2.8138999999999942e-05, 2.8152999999999512e-05, 2.8111000000000802e-05, 2.8152999999999512e-05,...</msg>
<status status="PASS" starttime="20201030 18:28:00.999" endtime="20201030 18:28:01.004"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:01.008" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201030 18:28:01.007" endtime="20201030 18:28:01.008"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:01.010" level="INFO">VALUE: [2.8971999999998638e-05, 2.815300000000298e-05, 2.8138999999999942e-05, 2.8125000000000372e-05, 2.8138999999999942e-05, 2.8152999999999512e-05, 2.8111000000000802e-05, 2.8152999999999512e-05, 2.8152999999999512e-05, 2.819500000000169e-05, 2.8138999999999942e-05, 2.8165999999999608e-05, 2.8152999999999512e-05, 2.8138999999999942e-05, 2.8152999999999512e-05, 2.8152999999999512e-05, 2.8125000000000372e-05, 2.8138999999999942e-05, 2.8138999999999942e-05, 2.8152000000000038e-05, 2.816700000000255e-05, 2.816699999999908e-05, 2.816699999999908e-05, 2.8165999999999608e-05, 2.8152999999999512e-05, 2.8138999999999942e-05, 2.816699999999908e-05, 2.8222000000001357e-05, 2.8152999999999512e-05, 2.8138999999999942e-05, 2.815300000000298e-05, 2.8111000000000802e-05, 2.8096999999997763e-05, 2.818099999999865e-05, 2.8152000000000038e-05, 2.8165999999999608e-05, 2.8152999999999512e-05, 2.8165999999999608e-05, 2.8138999999999942e-05, 2.8125000000000372e-05, 2.8208000000001787e-05, 2.8152999999999512e-05, 2.813900000000341e-05, 2.816700000000255e-05, 2.816699999999908e-05, 2.819500000000169e-05, 2.816699999999908e-05, 2.8138999999999942e-05, 2.8165999999999608e-05, 2.8125000000000372e-05]</msg>
<status status="PASS" starttime="20201030 18:28:01.009" endtime="20201030 18:28:01.011"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.004" endtime="20201030 18:28:01.012"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:01.015" endtime="20201030 18:28:01.035"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.014" endtime="20201030 18:28:01.035"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.013" endtime="20201030 18:28:01.036"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.659" endtime="20201030 18:28:01.036"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.659" endtime="20201030 18:28:01.036"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:01.045" endtime="20201030 18:28:01.059"></status>
</kw>
<msg timestamp="20201030 18:28:01.060" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:01.043" endtime="20201030 18:28:01.060"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:01.062" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:01.061" endtime="20201030 18:28:01.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:01.063" endtime="20201030 18:28:01.065"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.041" endtime="20201030 18:28:01.066"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.038" endtime="20201030 18:28:01.066"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:01.072" endtime="20201030 18:28:01.360"></status>
</kw>
<msg timestamp="20201030 18:28:01.364" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021477597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021506556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:01.071" endtime="20201030 18:28:01.364"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:01.374" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021477597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021506556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:01.365" endtime="20201030 18:28:01.375"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:01.376" endtime="20201030 18:28:01.379"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.068" endtime="20201030 18:28:01.380"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.067" endtime="20201030 18:28:01.380"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:01.386" level="INFO">${RESULT} = [{'diff': 2.895899999999854e-05}, {'diff': 2.8125000000000372e-05}, {'diff': 2.8125000000000372e-05}, {'diff': 2.8152999999999512e-05}, {'diff': 2.8138000000000468e-05}, {'diff': 2.8207999999998318e-0...</msg>
<status status="PASS" starttime="20201030 18:28:01.381" endtime="20201030 18:28:01.386"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:01.391" level="INFO">${ACCURACY} = {'diff': [2.895899999999854e-05, 2.8125000000000372e-05, 2.8125000000000372e-05, 2.8152999999999512e-05, 2.8138000000000468e-05, 2.8207999999998318e-05, 2.8152999999999512e-05, 2.816699999999908e-05, ...</msg>
<status status="PASS" starttime="20201030 18:28:01.387" endtime="20201030 18:28:01.391"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:01.396" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201030 18:28:01.395" endtime="20201030 18:28:01.396"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:01.398" level="INFO">VALUE: [2.895899999999854e-05, 2.8125000000000372e-05, 2.8125000000000372e-05, 2.8152999999999512e-05, 2.8138000000000468e-05, 2.8207999999998318e-05, 2.8152999999999512e-05, 2.816699999999908e-05, 2.816700000000255e-05, 2.8179999999999178e-05, 2.8138999999999942e-05, 2.8152999999999512e-05, 2.8152000000000038e-05, 2.8152000000000038e-05, 2.8138999999999942e-05, 2.815300000000298e-05, 2.8125000000000372e-05, 2.8152999999999512e-05, 2.816700000000255e-05, 2.8138999999999942e-05, 2.8152999999999512e-05, 2.820899999999779e-05, 2.8152999999999512e-05, 2.8083000000001662e-05, 2.8083000000001662e-05, 2.8138999999999942e-05, 2.8152999999999512e-05, 2.8152000000000038e-05, 2.8138999999999942e-05, 2.8152000000000038e-05, 2.816699999999908e-05, 2.8152999999999512e-05, 2.816699999999908e-05, 2.816699999999908e-05, 2.8152000000000038e-05, 2.816699999999908e-05, 2.8138999999999942e-05, 2.8152999999999512e-05, 2.8138999999999942e-05, 2.8138999999999942e-05, 2.8152000000000038e-05, 2.8138999999999942e-05, 2.8152999999999512e-05, 2.8096999999997763e-05, 2.8152999999999512e-05, 2.815300000000298e-05, 2.8152999999999512e-05, 2.8084000000001136e-05, 2.8138999999999942e-05, 2.8152999999999512e-05]</msg>
<status status="PASS" starttime="20201030 18:28:01.397" endtime="20201030 18:28:01.399"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.392" endtime="20201030 18:28:01.399"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:01.403" endtime="20201030 18:28:01.423"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.402" endtime="20201030 18:28:01.423"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.401" endtime="20201030 18:28:01.423"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.037" endtime="20201030 18:28:01.424"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.036" endtime="20201030 18:28:01.424"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:01.432" endtime="20201030 18:28:01.448"></status>
</kw>
<msg timestamp="20201030 18:28:01.449" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:01.431" endtime="20201030 18:28:01.449"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:01.451" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:01.450" endtime="20201030 18:28:01.452"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:01.452" endtime="20201030 18:28:01.454"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.428" endtime="20201030 18:28:01.454"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.426" endtime="20201030 18:28:01.455"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:01.461" endtime="20201030 18:28:01.746"></status>
</kw>
<msg timestamp="20201030 18:28:01.749" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022391042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022424931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:01.460" endtime="20201030 18:28:01.749"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:01.759" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022391042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022424931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:01.751" endtime="20201030 18:28:01.760"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:01.761" endtime="20201030 18:28:01.764"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.457" endtime="20201030 18:28:01.764"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.455" endtime="20201030 18:28:01.765"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:01.770" level="INFO">${RESULT} = [{'diff': 3.3888999999998753e-05}, {'diff': 3.306999999999963e-05}, {'diff': 3.30839999999992e-05}, {'diff': 3.306999999999963e-05}, {'diff': 3.305600000000006e-05}, {'diff': 3.3055000000000584e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:28:01.766" endtime="20201030 18:28:01.770"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:01.775" level="INFO">${ACCURACY} = {'diff': [3.3888999999998753e-05, 3.306999999999963e-05, 3.30839999999992e-05, 3.306999999999963e-05, 3.305600000000006e-05, 3.3055000000000584e-05, 3.306999999999963e-05, 3.306999999999963e-05, 3.306...</msg>
<status status="PASS" starttime="20201030 18:28:01.771" endtime="20201030 18:28:01.775"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:01.781" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201030 18:28:01.779" endtime="20201030 18:28:01.782"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:01.785" level="INFO">VALUE: [3.3888999999998753e-05, 3.306999999999963e-05, 3.30839999999992e-05, 3.306999999999963e-05, 3.305600000000006e-05, 3.3055000000000584e-05, 3.306999999999963e-05, 3.306999999999963e-05, 3.3069000000000154e-05, 3.3069000000000154e-05, 3.315200000000157e-05, 3.306999999999963e-05, 3.3069000000000154e-05, 3.3082999999999724e-05, 3.306999999999963e-05, 3.3082999999999724e-05, 3.3082999999999724e-05, 3.306999999999963e-05, 3.3082999999999724e-05, 3.3082999999999724e-05, 3.3069000000000154e-05, 3.306999999999963e-05, 3.3069000000000154e-05, 3.306999999999963e-05, 3.3082999999999724e-05, 3.30839999999992e-05, 3.308300000000319e-05, 3.3082999999999724e-05, 3.309700000000276e-05, 3.311100000000233e-05, 3.309799999999877e-05, 3.3069000000000154e-05, 3.3082999999999724e-05, 3.306999999999963e-05, 3.306999999999963e-05, 3.306999999999963e-05, 3.3082999999999724e-05, 3.30839999999992e-05, 3.308400000000267e-05, 3.3082999999999724e-05, 3.3082999999999724e-05, 3.3069000000000154e-05, 3.3041000000001014e-05, 3.3069000000000154e-05, 3.311100000000233e-05, 3.3069000000000154e-05, 3.3069000000000154e-05, 3.3082999999999724e-05, 3.305600000000006e-05, 3.3138999999998e-05]</msg>
<status status="PASS" starttime="20201030 18:28:01.783" endtime="20201030 18:28:01.787"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.776" endtime="20201030 18:28:01.788"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:01.794" endtime="20201030 18:28:01.814"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.792" endtime="20201030 18:28:01.815"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.790" endtime="20201030 18:28:01.815"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.425" endtime="20201030 18:28:01.815"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.424" endtime="20201030 18:28:01.816"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:01.825" endtime="20201030 18:28:01.840"></status>
</kw>
<msg timestamp="20201030 18:28:01.841" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:01.824" endtime="20201030 18:28:01.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:01.843" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:01.842" endtime="20201030 18:28:01.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:01.844" endtime="20201030 18:28:01.846"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.821" endtime="20201030 18:28:01.846"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.819" endtime="20201030 18:28:01.847"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:01.853" endtime="20201030 18:28:02.139"></status>
</kw>
<msg timestamp="20201030 18:28:02.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023014528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023048389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:01.852" endtime="20201030 18:28:02.142"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:02.150" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023014528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023048389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:02.143" endtime="20201030 18:28:02.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:02.151" endtime="20201030 18:28:02.153"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.849" endtime="20201030 18:28:02.154"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.847" endtime="20201030 18:28:02.154"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:02.158" level="INFO">${RESULT} = [{'diff': 3.3860999999999614e-05}, {'diff': 3.3069000000000154e-05}, {'diff': 3.3110999999998864e-05}, {'diff': 3.3124999999998433e-05}, {'diff': 3.304200000000049e-05}, {'diff': 3.306999999999963e-05...</msg>
<status status="PASS" starttime="20201030 18:28:02.155" endtime="20201030 18:28:02.158"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:02.165" level="INFO">${ACCURACY} = {'diff': [3.3860999999999614e-05, 3.3069000000000154e-05, 3.3110999999998864e-05, 3.3124999999998433e-05, 3.304200000000049e-05, 3.306999999999963e-05, 3.305600000000006e-05, 3.3138000000002e-05, 3.30...</msg>
<status status="PASS" starttime="20201030 18:28:02.159" endtime="20201030 18:28:02.166"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:02.170" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201030 18:28:02.169" endtime="20201030 18:28:02.171"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:02.173" level="INFO">VALUE: [3.3860999999999614e-05, 3.3069000000000154e-05, 3.3110999999998864e-05, 3.3124999999998433e-05, 3.304200000000049e-05, 3.306999999999963e-05, 3.305600000000006e-05, 3.3138000000002e-05, 3.305600000000006e-05, 3.3082999999999724e-05, 3.3069000000000154e-05, 3.3082999999999724e-05, 3.308400000000267e-05, 3.3096999999999294e-05, 3.3069000000000154e-05, 3.3082999999999724e-05, 3.3082999999999724e-05, 3.3082999999999724e-05, 3.3082999999999724e-05, 3.308300000000319e-05, 3.308300000000319e-05, 3.3096999999999294e-05, 3.3069000000000154e-05, 3.3082999999999724e-05, 3.30839999999992e-05, 3.30839999999992e-05, 3.3069000000000154e-05, 3.3069000000000154e-05, 3.3082999999999724e-05, 3.311100000000233e-05, 3.3069000000000154e-05, 3.3069000000000154e-05, 3.305600000000006e-05, 3.306999999999963e-05, 3.304200000000049e-05, 3.3082999999999724e-05, 3.31250000000019e-05, 3.306999999999963e-05, 3.3069000000000154e-05, 3.30839999999992e-05, 3.305600000000006e-05, 3.30839999999992e-05, 3.313799999999853e-05, 3.3082999999999724e-05, 3.3096999999999294e-05, 3.3082999999999724e-05, 3.3082999999999724e-05, 3.3082999999999724e-05, 3.3082999999999724e-05, 3.308400000000267e-05]</msg>
<status status="PASS" starttime="20201030 18:28:02.171" endtime="20201030 18:28:02.174"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.166" endtime="20201030 18:28:02.175"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:02.178" endtime="20201030 18:28:02.198"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.177" endtime="20201030 18:28:02.199"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.176" endtime="20201030 18:28:02.199"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.817" endtime="20201030 18:28:02.199"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.816" endtime="20201030 18:28:02.199"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:02.208" endtime="20201030 18:28:02.223"></status>
</kw>
<msg timestamp="20201030 18:28:02.223" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:02.206" endtime="20201030 18:28:02.223"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:02.226" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:02.224" endtime="20201030 18:28:02.226"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:02.227" endtime="20201030 18:28:02.228"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.204" endtime="20201030 18:28:02.229"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.202" endtime="20201030 18:28:02.229"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:02.236" endtime="20201030 18:28:02.524"></status>
</kw>
<msg timestamp="20201030 18:28:02.527" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021323181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021357069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:02.234" endtime="20201030 18:28:02.527"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:02.535" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021323181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021357069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:02.528" endtime="20201030 18:28:02.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:02.536" endtime="20201030 18:28:02.538"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.232" endtime="20201030 18:28:02.538"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.230" endtime="20201030 18:28:02.538"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:02.542" level="INFO">${RESULT} = [{'diff': 3.388799999999928e-05}, {'diff': 3.3069000000000154e-05}, {'diff': 3.30839999999992e-05}, {'diff': 3.3082999999999724e-05}, {'diff': 3.30839999999992e-05}, {'diff': 3.306999999999963e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:02.539" endtime="20201030 18:28:02.543"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:02.547" level="INFO">${ACCURACY} = {'diff': [3.388799999999928e-05, 3.3069000000000154e-05, 3.30839999999992e-05, 3.3082999999999724e-05, 3.30839999999992e-05, 3.306999999999963e-05, 3.306999999999963e-05, 3.3110999999998864e-05, 3.306...</msg>
<status status="PASS" starttime="20201030 18:28:02.543" endtime="20201030 18:28:02.547"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:02.551" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201030 18:28:02.550" endtime="20201030 18:28:02.551"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:02.553" level="INFO">VALUE: [3.388799999999928e-05, 3.3069000000000154e-05, 3.30839999999992e-05, 3.3082999999999724e-05, 3.30839999999992e-05, 3.306999999999963e-05, 3.306999999999963e-05, 3.3110999999998864e-05, 3.306999999999963e-05, 3.3069000000000154e-05, 3.3082999999999724e-05, 3.306999999999963e-05, 3.305600000000006e-05, 3.301400000000135e-05, 3.3069000000000154e-05, 3.306999999999963e-05, 3.3082999999999724e-05, 3.3055000000000584e-05, 3.305600000000006e-05, 3.3069000000000154e-05, 3.308400000000267e-05, 3.3069000000000154e-05, 3.3096999999999294e-05, 3.306999999999963e-05, 3.3096999999999294e-05, 3.3082999999999724e-05, 3.305600000000006e-05, 3.3082999999999724e-05, 3.306999999999963e-05, 3.3082999999999724e-05, 3.3082999999999724e-05, 3.298600000000221e-05, 3.3069000000000154e-05, 3.3069000000000154e-05, 3.3069000000000154e-05, 3.3027000000001444e-05, 3.3069000000000154e-05, 3.3082999999999724e-05, 3.3110999999998864e-05, 3.3069000000000154e-05, 3.3069000000000154e-05, 3.305600000000006e-05, 3.302800000000092e-05, 3.30839999999992e-05, 3.30839999999992e-05, 3.306999999999963e-05, 3.3069000000000154e-05, 3.304200000000049e-05, 3.306999999999963e-05, 3.3069000000000154e-05]</msg>
<status status="PASS" starttime="20201030 18:28:02.552" endtime="20201030 18:28:02.554"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.547" endtime="20201030 18:28:02.555"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:02.558" endtime="20201030 18:28:02.578"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.557" endtime="20201030 18:28:02.578"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.556" endtime="20201030 18:28:02.578"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.200" endtime="20201030 18:28:02.579"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.200" endtime="20201030 18:28:02.579"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:02.587" endtime="20201030 18:28:02.603"></status>
</kw>
<msg timestamp="20201030 18:28:02.604" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:02.586" endtime="20201030 18:28:02.604"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:02.606" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:02.605" endtime="20201030 18:28:02.606"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:02.607" endtime="20201030 18:28:02.609"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.583" endtime="20201030 18:28:02.609"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.581" endtime="20201030 18:28:02.609"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:02.616" endtime="20201030 18:28:02.901"></status>
</kw>
<msg timestamp="20201030 18:28:02.904" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022226069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022259944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:02.615" endtime="20201030 18:28:02.904"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:02.912" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022226069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022259944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:02.905" endtime="20201030 18:28:02.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:02.913" endtime="20201030 18:28:02.915"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.612" endtime="20201030 18:28:02.915"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.610" endtime="20201030 18:28:02.916"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:02.920" level="INFO">${RESULT} = [{'diff': 3.3874999999999184e-05}, {'diff': 3.3055000000000584e-05}, {'diff': 3.3069000000000154e-05}, {'diff': 3.3069000000000154e-05}, {'diff': 3.3069000000000154e-05}, {'diff': 3.3069000000000154e-...</msg>
<status status="PASS" starttime="20201030 18:28:02.916" endtime="20201030 18:28:02.920"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:02.924" level="INFO">${ACCURACY} = {'diff': [3.3874999999999184e-05, 3.3055000000000584e-05, 3.3069000000000154e-05, 3.3069000000000154e-05, 3.3069000000000154e-05, 3.3069000000000154e-05, 3.30839999999992e-05, 3.3069000000000154e-05, ...</msg>
<status status="PASS" starttime="20201030 18:28:02.921" endtime="20201030 18:28:02.924"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:02.928" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201030 18:28:02.927" endtime="20201030 18:28:02.928"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:02.930" level="INFO">VALUE: [3.3874999999999184e-05, 3.3055000000000584e-05, 3.3069000000000154e-05, 3.3069000000000154e-05, 3.3069000000000154e-05, 3.3069000000000154e-05, 3.30839999999992e-05, 3.3069000000000154e-05, 3.3069000000000154e-05, 3.3124999999998433e-05, 3.306999999999963e-05, 3.3082999999999724e-05, 3.3082999999999724e-05, 3.306999999999963e-05, 3.3069000000000154e-05, 3.3082999999999724e-05, 3.3069000000000154e-05, 3.3055000000000584e-05, 3.308300000000319e-05, 3.308300000000319e-05, 3.3082999999999724e-05, 3.3069000000000154e-05, 3.306999999999963e-05, 3.3055000000000584e-05, 3.3082999999999724e-05, 3.3082999999999724e-05, 3.3041000000001014e-05, 3.3069000000000154e-05, 3.306999999999963e-05, 3.3124999999998433e-05, 3.305600000000006e-05, 3.30700000000031e-05, 3.3082999999999724e-05, 3.3082999999999724e-05, 3.306999999999963e-05, 3.3082999999999724e-05, 3.308400000000267e-05, 3.3082999999999724e-05, 3.305600000000006e-05, 3.306999999999963e-05, 3.308300000000319e-05, 3.3082999999999724e-05, 3.3082999999999724e-05, 3.306999999999963e-05, 3.30839999999992e-05, 3.3082999999999724e-05, 3.30839999999992e-05, 3.306999999999963e-05, 3.3069000000000154e-05, 3.3069000000000154e-05]</msg>
<status status="PASS" starttime="20201030 18:28:02.929" endtime="20201030 18:28:02.932"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.924" endtime="20201030 18:28:02.933"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:02.936" endtime="20201030 18:28:02.956"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.935" endtime="20201030 18:28:02.956"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.934" endtime="20201030 18:28:02.957"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.580" endtime="20201030 18:28:02.957"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.579" endtime="20201030 18:28:02.957"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:02.966" endtime="20201030 18:28:02.981"></status>
</kw>
<msg timestamp="20201030 18:28:02.981" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:02.964" endtime="20201030 18:28:02.981"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:02.984" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:02.982" endtime="20201030 18:28:02.984"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:02.985" endtime="20201030 18:28:02.986"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.962" endtime="20201030 18:28:02.987"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.959" endtime="20201030 18:28:02.987"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:02.994" endtime="20201030 18:28:03.279"></status>
</kw>
<msg timestamp="20201030 18:28:03.282" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021776153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021810083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:02.992" endtime="20201030 18:28:03.282"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:03.290" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021776153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021810083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:03.283" endtime="20201030 18:28:03.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:03.291" endtime="20201030 18:28:03.293"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.989" endtime="20201030 18:28:03.293"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.988" endtime="20201030 18:28:03.293"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:03.297" level="INFO">${RESULT} = [{'diff': 3.393000000000146e-05}, {'diff': 3.306999999999963e-05}, {'diff': 3.306999999999963e-05}, {'diff': 3.308300000000319e-05}, {'diff': 3.305600000000006e-05}, {'diff': 3.3069000000000154e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:28:03.294" endtime="20201030 18:28:03.298"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:03.302" level="INFO">${ACCURACY} = {'diff': [3.393000000000146e-05, 3.306999999999963e-05, 3.306999999999963e-05, 3.308300000000319e-05, 3.305600000000006e-05, 3.3069000000000154e-05, 3.3069000000000154e-05, 3.3069000000000154e-05, 3.3...</msg>
<status status="PASS" starttime="20201030 18:28:03.298" endtime="20201030 18:28:03.303"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:03.307" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201030 18:28:03.306" endtime="20201030 18:28:03.307"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:03.309" level="INFO">VALUE: [3.393000000000146e-05, 3.306999999999963e-05, 3.306999999999963e-05, 3.308300000000319e-05, 3.305600000000006e-05, 3.3069000000000154e-05, 3.3069000000000154e-05, 3.3069000000000154e-05, 3.301400000000135e-05, 3.3096999999999294e-05, 3.3069000000000154e-05, 3.3069000000000154e-05, 3.308400000000267e-05, 3.3055000000000584e-05, 3.313900000000147e-05, 3.306999999999963e-05, 3.306999999999963e-05, 3.3069000000000154e-05, 3.3069000000000154e-05, 3.3096999999999294e-05, 3.306999999999963e-05, 3.30839999999992e-05, 3.3082999999999724e-05, 3.30839999999992e-05, 3.311200000000181e-05, 3.3082999999999724e-05, 3.30839999999992e-05, 3.3069000000000154e-05, 3.306999999999963e-05, 3.3082999999999724e-05, 3.309799999999877e-05, 3.3110999999998864e-05, 3.30839999999992e-05, 3.30839999999992e-05, 3.3096999999999294e-05, 3.3082999999999724e-05, 3.308400000000267e-05, 3.3069000000000154e-05, 3.3082999999999724e-05, 3.3096999999999294e-05, 3.30700000000031e-05, 3.3082999999999724e-05, 3.3055000000000584e-05, 3.306999999999963e-05, 3.3055000000000584e-05, 3.30839999999992e-05, 3.3069000000000154e-05, 3.30839999999992e-05, 3.3096999999999294e-05, 3.306999999999963e-05]</msg>
<status status="PASS" starttime="20201030 18:28:03.308" endtime="20201030 18:28:03.310"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.303" endtime="20201030 18:28:03.311"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:03.314" endtime="20201030 18:28:03.334"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.313" endtime="20201030 18:28:03.334"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.311" endtime="20201030 18:28:03.335"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.958" endtime="20201030 18:28:03.335"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.957" endtime="20201030 18:28:03.335"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:03.344" endtime="20201030 18:28:03.359"></status>
</kw>
<msg timestamp="20201030 18:28:03.359" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:03.342" endtime="20201030 18:28:03.359"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:03.362" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:03.360" endtime="20201030 18:28:03.362"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:03.363" endtime="20201030 18:28:03.364"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.339" endtime="20201030 18:28:03.365"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.337" endtime="20201030 18:28:03.365"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:03.372" endtime="20201030 18:28:03.659"></status>
</kw>
<msg timestamp="20201030 18:28:03.662" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021394958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021433792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:03.370" endtime="20201030 18:28:03.662"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:03.670" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021394958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021433792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:03.663" endtime="20201030 18:28:03.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:03.671" endtime="20201030 18:28:03.673"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.368" endtime="20201030 18:28:03.674"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.366" endtime="20201030 18:28:03.674"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:03.678" level="INFO">${RESULT} = [{'diff': 3.883400000000148e-05}, {'diff': 3.8012999999999936e-05}, {'diff': 3.799999999999984e-05}, {'diff': 3.798600000000027e-05}, {'diff': 3.798699999999974e-05}, {'diff': 3.8026999999999506e-05},...</msg>
<status status="PASS" starttime="20201030 18:28:03.675" endtime="20201030 18:28:03.678"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:03.682" level="INFO">${ACCURACY} = {'diff': [3.883400000000148e-05, 3.8012999999999936e-05, 3.799999999999984e-05, 3.798600000000027e-05, 3.798699999999974e-05, 3.8026999999999506e-05, 3.798600000000027e-05, 3.799999999999984e-05, 3.79...</msg>
<status status="PASS" starttime="20201030 18:28:03.679" endtime="20201030 18:28:03.682"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:03.686" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201030 18:28:03.685" endtime="20201030 18:28:03.687"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:03.689" level="INFO">VALUE: [3.883400000000148e-05, 3.8012999999999936e-05, 3.799999999999984e-05, 3.798600000000027e-05, 3.798699999999974e-05, 3.8026999999999506e-05, 3.798600000000027e-05, 3.799999999999984e-05, 3.797199999999723e-05, 3.799999999999984e-05, 3.798600000000027e-05, 3.799999999999984e-05, 3.799999999999984e-05, 3.807000000000116e-05, 3.799999999999984e-05, 3.798600000000027e-05, 3.801399999999941e-05, 3.799999999999984e-05, 3.798699999999974e-05, 3.799999999999984e-05, 3.798600000000027e-05, 3.799999999999984e-05, 3.799999999999984e-05, 3.798600000000027e-05, 3.802799999999898e-05, 3.79859999999968e-05, 3.801400000000288e-05, 3.802799999999898e-05, 3.79859999999968e-05, 3.798600000000027e-05, 3.798600000000027e-05, 3.798600000000027e-05, 3.802799999999898e-05, 3.799999999999984e-05, 3.799999999999984e-05, 3.798600000000027e-05, 3.798600000000027e-05, 3.8068999999998215e-05, 3.799999999999984e-05, 3.8041000000002545e-05, 3.799999999999984e-05, 3.79859999999968e-05, 3.798699999999974e-05, 3.799999999999984e-05, 3.798600000000027e-05, 3.799999999999984e-05, 3.794400000000156e-05, 3.798600000000027e-05, 3.799999999999984e-05, 3.794399999999809e-05]</msg>
<status status="PASS" starttime="20201030 18:28:03.687" endtime="20201030 18:28:03.689"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.683" endtime="20201030 18:28:03.690"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:03.694" endtime="20201030 18:28:03.713"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.692" endtime="20201030 18:28:03.714"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.691" endtime="20201030 18:28:03.714"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.336" endtime="20201030 18:28:03.714"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.335" endtime="20201030 18:28:03.714"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:03.723" endtime="20201030 18:28:03.739"></status>
</kw>
<msg timestamp="20201030 18:28:03.740" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:03.722" endtime="20201030 18:28:03.740"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:03.742" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:03.741" endtime="20201030 18:28:03.742"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:03.743" endtime="20201030 18:28:03.745"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.719" endtime="20201030 18:28:03.745"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.717" endtime="20201030 18:28:03.746"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:03.752" endtime="20201030 18:28:04.038"></status>
</kw>
<msg timestamp="20201030 18:28:04.041" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022479986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02251875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:28:03.750" endtime="20201030 18:28:04.041"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:04.049" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022479986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02251875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:28:04.042" endtime="20201030 18:28:04.049"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:04.050" endtime="20201030 18:28:04.052"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.748" endtime="20201030 18:28:04.052"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.746" endtime="20201030 18:28:04.053"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:04.057" level="INFO">${RESULT} = [{'diff': 3.876400000000016e-05}, {'diff': 3.79720000000007e-05}, {'diff': 3.798600000000027e-05}, {'diff': 3.798600000000027e-05}, {'diff': 3.79720000000007e-05}, {'diff': 3.802799999999898e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:28:04.054" endtime="20201030 18:28:04.057"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:04.061" level="INFO">${ACCURACY} = {'diff': [3.876400000000016e-05, 3.79720000000007e-05, 3.798600000000027e-05, 3.798600000000027e-05, 3.79720000000007e-05, 3.802799999999898e-05, 3.799999999999984e-05, 3.800000000000331e-05, 3.799999...</msg>
<status status="PASS" starttime="20201030 18:28:04.058" endtime="20201030 18:28:04.061"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:04.065" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201030 18:28:04.064" endtime="20201030 18:28:04.066"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:04.068" level="INFO">VALUE: [3.876400000000016e-05, 3.79720000000007e-05, 3.798600000000027e-05, 3.798600000000027e-05, 3.79720000000007e-05, 3.802799999999898e-05, 3.799999999999984e-05, 3.800000000000331e-05, 3.799999999999984e-05, 3.802800000000245e-05, 3.799999999999984e-05, 3.79720000000007e-05, 3.7944999999997564e-05, 3.798600000000027e-05, 3.798600000000027e-05, 3.799999999999984e-05, 3.799999999999984e-05, 3.798600000000027e-05, 3.797300000000017e-05, 3.798600000000027e-05, 3.799999999999984e-05, 3.798600000000027e-05, 3.798699999999974e-05, 3.799999999999984e-05, 3.799999999999984e-05, 3.798600000000027e-05, 3.798600000000027e-05, 3.8026999999999506e-05, 3.799999999999984e-05, 3.799999999999984e-05, 3.798600000000027e-05, 3.79720000000007e-05, 3.797199999999723e-05, 3.8040999999999076e-05, 3.79720000000007e-05, 3.807000000000116e-05, 3.799999999999984e-05, 3.795799999999766e-05, 3.798600000000027e-05, 3.799999999999984e-05, 3.798600000000027e-05, 3.799999999999984e-05, 3.801400000000288e-05, 3.798600000000027e-05, 3.797199999999723e-05, 3.799999999999984e-05, 3.797300000000017e-05, 3.798600000000027e-05, 3.799999999999984e-05, 3.798600000000027e-05]</msg>
<status status="PASS" starttime="20201030 18:28:04.066" endtime="20201030 18:28:04.069"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.062" endtime="20201030 18:28:04.070"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:04.073" endtime="20201030 18:28:04.093"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.072" endtime="20201030 18:28:04.093"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.071" endtime="20201030 18:28:04.094"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.715" endtime="20201030 18:28:04.094"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.715" endtime="20201030 18:28:04.094"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:04.103" endtime="20201030 18:28:04.118"></status>
</kw>
<msg timestamp="20201030 18:28:04.118" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:04.101" endtime="20201030 18:28:04.118"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:04.121" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:04.119" endtime="20201030 18:28:04.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:04.122" endtime="20201030 18:28:04.123"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.099" endtime="20201030 18:28:04.124"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.096" endtime="20201030 18:28:04.124"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:04.131" endtime="20201030 18:28:04.416"></status>
</kw>
<msg timestamp="20201030 18:28:04.419" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0214135, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021452361, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:28:04.129" endtime="20201030 18:28:04.419"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:04.427" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0214135, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021452361, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:28:04.420" endtime="20201030 18:28:04.428"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:04.428" endtime="20201030 18:28:04.430"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.127" endtime="20201030 18:28:04.430"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.125" endtime="20201030 18:28:04.431"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:04.435" level="INFO">${RESULT} = [{'diff': 3.8861000000001145e-05}, {'diff': 3.7945000000001033e-05}, {'diff': 3.799999999999984e-05}, {'diff': 3.799999999999984e-05}, {'diff': 3.804199999999855e-05}, {'diff': 3.799999999999984e-05},...</msg>
<status status="PASS" starttime="20201030 18:28:04.432" endtime="20201030 18:28:04.435"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:04.440" level="INFO">${ACCURACY} = {'diff': [3.8861000000001145e-05, 3.7945000000001033e-05, 3.799999999999984e-05, 3.799999999999984e-05, 3.804199999999855e-05, 3.799999999999984e-05, 3.8012999999999936e-05, 3.804200000000202e-05, 3.7...</msg>
<status status="PASS" starttime="20201030 18:28:04.436" endtime="20201030 18:28:04.440"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:04.444" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201030 18:28:04.443" endtime="20201030 18:28:04.445"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:04.447" level="INFO">VALUE: [3.8861000000001145e-05, 3.7945000000001033e-05, 3.799999999999984e-05, 3.799999999999984e-05, 3.804199999999855e-05, 3.799999999999984e-05, 3.8012999999999936e-05, 3.804200000000202e-05, 3.799999999999984e-05, 3.801399999999941e-05, 3.798600000000027e-05, 3.799999999999984e-05, 3.799999999999984e-05, 3.795799999999766e-05, 3.798600000000027e-05, 3.799999999999984e-05, 3.798600000000027e-05, 3.798600000000027e-05, 3.799999999999984e-05, 3.799999999999984e-05, 3.798600000000027e-05, 3.799999999999984e-05, 3.799999999999984e-05, 3.799999999999984e-05, 3.799999999999984e-05, 3.799999999999984e-05, 3.798600000000027e-05, 3.801399999999941e-05, 3.799999999999984e-05, 3.799999999999984e-05, 3.799999999999984e-05, 3.801399999999941e-05, 3.801399999999941e-05, 3.807000000000116e-05, 3.805599999999812e-05, 3.798600000000027e-05, 3.802799999999898e-05, 3.801399999999941e-05, 3.799999999999984e-05, 3.799999999999984e-05, 3.799999999999984e-05, 3.79590000000006e-05, 3.801399999999941e-05, 3.799999999999984e-05, 3.798600000000027e-05, 3.7931000000001464e-05, 3.799999999999984e-05, 3.798600000000027e-05, 3.797199999999723e-05, 3.79720000000007e-05]</msg>
<status status="PASS" starttime="20201030 18:28:04.445" endtime="20201030 18:28:04.447"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.441" endtime="20201030 18:28:04.448"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:04.452" endtime="20201030 18:28:04.471"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.450" endtime="20201030 18:28:04.472"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.449" endtime="20201030 18:28:04.472"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.095" endtime="20201030 18:28:04.472"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.094" endtime="20201030 18:28:04.472"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:04.481" endtime="20201030 18:28:04.496"></status>
</kw>
<msg timestamp="20201030 18:28:04.497" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:04.479" endtime="20201030 18:28:04.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:04.499" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:04.498" endtime="20201030 18:28:04.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:04.500" endtime="20201030 18:28:04.502"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.477" endtime="20201030 18:28:04.502"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.475" endtime="20201030 18:28:04.503"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:04.509" endtime="20201030 18:28:04.795"></status>
</kw>
<msg timestamp="20201030 18:28:04.799" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021442625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021481375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:04.507" endtime="20201030 18:28:04.799"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:04.807" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021442625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021481375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:04.800" endtime="20201030 18:28:04.807"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:04.808" endtime="20201030 18:28:04.809"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.505" endtime="20201030 18:28:04.810"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.503" endtime="20201030 18:28:04.810"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:04.814" level="INFO">${RESULT} = [{'diff': 3.875000000000059e-05}, {'diff': 3.79720000000007e-05}, {'diff': 3.799999999999984e-05}, {'diff': 3.798600000000027e-05}, {'diff': 3.798600000000027e-05}, {'diff': 3.799999999999984e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:04.811" endtime="20201030 18:28:04.815"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:04.819" level="INFO">${ACCURACY} = {'diff': [3.875000000000059e-05, 3.79720000000007e-05, 3.799999999999984e-05, 3.798600000000027e-05, 3.798600000000027e-05, 3.799999999999984e-05, 3.801399999999941e-05, 3.799999999999984e-05, 3.79860...</msg>
<status status="PASS" starttime="20201030 18:28:04.815" endtime="20201030 18:28:04.819"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:04.823" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201030 18:28:04.822" endtime="20201030 18:28:04.823"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:04.825" level="INFO">VALUE: [3.875000000000059e-05, 3.79720000000007e-05, 3.799999999999984e-05, 3.798600000000027e-05, 3.798600000000027e-05, 3.799999999999984e-05, 3.801399999999941e-05, 3.799999999999984e-05, 3.798600000000027e-05, 3.799999999999984e-05, 3.798699999999974e-05, 3.799999999999984e-05, 3.799999999999984e-05, 3.807000000000116e-05, 3.799999999999984e-05, 3.799999999999984e-05, 3.799999999999984e-05, 3.7916999999998424e-05, 3.799999999999984e-05, 3.794400000000156e-05, 3.79859999999968e-05, 3.801399999999941e-05, 3.799999999999984e-05, 3.79720000000007e-05, 3.798600000000027e-05, 3.797300000000017e-05, 3.798600000000027e-05, 3.798600000000027e-05, 3.799999999999984e-05, 3.8026999999999506e-05, 3.799999999999984e-05, 3.801399999999941e-05, 3.799999999999984e-05, 3.798699999999974e-05, 3.798600000000027e-05, 3.799999999999984e-05, 3.799999999999984e-05, 3.799999999999984e-05, 3.801399999999941e-05, 3.795800000000113e-05, 3.79590000000006e-05, 3.799999999999984e-05, 3.798600000000027e-05, 3.79859999999968e-05, 3.79720000000007e-05, 3.799999999999984e-05, 3.799999999999984e-05, 3.8069000000001685e-05, 3.799999999999984e-05, 3.799999999999984e-05]</msg>
<status status="PASS" starttime="20201030 18:28:04.824" endtime="20201030 18:28:04.826"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.819" endtime="20201030 18:28:04.827"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:04.830" endtime="20201030 18:28:04.850"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.829" endtime="20201030 18:28:04.850"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.828" endtime="20201030 18:28:04.851"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.473" endtime="20201030 18:28:04.851"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.473" endtime="20201030 18:28:04.851"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:04.860" endtime="20201030 18:28:04.876"></status>
</kw>
<msg timestamp="20201030 18:28:04.876" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:04.858" endtime="20201030 18:28:04.876"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:04.879" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:04.877" endtime="20201030 18:28:04.879"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:04.880" endtime="20201030 18:28:04.881"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.856" endtime="20201030 18:28:04.882"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.853" endtime="20201030 18:28:04.882"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:04.889" endtime="20201030 18:28:05.174"></status>
</kw>
<msg timestamp="20201030 18:28:05.177" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022511014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022549819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:04.887" endtime="20201030 18:28:05.177"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:05.185" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022511014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022549819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:05.178" endtime="20201030 18:28:05.186"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:05.186" endtime="20201030 18:28:05.188"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.885" endtime="20201030 18:28:05.188"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.883" endtime="20201030 18:28:05.189"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:05.193" level="INFO">${RESULT} = [{'diff': 3.8804999999999396e-05}, {'diff': 3.798600000000027e-05}, {'diff': 3.799999999999984e-05}, {'diff': 3.799999999999984e-05}, {'diff': 3.799999999999984e-05}, {'diff': 3.807000000000116e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:28:05.190" endtime="20201030 18:28:05.193"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:05.197" level="INFO">${ACCURACY} = {'diff': [3.8804999999999396e-05, 3.798600000000027e-05, 3.799999999999984e-05, 3.799999999999984e-05, 3.799999999999984e-05, 3.807000000000116e-05, 3.79720000000007e-05, 3.804199999999855e-05, 3.7999...</msg>
<status status="PASS" starttime="20201030 18:28:05.194" endtime="20201030 18:28:05.197"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:05.201" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201030 18:28:05.200" endtime="20201030 18:28:05.202"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:05.204" level="INFO">VALUE: [3.8804999999999396e-05, 3.798600000000027e-05, 3.799999999999984e-05, 3.799999999999984e-05, 3.799999999999984e-05, 3.807000000000116e-05, 3.79720000000007e-05, 3.804199999999855e-05, 3.799999999999984e-05, 3.798600000000027e-05, 3.79720000000007e-05, 4.2916999999999955e-05, 3.799999999999984e-05, 3.797199999999723e-05, 3.798600000000027e-05, 3.798600000000027e-05, 3.8012999999999936e-05, 3.798600000000027e-05, 3.799999999999984e-05, 4.294399999999962e-05, 3.8026999999999506e-05, 3.798600000000027e-05, 3.799999999999984e-05, 3.800000000000331e-05, 3.798600000000027e-05, 3.79720000000007e-05, 4.2916999999999955e-05, 3.79720000000007e-05, 3.797199999999723e-05, 3.799999999999984e-05, 3.798600000000027e-05, 3.795799999999766e-05, 4.2889000000000815e-05, 3.798600000000027e-05, 3.79720000000007e-05, 3.798600000000027e-05, 3.801399999999941e-05, 3.802799999999898e-05, 3.799999999999984e-05, 3.797300000000017e-05, 3.801399999999941e-05, 3.797199999999723e-05, 3.798600000000027e-05, 3.798600000000027e-05, 3.799999999999984e-05, 3.799999999999984e-05, 3.799999999999984e-05, 3.79590000000006e-05, 4.2916999999999955e-05, 4.2916999999999955e-05]</msg>
<status status="PASS" starttime="20201030 18:28:05.202" endtime="20201030 18:28:05.205"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.198" endtime="20201030 18:28:05.206"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:05.209" endtime="20201030 18:28:05.229"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.208" endtime="20201030 18:28:05.230"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.207" endtime="20201030 18:28:05.230"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.852" endtime="20201030 18:28:05.230"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.851" endtime="20201030 18:28:05.231"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:05.239" endtime="20201030 18:28:05.254"></status>
</kw>
<msg timestamp="20201030 18:28:05.255" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:05.238" endtime="20201030 18:28:05.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:05.257" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:05.256" endtime="20201030 18:28:05.258"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:05.258" endtime="20201030 18:28:05.260"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.235" endtime="20201030 18:28:05.260"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.233" endtime="20201030 18:28:05.261"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:05.267" endtime="20201030 18:28:05.553"></status>
</kw>
<msg timestamp="20201030 18:28:05.556" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021509194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021552958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:05.266" endtime="20201030 18:28:05.556"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:05.564" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021509194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021552958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:05.557" endtime="20201030 18:28:05.564"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:05.565" endtime="20201030 18:28:05.566"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.263" endtime="20201030 18:28:05.567"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.261" endtime="20201030 18:28:05.567"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:05.571" level="INFO">${RESULT} = [{'diff': 4.376400000000169e-05}, {'diff': 4.2861000000001676e-05}, {'diff': 4.2972999999998235e-05}, {'diff': 4.286200000000115e-05}, {'diff': 4.29999999999979e-05}, {'diff': 4.2930999999999525e-05},...</msg>
<status status="PASS" starttime="20201030 18:28:05.568" endtime="20201030 18:28:05.572"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:05.579" level="INFO">${ACCURACY} = {'diff': [4.376400000000169e-05, 4.2861000000001676e-05, 4.2972999999998235e-05, 4.286200000000115e-05, 4.29999999999979e-05, 4.2930999999999525e-05, 4.290200000000091e-05, 4.2930999999999525e-05, 4.2...</msg>
<status status="PASS" starttime="20201030 18:28:05.572" endtime="20201030 18:28:05.579"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:05.583" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201030 18:28:05.582" endtime="20201030 18:28:05.584"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:05.586" level="INFO">VALUE: [4.376400000000169e-05, 4.2861000000001676e-05, 4.2972999999998235e-05, 4.286200000000115e-05, 4.29999999999979e-05, 4.2930999999999525e-05, 4.290200000000091e-05, 4.2930999999999525e-05, 4.2916999999999955e-05, 4.293000000000005e-05, 4.2916999999999955e-05, 4.2930999999999525e-05, 4.293000000000005e-05, 4.2916999999999955e-05, 4.291599999999701e-05, 4.293000000000005e-05, 4.2874999999997776e-05, 4.2902999999996916e-05, 4.2903000000000385e-05, 4.2875000000001245e-05, 4.298599999999833e-05, 4.294399999999962e-05, 4.2903000000000385e-05, 4.293000000000005e-05, 4.2916999999999955e-05, 4.293000000000005e-05, 4.291600000000048e-05, 4.293000000000005e-05, 4.2903000000000385e-05, 4.2931000000002995e-05, 4.2930999999999525e-05, 4.2861000000001676e-05, 4.291600000000048e-05, 4.2903000000000385e-05, 4.2889000000000815e-05, 4.2973000000001704e-05, 4.2931000000002995e-05, 4.2930999999999525e-05, 4.2874999999997776e-05, 4.2916999999999955e-05, 4.2916999999999955e-05, 4.2916999999999955e-05, 4.291600000000048e-05, 4.2916999999999955e-05, 4.2916999999999955e-05, 4.293000000000005e-05, 4.2930999999999525e-05, 4.297200000000223e-05, 4.295799999999919e-05, 4.2916999999999955e-05]</msg>
<status status="PASS" starttime="20201030 18:28:05.584" endtime="20201030 18:28:05.587"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.580" endtime="20201030 18:28:05.587"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:05.591" endtime="20201030 18:28:05.610"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.589" endtime="20201030 18:28:05.611"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.588" endtime="20201030 18:28:05.611"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.232" endtime="20201030 18:28:05.611"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.231" endtime="20201030 18:28:05.611"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:05.620" endtime="20201030 18:28:05.635"></status>
</kw>
<msg timestamp="20201030 18:28:05.636" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:05.618" endtime="20201030 18:28:05.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:05.638" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:05.637" endtime="20201030 18:28:05.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:05.639" endtime="20201030 18:28:05.641"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.616" endtime="20201030 18:28:05.642"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.614" endtime="20201030 18:28:05.642"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:05.648" endtime="20201030 18:28:05.935"></status>
</kw>
<msg timestamp="20201030 18:28:05.938" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021604611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021648347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:05.647" endtime="20201030 18:28:05.938"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:05.946" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021604611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021648347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:05.939" endtime="20201030 18:28:05.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:05.947" endtime="20201030 18:28:05.949"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.644" endtime="20201030 18:28:05.950"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.643" endtime="20201030 18:28:05.950"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:05.954" level="INFO">${RESULT} = [{'diff': 4.373599999999908e-05}, {'diff': 4.2930999999999525e-05}, {'diff': 4.2931000000002995e-05}, {'diff': 4.291600000000048e-05}, {'diff': 4.2917000000003425e-05}, {'diff': 4.286200000000115e-05}...</msg>
<status status="PASS" starttime="20201030 18:28:05.951" endtime="20201030 18:28:05.954"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:05.958" level="INFO">${ACCURACY} = {'diff': [4.373599999999908e-05, 4.2930999999999525e-05, 4.2931000000002995e-05, 4.291600000000048e-05, 4.2917000000003425e-05, 4.286200000000115e-05, 4.2931000000002995e-05, 4.2916999999999955e-05, 4...</msg>
<status status="PASS" starttime="20201030 18:28:05.955" endtime="20201030 18:28:05.958"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:05.962" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201030 18:28:05.961" endtime="20201030 18:28:05.963"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:05.965" level="INFO">VALUE: [4.373599999999908e-05, 4.2930999999999525e-05, 4.2931000000002995e-05, 4.291600000000048e-05, 4.2917000000003425e-05, 4.286200000000115e-05, 4.2931000000002995e-05, 4.2916999999999955e-05, 4.291600000000048e-05, 4.295799999999919e-05, 4.2930999999999525e-05, 4.297199999999876e-05, 4.2888999999997346e-05, 4.293000000000005e-05, 4.2916999999999955e-05, 4.2903000000000385e-05, 4.2916999999999955e-05, 4.2916999999999955e-05, 4.300000000000137e-05, 4.2930999999999525e-05, 4.2916999999999955e-05, 4.2903000000000385e-05, 4.2916999999999955e-05, 4.295799999999919e-05, 4.2973000000001704e-05, 4.2916999999999955e-05, 4.291600000000048e-05, 4.2902999999996916e-05, 4.2875000000001245e-05, 4.2916999999999955e-05, 4.297200000000223e-05, 4.293000000000005e-05, 4.2916999999999955e-05, 4.2860999999998206e-05, 4.290200000000091e-05, 4.291600000000048e-05, 4.2903000000000385e-05, 4.2903000000000385e-05, 4.2916999999999955e-05, 4.2916999999999955e-05, 4.2846999999998636e-05, 4.2903000000000385e-05, 4.298599999999833e-05, 4.2916999999999955e-05, 4.2916999999999955e-05, 4.291600000000048e-05, 4.291600000000048e-05, 4.2860999999998206e-05, 4.297199999999876e-05, 4.290200000000091e-05]</msg>
<status status="PASS" starttime="20201030 18:28:05.963" endtime="20201030 18:28:05.971"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.959" endtime="20201030 18:28:05.972"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:05.975" endtime="20201030 18:28:05.995"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.974" endtime="20201030 18:28:05.995"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.973" endtime="20201030 18:28:05.996"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.612" endtime="20201030 18:28:05.996"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.612" endtime="20201030 18:28:05.996"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:06.005" endtime="20201030 18:28:06.021"></status>
</kw>
<msg timestamp="20201030 18:28:06.021" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:06.003" endtime="20201030 18:28:06.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:06.024" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:06.023" endtime="20201030 18:28:06.024"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:06.025" endtime="20201030 18:28:06.026"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.001" endtime="20201030 18:28:06.027"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.998" endtime="20201030 18:28:06.027"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:06.034" endtime="20201030 18:28:06.320"></status>
</kw>
<msg timestamp="20201030 18:28:06.323" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022434278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022478, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:28:06.032" endtime="20201030 18:28:06.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:06.331" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022434278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022478, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:28:06.324" endtime="20201030 18:28:06.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:06.332" endtime="20201030 18:28:06.334"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.030" endtime="20201030 18:28:06.335"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.028" endtime="20201030 18:28:06.335"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:06.339" level="INFO">${RESULT} = [{'diff': 4.372200000000298e-05}, {'diff': 4.2916999999999955e-05}, {'diff': 4.2903000000000385e-05}, {'diff': 4.2916999999999955e-05}, {'diff': 4.291600000000048e-05}, {'diff': 4.293000000000005e-05}...</msg>
<status status="PASS" starttime="20201030 18:28:06.336" endtime="20201030 18:28:06.339"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:06.343" level="INFO">${ACCURACY} = {'diff': [4.372200000000298e-05, 4.2916999999999955e-05, 4.2903000000000385e-05, 4.2916999999999955e-05, 4.291600000000048e-05, 4.293000000000005e-05, 4.291599999999701e-05, 4.294399999999962e-05, 4.2...</msg>
<status status="PASS" starttime="20201030 18:28:06.340" endtime="20201030 18:28:06.343"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:06.347" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201030 18:28:06.346" endtime="20201030 18:28:06.348"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:06.350" level="INFO">VALUE: [4.372200000000298e-05, 4.2916999999999955e-05, 4.2903000000000385e-05, 4.2916999999999955e-05, 4.291600000000048e-05, 4.293000000000005e-05, 4.291599999999701e-05, 4.294399999999962e-05, 4.2930999999999525e-05, 4.293000000000005e-05, 4.2930999999999525e-05, 4.2931000000002995e-05, 4.2930999999999525e-05, 4.2916999999999955e-05, 4.294399999999962e-05, 4.2903000000000385e-05, 4.297200000000223e-05, 4.284800000000158e-05, 4.291600000000048e-05, 4.291600000000048e-05, 4.2930999999999525e-05, 4.294400000000309e-05, 4.2916999999999955e-05, 4.2930999999999525e-05, 4.293000000000005e-05, 4.284799999999811e-05, 4.2930999999999525e-05, 4.2930999999999525e-05, 4.2916999999999955e-05, 4.291600000000048e-05, 4.2902999999996916e-05, 4.294399999999962e-05, 4.2903000000000385e-05, 4.2958999999998665e-05, 4.291600000000048e-05, 4.2916999999999955e-05, 4.295799999999919e-05, 4.293000000000005e-05, 4.2875000000001245e-05, 4.2930999999999525e-05, 4.2916999999999955e-05, 4.2903000000000385e-05, 4.2903000000000385e-05, 4.293000000000005e-05, 4.2916999999999955e-05, 4.2930999999999525e-05, 4.2889000000000815e-05, 4.2916999999999955e-05, 4.295799999999919e-05, 4.2930999999999525e-05]</msg>
<status status="PASS" starttime="20201030 18:28:06.348" endtime="20201030 18:28:06.351"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.344" endtime="20201030 18:28:06.352"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:06.356" endtime="20201030 18:28:06.375"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.354" endtime="20201030 18:28:06.375"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.353" endtime="20201030 18:28:06.376"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.997" endtime="20201030 18:28:06.376"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.996" endtime="20201030 18:28:06.376"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:06.385" endtime="20201030 18:28:06.400"></status>
</kw>
<msg timestamp="20201030 18:28:06.401" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:06.383" endtime="20201030 18:28:06.401"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:06.403" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:06.402" endtime="20201030 18:28:06.403"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:06.404" endtime="20201030 18:28:06.406"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.381" endtime="20201030 18:28:06.406"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.379" endtime="20201030 18:28:06.407"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:06.413" endtime="20201030 18:28:06.698"></status>
</kw>
<msg timestamp="20201030 18:28:06.701" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021430667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021474458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:06.411" endtime="20201030 18:28:06.701"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:06.709" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021430667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021474458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:06.702" endtime="20201030 18:28:06.710"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:06.710" endtime="20201030 18:28:06.712"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.409" endtime="20201030 18:28:06.713"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.407" endtime="20201030 18:28:06.713"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:06.717" level="INFO">${RESULT} = [{'diff': 4.379099999999789e-05}, {'diff': 4.291599999999701e-05}, {'diff': 4.290200000000091e-05}, {'diff': 4.293000000000005e-05}, {'diff': 4.295799999999919e-05}, {'diff': 4.297199999999876e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:06.714" endtime="20201030 18:28:06.717"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:06.722" level="INFO">${ACCURACY} = {'diff': [4.379099999999789e-05, 4.291599999999701e-05, 4.290200000000091e-05, 4.293000000000005e-05, 4.295799999999919e-05, 4.297199999999876e-05, 4.2903000000000385e-05, 4.2930999999999525e-05, 4.29...</msg>
<status status="PASS" starttime="20201030 18:28:06.718" endtime="20201030 18:28:06.722"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:06.726" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201030 18:28:06.725" endtime="20201030 18:28:06.727"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:06.729" level="INFO">VALUE: [4.379099999999789e-05, 4.291599999999701e-05, 4.290200000000091e-05, 4.293000000000005e-05, 4.295799999999919e-05, 4.297199999999876e-05, 4.2903000000000385e-05, 4.2930999999999525e-05, 4.293000000000005e-05, 4.2916999999999955e-05, 4.2903000000000385e-05, 4.2916999999999955e-05, 4.291600000000048e-05, 4.291600000000048e-05, 4.291600000000048e-05, 4.2916999999999955e-05, 4.294399999999962e-05, 4.297200000000223e-05, 4.29860000000018e-05, 4.291600000000048e-05, 4.2916999999999955e-05, 4.2930999999999525e-05, 4.2903000000000385e-05, 4.2903000000000385e-05, 4.2875000000001245e-05, 4.2916999999999955e-05, 4.298599999999833e-05, 4.291600000000048e-05, 4.2930999999999525e-05, 4.2930999999999525e-05, 4.293000000000005e-05, 4.2930999999999525e-05, 4.2916999999999955e-05, 4.2916999999999955e-05, 4.2916999999999955e-05, 4.2930999999999525e-05, 4.2916999999999955e-05, 4.2916999999999955e-05, 4.291600000000048e-05, 4.2930999999999525e-05, 4.2916999999999955e-05, 4.2903000000000385e-05, 4.2916999999999955e-05, 4.2916999999999955e-05, 4.2944999999999095e-05, 4.295799999999919e-05, 4.2930999999999525e-05, 4.293000000000005e-05, 4.2861000000001676e-05, 4.29860000000018e-05]</msg>
<status status="PASS" starttime="20201030 18:28:06.728" endtime="20201030 18:28:06.730"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.723" endtime="20201030 18:28:06.730"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:06.734" endtime="20201030 18:28:06.753"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.732" endtime="20201030 18:28:06.754"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.731" endtime="20201030 18:28:06.754"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.377" endtime="20201030 18:28:06.754"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.377" endtime="20201030 18:28:06.755"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:06.763" endtime="20201030 18:28:06.778"></status>
</kw>
<msg timestamp="20201030 18:28:06.779" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:06.762" endtime="20201030 18:28:06.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:06.781" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:06.780" endtime="20201030 18:28:06.782"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:06.782" endtime="20201030 18:28:06.784"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.759" endtime="20201030 18:28:06.785"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.757" endtime="20201030 18:28:06.785"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:06.791" endtime="20201030 18:28:07.077"></status>
</kw>
<msg timestamp="20201030 18:28:07.080" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021374167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021417875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:06.790" endtime="20201030 18:28:07.080"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:07.088" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021374167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021417875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:07.081" endtime="20201030 18:28:07.088"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:07.089" endtime="20201030 18:28:07.091"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.787" endtime="20201030 18:28:07.091"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.786" endtime="20201030 18:28:07.092"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:07.096" level="INFO">${RESULT} = [{'diff': 4.370799999999994e-05}, {'diff': 4.2931000000002995e-05}, {'diff': 4.78200000000005e-05}, {'diff': 4.295799999999919e-05}, {'diff': 4.294399999999962e-05}, {'diff': 4.293000000000005e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:07.092" endtime="20201030 18:28:07.096"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:07.100" level="INFO">${ACCURACY} = {'diff': [4.370799999999994e-05, 4.2931000000002995e-05, 4.78200000000005e-05, 4.295799999999919e-05, 4.294399999999962e-05, 4.293000000000005e-05, 4.290200000000091e-05, 4.78330000000006e-05, 4.29439...</msg>
<status status="PASS" starttime="20201030 18:28:07.097" endtime="20201030 18:28:07.100"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:07.104" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201030 18:28:07.103" endtime="20201030 18:28:07.104"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:07.106" level="INFO">VALUE: [4.370799999999994e-05, 4.2931000000002995e-05, 4.78200000000005e-05, 4.295799999999919e-05, 4.294399999999962e-05, 4.293000000000005e-05, 4.290200000000091e-05, 4.78330000000006e-05, 4.294399999999962e-05, 4.2889000000000815e-05, 4.291600000000048e-05, 4.2916999999999955e-05, 4.293000000000005e-05, 4.294400000000309e-05, 4.2916999999999955e-05, 4.290200000000091e-05, 4.291600000000048e-05, 4.2916999999999955e-05, 4.2930999999999525e-05, 4.293000000000005e-05, 4.2916999999999955e-05, 4.2916999999999955e-05, 4.2916999999999955e-05, 4.2916999999999955e-05, 4.291600000000048e-05, 4.2945000000002564e-05, 4.2930999999999525e-05, 4.2945000000002564e-05, 4.2930999999999525e-05, 4.781899999999756e-05, 4.2916999999999955e-05, 4.2916999999999955e-05, 4.2916999999999955e-05, 4.293000000000005e-05, 4.2903000000000385e-05, 4.297199999999876e-05, 4.291600000000048e-05, 4.290200000000091e-05, 4.291599999999701e-05, 4.291600000000048e-05, 4.293000000000005e-05, 4.2916999999999955e-05, 4.2916999999999955e-05, 4.291600000000048e-05, 4.2903000000000385e-05, 4.2916999999999955e-05, 4.290200000000091e-05, 4.2889000000000815e-05, 4.784700000000017e-05, 4.295799999999919e-05]</msg>
<status status="PASS" starttime="20201030 18:28:07.105" endtime="20201030 18:28:07.107"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.100" endtime="20201030 18:28:07.108"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:07.111" endtime="20201030 18:28:07.131"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.110" endtime="20201030 18:28:07.131"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.109" endtime="20201030 18:28:07.132"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.755" endtime="20201030 18:28:07.132"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.755" endtime="20201030 18:28:07.132"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:07.141" endtime="20201030 18:28:07.157"></status>
</kw>
<msg timestamp="20201030 18:28:07.158" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:07.139" endtime="20201030 18:28:07.158"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:07.160" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:07.159" endtime="20201030 18:28:07.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:07.161" endtime="20201030 18:28:07.163"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.137" endtime="20201030 18:28:07.163"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.135" endtime="20201030 18:28:07.164"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:07.170" endtime="20201030 18:28:07.458"></status>
</kw>
<msg timestamp="20201030 18:28:07.463" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022358208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022406847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:07.169" endtime="20201030 18:28:07.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:07.473" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022358208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022406847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:07.465" endtime="20201030 18:28:07.474"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:07.475" endtime="20201030 18:28:07.478"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.166" endtime="20201030 18:28:07.479"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.164" endtime="20201030 18:28:07.480"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:07.485" level="INFO">${RESULT} = [{'diff': 4.863899999999963e-05}, {'diff': 4.781900000000103e-05}, {'diff': 4.777699999999885e-05}, {'diff': 4.784700000000017e-05}, {'diff': 4.78330000000006e-05}, {'diff': 4.783400000000007e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:07.481" endtime="20201030 18:28:07.486"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:07.492" level="INFO">${ACCURACY} = {'diff': [4.863899999999963e-05, 4.781900000000103e-05, 4.777699999999885e-05, 4.784700000000017e-05, 4.78330000000006e-05, 4.783400000000007e-05, 4.7875000000002776e-05, 4.78330000000006e-05, 4.78470...</msg>
<status status="PASS" starttime="20201030 18:28:07.487" endtime="20201030 18:28:07.493"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:07.500" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201030 18:28:07.498" endtime="20201030 18:28:07.500"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:07.503" level="INFO">VALUE: [4.863899999999963e-05, 4.781900000000103e-05, 4.777699999999885e-05, 4.784700000000017e-05, 4.78330000000006e-05, 4.783400000000007e-05, 4.7875000000002776e-05, 4.78330000000006e-05, 4.784700000000017e-05, 4.787499999999931e-05, 4.784799999999964e-05, 4.784799999999964e-05, 4.781900000000103e-05, 4.788899999999888e-05, 4.779199999999789e-05, 4.78200000000005e-05, 4.781900000000103e-05, 4.784700000000017e-05, 4.78469999999967e-05, 4.78330000000006e-05, 4.784700000000017e-05, 4.784700000000017e-05, 4.779200000000136e-05, 4.78330000000006e-05, 4.784700000000017e-05, 4.7861000000003207e-05, 4.790200000000244e-05, 4.781999999999703e-05, 4.784799999999964e-05, 4.784700000000017e-05, 4.783400000000007e-05, 4.78469999999967e-05, 4.776399999999875e-05, 4.78330000000006e-05, 4.786099999999974e-05, 4.781899999999756e-05, 4.783400000000007e-05, 4.7903000000001916e-05, 4.78330000000006e-05, 4.787499999999931e-05, 4.780500000000146e-05, 4.784700000000017e-05, 4.786099999999974e-05, 4.783400000000007e-05, 4.781900000000103e-05, 4.790299999999845e-05, 4.790299999999845e-05, 4.781899999999756e-05, 4.783400000000007e-05, 4.78330000000006e-05]</msg>
<status status="PASS" starttime="20201030 18:28:07.501" endtime="20201030 18:28:07.505"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.494" endtime="20201030 18:28:07.506"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:07.511" endtime="20201030 18:28:07.531"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.509" endtime="20201030 18:28:07.532"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.507" endtime="20201030 18:28:07.532"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.133" endtime="20201030 18:28:07.533"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.133" endtime="20201030 18:28:07.533"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:07.542" endtime="20201030 18:28:07.557"></status>
</kw>
<msg timestamp="20201030 18:28:07.559" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:07.540" endtime="20201030 18:28:07.559"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:07.561" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:07.560" endtime="20201030 18:28:07.561"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:07.562" endtime="20201030 18:28:07.564"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.537" endtime="20201030 18:28:07.565"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.535" endtime="20201030 18:28:07.565"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:07.572" endtime="20201030 18:28:07.876"></status>
</kw>
<msg timestamp="20201030 18:28:07.879" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022825722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022874361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:07.570" endtime="20201030 18:28:07.879"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:07.887" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022825722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022874361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:07.880" endtime="20201030 18:28:07.888"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:07.888" endtime="20201030 18:28:07.890"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.567" endtime="20201030 18:28:07.891"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.566" endtime="20201030 18:28:07.891"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:07.895" level="INFO">${RESULT} = [{'diff': 4.863899999999963e-05}, {'diff': 4.784700000000017e-05}, {'diff': 4.783400000000007e-05}, {'diff': 4.7875000000002776e-05}, {'diff': 4.783299999999713e-05}, {'diff': 4.78330000000006e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:07.892" endtime="20201030 18:28:07.895"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:07.900" level="INFO">${ACCURACY} = {'diff': [4.863899999999963e-05, 4.784700000000017e-05, 4.783400000000007e-05, 4.7875000000002776e-05, 4.783299999999713e-05, 4.78330000000006e-05, 4.784700000000017e-05, 4.783400000000007e-05, 4.7847...</msg>
<status status="PASS" starttime="20201030 18:28:07.896" endtime="20201030 18:28:07.900"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:07.904" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201030 18:28:07.903" endtime="20201030 18:28:07.905"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:07.907" level="INFO">VALUE: [4.863899999999963e-05, 4.784700000000017e-05, 4.783400000000007e-05, 4.7875000000002776e-05, 4.783299999999713e-05, 4.78330000000006e-05, 4.784700000000017e-05, 4.783400000000007e-05, 4.784700000000017e-05, 4.78200000000005e-05, 4.781900000000103e-05, 4.781999999999703e-05, 4.78879999999994e-05, 4.777799999999832e-05, 4.781899999999756e-05, 4.78339999999966e-05, 4.784700000000017e-05, 4.784799999999964e-05, 4.78330000000006e-05, 4.786099999999974e-05, 4.784700000000017e-05, 4.783299999999713e-05, 4.787499999999931e-05, 4.783299999999713e-05, 4.784700000000017e-05, 4.784700000000017e-05, 4.784700000000017e-05, 4.783299999999713e-05, 4.784700000000017e-05, 4.784700000000017e-05, 4.784700000000017e-05, 4.777799999999832e-05, 4.784700000000017e-05, 4.781899999999756e-05, 4.78200000000005e-05, 4.78330000000006e-05, 4.78200000000005e-05, 4.784800000000311e-05, 4.786199999999921e-05, 4.78330000000006e-05, 4.784799999999964e-05, 4.78330000000006e-05, 4.783400000000007e-05, 4.78330000000006e-05, 4.786099999999974e-05, 4.784700000000017e-05, 4.781999999999703e-05, 4.786099999999974e-05, 4.777800000000179e-05, 4.78330000000006e-05]</msg>
<status status="PASS" starttime="20201030 18:28:07.905" endtime="20201030 18:28:07.908"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.901" endtime="20201030 18:28:07.908"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:07.912" endtime="20201030 18:28:07.931"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.910" endtime="20201030 18:28:07.932"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.909" endtime="20201030 18:28:07.932"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.534" endtime="20201030 18:28:07.932"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.533" endtime="20201030 18:28:07.932"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:07.941" endtime="20201030 18:28:07.957"></status>
</kw>
<msg timestamp="20201030 18:28:07.957" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:07.939" endtime="20201030 18:28:07.957"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:07.959" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:07.958" endtime="20201030 18:28:07.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:07.961" endtime="20201030 18:28:07.962"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.937" endtime="20201030 18:28:07.963"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.935" endtime="20201030 18:28:07.963"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:07.969" endtime="20201030 18:28:08.255"></status>
</kw>
<msg timestamp="20201030 18:28:08.259" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021405125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021453778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:07.968" endtime="20201030 18:28:08.259"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:08.267" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021405125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021453778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:08.260" endtime="20201030 18:28:08.268"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:08.268" endtime="20201030 18:28:08.270"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.965" endtime="20201030 18:28:08.271"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.964" endtime="20201030 18:28:08.271"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:08.275" level="INFO">${RESULT} = [{'diff': 4.86529999999992e-05}, {'diff': 4.78200000000005e-05}, {'diff': 4.786099999999974e-05}, {'diff': 4.78200000000005e-05}, {'diff': 4.784700000000017e-05}, {'diff': 4.786099999999974e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 18:28:08.272" endtime="20201030 18:28:08.275"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:08.279" level="INFO">${ACCURACY} = {'diff': [4.86529999999992e-05, 4.78200000000005e-05, 4.786099999999974e-05, 4.78200000000005e-05, 4.784700000000017e-05, 4.786099999999974e-05, 4.784700000000017e-05, 4.7875000000002776e-05, 4.784800...</msg>
<status status="PASS" starttime="20201030 18:28:08.276" endtime="20201030 18:28:08.279"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:08.284" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201030 18:28:08.283" endtime="20201030 18:28:08.284"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:08.286" level="INFO">VALUE: [4.86529999999992e-05, 4.78200000000005e-05, 4.786099999999974e-05, 4.78200000000005e-05, 4.784700000000017e-05, 4.786099999999974e-05, 4.784700000000017e-05, 4.7875000000002776e-05, 4.784800000000311e-05, 4.783299999999713e-05, 4.786099999999974e-05, 4.784700000000017e-05, 4.78469999999967e-05, 4.784799999999964e-05, 4.78330000000006e-05, 4.78330000000006e-05, 4.786099999999974e-05, 4.784700000000017e-05, 4.78330000000006e-05, 4.781899999999756e-05, 4.78330000000006e-05, 4.784799999999964e-05, 4.774999999999918e-05, 4.784700000000017e-05, 4.784700000000017e-05, 4.784799999999964e-05, 4.781899999999756e-05, 4.784700000000017e-05, 4.78330000000006e-05, 4.7875000000002776e-05, 4.784700000000017e-05, 4.783299999999713e-05, 4.784700000000017e-05, 4.784700000000017e-05, 4.781900000000103e-05, 4.786099999999974e-05, 4.780600000000093e-05, 4.78879999999994e-05, 4.787499999999931e-05, 4.780600000000093e-05, 4.78330000000006e-05, 4.780599999999746e-05, 4.783400000000007e-05, 4.78330000000006e-05, 4.784700000000017e-05, 4.784700000000017e-05, 4.78330000000006e-05, 4.78330000000006e-05, 4.78330000000006e-05, 4.787499999999931e-05]</msg>
<status status="PASS" starttime="20201030 18:28:08.285" endtime="20201030 18:28:08.287"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.280" endtime="20201030 18:28:08.287"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:08.291" endtime="20201030 18:28:08.310"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.289" endtime="20201030 18:28:08.311"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.288" endtime="20201030 18:28:08.311"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.933" endtime="20201030 18:28:08.312"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.933" endtime="20201030 18:28:08.312"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:08.320" endtime="20201030 18:28:08.337"></status>
</kw>
<msg timestamp="20201030 18:28:08.337" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:08.319" endtime="20201030 18:28:08.338"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:08.340" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:08.338" endtime="20201030 18:28:08.340"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:08.341" endtime="20201030 18:28:08.343"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.316" endtime="20201030 18:28:08.343"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.314" endtime="20201030 18:28:08.343"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:08.350" endtime="20201030 18:28:08.634"></status>
</kw>
<msg timestamp="20201030 18:28:08.638" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022530472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022579111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:08.348" endtime="20201030 18:28:08.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:08.646" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022530472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022579111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:08.639" endtime="20201030 18:28:08.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:08.647" endtime="20201030 18:28:08.648"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.346" endtime="20201030 18:28:08.649"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.344" endtime="20201030 18:28:08.649"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:08.653" level="INFO">${RESULT} = [{'diff': 4.863899999999963e-05}, {'diff': 4.784700000000017e-05}, {'diff': 4.784799999999964e-05}, {'diff': 4.78330000000006e-05}, {'diff': 4.784700000000017e-05}, {'diff': 4.784700000000017e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:08.650" endtime="20201030 18:28:08.654"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:08.657" level="INFO">${ACCURACY} = {'diff': [4.863899999999963e-05, 4.784700000000017e-05, 4.784799999999964e-05, 4.78330000000006e-05, 4.784700000000017e-05, 4.784700000000017e-05, 4.783400000000007e-05, 4.784799999999964e-05, 4.78200...</msg>
<status status="PASS" starttime="20201030 18:28:08.654" endtime="20201030 18:28:08.658"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:08.662" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201030 18:28:08.661" endtime="20201030 18:28:08.662"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:08.664" level="INFO">VALUE: [4.863899999999963e-05, 4.784700000000017e-05, 4.784799999999964e-05, 4.78330000000006e-05, 4.784700000000017e-05, 4.784700000000017e-05, 4.783400000000007e-05, 4.784799999999964e-05, 4.78200000000005e-05, 4.783400000000007e-05, 4.78330000000006e-05, 4.7889000000002346e-05, 4.783400000000007e-05, 4.786099999999974e-05, 4.78330000000006e-05, 4.783400000000007e-05, 4.790199999999897e-05, 4.784700000000017e-05, 4.78200000000005e-05, 4.780499999999799e-05, 4.783400000000007e-05, 4.780600000000093e-05, 4.784799999999964e-05, 4.784700000000017e-05, 4.784700000000017e-05, 4.783400000000007e-05, 4.7903000000001916e-05, 4.786099999999974e-05, 4.784700000000017e-05, 4.784799999999964e-05, 4.78469999999967e-05, 4.784700000000017e-05, 4.786099999999974e-05, 4.781899999999756e-05, 4.779199999999789e-05, 4.784700000000017e-05, 4.786099999999974e-05, 4.78330000000006e-05, 4.78330000000006e-05, 4.780599999999746e-05, 4.78200000000005e-05, 4.784799999999964e-05, 4.784799999999964e-05, 4.7861000000003207e-05, 4.78330000000006e-05, 4.78330000000006e-05, 4.78330000000006e-05, 4.781900000000103e-05, 4.784799999999964e-05, 4.78330000000006e-05]</msg>
<status status="PASS" starttime="20201030 18:28:08.663" endtime="20201030 18:28:08.666"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.658" endtime="20201030 18:28:08.666"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:08.670" endtime="20201030 18:28:08.689"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.668" endtime="20201030 18:28:08.690"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.667" endtime="20201030 18:28:08.690"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.313" endtime="20201030 18:28:08.691"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.312" endtime="20201030 18:28:08.691"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:08.699" endtime="20201030 18:28:08.715"></status>
</kw>
<msg timestamp="20201030 18:28:08.715" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:08.698" endtime="20201030 18:28:08.715"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:08.718" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:08.716" endtime="20201030 18:28:08.718"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:08.719" endtime="20201030 18:28:08.720"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.695" endtime="20201030 18:28:08.721"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.693" endtime="20201030 18:28:08.721"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:08.728" endtime="20201030 18:28:09.014"></status>
</kw>
<msg timestamp="20201030 18:28:09.017" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021421208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021469861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:08.726" endtime="20201030 18:28:09.017"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:09.025" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021421208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021469861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:09.018" endtime="20201030 18:28:09.025"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:09.026" endtime="20201030 18:28:09.027"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.724" endtime="20201030 18:28:09.028"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.722" endtime="20201030 18:28:09.028"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:09.032" level="INFO">${RESULT} = [{'diff': 4.86529999999992e-05}, {'diff': 4.783400000000007e-05}, {'diff': 4.783400000000007e-05}, {'diff': 4.78200000000005e-05}, {'diff': 4.784700000000017e-05}, {'diff': 5.275000000000071e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:28:09.029" endtime="20201030 18:28:09.033"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:09.040" level="INFO">${ACCURACY} = {'diff': [4.86529999999992e-05, 4.783400000000007e-05, 4.783400000000007e-05, 4.78200000000005e-05, 4.784700000000017e-05, 5.275000000000071e-05, 4.783400000000007e-05, 5.275000000000071e-05, 5.277799...</msg>
<status status="PASS" starttime="20201030 18:28:09.033" endtime="20201030 18:28:09.040"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:09.044" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201030 18:28:09.043" endtime="20201030 18:28:09.045"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:09.047" level="INFO">VALUE: [4.86529999999992e-05, 4.783400000000007e-05, 4.783400000000007e-05, 4.78200000000005e-05, 4.784700000000017e-05, 5.275000000000071e-05, 4.783400000000007e-05, 5.275000000000071e-05, 5.277799999999985e-05, 4.791699999999802e-05, 5.276400000000028e-05, 4.78200000000005e-05, 4.78200000000005e-05, 4.78200000000005e-05, 4.78330000000006e-05, 4.786099999999974e-05, 4.783400000000007e-05, 4.78330000000006e-05, 4.78330000000006e-05, 4.78330000000006e-05, 5.276400000000028e-05, 4.786099999999974e-05, 4.78330000000006e-05, 5.2749999999997244e-05, 4.784700000000017e-05, 4.783400000000007e-05, 4.787499999999931e-05, 4.784700000000017e-05, 4.7875000000002776e-05, 5.276400000000028e-05, 4.784799999999964e-05, 4.784700000000017e-05, 4.779200000000136e-05, 4.788899999999888e-05, 4.787499999999931e-05, 4.784700000000017e-05, 4.784700000000017e-05, 4.786099999999974e-05, 4.784700000000017e-05, 5.275000000000071e-05, 4.787499999999931e-05, 4.78330000000006e-05, 4.780499999999799e-05, 4.786099999999974e-05, 4.7889000000002346e-05, 4.78330000000006e-05, 4.788899999999888e-05, 4.786099999999974e-05, 5.279099999999995e-05, 4.78330000000006e-05]</msg>
<status status="PASS" starttime="20201030 18:28:09.045" endtime="20201030 18:28:09.047"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.041" endtime="20201030 18:28:09.048"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:09.052" endtime="20201030 18:28:09.071"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.050" endtime="20201030 18:28:09.072"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.049" endtime="20201030 18:28:09.072"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.692" endtime="20201030 18:28:09.072"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.691" endtime="20201030 18:28:09.072"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:09.083" endtime="20201030 18:28:09.099"></status>
</kw>
<msg timestamp="20201030 18:28:09.099" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:09.081" endtime="20201030 18:28:09.099"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:09.102" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:09.100" endtime="20201030 18:28:09.102"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:09.103" endtime="20201030 18:28:09.104"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.079" endtime="20201030 18:28:09.105"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.076" endtime="20201030 18:28:09.105"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:09.112" endtime="20201030 18:28:09.398"></status>
</kw>
<msg timestamp="20201030 18:28:09.401" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023464361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023517917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:09.110" endtime="20201030 18:28:09.402"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:09.409" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023464361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023517917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:09.403" endtime="20201030 18:28:09.410"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:09.411" endtime="20201030 18:28:09.412"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.108" endtime="20201030 18:28:09.413"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.106" endtime="20201030 18:28:09.413"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:09.417" level="INFO">${RESULT} = [{'diff': 5.355599999999974e-05}, {'diff': 5.275000000000071e-05}, {'diff': 5.277799999999985e-05}, {'diff': 5.277799999999985e-05}, {'diff': 5.2721999999998104e-05}, {'diff': 5.273600000000114e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:28:09.414" endtime="20201030 18:28:09.417"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:09.421" level="INFO">${ACCURACY} = {'diff': [5.355599999999974e-05, 5.275000000000071e-05, 5.277799999999985e-05, 5.277799999999985e-05, 5.2721999999998104e-05, 5.273600000000114e-05, 5.276400000000028e-05, 5.276400000000028e-05, 5.276...</msg>
<status status="PASS" starttime="20201030 18:28:09.418" endtime="20201030 18:28:09.421"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:09.426" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201030 18:28:09.425" endtime="20201030 18:28:09.426"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:09.428" level="INFO">VALUE: [5.355599999999974e-05, 5.275000000000071e-05, 5.277799999999985e-05, 5.277799999999985e-05, 5.2721999999998104e-05, 5.273600000000114e-05, 5.276400000000028e-05, 5.276400000000028e-05, 5.276400000000028e-05, 5.276299999999734e-05, 5.2721999999998104e-05, 5.276400000000028e-05, 5.275000000000071e-05, 5.2763999999996813e-05, 5.279099999999995e-05, 5.275000000000071e-05, 5.275000000000071e-05, 5.275000000000071e-05, 5.276400000000028e-05, 5.276400000000028e-05, 5.276400000000028e-05, 5.279199999999942e-05, 5.2749999999997244e-05, 5.270900000000148e-05, 5.273600000000114e-05, 5.276400000000028e-05, 5.275000000000071e-05, 5.277799999999985e-05, 5.276400000000028e-05, 5.276400000000028e-05, 5.276400000000028e-05, 5.276400000000028e-05, 5.2749999999997244e-05, 5.276400000000028e-05, 5.276400000000028e-05, 5.276400000000028e-05, 5.275000000000071e-05, 5.276400000000028e-05, 5.277700000000038e-05, 5.276400000000028e-05, 5.275000000000071e-05, 5.276400000000028e-05, 5.276400000000028e-05, 5.275000000000071e-05, 5.2749999999997244e-05, 5.2749999999997244e-05, 5.275000000000071e-05, 5.279199999999942e-05, 5.2680000000002863e-05, 5.276400000000028e-05]</msg>
<status status="PASS" starttime="20201030 18:28:09.427" endtime="20201030 18:28:09.429"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.422" endtime="20201030 18:28:09.429"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:09.433" endtime="20201030 18:28:09.452"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.432" endtime="20201030 18:28:09.453"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.430" endtime="20201030 18:28:09.453"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.073" endtime="20201030 18:28:09.454"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.073" endtime="20201030 18:28:09.454"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:09.462" endtime="20201030 18:28:09.479"></status>
</kw>
<msg timestamp="20201030 18:28:09.480" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:09.461" endtime="20201030 18:28:09.480"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:09.482" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:09.481" endtime="20201030 18:28:09.482"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:09.483" endtime="20201030 18:28:09.485"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.458" endtime="20201030 18:28:09.485"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.456" endtime="20201030 18:28:09.486"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:09.492" endtime="20201030 18:28:09.778"></status>
</kw>
<msg timestamp="20201030 18:28:09.781" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022273236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022326819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:09.491" endtime="20201030 18:28:09.781"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:09.789" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022273236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022326819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:09.782" endtime="20201030 18:28:09.789"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:09.790" endtime="20201030 18:28:09.792"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.488" endtime="20201030 18:28:09.792"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.486" endtime="20201030 18:28:09.793"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:09.796" level="INFO">${RESULT} = [{'diff': 5.358300000000288e-05}, {'diff': 5.276400000000028e-05}, {'diff': 5.276400000000028e-05}, {'diff': 5.276400000000028e-05}, {'diff': 5.277799999999985e-05}, {'diff': 5.2763999999996813e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:28:09.793" endtime="20201030 18:28:09.797"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:09.801" level="INFO">${ACCURACY} = {'diff': [5.358300000000288e-05, 5.276400000000028e-05, 5.276400000000028e-05, 5.276400000000028e-05, 5.277799999999985e-05, 5.2763999999996813e-05, 5.2763999999996813e-05, 5.2749999999997244e-05, 5.2...</msg>
<status status="PASS" starttime="20201030 18:28:09.797" endtime="20201030 18:28:09.801"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:09.805" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201030 18:28:09.804" endtime="20201030 18:28:09.805"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:09.807" level="INFO">VALUE: [5.358300000000288e-05, 5.276400000000028e-05, 5.276400000000028e-05, 5.276400000000028e-05, 5.277799999999985e-05, 5.2763999999996813e-05, 5.2763999999996813e-05, 5.2749999999997244e-05, 5.277799999999985e-05, 5.276400000000028e-05, 5.2763999999996813e-05, 5.277799999999985e-05, 5.275000000000071e-05, 5.277799999999985e-05, 5.276400000000028e-05, 5.275000000000071e-05, 5.276400000000028e-05, 5.2749999999997244e-05, 5.276400000000028e-05, 5.282000000000203e-05, 5.2721999999998104e-05, 5.279199999999942e-05, 5.275000000000071e-05, 5.276400000000028e-05, 5.279200000000289e-05, 5.275000000000071e-05, 5.28340000000016e-05, 5.2735999999997674e-05, 5.2749999999997244e-05, 5.276400000000028e-05, 5.277799999999985e-05, 5.276400000000028e-05, 5.2749999999997244e-05, 5.275000000000071e-05, 5.273600000000114e-05, 5.283399999999813e-05, 5.276400000000028e-05, 5.273600000000114e-05, 5.2693999999998964e-05, 5.273600000000114e-05, 5.275000000000071e-05, 5.276400000000028e-05, 5.277799999999985e-05, 5.276400000000028e-05, 5.281899999999909e-05, 5.281900000000256e-05, 5.283299999999866e-05, 5.276400000000028e-05, 5.276300000000081e-05, 5.276400000000028e-05]</msg>
<status status="PASS" starttime="20201030 18:28:09.806" endtime="20201030 18:28:09.809"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.801" endtime="20201030 18:28:09.810"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:09.813" endtime="20201030 18:28:09.833"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.812" endtime="20201030 18:28:09.833"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.811" endtime="20201030 18:28:09.833"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.455" endtime="20201030 18:28:09.834"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.454" endtime="20201030 18:28:09.834"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:09.842" endtime="20201030 18:28:09.858"></status>
</kw>
<msg timestamp="20201030 18:28:09.859" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:09.841" endtime="20201030 18:28:09.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:09.861" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:09.860" endtime="20201030 18:28:09.862"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:09.862" endtime="20201030 18:28:09.864"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.838" endtime="20201030 18:28:09.864"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.836" endtime="20201030 18:28:09.865"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:09.871" endtime="20201030 18:28:10.156"></status>
</kw>
<msg timestamp="20201030 18:28:10.159" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021430069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021483639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:09.870" endtime="20201030 18:28:10.159"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:10.167" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021430069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021483639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:10.160" endtime="20201030 18:28:10.167"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:10.168" endtime="20201030 18:28:10.170"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.867" endtime="20201030 18:28:10.170"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.865" endtime="20201030 18:28:10.171"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:10.174" level="INFO">${RESULT} = [{'diff': 5.356999999999931e-05}, {'diff': 5.276400000000028e-05}, {'diff': 5.276400000000028e-05}, {'diff': 5.281999999999856e-05}, {'diff': 5.277799999999985e-05}, {'diff': 5.277799999999985e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:10.171" endtime="20201030 18:28:10.175"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:10.179" level="INFO">${ACCURACY} = {'diff': [5.356999999999931e-05, 5.276400000000028e-05, 5.276400000000028e-05, 5.281999999999856e-05, 5.277799999999985e-05, 5.277799999999985e-05, 5.2708000000002e-05, 5.276400000000028e-05, 5.269499...</msg>
<status status="PASS" starttime="20201030 18:28:10.175" endtime="20201030 18:28:10.180"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:10.184" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201030 18:28:10.183" endtime="20201030 18:28:10.184"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:10.186" level="INFO">VALUE: [5.356999999999931e-05, 5.276400000000028e-05, 5.276400000000028e-05, 5.281999999999856e-05, 5.277799999999985e-05, 5.277799999999985e-05, 5.2708000000002e-05, 5.276400000000028e-05, 5.269499999999844e-05, 5.284699999999823e-05, 5.276400000000028e-05, 5.277799999999985e-05, 5.276400000000028e-05, 5.280599999999899e-05, 5.276400000000028e-05, 5.276400000000028e-05, 5.276400000000028e-05, 5.275000000000071e-05, 5.275000000000071e-05, 5.276300000000081e-05, 5.276300000000081e-05, 5.283299999999866e-05, 5.276400000000028e-05, 5.276400000000028e-05, 5.275000000000071e-05, 5.276400000000028e-05, 5.275000000000071e-05, 5.276400000000028e-05, 5.276400000000028e-05, 5.276400000000028e-05, 5.280599999999899e-05, 5.281899999999909e-05, 5.280599999999899e-05, 5.277700000000038e-05, 5.276400000000028e-05, 5.276400000000028e-05, 5.276400000000028e-05, 5.2749999999997244e-05, 5.269500000000191e-05, 5.272299999999758e-05, 5.276400000000028e-05, 5.277799999999985e-05, 5.276400000000028e-05, 5.273600000000114e-05, 5.276400000000028e-05, 5.276400000000028e-05, 5.276400000000028e-05, 5.277799999999985e-05, 5.276400000000028e-05, 5.276400000000028e-05]</msg>
<status status="PASS" starttime="20201030 18:28:10.185" endtime="20201030 18:28:10.187"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.180" endtime="20201030 18:28:10.188"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:10.191" endtime="20201030 18:28:10.211"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.190" endtime="20201030 18:28:10.211"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.189" endtime="20201030 18:28:10.212"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.835" endtime="20201030 18:28:10.212"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.834" endtime="20201030 18:28:10.212"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:10.221" endtime="20201030 18:28:10.236"></status>
</kw>
<msg timestamp="20201030 18:28:10.237" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:10.219" endtime="20201030 18:28:10.237"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:10.239" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:10.238" endtime="20201030 18:28:10.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:10.241" endtime="20201030 18:28:10.242"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.217" endtime="20201030 18:28:10.243"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.215" endtime="20201030 18:28:10.243"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:10.249" endtime="20201030 18:28:10.536"></status>
</kw>
<msg timestamp="20201030 18:28:10.539" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021391292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021444861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:10.248" endtime="20201030 18:28:10.540"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:10.547" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021391292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021444861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:10.540" endtime="20201030 18:28:10.548"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:10.549" endtime="20201030 18:28:10.550"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.245" endtime="20201030 18:28:10.551"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.244" endtime="20201030 18:28:10.551"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:10.555" level="INFO">${RESULT} = [{'diff': 5.356899999999984e-05}, {'diff': 5.276300000000081e-05}, {'diff': 5.275000000000071e-05}, {'diff': 5.277799999999985e-05}, {'diff': 5.2749999999997244e-05}, {'diff': 5.275000000000071e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:28:10.552" endtime="20201030 18:28:10.555"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:10.559" level="INFO">${ACCURACY} = {'diff': [5.356899999999984e-05, 5.276300000000081e-05, 5.275000000000071e-05, 5.277799999999985e-05, 5.2749999999997244e-05, 5.275000000000071e-05, 5.276400000000028e-05, 5.280599999999899e-05, 5.281...</msg>
<status status="PASS" starttime="20201030 18:28:10.556" endtime="20201030 18:28:10.559"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:10.564" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201030 18:28:10.563" endtime="20201030 18:28:10.564"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:10.566" level="INFO">VALUE: [5.356899999999984e-05, 5.276300000000081e-05, 5.275000000000071e-05, 5.277799999999985e-05, 5.2749999999997244e-05, 5.275000000000071e-05, 5.276400000000028e-05, 5.280599999999899e-05, 5.281899999999909e-05, 5.276400000000028e-05, 5.276400000000028e-05, 5.279099999999995e-05, 5.276400000000028e-05, 5.277700000000038e-05, 5.275000000000071e-05, 5.272200000000157e-05, 5.2749999999997244e-05, 5.279099999999995e-05, 5.273600000000114e-05, 5.2749999999997244e-05, 5.276300000000081e-05, 5.269500000000191e-05, 5.273600000000114e-05, 5.277799999999985e-05, 5.279199999999942e-05, 5.277799999999985e-05, 5.280499999999952e-05, 5.275000000000071e-05, 5.276300000000081e-05, 5.270900000000148e-05, 5.276400000000028e-05, 5.269400000000243e-05, 5.283299999999866e-05, 5.28340000000016e-05, 5.268099999999887e-05, 5.276400000000028e-05, 5.273600000000114e-05, 5.277700000000038e-05, 5.276400000000028e-05, 5.276400000000028e-05, 5.273700000000062e-05, 5.277799999999985e-05, 5.279099999999995e-05, 5.275000000000071e-05, 5.277799999999985e-05, 5.276400000000028e-05, 5.273600000000114e-05, 5.277700000000038e-05, 5.2693999999998964e-05, 5.2749999999997244e-05]</msg>
<status status="PASS" starttime="20201030 18:28:10.565" endtime="20201030 18:28:10.567"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.560" endtime="20201030 18:28:10.567"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:10.571" endtime="20201030 18:28:10.590"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.569" endtime="20201030 18:28:10.591"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.568" endtime="20201030 18:28:10.591"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.213" endtime="20201030 18:28:10.592"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.212" endtime="20201030 18:28:10.592"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:10.600" endtime="20201030 18:28:10.619"></status>
</kw>
<msg timestamp="20201030 18:28:10.620" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:10.599" endtime="20201030 18:28:10.620"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:10.623" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:10.621" endtime="20201030 18:28:10.623"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:10.624" endtime="20201030 18:28:10.625"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.596" endtime="20201030 18:28:10.626"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.594" endtime="20201030 18:28:10.626"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:10.633" endtime="20201030 18:28:10.918"></status>
</kw>
<msg timestamp="20201030 18:28:10.922" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022438736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022509736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:10.631" endtime="20201030 18:28:10.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:10.930" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022438736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022509736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:10.923" endtime="20201030 18:28:10.930"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:10.931" endtime="20201030 18:28:10.933"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.628" endtime="20201030 18:28:10.933"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.627" endtime="20201030 18:28:10.933"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:10.937" level="INFO">${RESULT} = [{'diff': 7.099999999999815e-05}, {'diff': 7.013900000000031e-05}, {'diff': 6.994499999999834e-05}, {'diff': 7.034699999999838e-05}, {'diff': 6.980599999999865e-05}, {'diff': 7.062500000000124e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:10.934" endtime="20201030 18:28:10.938"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:10.941" level="INFO">${ACCURACY} = {'diff': [7.099999999999815e-05, 7.013900000000031e-05, 6.994499999999834e-05, 7.034699999999838e-05, 6.980599999999865e-05, 7.062500000000124e-05, 7.020799999999869e-05, 7.013900000000031e-05, 7.0166...</msg>
<status status="PASS" starttime="20201030 18:28:10.938" endtime="20201030 18:28:10.942"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:10.946" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201030 18:28:10.945" endtime="20201030 18:28:10.946"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:10.948" level="INFO">VALUE: [7.099999999999815e-05, 7.013900000000031e-05, 6.994499999999834e-05, 7.034699999999838e-05, 6.980599999999865e-05, 7.062500000000124e-05, 7.020799999999869e-05, 7.013900000000031e-05, 7.016699999999945e-05, 7.037499999999752e-05, 6.997200000000148e-05, 7.01109999999977e-05, 6.990299999999963e-05, 7.00970000000016e-05, 7.054100000000035e-05, 7.050000000000112e-05, 6.994399999999887e-05, 6.994500000000181e-05, 7.026400000000044e-05, 7.056999999999897e-05, 6.994400000000234e-05, 7.031999999999872e-05, 7.063799999999787e-05, 7.038900000000056e-05, 6.995799999999844e-05, 7.054199999999983e-05, 7.02369999999973e-05, 7.050000000000112e-05, 7.044499999999884e-05, 6.994399999999887e-05, 6.984800000000083e-05, 7.007000000000194e-05, 7.038900000000056e-05, 7.061100000000167e-05, 7.026400000000044e-05, 7.027800000000001e-05, 6.995799999999844e-05, 7.047199999999851e-05, 6.97640000000034e-05, 6.990200000000016e-05, 7.011100000000117e-05, 6.997200000000148e-05, 6.983300000000178e-05, 7.059699999999863e-05, 7.030599999999915e-05, 7.063900000000081e-05, 7.05689999999995e-05, 7.00840000000015e-05, 6.994399999999887e-05, 7.034800000000133e-05]</msg>
<status status="PASS" starttime="20201030 18:28:10.947" endtime="20201030 18:28:10.950"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.942" endtime="20201030 18:28:10.950"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:10.954" endtime="20201030 18:28:10.973"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.953" endtime="20201030 18:28:10.974"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.951" endtime="20201030 18:28:10.974"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.593" endtime="20201030 18:28:10.975"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.592" endtime="20201030 18:28:10.975"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:10.983" endtime="20201030 18:28:11.002"></status>
</kw>
<msg timestamp="20201030 18:28:11.002" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:10.982" endtime="20201030 18:28:11.002"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:11.005" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:11.003" endtime="20201030 18:28:11.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:11.006" endtime="20201030 18:28:11.007"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.979" endtime="20201030 18:28:11.008"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.977" endtime="20201030 18:28:11.008"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:11.015" endtime="20201030 18:28:11.301"></status>
</kw>
<msg timestamp="20201030 18:28:11.305" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021571208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021643278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:11.013" endtime="20201030 18:28:11.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:11.313" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021571208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021643278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:11.306" endtime="20201030 18:28:11.313"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:11.314" endtime="20201030 18:28:11.316"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.011" endtime="20201030 18:28:11.316"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.009" endtime="20201030 18:28:11.317"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:11.321" level="INFO">${RESULT} = [{'diff': 7.2069999999997e-05}, {'diff': 7.095799999999944e-05}, {'diff': 7.0762999999998e-05}, {'diff': 7.170800000000019e-05}, {'diff': 7.158300000000006e-05}, {'diff': 7.102800000000076e-05}, {'dif...</msg>
<status status="PASS" starttime="20201030 18:28:11.318" endtime="20201030 18:28:11.321"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:11.326" level="INFO">${ACCURACY} = {'diff': [7.2069999999997e-05, 7.095799999999944e-05, 7.0762999999998e-05, 7.170800000000019e-05, 7.158300000000006e-05, 7.102800000000076e-05, 7.163899999999834e-05, 7.106999999999947e-05, 7.15409999...</msg>
<status status="PASS" starttime="20201030 18:28:11.322" endtime="20201030 18:28:11.326"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:11.330" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201030 18:28:11.329" endtime="20201030 18:28:11.331"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:11.333" level="INFO">VALUE: [7.2069999999997e-05, 7.095799999999944e-05, 7.0762999999998e-05, 7.170800000000019e-05, 7.158300000000006e-05, 7.102800000000076e-05, 7.163899999999834e-05, 7.106999999999947e-05, 7.154099999999788e-05, 7.163899999999834e-05, 7.162499999999877e-05, 7.084699999999888e-05, 7.126399999999797e-05, 7.14170000000007e-05, 7.080500000000017e-05, 7.169400000000062e-05, 7.083299999999931e-05, 7.115300000000088e-05, 7.09170000000002e-05, 7.169500000000009e-05, 7.101399999999772e-05, 7.147199999999951e-05, 7.126399999999797e-05, 7.105499999999695e-05, 7.169500000000009e-05, 7.091600000000073e-05, 7.11109999999987e-05, 7.1069e-05, 7.118100000000002e-05, 7.147199999999951e-05, 7.12360000000023e-05, 7.120799999999969e-05, 7.07499999999979e-05, 7.173599999999933e-05, 7.145899999999941e-05, 7.102799999999729e-05, 7.144400000000037e-05, 7.145899999999941e-05, 7.152800000000126e-05, 7.14300000000008e-05, 7.086099999999845e-05, 7.151400000000169e-05, 7.112499999999827e-05, 7.101400000000119e-05, 7.100000000000162e-05, 7.138900000000156e-05, 7.169500000000009e-05, 7.138900000000156e-05, 7.12499999999984e-05, 7.144400000000037e-05]</msg>
<status status="PASS" starttime="20201030 18:28:11.331" endtime="20201030 18:28:11.337"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.327" endtime="20201030 18:28:11.338"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:11.342" endtime="20201030 18:28:11.361"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.340" endtime="20201030 18:28:11.362"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.339" endtime="20201030 18:28:11.362"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.976" endtime="20201030 18:28:11.362"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.975" endtime="20201030 18:28:11.362"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:11.371" endtime="20201030 18:28:11.389"></status>
</kw>
<msg timestamp="20201030 18:28:11.390" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:11.369" endtime="20201030 18:28:11.390"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:11.392" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:11.391" endtime="20201030 18:28:11.393"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:11.393" endtime="20201030 18:28:11.395"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.367" endtime="20201030 18:28:11.395"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.365" endtime="20201030 18:28:11.396"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:11.402" endtime="20201030 18:28:11.689"></status>
</kw>
<msg timestamp="20201030 18:28:11.692" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021464903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021537361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:11.401" endtime="20201030 18:28:11.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:11.700" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021464903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021537361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:11.694" endtime="20201030 18:28:11.701"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:11.702" endtime="20201030 18:28:11.703"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.398" endtime="20201030 18:28:11.704"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.396" endtime="20201030 18:28:11.704"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:11.708" level="INFO">${RESULT} = [{'diff': 7.245800000000094e-05}, {'diff': 7.238900000000256e-05}, {'diff': 7.262499999999977e-05}, {'diff': 7.263899999999934e-05}, {'diff': 7.22499999999994e-05}, {'diff': 7.272200000000076e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:11.705" endtime="20201030 18:28:11.708"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:11.712" level="INFO">${ACCURACY} = {'diff': [7.245800000000094e-05, 7.238900000000256e-05, 7.262499999999977e-05, 7.263899999999934e-05, 7.22499999999994e-05, 7.272200000000076e-05, 7.244500000000084e-05, 7.238900000000256e-05, 7.19170...</msg>
<status status="PASS" starttime="20201030 18:28:11.709" endtime="20201030 18:28:11.712"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:11.717" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201030 18:28:11.716" endtime="20201030 18:28:11.717"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:11.719" level="INFO">VALUE: [7.245800000000094e-05, 7.238900000000256e-05, 7.262499999999977e-05, 7.263899999999934e-05, 7.22499999999994e-05, 7.272200000000076e-05, 7.244500000000084e-05, 7.238900000000256e-05, 7.19170000000012e-05, 7.242999999999833e-05, 7.227700000000253e-05, 7.232000000000072e-05, 7.180600000000065e-05, 7.262499999999977e-05, 7.266700000000195e-05, 7.252800000000226e-05, 7.229200000000158e-05, 7.207000000000047e-05, 7.265299999999891e-05, 7.259700000000063e-05, 7.19300000000013e-05, 7.231999999999725e-05, 7.187499999999902e-05, 7.220900000000016e-05, 7.218000000000155e-05, 7.213899999999884e-05, 7.212499999999927e-05, 7.19439999999974e-05, 7.270900000000066e-05, 7.22499999999994e-05, 7.177800000000151e-05, 7.251399999999922e-05, 7.208400000000004e-05, 7.181899999999727e-05, 7.219500000000059e-05, 7.190199999999869e-05, 7.184699999999988e-05, 7.252800000000226e-05, 7.237499999999952e-05, 7.195899999999991e-05, 7.176399999999847e-05, 7.176400000000194e-05, 7.269400000000162e-05, 7.218100000000102e-05, 7.17499999999989e-05, 7.202800000000176e-05, 7.194400000000087e-05, 7.188900000000206e-05, 7.199999999999915e-05, 7.194400000000087e-05]</msg>
<status status="PASS" starttime="20201030 18:28:11.718" endtime="20201030 18:28:11.720"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.713" endtime="20201030 18:28:11.720"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:11.724" endtime="20201030 18:28:11.743"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.722" endtime="20201030 18:28:11.744"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.721" endtime="20201030 18:28:11.744"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.363" endtime="20201030 18:28:11.745"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.363" endtime="20201030 18:28:11.745"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:11.753" endtime="20201030 18:28:11.773"></status>
</kw>
<msg timestamp="20201030 18:28:11.773" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:11.752" endtime="20201030 18:28:11.773"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:11.776" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:11.774" endtime="20201030 18:28:11.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:11.777" endtime="20201030 18:28:11.778"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.749" endtime="20201030 18:28:11.779"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.747" endtime="20201030 18:28:11.779"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:11.786" endtime="20201030 18:28:12.071"></status>
</kw>
<msg timestamp="20201030 18:28:12.074" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022437681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022511264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:11.784" endtime="20201030 18:28:12.075"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:12.083" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022437681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022511264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:12.075" endtime="20201030 18:28:12.084"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:12.085" endtime="20201030 18:28:12.086"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.782" endtime="20201030 18:28:12.087"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.780" endtime="20201030 18:28:12.087"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:12.091" level="INFO">${RESULT} = [{'diff': 7.35829999999986e-05}, {'diff': 7.28049999999987e-05}, {'diff': 7.316600000000298e-05}, {'diff': 7.270799999999772e-05}, {'diff': 7.344499999999837e-05}, {'diff': 7.370799999999872e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:28:12.088" endtime="20201030 18:28:12.091"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:12.095" level="INFO">${ACCURACY} = {'diff': [7.35829999999986e-05, 7.28049999999987e-05, 7.316600000000298e-05, 7.270799999999772e-05, 7.344499999999837e-05, 7.370799999999872e-05, 7.344500000000184e-05, 7.30560000000019e-05, 7.2791999...</msg>
<status status="PASS" starttime="20201030 18:28:12.092" endtime="20201030 18:28:12.095"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:12.100" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201030 18:28:12.099" endtime="20201030 18:28:12.100"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:12.102" level="INFO">VALUE: [7.35829999999986e-05, 7.28049999999987e-05, 7.316600000000298e-05, 7.270799999999772e-05, 7.344499999999837e-05, 7.370799999999872e-05, 7.344500000000184e-05, 7.30560000000019e-05, 7.279199999999861e-05, 7.32500000000004e-05, 7.318000000000255e-05, 7.337500000000052e-05, 7.309700000000113e-05, 7.284700000000088e-05, 7.300000000000015e-05, 7.336200000000043e-05, 7.300000000000015e-05, 7.316699999999898e-05, 7.27499999999999e-05, 7.345799999999847e-05, 7.332000000000172e-05, 7.337500000000052e-05, 7.301399999999972e-05, 7.308400000000104e-05, 7.337500000000052e-05, 7.313899999999984e-05, 7.362500000000077e-05, 7.317999999999908e-05, 7.27499999999999e-05, 7.29170000000022e-05, 7.350000000000065e-05, 7.290299999999916e-05, 7.372199999999829e-05, 7.287500000000002e-05, 7.27499999999999e-05, 7.31110000000007e-05, 7.317999999999908e-05, 7.315299999999941e-05, 7.286100000000045e-05, 7.323600000000083e-05, 7.283300000000131e-05, 7.330599999999868e-05, 7.316599999999951e-05, 7.323600000000083e-05, 7.355599999999893e-05, 7.32500000000004e-05, 7.331899999999877e-05, 7.32500000000004e-05, 7.331900000000224e-05, 7.319499999999812e-05]</msg>
<status status="PASS" starttime="20201030 18:28:12.101" endtime="20201030 18:28:12.104"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.096" endtime="20201030 18:28:12.104"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:12.108" endtime="20201030 18:28:12.127"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.106" endtime="20201030 18:28:12.128"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.105" endtime="20201030 18:28:12.128"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.746" endtime="20201030 18:28:12.128"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.745" endtime="20201030 18:28:12.129"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:12.137" endtime="20201030 18:28:12.156"></status>
</kw>
<msg timestamp="20201030 18:28:12.156" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:12.136" endtime="20201030 18:28:12.157"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:12.159" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:12.157" endtime="20201030 18:28:12.159"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:12.160" endtime="20201030 18:28:12.161"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.133" endtime="20201030 18:28:12.162"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.131" endtime="20201030 18:28:12.162"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:12.169" endtime="20201030 18:28:12.455"></status>
</kw>
<msg timestamp="20201030 18:28:12.458" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021681681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021756431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:12.167" endtime="20201030 18:28:12.458"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:12.466" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021681681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021756431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:12.459" endtime="20201030 18:28:12.466"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:12.467" endtime="20201030 18:28:12.469"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.165" endtime="20201030 18:28:12.469"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.163" endtime="20201030 18:28:12.469"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:12.473" level="INFO">${RESULT} = [{'diff': 7.474999999999843e-05}, {'diff': 7.397199999999854e-05}, {'diff': 7.388899999999712e-05}, {'diff': 7.376400000000047e-05}, {'diff': 7.455599999999993e-05}, {'diff': 7.416699999999998e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:12.470" endtime="20201030 18:28:12.474"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:12.481" level="INFO">${ACCURACY} = {'diff': [7.474999999999843e-05, 7.397199999999854e-05, 7.388899999999712e-05, 7.376400000000047e-05, 7.455599999999993e-05, 7.416699999999998e-05, 7.422300000000173e-05, 7.42500000000014e-05, 7.44870...</msg>
<status status="PASS" starttime="20201030 18:28:12.474" endtime="20201030 18:28:12.481"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:12.486" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201030 18:28:12.485" endtime="20201030 18:28:12.486"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:12.488" level="INFO">VALUE: [7.474999999999843e-05, 7.397199999999854e-05, 7.388899999999712e-05, 7.376400000000047e-05, 7.455599999999993e-05, 7.416699999999998e-05, 7.422300000000173e-05, 7.42500000000014e-05, 7.448700000000155e-05, 7.412500000000127e-05, 7.423599999999836e-05, 7.38049999999997e-05, 7.39309999999993e-05, 7.441699999999676e-05, 7.418000000000008e-05, 7.390300000000016e-05, 7.416699999999998e-05, 7.444499999999937e-05, 7.391600000000026e-05, 7.384700000000188e-05, 7.379199999999961e-05, 7.37500000000009e-05, 7.397199999999854e-05, 7.427800000000054e-05, 7.386100000000145e-05, 7.411099999999823e-05, 7.469400000000015e-05, 7.4069999999999e-05, 7.437500000000152e-05, 7.437500000000152e-05, 7.44309999999998e-05, 7.422200000000226e-05, 7.412500000000127e-05, 7.423600000000183e-05, 7.400000000000115e-05, 7.416699999999998e-05, 7.415200000000094e-05, 7.418000000000008e-05, 7.427800000000054e-05, 7.461099999999873e-05, 7.423600000000183e-05, 7.455599999999993e-05, 7.429200000000011e-05, 7.409699999999866e-05, 7.430599999999968e-05, 7.458399999999907e-05, 7.387499999999755e-05, 7.43050000000002e-05, 7.383400000000179e-05, 7.419399999999965e-05]</msg>
<status status="PASS" starttime="20201030 18:28:12.487" endtime="20201030 18:28:12.489"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.482" endtime="20201030 18:28:12.489"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:12.493" endtime="20201030 18:28:12.512"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.492" endtime="20201030 18:28:12.513"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.490" endtime="20201030 18:28:12.513"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.129" endtime="20201030 18:28:12.514"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.129" endtime="20201030 18:28:12.514"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:12.522" endtime="20201030 18:28:12.541"></status>
</kw>
<msg timestamp="20201030 18:28:12.541" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:12.521" endtime="20201030 18:28:12.542"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:12.544" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:12.542" endtime="20201030 18:28:12.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:12.545" endtime="20201030 18:28:12.546"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.518" endtime="20201030 18:28:12.547"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.516" endtime="20201030 18:28:12.547"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:12.554" endtime="20201030 18:28:12.840"></status>
</kw>
<msg timestamp="20201030 18:28:12.843" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021428903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021504264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:12.552" endtime="20201030 18:28:12.844"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:12.851" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021428903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021504264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:12.844" endtime="20201030 18:28:12.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:12.853" endtime="20201030 18:28:12.854"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.550" endtime="20201030 18:28:12.855"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.548" endtime="20201030 18:28:12.855"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:12.859" level="INFO">${RESULT} = [{'diff': 7.536099999999948e-05}, {'diff': 7.480600000000018e-05}, {'diff': 7.490300000000116e-05}, {'diff': 7.506900000000052e-05}, {'diff': 7.518100000000055e-05}, {'diff': 7.533399999999982e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:12.856" endtime="20201030 18:28:12.859"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:12.863" level="INFO">${ACCURACY} = {'diff': [7.536099999999948e-05, 7.480600000000018e-05, 7.490300000000116e-05, 7.506900000000052e-05, 7.518100000000055e-05, 7.533399999999982e-05, 7.537499999999905e-05, 7.507e-05, 7.476400000000147e...</msg>
<status status="PASS" starttime="20201030 18:28:12.860" endtime="20201030 18:28:12.863"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:12.867" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201030 18:28:12.866" endtime="20201030 18:28:12.868"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:12.870" level="INFO">VALUE: [7.536099999999948e-05, 7.480600000000018e-05, 7.490300000000116e-05, 7.506900000000052e-05, 7.518100000000055e-05, 7.533399999999982e-05, 7.537499999999905e-05, 7.507e-05, 7.476400000000147e-05, 7.487500000000202e-05, 7.51249999999988e-05, 7.556999999999703e-05, 7.49310000000003e-05, 7.501399999999825e-05, 7.54440000000009e-05, 7.54310000000008e-05, 7.568099999999758e-05, 7.491599999999779e-05, 7.493000000000083e-05, 7.536099999999948e-05, 7.554199999999789e-05, 7.472200000000276e-05, 7.545800000000047e-05, 7.487499999999855e-05, 7.473600000000233e-05, 7.555499999999798e-05, 7.487499999999855e-05, 7.555600000000093e-05, 7.545800000000047e-05, 7.526400000000197e-05, 7.566699999999801e-05, 7.531900000000077e-05, 7.523599999999936e-05, 7.481999999999975e-05, 7.520800000000022e-05, 7.54440000000009e-05, 7.49310000000003e-05, 7.541699999999776e-05, 7.555499999999798e-05, 7.549999999999918e-05, 7.532000000000025e-05, 7.54029999999982e-05, 7.561199999999921e-05, 7.490200000000169e-05, 7.561099999999973e-05, 7.559700000000016e-05, 7.509800000000261e-05, 7.484699999999941e-05, 7.548599999999961e-05, 7.518000000000108e-05]</msg>
<status status="PASS" starttime="20201030 18:28:12.868" endtime="20201030 18:28:12.871"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.864" endtime="20201030 18:28:12.871"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:12.875" endtime="20201030 18:28:12.894"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.873" endtime="20201030 18:28:12.895"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.872" endtime="20201030 18:28:12.895"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.515" endtime="20201030 18:28:12.895"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.514" endtime="20201030 18:28:12.895"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:12.904" endtime="20201030 18:28:12.923"></status>
</kw>
<msg timestamp="20201030 18:28:12.924" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:12.902" endtime="20201030 18:28:12.924"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:12.926" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:12.925" endtime="20201030 18:28:12.927"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:12.927" endtime="20201030 18:28:12.929"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.900" endtime="20201030 18:28:12.929"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.898" endtime="20201030 18:28:12.930"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:12.936" endtime="20201030 18:28:13.222"></status>
</kw>
<msg timestamp="20201030 18:28:13.225" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022296931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022373806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:12.935" endtime="20201030 18:28:13.226"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:13.233" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022296931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022373806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:13.226" endtime="20201030 18:28:13.234"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:13.235" endtime="20201030 18:28:13.236"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.932" endtime="20201030 18:28:13.237"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.931" endtime="20201030 18:28:13.237"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:13.241" level="INFO">${RESULT} = [{'diff': 7.687500000000055e-05}, {'diff': 7.602700000000281e-05}, {'diff': 7.65830000000016e-05}, {'diff': 7.636100000000048e-05}, {'diff': 7.617999999999861e-05}, {'diff': 7.650000000000018e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:13.238" endtime="20201030 18:28:13.241"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:13.245" level="INFO">${ACCURACY} = {'diff': [7.687500000000055e-05, 7.602700000000281e-05, 7.65830000000016e-05, 7.636100000000048e-05, 7.617999999999861e-05, 7.650000000000018e-05, 7.644399999999843e-05, 7.61249999999998e-05, 7.587500...</msg>
<status status="PASS" starttime="20201030 18:28:13.242" endtime="20201030 18:28:13.245"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:13.250" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201030 18:28:13.249" endtime="20201030 18:28:13.250"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:13.252" level="INFO">VALUE: [7.687500000000055e-05, 7.602700000000281e-05, 7.65830000000016e-05, 7.636100000000048e-05, 7.617999999999861e-05, 7.650000000000018e-05, 7.644399999999843e-05, 7.61249999999998e-05, 7.587500000000302e-05, 7.617999999999861e-05, 7.669499999999815e-05, 7.61379999999999e-05, 7.61249999999998e-05, 7.605600000000143e-05, 7.648600000000061e-05, 7.599999999999968e-05, 7.604200000000186e-05, 7.598600000000011e-05, 7.573599999999986e-05, 7.602800000000229e-05, 7.574999999999943e-05, 7.618100000000155e-05, 7.580499999999823e-05, 7.650000000000018e-05, 7.580600000000118e-05, 7.608299999999762e-05, 7.588899999999912e-05, 7.627799999999907e-05, 7.586199999999946e-05, 7.665299999999944e-05, 7.619500000000112e-05, 7.587499999999955e-05, 7.611100000000023e-05, 7.64449999999979e-05, 7.57500000000029e-05, 7.5763999999999e-05, 7.669500000000162e-05, 7.612500000000327e-05, 7.61249999999998e-05, 7.599999999999968e-05, 7.581900000000127e-05, 7.61249999999998e-05, 7.604199999999839e-05, 7.597200000000054e-05, 7.668099999999858e-05, 7.619500000000112e-05, 7.663899999999987e-05, 7.618099999999808e-05, 7.636100000000048e-05, 7.606899999999805e-05]</msg>
<status status="PASS" starttime="20201030 18:28:13.251" endtime="20201030 18:28:13.254"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.246" endtime="20201030 18:28:13.254"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:13.258" endtime="20201030 18:28:13.277"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.256" endtime="20201030 18:28:13.278"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.255" endtime="20201030 18:28:13.278"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.896" endtime="20201030 18:28:13.278"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.896" endtime="20201030 18:28:13.278"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:13.287" endtime="20201030 18:28:13.306"></status>
</kw>
<msg timestamp="20201030 18:28:13.306" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:13.286" endtime="20201030 18:28:13.306"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:13.309" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:13.307" endtime="20201030 18:28:13.309"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:13.310" endtime="20201030 18:28:13.311"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.283" endtime="20201030 18:28:13.312"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.281" endtime="20201030 18:28:13.312"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:13.319" endtime="20201030 18:28:13.605"></status>
</kw>
<msg timestamp="20201030 18:28:13.608" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021605667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021683736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:13.317" endtime="20201030 18:28:13.608"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:13.616" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021605667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021683736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:13.609" endtime="20201030 18:28:13.616"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:13.617" endtime="20201030 18:28:13.618"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.315" endtime="20201030 18:28:13.619"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.313" endtime="20201030 18:28:13.619"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:13.623" level="INFO">${RESULT} = [{'diff': 7.806900000000006e-05}, {'diff': 7.694399999999893e-05}, {'diff': 7.723599999999789e-05}, {'diff': 7.691699999999926e-05}, {'diff': 7.756899999999955e-05}, {'diff': 7.698600000000111e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:13.620" endtime="20201030 18:28:13.623"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:13.628" level="INFO">${ACCURACY} = {'diff': [7.806900000000006e-05, 7.694399999999893e-05, 7.723599999999789e-05, 7.691699999999926e-05, 7.756899999999955e-05, 7.698600000000111e-05, 7.766700000000001e-05, 7.717999999999961e-05, 7.6971...</msg>
<status status="PASS" starttime="20201030 18:28:13.624" endtime="20201030 18:28:13.628"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:13.633" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201030 18:28:13.632" endtime="20201030 18:28:13.633"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:13.635" level="INFO">VALUE: [7.806900000000006e-05, 7.694399999999893e-05, 7.723599999999789e-05, 7.691699999999926e-05, 7.756899999999955e-05, 7.698600000000111e-05, 7.766700000000001e-05, 7.717999999999961e-05, 7.697199999999807e-05, 7.675000000000043e-05, 7.774999999999796e-05, 7.742999999999986e-05, 7.688900000000012e-05, 7.737499999999758e-05, 7.705499999999949e-05, 7.761100000000173e-05, 7.736099999999801e-05, 7.73189999999993e-05, 7.72909999999967e-05, 7.768099999999958e-05, 7.724999999999746e-05, 7.6764e-05, 7.768099999999958e-05, 7.69440000000024e-05, 7.69449999999984e-05, 7.734699999999844e-05, 7.693099999999883e-05, 7.716699999999951e-05, 7.75129999999978e-05, 7.694399999999893e-05, 7.699999999999721e-05, 7.748599999999814e-05, 7.737500000000105e-05, 7.737500000000105e-05, 7.742999999999986e-05, 7.69579999999985e-05, 7.748600000000161e-05, 7.723599999999789e-05, 7.720799999999875e-05, 7.750000000000118e-05, 7.727800000000007e-05, 7.688799999999718e-05, 7.71250000000008e-05, 7.683400000000132e-05, 7.725000000000093e-05, 7.695899999999797e-05, 7.687500000000055e-05, 7.719400000000265e-05, 7.7070000000002e-05, 7.752699999999738e-05]</msg>
<status status="PASS" starttime="20201030 18:28:13.634" endtime="20201030 18:28:13.636"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.629" endtime="20201030 18:28:13.636"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:13.640" endtime="20201030 18:28:13.659"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.639" endtime="20201030 18:28:13.660"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.637" endtime="20201030 18:28:13.660"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.279" endtime="20201030 18:28:13.661"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.279" endtime="20201030 18:28:13.661"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:13.669" endtime="20201030 18:28:13.688"></status>
</kw>
<msg timestamp="20201030 18:28:13.688" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:13.668" endtime="20201030 18:28:13.689"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:13.691" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:13.690" endtime="20201030 18:28:13.691"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:13.692" endtime="20201030 18:28:13.694"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.665" endtime="20201030 18:28:13.694"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.663" endtime="20201030 18:28:13.695"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:13.701" endtime="20201030 18:28:13.990"></status>
</kw>
<msg timestamp="20201030 18:28:13.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021405431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021483792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:13.699" endtime="20201030 18:28:13.993"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:14.001" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021405431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021483792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:13.994" endtime="20201030 18:28:14.001"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:14.002" endtime="20201030 18:28:14.004"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.697" endtime="20201030 18:28:14.004"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.695" endtime="20201030 18:28:14.005"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:14.009" level="INFO">${RESULT} = [{'diff': 7.836100000000248e-05}, {'diff': 7.799999999999821e-05}, {'diff': 7.829200000000064e-05}, {'diff': 7.791600000000079e-05}, {'diff': 7.85969999999997e-05}, {'diff': 7.82640000000015e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:28:14.005" endtime="20201030 18:28:14.009"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:14.013" level="INFO">${ACCURACY} = {'diff': [7.836100000000248e-05, 7.799999999999821e-05, 7.829200000000064e-05, 7.791600000000079e-05, 7.85969999999997e-05, 7.82640000000015e-05, 7.788800000000165e-05, 7.8458e-05, 7.834699999999944e-...</msg>
<status status="PASS" starttime="20201030 18:28:14.010" endtime="20201030 18:28:14.013"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:14.017" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201030 18:28:14.016" endtime="20201030 18:28:14.017"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:14.019" level="INFO">VALUE: [7.836100000000248e-05, 7.799999999999821e-05, 7.829200000000064e-05, 7.791600000000079e-05, 7.85969999999997e-05, 7.82640000000015e-05, 7.788800000000165e-05, 7.8458e-05, 7.834699999999944e-05, 7.79579999999995e-05, 7.787499999999808e-05, 7.874999999999896e-05, 7.836099999999901e-05, 7.777800000000057e-05, 7.783299999999937e-05, 7.786099999999851e-05, 7.815300000000094e-05, 7.847300000000251e-05, 7.84449999999999e-05, 7.836099999999901e-05, 7.797199999999907e-05, 7.811099999999876e-05, 7.823599999999889e-05, 7.797199999999907e-05, 7.868000000000111e-05, 7.852699999999838e-05, 7.809800000000214e-05, 7.861099999999926e-05, 7.780599999999971e-05, 7.786199999999799e-05, 7.854200000000089e-05, 7.787499999999808e-05, 7.799999999999821e-05, 7.855600000000046e-05, 7.788900000000112e-05, 7.830600000000021e-05, 7.855500000000099e-05, 7.797199999999907e-05, 7.861099999999926e-05, 7.83190000000003e-05, 7.805500000000049e-05, 7.848599999999914e-05, 7.823700000000183e-05, 7.773600000000186e-05, 7.773599999999839e-05, 7.798600000000211e-05, 7.794399999999993e-05, 7.837499999999858e-05, 7.841700000000076e-05, 7.816700000000051e-05]</msg>
<status status="PASS" starttime="20201030 18:28:14.018" endtime="20201030 18:28:14.020"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.014" endtime="20201030 18:28:14.021"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:14.024" endtime="20201030 18:28:14.044"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.023" endtime="20201030 18:28:14.044"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.022" endtime="20201030 18:28:14.045"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.662" endtime="20201030 18:28:14.045"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.661" endtime="20201030 18:28:14.045"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:14.054" endtime="20201030 18:28:14.074"></status>
</kw>
<msg timestamp="20201030 18:28:14.074" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:14.052" endtime="20201030 18:28:14.074"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:14.077" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:14.075" endtime="20201030 18:28:14.077"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:14.078" endtime="20201030 18:28:14.079"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.050" endtime="20201030 18:28:14.080"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.048" endtime="20201030 18:28:14.080"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:14.087" endtime="20201030 18:28:14.373"></status>
</kw>
<msg timestamp="20201030 18:28:14.376" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022599222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022678986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:14.085" endtime="20201030 18:28:14.376"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:14.384" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022599222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022678986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:14.377" endtime="20201030 18:28:14.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:14.385" endtime="20201030 18:28:14.387"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.083" endtime="20201030 18:28:14.387"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.081" endtime="20201030 18:28:14.388"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:14.392" level="INFO">${RESULT} = [{'diff': 7.9764000000003e-05}, {'diff': 7.949999999999971e-05}, {'diff': 7.929200000000164e-05}, {'diff': 7.96109999999968e-05}, {'diff': 7.887499999999908e-05}, {'diff': 7.924999999999946e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 18:28:14.389" endtime="20201030 18:28:14.392"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:14.396" level="INFO">${ACCURACY} = {'diff': [7.9764000000003e-05, 7.949999999999971e-05, 7.929200000000164e-05, 7.96109999999968e-05, 7.887499999999908e-05, 7.924999999999946e-05, 7.96389999999994e-05, 7.870900000000319e-05, 7.90550000...</msg>
<status status="PASS" starttime="20201030 18:28:14.393" endtime="20201030 18:28:14.396"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:14.400" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201030 18:28:14.399" endtime="20201030 18:28:14.401"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:14.403" level="INFO">VALUE: [7.9764000000003e-05, 7.949999999999971e-05, 7.929200000000164e-05, 7.96109999999968e-05, 7.887499999999908e-05, 7.924999999999946e-05, 7.96389999999994e-05, 7.870900000000319e-05, 7.905500000000149e-05, 7.886099999999951e-05, 7.967999999999864e-05, 7.942999999999839e-05, 7.916699999999804e-05, 7.958299999999766e-05, 7.904099999999845e-05, 7.941599999999882e-05, 7.905599999999749e-05, 7.970800000000125e-05, 7.87779999999981e-05, 7.968100000000158e-05, 7.941599999999882e-05, 7.883300000000037e-05, 7.873599999999939e-05, 7.96389999999994e-05, 7.886099999999951e-05, 7.911099999999976e-05, 7.912499999999933e-05, 7.969500000000115e-05, 7.918100000000108e-05, 7.936100000000001e-05, 7.970900000000072e-05, 7.94169999999983e-05, 7.916700000000151e-05, 7.95970000000007e-05, 7.951399999999928e-05, 7.924999999999946e-05, 7.954100000000242e-05, 7.94030000000022e-05, 7.923599999999989e-05, 7.944399999999796e-05, 7.924999999999946e-05, 7.92640000000025e-05, 7.933300000000088e-05, 7.894399999999746e-05, 7.898700000000258e-05, 7.884699999999994e-05, 7.876399999999853e-05, 7.893099999999736e-05, 7.88190000000008e-05, 7.94450000000009e-05]</msg>
<status status="PASS" starttime="20201030 18:28:14.401" endtime="20201030 18:28:14.404"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.397" endtime="20201030 18:28:14.405"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:14.408" endtime="20201030 18:28:14.428"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.407" endtime="20201030 18:28:14.428"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.406" endtime="20201030 18:28:14.429"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.046" endtime="20201030 18:28:14.429"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.046" endtime="20201030 18:28:14.429"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:14.438" endtime="20201030 18:28:14.457"></status>
</kw>
<msg timestamp="20201030 18:28:14.457" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:14.436" endtime="20201030 18:28:14.457"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:14.460" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:14.458" endtime="20201030 18:28:14.460"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:14.461" endtime="20201030 18:28:14.462"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.434" endtime="20201030 18:28:14.463"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.432" endtime="20201030 18:28:14.463"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:14.470" endtime="20201030 18:28:14.755"></status>
</kw>
<msg timestamp="20201030 18:28:14.758" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021623778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021704319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:14.468" endtime="20201030 18:28:14.758"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:14.766" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021623778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021704319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:14.759" endtime="20201030 18:28:14.766"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:14.767" endtime="20201030 18:28:14.769"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.466" endtime="20201030 18:28:14.769"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.464" endtime="20201030 18:28:14.770"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:14.773" level="INFO">${RESULT} = [{'diff': 8.054099999999995e-05}, {'diff': 8.012500000000033e-05}, {'diff': 8.02909999999997e-05}, {'diff': 8.062500000000083e-05}, {'diff': 8.005600000000196e-05}, {'diff': 7.979199999999867e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:14.770" endtime="20201030 18:28:14.774"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:14.778" level="INFO">${ACCURACY} = {'diff': [8.054099999999995e-05, 8.012500000000033e-05, 8.02909999999997e-05, 8.062500000000083e-05, 8.005600000000196e-05, 7.979199999999867e-05, 8.031999999999831e-05, 8.040200000000025e-05, 8.02359...</msg>
<status status="PASS" starttime="20201030 18:28:14.774" endtime="20201030 18:28:14.779"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:14.783" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201030 18:28:14.782" endtime="20201030 18:28:14.783"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:14.785" level="INFO">VALUE: [8.054099999999995e-05, 8.012500000000033e-05, 8.02909999999997e-05, 8.062500000000083e-05, 8.005600000000196e-05, 7.979199999999867e-05, 8.031999999999831e-05, 8.040200000000025e-05, 8.023599999999742e-05, 8.011100000000076e-05, 8.0152e-05, 7.976399999999953e-05, 8.011100000000076e-05, 8.036100000000101e-05, 7.993000000000236e-05, 8.029199999999917e-05, 8.02779999999996e-05, 8.054099999999995e-05, 7.976399999999953e-05, 8.030599999999874e-05, 8.019399999999871e-05, 7.99169999999988e-05, 7.980600000000171e-05, 8.054199999999942e-05, 7.994399999999846e-05, 8.02909999999997e-05, 8.043099999999886e-05, 8.048600000000114e-05, 8.069400000000268e-05, 8.037499999999712e-05, 8.059800000000117e-05, 8.034699999999798e-05, 8.017999999999914e-05, 8.005599999999849e-05, 7.997300000000054e-05, 8.047200000000157e-05, 7.99719999999976e-05, 7.972200000000082e-05, 8.008300000000163e-05, 8.061100000000126e-05, 8.011100000000076e-05, 7.99450000000014e-05, 7.988899999999965e-05, 8.058299999999866e-05, 7.980599999999824e-05, 8.01389999999999e-05, 7.983300000000138e-05, 8.048600000000114e-05, 8.006899999999859e-05, 7.997200000000107e-05]</msg>
<status status="PASS" starttime="20201030 18:28:14.784" endtime="20201030 18:28:14.786"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.779" endtime="20201030 18:28:14.787"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:14.790" endtime="20201030 18:28:14.810"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.789" endtime="20201030 18:28:14.810"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.788" endtime="20201030 18:28:14.811"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.430" endtime="20201030 18:28:14.811"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.430" endtime="20201030 18:28:14.811"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:14.820" endtime="20201030 18:28:14.838"></status>
</kw>
<msg timestamp="20201030 18:28:14.839" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:14.818" endtime="20201030 18:28:14.839"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:14.841" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:14.840" endtime="20201030 18:28:14.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:14.843" endtime="20201030 18:28:14.844"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.816" endtime="20201030 18:28:14.845"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.814" endtime="20201030 18:28:14.845"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:14.852" endtime="20201030 18:28:15.138"></status>
</kw>
<msg timestamp="20201030 18:28:15.141" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021447375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021528486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:14.850" endtime="20201030 18:28:15.141"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:15.149" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021447375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021528486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:15.142" endtime="20201030 18:28:15.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:15.150" endtime="20201030 18:28:15.152"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.847" endtime="20201030 18:28:15.153"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.846" endtime="20201030 18:28:15.153"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:15.157" level="INFO">${RESULT} = [{'diff': 8.11109999999983e-05}, {'diff': 8.134700000000245e-05}, {'diff': 8.166700000000054e-05}, {'diff': 8.072199999999835e-05}, {'diff': 8.134700000000245e-05}, {'diff': 8.134699999999898e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:15.154" endtime="20201030 18:28:15.157"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:15.161" level="INFO">${ACCURACY} = {'diff': [8.11109999999983e-05, 8.134700000000245e-05, 8.166700000000054e-05, 8.072199999999835e-05, 8.134700000000245e-05, 8.134699999999898e-05, 8.105500000000002e-05, 8.123600000000189e-05, 8.12640...</msg>
<status status="PASS" starttime="20201030 18:28:15.158" endtime="20201030 18:28:15.161"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:15.165" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201030 18:28:15.164" endtime="20201030 18:28:15.166"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:15.168" level="INFO">VALUE: [8.11109999999983e-05, 8.134700000000245e-05, 8.166700000000054e-05, 8.072199999999835e-05, 8.134700000000245e-05, 8.134699999999898e-05, 8.105500000000002e-05, 8.123600000000189e-05, 8.126400000000103e-05, 8.159699999999923e-05, 8.158299999999966e-05, 8.072199999999835e-05, 8.102800000000035e-05, 8.14719999999991e-05, 8.151400000000128e-05, 8.073599999999792e-05, 8.081899999999934e-05, 8.09169999999998e-05, 8.136099999999855e-05, 8.161100000000227e-05, 8.163899999999794e-05, 8.086099999999805e-05, 8.16109999999988e-05, 8.106899999999959e-05, 8.090199999999728e-05, 8.141600000000082e-05, 8.148600000000214e-05, 8.154200000000042e-05, 8.100000000000121e-05, 8.11109999999983e-05, 8.126400000000103e-05, 8.086100000000151e-05, 8.126300000000156e-05, 8.140300000000072e-05, 8.154200000000042e-05, 8.119400000000318e-05, 8.166700000000054e-05, 8.145799999999953e-05, 8.09169999999998e-05, 8.104100000000045e-05, 8.15970000000027e-05, 8.129200000000017e-05, 8.07780000000001e-05, 8.136099999999855e-05, 8.118099999999961e-05, 8.09719999999986e-05, 8.154200000000042e-05, 8.108399999999863e-05, 8.16109999999988e-05, 8.1152000000001e-05]</msg>
<status status="PASS" starttime="20201030 18:28:15.166" endtime="20201030 18:28:15.168"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.162" endtime="20201030 18:28:15.169"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:15.173" endtime="20201030 18:28:15.192"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.171" endtime="20201030 18:28:15.193"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.170" endtime="20201030 18:28:15.193"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.812" endtime="20201030 18:28:15.193"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.811" endtime="20201030 18:28:15.193"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:15.202" endtime="20201030 18:28:15.222"></status>
</kw>
<msg timestamp="20201030 18:28:15.222" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:15.201" endtime="20201030 18:28:15.223"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:15.225" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:15.223" endtime="20201030 18:28:15.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:15.226" endtime="20201030 18:28:15.227"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.198" endtime="20201030 18:28:15.228"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.196" endtime="20201030 18:28:15.228"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:15.235" endtime="20201030 18:28:15.521"></status>
</kw>
<msg timestamp="20201030 18:28:15.524" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022445306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022527861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:15.233" endtime="20201030 18:28:15.524"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:15.532" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022445306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022527861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:15.525" endtime="20201030 18:28:15.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:15.533" endtime="20201030 18:28:15.534"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.231" endtime="20201030 18:28:15.535"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.229" endtime="20201030 18:28:15.535"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:15.539" level="INFO">${RESULT} = [{'diff': 8.255499999999805e-05}, {'diff': 8.186200000000199e-05}, {'diff': 8.205499999999755e-05}, {'diff': 8.240299999999826e-05}, {'diff': 8.20970000000032e-05}, {'diff': 8.188900000000165e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:15.536" endtime="20201030 18:28:15.540"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:15.543" level="INFO">${ACCURACY} = {'diff': [8.255499999999805e-05, 8.186200000000199e-05, 8.205499999999755e-05, 8.240299999999826e-05, 8.20970000000032e-05, 8.188900000000165e-05, 8.176400000000153e-05, 8.230600000000074e-05, 8.20419...</msg>
<status status="PASS" starttime="20201030 18:28:15.540" endtime="20201030 18:28:15.544"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:15.548" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201030 18:28:15.547" endtime="20201030 18:28:15.548"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:15.550" level="INFO">VALUE: [8.255499999999805e-05, 8.186200000000199e-05, 8.205499999999755e-05, 8.240299999999826e-05, 8.20970000000032e-05, 8.188900000000165e-05, 8.176400000000153e-05, 8.230600000000074e-05, 8.204199999999745e-05, 8.254200000000142e-05, 8.222199999999985e-05, 8.21109999999993e-05, 8.259700000000023e-05, 8.251399999999881e-05, 8.270899999999679e-05, 8.201399999999831e-05, 8.23049999999978e-05, 8.218000000000114e-05, 8.188900000000165e-05, 8.2152999999998e-05, 8.172299999999882e-05, 8.26109999999998e-05, 8.232000000000031e-05, 8.170799999999978e-05, 8.252800000000185e-05, 8.254200000000142e-05, 8.24170000000013e-05, 8.241699999999783e-05, 8.179099999999773e-05, 8.202800000000135e-05, 8.222199999999985e-05, 8.213800000000243e-05, 8.234699999999998e-05, 8.190299999999776e-05, 8.204200000000092e-05, 8.26109999999998e-05, 8.186099999999905e-05, 8.266699999999808e-05, 8.26109999999998e-05, 8.193100000000036e-05, 8.205600000000049e-05, 8.227699999999866e-05, 8.236099999999955e-05, 8.193100000000036e-05, 8.24720000000001e-05, 8.169499999999968e-05, 8.26109999999998e-05, 8.187499999999862e-05, 8.244500000000043e-05, 8.26109999999998e-05]</msg>
<status status="PASS" starttime="20201030 18:28:15.549" endtime="20201030 18:28:15.552"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.544" endtime="20201030 18:28:15.552"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:15.556" endtime="20201030 18:28:15.576"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.554" endtime="20201030 18:28:15.576"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.553" endtime="20201030 18:28:15.577"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.194" endtime="20201030 18:28:15.577"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.194" endtime="20201030 18:28:15.577"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:15.590" endtime="20201030 18:28:15.610"></status>
</kw>
<msg timestamp="20201030 18:28:15.610" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:15.588" endtime="20201030 18:28:15.611"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:15.614" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:15.612" endtime="20201030 18:28:15.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:15.616" endtime="20201030 18:28:15.618"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.584" endtime="20201030 18:28:15.618"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.581" endtime="20201030 18:28:15.619"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:15.625" endtime="20201030 18:28:15.911"></status>
</kw>
<msg timestamp="20201030 18:28:15.914" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026694917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026778153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:15.624" endtime="20201030 18:28:15.914"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:15.922" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026694917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026778153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:15.915" endtime="20201030 18:28:15.922"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:15.923" endtime="20201030 18:28:15.924"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.621" endtime="20201030 18:28:15.925"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.619" endtime="20201030 18:28:15.925"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:15.929" level="INFO">${RESULT} = [{'diff': 8.323600000000042e-05}, {'diff': 8.315199999999953e-05}, {'diff': 8.277799999999863e-05}, {'diff': 8.358300000000166e-05}, {'diff': 8.36529999999995e-05}, {'diff': 8.288900000000265e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:15.926" endtime="20201030 18:28:15.929"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:15.937" level="INFO">${ACCURACY} = {'diff': [8.323600000000042e-05, 8.315199999999953e-05, 8.277799999999863e-05, 8.358300000000166e-05, 8.36529999999995e-05, 8.288900000000265e-05, 8.298600000000017e-05, 8.34170000000023e-05, 8.308400...</msg>
<status status="PASS" starttime="20201030 18:28:15.930" endtime="20201030 18:28:15.937"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:15.941" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201030 18:28:15.940" endtime="20201030 18:28:15.942"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:15.944" level="INFO">VALUE: [8.323600000000042e-05, 8.315199999999953e-05, 8.277799999999863e-05, 8.358300000000166e-05, 8.36529999999995e-05, 8.288900000000265e-05, 8.298600000000017e-05, 8.34170000000023e-05, 8.308400000000063e-05, 8.322200000000085e-05, 8.304100000000245e-05, 8.295799999999756e-05, 8.273599999999992e-05, 8.312499999999987e-05, 8.359700000000123e-05, 8.320900000000075e-05, 8.330599999999827e-05, 8.351399999999981e-05, 8.324999999999999e-05, 8.331999999999784e-05, 8.290199999999928e-05, 8.290299999999876e-05, 8.288800000000318e-05, 8.323599999999695e-05, 8.306900000000159e-05, 8.276400000000253e-05, 8.322200000000085e-05, 8.304200000000192e-05, 8.27780000000021e-05, 8.290299999999876e-05, 8.29170000000018e-05, 8.29720000000006e-05, 8.308299999999769e-05, 8.323600000000042e-05, 8.322199999999391e-05, 8.334700000000445e-05, 8.322200000000085e-05, 8.347300000000057e-05, 8.279099999999873e-05, 8.304099999999898e-05, 8.344400000000196e-05, 8.308399999999716e-05, 8.352799999999938e-05, 8.359800000000417e-05, 8.365199999999656e-05, 8.301399999999931e-05, 8.343099999999493e-05, 8.291699999999486e-05, 8.298600000000017e-05, 8.3459000000001e-05]</msg>
<status status="PASS" starttime="20201030 18:28:15.942" endtime="20201030 18:28:15.945"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.938" endtime="20201030 18:28:15.945"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:15.949" endtime="20201030 18:28:15.968"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.947" endtime="20201030 18:28:15.969"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.946" endtime="20201030 18:28:15.969"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.579" endtime="20201030 18:28:15.969"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.578" endtime="20201030 18:28:15.969"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:15.978" endtime="20201030 18:28:15.997"></status>
</kw>
<msg timestamp="20201030 18:28:15.997" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:15.976" endtime="20201030 18:28:15.997"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:16.000" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:15.998" endtime="20201030 18:28:16.000"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:16.001" endtime="20201030 18:28:16.002"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.974" endtime="20201030 18:28:16.003"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.972" endtime="20201030 18:28:16.003"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:16.010" endtime="20201030 18:28:16.296"></status>
</kw>
<msg timestamp="20201030 18:28:16.300" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021402139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021487097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:16.008" endtime="20201030 18:28:16.300"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:16.308" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021402139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021487097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:16.301" endtime="20201030 18:28:16.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:16.309" endtime="20201030 18:28:16.310"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.006" endtime="20201030 18:28:16.311"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.004" endtime="20201030 18:28:16.311"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:16.315" level="INFO">${RESULT} = [{'diff': 8.495799999999956e-05}, {'diff': 8.440300000000026e-05}, {'diff': 8.384800000000095e-05}, {'diff': 8.440300000000026e-05}, {'diff': 8.427800000000013e-05}, {'diff': 8.465199999999756e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:16.312" endtime="20201030 18:28:16.316"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:16.319" level="INFO">${ACCURACY} = {'diff': [8.495799999999956e-05, 8.440300000000026e-05, 8.384800000000095e-05, 8.440300000000026e-05, 8.427800000000013e-05, 8.465199999999756e-05, 8.458400000000213e-05, 8.39590000000015e-05, 8.38470...</msg>
<status status="PASS" starttime="20201030 18:28:16.316" endtime="20201030 18:28:16.320"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:16.324" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201030 18:28:16.323" endtime="20201030 18:28:16.324"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:16.326" level="INFO">VALUE: [8.495799999999956e-05, 8.440300000000026e-05, 8.384800000000095e-05, 8.440300000000026e-05, 8.427800000000013e-05, 8.465199999999756e-05, 8.458400000000213e-05, 8.39590000000015e-05, 8.384700000000148e-05, 8.441600000000035e-05, 8.43330000000024e-05, 8.420799999999881e-05, 8.406899999999912e-05, 8.458299999999919e-05, 8.416699999999958e-05, 8.459699999999876e-05, 8.383299999999844e-05, 8.388900000000019e-05, 8.397199999999813e-05, 8.39729999999976e-05, 8.437500000000112e-05, 8.394399999999899e-05, 8.43469999999985e-05, 8.377799999999963e-05, 8.415199999999706e-05, 8.429100000000023e-05, 8.372200000000135e-05, 8.369400000000221e-05, 8.434700000000198e-05, 8.393100000000236e-05, 8.37919999999992e-05, 8.457000000000256e-05, 8.46249999999979e-05, 8.41660000000001e-05, 8.427700000000066e-05, 8.458299999999919e-05, 8.452800000000038e-05, 8.441699999999983e-05, 8.380599999999877e-05, 8.38330000000019e-05, 8.372299999999736e-05, 8.419399999999924e-05, 8.438900000000069e-05, 8.402799999999988e-05, 8.459700000000223e-05, 8.405599999999902e-05, 8.466700000000008e-05, 8.415200000000053e-05, 8.433299999999894e-05, 8.444499999999897e-05]</msg>
<status status="PASS" starttime="20201030 18:28:16.325" endtime="20201030 18:28:16.327"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.320" endtime="20201030 18:28:16.327"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:16.331" endtime="20201030 18:28:16.351"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.330" endtime="20201030 18:28:16.351"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.328" endtime="20201030 18:28:16.351"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.970" endtime="20201030 18:28:16.352"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.970" endtime="20201030 18:28:16.352"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:16.360" endtime="20201030 18:28:16.380"></status>
</kw>
<msg timestamp="20201030 18:28:16.381" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:16.359" endtime="20201030 18:28:16.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:16.384" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:16.382" endtime="20201030 18:28:16.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:16.385" endtime="20201030 18:28:16.386"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.356" endtime="20201030 18:28:16.387"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.354" endtime="20201030 18:28:16.388"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:16.394" endtime="20201030 18:28:16.680"></status>
</kw>
<msg timestamp="20201030 18:28:16.683" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022317361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022402819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:16.393" endtime="20201030 18:28:16.683"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:16.691" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022317361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022402819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:16.684" endtime="20201030 18:28:16.691"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:16.692" endtime="20201030 18:28:16.694"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.390" endtime="20201030 18:28:16.694"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.388" endtime="20201030 18:28:16.695"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:16.699" level="INFO">${RESULT} = [{'diff': 8.545800000000006e-05}, {'diff': 8.468099999999965e-05}, {'diff': 8.468000000000017e-05}, {'diff': 8.551400000000181e-05}, {'diff': 8.5153000000001e-05}, {'diff': 8.545800000000006e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:28:16.695" endtime="20201030 18:28:16.699"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:16.703" level="INFO">${ACCURACY} = {'diff': [8.545800000000006e-05, 8.468099999999965e-05, 8.468000000000017e-05, 8.551400000000181e-05, 8.5153000000001e-05, 8.545800000000006e-05, 8.502700000000141e-05, 8.556900000000062e-05, 8.512500...</msg>
<status status="PASS" starttime="20201030 18:28:16.699" endtime="20201030 18:28:16.703"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:16.707" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201030 18:28:16.706" endtime="20201030 18:28:16.707"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:16.709" level="INFO">VALUE: [8.545800000000006e-05, 8.468099999999965e-05, 8.468000000000017e-05, 8.551400000000181e-05, 8.5153000000001e-05, 8.545800000000006e-05, 8.502700000000141e-05, 8.556900000000062e-05, 8.512500000000187e-05, 8.522199999999938e-05, 8.53469999999995e-05, 8.559699999999976e-05, 8.53469999999995e-05, 8.5153000000001e-05, 8.522199999999938e-05, 8.527800000000113e-05, 8.497199999999913e-05, 8.52920000000007e-05, 8.488900000000119e-05, 8.476399999999759e-05, 8.544400000000049e-05, 8.555500000000105e-05, 8.506900000000012e-05, 8.555500000000105e-05, 8.555600000000052e-05, 8.502800000000088e-05, 8.470799999999931e-05, 8.527800000000113e-05, 8.497199999999913e-05, 8.475000000000149e-05, 8.508299999999969e-05, 8.476400000000106e-05, 8.516700000000058e-05, 8.488899999999772e-05, 8.483299999999944e-05, 8.534700000000298e-05, 8.469399999999974e-05, 8.540299999999779e-05, 8.472199999999888e-05, 8.545800000000006e-05, 8.470800000000278e-05, 8.545800000000006e-05, 8.530600000000027e-05, 8.557000000000009e-05, 8.49720000000026e-05, 8.513900000000144e-05, 8.504200000000045e-05, 8.533299999999994e-05, 8.487500000000162e-05, 8.565299999999804e-05]</msg>
<status status="PASS" starttime="20201030 18:28:16.708" endtime="20201030 18:28:16.715"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.703" endtime="20201030 18:28:16.715"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:16.719" endtime="20201030 18:28:16.738"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.718" endtime="20201030 18:28:16.739"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.716" endtime="20201030 18:28:16.739"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.353" endtime="20201030 18:28:16.740"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.352" endtime="20201030 18:28:16.740"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:16.748" endtime="20201030 18:28:16.767"></status>
</kw>
<msg timestamp="20201030 18:28:16.768" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:16.747" endtime="20201030 18:28:16.768"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:16.770" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:16.769" endtime="20201030 18:28:16.771"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:16.771" endtime="20201030 18:28:16.773"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.744" endtime="20201030 18:28:16.774"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.742" endtime="20201030 18:28:16.774"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:16.780" endtime="20201030 18:28:17.065"></status>
</kw>
<msg timestamp="20201030 18:28:17.068" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021537917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021624222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:16.779" endtime="20201030 18:28:17.068"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:17.076" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021537917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021624222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:17.069" endtime="20201030 18:28:17.077"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:17.077" endtime="20201030 18:28:17.079"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.776" endtime="20201030 18:28:17.080"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.775" endtime="20201030 18:28:17.080"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:17.084" level="INFO">${RESULT} = [{'diff': 8.630499999999833e-05}, {'diff': 8.642999999999845e-05}, {'diff': 8.645900000000054e-05}, {'diff': 8.658299999999772e-05}, {'diff': 8.594400000000099e-05}, {'diff': 8.570800000000031e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:17.081" endtime="20201030 18:28:17.084"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:17.089" level="INFO">${ACCURACY} = {'diff': [8.630499999999833e-05, 8.642999999999845e-05, 8.645900000000054e-05, 8.658299999999772e-05, 8.594400000000099e-05, 8.570800000000031e-05, 8.588899999999872e-05, 8.570799999999684e-05, 8.6153...</msg>
<status status="PASS" starttime="20201030 18:28:17.085" endtime="20201030 18:28:17.089"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:17.093" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201030 18:28:17.092" endtime="20201030 18:28:17.094"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:17.096" level="INFO">VALUE: [8.630499999999833e-05, 8.642999999999845e-05, 8.645900000000054e-05, 8.658299999999772e-05, 8.594400000000099e-05, 8.570800000000031e-05, 8.588899999999872e-05, 8.570799999999684e-05, 8.6153000000002e-05, 8.572199999999988e-05, 8.599999999999927e-05, 8.613899999999897e-05, 8.633299999999747e-05, 8.601399999999884e-05, 8.590200000000228e-05, 8.638899999999922e-05, 8.61249999999994e-05, 8.638899999999922e-05, 8.588899999999872e-05, 8.587499999999915e-05, 8.638899999999922e-05, 8.663900000000294e-05, 8.608300000000069e-05, 8.611099999999983e-05, 8.583300000000044e-05, 8.601400000000231e-05, 8.619400000000124e-05, 8.658300000000119e-05, 8.590299999999829e-05, 8.668000000000217e-05, 8.652699999999944e-05, 8.630499999999833e-05, 8.657000000000109e-05, 8.659699999999729e-05, 8.576399999999859e-05, 8.619399999999777e-05, 8.658299999999772e-05, 8.627799999999866e-05, 8.66249999999999e-05, 8.655499999999858e-05, 8.574999999999902e-05, 8.570800000000031e-05, 8.618100000000115e-05, 8.612500000000287e-05, 8.663899999999947e-05, 8.633299999999747e-05, 8.586099999999958e-05, 8.599999999999927e-05, 8.647199999999716e-05, 8.609700000000026e-05]</msg>
<status status="PASS" starttime="20201030 18:28:17.095" endtime="20201030 18:28:17.097"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.090" endtime="20201030 18:28:17.097"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:17.101" endtime="20201030 18:28:17.120"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.099" endtime="20201030 18:28:17.121"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.098" endtime="20201030 18:28:17.121"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.741" endtime="20201030 18:28:17.121"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.740" endtime="20201030 18:28:17.122"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:17.130" endtime="20201030 18:28:17.149"></status>
</kw>
<msg timestamp="20201030 18:28:17.150" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:17.129" endtime="20201030 18:28:17.150"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:17.152" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:17.151" endtime="20201030 18:28:17.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:17.153" endtime="20201030 18:28:17.155"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.126" endtime="20201030 18:28:17.155"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.124" endtime="20201030 18:28:17.156"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:17.162" endtime="20201030 18:28:17.449"></status>
</kw>
<msg timestamp="20201030 18:28:17.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021450819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021538167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:17.161" endtime="20201030 18:28:17.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:17.460" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021450819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021538167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:17.453" endtime="20201030 18:28:17.461"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:17.462" endtime="20201030 18:28:17.463"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.158" endtime="20201030 18:28:17.464"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.156" endtime="20201030 18:28:17.464"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:17.468" level="INFO">${RESULT} = [{'diff': 8.734800000000098e-05}, {'diff': 8.734699999999804e-05}, {'diff': 8.73189999999989e-05}, {'diff': 8.756899999999915e-05}, {'diff': 8.756999999999862e-05}, {'diff': 8.707000000000159e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:17.465" endtime="20201030 18:28:17.468"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:17.472" level="INFO">${ACCURACY} = {'diff': [8.734800000000098e-05, 8.734699999999804e-05, 8.73189999999989e-05, 8.756899999999915e-05, 8.756999999999862e-05, 8.707000000000159e-05, 8.666599999999913e-05, 8.748599999999773e-05, 8.68470...</msg>
<status status="PASS" starttime="20201030 18:28:17.469" endtime="20201030 18:28:17.472"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:17.476" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201030 18:28:17.475" endtime="20201030 18:28:17.477"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:17.479" level="INFO">VALUE: [8.734800000000098e-05, 8.734699999999804e-05, 8.73189999999989e-05, 8.756899999999915e-05, 8.756999999999862e-05, 8.707000000000159e-05, 8.666599999999913e-05, 8.748599999999773e-05, 8.6847000000001e-05, 8.750000000000077e-05, 8.683400000000091e-05, 8.726400000000009e-05, 8.713899999999997e-05, 8.677799999999916e-05, 8.738900000000022e-05, 8.683300000000144e-05, 8.751400000000034e-05, 8.695799999999809e-05, 8.687499999999668e-05, 8.762499999999743e-05, 8.683299999999797e-05, 8.69860000000007e-05, 8.669399999999827e-05, 8.700000000000027e-05, 8.757000000000209e-05, 8.745900000000154e-05, 8.727799999999966e-05, 8.726400000000009e-05, 8.691699999999886e-05, 8.688899999999972e-05, 8.68189999999984e-05, 8.720800000000181e-05, 8.748599999999773e-05, 8.69860000000007e-05, 8.726400000000009e-05, 8.752799999999991e-05, 8.669400000000174e-05, 8.715299999999954e-05, 8.687500000000015e-05, 8.737500000000065e-05, 8.757000000000209e-05, 8.73189999999989e-05, 8.719399999999877e-05, 8.720800000000181e-05, 8.750000000000077e-05, 8.740300000000326e-05, 8.705499999999908e-05, 8.729099999999976e-05, 8.745899999999807e-05, 8.695900000000104e-05]</msg>
<status status="PASS" starttime="20201030 18:28:17.478" endtime="20201030 18:28:17.480"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.473" endtime="20201030 18:28:17.480"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:17.484" endtime="20201030 18:28:17.503"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.482" endtime="20201030 18:28:17.504"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.481" endtime="20201030 18:28:17.504"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.122" endtime="20201030 18:28:17.504"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.122" endtime="20201030 18:28:17.505"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:17.513" endtime="20201030 18:28:17.533"></status>
</kw>
<msg timestamp="20201030 18:28:17.534" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:17.512" endtime="20201030 18:28:17.534"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:17.536" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:17.535" endtime="20201030 18:28:17.536"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:17.537" endtime="20201030 18:28:17.539"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.509" endtime="20201030 18:28:17.539"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.507" endtime="20201030 18:28:17.540"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:17.546" endtime="20201030 18:28:17.832"></status>
</kw>
<msg timestamp="20201030 18:28:17.835" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022540167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022628556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:17.545" endtime="20201030 18:28:17.835"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:17.843" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022540167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022628556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:17.836" endtime="20201030 18:28:17.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:17.844" endtime="20201030 18:28:17.846"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.542" endtime="20201030 18:28:17.847"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.540" endtime="20201030 18:28:17.847"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:17.851" level="INFO">${RESULT} = [{'diff': 8.838900000000122e-05}, {'diff': 8.786099999999811e-05}, {'diff': 8.863799999999852e-05}, {'diff': 8.769399999999927e-05}, {'diff': 8.787499999999768e-05}, {'diff': 8.833399999999894e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:17.848" endtime="20201030 18:28:17.851"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:17.855" level="INFO">${ACCURACY} = {'diff': [8.838900000000122e-05, 8.786099999999811e-05, 8.863799999999852e-05, 8.769399999999927e-05, 8.787499999999768e-05, 8.833399999999894e-05, 8.851400000000134e-05, 8.792999999999995e-05, 8.8263...</msg>
<status status="PASS" starttime="20201030 18:28:17.852" endtime="20201030 18:28:17.855"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:17.859" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201030 18:28:17.858" endtime="20201030 18:28:17.860"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:17.862" level="INFO">VALUE: [8.838900000000122e-05, 8.786099999999811e-05, 8.863799999999852e-05, 8.769399999999927e-05, 8.787499999999768e-05, 8.833399999999894e-05, 8.851400000000134e-05, 8.792999999999995e-05, 8.826399999999762e-05, 8.812499999999793e-05, 8.770799999999884e-05, 8.78189999999994e-05, 8.820800000000281e-05, 8.84999999999983e-05, 8.791600000000038e-05, 8.819399999999977e-05, 8.787500000000115e-05, 8.83189999999999e-05, 8.819499999999925e-05, 8.836200000000155e-05, 8.819399999999977e-05, 8.819399999999977e-05, 8.769499999999875e-05, 8.783400000000191e-05, 8.794399999999952e-05, 8.819399999999977e-05, 8.769400000000274e-05, 8.766600000000013e-05, 8.76669999999996e-05, 8.786099999999811e-05, 8.86800000000007e-05, 8.845800000000306e-05, 8.813900000000097e-05, 8.786099999999811e-05, 8.81800000000002e-05, 8.80129999999979e-05, 8.801400000000084e-05, 8.800000000000127e-05, 8.855500000000058e-05, 8.837499999999818e-05, 8.854200000000048e-05, 8.84999999999983e-05, 8.77920000000032e-05, 8.819399999999977e-05, 8.820799999999934e-05, 8.81250000000014e-05, 8.770900000000179e-05, 8.859699999999929e-05, 8.850000000000177e-05, 8.786099999999811e-05]</msg>
<status status="PASS" starttime="20201030 18:28:17.860" endtime="20201030 18:28:17.863"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.856" endtime="20201030 18:28:17.864"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:17.867" endtime="20201030 18:28:17.887"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.866" endtime="20201030 18:28:17.887"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.865" endtime="20201030 18:28:17.888"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.505" endtime="20201030 18:28:17.888"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.505" endtime="20201030 18:28:17.888"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:17.897" endtime="20201030 18:28:17.916"></status>
</kw>
<msg timestamp="20201030 18:28:17.917" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:17.896" endtime="20201030 18:28:17.917"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:17.919" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:17.918" endtime="20201030 18:28:17.919"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:17.920" endtime="20201030 18:28:17.922"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.893" endtime="20201030 18:28:17.922"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.891" endtime="20201030 18:28:17.923"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:17.929" endtime="20201030 18:28:18.215"></status>
</kw>
<msg timestamp="20201030 18:28:18.218" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02179375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021883306, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:28:17.928" endtime="20201030 18:28:18.218"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:18.226" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02179375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021883306, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:28:18.219" endtime="20201030 18:28:18.227"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:18.227" endtime="20201030 18:28:18.229"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.925" endtime="20201030 18:28:18.230"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.923" endtime="20201030 18:28:18.230"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:18.234" level="INFO">${RESULT} = [{'diff': 8.955600000000105e-05}, {'diff': 8.948599999999973e-05}, {'diff': 8.926399999999862e-05}, {'diff': 8.941599999999841e-05}, {'diff': 8.931899999999743e-05}, {'diff': 8.875000000000202e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:18.231" endtime="20201030 18:28:18.234"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:18.239" level="INFO">${ACCURACY} = {'diff': [8.955600000000105e-05, 8.948599999999973e-05, 8.926399999999862e-05, 8.941599999999841e-05, 8.931899999999743e-05, 8.875000000000202e-05, 8.918100000000068e-05, 8.8945e-05, 8.894399999999705...</msg>
<status status="PASS" starttime="20201030 18:28:18.235" endtime="20201030 18:28:18.239"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:18.243" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201030 18:28:18.242" endtime="20201030 18:28:18.244"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:18.246" level="INFO">VALUE: [8.955600000000105e-05, 8.948599999999973e-05, 8.926399999999862e-05, 8.941599999999841e-05, 8.931899999999743e-05, 8.875000000000202e-05, 8.918100000000068e-05, 8.8945e-05, 8.894399999999705e-05, 8.905600000000055e-05, 8.937499999999918e-05, 8.955600000000105e-05, 8.951399999999887e-05, 8.881999999999987e-05, 8.879200000000073e-05, 8.89999999999988e-05, 8.874999999999855e-05, 8.897200000000313e-05, 8.961099999999986e-05, 8.944400000000102e-05, 8.887500000000215e-05, 8.922199999999991e-05, 8.961099999999986e-05, 8.94999999999993e-05, 8.868100000000018e-05, 8.88060000000003e-05, 8.875000000000202e-05, 8.890299999999782e-05, 8.890299999999782e-05, 8.874999999999855e-05, 8.924999999999905e-05, 8.929099999999829e-05, 8.965300000000204e-05, 8.883399999999944e-05, 8.955599999999758e-05, 8.955599999999758e-05, 8.876399999999812e-05, 8.919500000000025e-05, 8.962499999999943e-05, 8.91389999999985e-05, 8.954099999999854e-05, 8.901300000000237e-05, 8.907000000000012e-05, 8.86939999999968e-05, 8.922299999999939e-05, 8.915200000000206e-05, 8.920800000000034e-05, 8.954099999999854e-05, 8.88190000000004e-05, 8.893100000000043e-05]</msg>
<status status="PASS" starttime="20201030 18:28:18.244" endtime="20201030 18:28:18.247"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.240" endtime="20201030 18:28:18.247"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:18.251" endtime="20201030 18:28:18.270"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.249" endtime="20201030 18:28:18.271"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.248" endtime="20201030 18:28:18.271"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.889" endtime="20201030 18:28:18.271"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.888" endtime="20201030 18:28:18.272"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:18.280" endtime="20201030 18:28:18.299"></status>
</kw>
<msg timestamp="20201030 18:28:18.300" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:18.279" endtime="20201030 18:28:18.300"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:18.302" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:18.301" endtime="20201030 18:28:18.303"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:18.303" endtime="20201030 18:28:18.305"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.276" endtime="20201030 18:28:18.305"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.274" endtime="20201030 18:28:18.306"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:18.312" endtime="20201030 18:28:18.600"></status>
</kw>
<msg timestamp="20201030 18:28:18.603" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021438597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021528653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:18.311" endtime="20201030 18:28:18.603"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:18.611" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021438597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021528653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:18.604" endtime="20201030 18:28:18.612"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:18.613" endtime="20201030 18:28:18.614"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.308" endtime="20201030 18:28:18.615"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.306" endtime="20201030 18:28:18.615"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:18.619" level="INFO">${RESULT} = [{'diff': 9.005599999999808e-05}, {'diff': 9.055599999999858e-05}, {'diff': 9.061100000000086e-05}, {'diff': 9.05000000000003e-05}, {'diff': 9.037500000000018e-05}, {'diff': 8.973599999999998e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:18.616" endtime="20201030 18:28:18.619"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:18.623" level="INFO">${ACCURACY} = {'diff': [9.005599999999808e-05, 9.055599999999858e-05, 9.061100000000086e-05, 9.05000000000003e-05, 9.037500000000018e-05, 8.973599999999998e-05, 8.99999999999998e-05, 9.055600000000205e-05, 9.004200...</msg>
<status status="PASS" starttime="20201030 18:28:18.620" endtime="20201030 18:28:18.623"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:18.627" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201030 18:28:18.626" endtime="20201030 18:28:18.628"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:18.630" level="INFO">VALUE: [9.005599999999808e-05, 9.055599999999858e-05, 9.061100000000086e-05, 9.05000000000003e-05, 9.037500000000018e-05, 8.973599999999998e-05, 8.99999999999998e-05, 9.055600000000205e-05, 9.004200000000198e-05, 8.998600000000023e-05, 8.984800000000001e-05, 8.991699999999839e-05, 8.993000000000195e-05, 9.034800000000051e-05, 9.022200000000091e-05, 8.963900000000247e-05, 9.058300000000172e-05, 9.05000000000003e-05, 8.987499999999968e-05, 9.05000000000003e-05, 8.973599999999998e-05, 9.005499999999861e-05, 8.993000000000195e-05, 8.969500000000075e-05, 9.055599999999858e-05, 9.05000000000003e-05, 9.029100000000276e-05, 9.030599999999833e-05, 9.055599999999858e-05, 8.974999999999955e-05, 9.044400000000202e-05, 9.061200000000033e-05, 9.045900000000107e-05, 9.01389999999995e-05, 8.987499999999968e-05, 9.05000000000003e-05, 9.062500000000043e-05, 8.986100000000011e-05, 9.062500000000043e-05, 9.029099999999929e-05, 8.965299999999857e-05, 8.98190000000014e-05, 9.043000000000245e-05, 9.009700000000079e-05, 9.054199999999901e-05, 9.023599999999701e-05, 9.026300000000015e-05, 9.061100000000086e-05, 9.002800000000241e-05, 9.029200000000223e-05]</msg>
<status status="PASS" starttime="20201030 18:28:18.628" endtime="20201030 18:28:18.631"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.624" endtime="20201030 18:28:18.631"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:18.635" endtime="20201030 18:28:18.654"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.633" endtime="20201030 18:28:18.655"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.632" endtime="20201030 18:28:18.655"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.272" endtime="20201030 18:28:18.655"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.272" endtime="20201030 18:28:18.655"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:18.664" endtime="20201030 18:28:18.684"></status>
</kw>
<msg timestamp="20201030 18:28:18.685" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:18.663" endtime="20201030 18:28:18.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:18.687" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:18.686" endtime="20201030 18:28:18.688"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:18.688" endtime="20201030 18:28:18.690"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.660" endtime="20201030 18:28:18.690"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.658" endtime="20201030 18:28:18.691"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:18.697" endtime="20201030 18:28:18.982"></status>
</kw>
<msg timestamp="20201030 18:28:18.986" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022481167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022572403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:18.696" endtime="20201030 18:28:18.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:18.994" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022481167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022572403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:18.987" endtime="20201030 18:28:18.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:18.995" endtime="20201030 18:28:18.997"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.693" endtime="20201030 18:28:18.997"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.691" endtime="20201030 18:28:18.998"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:19.002" level="INFO">${RESULT} = [{'diff': 9.123600000000148e-05}, {'diff': 9.068100000000218e-05}, {'diff': 9.077799999999969e-05}, {'diff': 9.11939999999993e-05}, {'diff': 9.087500000000068e-05}, {'diff': 9.159699999999882e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:18.998" endtime="20201030 18:28:19.002"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:19.006" level="INFO">${ACCURACY} = {'diff': [9.123600000000148e-05, 9.068100000000218e-05, 9.077799999999969e-05, 9.11939999999993e-05, 9.087500000000068e-05, 9.159699999999882e-05, 9.073599999999751e-05, 9.137499999999771e-05, 9.15000...</msg>
<status status="PASS" starttime="20201030 18:28:19.003" endtime="20201030 18:28:19.006"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:19.010" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201030 18:28:19.009" endtime="20201030 18:28:19.010"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:19.012" level="INFO">VALUE: [9.123600000000148e-05, 9.068100000000218e-05, 9.077799999999969e-05, 9.11939999999993e-05, 9.087500000000068e-05, 9.159699999999882e-05, 9.073599999999751e-05, 9.137499999999771e-05, 9.15000000000013e-05, 9.06670000000026e-05, 9.154200000000001e-05, 9.162500000000143e-05, 9.148599999999826e-05, 9.074999999999708e-05, 9.151400000000087e-05, 9.102799999999994e-05, 9.137499999999771e-05, 9.083300000000197e-05, 9.116600000000016e-05, 9.083300000000197e-05, 9.11520000000006e-05, 9.148600000000173e-05, 9.137500000000118e-05, 9.163899999999753e-05, 9.080499999999936e-05, 9.155500000000011e-05, 9.14719999999987e-05, 9.143099999999946e-05, 9.108399999999822e-05, 9.148599999999826e-05, 9.133300000000247e-05, 9.130499999999986e-05, 9.073600000000098e-05, 9.134700000000204e-05, 9.156999999999915e-05, 9.086200000000058e-05, 9.15000000000013e-05, 9.126399999999715e-05, 9.101400000000037e-05, 9.129199999999976e-05, 9.081899999999893e-05, 9.116699999999964e-05, 9.06939999999988e-05, 9.156900000000315e-05, 9.069400000000227e-05, 9.117999999999973e-05, 9.130599999999933e-05, 9.155599999999958e-05, 9.087500000000068e-05, 9.13199999999989e-05]</msg>
<status status="PASS" starttime="20201030 18:28:19.011" endtime="20201030 18:28:19.014"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.006" endtime="20201030 18:28:19.014"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:19.018" endtime="20201030 18:28:19.037"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.017" endtime="20201030 18:28:19.038"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.015" endtime="20201030 18:28:19.038"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.656" endtime="20201030 18:28:19.039"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.656" endtime="20201030 18:28:19.039"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:19.048" endtime="20201030 18:28:19.067"></status>
</kw>
<msg timestamp="20201030 18:28:19.067" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:19.046" endtime="20201030 18:28:19.068"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:19.070" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:19.068" endtime="20201030 18:28:19.070"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:19.071" endtime="20201030 18:28:19.073"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.043" endtime="20201030 18:28:19.073"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.041" endtime="20201030 18:28:19.074"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:19.080" endtime="20201030 18:28:19.365"></status>
</kw>
<msg timestamp="20201030 18:28:19.368" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021627431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02172, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201030 18:28:19.078" endtime="20201030 18:28:19.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:19.376" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021627431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02172, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201030 18:28:19.369" endtime="20201030 18:28:19.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:19.377" endtime="20201030 18:28:19.379"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.076" endtime="20201030 18:28:19.379"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.074" endtime="20201030 18:28:19.379"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:19.383" level="INFO">${RESULT} = [{'diff': 9.256900000000068e-05}, {'diff': 9.193099999999996e-05}, {'diff': 9.18199999999994e-05}, {'diff': 9.255600000000058e-05}, {'diff': 9.205500000000061e-05}, {'diff': 9.254100000000154e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:19.380" endtime="20201030 18:28:19.384"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:19.391" level="INFO">${ACCURACY} = {'diff': [9.256900000000068e-05, 9.193099999999996e-05, 9.18199999999994e-05, 9.255600000000058e-05, 9.205500000000061e-05, 9.254100000000154e-05, 9.244500000000003e-05, 9.219499999999978e-05, 9.18329...</msg>
<status status="PASS" starttime="20201030 18:28:19.384" endtime="20201030 18:28:19.391"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:19.395" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201030 18:28:19.394" endtime="20201030 18:28:19.396"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:19.398" level="INFO">VALUE: [9.256900000000068e-05, 9.193099999999996e-05, 9.18199999999994e-05, 9.255600000000058e-05, 9.205500000000061e-05, 9.254100000000154e-05, 9.244500000000003e-05, 9.219499999999978e-05, 9.18329999999995e-05, 9.197200000000266e-05, 9.227800000000119e-05, 9.216700000000064e-05, 9.262499999999896e-05, 9.238900000000175e-05, 9.175000000000155e-05, 9.18199999999994e-05, 9.194499999999953e-05, 9.237499999999871e-05, 9.186100000000211e-05, 9.226399999999815e-05, 9.236099999999914e-05, 9.191700000000039e-05, 9.208399999999922e-05, 9.222200000000291e-05, 9.25139999999984e-05, 9.244400000000055e-05, 9.187499999999821e-05, 9.251299999999893e-05, 9.261099999999939e-05, 9.172299999999842e-05, 9.231900000000043e-05, 9.172200000000241e-05, 9.237500000000218e-05, 9.249999999999883e-05, 9.186099999999864e-05, 9.252799999999797e-05, 9.188900000000125e-05, 9.194400000000005e-05, 9.238899999999828e-05, 9.258300000000025e-05, 9.18329999999995e-05, 9.236099999999914e-05, 9.258299999999678e-05, 9.21520000000016e-05, 9.168099999999971e-05, 9.268099999999724e-05, 9.190200000000134e-05, 9.184800000000201e-05, 9.256900000000068e-05, 9.26940000000008e-05]</msg>
<status status="PASS" starttime="20201030 18:28:19.396" endtime="20201030 18:28:19.399"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.392" endtime="20201030 18:28:19.399"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:19.403" endtime="20201030 18:28:19.422"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.401" endtime="20201030 18:28:19.423"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.400" endtime="20201030 18:28:19.423"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.040" endtime="20201030 18:28:19.424"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.039" endtime="20201030 18:28:19.424"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:19.433" endtime="20201030 18:28:19.453"></status>
</kw>
<msg timestamp="20201030 18:28:19.453" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:19.432" endtime="20201030 18:28:19.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:19.455" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:19.454" endtime="20201030 18:28:19.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:19.457" endtime="20201030 18:28:19.458"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.429" endtime="20201030 18:28:19.459"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.426" endtime="20201030 18:28:19.459"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:19.465" endtime="20201030 18:28:19.754"></status>
</kw>
<msg timestamp="20201030 18:28:19.757" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022507875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022601444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:19.464" endtime="20201030 18:28:19.757"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:19.765" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022507875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022601444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:19.758" endtime="20201030 18:28:19.766"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:19.766" endtime="20201030 18:28:19.768"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.461" endtime="20201030 18:28:19.768"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.460" endtime="20201030 18:28:19.769"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:19.773" level="INFO">${RESULT} = [{'diff': 9.356899999999821e-05}, {'diff': 9.362499999999996e-05}, {'diff': 9.358299999999778e-05}, {'diff': 9.281900000000093e-05}, {'diff': 9.361199999999986e-05}, {'diff': 9.323600000000001e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:19.770" endtime="20201030 18:28:19.773"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:19.777" level="INFO">${ACCURACY} = {'diff': [9.356899999999821e-05, 9.362499999999996e-05, 9.358299999999778e-05, 9.281900000000093e-05, 9.361199999999986e-05, 9.323600000000001e-05, 9.343000000000198e-05, 9.336100000000014e-05, 9.2860...</msg>
<status status="PASS" starttime="20201030 18:28:19.774" endtime="20201030 18:28:19.777"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:19.781" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201030 18:28:19.780" endtime="20201030 18:28:19.782"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:19.784" level="INFO">VALUE: [9.356899999999821e-05, 9.362499999999996e-05, 9.358299999999778e-05, 9.281900000000093e-05, 9.361199999999986e-05, 9.323600000000001e-05, 9.343000000000198e-05, 9.336100000000014e-05, 9.286099999999964e-05, 9.313899999999903e-05, 9.34720000000007e-05, 9.306999999999718e-05, 9.348600000000026e-05, 9.327799999999872e-05, 9.287499999999921e-05, 9.312499999999946e-05, 9.331899999999796e-05, 9.274999999999908e-05, 9.349999999999983e-05, 9.294500000000053e-05, 9.30139999999989e-05, 9.276399999999865e-05, 9.277800000000169e-05, 9.324999999999958e-05, 9.319399999999783e-05, 9.344399999999808e-05, 9.311099999999989e-05, 9.369399999999833e-05, 9.349999999999983e-05, 9.269500000000028e-05, 9.324999999999958e-05, 9.292999999999801e-05, 9.343000000000198e-05, 9.330599999999786e-05, 9.329099999999882e-05, 9.327800000000219e-05, 9.268100000000071e-05, 9.333400000000047e-05, 9.272299999999942e-05, 9.26940000000008e-05, 9.347199999999722e-05, 9.298599999999976e-05, 9.286099999999964e-05, 9.324999999999958e-05, 9.299999999999933e-05, 9.274999999999908e-05, 9.351299999999993e-05, 9.287499999999921e-05, 9.355600000000158e-05, 9.348600000000026e-05]</msg>
<status status="PASS" starttime="20201030 18:28:19.782" endtime="20201030 18:28:19.784"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.778" endtime="20201030 18:28:19.785"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:19.789" endtime="20201030 18:28:19.808"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.787" endtime="20201030 18:28:19.809"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.786" endtime="20201030 18:28:19.809"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.425" endtime="20201030 18:28:19.809"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.424" endtime="20201030 18:28:19.809"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:19.818" endtime="20201030 18:28:19.838"></status>
</kw>
<msg timestamp="20201030 18:28:19.839" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:19.816" endtime="20201030 18:28:19.839"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:19.841" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:19.840" endtime="20201030 18:28:19.841"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:19.842" endtime="20201030 18:28:19.844"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.814" endtime="20201030 18:28:19.844"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.812" endtime="20201030 18:28:19.845"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:19.851" endtime="20201030 18:28:20.137"></status>
</kw>
<msg timestamp="20201030 18:28:20.140" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022301639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022395722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:19.850" endtime="20201030 18:28:20.140"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:20.148" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022301639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022395722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:20.141" endtime="20201030 18:28:20.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:20.150" endtime="20201030 18:28:20.151"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.847" endtime="20201030 18:28:20.152"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.845" endtime="20201030 18:28:20.152"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:20.156" level="INFO">${RESULT} = [{'diff': 9.408299999999828e-05}, {'diff': 9.418099999999874e-05}, {'diff': 9.373600000000051e-05}, {'diff': 9.461100000000139e-05}, {'diff': 9.426400000000015e-05}, {'diff': 9.368099999999824e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:20.153" endtime="20201030 18:28:20.156"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:20.160" level="INFO">${ACCURACY} = {'diff': [9.408299999999828e-05, 9.418099999999874e-05, 9.373600000000051e-05, 9.461100000000139e-05, 9.426400000000015e-05, 9.368099999999824e-05, 9.413900000000003e-05, 9.379199999999879e-05, 9.3680...</msg>
<status status="PASS" starttime="20201030 18:28:20.157" endtime="20201030 18:28:20.160"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:20.164" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201030 18:28:20.163" endtime="20201030 18:28:20.165"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:20.167" level="INFO">VALUE: [9.408299999999828e-05, 9.418099999999874e-05, 9.373600000000051e-05, 9.461100000000139e-05, 9.426400000000015e-05, 9.368099999999824e-05, 9.413900000000003e-05, 9.379199999999879e-05, 9.368000000000223e-05, 9.404099999999957e-05, 9.441699999999942e-05, 9.381999999999793e-05, 9.434800000000104e-05, 9.45140000000004e-05, 9.462500000000096e-05, 9.373600000000051e-05, 9.376399999999965e-05, 9.400000000000033e-05, 9.440200000000037e-05, 9.39859999999973e-05, 9.448600000000126e-05, 9.400000000000033e-05, 9.373600000000051e-05, 9.416699999999917e-05, 9.38330000000015e-05, 9.444399999999908e-05, 9.440299999999985e-05, 9.409699999999785e-05, 9.443100000000246e-05, 9.383400000000097e-05, 9.379099999999932e-05, 9.386200000000011e-05, 9.368099999999824e-05, 9.370800000000137e-05, 9.380600000000183e-05, 9.391699999999892e-05, 9.422300000000092e-05, 9.416700000000264e-05, 9.368099999999824e-05, 9.429200000000276e-05, 9.384700000000107e-05, 9.454199999999954e-05, 9.437500000000071e-05, 9.411100000000089e-05, 9.394500000000153e-05, 9.379099999999932e-05, 9.411100000000089e-05, 9.434700000000157e-05, 9.398600000000076e-05, 9.375000000000008e-05]</msg>
<status status="PASS" starttime="20201030 18:28:20.165" endtime="20201030 18:28:20.168"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.161" endtime="20201030 18:28:20.169"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:20.173" endtime="20201030 18:28:20.192"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.171" endtime="20201030 18:28:20.193"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.170" endtime="20201030 18:28:20.193"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.810" endtime="20201030 18:28:20.193"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.810" endtime="20201030 18:28:20.193"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:20.202" endtime="20201030 18:28:20.221"></status>
</kw>
<msg timestamp="20201030 18:28:20.222" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:20.200" endtime="20201030 18:28:20.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:20.224" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:20.223" endtime="20201030 18:28:20.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:20.225" endtime="20201030 18:28:20.227"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.198" endtime="20201030 18:28:20.228"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.196" endtime="20201030 18:28:20.228"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:20.234" endtime="20201030 18:28:20.521"></status>
</kw>
<msg timestamp="20201030 18:28:20.524" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021551819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021647681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:20.233" endtime="20201030 18:28:20.524"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:20.532" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021551819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021647681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:20.525" endtime="20201030 18:28:20.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:20.533" endtime="20201030 18:28:20.535"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.230" endtime="20201030 18:28:20.535"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.229" endtime="20201030 18:28:20.535"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:20.539" level="INFO">${RESULT} = [{'diff': 9.586199999999864e-05}, {'diff': 9.518000000000026e-05}, {'diff': 9.51660000000007e-05}, {'diff': 9.511100000000189e-05}, {'diff': 9.480599999999936e-05}, {'diff': 9.490200000000087e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:20.536" endtime="20201030 18:28:20.539"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:20.544" level="INFO">${ACCURACY} = {'diff': [9.586199999999864e-05, 9.518000000000026e-05, 9.51660000000007e-05, 9.511100000000189e-05, 9.480599999999936e-05, 9.490200000000087e-05, 9.547199999999922e-05, 9.477800000000022e-05, 9.52500...</msg>
<status status="PASS" starttime="20201030 18:28:20.540" endtime="20201030 18:28:20.544"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:20.549" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201030 18:28:20.548" endtime="20201030 18:28:20.549"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:20.551" level="INFO">VALUE: [9.586199999999864e-05, 9.518000000000026e-05, 9.51660000000007e-05, 9.511100000000189e-05, 9.480599999999936e-05, 9.490200000000087e-05, 9.547199999999922e-05, 9.477800000000022e-05, 9.525000000000158e-05, 9.483400000000197e-05, 9.519399999999983e-05, 9.491600000000044e-05, 9.477800000000022e-05, 9.466699999999967e-05, 9.54720000000027e-05, 9.54859999999988e-05, 9.470899999999838e-05, 9.509699999999885e-05, 9.490200000000087e-05, 9.479199999999979e-05, 9.491699999999992e-05, 9.491699999999992e-05, 9.555600000000011e-05, 9.543000000000051e-05, 9.523700000000149e-05, 9.554200000000054e-05, 9.534700000000257e-05, 9.493099999999949e-05, 9.552800000000097e-05, 9.527800000000072e-05, 9.51530000000006e-05, 9.483299999999903e-05, 9.473700000000099e-05, 9.538900000000128e-05, 9.472300000000142e-05, 9.491699999999992e-05, 9.533299999999953e-05, 9.52079999999994e-05, 9.474999999999761e-05, 9.516599999999723e-05, 9.530599999999986e-05, 9.473700000000099e-05, 9.55279999999975e-05, 9.54859999999988e-05, 9.479100000000032e-05, 9.54859999999988e-05, 9.53469999999991e-05, 9.556900000000021e-05, 9.46530000000001e-05, 9.526300000000168e-05]</msg>
<status status="PASS" starttime="20201030 18:28:20.550" endtime="20201030 18:28:20.552"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.545" endtime="20201030 18:28:20.553"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:20.556" endtime="20201030 18:28:20.576"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.555" endtime="20201030 18:28:20.576"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.554" endtime="20201030 18:28:20.576"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.194" endtime="20201030 18:28:20.577"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.194" endtime="20201030 18:28:20.577"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:20.585" endtime="20201030 18:28:20.605"></status>
</kw>
<msg timestamp="20201030 18:28:20.605" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:20.584" endtime="20201030 18:28:20.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:20.608" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:20.607" endtime="20201030 18:28:20.608"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:20.609" endtime="20201030 18:28:20.611"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.581" endtime="20201030 18:28:20.611"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.579" endtime="20201030 18:28:20.612"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:20.618" endtime="20201030 18:28:20.904"></status>
</kw>
<msg timestamp="20201030 18:28:20.908" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021400486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021496653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:20.616" endtime="20201030 18:28:20.908"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:20.916" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021400486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021496653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:20.909" endtime="20201030 18:28:20.916"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:20.917" endtime="20201030 18:28:20.919"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.614" endtime="20201030 18:28:20.919"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.612" endtime="20201030 18:28:20.919"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:20.923" level="INFO">${RESULT} = [{'diff': 9.616700000000117e-05}, {'diff': 9.609799999999932e-05}, {'diff': 9.61799999999978e-05}, {'diff': 9.655500000000164e-05}, {'diff': 9.611099999999942e-05}, {'diff': 9.647200000000022e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:20.920" endtime="20201030 18:28:20.924"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:20.927" level="INFO">${ACCURACY} = {'diff': [9.616700000000117e-05, 9.609799999999932e-05, 9.61799999999978e-05, 9.655500000000164e-05, 9.611099999999942e-05, 9.647200000000022e-05, 9.562499999999849e-05, 9.659799999999982e-05, 9.60560...</msg>
<status status="PASS" starttime="20201030 18:28:20.924" endtime="20201030 18:28:20.928"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:20.932" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201030 18:28:20.931" endtime="20201030 18:28:20.932"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:20.934" level="INFO">VALUE: [9.616700000000117e-05, 9.609799999999932e-05, 9.61799999999978e-05, 9.655500000000164e-05, 9.611099999999942e-05, 9.647200000000022e-05, 9.562499999999849e-05, 9.659799999999982e-05, 9.605600000000061e-05, 9.633300000000053e-05, 9.643000000000151e-05, 9.569499999999981e-05, 9.601299999999896e-05, 9.586099999999917e-05, 9.586099999999917e-05, 9.618100000000074e-05, 9.580600000000036e-05, 9.58469999999996e-05, 9.579200000000079e-05, 9.613899999999856e-05, 9.623599999999954e-05, 9.619400000000083e-05, 9.61799999999978e-05, 9.605600000000061e-05, 9.623599999999954e-05, 9.624999999999911e-05, 9.618000000000126e-05, 9.64019999999989e-05, 9.641700000000142e-05, 9.640300000000185e-05, 9.587500000000221e-05, 9.623599999999954e-05, 9.658300000000078e-05, 9.661099999999992e-05, 9.64859999999998e-05, 9.579200000000079e-05, 9.647200000000022e-05, 9.637499999999924e-05, 9.64859999999998e-05, 9.580500000000089e-05, 9.598699999999877e-05, 9.616700000000117e-05, 9.591700000000092e-05, 9.59859999999993e-05, 9.631900000000096e-05, 9.644500000000056e-05, 9.568100000000024e-05, 9.607000000000018e-05, 9.641600000000194e-05, 9.655600000000111e-05]</msg>
<status status="PASS" starttime="20201030 18:28:20.933" endtime="20201030 18:28:20.935"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.928" endtime="20201030 18:28:20.936"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:20.939" endtime="20201030 18:28:20.958"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.938" endtime="20201030 18:28:20.959"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.936" endtime="20201030 18:28:20.959"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.578" endtime="20201030 18:28:20.960"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.577" endtime="20201030 18:28:20.960"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:20.968" endtime="20201030 18:28:20.989"></status>
</kw>
<msg timestamp="20201030 18:28:20.989" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:20.967" endtime="20201030 18:28:20.990"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:20.992" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:20.991" endtime="20201030 18:28:20.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:20.993" endtime="20201030 18:28:20.995"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.964" endtime="20201030 18:28:20.995"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.962" endtime="20201030 18:28:20.996"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:21.002" endtime="20201030 18:28:21.288"></status>
</kw>
<msg timestamp="20201030 18:28:21.292" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022372375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022469611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:21.001" endtime="20201030 18:28:21.292"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:21.300" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022372375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022469611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:21.293" endtime="20201030 18:28:21.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:21.301" endtime="20201030 18:28:21.303"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.998" endtime="20201030 18:28:21.303"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.996" endtime="20201030 18:28:21.304"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:21.307" level="INFO">${RESULT} = [{'diff': 9.723600000000054e-05}, {'diff': 9.719400000000183e-05}, {'diff': 9.709700000000085e-05}, {'diff': 9.754199999999907e-05}, {'diff': 9.679199999999832e-05}, {'diff': 9.720900000000088e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:21.304" endtime="20201030 18:28:21.308"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:21.312" level="INFO">${ACCURACY} = {'diff': [9.723600000000054e-05, 9.719400000000183e-05, 9.709700000000085e-05, 9.754199999999907e-05, 9.679199999999832e-05, 9.720900000000088e-05, 9.75279999999995e-05, 9.672200000000047e-05, 9.66939...</msg>
<status status="PASS" starttime="20201030 18:28:21.308" endtime="20201030 18:28:21.312"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:21.316" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201030 18:28:21.315" endtime="20201030 18:28:21.316"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:21.318" level="INFO">VALUE: [9.723600000000054e-05, 9.719400000000183e-05, 9.709700000000085e-05, 9.754199999999907e-05, 9.679199999999832e-05, 9.720900000000088e-05, 9.75279999999995e-05, 9.672200000000047e-05, 9.669399999999786e-05, 9.687499999999974e-05, 9.686100000000017e-05, 9.712499999999999e-05, 9.686100000000017e-05, 9.690300000000235e-05, 9.756899999999874e-05, 9.677800000000222e-05, 9.687499999999974e-05, 9.752800000000297e-05, 9.743100000000199e-05, 9.743000000000251e-05, 9.763800000000059e-05, 9.697199999999725e-05, 9.693100000000149e-05, 9.741599999999948e-05, 9.71799999999988e-05, 9.702699999999953e-05, 9.661099999999992e-05, 9.725000000000011e-05, 9.71530000000026e-05, 9.71530000000026e-05, 9.709800000000032e-05, 9.68470000000006e-05, 9.758399999999778e-05, 9.69860000000003e-05, 9.676399999999918e-05, 9.755599999999864e-05, 9.742999999999905e-05, 9.747199999999775e-05, 9.69860000000003e-05, 9.688899999999931e-05, 9.672299999999995e-05, 9.691700000000192e-05, 9.687499999999974e-05, 9.730499999999892e-05, 9.743099999999852e-05, 9.758300000000178e-05, 9.759700000000135e-05, 9.745800000000165e-05, 9.677800000000222e-05, 9.73470000000011e-05]</msg>
<status status="PASS" starttime="20201030 18:28:21.317" endtime="20201030 18:28:21.320"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.312" endtime="20201030 18:28:21.321"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:21.324" endtime="20201030 18:28:21.344"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.323" endtime="20201030 18:28:21.344"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.322" endtime="20201030 18:28:21.344"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.961" endtime="20201030 18:28:21.345"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.960" endtime="20201030 18:28:21.345"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:21.354" endtime="20201030 18:28:21.373"></status>
</kw>
<msg timestamp="20201030 18:28:21.374" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:21.352" endtime="20201030 18:28:21.374"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:21.376" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:21.375" endtime="20201030 18:28:21.377"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:21.377" endtime="20201030 18:28:21.379"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.349" endtime="20201030 18:28:21.379"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.347" endtime="20201030 18:28:21.380"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:21.386" endtime="20201030 18:28:21.671"></status>
</kw>
<msg timestamp="20201030 18:28:21.674" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021645236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021743292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:21.385" endtime="20201030 18:28:21.675"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:21.682" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021645236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021743292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:21.675" endtime="20201030 18:28:21.683"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:21.683" endtime="20201030 18:28:21.685"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.382" endtime="20201030 18:28:21.686"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.380" endtime="20201030 18:28:21.686"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:21.690" level="INFO">${RESULT} = [{'diff': 9.805599999999914e-05}, {'diff': 9.768100000000224e-05}, {'diff': 9.768100000000224e-05}, {'diff': 9.854099999999713e-05}, {'diff': 9.801400000000043e-05}, {'diff': 9.811099999999795e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:21.687" endtime="20201030 18:28:21.690"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:21.695" level="INFO">${ACCURACY} = {'diff': [9.805599999999914e-05, 9.768100000000224e-05, 9.768100000000224e-05, 9.854099999999713e-05, 9.801400000000043e-05, 9.811099999999795e-05, 9.845799999999919e-05, 9.854200000000007e-05, 9.7860...</msg>
<status status="PASS" starttime="20201030 18:28:21.691" endtime="20201030 18:28:21.695"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:21.699" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201030 18:28:21.698" endtime="20201030 18:28:21.700"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:21.702" level="INFO">VALUE: [9.805599999999914e-05, 9.768100000000224e-05, 9.768100000000224e-05, 9.854099999999713e-05, 9.801400000000043e-05, 9.811099999999795e-05, 9.845799999999919e-05, 9.854200000000007e-05, 9.78609999999977e-05, 9.80410000000001e-05, 9.784699999999813e-05, 9.804199999999957e-05, 9.790299999999988e-05, 9.786100000000117e-05, 9.791599999999998e-05, 9.79860000000013e-05, 9.812500000000099e-05, 9.790299999999988e-05, 9.76530000000031e-05, 9.845799999999919e-05, 9.811100000000142e-05, 9.813899999999709e-05, 9.813900000000056e-05, 9.854200000000007e-05, 9.815300000000013e-05, 9.833299999999906e-05, 9.765299999999963e-05, 9.8028e-05, 9.815199999999719e-05, 9.794500000000206e-05, 9.85410000000006e-05, 9.833399999999853e-05, 9.823599999999807e-05, 9.823600000000154e-05, 9.823599999999807e-05, 9.829100000000035e-05, 9.811100000000142e-05, 9.806999999999871e-05, 9.78470000000016e-05, 9.777799999999975e-05, 9.7721999999998e-05, 9.773600000000104e-05, 9.773600000000104e-05, 9.858299999999931e-05, 9.809700000000185e-05, 9.770799999999843e-05, 9.79860000000013e-05, 9.762500000000049e-05, 9.78609999999977e-05, 9.765299999999963e-05]</msg>
<status status="PASS" starttime="20201030 18:28:21.700" endtime="20201030 18:28:21.703"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.696" endtime="20201030 18:28:21.703"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:21.707" endtime="20201030 18:28:21.726"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.705" endtime="20201030 18:28:21.727"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.704" endtime="20201030 18:28:21.727"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.346" endtime="20201030 18:28:21.727"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.345" endtime="20201030 18:28:21.727"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:21.736" endtime="20201030 18:28:21.756"></status>
</kw>
<msg timestamp="20201030 18:28:21.756" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:21.735" endtime="20201030 18:28:21.756"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:21.759" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:21.757" endtime="20201030 18:28:21.759"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:21.760" endtime="20201030 18:28:21.761"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.732" endtime="20201030 18:28:21.762"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.730" endtime="20201030 18:28:21.762"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:21.769" endtime="20201030 18:28:22.055"></status>
</kw>
<msg timestamp="20201030 18:28:22.058" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021459375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021559278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:21.767" endtime="20201030 18:28:22.058"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:22.066" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021459375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021559278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:22.059" endtime="20201030 18:28:22.067"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:22.067" endtime="20201030 18:28:22.069"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.765" endtime="20201030 18:28:22.070"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.763" endtime="20201030 18:28:22.070"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:22.074" level="INFO">${RESULT} = [{'diff': 9.990300000000188e-05}, {'diff': 9.944400000000062e-05}, {'diff': 9.947199999999976e-05}, {'diff': 9.887499999999827e-05}, {'diff': 9.933300000000006e-05}, {'diff': 9.8721999999999e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:28:22.071" endtime="20201030 18:28:22.074"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:22.078" level="INFO">${ACCURACY} = {'diff': [9.990300000000188e-05, 9.944400000000062e-05, 9.947199999999976e-05, 9.887499999999827e-05, 9.933300000000006e-05, 9.8721999999999e-05, 9.895899999999916e-05, 9.881899999999999e-05, 9.909699...</msg>
<status status="PASS" starttime="20201030 18:28:22.075" endtime="20201030 18:28:22.078"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:22.082" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201030 18:28:22.081" endtime="20201030 18:28:22.083"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:22.085" level="INFO">VALUE: [9.990300000000188e-05, 9.944400000000062e-05, 9.947199999999976e-05, 9.887499999999827e-05, 9.933300000000006e-05, 9.8721999999999e-05, 9.895899999999916e-05, 9.881899999999999e-05, 9.909699999999938e-05, 9.915200000000166e-05, 9.944500000000009e-05, 9.902700000000153e-05, 9.898599999999882e-05, 9.926399999999821e-05, 9.884699999999913e-05, 9.93609999999992e-05, 9.952699999999856e-05, 9.895899999999916e-05, 9.959699999999988e-05, 9.873600000000204e-05, 9.886100000000217e-05, 9.887500000000174e-05, 9.888799999999837e-05, 9.958399999999978e-05, 9.897199999999926e-05, 9.958399999999978e-05, 9.915300000000113e-05, 9.905500000000067e-05, 9.927800000000125e-05, 9.941700000000095e-05, 9.929200000000082e-05, 9.890300000000088e-05, 9.9028000000001e-05, 9.877700000000128e-05, 9.952799999999803e-05, 9.92219999999995e-05, 9.93609999999992e-05, 9.897200000000272e-05, 9.911099999999895e-05, 9.956900000000074e-05, 9.904200000000057e-05, 9.902799999999753e-05, 9.9028000000001e-05, 9.95280000000015e-05, 9.876400000000118e-05, 9.93470000000031e-05, 9.863900000000106e-05, 9.927699999999831e-05, 9.890300000000088e-05, 9.87080000000029e-05]</msg>
<status status="PASS" starttime="20201030 18:28:22.083" endtime="20201030 18:28:22.089"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.079" endtime="20201030 18:28:22.090"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:22.093" endtime="20201030 18:28:22.113"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.092" endtime="20201030 18:28:22.114"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.091" endtime="20201030 18:28:22.114"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.728" endtime="20201030 18:28:22.114"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.728" endtime="20201030 18:28:22.114"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:22.123" endtime="20201030 18:28:22.144"></status>
</kw>
<msg timestamp="20201030 18:28:22.144" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:22.121" endtime="20201030 18:28:22.144"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:22.146" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:22.145" endtime="20201030 18:28:22.147"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:22.147" endtime="20201030 18:28:22.149"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.119" endtime="20201030 18:28:22.150"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.117" endtime="20201030 18:28:22.150"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:22.157" endtime="20201030 18:28:22.442"></status>
</kw>
<msg timestamp="20201030 18:28:22.445" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022451389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022552194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:22.155" endtime="20201030 18:28:22.445"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:22.453" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022451389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022552194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:22.446" endtime="20201030 18:28:22.454"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:22.454" endtime="20201030 18:28:22.456"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.153" endtime="20201030 18:28:22.456"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.151" endtime="20201030 18:28:22.457"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:22.461" level="INFO">${RESULT} = [{'diff': 0.00010080500000000242}, {'diff': 0.00010015299999999866}, {'diff': 0.00010019500000000084}, {'diff': 0.00010052799999999903}, {'diff': 9.973599999999957e-05}, {'diff': 0.0001005280000000025...</msg>
<status status="PASS" starttime="20201030 18:28:22.458" endtime="20201030 18:28:22.461"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:22.465" level="INFO">${ACCURACY} = {'diff': [0.00010080500000000242, 0.00010015299999999866, 0.00010019500000000084, 0.00010052799999999903, 9.973599999999957e-05, 0.0001005280000000025, 9.970800000000044e-05, 0.0001004869999999998, 9....</msg>
<status status="PASS" starttime="20201030 18:28:22.462" endtime="20201030 18:28:22.465"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:22.470" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201030 18:28:22.469" endtime="20201030 18:28:22.470"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:22.472" level="INFO">VALUE: [0.00010080500000000242, 0.00010015299999999866, 0.00010019500000000084, 0.00010052799999999903, 9.973599999999957e-05, 0.0001005280000000025, 9.970800000000044e-05, 0.0001004869999999998, 9.98609999999997e-05, 9.98609999999997e-05, 9.997200000000026e-05, 0.00010040299999999891, 0.0001003610000000002, 9.980500000000142e-05, 0.00010020800000000094, 9.98479999999996e-05, 9.969400000000087e-05, 9.988900000000231e-05, 0.00010033300000000106, 0.00010012500000000299, 9.983299999999709e-05, 9.977800000000175e-05, 0.00010026399999999921, 0.0001005419999999986, 9.990300000000188e-05, 9.970899999999991e-05, 0.00010033300000000106, 0.00010022299999999998, 0.00010009700000000038, 9.990299999999841e-05, 0.00010043099999999805, 0.00010007000000000071, 0.00010052799999999903, 0.00010057000000000121, 0.000100415999999999, 9.991700000000145e-05, 9.988800000000284e-05, 0.00010037499999999977, 0.0001000549999999982, 9.994500000000059e-05, 0.00010033300000000106, 9.976399999999871e-05, 0.00010015199999999919, 0.00010031899999999802, 0.00010027700000000278, 9.990299999999841e-05, 9.965300000000163e-05, 9.984700000000013e-05, 0.0001003610000000002, 0.0001004999999999999]</msg>
<status status="PASS" starttime="20201030 18:28:22.471" endtime="20201030 18:28:22.474"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.466" endtime="20201030 18:28:22.475"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:22.479" endtime="20201030 18:28:22.498"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.477" endtime="20201030 18:28:22.499"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.476" endtime="20201030 18:28:22.499"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.115" endtime="20201030 18:28:22.499"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.115" endtime="20201030 18:28:22.499"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:22.508" endtime="20201030 18:28:22.528"></status>
</kw>
<msg timestamp="20201030 18:28:22.528" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:22.507" endtime="20201030 18:28:22.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:22.531" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:22.529" endtime="20201030 18:28:22.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:22.532" endtime="20201030 18:28:22.534"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.504" endtime="20201030 18:28:22.534"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.502" endtime="20201030 18:28:22.535"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:22.541" endtime="20201030 18:28:22.826"></status>
</kw>
<msg timestamp="20201030 18:28:22.829" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021649361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02175075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:28:22.539" endtime="20201030 18:28:22.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:22.837" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021649361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02175075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:28:22.830" endtime="20201030 18:28:22.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:22.838" endtime="20201030 18:28:22.840"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.537" endtime="20201030 18:28:22.840"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.535" endtime="20201030 18:28:22.841"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:22.844" level="INFO">${RESULT} = [{'diff': 0.00010138900000000034}, {'diff': 0.00010129199999999935}, {'diff': 0.00010127700000000031}, {'diff': 0.00010115299999999966}, {'diff': 0.00010147200000000176}, {'diff': 0.000101402999999999...</msg>
<status status="PASS" starttime="20201030 18:28:22.841" endtime="20201030 18:28:22.845"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:22.852" level="INFO">${ACCURACY} = {'diff': [0.00010138900000000034, 0.00010129199999999935, 0.00010127700000000031, 0.00010115299999999966, 0.00010147200000000176, 0.00010140299999999991, 0.00010138900000000034, 0.00010129200000000282...</msg>
<status status="PASS" starttime="20201030 18:28:22.845" endtime="20201030 18:28:22.852"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:22.856" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201030 18:28:22.855" endtime="20201030 18:28:22.857"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:22.859" level="INFO">VALUE: [0.00010138900000000034, 0.00010129199999999935, 0.00010127700000000031, 0.00010115299999999966, 0.00010147200000000176, 0.00010140299999999991, 0.00010138900000000034, 0.00010129200000000282, 0.00010109800000000085, 0.00010152800000000003, 0.00010127799999999978, 0.00010108300000000181, 0.00010083300000000156, 0.00010145799999999872, 0.00010066599999999926, 0.00010151400000000046, 0.00010077800000000275, 0.00010115299999999966, 0.0001011670000000027, 0.00010140299999999991, 0.00010127799999999978, 0.00010091699999999898, 0.00010134700000000163, 0.00010161100000000145, 0.00010088899999999984, 0.00010109699999999791, 0.000101416, 0.00010084700000000113, 0.00010134699999999816, 0.0001008610000000007, 0.0001013749999999973, 0.00010145799999999872, 0.000100722000000001, 0.000100722000000001, 0.00010108300000000181, 0.00010090300000000288, 0.00010070800000000144, 0.00010083299999999809, 0.00010091699999999898, 0.00010162500000000102, 0.00010159699999999841, 0.00010109700000000138, 0.00010063899999999959, 0.00010152699999999709, 0.00010094499999999812, 0.00010116699999999923, 0.00010083300000000156, 0.00010088899999999984, 0.00010134699999999816, 0.00010083299999999809]</msg>
<status status="PASS" starttime="20201030 18:28:22.857" endtime="20201030 18:28:22.859"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.853" endtime="20201030 18:28:22.860"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:22.864" endtime="20201030 18:28:22.883"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.862" endtime="20201030 18:28:22.883"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.861" endtime="20201030 18:28:22.884"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.500" endtime="20201030 18:28:22.884"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.500" endtime="20201030 18:28:22.884"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:22.893" endtime="20201030 18:28:22.913"></status>
</kw>
<msg timestamp="20201030 18:28:22.913" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:22.891" endtime="20201030 18:28:22.913"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:22.916" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:22.914" endtime="20201030 18:28:22.916"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:22.917" endtime="20201030 18:28:22.918"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.889" endtime="20201030 18:28:22.919"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.887" endtime="20201030 18:28:22.919"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:22.925" endtime="20201030 18:28:23.211"></status>
</kw>
<msg timestamp="20201030 18:28:23.214" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021417833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021520722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:22.924" endtime="20201030 18:28:23.214"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:23.222" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021417833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021520722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:23.215" endtime="20201030 18:28:23.223"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:23.223" endtime="20201030 18:28:23.225"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.922" endtime="20201030 18:28:23.226"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.920" endtime="20201030 18:28:23.226"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:23.230" level="INFO">${RESULT} = [{'diff': 0.00010288899999999837}, {'diff': 0.00010186099999999823}, {'diff': 0.0001018879999999979}, {'diff': 0.00010219499999999937}, {'diff': 0.0001021939999999999}, {'diff': 0.00010226400000000122...</msg>
<status status="PASS" starttime="20201030 18:28:23.227" endtime="20201030 18:28:23.230"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:23.234" level="INFO">${ACCURACY} = {'diff': [0.00010288899999999837, 0.00010186099999999823, 0.0001018879999999979, 0.00010219499999999937, 0.0001021939999999999, 0.00010226400000000122, 0.0001023199999999995, 0.00010177699999999734, 0...</msg>
<status status="PASS" starttime="20201030 18:28:23.231" endtime="20201030 18:28:23.234"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:23.238" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201030 18:28:23.237" endtime="20201030 18:28:23.238"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:23.241" level="INFO">VALUE: [0.00010288899999999837, 0.00010186099999999823, 0.0001018879999999979, 0.00010219499999999937, 0.0001021939999999999, 0.00010226400000000122, 0.0001023199999999995, 0.00010177699999999734, 0.0001020139999999975, 0.00010177800000000028, 0.00010165300000000016, 0.00010211099999999848, 0.00010181899999999952, 0.00010226399999999775, 0.00010247199999999929, 0.00010251400000000147, 0.00010224999999999818, 0.00010247200000000276, 0.00010220799999999947, 0.00010254100000000113, 0.00010166699999999973, 0.00010179199999999985, 0.00010220900000000241, 0.00010229200000000035, 0.000102513999999998, 0.00010258299999999984, 0.00010244399999999668, 0.00010190299999999694, 0.00010259699999999941, 0.00010234799999999863, 0.00010230500000000045, 0.00010234699999999916, 0.00010256999999999974, 0.00010202800000000053, 0.0001020420000000001, 0.00010195800000000269, 0.00010238900000000134, 0.00010163899999999712, 0.00010198599999999836, 0.0001016809999999993, 0.00010202800000000053, 0.00010213900000000109, 0.00010195899999999869, 0.00010208299999999934, 0.00010177800000000028, 0.00010204100000000063, 0.0001021939999999999, 0.00010213899999999762, 0.00010233299999999959, 0.00010245900000000266]</msg>
<status status="PASS" starttime="20201030 18:28:23.239" endtime="20201030 18:28:23.241"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.235" endtime="20201030 18:28:23.242"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:23.245" endtime="20201030 18:28:23.265"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.244" endtime="20201030 18:28:23.265"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.243" endtime="20201030 18:28:23.266"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.885" endtime="20201030 18:28:23.266"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.885" endtime="20201030 18:28:23.266"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:23.275" endtime="20201030 18:28:23.295"></status>
</kw>
<msg timestamp="20201030 18:28:23.296" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:23.273" endtime="20201030 18:28:23.296"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:23.298" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:23.297" endtime="20201030 18:28:23.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:23.299" endtime="20201030 18:28:23.301"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.271" endtime="20201030 18:28:23.302"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.269" endtime="20201030 18:28:23.302"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:23.309" endtime="20201030 18:28:23.594"></status>
</kw>
<msg timestamp="20201030 18:28:23.597" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022372069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022475736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:23.307" endtime="20201030 18:28:23.597"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:23.605" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022372069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022475736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:23.598" endtime="20201030 18:28:23.606"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:23.606" endtime="20201030 18:28:23.608"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.304" endtime="20201030 18:28:23.608"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.303" endtime="20201030 18:28:23.609"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:23.613" level="INFO">${RESULT} = [{'diff': 0.00010366699999999826}, {'diff': 0.00010359699999999694}, {'diff': 0.00010297199999999979}, {'diff': 0.00010315299999999819}, {'diff': 0.00010266600000000126}, {'diff': 0.000102721999999999...</msg>
<status status="PASS" starttime="20201030 18:28:23.610" endtime="20201030 18:28:23.613"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:23.617" level="INFO">${ACCURACY} = {'diff': [0.00010366699999999826, 0.00010359699999999694, 0.00010297199999999979, 0.00010315299999999819, 0.00010266600000000126, 0.00010272199999999954, 0.0001030000000000024, 0.00010270899999999944,...</msg>
<status status="PASS" starttime="20201030 18:28:23.614" endtime="20201030 18:28:23.617"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:23.621" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201030 18:28:23.620" endtime="20201030 18:28:23.621"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:23.623" level="INFO">VALUE: [0.00010366699999999826, 0.00010359699999999694, 0.00010297199999999979, 0.00010315299999999819, 0.00010266600000000126, 0.00010272199999999954, 0.0001030000000000024, 0.00010270899999999944, 0.00010286099999999923, 0.00010277800000000128, 0.00010340300000000191, 0.00010340299999999844, 0.00010290300000000141, 0.00010277799999999782, 0.00010311099999999948, 0.000103513999999999, 0.00010297199999999979, 0.00010269499999999987, 0.00010281900000000052, 0.000103513999999999, 0.00010312499999999905, 0.0001031940000000009, 0.00010307000000000024, 0.00010315299999999819, 0.0001027359999999991, 0.00010287500000000227, 0.00010276399999999825, 0.00010270899999999944, 0.00010315300000000166, 0.00010347299999999976, 0.00010284699999999966, 0.00010312499999999905, 0.00010297300000000273, 0.00010344399999999768, 0.00010313899999999862, 0.0001028879999999989, 0.00010313899999999862, 0.00010298599999999936, 0.0001028749999999988, 0.00010333300000000059, 0.00010331999999999703, 0.00010266600000000126, 0.00010266700000000073, 0.00010284699999999966, 0.00010352699999999909, 0.00010295800000000022, 0.00010302799999999807, 0.00010349999999999943, 0.0001035000000000029, 0.00010320800000000047]</msg>
<status status="PASS" starttime="20201030 18:28:23.622" endtime="20201030 18:28:23.625"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.617" endtime="20201030 18:28:23.626"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:23.629" endtime="20201030 18:28:23.649"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.628" endtime="20201030 18:28:23.649"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.627" endtime="20201030 18:28:23.649"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.267" endtime="20201030 18:28:23.650"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.266" endtime="20201030 18:28:23.650"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:23.659" endtime="20201030 18:28:23.679"></status>
</kw>
<msg timestamp="20201030 18:28:23.679" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:23.657" endtime="20201030 18:28:23.679"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:23.682" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:23.680" endtime="20201030 18:28:23.682"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:23.683" endtime="20201030 18:28:23.684"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.654" endtime="20201030 18:28:23.685"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.652" endtime="20201030 18:28:23.685"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:23.691" endtime="20201030 18:28:23.976"></status>
</kw>
<msg timestamp="20201030 18:28:23.979" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021622917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021727792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:23.690" endtime="20201030 18:28:23.979"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:23.987" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021622917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021727792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:23.980" endtime="20201030 18:28:23.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:23.988" endtime="20201030 18:28:23.990"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.687" endtime="20201030 18:28:23.991"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.686" endtime="20201030 18:28:23.991"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:23.995" level="INFO">${RESULT} = [{'diff': 0.0001048750000000008}, {'diff': 0.00010444499999999815}, {'diff': 0.00010399999999999993}, {'diff': 0.00010377799999999882}, {'diff': 0.00010377800000000229}, {'diff': 0.000104514}, {'diff'...</msg>
<status status="PASS" starttime="20201030 18:28:23.992" endtime="20201030 18:28:23.995"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:24.000" level="INFO">${ACCURACY} = {'diff': [0.0001048750000000008, 0.00010444499999999815, 0.00010399999999999993, 0.00010377799999999882, 0.00010377800000000229, 0.000104514, 0.0001038749999999998, 0.00010427799999999932, 0.000104527...</msg>
<status status="PASS" starttime="20201030 18:28:23.996" endtime="20201030 18:28:24.000"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:24.004" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201030 18:28:24.003" endtime="20201030 18:28:24.004"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:24.007" level="INFO">VALUE: [0.0001048750000000008, 0.00010444499999999815, 0.00010399999999999993, 0.00010377799999999882, 0.00010377800000000229, 0.000104514, 0.0001038749999999998, 0.00010427799999999932, 0.00010452799999999957, 0.00010386100000000023, 0.00010372200000000054, 0.00010362499999999955, 0.00010458299999999837, 0.0001038339999999971, 0.00010455600000000217, 0.00010374999999999968, 0.00010425000000000018, 0.00010429200000000236, 0.000103820000000001, 0.0001043750000000003, 0.00010433400000000106, 0.0001041940000000019, 0.00010411100000000048, 0.00010412500000000005, 0.00010407000000000124, 0.00010419399999999843, 0.00010441699999999901, 0.0001043200000000015, 0.00010445900000000119, 0.00010438899999999987, 0.00010425000000000018, 0.00010386100000000023, 0.00010370900000000044, 0.00010384700000000066, 0.00010372300000000001, 0.00010384700000000066, 0.00010418000000000233, 0.00010422300000000051, 0.00010413899999999962, 0.00010372199999999707, 0.00010408399999999735, 0.00010370800000000097, 0.00010433400000000106, 0.00010397200000000079, 0.0001043200000000015, 0.00010425000000000018, 0.00010372200000000054, 0.00010384800000000013, 0.00010376399999999925, 0.0001037360000000001]</msg>
<status status="PASS" starttime="20201030 18:28:24.005" endtime="20201030 18:28:24.007"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.001" endtime="20201030 18:28:24.008"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:24.012" endtime="20201030 18:28:24.031"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.010" endtime="20201030 18:28:24.032"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.009" endtime="20201030 18:28:24.032"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.651" endtime="20201030 18:28:24.032"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.650" endtime="20201030 18:28:24.032"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:24.041" endtime="20201030 18:28:24.061"></status>
</kw>
<msg timestamp="20201030 18:28:24.061" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:24.039" endtime="20201030 18:28:24.062"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:24.064" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:24.062" endtime="20201030 18:28:24.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:24.065" endtime="20201030 18:28:24.066"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.037" endtime="20201030 18:28:24.067"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.035" endtime="20201030 18:28:24.067"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:24.074" endtime="20201030 18:28:24.361"></status>
</kw>
<msg timestamp="20201030 18:28:24.364" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021499472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02160525, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:28:24.072" endtime="20201030 18:28:24.364"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:24.372" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021499472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02160525, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:28:24.365" endtime="20201030 18:28:24.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:24.373" endtime="20201030 18:28:24.375"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.070" endtime="20201030 18:28:24.375"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.068" endtime="20201030 18:28:24.376"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:24.381" level="INFO">${RESULT} = [{'diff': 0.00010577800000000082}, {'diff': 0.000105514000000001}, {'diff': 0.00010495900000000169}, {'diff': 0.00010512500000000105}, {'diff': 0.00010477799999999982}, {'diff': 0.00010561099999999851...</msg>
<status status="PASS" starttime="20201030 18:28:24.377" endtime="20201030 18:28:24.381"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:24.386" level="INFO">${ACCURACY} = {'diff': [0.00010577800000000082, 0.000105514000000001, 0.00010495900000000169, 0.00010512500000000105, 0.00010477799999999982, 0.00010561099999999851, 0.00010526400000000075, 0.000105207999999999, 0....</msg>
<status status="PASS" starttime="20201030 18:28:24.382" endtime="20201030 18:28:24.386"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:24.391" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201030 18:28:24.390" endtime="20201030 18:28:24.392"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:24.394" level="INFO">VALUE: [0.00010577800000000082, 0.000105514000000001, 0.00010495900000000169, 0.00010512500000000105, 0.00010477799999999982, 0.00010561099999999851, 0.00010526400000000075, 0.000105207999999999, 0.00010541600000000054, 0.00010558299999999937, 0.00010508400000000181, 0.00010465300000000316, 0.0001050140000000005, 0.00010561099999999851, 0.00010502800000000007, 0.00010499999999999746, 0.00010545799999999925, 0.00010472300000000101, 0.000105207999999999, 0.00010495900000000169, 0.00010504100000000016, 0.00010497300000000126, 0.00010552800000000057, 0.00010556999999999928, 0.00010519399999999943, 0.00010527800000000032, 0.00010483300000000209, 0.00010517999999999986, 0.0001047079999999985, 0.0001051949999999989, 0.00010520800000000247, 0.0001055689999999998, 0.00010516600000000029, 0.0001053889999999974, 0.00010547199999999882, 0.00010491699999999951, 0.00010511100000000148, 0.00010558399999999885, 0.00010552800000000057, 0.00010523599999999814, 0.00010519399999999943, 0.00010481999999999853, 0.00010527800000000032, 0.00010504100000000016, 0.00010497200000000179, 0.00010515300000000019, 0.00010483300000000209, 0.00010481899999999905, 0.00010538900000000087, 0.00010544399999999968]</msg>
<status status="PASS" starttime="20201030 18:28:24.392" endtime="20201030 18:28:24.395"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.387" endtime="20201030 18:28:24.396"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:24.400" endtime="20201030 18:28:24.420"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.398" endtime="20201030 18:28:24.421"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.397" endtime="20201030 18:28:24.421"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.033" endtime="20201030 18:28:24.422"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.033" endtime="20201030 18:28:24.422"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:24.430" endtime="20201030 18:28:24.451"></status>
</kw>
<msg timestamp="20201030 18:28:24.452" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:24.429" endtime="20201030 18:28:24.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:24.454" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:24.453" endtime="20201030 18:28:24.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:24.455" endtime="20201030 18:28:24.457"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.426" endtime="20201030 18:28:24.458"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.424" endtime="20201030 18:28:24.458"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:24.464" endtime="20201030 18:28:24.765"></status>
</kw>
<msg timestamp="20201030 18:28:24.772" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022719194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022825181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:24.463" endtime="20201030 18:28:24.772"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:24.789" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022719194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022825181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:24.774" endtime="20201030 18:28:24.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:24.792" endtime="20201030 18:28:24.795"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.460" endtime="20201030 18:28:24.796"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.459" endtime="20201030 18:28:24.797"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:24.805" level="INFO">${RESULT} = [{'diff': 0.00010598699999999836}, {'diff': 0.00010568000000000036}, {'diff': 0.00010583299999999962}, {'diff': 0.00010593000000000061}, {'diff': 0.00010595799999999975}, {'diff': 0.000106013999999998...</msg>
<status status="PASS" starttime="20201030 18:28:24.799" endtime="20201030 18:28:24.806"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:24.814" level="INFO">${ACCURACY} = {'diff': [0.00010598699999999836, 0.00010568000000000036, 0.00010583299999999962, 0.00010593000000000061, 0.00010595799999999975, 0.00010601399999999803, 0.0001063889999999984, 0.00010640300000000144,...</msg>
<status status="PASS" starttime="20201030 18:28:24.807" endtime="20201030 18:28:24.814"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:24.823" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201030 18:28:24.821" endtime="20201030 18:28:24.824"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:24.828" level="INFO">VALUE: [0.00010598699999999836, 0.00010568000000000036, 0.00010583299999999962, 0.00010593000000000061, 0.00010595799999999975, 0.00010601399999999803, 0.0001063889999999984, 0.00010640300000000144, 0.0001057079999999995, 0.0001057079999999995, 0.00010644500000000015, 0.00010595799999999975, 0.00010588900000000137, 0.00010559700000000241, 0.00010575000000000168, 0.00010608299999999987, 0.00010638900000000187, 0.00010588900000000137, 0.00010637499999999883, 0.00010577800000000082, 0.00010563899999999765, 0.00010572199999999907, 0.00010661100000000298, 0.0001060690000000003, 0.0001060279999999976, 0.00010562500000000155, 0.00010640300000000144, 0.00010577699999999787, 0.00010563900000000112, 0.0001060690000000003, 0.00010572200000000254, 0.00010566599999999732, 0.00010569399999999993, 0.00010594400000000018, 0.00010613899999999815, 0.00010645899999999972, 0.00010651399999999853, 0.00010591600000000104, 0.00010569399999999993, 0.00010623599999999914, 0.00010641700000000101, 0.00010579200000000039, 0.0001063889999999984, 0.00010577700000000134, 0.00010651399999999853, 0.0001065560000000007, 0.00010569399999999993, 0.00010627800000000132, 0.00010599999999999846, 0.00010594499999999965]</msg>
<status status="PASS" starttime="20201030 18:28:24.825" endtime="20201030 18:28:24.831"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.816" endtime="20201030 18:28:24.832"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:24.840" endtime="20201030 18:28:24.860"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.837" endtime="20201030 18:28:24.861"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.834" endtime="20201030 18:28:24.861"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.423" endtime="20201030 18:28:24.861"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.422" endtime="20201030 18:28:24.861"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:24.870" endtime="20201030 18:28:24.890"></status>
</kw>
<msg timestamp="20201030 18:28:24.890" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:24.868" endtime="20201030 18:28:24.891"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:24.893" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:24.892" endtime="20201030 18:28:24.893"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:24.894" endtime="20201030 18:28:24.896"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.866" endtime="20201030 18:28:24.896"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.864" endtime="20201030 18:28:24.896"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:24.903" endtime="20201030 18:28:25.189"></status>
</kw>
<msg timestamp="20201030 18:28:25.192" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021449222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021556542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:24.901" endtime="20201030 18:28:25.192"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:25.200" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021449222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021556542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:25.193" endtime="20201030 18:28:25.200"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:25.201" endtime="20201030 18:28:25.202"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.899" endtime="20201030 18:28:25.203"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.897" endtime="20201030 18:28:25.203"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:25.207" level="INFO">${RESULT} = [{'diff': 0.00010732000000000103}, {'diff': 0.00010751300000000005}, {'diff': 0.0001070560000000012}, {'diff': 0.00010712500000000305}, {'diff': 0.00010659699999999994}, {'diff': 0.0001073889999999994...</msg>
<status status="PASS" starttime="20201030 18:28:25.204" endtime="20201030 18:28:25.207"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:25.212" level="INFO">${ACCURACY} = {'diff': [0.00010732000000000103, 0.00010751300000000005, 0.0001070560000000012, 0.00010712500000000305, 0.00010659699999999994, 0.0001073889999999994, 0.0001073889999999994, 0.00010713899999999915, 0...</msg>
<status status="PASS" starttime="20201030 18:28:25.208" endtime="20201030 18:28:25.212"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:25.217" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201030 18:28:25.216" endtime="20201030 18:28:25.217"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:25.219" level="INFO">VALUE: [0.00010732000000000103, 0.00010751300000000005, 0.0001070560000000012, 0.00010712500000000305, 0.00010659699999999994, 0.0001073889999999994, 0.0001073889999999994, 0.00010713899999999915, 0.00010732000000000103, 0.00010741700000000201, 0.00010719399999999796, 0.00010726400000000275, 0.00010713799999999968, 0.00010695800000000075, 0.00010704200000000164, 0.00010733299999999765, 0.00010663899999999865, 0.00010756899999999833, 0.00010680599999999749, 0.0001073340000000006, 0.00010697200000000032, 0.000107208999999997, 0.00010756899999999833, 0.0001075279999999991, 0.00010737499999999983, 0.00010668099999999736, 0.00010665299999999822, 0.00010751399999999953, 0.00010719400000000143, 0.0001075279999999991, 0.00010665200000000222, 0.00010682000000000053, 0.00010712499999999958, 0.00010688900000000237, 0.00010744500000000115, 0.0001072499999999997, 0.00010738799999999993, 0.00010682000000000053, 0.00010672200000000007, 0.00010757000000000128, 0.00010756899999999833, 0.00010745900000000072, 0.00010683300000000062, 0.00010719400000000143, 0.00010708400000000035, 0.00010688900000000237, 0.00010722200000000057, 0.00010712499999999958, 0.00010676399999999878, 0.00010712499999999958]</msg>
<status status="PASS" starttime="20201030 18:28:25.218" endtime="20201030 18:28:25.220"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.213" endtime="20201030 18:28:25.220"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:25.224" endtime="20201030 18:28:25.243"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.222" endtime="20201030 18:28:25.244"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.221" endtime="20201030 18:28:25.244"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.862" endtime="20201030 18:28:25.244"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.862" endtime="20201030 18:28:25.245"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:25.253" endtime="20201030 18:28:25.273"></status>
</kw>
<msg timestamp="20201030 18:28:25.274" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:25.252" endtime="20201030 18:28:25.274"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:25.276" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:25.275" endtime="20201030 18:28:25.276"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:25.277" endtime="20201030 18:28:25.279"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.249" endtime="20201030 18:28:25.279"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.247" endtime="20201030 18:28:25.280"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:25.286" endtime="20201030 18:28:25.572"></status>
</kw>
<msg timestamp="20201030 18:28:25.575" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021406861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021514986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:25.285" endtime="20201030 18:28:25.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:25.583" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021406861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021514986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:25.576" endtime="20201030 18:28:25.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:25.584" endtime="20201030 18:28:25.586"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.282" endtime="20201030 18:28:25.586"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.280" endtime="20201030 18:28:25.587"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:25.591" level="INFO">${RESULT} = [{'diff': 0.00010812500000000058}, {'diff': 0.00010842999999999964}, {'diff': 0.0001083890000000004}, {'diff': 0.0001080279999999996}, {'diff': 0.0001083890000000004}, {'diff': 0.00010819399999999896}...</msg>
<status status="PASS" starttime="20201030 18:28:25.588" endtime="20201030 18:28:25.591"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:25.595" level="INFO">${ACCURACY} = {'diff': [0.00010812500000000058, 0.00010842999999999964, 0.0001083890000000004, 0.0001080279999999996, 0.0001083890000000004, 0.00010819399999999896, 0.0001078889999999999, 0.00010843099999999911, 0....</msg>
<status status="PASS" starttime="20201030 18:28:25.592" endtime="20201030 18:28:25.595"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:25.599" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201030 18:28:25.598" endtime="20201030 18:28:25.599"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:25.601" level="INFO">VALUE: [0.00010812500000000058, 0.00010842999999999964, 0.0001083890000000004, 0.0001080279999999996, 0.0001083890000000004, 0.00010819399999999896, 0.0001078889999999999, 0.00010843099999999911, 0.00010766599999999932, 0.00010798600000000089, 0.0001077500000000002, 0.00010763899999999965, 0.00010791699999999904, 0.00010827799999999985, 0.00010819399999999896, 0.00010812500000000058, 0.00010843099999999911, 0.00010847199999999835, 0.00010804200000000264, 0.0001076950000000014, 0.00010850000000000096, 0.00010800000000000046, 0.00010795800000000175, 0.00010762500000000008, 0.00010793099999999861, 0.00010811100000000101, 0.00010768100000000183, 0.00010795799999999828, 0.00010815299999999972, 0.00010781999999999806, 0.00010841600000000007, 0.00010851400000000053, 0.00010790300000000294, 0.00010777699999999987, 0.00010851400000000053, 0.00010858400000000185, 0.00010776399999999978, 0.00010787500000000033, 0.00010841699999999954, 0.00010845799999999878, 0.00010781900000000205, 0.0001082500000000007, 0.00010854100000000019, 0.00010766699999999879, 0.00010783300000000162, 0.0001085560000000027, 0.00010791699999999904, 0.00010787500000000033, 0.00010844400000000268, 0.00010786100000000076]</msg>
<status status="PASS" starttime="20201030 18:28:25.600" endtime="20201030 18:28:25.602"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.595" endtime="20201030 18:28:25.603"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:25.606" endtime="20201030 18:28:25.626"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.605" endtime="20201030 18:28:25.626"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.604" endtime="20201030 18:28:25.627"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.245" endtime="20201030 18:28:25.627"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.245" endtime="20201030 18:28:25.627"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:25.636" endtime="20201030 18:28:25.657"></status>
</kw>
<msg timestamp="20201030 18:28:25.657" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:25.634" endtime="20201030 18:28:25.658"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:25.660" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:25.658" endtime="20201030 18:28:25.660"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:25.661" endtime="20201030 18:28:25.663"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.632" endtime="20201030 18:28:25.663"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.629" endtime="20201030 18:28:25.664"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:25.670" endtime="20201030 18:28:25.955"></status>
</kw>
<msg timestamp="20201030 18:28:25.958" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022437736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022547375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:25.668" endtime="20201030 18:28:25.959"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:25.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022437736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022547375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:25.960" endtime="20201030 18:28:25.967"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:25.968" endtime="20201030 18:28:25.969"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.666" endtime="20201030 18:28:25.970"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.664" endtime="20201030 18:28:25.970"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:25.974" level="INFO">${RESULT} = [{'diff': 0.00010963900000000165}, {'diff': 0.00010919399999999996}, {'diff': 0.00010934800000000217}, {'diff': 0.00010886099999999829}, {'diff': 0.00010875000000000121}, {'diff': 0.000108860999999998...</msg>
<status status="PASS" starttime="20201030 18:28:25.971" endtime="20201030 18:28:25.974"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:25.978" level="INFO">${ACCURACY} = {'diff': [0.00010963900000000165, 0.00010919399999999996, 0.00010934800000000217, 0.00010886099999999829, 0.00010875000000000121, 0.00010886099999999829, 0.00010918099999999986, 0.00010941700000000054...</msg>
<status status="PASS" starttime="20201030 18:28:25.975" endtime="20201030 18:28:25.978"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:25.982" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201030 18:28:25.981" endtime="20201030 18:28:25.983"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:25.985" level="INFO">VALUE: [0.00010963900000000165, 0.00010919399999999996, 0.00010934800000000217, 0.00010886099999999829, 0.00010875000000000121, 0.00010886099999999829, 0.00010918099999999986, 0.00010941700000000054, 0.00010931900000000008, 0.00010934699999999922, 0.00010943000000000064, 0.00010943100000000011, 0.00010951400000000153, 0.00010952799999999763, 0.00010865300000000022, 0.00010855599999999924, 0.00010886099999999829, 0.0001090690000000033, 0.00010924999999999824, 0.0001090280000000006, 0.0001095699999999998, 0.00010951300000000205, 0.00010930500000000051, 0.00010869499999999893, 0.00010937499999999836, 0.0001090280000000006, 0.00010950000000000196, 0.00010919399999999996, 0.00010924999999999824, 0.00010868100000000283, 0.00010937500000000183, 0.00010911099999999854, 0.00010901400000000103, 0.00010891600000000057, 0.00010909699999999897, 0.00010931900000000008, 0.00010888899999999743, 0.00010875000000000121, 0.0001093890000000014, 0.00010876399999999731, 0.00010888899999999743, 0.0001087089999999985, 0.00010943100000000011, 0.0001087219999999986, 0.00010901400000000103, 0.00010876299999999783, 0.00010955599999999677, 0.00010893099999999961, 0.00010895799999999928, 0.00010920900000000247]</msg>
<status status="PASS" starttime="20201030 18:28:25.983" endtime="20201030 18:28:25.986"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.979" endtime="20201030 18:28:25.987"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:25.990" endtime="20201030 18:28:26.010"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.989" endtime="20201030 18:28:26.011"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.988" endtime="20201030 18:28:26.011"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.628" endtime="20201030 18:28:26.011"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.627" endtime="20201030 18:28:26.011"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:26.020" endtime="20201030 18:28:26.040"></status>
</kw>
<msg timestamp="20201030 18:28:26.041" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:26.018" endtime="20201030 18:28:26.041"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:26.043" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:26.042" endtime="20201030 18:28:26.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:26.044" endtime="20201030 18:28:26.046"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.016" endtime="20201030 18:28:26.046"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.014" endtime="20201030 18:28:26.047"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:26.053" endtime="20201030 18:28:26.340"></status>
</kw>
<msg timestamp="20201030 18:28:26.343" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021560833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021671069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:26.051" endtime="20201030 18:28:26.343"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:26.351" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021560833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021671069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:26.344" endtime="20201030 18:28:26.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:26.352" endtime="20201030 18:28:26.353"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.049" endtime="20201030 18:28:26.354"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.047" endtime="20201030 18:28:26.354"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:26.358" level="INFO">${RESULT} = [{'diff': 0.00011023599999999967}, {'diff': 0.0001100419999999977}, {'diff': 0.00010966700000000079}, {'diff': 0.00011005599999999727}, {'diff': 0.00010961099999999904}, {'diff': 0.0001098749999999988...</msg>
<status status="PASS" starttime="20201030 18:28:26.355" endtime="20201030 18:28:26.358"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:26.365" level="INFO">${ACCURACY} = {'diff': [0.00011023599999999967, 0.0001100419999999977, 0.00010966700000000079, 0.00011005599999999727, 0.00010961099999999904, 0.00010987499999999886, 0.00011001400000000203, 0.00011025000000000271,...</msg>
<status status="PASS" starttime="20201030 18:28:26.359" endtime="20201030 18:28:26.366"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:26.370" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201030 18:28:26.369" endtime="20201030 18:28:26.370"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:26.372" level="INFO">VALUE: [0.00011023599999999967, 0.0001100419999999977, 0.00010966700000000079, 0.00011005599999999727, 0.00010961099999999904, 0.00010987499999999886, 0.00011001400000000203, 0.00011025000000000271, 0.00011048599999999992, 0.00011030500000000151, 0.00010973599999999917, 0.00011006899999999736, 0.00011034700000000022, 0.00011037499999999936, 0.00011036199999999927, 0.00010993100000000061, 0.00011023599999999967, 0.00011027800000000185, 0.00011005500000000126, 0.00011004099999999822, 0.00011031899999999761, 0.00011029199999999795, 0.00011048599999999992, 0.00010997299999999932, 0.00011006900000000083, 0.00010998600000000289, 0.00010999999999999899, 0.00010998599999999942, 0.00011058299999999743, 0.00011006900000000083, 0.00010974999999999874, 0.00011018100000000086, 0.0001104159999999986, 0.00011024999999999924, 0.00011024999999999924, 0.00011011099999999954, 0.00011044500000000068, 0.00011001299999999908, 0.0001100280000000016, 0.0001105549999999983, 0.00011011099999999954, 0.00011050000000000296, 0.00011055599999999777, 0.00010999999999999899, 0.00010959800000000242, 0.00011023599999999967, 0.00010993100000000061, 0.00010962499999999861, 0.00010986199999999877, 0.00011043000000000164]</msg>
<status status="PASS" starttime="20201030 18:28:26.371" endtime="20201030 18:28:26.373"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.366" endtime="20201030 18:28:26.374"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:26.377" endtime="20201030 18:28:26.397"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.376" endtime="20201030 18:28:26.397"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.375" endtime="20201030 18:28:26.398"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.012" endtime="20201030 18:28:26.398"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.012" endtime="20201030 18:28:26.398"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:26.407" endtime="20201030 18:28:26.427"></status>
</kw>
<msg timestamp="20201030 18:28:26.427" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:26.405" endtime="20201030 18:28:26.428"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:26.430" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:26.428" endtime="20201030 18:28:26.430"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:26.431" endtime="20201030 18:28:26.432"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.403" endtime="20201030 18:28:26.433"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.400" endtime="20201030 18:28:26.433"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:26.440" endtime="20201030 18:28:26.725"></status>
</kw>
<msg timestamp="20201030 18:28:26.728" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021388903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021500778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:26.438" endtime="20201030 18:28:26.728"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:26.736" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021388903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021500778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:26.729" endtime="20201030 18:28:26.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:26.737" endtime="20201030 18:28:26.739"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.436" endtime="20201030 18:28:26.740"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.434" endtime="20201030 18:28:26.740"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:26.744" level="INFO">${RESULT} = [{'diff': 0.00011187500000000086}, {'diff': 0.0001112769999999999}, {'diff': 0.00011101399999999956}, {'diff': 0.00011104200000000217}, {'diff': 0.00011123700000000014}, {'diff': 0.0001113750000000003...</msg>
<status status="PASS" starttime="20201030 18:28:26.741" endtime="20201030 18:28:26.744"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:26.748" level="INFO">${ACCURACY} = {'diff': [0.00011187500000000086, 0.0001112769999999999, 0.00011101399999999956, 0.00011104200000000217, 0.00011123700000000014, 0.00011137500000000036, 0.00011094500000000118, 0.00011077799999999888,...</msg>
<status status="PASS" starttime="20201030 18:28:26.745" endtime="20201030 18:28:26.748"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:26.752" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201030 18:28:26.751" endtime="20201030 18:28:26.752"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:26.754" level="INFO">VALUE: [0.00011187500000000086, 0.0001112769999999999, 0.00011101399999999956, 0.00011104200000000217, 0.00011123700000000014, 0.00011137500000000036, 0.00011094500000000118, 0.00011077799999999888, 0.00011118100000000186, 0.00011062499999999961, 0.00011091600000000257, 0.00011097200000000085, 0.0001110969999999975, 0.00011061100000000004, 0.00011147199999999788, 0.00011150000000000049, 0.00011098600000000042, 0.00011076399999999931, 0.00011101399999999956, 0.00011143099999999864, 0.00011151400000000006, 0.00011115299999999925, 0.00011076399999999931, 0.00011115199999999978, 0.00011086100000000029, 0.00011149999999999702, 0.00011151400000000006, 0.00011102799999999913, 0.00011130599999999852, 0.00011079099999999897, 0.00011088899999999943, 0.00011084700000000072, 0.00011070800000000103, 0.00011059700000000047, 0.00011143100000000211, 0.00011058400000000038, 0.00011086100000000029, 0.00011077799999999888, 0.00011106900000000183, 0.00011115299999999925, 0.0001112220000000011, 0.00011148700000000039, 0.00011097199999999738, 0.00011066700000000179, 0.00011129200000000242, 0.00011156999999999834, 0.00011118100000000186, 0.00011112500000000011, 0.00011068000000000189, 0.00011059700000000047]</msg>
<status status="PASS" starttime="20201030 18:28:26.753" endtime="20201030 18:28:26.755"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.748" endtime="20201030 18:28:26.756"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:26.759" endtime="20201030 18:28:26.779"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.758" endtime="20201030 18:28:26.779"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.757" endtime="20201030 18:28:26.780"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.399" endtime="20201030 18:28:26.780"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.398" endtime="20201030 18:28:26.780"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:26.788" endtime="20201030 18:28:26.810"></status>
</kw>
<msg timestamp="20201030 18:28:26.810" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:26.787" endtime="20201030 18:28:26.810"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:26.813" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:26.811" endtime="20201030 18:28:26.813"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:26.814" endtime="20201030 18:28:26.815"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.784" endtime="20201030 18:28:26.816"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.782" endtime="20201030 18:28:26.816"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:26.823" endtime="20201030 18:28:27.109"></status>
</kw>
<msg timestamp="20201030 18:28:27.112" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022332972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022445639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:26.821" endtime="20201030 18:28:27.112"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:27.121" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022332972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022445639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:27.113" endtime="20201030 18:28:27.122"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:27.123" endtime="20201030 18:28:27.124"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.819" endtime="20201030 18:28:27.125"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.817" endtime="20201030 18:28:27.125"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:27.129" level="INFO">${RESULT} = [{'diff': 0.00011266700000000032}, {'diff': 0.00011179099999999997}, {'diff': 0.00011234699999999875}, {'diff': 0.00011236100000000179}, {'diff': 0.00011248599999999845}, {'diff': 0.000111597000000001...</msg>
<status status="PASS" starttime="20201030 18:28:27.126" endtime="20201030 18:28:27.129"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:27.133" level="INFO">${ACCURACY} = {'diff': [0.00011266700000000032, 0.00011179099999999997, 0.00011234699999999875, 0.00011236100000000179, 0.00011248599999999845, 0.00011159700000000147, 0.00011174999999999727, 0.00011193100000000261...</msg>
<status status="PASS" starttime="20201030 18:28:27.130" endtime="20201030 18:28:27.133"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:27.137" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201030 18:28:27.136" endtime="20201030 18:28:27.138"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:27.140" level="INFO">VALUE: [0.00011266700000000032, 0.00011179099999999997, 0.00011234699999999875, 0.00011236100000000179, 0.00011248599999999845, 0.00011159700000000147, 0.00011174999999999727, 0.00011193100000000261, 0.0001115830000000019, 0.00011247200000000235, 0.00011177799999999988, 0.0001120700000000023, 0.00011216699999999982, 0.00011176400000000031, 0.00011244399999999974, 0.00011254100000000072, 0.00011159700000000147, 0.0001120830000000024, 0.00011219400000000296, 0.00011166599999999985, 0.00011166599999999985, 0.0001119160000000001, 0.00011229199999999995, 0.00011229100000000047, 0.00011238900000000093, 0.00011194399999999924, 0.00011223600000000167, 0.00011229199999999995, 0.0001120969999999985, 0.00011191699999999957, 0.00011229199999999995, 0.00011177799999999988, 0.00011166599999999985, 0.00011248599999999845, 0.00011227699999999743, 0.00011191699999999957, 0.0001120419999999997, 0.00011229199999999995, 0.00011248599999999845, 0.0001120419999999997, 0.0001117359999999977, 0.00011247299999999835, 0.00011245800000000278, 0.00011251299999999811, 0.00011166599999999985, 0.00011199999999999752, 0.00011202800000000013, 0.00011248600000000192, 0.00011188900000000043, 0.00011184700000000172]</msg>
<status status="PASS" starttime="20201030 18:28:27.138" endtime="20201030 18:28:27.167"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.134" endtime="20201030 18:28:27.168"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:27.172" endtime="20201030 18:28:27.191"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.170" endtime="20201030 18:28:27.192"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.169" endtime="20201030 18:28:27.192"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.781" endtime="20201030 18:28:27.192"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.780" endtime="20201030 18:28:27.193"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:27.201" endtime="20201030 18:28:27.222"></status>
</kw>
<msg timestamp="20201030 18:28:27.222" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:27.200" endtime="20201030 18:28:27.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:27.225" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:27.223" endtime="20201030 18:28:27.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:27.226" endtime="20201030 18:28:27.227"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.197" endtime="20201030 18:28:27.228"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.195" endtime="20201030 18:28:27.228"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:27.235" endtime="20201030 18:28:27.521"></status>
</kw>
<msg timestamp="20201030 18:28:27.524" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021398444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021511986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:27.233" endtime="20201030 18:28:27.524"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:27.532" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021398444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021511986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:27.525" endtime="20201030 18:28:27.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:27.533" endtime="20201030 18:28:27.534"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.231" endtime="20201030 18:28:27.535"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.229" endtime="20201030 18:28:27.535"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:27.539" level="INFO">${RESULT} = [{'diff': 0.0001135420000000012}, {'diff': 0.00011319400000000049}, {'diff': 0.000112596999999999}, {'diff': 0.0001129160000000011}, {'diff': 0.00011275000000000174}, {'diff': 0.00011273600000000217},...</msg>
<status status="PASS" starttime="20201030 18:28:27.536" endtime="20201030 18:28:27.540"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:27.544" level="INFO">${ACCURACY} = {'diff': [0.0001135420000000012, 0.00011319400000000049, 0.000112596999999999, 0.0001129160000000011, 0.00011275000000000174, 0.00011273600000000217, 0.00011295799999999981, 0.00011305600000000027, 0....</msg>
<status status="PASS" starttime="20201030 18:28:27.540" endtime="20201030 18:28:27.545"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:27.549" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201030 18:28:27.548" endtime="20201030 18:28:27.550"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:27.552" level="INFO">VALUE: [0.0001135420000000012, 0.00011319400000000049, 0.000112596999999999, 0.0001129160000000011, 0.00011275000000000174, 0.00011273600000000217, 0.00011295799999999981, 0.00011305600000000027, 0.00011281900000000011, 0.00011267999999999695, 0.00011340200000000203, 0.000112596999999999, 0.0001134169999999976, 0.00011279200000000045, 0.00011295899999999928, 0.00011316700000000082, 0.00011313799999999874, 0.00011268099999999989, 0.00011308399999999941, 0.00011330600000000052, 0.00011294400000000024, 0.00011355600000000077, 0.00011343099999999717, 0.00011341700000000107, 0.00011299999999999852, 0.00011340199999999856, 0.00011262500000000161, 0.00011273699999999817, 0.00011354199999999773, 0.00011286099999999882, 0.00011316700000000082, 0.00011348600000000292, 0.00011286099999999882, 0.00011305600000000027, 0.00011287500000000186, 0.00011293000000000067, 0.00011262499999999814, 0.00011280600000000002, 0.00011347199999999988, 0.00011341700000000107, 0.00011316599999999788, 0.00011318000000000092, 0.00011347199999999988, 0.00011320800000000006, 0.00011308299999999993, 0.00011280600000000002, 0.0001130969999999995, 0.00011298599999999895, 0.00011291700000000057, 0.00011319499999999996]</msg>
<status status="PASS" starttime="20201030 18:28:27.551" endtime="20201030 18:28:27.553"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.545" endtime="20201030 18:28:27.553"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:27.557" endtime="20201030 18:28:27.576"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.556" endtime="20201030 18:28:27.577"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.554" endtime="20201030 18:28:27.577"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.194" endtime="20201030 18:28:27.578"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.193" endtime="20201030 18:28:27.578"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:27.586" endtime="20201030 18:28:27.607"></status>
</kw>
<msg timestamp="20201030 18:28:27.607" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:27.585" endtime="20201030 18:28:27.607"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:27.610" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:27.608" endtime="20201030 18:28:27.610"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:27.611" endtime="20201030 18:28:27.612"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.582" endtime="20201030 18:28:27.613"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.580" endtime="20201030 18:28:27.613"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:27.620" endtime="20201030 18:28:27.906"></status>
</kw>
<msg timestamp="20201030 18:28:27.909" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021467944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021582806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:27.618" endtime="20201030 18:28:27.909"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:27.918" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021467944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021582806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:27.910" endtime="20201030 18:28:27.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:27.919" endtime="20201030 18:28:27.921"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.616" endtime="20201030 18:28:27.921"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.614" endtime="20201030 18:28:27.922"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:27.926" level="INFO">${RESULT} = [{'diff': 0.0001148620000000003}, {'diff': 0.00011398599999999995}, {'diff': 0.00011404199999999823}, {'diff': 0.00011441700000000207}, {'diff': 0.00011419400000000149}, {'diff': 0.0001135409999999982...</msg>
<status status="PASS" starttime="20201030 18:28:27.923" endtime="20201030 18:28:27.926"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:27.929" level="INFO">${ACCURACY} = {'diff': [0.0001148620000000003, 0.00011398599999999995, 0.00011404199999999823, 0.00011441700000000207, 0.00011419400000000149, 0.00011354099999999825, 0.00011422200000000063, 0.00011422199999999716,...</msg>
<status status="PASS" starttime="20201030 18:28:27.927" endtime="20201030 18:28:27.930"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:27.934" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201030 18:28:27.933" endtime="20201030 18:28:27.934"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:27.936" level="INFO">VALUE: [0.0001148620000000003, 0.00011398599999999995, 0.00011404199999999823, 0.00011441700000000207, 0.00011419400000000149, 0.00011354099999999825, 0.00011422200000000063, 0.00011422199999999716, 0.00011418100000000139, 0.00011368000000000142, 0.00011454099999999925, 0.00011368000000000142, 0.00011398599999999995, 0.00011418100000000139, 0.00011368000000000142, 0.00011368100000000089, 0.00011393100000000114, 0.0001145689999999984, 0.0001143749999999999, 0.0001143619999999998, 0.00011444400000000174, 0.00011424999999999977, 0.0001140970000000005, 0.00011455600000000177, 0.00011404199999999823, 0.00011393100000000114, 0.00011456999999999787, 0.00011440299999999903, 0.00011411100000000007, 0.0001137359999999997, 0.00011458299999999796, 0.00011430499999999857, 0.00011441700000000207, 0.00011401299999999961, 0.0001139160000000021, 0.00011438900000000293, 0.00011361099999999957, 0.0001143619999999998, 0.00011417999999999845, 0.0001143749999999999, 0.00011387500000000286, 0.00011454099999999925, 0.00011431999999999762, 0.0001142360000000002, 0.00011436100000000032, 0.00011402799999999866, 0.00011434699999999728, 0.000113903000000002, 0.00011405499999999832, 0.00011394500000000071]</msg>
<status status="PASS" starttime="20201030 18:28:27.935" endtime="20201030 18:28:27.937"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.930" endtime="20201030 18:28:27.938"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:27.941" endtime="20201030 18:28:27.961"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.940" endtime="20201030 18:28:27.961"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.939" endtime="20201030 18:28:27.962"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.579" endtime="20201030 18:28:27.962"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.578" endtime="20201030 18:28:27.962"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:27.971" endtime="20201030 18:28:27.992"></status>
</kw>
<msg timestamp="20201030 18:28:27.993" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:27.969" endtime="20201030 18:28:27.993"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:27.995" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:27.994" endtime="20201030 18:28:27.995"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:27.996" endtime="20201030 18:28:27.998"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.967" endtime="20201030 18:28:27.998"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.965" endtime="20201030 18:28:27.999"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:28.005" endtime="20201030 18:28:28.290"></status>
</kw>
<msg timestamp="20201030 18:28:28.293" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022613444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022728806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:28.004" endtime="20201030 18:28:28.294"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:28.301" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022613444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022728806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:28.294" endtime="20201030 18:28:28.302"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:28.302" endtime="20201030 18:28:28.304"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.001" endtime="20201030 18:28:28.305"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.999" endtime="20201030 18:28:28.305"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:28.309" level="INFO">${RESULT} = [{'diff': 0.0001153620000000008}, {'diff': 0.00011480599999999855}, {'diff': 0.0001147230000000006}, {'diff': 0.00011504199999999923}, {'diff': 0.00011497200000000138}, {'diff': 0.00011511100000000107...</msg>
<status status="PASS" starttime="20201030 18:28:28.306" endtime="20201030 18:28:28.309"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:28.313" level="INFO">${ACCURACY} = {'diff': [0.0001153620000000008, 0.00011480599999999855, 0.0001147230000000006, 0.00011504199999999923, 0.00011497200000000138, 0.00011511100000000107, 0.00011504199999999923, 0.00011475000000000027, ...</msg>
<status status="PASS" starttime="20201030 18:28:28.310" endtime="20201030 18:28:28.313"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:28.318" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201030 18:28:28.316" endtime="20201030 18:28:28.319"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:28.321" level="INFO">VALUE: [0.0001153620000000008, 0.00011480599999999855, 0.0001147230000000006, 0.00011504199999999923, 0.00011497200000000138, 0.00011511100000000107, 0.00011504199999999923, 0.00011475000000000027, 0.00011531899999999914, 0.00011550000000000102, 0.00011476399999999984, 0.0001148750000000004, 0.00011487499999999692, 0.00011518099999999892, 0.00011529199999999948, 0.00011497200000000138, 0.00011556999999999887, 0.00011468100000000189, 0.00011533299999999871, 0.00011534699999999828, 0.0001147230000000006, 0.00011511200000000055, 0.00011466699999999885, 0.00011544499999999874, 0.00011463899999999971, 0.00011527799999999991, 0.00011454199999999873, 0.00011534700000000175, 0.00011479199999999898, 0.00011548600000000145, 0.00011547200000000188, 0.00011530599999999905, 0.00011462500000000014, 0.00011516699999999935, 0.00011547199999999841, 0.00011473599999999723, 0.00011505600000000227, 0.00011494499999999824, 0.00011491599999999963, 0.00011494400000000224, 0.0001148750000000004, 0.00011515299999999978, 0.00011516599999999988, 0.00011516599999999988, 0.00011463899999999971, 0.0001148750000000004, 0.00011515299999999978, 0.00011486099999999735, 0.0001150970000000015, 0.00011550000000000102]</msg>
<status status="PASS" starttime="20201030 18:28:28.319" endtime="20201030 18:28:28.322"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.314" endtime="20201030 18:28:28.323"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:28.327" endtime="20201030 18:28:28.346"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.325" endtime="20201030 18:28:28.346"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.324" endtime="20201030 18:28:28.347"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.963" endtime="20201030 18:28:28.347"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.962" endtime="20201030 18:28:28.347"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:28.356" endtime="20201030 18:28:28.376"></status>
</kw>
<msg timestamp="20201030 18:28:28.377" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:28.354" endtime="20201030 18:28:28.377"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:28.379" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:28.378" endtime="20201030 18:28:28.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:28.380" endtime="20201030 18:28:28.382"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.352" endtime="20201030 18:28:28.382"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.350" endtime="20201030 18:28:28.383"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:28.389" endtime="20201030 18:28:28.675"></status>
</kw>
<msg timestamp="20201030 18:28:28.678" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021404431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021521028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:28.388" endtime="20201030 18:28:28.678"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:28.686" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021404431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021521028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:28.679" endtime="20201030 18:28:28.686"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:28.687" endtime="20201030 18:28:28.689"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.385" endtime="20201030 18:28:28.689"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.383" endtime="20201030 18:28:28.690"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:28.694" level="INFO">${RESULT} = [{'diff': 0.00011659699999999953}, {'diff': 0.00011580500000000007}, {'diff': 0.00011636099999999885}, {'diff': 0.00011652799999999769}, {'diff': 0.000115597000000002}, {'diff': 0.00011594499999999924...</msg>
<status status="PASS" starttime="20201030 18:28:28.691" endtime="20201030 18:28:28.694"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:28.698" level="INFO">${ACCURACY} = {'diff': [0.00011659699999999953, 0.00011580500000000007, 0.00011636099999999885, 0.00011652799999999769, 0.000115597000000002, 0.00011594499999999924, 0.00011594399999999977, 0.00011581999999999912, ...</msg>
<status status="PASS" starttime="20201030 18:28:28.695" endtime="20201030 18:28:28.699"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:28.703" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201030 18:28:28.702" endtime="20201030 18:28:28.703"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:28.705" level="INFO">VALUE: [0.00011659699999999953, 0.00011580500000000007, 0.00011636099999999885, 0.00011652799999999769, 0.000115597000000002, 0.00011594499999999924, 0.00011594399999999977, 0.00011581999999999912, 0.00011599999999999805, 0.00011561100000000157, 0.00011629099999999754, 0.00011586099999999835, 0.00011590300000000053, 0.00011584699999999878, 0.00011609699999999903, 0.00011623599999999873, 0.00011648599999999898, 0.00011630600000000005, 0.00011598600000000195, 0.00011583299999999921, 0.00011620899999999906, 0.00011649999999999855, 0.00011584700000000225, 0.00011654099999999779, 0.00011577800000000041, 0.00011609699999999903, 0.00011645899999999931, 0.00011572199999999866, 0.00011599999999999805, 0.00011595800000000281, 0.0001160559999999998, 0.00011625000000000177, 0.0001164170000000006, 0.00011627799999999744, 0.0001156109999999981, 0.00011597299999999838, 0.0001159300000000002, 0.00011567999999999995, 0.00011636100000000232, 0.00011649999999999855, 0.0001156109999999981, 0.0001157499999999978, 0.00011565300000000028, 0.00011591600000000063, 0.00011651400000000159, 0.00011645799999999984, 0.0001165560000000003, 0.00011590300000000053, 0.00011634699999999928, 0.00011584700000000225]</msg>
<status status="PASS" starttime="20201030 18:28:28.704" endtime="20201030 18:28:28.706"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.699" endtime="20201030 18:28:28.707"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:28.710" endtime="20201030 18:28:28.730"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.709" endtime="20201030 18:28:28.730"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.707" endtime="20201030 18:28:28.731"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.348" endtime="20201030 18:28:28.731"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.348" endtime="20201030 18:28:28.731"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:28.739" endtime="20201030 18:28:28.760"></status>
</kw>
<msg timestamp="20201030 18:28:28.761" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:28.738" endtime="20201030 18:28:28.761"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:28.763" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:28.762" endtime="20201030 18:28:28.763"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:28.764" endtime="20201030 18:28:28.766"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.735" endtime="20201030 18:28:28.766"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.733" endtime="20201030 18:28:28.767"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:28.773" endtime="20201030 18:28:29.060"></status>
</kw>
<msg timestamp="20201030 18:28:29.063" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021463347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021580306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:28.772" endtime="20201030 18:28:29.063"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:29.071" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021463347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021580306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:29.064" endtime="20201030 18:28:29.072"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:29.072" endtime="20201030 18:28:29.074"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.769" endtime="20201030 18:28:29.074"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.767" endtime="20201030 18:28:29.075"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:29.079" level="INFO">${RESULT} = [{'diff': 0.00011695899999999981}, {'diff': 0.000117388999999999}, {'diff': 0.00011684699999999978}, {'diff': 0.00011743100000000117}, {'diff': 0.00011668100000000042}, {'diff': 0.00011701399999999862...</msg>
<status status="PASS" starttime="20201030 18:28:29.076" endtime="20201030 18:28:29.079"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:29.083" level="INFO">${ACCURACY} = {'diff': [0.00011695899999999981, 0.000117388999999999, 0.00011684699999999978, 0.00011743100000000117, 0.00011668100000000042, 0.00011701399999999862, 0.00011722299999999963, 0.00011697299999999938, ...</msg>
<status status="PASS" starttime="20201030 18:28:29.080" endtime="20201030 18:28:29.083"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:29.087" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201030 18:28:29.086" endtime="20201030 18:28:29.087"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:29.089" level="INFO">VALUE: [0.00011695899999999981, 0.000117388999999999, 0.00011684699999999978, 0.00011743100000000117, 0.00011668100000000042, 0.00011701399999999862, 0.00011722299999999963, 0.00011697299999999938, 0.00011690199999999859, 0.00011673599999999923, 0.000117082999999997, 0.00011729199999999801, 0.00011754099999999879, 0.00011755499999999836, 0.00011695800000000034, 0.00011729199999999801, 0.0001175560000000013, 0.00011734700000000028, 0.00011709700000000003, 0.00011700000000000252, 0.00011676399999999837, 0.00011747200000000041, 0.00011683399999999969, 0.00011672299999999913, 0.00011683399999999969, 0.00011677800000000141, 0.00011666700000000085, 0.0001174170000000016, 0.00011683399999999969, 0.0001173049999999981, 0.00011747200000000041, 0.00011749999999999955, 0.00011672199999999966, 0.00011683399999999969, 0.00011704199999999776, 0.00011744500000000074, 0.0001167230000000026, 0.00011725000000000277, 0.00011747200000000041, 0.0001169170000000011, 0.0001168889999999985, 0.00011743100000000117, 0.00011734799999999976, 0.00011734700000000028, 0.00011695800000000034, 0.00011749999999999955, 0.00011723599999999973, 0.00011666700000000085, 0.00011729099999999854, 0.00011677799999999794]</msg>
<status status="PASS" starttime="20201030 18:28:29.088" endtime="20201030 18:28:29.090"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.083" endtime="20201030 18:28:29.091"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:29.094" endtime="20201030 18:28:29.114"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.093" endtime="20201030 18:28:29.114"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.092" endtime="20201030 18:28:29.115"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.732" endtime="20201030 18:28:29.115"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.731" endtime="20201030 18:28:29.115"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:29.125" endtime="20201030 18:28:29.146"></status>
</kw>
<msg timestamp="20201030 18:28:29.147" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:29.123" endtime="20201030 18:28:29.147"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:29.149" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:29.148" endtime="20201030 18:28:29.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:29.150" endtime="20201030 18:28:29.152"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.121" endtime="20201030 18:28:29.153"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.119" endtime="20201030 18:28:29.153"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:29.159" endtime="20201030 18:28:29.446"></status>
</kw>
<msg timestamp="20201030 18:28:29.449" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023671847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023790681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:29.158" endtime="20201030 18:28:29.449"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:29.457" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023671847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023790681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:29.450" endtime="20201030 18:28:29.457"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:29.458" endtime="20201030 18:28:29.460"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.155" endtime="20201030 18:28:29.460"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.154" endtime="20201030 18:28:29.461"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:29.465" level="INFO">${RESULT} = [{'diff': 0.00011883400000000169}, {'diff': 0.00011819400000000202}, {'diff': 0.00011790299999999906}, {'diff': 0.00011784700000000078}, {'diff': 0.00011804199999999876}, {'diff': 0.000118166999999998...</msg>
<status status="PASS" starttime="20201030 18:28:29.462" endtime="20201030 18:28:29.465"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:29.469" level="INFO">${ACCURACY} = {'diff': [0.00011883400000000169, 0.00011819400000000202, 0.00011790299999999906, 0.00011784700000000078, 0.00011804199999999876, 0.00011816699999999888, 0.00011770799999999762, 0.00011820799999999812...</msg>
<status status="PASS" starttime="20201030 18:28:29.466" endtime="20201030 18:28:29.469"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:29.473" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201030 18:28:29.472" endtime="20201030 18:28:29.474"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:29.476" level="INFO">VALUE: [0.00011883400000000169, 0.00011819400000000202, 0.00011790299999999906, 0.00011784700000000078, 0.00011804199999999876, 0.00011816699999999888, 0.00011770799999999762, 0.00011820799999999812, 0.00011758400000000044, 0.0001182500000000003, 0.00011776399999999937, 0.00011826399999999987, 0.00011770799999999762, 0.00011783300000000121, 0.00011815300000000278, 0.00011798600000000048, 0.00011772200000000066, 0.00011765300000000228, 0.00011852799999999969, 0.00011851400000000012, 0.00011770900000000056, 0.00011794500000000124, 0.00011755599999999783, 0.00011770800000000109, 0.00011840200000000009, 0.00011822200000000116, 0.00011790299999999906, 0.00011762500000000314, 0.00011804199999999876, 0.0001181950000000015, 0.00011784800000000026, 0.0001181110000000006, 0.00011850000000000055, 0.00011758300000000096, 0.00011770800000000109, 0.00011804199999999876, 0.00011823600000000073, 0.00011780600000000155, 0.0001181110000000006, 0.00011777699999999947, 0.00011834700000000128, 0.00011840299999999956, 0.00011784700000000078, 0.00011843100000000217, 0.0001184300000000027, 0.00011795800000000134, 0.00011769400000000152, 0.00011786100000000382, 0.00011784799999999679, 0.00011841599999999619]</msg>
<status status="PASS" starttime="20201030 18:28:29.474" endtime="20201030 18:28:29.477"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.470" endtime="20201030 18:28:29.478"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:29.482" endtime="20201030 18:28:29.501"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.480" endtime="20201030 18:28:29.502"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.479" endtime="20201030 18:28:29.502"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.116" endtime="20201030 18:28:29.502"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.115" endtime="20201030 18:28:29.502"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:29.511" endtime="20201030 18:28:29.532"></status>
</kw>
<msg timestamp="20201030 18:28:29.532" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:29.510" endtime="20201030 18:28:29.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:29.535" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:29.533" endtime="20201030 18:28:29.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:29.536" endtime="20201030 18:28:29.537"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.507" endtime="20201030 18:28:29.538"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.505" endtime="20201030 18:28:29.538"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:29.545" endtime="20201030 18:28:29.840"></status>
</kw>
<msg timestamp="20201030 18:28:29.847" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021722861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021842319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:29.544" endtime="20201030 18:28:29.847"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:29.865" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021722861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021842319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:29.849" endtime="20201030 18:28:29.866"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:29.867" endtime="20201030 18:28:29.871"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.541" endtime="20201030 18:28:29.872"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.539" endtime="20201030 18:28:29.873"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:29.881" level="INFO">${RESULT} = [{'diff': 0.00011945799999999937}, {'diff': 0.00011859700000000153}, {'diff': 0.00011890300000000006}, {'diff': 0.00011901400000000062}, {'diff': 0.00011890200000000059}, {'diff': 0.000119528000000000...</msg>
<status status="PASS" starttime="20201030 18:28:29.875" endtime="20201030 18:28:29.882"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:29.897" level="INFO">${ACCURACY} = {'diff': [0.00011945799999999937, 0.00011859700000000153, 0.00011890300000000006, 0.00011901400000000062, 0.00011890200000000059, 0.00011952800000000069, 0.00011919399999999955, 0.00011867999999999948...</msg>
<status status="PASS" starttime="20201030 18:28:29.884" endtime="20201030 18:28:29.897"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:29.906" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201030 18:28:29.904" endtime="20201030 18:28:29.907"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:29.911" level="INFO">VALUE: [0.00011945799999999937, 0.00011859700000000153, 0.00011890300000000006, 0.00011901400000000062, 0.00011890200000000059, 0.00011952800000000069, 0.00011919399999999955, 0.00011867999999999948, 0.00011890300000000006, 0.00011883399999999822, 0.0001187500000000008, 0.00011915299999999684, 0.00011858400000000144, 0.00011895900000000181, 0.00011858399999999797, 0.00011872200000000166, 0.00011948600000000198, 0.00011857000000000187, 0.00011933299999999925, 0.0001190699999999989, 0.00011890300000000006, 0.00011866699999999938, 0.00011947299999999841, 0.00011857000000000187, 0.00011872299999999766, 0.00011952800000000069, 0.00011884699999999832, 0.00011902800000000019, 0.00011909800000000151, 0.00011950000000000155, 0.0001187089999999981, 0.00011944500000000274, 0.00011933299999999925, 0.00011904200000000323, 0.00011861099999999763, 0.00011922199999999869, 0.00011854199999999926, 0.000118695000000002, 0.00011906899999999943, 0.00011949999999999808, 0.00011927700000000097, 0.00011952800000000069, 0.00011870800000000209, 0.00011918099999999945, 0.00011924999999999783, 0.00011947199999999894, 0.00011936100000000185, 0.00011949999999999808, 0.000119389000000001, 0.0001187500000000008]</msg>
<status status="PASS" starttime="20201030 18:28:29.908" endtime="20201030 18:28:29.913"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.898" endtime="20201030 18:28:29.913"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:29.917" endtime="20201030 18:28:29.936"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.915" endtime="20201030 18:28:29.937"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.914" endtime="20201030 18:28:29.937"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.503" endtime="20201030 18:28:29.938"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.503" endtime="20201030 18:28:29.938"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:29.950" endtime="20201030 18:28:29.972"></status>
</kw>
<msg timestamp="20201030 18:28:29.972" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:29.948" endtime="20201030 18:28:29.973"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:29.975" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:29.973" endtime="20201030 18:28:29.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:29.976" endtime="20201030 18:28:29.977"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.944" endtime="20201030 18:28:29.978"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.941" endtime="20201030 18:28:29.978"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:29.985" endtime="20201030 18:28:30.272"></status>
</kw>
<msg timestamp="20201030 18:28:30.275" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026226792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026347319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:29.983" endtime="20201030 18:28:30.275"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:30.283" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026226792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026347319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:30.276" endtime="20201030 18:28:30.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:30.285" endtime="20201030 18:28:30.286"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.981" endtime="20201030 18:28:30.287"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.979" endtime="20201030 18:28:30.287"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:30.291" level="INFO">${RESULT} = [{'diff': 0.00012052700000000222}, {'diff': 0.0001204310000000007}, {'diff': 0.00012034799999999929}, {'diff': 0.00012013900000000174}, {'diff': 0.00012051299999999918}, {'diff': 0.0001205979999999995...</msg>
<status status="PASS" starttime="20201030 18:28:30.288" endtime="20201030 18:28:30.291"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:30.295" level="INFO">${ACCURACY} = {'diff': [0.00012052700000000222, 0.0001204310000000007, 0.00012034799999999929, 0.00012013900000000174, 0.00012051299999999918, 0.00012059799999999954, 0.0001199029999999976, 0.0001202639999999984, 0...</msg>
<status status="PASS" starttime="20201030 18:28:30.292" endtime="20201030 18:28:30.295"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:30.300" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201030 18:28:30.299" endtime="20201030 18:28:30.300"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:30.302" level="INFO">VALUE: [0.00012052700000000222, 0.0001204310000000007, 0.00012034799999999929, 0.00012013900000000174, 0.00012051299999999918, 0.00012059799999999954, 0.0001199029999999976, 0.0001202639999999984, 0.00011984799999999879, 0.00012022299999999916, 0.00012041599999999819, 0.00012036100000000285, 0.00011991600000000116, 0.00012038899999999852, 0.00011966700000000038, 0.0001199310000000002, 0.00011990300000000106, 0.00011958400000000244, 0.0001202089999999996, 0.00012016600000000141, 0.00012029199999999754, 0.00011991700000000063, 0.00011970799999999962, 0.00011984699999999932, 0.00012015300000000131, 0.00012051399999999865, 0.00011984699999999932, 0.00012020800000000012, 0.00011963900000000471, 0.00012044399999999733, 0.00011958399999999897, 0.00011993099999999673, 0.00011983399999999922, 0.00012020900000000306, 0.00012054200000000126, 0.00011986100000000582, 0.0001195699999999994, 0.00011968099999999648, 0.00012052800000000169, 0.00011983399999999922, 0.00011977800000000094, 0.00011966700000000385, 0.00011986099999999889, 0.00011980600000000008, 0.00011961099999999864, 0.00012033300000000025, 0.00011983299999999975, 0.000119777999999994, 0.00011984800000000573, 0.00011972300000000213]</msg>
<status status="PASS" starttime="20201030 18:28:30.301" endtime="20201030 18:28:30.303"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.296" endtime="20201030 18:28:30.303"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:30.307" endtime="20201030 18:28:30.326"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.305" endtime="20201030 18:28:30.327"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.304" endtime="20201030 18:28:30.327"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.939" endtime="20201030 18:28:30.328"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.938" endtime="20201030 18:28:30.328"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:30.336" endtime="20201030 18:28:30.358"></status>
</kw>
<msg timestamp="20201030 18:28:30.359" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:30.335" endtime="20201030 18:28:30.359"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:30.361" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:30.360" endtime="20201030 18:28:30.362"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:30.362" endtime="20201030 18:28:30.364"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.332" endtime="20201030 18:28:30.364"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.330" endtime="20201030 18:28:30.365"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:30.372" endtime="20201030 18:28:30.658"></status>
</kw>
<msg timestamp="20201030 18:28:30.661" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022464597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022585861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:30.370" endtime="20201030 18:28:30.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:30.669" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022464597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022585861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:30.662" endtime="20201030 18:28:30.670"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:30.671" endtime="20201030 18:28:30.672"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.367" endtime="20201030 18:28:30.673"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.365" endtime="20201030 18:28:30.673"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:30.677" level="INFO">${RESULT} = [{'diff': 0.0001212639999999994}, {'diff': 0.00012159700000000107}, {'diff': 0.00012145800000000137}, {'diff': 0.0001214310000000017}, {'diff': 0.00012133300000000125}, {'diff': 0.00012150000000000008...</msg>
<status status="PASS" starttime="20201030 18:28:30.674" endtime="20201030 18:28:30.677"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:30.681" level="INFO">${ACCURACY} = {'diff': [0.0001212639999999994, 0.00012159700000000107, 0.00012145800000000137, 0.0001214310000000017, 0.00012133300000000125, 0.00012150000000000008, 0.00012134700000000082, 0.00012133400000000072, ...</msg>
<status status="PASS" starttime="20201030 18:28:30.678" endtime="20201030 18:28:30.681"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:30.686" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201030 18:28:30.685" endtime="20201030 18:28:30.686"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:30.688" level="INFO">VALUE: [0.0001212639999999994, 0.00012159700000000107, 0.00012145800000000137, 0.0001214310000000017, 0.00012133300000000125, 0.00012150000000000008, 0.00012134700000000082, 0.00012133400000000072, 0.00012097199999999697, 0.00012154099999999932, 0.00012104100000000229, 0.0001206249999999992, 0.0001214579999999979, 0.00012065299999999834, 0.00012136099999999692, 0.00012087499999999946, 0.00012129099999999907, 0.00012052799999999822, 0.00012116599999999894, 0.00012147200000000094, 0.00012141700000000213, 0.00012077799999999847, 0.00012080599999999761, 0.00012147200000000094, 0.00012138899999999953, 0.00012088899999999903, 0.00012120800000000112, 0.00012122200000000069, 0.00012136099999999692, 0.00012065300000000181, 0.00012140199999999962, 0.00012074999999999933, 0.00012124999999999983, 0.0001209029999999986, 0.00012104199999999829, 0.00012119400000000155, 0.00012143099999999823, 0.00012104199999999829, 0.00012073599999999976, 0.000120776999999999, 0.00012154099999999932, 0.00012120800000000112, 0.00012063899999999877, 0.00012143099999999823, 0.00012120899999999712, 0.00012134700000000082, 0.00012152799999999922, 0.00012066700000000138, 0.0001207639999999989, 0.00012087499999999946]</msg>
<status status="PASS" starttime="20201030 18:28:30.687" endtime="20201030 18:28:30.689"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.682" endtime="20201030 18:28:30.690"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:30.694" endtime="20201030 18:28:30.713"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.692" endtime="20201030 18:28:30.714"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.691" endtime="20201030 18:28:30.714"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.329" endtime="20201030 18:28:30.714"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.328" endtime="20201030 18:28:30.715"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:30.723" endtime="20201030 18:28:30.744"></status>
</kw>
<msg timestamp="20201030 18:28:30.745" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:30.722" endtime="20201030 18:28:30.745"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:30.747" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:30.746" endtime="20201030 18:28:30.748"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:30.748" endtime="20201030 18:28:30.750"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.719" endtime="20201030 18:28:30.751"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.717" endtime="20201030 18:28:30.751"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:30.757" endtime="20201030 18:28:31.044"></status>
</kw>
<msg timestamp="20201030 18:28:31.047" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021818736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0219415, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:28:30.756" endtime="20201030 18:28:31.047"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:31.055" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021818736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0219415, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:28:31.048" endtime="20201030 18:28:31.055"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:31.056" endtime="20201030 18:28:31.058"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.753" endtime="20201030 18:28:31.058"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.752" endtime="20201030 18:28:31.059"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:31.063" level="INFO">${RESULT} = [{'diff': 0.0001227640000000009}, {'diff': 0.0001219579999999984}, {'diff': 0.00012215299999999985}, {'diff': 0.00012177799999999947}, {'diff': 0.00012220800000000212}, {'diff': 0.00012202799999999972...</msg>
<status status="PASS" starttime="20201030 18:28:31.059" endtime="20201030 18:28:31.063"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:31.067" level="INFO">${ACCURACY} = {'diff': [0.0001227640000000009, 0.0001219579999999984, 0.00012215299999999985, 0.00012177799999999947, 0.00012220800000000212, 0.00012202799999999972, 0.00012193000000000273, 0.00012184700000000132, ...</msg>
<status status="PASS" starttime="20201030 18:28:31.063" endtime="20201030 18:28:31.068"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:31.072" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201030 18:28:31.071" endtime="20201030 18:28:31.072"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:31.074" level="INFO">VALUE: [0.0001227640000000009, 0.0001219579999999984, 0.00012215299999999985, 0.00012177799999999947, 0.00012220800000000212, 0.00012202799999999972, 0.00012193000000000273, 0.00012184700000000132, 0.0001216380000000003, 0.0001219029999999996, 0.00012238900000000053, 0.00012195899999999787, 0.00012187500000000046, 0.00012244399999999933, 0.0001224030000000001, 0.00012183299999999828, 0.00012237500000000096, 0.00012183300000000175, 0.00012247200000000194, 0.00012187500000000046, 0.00012172200000000119, 0.00012250000000000108, 0.00012236100000000139, 0.00012193000000000273, 0.00012200000000000058, 0.00012155600000000183, 0.0001219029999999996, 0.00012183299999999828, 0.00012170899999999762, 0.00012187500000000046, 0.00012188900000000003, 0.00012156999999999793, 0.00012201400000000015, 0.0001223059999999991, 0.0001222640000000004, 0.00012204199999999929, 0.00012155500000000236, 0.0001217639999999999, 0.00012168100000000195, 0.00012163899999999978, 0.00012202799999999972, 0.00012167999999999901, 0.00012202799999999972, 0.0001215830000000015, 0.00012198600000000101, 0.0001217639999999999, 0.00012202799999999972, 0.00012238900000000053, 0.00012155599999999836, 0.00012208400000000147]</msg>
<status status="PASS" starttime="20201030 18:28:31.073" endtime="20201030 18:28:31.075"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.068" endtime="20201030 18:28:31.076"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:31.079" endtime="20201030 18:28:31.099"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.078" endtime="20201030 18:28:31.099"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.077" endtime="20201030 18:28:31.100"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.715" endtime="20201030 18:28:31.100"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.715" endtime="20201030 18:28:31.100"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:31.109" endtime="20201030 18:28:31.130"></status>
</kw>
<msg timestamp="20201030 18:28:31.130" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:31.107" endtime="20201030 18:28:31.131"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:31.133" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:31.131" endtime="20201030 18:28:31.133"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:31.134" endtime="20201030 18:28:31.135"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.105" endtime="20201030 18:28:31.136"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.103" endtime="20201030 18:28:31.136"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:31.143" endtime="20201030 18:28:31.430"></status>
</kw>
<msg timestamp="20201030 18:28:31.433" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021606403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0217295, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:28:31.141" endtime="20201030 18:28:31.434"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:31.441" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021606403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0217295, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:28:31.434" endtime="20201030 18:28:31.442"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:31.443" endtime="20201030 18:28:31.444"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.139" endtime="20201030 18:28:31.445"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.137" endtime="20201030 18:28:31.445"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:31.449" level="INFO">${RESULT} = [{'diff': 0.0001230969999999991}, {'diff': 0.0001229030000000006}, {'diff': 0.0001230969999999991}, {'diff': 0.0001232359999999988}, {'diff': 0.00012301399999999768}, {'diff': 0.00012288899999999756},...</msg>
<status status="PASS" starttime="20201030 18:28:31.446" endtime="20201030 18:28:31.449"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:31.453" level="INFO">${ACCURACY} = {'diff': [0.0001230969999999991, 0.0001229030000000006, 0.0001230969999999991, 0.0001232359999999988, 0.00012301399999999768, 0.00012288899999999756, 0.00012280500000000014, 0.0001229030000000006, 0.0...</msg>
<status status="PASS" starttime="20201030 18:28:31.450" endtime="20201030 18:28:31.453"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:31.458" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201030 18:28:31.456" endtime="20201030 18:28:31.458"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:31.460" level="INFO">VALUE: [0.0001230969999999991, 0.0001229030000000006, 0.0001230969999999991, 0.0001232359999999988, 0.00012301399999999768, 0.00012288899999999756, 0.00012280500000000014, 0.0001229030000000006, 0.00012298599999999854, 0.00012338899999999806, 0.00012263900000000078, 0.00012258299999999903, 0.00012263900000000078, 0.00012277800000000047, 0.0001232640000000014, 0.00012263900000000078, 0.0001231389999999978, 0.0001229030000000006, 0.0001232779999999975, 0.00012352800000000122, 0.00012302800000000072, 0.00012302800000000072, 0.00012300000000000158, 0.00012338900000000153, 0.00012341700000000067, 0.0001233190000000002, 0.00012283299999999928, 0.00012336099999999892, 0.00012258299999999903, 0.00012268, 0.00012344400000000033, 0.00012288900000000103, 0.0001233060000000001, 0.00012331999999999968, 0.0001232640000000014, 0.0001234999999999986, 0.00012268, 0.0001226380000000013, 0.00012277699999999753, 0.00012316700000000042, 0.00012276399999999743, 0.00012270899999999862, 0.0001230420000000003, 0.0001231389999999978, 0.00012297200000000244, 0.00012334699999999935, 0.0001226250000000012, 0.00012350000000000208, 0.00012325000000000183, 0.00012334699999999935]</msg>
<status status="PASS" starttime="20201030 18:28:31.459" endtime="20201030 18:28:31.461"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.454" endtime="20201030 18:28:31.461"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:31.465" endtime="20201030 18:28:31.484"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.464" endtime="20201030 18:28:31.485"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.462" endtime="20201030 18:28:31.485"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.101" endtime="20201030 18:28:31.486"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.101" endtime="20201030 18:28:31.486"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:31.495" endtime="20201030 18:28:31.517"></status>
</kw>
<msg timestamp="20201030 18:28:31.517" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:31.493" endtime="20201030 18:28:31.517"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:31.520" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:31.518" endtime="20201030 18:28:31.520"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:31.521" endtime="20201030 18:28:31.523"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.490" endtime="20201030 18:28:31.523"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.488" endtime="20201030 18:28:31.524"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:31.530" endtime="20201030 18:28:31.816"></status>
</kw>
<msg timestamp="20201030 18:28:31.819" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022799806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022924125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:31.528" endtime="20201030 18:28:31.819"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:31.827" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022799806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022924125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:31.820" endtime="20201030 18:28:31.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:31.828" endtime="20201030 18:28:31.830"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.526" endtime="20201030 18:28:31.831"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.524" endtime="20201030 18:28:31.831"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:31.835" level="INFO">${RESULT} = [{'diff': 0.0001243190000000012}, {'diff': 0.00012369500000000005}, {'diff': 0.00012368100000000048}, {'diff': 0.00012405600000000086}, {'diff': 0.0001236250000000022}, {'diff': 0.00012448600000000004...</msg>
<status status="PASS" starttime="20201030 18:28:31.832" endtime="20201030 18:28:31.835"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:31.839" level="INFO">${ACCURACY} = {'diff': [0.0001243190000000012, 0.00012369500000000005, 0.00012368100000000048, 0.00012405600000000086, 0.0001236250000000022, 0.00012448600000000004, 0.00012362499999999874, 0.00012422200000000022, ...</msg>
<status status="PASS" starttime="20201030 18:28:31.836" endtime="20201030 18:28:31.839"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:31.843" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201030 18:28:31.842" endtime="20201030 18:28:31.844"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:31.846" level="INFO">VALUE: [0.0001243190000000012, 0.00012369500000000005, 0.00012368100000000048, 0.00012405600000000086, 0.0001236250000000022, 0.00012448600000000004, 0.00012362499999999874, 0.00012422200000000022, 0.00012370800000000015, 0.00012447200000000047, 0.00012387499999999899, 0.00012408300000000053, 0.0001239580000000004, 0.00012394400000000083, 0.0001241800000000015, 0.00012394400000000083, 0.00012427800000000197, 0.00012408300000000053, 0.00012366600000000144, 0.00012424999999999936, 0.00012441700000000167, 0.00012362499999999874, 0.00012419400000000108, 0.00012390299999999813, 0.00012384699999999985, 0.0001241389999999988, 0.00012451400000000265, 0.00012370800000000015, 0.00012388900000000203, 0.00012361099999999917, 0.00012445799999999743, 0.0001244580000000009, 0.00012390299999999813, 0.00012361099999999917, 0.00012358300000000003, 0.00012415299999999838, 0.00012358400000000297, 0.00012451400000000265, 0.00012365299999999788, 0.0001244030000000021, 0.00012358400000000297, 0.00012395899999999987, 0.00012382000000000018, 0.00012359800000000254, 0.0001244030000000021, 0.0001244580000000009, 0.0001239450000000003, 0.00012443100000000124, 0.00012416700000000142, 0.00012395899999999987]</msg>
<status status="PASS" starttime="20201030 18:28:31.844" endtime="20201030 18:28:31.847"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.840" endtime="20201030 18:28:31.848"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:31.852" endtime="20201030 18:28:31.871"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.850" endtime="20201030 18:28:31.872"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.849" endtime="20201030 18:28:31.872"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.487" endtime="20201030 18:28:31.872"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.486" endtime="20201030 18:28:31.873"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:31.882" endtime="20201030 18:28:31.903"></status>
</kw>
<msg timestamp="20201030 18:28:31.903" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:31.880" endtime="20201030 18:28:31.903"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:31.906" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:31.904" endtime="20201030 18:28:31.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:31.907" endtime="20201030 18:28:31.908"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.877" endtime="20201030 18:28:31.909"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.875" endtime="20201030 18:28:31.909"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:31.916" endtime="20201030 18:28:32.202"></status>
</kw>
<msg timestamp="20201030 18:28:32.205" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022142375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02226825, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:28:31.914" endtime="20201030 18:28:32.205"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:32.212" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022142375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02226825, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:28:32.206" endtime="20201030 18:28:32.213"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:32.214" endtime="20201030 18:28:32.215"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.912" endtime="20201030 18:28:32.216"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.910" endtime="20201030 18:28:32.216"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:32.220" level="INFO">${RESULT} = [{'diff': 0.00012587500000000099}, {'diff': 0.0001254450000000018}, {'diff': 0.00012512500000000024}, {'diff': 0.00012494400000000183}, {'diff': 0.000124680000000002}, {'diff': 0.00012525000000000036}...</msg>
<status status="PASS" starttime="20201030 18:28:32.217" endtime="20201030 18:28:32.220"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:32.225" level="INFO">${ACCURACY} = {'diff': [0.00012587500000000099, 0.0001254450000000018, 0.00012512500000000024, 0.00012494400000000183, 0.000124680000000002, 0.00012525000000000036, 0.00012532000000000168, 0.00012461100000000017, 0...</msg>
<status status="PASS" starttime="20201030 18:28:32.221" endtime="20201030 18:28:32.225"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:32.230" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201030 18:28:32.229" endtime="20201030 18:28:32.230"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:32.232" level="INFO">VALUE: [0.00012587500000000099, 0.0001254450000000018, 0.00012512500000000024, 0.00012494400000000183, 0.000124680000000002, 0.00012525000000000036, 0.00012532000000000168, 0.00012461100000000017, 0.0001249580000000014, 0.00012457000000000093, 0.00012476399999999943, 0.00012525000000000036, 0.00012551400000000018, 0.00012455500000000189, 0.00012488899999999956, 0.0001254299999999993, 0.00012488899999999956, 0.00012551400000000018, 0.0001251389999999998, 0.00012526399999999993, 0.00012536099999999745, 0.0001246519999999994, 0.0001250000000000001, 0.00012527700000000003, 0.00012527700000000003, 0.0001251389999999998, 0.00012501399999999968, 0.0001250550000000024, 0.00012525000000000036, 0.00012497200000000097, 0.00012530500000000264, 0.0001247640000000029, 0.00012455499999999842, 0.00012525000000000036, 0.00012525000000000036, 0.00012544400000000233, 0.00012481899999999824, 0.0001252230000000007, 0.00012476399999999943, 0.00012529199999999907, 0.00012469500000000105, 0.0001249450000000013, 0.00012533400000000125, 0.00012476399999999943, 0.00012544399999999886, 0.00012488899999999956, 0.00012474999999999986, 0.0001255000000000006, 0.00012543000000000276, 0.0001252779999999995]</msg>
<status status="PASS" starttime="20201030 18:28:32.231" endtime="20201030 18:28:32.296"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.226" endtime="20201030 18:28:32.297"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:32.300" endtime="20201030 18:28:32.320"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.299" endtime="20201030 18:28:32.320"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.298" endtime="20201030 18:28:32.321"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.874" endtime="20201030 18:28:32.321"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.873" endtime="20201030 18:28:32.321"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:32.330" endtime="20201030 18:28:32.351"></status>
</kw>
<msg timestamp="20201030 18:28:32.352" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:32.329" endtime="20201030 18:28:32.352"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:32.354" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:32.353" endtime="20201030 18:28:32.354"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:32.355" endtime="20201030 18:28:32.357"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.326" endtime="20201030 18:28:32.357"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.324" endtime="20201030 18:28:32.358"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:32.365" endtime="20201030 18:28:32.652"></status>
</kw>
<msg timestamp="20201030 18:28:32.655" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021912861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022039264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:32.363" endtime="20201030 18:28:32.655"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:32.663" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021912861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022039264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:32.656" endtime="20201030 18:28:32.663"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:32.664" endtime="20201030 18:28:32.666"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.360" endtime="20201030 18:28:32.666"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.358" endtime="20201030 18:28:32.667"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:32.671" level="INFO">${RESULT} = [{'diff': 0.00012640300000000063}, {'diff': 0.000125778}, {'diff': 0.0001262780000000005}, {'diff': 0.0001262780000000005}, {'diff': 0.00012556999999999846}, {'diff': 0.00012570800000000215}, {'diff':...</msg>
<status status="PASS" starttime="20201030 18:28:32.668" endtime="20201030 18:28:32.671"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:32.675" level="INFO">${ACCURACY} = {'diff': [0.00012640300000000063, 0.000125778, 0.0001262780000000005, 0.0001262780000000005, 0.00012556999999999846, 0.00012570800000000215, 0.000125778, 0.0001256390000000003, 0.0001263190000000032, ...</msg>
<status status="PASS" starttime="20201030 18:28:32.672" endtime="20201030 18:28:32.675"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:32.679" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201030 18:28:32.678" endtime="20201030 18:28:32.680"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:32.682" level="INFO">VALUE: [0.00012640300000000063, 0.000125778, 0.0001262780000000005, 0.0001262780000000005, 0.00012556999999999846, 0.00012570800000000215, 0.000125778, 0.0001256390000000003, 0.0001263190000000032, 0.00012619499999999909, 0.00012626400000000093, 0.00012652800000000075, 0.00012634799999999835, 0.00012580499999999967, 0.00012595799999999893, 0.0001260269999999973, 0.00012637499999999802, 0.0001263889999999976, 0.00012588900000000056, 0.0001265139999999977, 0.0001264589999999989, 0.00012567999999999954, 0.00012627699999999756, 0.00012570800000000215, 0.00012576400000000043, 0.00012565299999999988, 0.00012645799999999943, 0.00012558300000000203, 0.000125778, 0.0001260000000000011, 0.0001263879999999981, 0.000125568999999999, 0.00012568099999999902, 0.00012608399999999853, 0.00012588800000000108, 0.00012570900000000162, 0.0001263199999999992, 0.00012595900000000188, 0.00012626400000000093, 0.00012562500000000074, 0.00012588900000000056, 0.00012620900000000213, 0.00012651400000000118, 0.00012638900000000106, 0.00012629200000000007, 0.00012570799999999868, 0.00012590300000000013, 0.00012598599999999807, 0.0001264170000000002, 0.00012562500000000074]</msg>
<status status="PASS" starttime="20201030 18:28:32.681" endtime="20201030 18:28:32.683"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.676" endtime="20201030 18:28:32.683"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:32.687" endtime="20201030 18:28:32.706"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.685" endtime="20201030 18:28:32.707"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.684" endtime="20201030 18:28:32.707"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.322" endtime="20201030 18:28:32.707"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.322" endtime="20201030 18:28:32.708"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:32.716" endtime="20201030 18:28:32.742"></status>
</kw>
<msg timestamp="20201030 18:28:32.743" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:32.715" endtime="20201030 18:28:32.743"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:32.748" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:32.745" endtime="20201030 18:28:32.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:32.750" endtime="20201030 18:28:32.754"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.712" endtime="20201030 18:28:32.755"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.710" endtime="20201030 18:28:32.756"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:32.769" endtime="20201030 18:28:33.062"></status>
</kw>
<msg timestamp="20201030 18:28:33.065" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022724611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022852375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:32.766" endtime="20201030 18:28:33.065"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:33.073" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022724611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022852375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:33.066" endtime="20201030 18:28:33.073"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:33.074" endtime="20201030 18:28:33.076"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.761" endtime="20201030 18:28:33.077"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.757" endtime="20201030 18:28:33.077"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:33.081" level="INFO">${RESULT} = [{'diff': 0.00012776400000000243}, {'diff': 0.00012748699999999905}, {'diff': 0.00012665300000000088}, {'diff': 0.0001265559999999999}, {'diff': 0.00012676400000000143}, {'diff': 0.0001274589999999999...</msg>
<status status="PASS" starttime="20201030 18:28:33.078" endtime="20201030 18:28:33.081"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:33.085" level="INFO">${ACCURACY} = {'diff': [0.00012776400000000243, 0.00012748699999999905, 0.00012665300000000088, 0.0001265559999999999, 0.00012676400000000143, 0.0001274589999999999, 0.0001268199999999997, 0.00012687499999999852, 0...</msg>
<status status="PASS" starttime="20201030 18:28:33.082" endtime="20201030 18:28:33.085"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:33.089" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201030 18:28:33.088" endtime="20201030 18:28:33.090"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:33.092" level="INFO">VALUE: [0.00012776400000000243, 0.00012748699999999905, 0.00012665300000000088, 0.0001265559999999999, 0.00012676400000000143, 0.0001274589999999999, 0.0001268199999999997, 0.00012687499999999852, 0.00012683399999999928, 0.0001275139999999987, 0.0001271940000000006, 0.0001272499999999989, 0.00012745800000000043, 0.0001268879999999986, 0.00012661200000000164, 0.0001275000000000026, 0.0001270560000000004, 0.0001268889999999981, 0.00012673599999999882, 0.00012702700000000178, 0.0001268889999999981, 0.00012726399999999846, 0.00012736099999999945, 0.00012730600000000064, 0.00012677799999999753, 0.00012706999999999996, 0.0001272780000000015, 0.00012726399999999846, 0.0001271390000000018, 0.00012743100000000077, 0.0001268329999999998, 0.00012719500000000009, 0.00012712499999999877, 0.00012744400000000086, 0.00012745799999999696, 0.00012673599999999882, 0.000126778000000001, 0.0001265840000000025, 0.00012694400000000036, 0.00012745800000000043, 0.00012743100000000077, 0.00012663899999999784, 0.00012754200000000132, 0.0001273330000000003, 0.00012662500000000174, 0.00012719400000000408, 0.0001274580000000039, 0.00012722200000000322, 0.00012712499999999877, 0.00012663900000000478]</msg>
<status status="PASS" starttime="20201030 18:28:33.090" endtime="20201030 18:28:33.093"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.086" endtime="20201030 18:28:33.094"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:33.098" endtime="20201030 18:28:33.117"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.096" endtime="20201030 18:28:33.119"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.095" endtime="20201030 18:28:33.119"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.709" endtime="20201030 18:28:33.120"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.708" endtime="20201030 18:28:33.120"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:33.129" endtime="20201030 18:28:33.150"></status>
</kw>
<msg timestamp="20201030 18:28:33.151" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:33.127" endtime="20201030 18:28:33.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:33.153" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:33.152" endtime="20201030 18:28:33.154"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:33.154" endtime="20201030 18:28:33.156"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.125" endtime="20201030 18:28:33.157"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.123" endtime="20201030 18:28:33.157"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:33.163" endtime="20201030 18:28:33.448"></status>
</kw>
<msg timestamp="20201030 18:28:33.451" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023463403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023591431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:33.162" endtime="20201030 18:28:33.451"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:33.459" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023463403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023591431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:33.452" endtime="20201030 18:28:33.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:33.460" endtime="20201030 18:28:33.462"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.159" endtime="20201030 18:28:33.462"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.158" endtime="20201030 18:28:33.463"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:33.467" level="INFO">${RESULT} = [{'diff': 0.00012802799999999878}, {'diff': 0.00012756899999999752}, {'diff': 0.00012770800000000068}, {'diff': 0.00012763899999999884}, {'diff': 0.00012802799999999878}, {'diff': 0.000128318999999998...</msg>
<status status="PASS" starttime="20201030 18:28:33.463" endtime="20201030 18:28:33.467"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:33.474" level="INFO">${ACCURACY} = {'diff': [0.00012802799999999878, 0.00012756899999999752, 0.00012770800000000068, 0.00012763899999999884, 0.00012802799999999878, 0.00012831899999999827, 0.00012808300000000106, 0.00012806899999999802...</msg>
<status status="PASS" starttime="20201030 18:28:33.468" endtime="20201030 18:28:33.474"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:33.479" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201030 18:28:33.478" endtime="20201030 18:28:33.479"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:33.481" level="INFO">VALUE: [0.00012802799999999878, 0.00012756899999999752, 0.00012770800000000068, 0.00012763899999999884, 0.00012802799999999878, 0.00012831899999999827, 0.00012808300000000106, 0.00012806899999999802, 0.0001276529999999984, 0.00012784700000000038, 0.0001281390000000028, 0.00012772200000000025, 0.00012852799999999928, 0.00012830600000000164, 0.00012773599999999982, 0.00012827799999999903, 0.00012783400000000028, 0.00012787499999999952, 0.0001283880000000001, 0.0001283889999999996, 0.0001282499999999999, 0.00012755599999999742, 0.0001282499999999999, 0.00012805499999999845, 0.00012770900000000016, 0.0001277369999999993, 0.00012772200000000025, 0.00012773599999999982, 0.0001283049999999987, 0.00012815300000000238, 0.00012798600000000007, 0.00012811199999999967, 0.00012762500000000274, 0.00012834700000000088, 0.00012779200000000157, 0.00012852800000000275, 0.00012808400000000053, 0.00012808300000000106, 0.00012758400000000003, 0.0001283469999999974, 0.00012852799999999928, 0.00012838900000000306, 0.00012795799999999746, 0.00012777799999999506, 0.00012795799999999746, 0.00012770899999999669, 0.0001279729999999965, 0.00012769499999999712, 0.0001277769999999956, 0.00012837500000000002]</msg>
<status status="PASS" starttime="20201030 18:28:33.480" endtime="20201030 18:28:33.482"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.475" endtime="20201030 18:28:33.483"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:33.487" endtime="20201030 18:28:33.506"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.485" endtime="20201030 18:28:33.507"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.484" endtime="20201030 18:28:33.507"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.121" endtime="20201030 18:28:33.507"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.120" endtime="20201030 18:28:33.507"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:33.516" endtime="20201030 18:28:33.537"></status>
</kw>
<msg timestamp="20201030 18:28:33.538" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:33.515" endtime="20201030 18:28:33.538"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:33.541" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:33.539" endtime="20201030 18:28:33.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:33.542" endtime="20201030 18:28:33.543"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.512" endtime="20201030 18:28:33.544"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.510" endtime="20201030 18:28:33.544"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:33.551" endtime="20201030 18:28:33.839"></status>
</kw>
<msg timestamp="20201030 18:28:33.842" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021802958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021932389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:33.549" endtime="20201030 18:28:33.842"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:33.850" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021802958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021932389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:33.843" endtime="20201030 18:28:33.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:33.852" endtime="20201030 18:28:33.853"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.547" endtime="20201030 18:28:33.854"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.545" endtime="20201030 18:28:33.854"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:33.858" level="INFO">${RESULT} = [{'diff': 0.0001294309999999993}, {'diff': 0.00012934800000000135}, {'diff': 0.00012947199999999853}, {'diff': 0.00012931899999999927}, {'diff': 0.00012919399999999914}, {'diff': 0.0001288479999999973...</msg>
<status status="PASS" starttime="20201030 18:28:33.855" endtime="20201030 18:28:33.858"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:33.862" level="INFO">${ACCURACY} = {'diff': [0.0001294309999999993, 0.00012934800000000135, 0.00012947199999999853, 0.00012931899999999927, 0.00012919399999999914, 0.00012884799999999738, 0.0001288469999999979, 0.00012886100000000095, ...</msg>
<status status="PASS" starttime="20201030 18:28:33.859" endtime="20201030 18:28:33.863"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:33.867" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201030 18:28:33.866" endtime="20201030 18:28:33.867"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:33.869" level="INFO">VALUE: [0.0001294309999999993, 0.00012934800000000135, 0.00012947199999999853, 0.00012931899999999927, 0.00012919399999999914, 0.00012884799999999738, 0.0001288469999999979, 0.00012886100000000095, 0.00012941600000000025, 0.00012931899999999927, 0.00012936100000000145, 0.0001287500000000004, 0.0001287500000000004, 0.00012931899999999927, 0.0001288330000000018, 0.00012919500000000209, 0.00012913900000000034, 0.00012948600000000157, 0.00012934799999999788, 0.00012876399999999996, 0.00012940300000000016, 0.00012859700000000113, 0.00012872199999999778, 0.00012883400000000128, 0.00012947300000000148, 0.00012862500000000027, 0.0001293339999999983, 0.00012927800000000003, 0.0001286529999999994, 0.00012883400000000128, 0.0001295270000000008, 0.00012890200000000018, 0.0001290829999999986, 0.00012859700000000113, 0.00012940300000000016, 0.00012872200000000125, 0.00012938899999999712, 0.0001287370000000003, 0.00012854099999999938, 0.00012897199999999803, 0.00012936200000000092, 0.00012912500000000077, 0.00012913900000000034, 0.00012887500000000052, 0.0001290140000000002, 0.0001295270000000008, 0.0001292079999999987, 0.0001290560000000024, 0.00012862500000000027, 0.0001292370000000008]</msg>
<status status="PASS" starttime="20201030 18:28:33.868" endtime="20201030 18:28:33.870"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.863" endtime="20201030 18:28:33.871"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:33.874" endtime="20201030 18:28:33.894"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.873" endtime="20201030 18:28:33.894"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.872" endtime="20201030 18:28:33.895"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.508" endtime="20201030 18:28:33.895"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.508" endtime="20201030 18:28:33.895"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:33.905" endtime="20201030 18:28:33.927"></status>
</kw>
<msg timestamp="20201030 18:28:33.928" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:33.903" endtime="20201030 18:28:33.928"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:33.930" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:33.929" endtime="20201030 18:28:33.931"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:33.931" endtime="20201030 18:28:33.933"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.900" endtime="20201030 18:28:33.934"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.897" endtime="20201030 18:28:33.934"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:33.940" endtime="20201030 18:28:34.226"></status>
</kw>
<msg timestamp="20201030 18:28:34.230" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023833097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023963889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:33.939" endtime="20201030 18:28:34.230"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:34.239" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023833097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023963889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:34.231" endtime="20201030 18:28:34.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:34.240" endtime="20201030 18:28:34.242"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.936" endtime="20201030 18:28:34.242"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.935" endtime="20201030 18:28:34.243"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:34.247" level="INFO">${RESULT} = [{'diff': 0.00013079199999999763}, {'diff': 0.00013036099999999898}, {'diff': 0.00013047199999999953}, {'diff': 0.00013037500000000202}, {'diff': 0.00013036099999999898}, {'diff': 0.000129944999999999...</msg>
<status status="PASS" starttime="20201030 18:28:34.244" endtime="20201030 18:28:34.247"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:34.251" level="INFO">${ACCURACY} = {'diff': [0.00013079199999999763, 0.00013036099999999898, 0.00013047199999999953, 0.00013037500000000202, 0.00013036099999999898, 0.00012994499999999937, 0.0001296249999999978, 0.00012952800000000028,...</msg>
<status status="PASS" starttime="20201030 18:28:34.248" endtime="20201030 18:28:34.251"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:34.255" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201030 18:28:34.254" endtime="20201030 18:28:34.256"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:34.258" level="INFO">VALUE: [0.00013079199999999763, 0.00013036099999999898, 0.00013047199999999953, 0.00013037500000000202, 0.00013036099999999898, 0.00012994499999999937, 0.0001296249999999978, 0.00012952800000000028, 0.00013031900000000027, 0.00012984799999999838, 0.00013008300000000306, 0.00012980599999999967, 0.0001296249999999978, 0.0001296110000000017, 0.00012974999999999792, 0.00012981999999999924, 0.0001296110000000017, 0.00013040300000000116, 0.00012973599999999835, 0.00012976400000000096, 0.00012969399999999964, 0.0001305140000000017, 0.00012981899999999977, 0.00012959700000000213, 0.0001295829999999991, 0.00013051399999999824, 0.00012981899999999977, 0.0001300140000000012, 0.0001297639999999975, 0.00013037499999999855, 0.0001299309999999998, 0.0001301110000000022, 0.00013026400000000146, 0.0001304310000000003, 0.00012973600000000182, 0.00013004200000000035, 0.00012987500000000152, 0.00013022200000000275, 0.00013038899999999812, 0.00012979199999999663, 0.0001300560000000034, 0.00012984800000000185, 0.00013013900000000134, 0.0001304859999999991, 0.00013031900000000374, 0.0001300409999999974, 0.00013049999999999867, 0.00012962500000000127, 0.00013005599999999645, 0.0001302769999999981]</msg>
<status status="PASS" starttime="20201030 18:28:34.256" endtime="20201030 18:28:34.259"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.252" endtime="20201030 18:28:34.260"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:34.264" endtime="20201030 18:28:34.283"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.262" endtime="20201030 18:28:34.284"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.261" endtime="20201030 18:28:34.284"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.896" endtime="20201030 18:28:34.284"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.895" endtime="20201030 18:28:34.284"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.682" endtime="20201030 18:28:34.284"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:34.288" endtime="20201030 18:28:34.308"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.287" endtime="20201030 18:28:34.308"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.286" endtime="20201030 18:28:34.309"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="PASS" starttime="20201030 18:27:55.616" endtime="20201030 18:28:34.309" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:34.316" endtime="20201030 18:28:34.335"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.315" endtime="20201030 18:28:34.336"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:34.349" endtime="20201030 18:28:34.361"></status>
</kw>
<msg timestamp="20201030 18:28:34.362" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:34.348" endtime="20201030 18:28:34.362"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:34.364" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:34.363" endtime="20201030 18:28:34.365"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:28:34.367" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:28:34.365" endtime="20201030 18:28:34.368"></status>
</kw>
<status status="FAIL" starttime="20201030 18:28:34.345" endtime="20201030 18:28:34.368"></status>
</kw>
<status status="FAIL" starttime="20201030 18:28:34.343" endtime="20201030 18:28:34.369"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.341" endtime="20201030 18:28:34.369"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:28:34.373" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:28:34.372" endtime="20201030 18:28:34.373"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.370" endtime="20201030 18:28:34.374"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.341" endtime="20201030 18:28:34.374"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.340" endtime="20201030 18:28:34.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:34.375" endtime="20201030 18:28:34.376"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.338" endtime="20201030 18:28:34.377"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.337" endtime="20201030 18:28:34.377"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.313" endtime="20201030 18:28:34.377"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:34.388" endtime="20201030 18:28:34.404"></status>
</kw>
<msg timestamp="20201030 18:28:34.404" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:34.387" endtime="20201030 18:28:34.404"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:34.407" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:34.405" endtime="20201030 18:28:34.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:34.408" endtime="20201030 18:28:34.409"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.384" endtime="20201030 18:28:34.410"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.381" endtime="20201030 18:28:34.410"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:34.418" endtime="20201030 18:28:34.706"></status>
</kw>
<msg timestamp="20201030 18:28:34.709" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065008486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065040653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:34.416" endtime="20201030 18:28:34.709"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:34.717" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065008486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065040653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:34.710" endtime="20201030 18:28:34.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:34.718" endtime="20201030 18:28:34.720"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.413" endtime="20201030 18:28:34.720"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.411" endtime="20201030 18:28:34.721"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:34.725" level="INFO">${RESULT} = [{'diff': 3.216699999999961e-05}, {'diff': 3.115300000000598e-05}, {'diff': 3.10970000000077e-05}, {'diff': 3.108300000000119e-05}, {'diff': 3.108300000000119e-05}, {'diff': 3.106900000000856e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:34.722" endtime="20201030 18:28:34.725"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:34.730" level="INFO">${ACCURACY} = {'diff': [3.216699999999961e-05, 3.115300000000598e-05, 3.10970000000077e-05, 3.108300000000119e-05, 3.108300000000119e-05, 3.106900000000856e-05, 3.1068999999994684e-05, 3.10970000000077e-05, 3.10970...</msg>
<status status="PASS" starttime="20201030 18:28:34.726" endtime="20201030 18:28:34.730"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:34.734" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201030 18:28:34.733" endtime="20201030 18:28:34.735"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:34.737" level="INFO">VALUE: [3.216699999999961e-05, 3.115300000000598e-05, 3.10970000000077e-05, 3.108300000000119e-05, 3.108300000000119e-05, 3.106900000000856e-05, 3.1068999999994684e-05, 3.10970000000077e-05, 3.10970000000077e-05, 3.108300000000119e-05, 3.108400000000067e-05, 3.1068999999994684e-05, 3.108300000000119e-05, 3.10979999999933e-05, 3.10979999999933e-05, 3.1068999999994684e-05, 3.108300000000119e-05, 3.108300000000119e-05, 3.1096999999993824e-05, 3.10979999999933e-05, 3.1014000000009756e-05, 3.108300000000119e-05, 3.10970000000077e-05, 3.1096999999993824e-05, 3.112500000000684e-05, 3.111100000000033e-05, 3.1082999999987315e-05, 3.108400000000067e-05, 3.104199999999502e-05, 3.108400000000067e-05, 3.1098000000007175e-05, 3.115300000000598e-05, 3.10979999999933e-05, 3.113899999999947e-05, 3.105500000000205e-05, 3.111100000000033e-05, 3.108300000000119e-05, 3.1110999999986455e-05, 3.108400000000067e-05, 3.1098000000007175e-05, 3.108400000000067e-05, 3.108400000000067e-05, 3.1068999999994684e-05, 3.10970000000077e-05, 3.111100000000033e-05, 3.106900000000856e-05, 3.1040999999995544e-05, 3.1042000000008896e-05, 3.1098000000007175e-05, 3.1124999999992964e-05]</msg>
<status status="PASS" starttime="20201030 18:28:34.736" endtime="20201030 18:28:34.737"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.731" endtime="20201030 18:28:34.738"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:34.741" endtime="20201030 18:28:34.761"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.740" endtime="20201030 18:28:34.762"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.739" endtime="20201030 18:28:34.762"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.379" endtime="20201030 18:28:34.762"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.379" endtime="20201030 18:28:34.762"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:34.772" endtime="20201030 18:28:34.786"></status>
</kw>
<msg timestamp="20201030 18:28:34.787" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:34.770" endtime="20201030 18:28:34.787"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:34.789" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:34.788" endtime="20201030 18:28:34.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:34.790" endtime="20201030 18:28:34.792"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.767" endtime="20201030 18:28:34.793"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.765" endtime="20201030 18:28:34.793"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:34.799" endtime="20201030 18:28:35.085"></status>
</kw>
<msg timestamp="20201030 18:28:35.088" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022438458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022470597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:34.798" endtime="20201030 18:28:35.088"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:35.096" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022438458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022470597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:35.089" endtime="20201030 18:28:35.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:35.097" endtime="20201030 18:28:35.099"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.795" endtime="20201030 18:28:35.099"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.794" endtime="20201030 18:28:35.100"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:35.104" level="INFO">${RESULT} = [{'diff': 3.2138999999997e-05}, {'diff': 3.108300000000119e-05}, {'diff': 3.1096999999997293e-05}, {'diff': 3.105599999999806e-05}, {'diff': 3.113899999999947e-05}, {'diff': 3.113899999999947e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:35.101" endtime="20201030 18:28:35.104"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:35.109" level="INFO">${ACCURACY} = {'diff': [3.2138999999997e-05, 3.108300000000119e-05, 3.1096999999997293e-05, 3.105599999999806e-05, 3.113899999999947e-05, 3.113899999999947e-05, 3.108300000000119e-05, 3.1068999999998154e-05, 3.1082...</msg>
<status status="PASS" starttime="20201030 18:28:35.105" endtime="20201030 18:28:35.109"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:35.113" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201030 18:28:35.112" endtime="20201030 18:28:35.114"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:35.116" level="INFO">VALUE: [3.2138999999997e-05, 3.108300000000119e-05, 3.1096999999997293e-05, 3.105599999999806e-05, 3.113899999999947e-05, 3.113899999999947e-05, 3.108300000000119e-05, 3.1068999999998154e-05, 3.1082999999997724e-05, 3.108400000000067e-05, 3.111100000000033e-05, 3.108400000000067e-05, 3.10700000000011e-05, 3.105600000000153e-05, 3.1068999999998154e-05, 3.109700000000076e-05, 3.1096999999997293e-05, 3.102800000000239e-05, 3.11249999999999e-05, 3.108300000000119e-05, 3.106999999999763e-05, 3.115299999999904e-05, 3.109700000000076e-05, 3.102799999999892e-05, 3.109700000000076e-05, 3.109700000000076e-05, 3.113900000000294e-05, 3.1096999999997293e-05, 3.1138e-05, 3.104199999999849e-05, 3.1082999999997724e-05, 3.1098000000000237e-05, 3.11249999999999e-05, 3.106900000000162e-05, 3.118100000000165e-05, 3.113899999999947e-05, 3.108300000000119e-05, 3.109700000000076e-05, 3.108300000000119e-05, 3.10700000000011e-05, 3.1098000000000237e-05, 3.108400000000067e-05, 3.10839999999972e-05, 3.108400000000067e-05, 3.106900000000162e-05, 3.1040999999999014e-05, 3.105599999999806e-05, 3.106999999999763e-05, 3.109799999999677e-05, 3.10700000000011e-05]</msg>
<status status="PASS" starttime="20201030 18:28:35.115" endtime="20201030 18:28:35.116"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.110" endtime="20201030 18:28:35.117"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:35.120" endtime="20201030 18:28:35.140"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.119" endtime="20201030 18:28:35.141"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.118" endtime="20201030 18:28:35.141"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.763" endtime="20201030 18:28:35.142"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.763" endtime="20201030 18:28:35.142"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:35.150" endtime="20201030 18:28:35.165"></status>
</kw>
<msg timestamp="20201030 18:28:35.166" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:35.149" endtime="20201030 18:28:35.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:35.168" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:35.167" endtime="20201030 18:28:35.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:35.169" endtime="20201030 18:28:35.171"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.146" endtime="20201030 18:28:35.171"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.144" endtime="20201030 18:28:35.172"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:35.178" endtime="20201030 18:28:35.466"></status>
</kw>
<msg timestamp="20201030 18:28:35.469" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022332111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02236425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:28:35.177" endtime="20201030 18:28:35.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:35.477" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022332111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02236425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:28:35.470" endtime="20201030 18:28:35.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:35.478" endtime="20201030 18:28:35.480"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.174" endtime="20201030 18:28:35.481"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.173" endtime="20201030 18:28:35.481"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:35.485" level="INFO">${RESULT} = [{'diff': 3.2138999999997e-05}, {'diff': 3.108400000000067e-05}, {'diff': 3.11249999999999e-05}, {'diff': 3.11249999999999e-05}, {'diff': 3.10700000000011e-05}, {'diff': 3.10700000000011e-05}, {'diff'...</msg>
<status status="PASS" starttime="20201030 18:28:35.482" endtime="20201030 18:28:35.485"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:35.489" level="INFO">${ACCURACY} = {'diff': [3.2138999999997e-05, 3.108400000000067e-05, 3.11249999999999e-05, 3.11249999999999e-05, 3.10700000000011e-05, 3.10700000000011e-05, 3.108300000000119e-05, 3.1082999999997724e-05, 3.108399999...</msg>
<status status="PASS" starttime="20201030 18:28:35.486" endtime="20201030 18:28:35.489"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:35.494" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201030 18:28:35.493" endtime="20201030 18:28:35.494"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:35.496" level="INFO">VALUE: [3.2138999999997e-05, 3.108400000000067e-05, 3.11249999999999e-05, 3.11249999999999e-05, 3.10700000000011e-05, 3.10700000000011e-05, 3.108300000000119e-05, 3.1082999999997724e-05, 3.10839999999972e-05, 3.113899999999947e-05, 3.108400000000067e-05, 3.11249999999999e-05, 3.11249999999999e-05, 3.109700000000076e-05, 3.108300000000119e-05, 3.10839999999972e-05, 3.1068999999998154e-05, 3.111100000000033e-05, 3.106999999999763e-05, 3.10700000000011e-05, 3.1096999999997293e-05, 3.109700000000076e-05, 3.106900000000162e-05, 3.108400000000067e-05, 3.1040999999999014e-05, 3.1096999999997293e-05, 3.111100000000033e-05, 3.108300000000119e-05, 3.108300000000119e-05, 3.10700000000011e-05, 3.10700000000011e-05, 3.109700000000076e-05, 3.109700000000076e-05, 3.108300000000119e-05, 3.113899999999947e-05, 3.108300000000119e-05, 3.101399999999935e-05, 3.109700000000076e-05, 3.108300000000119e-05, 3.1040999999999014e-05, 3.10700000000011e-05, 3.108300000000119e-05, 3.109700000000076e-05, 3.106900000000162e-05, 3.115199999999957e-05, 3.109700000000076e-05, 3.10700000000011e-05, 3.111100000000033e-05, 3.108400000000067e-05, 3.10839999999972e-05]</msg>
<status status="PASS" starttime="20201030 18:28:35.495" endtime="20201030 18:28:35.497"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.490" endtime="20201030 18:28:35.497"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:35.501" endtime="20201030 18:28:35.521"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.500" endtime="20201030 18:28:35.521"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.498" endtime="20201030 18:28:35.522"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.143" endtime="20201030 18:28:35.522"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.142" endtime="20201030 18:28:35.522"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:35.532" endtime="20201030 18:28:35.547"></status>
</kw>
<msg timestamp="20201030 18:28:35.547" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:35.530" endtime="20201030 18:28:35.547"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:35.550" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:35.548" endtime="20201030 18:28:35.550"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:35.551" endtime="20201030 18:28:35.552"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.527" endtime="20201030 18:28:35.553"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.525" endtime="20201030 18:28:35.553"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:35.560" endtime="20201030 18:28:35.845"></status>
</kw>
<msg timestamp="20201030 18:28:35.848" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022977458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023009681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:35.558" endtime="20201030 18:28:35.848"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:35.856" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022977458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023009681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:35.849" endtime="20201030 18:28:35.857"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:35.858" endtime="20201030 18:28:35.859"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.556" endtime="20201030 18:28:35.860"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.554" endtime="20201030 18:28:35.860"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:35.864" level="INFO">${RESULT} = [{'diff': 3.222300000000136e-05}, {'diff': 3.1098000000000237e-05}, {'diff': 3.11249999999999e-05}, {'diff': 3.11249999999999e-05}, {'diff': 3.10700000000011e-05}, {'diff': 3.109700000000076e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:28:35.861" endtime="20201030 18:28:35.864"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:35.868" level="INFO">${ACCURACY} = {'diff': [3.222300000000136e-05, 3.1098000000000237e-05, 3.11249999999999e-05, 3.11249999999999e-05, 3.10700000000011e-05, 3.109700000000076e-05, 3.108300000000119e-05, 3.11249999999999e-05, 3.1097000...</msg>
<status status="PASS" starttime="20201030 18:28:35.865" endtime="20201030 18:28:35.869"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:35.874" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201030 18:28:35.872" endtime="20201030 18:28:35.874"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:35.876" level="INFO">VALUE: [3.222300000000136e-05, 3.1098000000000237e-05, 3.11249999999999e-05, 3.11249999999999e-05, 3.10700000000011e-05, 3.109700000000076e-05, 3.108300000000119e-05, 3.11249999999999e-05, 3.109700000000076e-05, 3.108400000000067e-05, 3.109700000000076e-05, 3.10700000000011e-05, 3.108300000000119e-05, 3.1082999999997724e-05, 3.1068999999998154e-05, 3.118099999999818e-05, 3.105600000000153e-05, 3.109700000000076e-05, 3.10700000000011e-05, 3.109799999999677e-05, 3.108400000000067e-05, 3.10839999999972e-05, 3.10839999999972e-05, 3.108300000000119e-05, 3.109799999999677e-05, 3.108300000000119e-05, 3.1068999999998154e-05, 3.109700000000076e-05, 3.108300000000119e-05, 3.106999999999763e-05, 3.113899999999947e-05, 3.1098000000000237e-05, 3.113899999999947e-05, 3.1098000000000237e-05, 3.1082999999997724e-05, 3.1068999999998154e-05, 3.108300000000119e-05, 3.109700000000076e-05, 3.108300000000119e-05, 3.1082999999997724e-05, 3.108300000000119e-05, 3.10700000000011e-05, 3.1098000000000237e-05, 3.111100000000033e-05, 3.11249999999999e-05, 3.1068999999998154e-05, 3.109700000000076e-05, 3.108300000000119e-05, 3.106900000000162e-05, 3.10700000000011e-05]</msg>
<status status="PASS" starttime="20201030 18:28:35.875" endtime="20201030 18:28:35.877"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.869" endtime="20201030 18:28:35.878"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:35.881" endtime="20201030 18:28:35.901"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.880" endtime="20201030 18:28:35.901"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.878" endtime="20201030 18:28:35.902"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.523" endtime="20201030 18:28:35.902"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.522" endtime="20201030 18:28:35.902"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:35.911" endtime="20201030 18:28:35.926"></status>
</kw>
<msg timestamp="20201030 18:28:35.926" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:35.909" endtime="20201030 18:28:35.926"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:35.929" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:35.927" endtime="20201030 18:28:35.929"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:35.930" endtime="20201030 18:28:35.931"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.907" endtime="20201030 18:28:35.932"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.905" endtime="20201030 18:28:35.932"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:35.939" endtime="20201030 18:28:36.225"></status>
</kw>
<msg timestamp="20201030 18:28:36.228" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021721931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021754097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:35.937" endtime="20201030 18:28:36.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:36.236" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021721931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021754097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:36.229" endtime="20201030 18:28:36.236"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:36.237" endtime="20201030 18:28:36.239"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.935" endtime="20201030 18:28:36.239"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.933" endtime="20201030 18:28:36.240"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:36.244" level="INFO">${RESULT} = [{'diff': 3.216600000000014e-05}, {'diff': 3.113900000000294e-05}, {'diff': 3.1082999999997724e-05}, {'diff': 3.1082999999997724e-05}, {'diff': 3.104200000000196e-05}, {'diff': 3.109700000000076e-05},...</msg>
<status status="PASS" starttime="20201030 18:28:36.241" endtime="20201030 18:28:36.244"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:36.249" level="INFO">${ACCURACY} = {'diff': [3.216600000000014e-05, 3.113900000000294e-05, 3.1082999999997724e-05, 3.1082999999997724e-05, 3.104200000000196e-05, 3.109700000000076e-05, 3.108400000000067e-05, 3.1082999999997724e-05, 3.1...</msg>
<status status="PASS" starttime="20201030 18:28:36.245" endtime="20201030 18:28:36.249"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:36.253" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201030 18:28:36.252" endtime="20201030 18:28:36.254"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:36.256" level="INFO">VALUE: [3.216600000000014e-05, 3.113900000000294e-05, 3.1082999999997724e-05, 3.1082999999997724e-05, 3.104200000000196e-05, 3.109700000000076e-05, 3.108400000000067e-05, 3.1082999999997724e-05, 3.1111999999999806e-05, 3.1068999999998154e-05, 3.1098000000000237e-05, 3.106900000000162e-05, 3.1082999999997724e-05, 3.109700000000076e-05, 3.11249999999999e-05, 3.108400000000067e-05, 3.108400000000067e-05, 3.109700000000076e-05, 3.1098000000000237e-05, 3.108300000000119e-05, 3.1138e-05, 3.10839999999972e-05, 3.106900000000162e-05, 3.109700000000076e-05, 3.109700000000076e-05, 3.1082999999997724e-05, 3.109700000000076e-05, 3.1068999999998154e-05, 3.109700000000076e-05, 3.101399999999935e-05, 3.108300000000119e-05, 3.104199999999849e-05, 3.1068999999998154e-05, 3.109700000000076e-05, 3.108400000000067e-05, 3.105599999999806e-05, 3.109700000000076e-05, 3.1082999999997724e-05, 3.11249999999999e-05, 3.109700000000076e-05, 3.10839999999972e-05, 3.108300000000119e-05, 3.108400000000067e-05, 3.106900000000162e-05, 3.109700000000076e-05, 3.1098000000000237e-05, 3.10700000000011e-05, 3.106900000000162e-05, 3.108300000000119e-05, 3.108400000000067e-05]</msg>
<status status="PASS" starttime="20201030 18:28:36.255" endtime="20201030 18:28:36.257"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.250" endtime="20201030 18:28:36.257"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:36.261" endtime="20201030 18:28:36.280"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.259" endtime="20201030 18:28:36.281"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.258" endtime="20201030 18:28:36.281"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.903" endtime="20201030 18:28:36.282"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.902" endtime="20201030 18:28:36.282"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:36.291" endtime="20201030 18:28:36.305"></status>
</kw>
<msg timestamp="20201030 18:28:36.306" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:36.289" endtime="20201030 18:28:36.306"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:36.308" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:36.307" endtime="20201030 18:28:36.309"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:36.310" endtime="20201030 18:28:36.311"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.286" endtime="20201030 18:28:36.312"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.284" endtime="20201030 18:28:36.312"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:36.319" endtime="20201030 18:28:36.603"></status>
</kw>
<msg timestamp="20201030 18:28:36.606" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021826931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021864014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:36.317" endtime="20201030 18:28:36.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:36.614" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021826931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021864014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:36.607" endtime="20201030 18:28:36.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:36.615" endtime="20201030 18:28:36.617"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.314" endtime="20201030 18:28:36.617"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.313" endtime="20201030 18:28:36.618"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:36.622" level="INFO">${RESULT} = [{'diff': 3.7083000000000255e-05}, {'diff': 3.6012999999997936e-05}, {'diff': 3.594499999999903e-05}, {'diff': 3.59719999999987e-05}, {'diff': 3.598600000000174e-05}, {'diff': 3.600000000000131e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:28:36.619" endtime="20201030 18:28:36.622"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:36.626" level="INFO">${ACCURACY} = {'diff': [3.7083000000000255e-05, 3.6012999999997936e-05, 3.594499999999903e-05, 3.59719999999987e-05, 3.598600000000174e-05, 3.600000000000131e-05, 3.599999999999784e-05, 3.599999999999784e-05, 3.600...</msg>
<status status="PASS" starttime="20201030 18:28:36.623" endtime="20201030 18:28:36.626"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:36.630" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201030 18:28:36.629" endtime="20201030 18:28:36.631"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:36.633" level="INFO">VALUE: [3.7083000000000255e-05, 3.6012999999997936e-05, 3.594499999999903e-05, 3.59719999999987e-05, 3.598600000000174e-05, 3.600000000000131e-05, 3.599999999999784e-05, 3.599999999999784e-05, 3.600000000000131e-05, 3.600000000000131e-05, 3.601400000000088e-05, 3.599999999999784e-05, 3.593099999999946e-05, 3.599999999999784e-05, 3.59580000000026e-05, 3.601400000000088e-05, 3.602800000000045e-05, 3.597200000000217e-05, 3.608399999999873e-05, 3.600000000000131e-05, 3.599999999999784e-05, 3.601400000000088e-05, 3.602800000000045e-05, 3.601400000000088e-05, 3.1098000000000237e-05, 3.601399999999741e-05, 3.601400000000088e-05, 3.599999999999784e-05, 3.601400000000088e-05, 3.600000000000131e-05, 3.594399999999956e-05, 3.598700000000121e-05, 3.606999999999916e-05, 3.597200000000217e-05, 3.601400000000088e-05, 3.59719999999987e-05, 3.601399999999741e-05, 3.601400000000088e-05, 3.600000000000131e-05, 3.601400000000088e-05, 3.602800000000045e-05, 3.6068999999999685e-05, 3.600000000000131e-05, 3.598599999999827e-05, 3.598600000000174e-05, 3.601400000000088e-05, 3.602800000000045e-05, 3.601400000000088e-05, 3.601400000000088e-05, 3.602800000000045e-05]</msg>
<status status="PASS" starttime="20201030 18:28:36.632" endtime="20201030 18:28:36.634"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.627" endtime="20201030 18:28:36.634"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:36.638" endtime="20201030 18:28:36.657"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.637" endtime="20201030 18:28:36.658"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.635" endtime="20201030 18:28:36.658"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.283" endtime="20201030 18:28:36.659"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.282" endtime="20201030 18:28:36.659"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:36.668" endtime="20201030 18:28:36.686"></status>
</kw>
<msg timestamp="20201030 18:28:36.687" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:36.666" endtime="20201030 18:28:36.687"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:36.689" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:36.688" endtime="20201030 18:28:36.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:36.690" endtime="20201030 18:28:36.692"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.664" endtime="20201030 18:28:36.693"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.661" endtime="20201030 18:28:36.693"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:36.699" endtime="20201030 18:28:36.985"></status>
</kw>
<msg timestamp="20201030 18:28:36.988" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025339778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025376833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:36.698" endtime="20201030 18:28:36.988"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:36.996" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025339778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025376833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:36.989" endtime="20201030 18:28:36.996"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:36.997" endtime="20201030 18:28:36.999"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.695" endtime="20201030 18:28:36.999"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.694" endtime="20201030 18:28:37.000"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:37.004" level="INFO">${RESULT} = [{'diff': 3.7055000000001115e-05}, {'diff': 3.600000000000131e-05}, {'diff': 3.598600000000174e-05}, {'diff': 3.6012999999997936e-05}, {'diff': 3.601400000000088e-05}, {'diff': 3.599999999999784e-05},...</msg>
<status status="PASS" starttime="20201030 18:28:37.001" endtime="20201030 18:28:37.004"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:37.008" level="INFO">${ACCURACY} = {'diff': [3.7055000000001115e-05, 3.600000000000131e-05, 3.598600000000174e-05, 3.6012999999997936e-05, 3.601400000000088e-05, 3.599999999999784e-05, 3.598600000000174e-05, 3.598599999999827e-05, 3.60...</msg>
<status status="PASS" starttime="20201030 18:28:37.005" endtime="20201030 18:28:37.008"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:37.012" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201030 18:28:37.011" endtime="20201030 18:28:37.013"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:37.015" level="INFO">VALUE: [3.7055000000001115e-05, 3.600000000000131e-05, 3.598600000000174e-05, 3.6012999999997936e-05, 3.601400000000088e-05, 3.599999999999784e-05, 3.598600000000174e-05, 3.598599999999827e-05, 3.601400000000088e-05, 3.598699999999774e-05, 3.599999999999784e-05, 3.601400000000088e-05, 3.599999999999784e-05, 3.600000000000131e-05, 3.600000000000131e-05, 3.599999999999784e-05, 3.59719999999987e-05, 3.598599999999827e-05, 3.598600000000174e-05, 3.599999999999784e-05, 3.598699999999774e-05, 3.598600000000174e-05, 3.598599999999827e-05, 3.598600000000174e-05, 3.599999999999784e-05, 3.599999999999784e-05, 3.59719999999987e-05, 3.601400000000088e-05, 3.602799999999698e-05, 3.598600000000174e-05, 3.599999999999784e-05, 3.597200000000217e-05, 3.601400000000088e-05, 3.600000000000131e-05, 3.599999999999784e-05, 3.599999999999784e-05, 3.598700000000121e-05, 3.600000000000131e-05, 3.600000000000131e-05, 3.593099999999946e-05, 3.598599999999827e-05, 3.600000000000131e-05, 3.600000000000131e-05, 3.595900000000207e-05, 3.602800000000045e-05, 3.597299999999817e-05, 3.602800000000045e-05, 3.601400000000088e-05, 3.601400000000088e-05, 3.601400000000088e-05]</msg>
<status status="PASS" starttime="20201030 18:28:37.013" endtime="20201030 18:28:37.016"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.009" endtime="20201030 18:28:37.017"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:37.021" endtime="20201030 18:28:37.040"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.019" endtime="20201030 18:28:37.041"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.018" endtime="20201030 18:28:37.041"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.660" endtime="20201030 18:28:37.041"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.659" endtime="20201030 18:28:37.042"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:37.050" endtime="20201030 18:28:37.065"></status>
</kw>
<msg timestamp="20201030 18:28:37.066" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:37.049" endtime="20201030 18:28:37.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:37.068" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:37.067" endtime="20201030 18:28:37.068"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:37.069" endtime="20201030 18:28:37.071"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.046" endtime="20201030 18:28:37.071"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.044" endtime="20201030 18:28:37.072"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:37.078" endtime="20201030 18:28:37.364"></status>
</kw>
<msg timestamp="20201030 18:28:37.367" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021738292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021775375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:37.077" endtime="20201030 18:28:37.367"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:37.375" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021738292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021775375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:37.368" endtime="20201030 18:28:37.375"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:37.376" endtime="20201030 18:28:37.378"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.074" endtime="20201030 18:28:37.378"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.072" endtime="20201030 18:28:37.379"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:37.383" level="INFO">${RESULT} = [{'diff': 3.7083000000000255e-05}, {'diff': 3.598600000000174e-05}, {'diff': 3.601400000000088e-05}, {'diff': 3.601400000000088e-05}, {'diff': 3.602800000000045e-05}, {'diff': 3.601400000000088e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:28:37.379" endtime="20201030 18:28:37.383"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:37.388" level="INFO">${ACCURACY} = {'diff': [3.7083000000000255e-05, 3.598600000000174e-05, 3.601400000000088e-05, 3.601400000000088e-05, 3.602800000000045e-05, 3.601400000000088e-05, 3.601400000000088e-05, 3.598599999999827e-05, 3.594...</msg>
<status status="PASS" starttime="20201030 18:28:37.384" endtime="20201030 18:28:37.388"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:37.392" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201030 18:28:37.391" endtime="20201030 18:28:37.393"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:37.395" level="INFO">VALUE: [3.7083000000000255e-05, 3.598600000000174e-05, 3.601400000000088e-05, 3.601400000000088e-05, 3.602800000000045e-05, 3.601400000000088e-05, 3.601400000000088e-05, 3.598599999999827e-05, 3.594499999999903e-05, 3.600000000000131e-05, 3.593099999999946e-05, 3.602800000000045e-05, 3.599999999999784e-05, 3.599999999999784e-05, 3.601399999999741e-05, 3.600000000000131e-05, 3.599999999999784e-05, 3.595799999999913e-05, 3.600000000000131e-05, 3.602800000000045e-05, 3.601399999999741e-05, 3.600000000000131e-05, 3.601399999999741e-05, 3.602799999999698e-05, 3.598600000000174e-05, 3.599999999999784e-05, 3.598599999999827e-05, 3.601400000000088e-05, 3.6054999999996645e-05, 3.600000000000131e-05, 3.600000000000131e-05, 3.600000000000131e-05, 3.599999999999784e-05, 3.601399999999741e-05, 3.601400000000088e-05, 3.601400000000088e-05, 3.600000000000131e-05, 3.601400000000088e-05, 3.605599999999959e-05, 3.6013000000001405e-05, 3.6055000000000115e-05, 3.594400000000303e-05, 3.6027000000000975e-05, 3.602800000000045e-05, 3.6013000000001405e-05, 3.598600000000174e-05, 3.6012999999997936e-05, 3.592999999999999e-05, 3.600000000000131e-05, 3.601400000000088e-05]</msg>
<status status="PASS" starttime="20201030 18:28:37.393" endtime="20201030 18:28:38.040"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.389" endtime="20201030 18:28:38.041"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:38.049" endtime="20201030 18:28:38.070"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.045" endtime="20201030 18:28:38.072"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.043" endtime="20201030 18:28:38.072"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.042" endtime="20201030 18:28:38.073"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.042" endtime="20201030 18:28:38.073"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:38.092" endtime="20201030 18:28:38.113"></status>
</kw>
<msg timestamp="20201030 18:28:38.114" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:38.089" endtime="20201030 18:28:38.114"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:38.119" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:38.116" endtime="20201030 18:28:38.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:38.121" endtime="20201030 18:28:38.125"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.083" endtime="20201030 18:28:38.126"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.078" endtime="20201030 18:28:38.127"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:38.139" endtime="20201030 18:28:38.428"></status>
</kw>
<msg timestamp="20201030 18:28:38.431" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036804069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036841153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:38.137" endtime="20201030 18:28:38.431"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:38.439" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036804069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036841153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:38.432" endtime="20201030 18:28:38.440"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:38.440" endtime="20201030 18:28:38.442"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.132" endtime="20201030 18:28:38.443"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.128" endtime="20201030 18:28:38.443"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:38.447" level="INFO">${RESULT} = [{'diff': 3.708399999999973e-05}, {'diff': 3.600000000000131e-05}, {'diff': 3.598600000000174e-05}, {'diff': 3.598600000000174e-05}, {'diff': 3.601400000000088e-05}, {'diff': 3.601400000000088e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:38.444" endtime="20201030 18:28:38.447"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:38.451" level="INFO">${ACCURACY} = {'diff': [3.708399999999973e-05, 3.600000000000131e-05, 3.598600000000174e-05, 3.598600000000174e-05, 3.601400000000088e-05, 3.601400000000088e-05, 3.601400000000088e-05, 3.601400000000088e-05, 3.6028...</msg>
<status status="PASS" starttime="20201030 18:28:38.448" endtime="20201030 18:28:38.451"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:38.456" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201030 18:28:38.455" endtime="20201030 18:28:38.456"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:38.458" level="INFO">VALUE: [3.708399999999973e-05, 3.600000000000131e-05, 3.598600000000174e-05, 3.598600000000174e-05, 3.601400000000088e-05, 3.601400000000088e-05, 3.601400000000088e-05, 3.601400000000088e-05, 3.602800000000045e-05, 3.598600000000174e-05, 3.600000000000131e-05, 3.599999999999437e-05, 3.599999999999437e-05, 3.597300000000164e-05, 3.593000000000346e-05, 3.600000000000131e-05, 3.6013000000001405e-05, 3.594399999999609e-05, 3.599999999999437e-05, 3.6027000000000975e-05, 3.600000000000131e-05, 3.600000000000131e-05, 3.597199999999523e-05, 3.605599999999959e-05, 3.598600000000174e-05, 3.600000000000131e-05, 3.601400000000088e-05, 3.600000000000131e-05, 3.59859999999948e-05, 3.600000000000131e-05, 3.601400000000088e-05, 3.600000000000131e-05, 3.601400000000088e-05, 3.600000000000131e-05, 3.601400000000088e-05, 3.602800000000045e-05, 3.6027000000000975e-05, 3.602800000000045e-05, 3.601400000000088e-05, 3.600000000000131e-05, 3.601400000000088e-05, 3.599999999999437e-05, 3.601400000000088e-05, 3.600000000000131e-05, 3.598600000000174e-05, 3.601400000000088e-05, 3.602800000000045e-05, 3.600000000000131e-05, 3.601400000000088e-05, 3.601400000000088e-05]</msg>
<status status="PASS" starttime="20201030 18:28:38.457" endtime="20201030 18:28:38.459"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.452" endtime="20201030 18:28:38.459"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:38.463" endtime="20201030 18:28:38.482"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.462" endtime="20201030 18:28:38.483"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.460" endtime="20201030 18:28:38.483"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.075" endtime="20201030 18:28:38.484"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.074" endtime="20201030 18:28:38.484"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:38.493" endtime="20201030 18:28:38.509"></status>
</kw>
<msg timestamp="20201030 18:28:38.510" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:38.491" endtime="20201030 18:28:38.510"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:38.512" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:38.511" endtime="20201030 18:28:38.512"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:38.513" endtime="20201030 18:28:38.515"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.489" endtime="20201030 18:28:38.515"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.487" endtime="20201030 18:28:38.516"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:38.522" endtime="20201030 18:28:38.809"></status>
</kw>
<msg timestamp="20201030 18:28:38.812" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023198417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023235458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:38.521" endtime="20201030 18:28:38.813"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:38.820" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023198417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023235458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:38.813" endtime="20201030 18:28:38.821"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:38.822" endtime="20201030 18:28:38.823"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.518" endtime="20201030 18:28:38.824"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.516" endtime="20201030 18:28:38.824"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:38.828" level="INFO">${RESULT} = [{'diff': 3.7041000000001545e-05}, {'diff': 3.59719999999987e-05}, {'diff': 3.600000000000131e-05}, {'diff': 3.600000000000131e-05}, {'diff': 3.601400000000088e-05}, {'diff': 3.601400000000088e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:38.825" endtime="20201030 18:28:38.828"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:38.832" level="INFO">${ACCURACY} = {'diff': [3.7041000000001545e-05, 3.59719999999987e-05, 3.600000000000131e-05, 3.600000000000131e-05, 3.601400000000088e-05, 3.601400000000088e-05, 3.598700000000121e-05, 3.606999999999916e-05, 3.6014...</msg>
<status status="PASS" starttime="20201030 18:28:38.829" endtime="20201030 18:28:38.832"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:38.837" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201030 18:28:38.836" endtime="20201030 18:28:38.837"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:38.839" level="INFO">VALUE: [3.7041000000001545e-05, 3.59719999999987e-05, 3.600000000000131e-05, 3.600000000000131e-05, 3.601400000000088e-05, 3.601400000000088e-05, 3.598700000000121e-05, 3.606999999999916e-05, 3.601400000000088e-05, 3.601400000000088e-05, 3.601399999999741e-05, 3.6027000000000975e-05, 3.601400000000088e-05, 3.598599999999827e-05, 3.591700000000336e-05, 3.599999999999784e-05, 3.59580000000026e-05, 3.601400000000088e-05, 3.598700000000121e-05, 3.602800000000045e-05, 3.6068999999999685e-05, 3.600000000000131e-05, 3.600000000000131e-05, 3.598599999999827e-05, 3.600000000000131e-05, 3.600000000000131e-05, 3.601400000000088e-05, 3.602800000000045e-05, 3.606999999999916e-05, 3.602800000000045e-05, 3.600000000000131e-05, 3.600000000000131e-05, 3.604200000000002e-05, 3.601399999999741e-05, 3.600000000000131e-05, 3.597200000000217e-05, 3.6013000000001405e-05, 3.600000000000131e-05, 3.595799999999913e-05, 3.599999999999784e-05, 3.602800000000045e-05, 3.600000000000131e-05, 3.601400000000088e-05, 3.602800000000045e-05, 3.601400000000088e-05, 3.592999999999999e-05, 3.599999999999784e-05, 3.601400000000088e-05, 3.598599999999827e-05, 3.59589999999986e-05]</msg>
<status status="PASS" starttime="20201030 18:28:38.838" endtime="20201030 18:28:38.841"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.833" endtime="20201030 18:28:38.842"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:38.849" endtime="20201030 18:28:38.871"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.846" endtime="20201030 18:28:38.872"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.844" endtime="20201030 18:28:38.873"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.485" endtime="20201030 18:28:38.873"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.484" endtime="20201030 18:28:38.874"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:38.892" endtime="20201030 18:28:38.912"></status>
</kw>
<msg timestamp="20201030 18:28:38.913" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:38.888" endtime="20201030 18:28:38.913"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:38.919" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:38.915" endtime="20201030 18:28:38.919"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:38.921" endtime="20201030 18:28:38.924"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.883" endtime="20201030 18:28:38.925"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.879" endtime="20201030 18:28:38.926"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:38.945" endtime="20201030 18:28:39.232"></status>
</kw>
<msg timestamp="20201030 18:28:39.235" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03551225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035554236, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:28:38.942" endtime="20201030 18:28:39.235"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:39.243" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03551225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035554236, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:28:39.236" endtime="20201030 18:28:39.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:39.245" endtime="20201030 18:28:39.246"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.934" endtime="20201030 18:28:39.247"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.928" endtime="20201030 18:28:39.247"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:39.251" level="INFO">${RESULT} = [{'diff': 4.19860000000008e-05}, {'diff': 4.0903000000001855e-05}, {'diff': 4.0902999999994916e-05}, {'diff': 4.09859999999998e-05}, {'diff': 4.0917000000001424e-05}, {'diff': 4.0875000000002715e-05},...</msg>
<status status="PASS" starttime="20201030 18:28:39.248" endtime="20201030 18:28:39.251"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:39.256" level="INFO">${ACCURACY} = {'diff': [4.19860000000008e-05, 4.0903000000001855e-05, 4.0902999999994916e-05, 4.09859999999998e-05, 4.0917000000001424e-05, 4.0875000000002715e-05, 4.0931000000000994e-05, 4.0903000000001855e-05, 4....</msg>
<status status="PASS" starttime="20201030 18:28:39.252" endtime="20201030 18:28:39.256"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:39.260" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201030 18:28:39.259" endtime="20201030 18:28:39.261"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:39.263" level="INFO">VALUE: [4.19860000000008e-05, 4.0903000000001855e-05, 4.0902999999994916e-05, 4.09859999999998e-05, 4.0917000000001424e-05, 4.0875000000002715e-05, 4.0931000000000994e-05, 4.0903000000001855e-05, 4.0931000000000994e-05, 4.094399999999415e-05, 4.0903000000001855e-05, 4.0930999999994055e-05, 4.0874999999995776e-05, 4.093000000000152e-05, 4.0959000000000134e-05, 4.0945000000000564e-05, 4.0945000000000564e-05, 4.0931000000000994e-05, 4.0903000000001855e-05, 4.094400000000109e-05, 4.0917000000001424e-05, 4.0902999999994916e-05, 4.094400000000109e-05, 4.0945000000000564e-05, 4.0930999999994055e-05, 4.093000000000152e-05, 4.094400000000109e-05, 4.0889000000002285e-05, 4.0917000000001424e-05, 4.097199999999329e-05, 4.0916999999994486e-05, 4.095800000000066e-05, 4.0945000000000564e-05, 4.0945000000000564e-05, 4.101399999999894e-05, 4.0931000000000994e-05, 4.0874999999995776e-05, 4.101399999999894e-05, 4.090200000000238e-05, 4.094400000000109e-05, 4.0945000000000564e-05, 4.0945000000000564e-05, 4.0917000000001424e-05, 4.094400000000109e-05, 4.093000000000152e-05, 4.0931000000000994e-05, 4.0931000000000994e-05, 4.094399999999415e-05, 4.0903000000001855e-05, 4.0931000000000994e-05]</msg>
<status status="PASS" starttime="20201030 18:28:39.262" endtime="20201030 18:28:39.264"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.257" endtime="20201030 18:28:39.264"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:39.268" endtime="20201030 18:28:39.287"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.266" endtime="20201030 18:28:39.288"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.265" endtime="20201030 18:28:39.288"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.876" endtime="20201030 18:28:39.288"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.874" endtime="20201030 18:28:39.289"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:39.297" endtime="20201030 18:28:39.313"></status>
</kw>
<msg timestamp="20201030 18:28:39.313" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:39.296" endtime="20201030 18:28:39.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:39.315" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:39.314" endtime="20201030 18:28:39.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:39.317" endtime="20201030 18:28:39.319"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.293" endtime="20201030 18:28:39.320"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.291" endtime="20201030 18:28:39.320"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:39.327" endtime="20201030 18:28:39.615"></status>
</kw>
<msg timestamp="20201030 18:28:39.618" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021651194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021693167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:39.325" endtime="20201030 18:28:39.619"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:39.626" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021651194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021693167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:39.619" endtime="20201030 18:28:39.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:39.628" endtime="20201030 18:28:39.629"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.322" endtime="20201030 18:28:39.630"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.321" endtime="20201030 18:28:39.630"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:39.634" level="INFO">${RESULT} = [{'diff': 4.1973000000000704e-05}, {'diff': 4.094400000000109e-05}, {'diff': 4.095799999999719e-05}, {'diff': 4.095800000000066e-05}, {'diff': 4.0902999999998385e-05}, {'diff': 4.093000000000152e-05},...</msg>
<status status="PASS" starttime="20201030 18:28:39.631" endtime="20201030 18:28:39.634"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:39.638" level="INFO">${ACCURACY} = {'diff': [4.1973000000000704e-05, 4.094400000000109e-05, 4.095799999999719e-05, 4.095800000000066e-05, 4.0902999999998385e-05, 4.093000000000152e-05, 4.0903000000001855e-05, 4.0945000000000564e-05, 4....</msg>
<status status="PASS" starttime="20201030 18:28:39.635" endtime="20201030 18:28:39.638"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:39.642" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201030 18:28:39.641" endtime="20201030 18:28:39.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:39.645" level="INFO">VALUE: [4.1973000000000704e-05, 4.094400000000109e-05, 4.095799999999719e-05, 4.095800000000066e-05, 4.0902999999998385e-05, 4.093000000000152e-05, 4.0903000000001855e-05, 4.0945000000000564e-05, 4.094400000000109e-05, 4.0959000000000134e-05, 4.0916999999997955e-05, 4.095800000000066e-05, 4.0931000000000994e-05, 4.0902999999998385e-05, 4.0931000000000994e-05, 4.093000000000152e-05, 4.0945000000000564e-05, 4.091600000000195e-05, 4.0931000000000994e-05, 4.0930999999997525e-05, 4.0931000000000994e-05, 4.093000000000152e-05, 4.093000000000152e-05, 4.0874999999999245e-05, 4.094400000000109e-05, 4.094400000000109e-05, 4.0944999999997095e-05, 4.0931000000000994e-05, 4.091599999999848e-05, 4.097200000000023e-05, 4.091600000000195e-05, 4.0959000000000134e-05, 4.0916999999997955e-05, 4.0931000000000994e-05, 4.092999999999805e-05, 4.094400000000109e-05, 4.094400000000109e-05, 4.0945000000000564e-05, 4.094400000000109e-05, 4.092999999999805e-05, 4.0874999999999245e-05, 4.094400000000109e-05, 4.097200000000023e-05, 4.0916999999997955e-05, 4.095800000000066e-05, 4.091599999999848e-05, 4.092999999999805e-05, 4.094400000000109e-05, 4.0916999999997955e-05, 4.091600000000195e-05]</msg>
<status status="PASS" starttime="20201030 18:28:39.644" endtime="20201030 18:28:39.646"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.639" endtime="20201030 18:28:39.646"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:39.650" endtime="20201030 18:28:39.669"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.648" endtime="20201030 18:28:39.670"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.647" endtime="20201030 18:28:39.670"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.289" endtime="20201030 18:28:39.671"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.289" endtime="20201030 18:28:39.671"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:39.679" endtime="20201030 18:28:39.696"></status>
</kw>
<msg timestamp="20201030 18:28:39.696" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:39.678" endtime="20201030 18:28:39.696"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:39.698" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:39.697" endtime="20201030 18:28:39.699"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:39.699" endtime="20201030 18:28:39.701"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.675" endtime="20201030 18:28:39.702"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.673" endtime="20201030 18:28:39.702"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:39.709" endtime="20201030 18:28:39.995"></status>
</kw>
<msg timestamp="20201030 18:28:39.998" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022593, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022634986, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:28:39.707" endtime="20201030 18:28:39.998"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:40.006" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022593, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022634986, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:28:39.999" endtime="20201030 18:28:40.006"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:40.007" endtime="20201030 18:28:40.009"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.705" endtime="20201030 18:28:40.009"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.703" endtime="20201030 18:28:40.010"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:40.014" level="INFO">${RESULT} = [{'diff': 4.19860000000008e-05}, {'diff': 4.0917000000001424e-05}, {'diff': 4.0931000000000994e-05}, {'diff': 4.0972999999999704e-05}, {'diff': 4.097200000000023e-05}, {'diff': 4.0917000000001424e-05}...</msg>
<status status="PASS" starttime="20201030 18:28:40.010" endtime="20201030 18:28:40.014"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:40.018" level="INFO">${ACCURACY} = {'diff': [4.19860000000008e-05, 4.0917000000001424e-05, 4.0931000000000994e-05, 4.0972999999999704e-05, 4.097200000000023e-05, 4.0917000000001424e-05, 4.094400000000109e-05, 4.088799999999934e-05, 4.0...</msg>
<status status="PASS" starttime="20201030 18:28:40.014" endtime="20201030 18:28:40.018"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:40.022" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201030 18:28:40.021" endtime="20201030 18:28:40.022"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:40.024" level="INFO">VALUE: [4.19860000000008e-05, 4.0917000000001424e-05, 4.0931000000000994e-05, 4.0972999999999704e-05, 4.097200000000023e-05, 4.0917000000001424e-05, 4.094400000000109e-05, 4.088799999999934e-05, 4.0917000000001424e-05, 4.094399999999762e-05, 4.091600000000195e-05, 4.0931000000000994e-05, 4.101399999999894e-05, 4.0888999999998815e-05, 4.095800000000066e-05, 4.091599999999848e-05, 4.092999999999805e-05, 4.0917000000001424e-05, 4.0916999999997955e-05, 4.0931000000000994e-05, 4.091600000000195e-05, 4.0916999999997955e-05, 4.094399999999762e-05, 4.0902999999998385e-05, 4.092999999999805e-05, 4.091600000000195e-05, 4.093000000000152e-05, 4.100000000000284e-05, 4.0916999999997955e-05, 4.094399999999762e-05, 4.091599999999848e-05, 4.0931000000000994e-05, 4.0930999999997525e-05, 4.092999999999805e-05, 4.0930999999997525e-05, 4.0945000000000564e-05, 4.094399999999762e-05, 4.0917000000001424e-05, 4.0917000000001424e-05, 4.0931000000000994e-05, 4.092999999999805e-05, 4.091599999999848e-05, 4.0972999999999704e-05, 4.0931000000000994e-05, 4.0917000000001424e-05, 4.092999999999805e-05, 4.0916999999997955e-05, 4.0917000000001424e-05, 4.094400000000109e-05, 4.094400000000109e-05]</msg>
<status status="PASS" starttime="20201030 18:28:40.023" endtime="20201030 18:28:40.026"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.018" endtime="20201030 18:28:40.027"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:40.030" endtime="20201030 18:28:40.050"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.029" endtime="20201030 18:28:40.050"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.027" endtime="20201030 18:28:40.051"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.672" endtime="20201030 18:28:40.051"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.671" endtime="20201030 18:28:40.051"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:40.059" endtime="20201030 18:28:40.075"></status>
</kw>
<msg timestamp="20201030 18:28:40.075" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:40.058" endtime="20201030 18:28:40.076"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:40.078" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:40.076" endtime="20201030 18:28:40.078"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:40.079" endtime="20201030 18:28:40.080"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.055" endtime="20201030 18:28:40.081"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.053" endtime="20201030 18:28:40.081"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:40.088" endtime="20201030 18:28:40.374"></status>
</kw>
<msg timestamp="20201030 18:28:40.377" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021658222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021700236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:40.086" endtime="20201030 18:28:40.378"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:40.387" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021658222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021700236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:40.379" endtime="20201030 18:28:40.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:40.388" endtime="20201030 18:28:40.390"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.084" endtime="20201030 18:28:40.390"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.082" endtime="20201030 18:28:40.391"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:40.395" level="INFO">${RESULT} = [{'diff': 4.201399999999994e-05}, {'diff': 4.0902999999998385e-05}, {'diff': 4.094399999999762e-05}, {'diff': 4.0916999999997955e-05}, {'diff': 4.0874999999999245e-05}, {'diff': 4.093000000000152e-05}...</msg>
<status status="PASS" starttime="20201030 18:28:40.392" endtime="20201030 18:28:40.395"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:40.400" level="INFO">${ACCURACY} = {'diff': [4.201399999999994e-05, 4.0902999999998385e-05, 4.094399999999762e-05, 4.0916999999997955e-05, 4.0874999999999245e-05, 4.093000000000152e-05, 4.0930999999997525e-05, 4.097200000000023e-05, 4....</msg>
<status status="PASS" starttime="20201030 18:28:40.396" endtime="20201030 18:28:40.400"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:40.404" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201030 18:28:40.403" endtime="20201030 18:28:40.405"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:40.407" level="INFO">VALUE: [4.201399999999994e-05, 4.0902999999998385e-05, 4.094399999999762e-05, 4.0916999999997955e-05, 4.0874999999999245e-05, 4.093000000000152e-05, 4.0930999999997525e-05, 4.097200000000023e-05, 4.094400000000109e-05, 4.0931000000000994e-05, 4.0931000000000994e-05, 4.0930999999997525e-05, 4.0945000000000564e-05, 4.0931000000000994e-05, 4.092999999999805e-05, 4.0917000000001424e-05, 4.093000000000152e-05, 4.098600000000327e-05, 4.093000000000152e-05, 4.0931000000000994e-05, 4.0903000000001855e-05, 4.0930999999997525e-05, 4.0945000000000564e-05, 4.095800000000066e-05, 4.0931000000000994e-05, 4.0931000000000994e-05, 4.093000000000152e-05, 4.0917000000001424e-05, 4.0917000000001424e-05, 4.0916999999997955e-05, 4.0931000000000994e-05, 4.094400000000109e-05, 4.091600000000195e-05, 4.0931000000000994e-05, 4.092999999999805e-05, 4.095800000000066e-05, 4.092999999999805e-05, 4.0959000000000134e-05, 4.093000000000152e-05, 4.0931000000000994e-05, 4.093000000000152e-05, 4.0931000000000994e-05, 4.0972999999999704e-05, 4.0931000000000994e-05, 4.0931000000000994e-05, 4.095799999999719e-05, 4.094400000000109e-05, 4.0902999999998385e-05, 4.094400000000109e-05, 4.0917000000001424e-05]</msg>
<status status="PASS" starttime="20201030 18:28:40.405" endtime="20201030 18:28:40.407"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.401" endtime="20201030 18:28:40.408"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:40.412" endtime="20201030 18:28:40.431"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.410" endtime="20201030 18:28:40.432"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.409" endtime="20201030 18:28:40.432"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.052" endtime="20201030 18:28:40.432"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.051" endtime="20201030 18:28:40.432"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:40.441" endtime="20201030 18:28:40.456"></status>
</kw>
<msg timestamp="20201030 18:28:40.457" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:40.439" endtime="20201030 18:28:40.457"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:40.459" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:40.458" endtime="20201030 18:28:40.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:40.460" endtime="20201030 18:28:40.462"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.437" endtime="20201030 18:28:40.462"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.435" endtime="20201030 18:28:40.463"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:40.469" endtime="20201030 18:28:40.755"></status>
</kw>
<msg timestamp="20201030 18:28:40.758" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021717194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021759194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:40.468" endtime="20201030 18:28:40.759"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:40.767" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021717194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021759194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:40.760" endtime="20201030 18:28:40.767"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:40.768" endtime="20201030 18:28:40.770"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.465" endtime="20201030 18:28:40.770"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.463" endtime="20201030 18:28:40.771"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:40.775" level="INFO">${RESULT} = [{'diff': 4.200000000000037e-05}, {'diff': 4.093000000000152e-05}, {'diff': 4.0959000000000134e-05}, {'diff': 4.0931000000000994e-05}, {'diff': 4.093000000000152e-05}, {'diff': 4.092999999999805e-05},...</msg>
<status status="PASS" starttime="20201030 18:28:40.772" endtime="20201030 18:28:40.775"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:40.779" level="INFO">${ACCURACY} = {'diff': [4.200000000000037e-05, 4.093000000000152e-05, 4.0959000000000134e-05, 4.0931000000000994e-05, 4.093000000000152e-05, 4.092999999999805e-05, 4.095800000000066e-05, 4.0917000000001424e-05, 4.0...</msg>
<status status="PASS" starttime="20201030 18:28:40.776" endtime="20201030 18:28:40.779"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:40.783" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201030 18:28:40.782" endtime="20201030 18:28:40.784"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:40.786" level="INFO">VALUE: [4.200000000000037e-05, 4.093000000000152e-05, 4.0959000000000134e-05, 4.0931000000000994e-05, 4.093000000000152e-05, 4.092999999999805e-05, 4.095800000000066e-05, 4.0917000000001424e-05, 4.0902999999998385e-05, 4.0931000000000994e-05, 4.0944999999997095e-05, 4.0874999999999245e-05, 4.094399999999762e-05, 4.0931000000000994e-05, 4.0917000000001424e-05, 4.093000000000152e-05, 4.0986999999999274e-05, 4.0931000000000994e-05, 4.0945000000000564e-05, 4.09859999999998e-05, 4.099999999999937e-05, 4.0930999999997525e-05, 4.0931000000000994e-05, 4.093000000000152e-05, 4.091600000000195e-05, 4.0930999999997525e-05, 4.0916999999997955e-05, 4.0917000000001424e-05, 4.09859999999998e-05, 4.094399999999762e-05, 4.097200000000023e-05, 4.0959000000000134e-05, 4.094399999999762e-05, 4.0931000000000994e-05, 4.0930999999997525e-05, 4.0930999999997525e-05, 4.0931000000000994e-05, 4.090200000000238e-05, 4.095800000000066e-05, 4.0917000000001424e-05, 4.0888999999998815e-05, 4.0944999999997095e-05, 4.0944999999997095e-05, 4.0888999999998815e-05, 4.0973000000003174e-05, 4.0931000000000994e-05, 4.0917000000001424e-05, 4.0931000000000994e-05, 4.0972999999999704e-05, 4.0903000000001855e-05]</msg>
<status status="PASS" starttime="20201030 18:28:40.784" endtime="20201030 18:28:40.786"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.780" endtime="20201030 18:28:40.787"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:40.791" endtime="20201030 18:28:40.810"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.789" endtime="20201030 18:28:40.811"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.788" endtime="20201030 18:28:40.811"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.433" endtime="20201030 18:28:40.811"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.433" endtime="20201030 18:28:40.811"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:40.820" endtime="20201030 18:28:40.839"></status>
</kw>
<msg timestamp="20201030 18:28:40.839" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:40.818" endtime="20201030 18:28:40.840"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:40.842" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:40.840" endtime="20201030 18:28:40.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:40.843" endtime="20201030 18:28:40.845"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.816" endtime="20201030 18:28:40.845"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.814" endtime="20201030 18:28:40.845"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:40.852" endtime="20201030 18:28:41.151"></status>
</kw>
<msg timestamp="20201030 18:28:41.158" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024940583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024987486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:40.850" endtime="20201030 18:28:41.158"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:41.173" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024940583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024987486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:41.160" endtime="20201030 18:28:41.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:41.176" endtime="20201030 18:28:41.182"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.848" endtime="20201030 18:28:41.184"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.846" endtime="20201030 18:28:41.185"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:41.192" level="INFO">${RESULT} = [{'diff': 4.6903000000000916e-05}, {'diff': 4.5861000000001206e-05}, {'diff': 4.584699999999817e-05}, {'diff': 4.5833000000002067e-05}, {'diff': 4.5847000000001636e-05}, {'diff': 4.5875000000000776e-0...</msg>
<status status="PASS" starttime="20201030 18:28:41.187" endtime="20201030 18:28:41.192"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:41.197" level="INFO">${ACCURACY} = {'diff': [4.6903000000000916e-05, 4.5861000000001206e-05, 4.584699999999817e-05, 4.5833000000002067e-05, 4.5847000000001636e-05, 4.5875000000000776e-05, 4.58329999999986e-05, 4.584800000000111e-05, 4....</msg>
<status status="PASS" starttime="20201030 18:28:41.193" endtime="20201030 18:28:41.198"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:41.202" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201030 18:28:41.201" endtime="20201030 18:28:41.202"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:41.204" level="INFO">VALUE: [4.6903000000000916e-05, 4.5861000000001206e-05, 4.584699999999817e-05, 4.5833000000002067e-05, 4.5847000000001636e-05, 4.5875000000000776e-05, 4.58329999999986e-05, 4.584800000000111e-05, 4.584800000000111e-05, 4.586099999999774e-05, 4.58329999999986e-05, 4.584699999999817e-05, 4.584800000000111e-05, 4.586200000000068e-05, 4.5847000000001636e-05, 4.584699999999817e-05, 4.584699999999817e-05, 4.5847000000001636e-05, 4.5875000000000776e-05, 4.5847000000001636e-05, 4.5847000000001636e-05, 4.5875000000000776e-05, 4.5889000000000346e-05, 4.58329999999986e-05, 4.5861000000001206e-05, 4.5833000000002067e-05, 4.584699999999817e-05, 4.5847000000001636e-05, 4.5889000000000346e-05, 4.5833000000002067e-05, 4.584699999999817e-05, 4.58329999999986e-05, 4.580499999999946e-05, 4.58329999999986e-05, 4.58199999999985e-05, 4.5861000000001206e-05, 4.5889000000000346e-05, 4.581899999999903e-05, 4.586099999999774e-05, 4.5861000000001206e-05, 4.5833000000002067e-05, 4.5847000000001636e-05, 4.5847000000001636e-05, 4.5833000000002067e-05, 4.5916999999999486e-05, 4.584699999999817e-05, 4.5847000000001636e-05, 4.586099999999774e-05, 4.5847000000001636e-05, 4.5861000000001206e-05]</msg>
<status status="PASS" starttime="20201030 18:28:41.203" endtime="20201030 18:28:41.207"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.198" endtime="20201030 18:28:41.207"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:41.211" endtime="20201030 18:28:41.231"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.210" endtime="20201030 18:28:41.232"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.208" endtime="20201030 18:28:41.232"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.812" endtime="20201030 18:28:41.233"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.812" endtime="20201030 18:28:41.233"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:41.243" endtime="20201030 18:28:41.259"></status>
</kw>
<msg timestamp="20201030 18:28:41.260" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:41.241" endtime="20201030 18:28:41.260"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:41.263" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:41.261" endtime="20201030 18:28:41.263"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:41.264" endtime="20201030 18:28:41.266"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.238" endtime="20201030 18:28:41.266"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.235" endtime="20201030 18:28:41.267"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:41.274" endtime="20201030 18:28:41.561"></status>
</kw>
<msg timestamp="20201030 18:28:41.564" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024243875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024290806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:41.272" endtime="20201030 18:28:41.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:41.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024243875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024290806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:41.565" endtime="20201030 18:28:41.573"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:41.574" endtime="20201030 18:28:41.575"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.269" endtime="20201030 18:28:41.576"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.267" endtime="20201030 18:28:41.576"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:41.580" level="INFO">${RESULT} = [{'diff': 4.6931000000000056e-05}, {'diff': 4.583399999999807e-05}, {'diff': 4.58329999999986e-05}, {'diff': 4.5875000000000776e-05}, {'diff': 4.583399999999807e-05}, {'diff': 4.5847000000001636e-05},...</msg>
<status status="PASS" starttime="20201030 18:28:41.577" endtime="20201030 18:28:41.580"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:41.585" level="INFO">${ACCURACY} = {'diff': [4.6931000000000056e-05, 4.583399999999807e-05, 4.58329999999986e-05, 4.5875000000000776e-05, 4.583399999999807e-05, 4.5847000000001636e-05, 4.5889000000000346e-05, 4.5847000000001636e-05, 4....</msg>
<status status="PASS" starttime="20201030 18:28:41.581" endtime="20201030 18:28:41.585"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:41.589" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201030 18:28:41.588" endtime="20201030 18:28:41.590"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:41.592" level="INFO">VALUE: [4.6931000000000056e-05, 4.583399999999807e-05, 4.58329999999986e-05, 4.5875000000000776e-05, 4.583399999999807e-05, 4.5847000000001636e-05, 4.5889000000000346e-05, 4.5847000000001636e-05, 4.58329999999986e-05, 4.584699999999817e-05, 4.5875000000000776e-05, 4.5847000000001636e-05, 4.582000000000197e-05, 4.5875000000000776e-05, 4.584800000000111e-05, 4.5833000000002067e-05, 4.5833000000002067e-05, 4.580599999999893e-05, 4.584699999999817e-05, 4.5861000000001206e-05, 4.5861000000001206e-05, 4.5875000000000776e-05, 4.583400000000154e-05, 4.5847000000001636e-05, 4.5847000000001636e-05, 4.5847000000001636e-05, 4.580599999999893e-05, 4.58199999999985e-05, 4.584800000000111e-05, 4.587499999999731e-05, 4.5861000000001206e-05, 4.5875000000000776e-05, 4.586099999999774e-05, 4.584800000000111e-05, 4.586099999999774e-05, 4.58329999999986e-05, 4.5861000000001206e-05, 4.5847000000001636e-05, 4.584699999999817e-05, 4.58329999999986e-05, 4.584699999999817e-05, 4.584699999999817e-05, 4.584699999999817e-05, 4.5861000000001206e-05, 4.580499999999946e-05, 4.580599999999893e-05, 4.5847000000001636e-05, 4.584800000000111e-05, 4.576399999999675e-05, 4.5847000000001636e-05]</msg>
<status status="PASS" starttime="20201030 18:28:41.591" endtime="20201030 18:28:41.593"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.586" endtime="20201030 18:28:41.593"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:41.597" endtime="20201030 18:28:41.616"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.595" endtime="20201030 18:28:41.617"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.594" endtime="20201030 18:28:41.617"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.234" endtime="20201030 18:28:41.617"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.233" endtime="20201030 18:28:41.617"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:41.626" endtime="20201030 18:28:41.642"></status>
</kw>
<msg timestamp="20201030 18:28:41.642" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:41.625" endtime="20201030 18:28:41.642"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:41.645" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:41.643" endtime="20201030 18:28:41.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:41.646" endtime="20201030 18:28:41.647"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.622" endtime="20201030 18:28:41.648"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.620" endtime="20201030 18:28:41.648"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:41.654" endtime="20201030 18:28:41.941"></status>
</kw>
<msg timestamp="20201030 18:28:41.944" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021599819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021646722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:41.653" endtime="20201030 18:28:41.944"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:41.952" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021599819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021646722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:41.945" endtime="20201030 18:28:41.953"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:41.954" endtime="20201030 18:28:41.955"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.650" endtime="20201030 18:28:41.956"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.649" endtime="20201030 18:28:41.956"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:41.960" level="INFO">${RESULT} = [{'diff': 4.6903000000000916e-05}, {'diff': 4.583399999999807e-05}, {'diff': 4.5861000000001206e-05}, {'diff': 4.5847000000001636e-05}, {'diff': 4.5847000000001636e-05}, {'diff': 4.5833000000002067e-0...</msg>
<status status="PASS" starttime="20201030 18:28:41.957" endtime="20201030 18:28:41.960"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:41.964" level="INFO">${ACCURACY} = {'diff': [4.6903000000000916e-05, 4.583399999999807e-05, 4.5861000000001206e-05, 4.5847000000001636e-05, 4.5847000000001636e-05, 4.5833000000002067e-05, 4.5847000000001636e-05, 4.584800000000111e-05, ...</msg>
<status status="PASS" starttime="20201030 18:28:41.961" endtime="20201030 18:28:41.964"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:41.969" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201030 18:28:41.968" endtime="20201030 18:28:41.969"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:41.971" level="INFO">VALUE: [4.6903000000000916e-05, 4.583399999999807e-05, 4.5861000000001206e-05, 4.5847000000001636e-05, 4.5847000000001636e-05, 4.5833000000002067e-05, 4.5847000000001636e-05, 4.584800000000111e-05, 4.5861000000001206e-05, 4.584699999999817e-05, 4.5861000000001206e-05, 4.5847000000001636e-05, 4.5861000000001206e-05, 4.583400000000154e-05, 4.5847000000001636e-05, 4.5847000000001636e-05, 4.586099999999774e-05, 4.580599999999893e-05, 4.58190000000025e-05, 4.5889000000000346e-05, 4.5847000000001636e-05, 4.584699999999817e-05, 4.584699999999817e-05, 4.5861000000001206e-05, 4.583399999999807e-05, 4.5847000000001636e-05, 4.5916999999999486e-05, 4.584699999999817e-05, 4.5861000000001206e-05, 4.5847000000001636e-05, 4.584699999999817e-05, 4.586099999999774e-05, 4.584699999999817e-05, 4.58329999999986e-05, 4.584800000000111e-05, 4.5889000000000346e-05, 4.5847000000001636e-05, 4.584799999999764e-05, 4.584799999999764e-05, 4.58329999999986e-05, 4.584699999999817e-05, 4.583399999999807e-05, 4.5889000000000346e-05, 4.586200000000068e-05, 4.584799999999764e-05, 4.5861000000001206e-05, 4.58329999999986e-05, 4.5861000000001206e-05, 4.5847000000001636e-05, 4.576400000000022e-05]</msg>
<status status="PASS" starttime="20201030 18:28:41.970" endtime="20201030 18:28:41.972"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.965" endtime="20201030 18:28:41.972"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:41.976" endtime="20201030 18:28:41.995"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.975" endtime="20201030 18:28:41.996"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.973" endtime="20201030 18:28:41.996"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.618" endtime="20201030 18:28:41.997"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.618" endtime="20201030 18:28:41.997"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:42.006" endtime="20201030 18:28:42.022"></status>
</kw>
<msg timestamp="20201030 18:28:42.023" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:42.004" endtime="20201030 18:28:42.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:42.025" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:42.024" endtime="20201030 18:28:42.025"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:42.026" endtime="20201030 18:28:42.028"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.001" endtime="20201030 18:28:42.028"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.999" endtime="20201030 18:28:42.029"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:42.035" endtime="20201030 18:28:42.320"></status>
</kw>
<msg timestamp="20201030 18:28:42.323" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022873556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022920444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:42.034" endtime="20201030 18:28:42.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:42.331" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022873556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022920444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:42.324" endtime="20201030 18:28:42.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:42.333" endtime="20201030 18:28:42.334"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.031" endtime="20201030 18:28:42.335"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.029" endtime="20201030 18:28:42.335"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:42.339" level="INFO">${RESULT} = [{'diff': 4.688800000000187e-05}, {'diff': 4.5847000000001636e-05}, {'diff': 4.5889000000000346e-05}, {'diff': 4.579199999999936e-05}, {'diff': 4.5847000000001636e-05}, {'diff': 4.5833000000002067e-05...</msg>
<status status="PASS" starttime="20201030 18:28:42.336" endtime="20201030 18:28:42.339"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:42.343" level="INFO">${ACCURACY} = {'diff': [4.688800000000187e-05, 4.5847000000001636e-05, 4.5889000000000346e-05, 4.579199999999936e-05, 4.5847000000001636e-05, 4.5833000000002067e-05, 4.5833000000002067e-05, 4.58329999999986e-05, 4....</msg>
<status status="PASS" starttime="20201030 18:28:42.340" endtime="20201030 18:28:42.344"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:42.348" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201030 18:28:42.347" endtime="20201030 18:28:42.348"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:42.350" level="INFO">VALUE: [4.688800000000187e-05, 4.5847000000001636e-05, 4.5889000000000346e-05, 4.579199999999936e-05, 4.5847000000001636e-05, 4.5833000000002067e-05, 4.5833000000002067e-05, 4.58329999999986e-05, 4.5847000000001636e-05, 4.5847000000001636e-05, 4.584799999999764e-05, 4.584799999999764e-05, 4.5875000000000776e-05, 4.586200000000068e-05, 4.584699999999817e-05, 4.584799999999764e-05, 4.5847000000001636e-05, 4.58329999999986e-05, 4.58329999999986e-05, 4.584699999999817e-05, 4.580499999999946e-05, 4.584800000000111e-05, 4.5847000000001636e-05, 4.586200000000068e-05, 4.583400000000154e-05, 4.5875000000000776e-05, 4.584800000000111e-05, 4.586200000000068e-05, 4.5847000000001636e-05, 4.5847000000001636e-05, 4.580599999999893e-05, 4.5875000000000776e-05, 4.586099999999774e-05, 4.584800000000111e-05, 4.58329999999986e-05, 4.584699999999817e-05, 4.5847000000001636e-05, 4.584699999999817e-05, 4.584699999999817e-05, 4.586200000000068e-05, 4.584699999999817e-05, 4.5861000000001206e-05, 4.584699999999817e-05, 4.5889000000000346e-05, 4.5916999999999486e-05, 4.584800000000111e-05, 4.5861000000001206e-05, 4.580599999999893e-05, 4.58329999999986e-05, 4.58190000000025e-05]</msg>
<status status="PASS" starttime="20201030 18:28:42.349" endtime="20201030 18:28:42.352"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.344" endtime="20201030 18:28:42.352"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:42.356" endtime="20201030 18:28:42.375"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.355" endtime="20201030 18:28:42.376"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.353" endtime="20201030 18:28:42.376"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.998" endtime="20201030 18:28:42.377"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.997" endtime="20201030 18:28:42.377"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:42.385" endtime="20201030 18:28:42.401"></status>
</kw>
<msg timestamp="20201030 18:28:42.402" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:42.384" endtime="20201030 18:28:42.402"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:42.404" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:42.403" endtime="20201030 18:28:42.404"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:42.405" endtime="20201030 18:28:42.407"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.381" endtime="20201030 18:28:42.407"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.379" endtime="20201030 18:28:42.408"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:42.414" endtime="20201030 18:28:42.700"></status>
</kw>
<msg timestamp="20201030 18:28:42.703" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021758958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021805889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:42.413" endtime="20201030 18:28:42.703"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:42.711" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021758958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021805889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:42.704" endtime="20201030 18:28:42.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:42.712" endtime="20201030 18:28:42.714"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.410" endtime="20201030 18:28:42.714"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.408" endtime="20201030 18:28:42.715"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:42.719" level="INFO">${RESULT} = [{'diff': 4.6931000000000056e-05}, {'diff': 4.586099999999774e-05}, {'diff': 4.586099999999774e-05}, {'diff': 4.5902999999999916e-05}, {'diff': 4.5861000000001206e-05}, {'diff': 4.576400000000022e-05}...</msg>
<status status="PASS" starttime="20201030 18:28:42.715" endtime="20201030 18:28:42.719"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:42.724" level="INFO">${ACCURACY} = {'diff': [4.6931000000000056e-05, 4.586099999999774e-05, 4.586099999999774e-05, 4.5902999999999916e-05, 4.5861000000001206e-05, 4.576400000000022e-05, 4.5833000000002067e-05, 4.5861000000001206e-05, 4...</msg>
<status status="PASS" starttime="20201030 18:28:42.720" endtime="20201030 18:28:42.724"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:42.730" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201030 18:28:42.729" endtime="20201030 18:28:42.730"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:42.733" level="INFO">VALUE: [4.6931000000000056e-05, 4.586099999999774e-05, 4.586099999999774e-05, 4.5902999999999916e-05, 4.5861000000001206e-05, 4.576400000000022e-05, 4.5833000000002067e-05, 4.5861000000001206e-05, 4.5861000000001206e-05, 4.5861000000001206e-05, 4.584800000000111e-05, 4.586200000000068e-05, 5.077799999999785e-05, 4.5861000000001206e-05, 4.5847000000001636e-05, 4.584799999999764e-05, 4.5875000000000776e-05, 4.5847000000001636e-05, 4.5861000000001206e-05, 5.076399999999828e-05, 4.586200000000068e-05, 4.5875000000000776e-05, 4.5861000000001206e-05, 4.5861000000001206e-05, 4.584800000000111e-05, 4.5847000000001636e-05, 4.581899999999903e-05, 4.5847000000001636e-05, 4.5875000000000776e-05, 5.079200000000089e-05, 4.5847000000001636e-05, 4.586099999999774e-05, 4.584800000000111e-05, 4.584800000000111e-05, 4.5875000000000776e-05, 4.5902999999999916e-05, 4.584800000000111e-05, 4.580599999999893e-05, 4.580500000000293e-05, 4.584699999999817e-05, 4.579199999999936e-05, 4.584800000000111e-05, 4.5931000000002525e-05, 4.584699999999817e-05, 4.5861000000001206e-05, 4.584699999999817e-05, 4.586099999999774e-05, 4.584699999999817e-05, 4.586099999999774e-05, 4.5861000000001206e-05]</msg>
<status status="PASS" starttime="20201030 18:28:42.731" endtime="20201030 18:28:42.791"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.725" endtime="20201030 18:28:42.792"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:42.796" endtime="20201030 18:28:42.815"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.794" endtime="20201030 18:28:42.816"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.793" endtime="20201030 18:28:42.816"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.378" endtime="20201030 18:28:42.816"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.377" endtime="20201030 18:28:42.816"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:42.825" endtime="20201030 18:28:42.841"></status>
</kw>
<msg timestamp="20201030 18:28:42.841" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:42.824" endtime="20201030 18:28:42.842"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:42.844" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:42.842" endtime="20201030 18:28:42.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:42.845" endtime="20201030 18:28:42.846"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.821" endtime="20201030 18:28:42.847"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.819" endtime="20201030 18:28:42.847"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:42.854" endtime="20201030 18:28:43.141"></status>
</kw>
<msg timestamp="20201030 18:28:43.144" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021947458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021999292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:42.852" endtime="20201030 18:28:43.144"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:43.152" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021947458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021999292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:43.145" endtime="20201030 18:28:43.152"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:43.153" endtime="20201030 18:28:43.155"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.850" endtime="20201030 18:28:43.155"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.848" endtime="20201030 18:28:43.156"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:43.160" level="INFO">${RESULT} = [{'diff': 5.18340000000006e-05}, {'diff': 5.077799999999785e-05}, {'diff': 5.077799999999785e-05}, {'diff': 5.076399999999828e-05}, {'diff': 5.069400000000043e-05}, {'diff': 5.076399999999828e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:43.156" endtime="20201030 18:28:43.160"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:43.164" level="INFO">${ACCURACY} = {'diff': [5.18340000000006e-05, 5.077799999999785e-05, 5.077799999999785e-05, 5.076399999999828e-05, 5.069400000000043e-05, 5.076399999999828e-05, 5.079100000000142e-05, 5.077700000000185e-05, 5.07909...</msg>
<status status="PASS" starttime="20201030 18:28:43.161" endtime="20201030 18:28:43.164"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:43.168" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201030 18:28:43.167" endtime="20201030 18:28:43.168"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:43.171" level="INFO">VALUE: [5.18340000000006e-05, 5.077799999999785e-05, 5.077799999999785e-05, 5.076399999999828e-05, 5.069400000000043e-05, 5.076399999999828e-05, 5.079100000000142e-05, 5.077700000000185e-05, 5.079099999999795e-05, 5.077800000000132e-05, 5.076399999999828e-05, 5.077700000000185e-05, 5.077799999999785e-05, 5.080499999999752e-05, 5.076400000000175e-05, 5.083300000000013e-05, 5.077800000000132e-05, 5.08339999999996e-05, 5.079199999999742e-05, 5.077800000000132e-05, 5.076400000000175e-05, 5.076399999999828e-05, 5.073599999999914e-05, 5.075000000000218e-05, 5.0708e-05, 5.076399999999828e-05, 5.077800000000132e-05, 5.076399999999828e-05, 5.076399999999828e-05, 5.077800000000132e-05, 5.073599999999914e-05, 5.077800000000132e-05, 5.081900000000056e-05, 5.079200000000089e-05, 5.076400000000175e-05, 5.077800000000132e-05, 5.077799999999785e-05, 5.077799999999785e-05, 5.077800000000132e-05, 5.077799999999785e-05, 5.076400000000175e-05, 5.076299999999881e-05, 5.076400000000175e-05, 5.081900000000056e-05, 5.076400000000175e-05, 5.076399999999828e-05, 5.079200000000089e-05, 5.077800000000132e-05, 5.079200000000089e-05, 5.074999999999871e-05]</msg>
<status status="PASS" starttime="20201030 18:28:43.169" endtime="20201030 18:28:43.171"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.164" endtime="20201030 18:28:43.172"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:43.176" endtime="20201030 18:28:43.195"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.174" endtime="20201030 18:28:43.196"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.173" endtime="20201030 18:28:43.196"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.817" endtime="20201030 18:28:43.196"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.817" endtime="20201030 18:28:43.196"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:43.205" endtime="20201030 18:28:43.222"></status>
</kw>
<msg timestamp="20201030 18:28:43.222" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:43.203" endtime="20201030 18:28:43.223"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:43.225" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:43.223" endtime="20201030 18:28:43.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:43.226" endtime="20201030 18:28:43.227"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.201" endtime="20201030 18:28:43.228"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.199" endtime="20201030 18:28:43.228"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:43.235" endtime="20201030 18:28:43.519"></status>
</kw>
<msg timestamp="20201030 18:28:43.523" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022745875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022797722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:43.233" endtime="20201030 18:28:43.523"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:43.531" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022745875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022797722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:43.524" endtime="20201030 18:28:43.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:43.532" endtime="20201030 18:28:43.534"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.231" endtime="20201030 18:28:43.534"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.229" endtime="20201030 18:28:43.535"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:43.538" level="INFO">${RESULT} = [{'diff': 5.18470000000007e-05}, {'diff': 5.077800000000132e-05}, {'diff': 5.077699999999838e-05}, {'diff': 5.076400000000175e-05}, {'diff': 5.081900000000056e-05}, {'diff': 5.076400000000175e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:43.535" endtime="20201030 18:28:43.539"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:43.543" level="INFO">${ACCURACY} = {'diff': [5.18470000000007e-05, 5.077800000000132e-05, 5.077699999999838e-05, 5.076400000000175e-05, 5.081900000000056e-05, 5.076400000000175e-05, 5.076399999999828e-05, 5.077800000000132e-05, 5.08060...</msg>
<status status="PASS" starttime="20201030 18:28:43.539" endtime="20201030 18:28:43.543"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:43.547" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201030 18:28:43.546" endtime="20201030 18:28:43.547"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:43.549" level="INFO">VALUE: [5.18470000000007e-05, 5.077800000000132e-05, 5.077699999999838e-05, 5.076400000000175e-05, 5.081900000000056e-05, 5.076400000000175e-05, 5.076399999999828e-05, 5.077800000000132e-05, 5.080600000000046e-05, 5.076399999999828e-05, 5.077799999999785e-05, 5.077800000000132e-05, 5.074999999999871e-05, 5.079200000000089e-05, 5.077699999999838e-05, 5.077799999999785e-05, 5.074999999999871e-05, 5.077699999999838e-05, 5.079200000000089e-05, 5.072199999999957e-05, 5.077799999999785e-05, 5.076400000000175e-05, 5.077800000000132e-05, 5.079100000000142e-05, 5.077699999999838e-05, 5.079100000000142e-05, 5.077799999999785e-05, 5.080600000000046e-05, 5.077799999999785e-05, 5.076399999999828e-05, 5.074999999999871e-05, 5.079100000000142e-05, 5.076400000000175e-05, 5.076400000000175e-05, 5.080599999999699e-05, 5.083300000000013e-05, 5.080500000000099e-05, 5.080499999999752e-05, 5.074999999999871e-05, 5.079099999999795e-05, 5.076400000000175e-05, 5.077799999999785e-05, 5.077800000000132e-05, 5.077800000000132e-05, 5.077799999999785e-05, 5.076400000000175e-05, 5.076400000000175e-05, 5.074999999999871e-05, 5.076400000000175e-05, 5.077800000000132e-05]</msg>
<status status="PASS" starttime="20201030 18:28:43.548" endtime="20201030 18:28:43.551"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.543" endtime="20201030 18:28:43.552"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:43.555" endtime="20201030 18:28:43.575"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.554" endtime="20201030 18:28:43.575"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.553" endtime="20201030 18:28:43.576"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.197" endtime="20201030 18:28:43.576"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.197" endtime="20201030 18:28:43.576"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:43.585" endtime="20201030 18:28:43.601"></status>
</kw>
<msg timestamp="20201030 18:28:43.601" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:43.583" endtime="20201030 18:28:43.601"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:43.603" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:43.602" endtime="20201030 18:28:43.604"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:43.605" endtime="20201030 18:28:43.606"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.580" endtime="20201030 18:28:43.607"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.578" endtime="20201030 18:28:43.607"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:43.614" endtime="20201030 18:28:43.900"></status>
</kw>
<msg timestamp="20201030 18:28:43.903" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021790167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021841958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:43.612" endtime="20201030 18:28:43.903"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:43.911" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021790167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021841958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:43.904" endtime="20201030 18:28:43.911"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:43.912" endtime="20201030 18:28:43.914"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.609" endtime="20201030 18:28:43.914"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.608" endtime="20201030 18:28:43.915"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:43.919" level="INFO">${RESULT} = [{'diff': 5.179100000000242e-05}, {'diff': 5.077700000000185e-05}, {'diff': 5.079200000000089e-05}, {'diff': 5.076400000000175e-05}, {'diff': 5.076400000000175e-05}, {'diff': 5.076400000000175e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:43.916" endtime="20201030 18:28:43.919"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:43.924" level="INFO">${ACCURACY} = {'diff': [5.179100000000242e-05, 5.077700000000185e-05, 5.079200000000089e-05, 5.076400000000175e-05, 5.076400000000175e-05, 5.076400000000175e-05, 5.077800000000132e-05, 5.077799999999785e-05, 5.0778...</msg>
<status status="PASS" starttime="20201030 18:28:43.920" endtime="20201030 18:28:43.924"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:43.928" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201030 18:28:43.927" endtime="20201030 18:28:43.928"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:43.931" level="INFO">VALUE: [5.179100000000242e-05, 5.077700000000185e-05, 5.079200000000089e-05, 5.076400000000175e-05, 5.076400000000175e-05, 5.076400000000175e-05, 5.077800000000132e-05, 5.077799999999785e-05, 5.077800000000132e-05, 5.069499999999991e-05, 5.076400000000175e-05, 5.073599999999914e-05, 5.077699999999838e-05, 5.076400000000175e-05, 5.076400000000175e-05, 5.080600000000046e-05, 5.076400000000175e-05, 5.076299999999881e-05, 5.077800000000132e-05, 5.076399999999828e-05, 5.074999999999871e-05, 5.077800000000132e-05, 5.077800000000132e-05, 5.076400000000175e-05, 5.074999999999871e-05, 5.081900000000056e-05, 5.073600000000261e-05, 5.072199999999957e-05, 5.076400000000175e-05, 5.0708e-05, 5.077700000000185e-05, 5.079200000000089e-05, 5.080599999999699e-05, 5.073599999999914e-05, 5.077700000000185e-05, 5.076299999999881e-05, 5.072299999999905e-05, 5.076399999999828e-05, 5.076299999999881e-05, 5.076300000000228e-05, 5.076400000000175e-05, 5.069499999999991e-05, 5.072199999999957e-05, 5.079200000000089e-05, 5.076400000000175e-05, 5.076400000000175e-05, 5.076399999999828e-05, 5.079200000000089e-05, 5.077700000000185e-05, 5.076400000000175e-05]</msg>
<status status="PASS" starttime="20201030 18:28:43.929" endtime="20201030 18:28:43.931"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.925" endtime="20201030 18:28:43.932"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:43.936" endtime="20201030 18:28:43.955"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.934" endtime="20201030 18:28:43.956"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.933" endtime="20201030 18:28:43.956"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.577" endtime="20201030 18:28:43.956"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.576" endtime="20201030 18:28:43.956"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:43.965" endtime="20201030 18:28:43.981"></status>
</kw>
<msg timestamp="20201030 18:28:43.981" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:43.963" endtime="20201030 18:28:43.982"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:43.984" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:43.982" endtime="20201030 18:28:43.984"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:43.985" endtime="20201030 18:28:43.986"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.961" endtime="20201030 18:28:43.987"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.959" endtime="20201030 18:28:43.987"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:43.994" endtime="20201030 18:28:44.286"></status>
</kw>
<msg timestamp="20201030 18:28:44.289" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021787556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021839389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:43.992" endtime="20201030 18:28:44.289"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:44.297" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021787556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021839389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:44.290" endtime="20201030 18:28:44.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:44.298" endtime="20201030 18:28:44.300"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.990" endtime="20201030 18:28:44.300"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.988" endtime="20201030 18:28:44.301"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:44.305" level="INFO">${RESULT} = [{'diff': 5.183300000000113e-05}, {'diff': 5.076400000000175e-05}, {'diff': 5.076399999999828e-05}, {'diff': 5.077799999999785e-05}, {'diff': 5.077800000000132e-05}, {'diff': 5.077700000000185e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:44.302" endtime="20201030 18:28:44.305"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:44.309" level="INFO">${ACCURACY} = {'diff': [5.183300000000113e-05, 5.076400000000175e-05, 5.076399999999828e-05, 5.077799999999785e-05, 5.077800000000132e-05, 5.077700000000185e-05, 5.08469999999997e-05, 5.077699999999838e-05, 5.07499...</msg>
<status status="PASS" starttime="20201030 18:28:44.306" endtime="20201030 18:28:44.309"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:44.313" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201030 18:28:44.312" endtime="20201030 18:28:44.314"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:44.316" level="INFO">VALUE: [5.183300000000113e-05, 5.076400000000175e-05, 5.076399999999828e-05, 5.077799999999785e-05, 5.077800000000132e-05, 5.077700000000185e-05, 5.08469999999997e-05, 5.077699999999838e-05, 5.074999999999871e-05, 5.077799999999785e-05, 5.079200000000089e-05, 5.076400000000175e-05, 5.077799999999785e-05, 5.077800000000132e-05, 5.079199999999742e-05, 5.080500000000099e-05, 5.08339999999996e-05, 5.077799999999785e-05, 5.079200000000089e-05, 5.086099999999927e-05, 5.077800000000132e-05, 5.077800000000132e-05, 5.077799999999785e-05, 5.076299999999881e-05, 5.076399999999828e-05, 5.0708e-05, 5.077800000000132e-05, 5.076399999999828e-05, 5.076399999999828e-05, 5.077800000000132e-05, 5.079200000000089e-05, 5.077700000000185e-05, 5.077800000000132e-05, 5.0708e-05, 5.077799999999785e-05, 5.076400000000175e-05, 5.075000000000218e-05, 5.076400000000175e-05, 5.079099999999795e-05, 5.077699999999838e-05, 5.082000000000003e-05, 5.079100000000142e-05, 5.076300000000228e-05, 5.077699999999838e-05, 5.077799999999785e-05, 5.077800000000132e-05, 5.079200000000089e-05, 5.076400000000175e-05, 5.074999999999871e-05, 5.075000000000218e-05]</msg>
<status status="PASS" starttime="20201030 18:28:44.314" endtime="20201030 18:28:44.316"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.310" endtime="20201030 18:28:44.317"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:44.321" endtime="20201030 18:28:44.340"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.319" endtime="20201030 18:28:44.341"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.318" endtime="20201030 18:28:44.341"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.957" endtime="20201030 18:28:44.341"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.957" endtime="20201030 18:28:44.342"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:44.350" endtime="20201030 18:28:44.369"></status>
</kw>
<msg timestamp="20201030 18:28:44.370" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:44.349" endtime="20201030 18:28:44.370"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:44.372" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:44.371" endtime="20201030 18:28:44.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:44.374" endtime="20201030 18:28:44.375"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.346" endtime="20201030 18:28:44.376"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.344" endtime="20201030 18:28:44.376"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:44.382" endtime="20201030 18:28:44.667"></status>
</kw>
<msg timestamp="20201030 18:28:44.670" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025041486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025093306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:44.381" endtime="20201030 18:28:44.671"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:44.679" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025041486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025093306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:44.672" endtime="20201030 18:28:44.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:44.680" endtime="20201030 18:28:44.682"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.378" endtime="20201030 18:28:44.682"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.377" endtime="20201030 18:28:44.682"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:44.686" level="INFO">${RESULT} = [{'diff': 5.181999999999756e-05}, {'diff': 5.074999999999871e-05}, {'diff': 5.074999999999871e-05}, {'diff': 5.073599999999914e-05}, {'diff': 5.074999999999871e-05}, {'diff': 5.076399999999828e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:44.683" endtime="20201030 18:28:44.687"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:44.690" level="INFO">${ACCURACY} = {'diff': [5.181999999999756e-05, 5.074999999999871e-05, 5.074999999999871e-05, 5.073599999999914e-05, 5.074999999999871e-05, 5.076399999999828e-05, 5.076399999999828e-05, 5.076399999999828e-05, 5.0736...</msg>
<status status="PASS" starttime="20201030 18:28:44.687" endtime="20201030 18:28:44.691"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:44.695" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201030 18:28:44.694" endtime="20201030 18:28:44.695"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:44.697" level="INFO">VALUE: [5.181999999999756e-05, 5.074999999999871e-05, 5.074999999999871e-05, 5.073599999999914e-05, 5.074999999999871e-05, 5.076399999999828e-05, 5.076399999999828e-05, 5.076399999999828e-05, 5.073600000000261e-05, 5.081900000000056e-05, 5.5694000000001964e-05, 5.569499999999797e-05, 5.079200000000089e-05, 5.076400000000175e-05, 5.077699999999838e-05, 5.08339999999996e-05, 5.076400000000175e-05, 5.569499999999797e-05, 5.0708e-05, 5.077800000000132e-05, 5.076299999999881e-05, 5.077799999999785e-05, 5.076400000000175e-05, 5.076399999999828e-05, 5.570900000000101e-05, 5.076399999999828e-05, 5.077700000000185e-05, 5.077800000000132e-05, 5.077700000000185e-05, 5.077800000000132e-05, 5.076299999999881e-05, 5.5680000000002394e-05, 5.077700000000185e-05, 5.566699999999883e-05, 5.076300000000228e-05, 5.5694000000001964e-05, 5.076400000000175e-05, 5.077799999999785e-05, 5.077800000000132e-05, 5.076399999999828e-05, 5.5750000000000244e-05, 5.0708e-05, 5.074999999999871e-05, 5.5694000000001964e-05, 5.076399999999828e-05, 5.08469999999997e-05, 5.073599999999914e-05, 5.079200000000089e-05, 5.079200000000089e-05, 5.56809999999984e-05]</msg>
<status status="PASS" starttime="20201030 18:28:44.696" endtime="20201030 18:28:44.699"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.691" endtime="20201030 18:28:44.699"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:44.703" endtime="20201030 18:28:44.722"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.702" endtime="20201030 18:28:44.723"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.700" endtime="20201030 18:28:44.723"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.342" endtime="20201030 18:28:44.724"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.342" endtime="20201030 18:28:44.724"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:44.732" endtime="20201030 18:28:44.748"></status>
</kw>
<msg timestamp="20201030 18:28:44.749" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:44.731" endtime="20201030 18:28:44.749"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:44.752" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:44.750" endtime="20201030 18:28:44.752"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:44.753" endtime="20201030 18:28:44.754"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.728" endtime="20201030 18:28:44.755"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.726" endtime="20201030 18:28:44.755"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:44.762" endtime="20201030 18:28:45.047"></status>
</kw>
<msg timestamp="20201030 18:28:45.050" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021739528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021796278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:44.760" endtime="20201030 18:28:45.050"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:45.058" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021739528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021796278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:45.051" endtime="20201030 18:28:45.058"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:45.059" endtime="20201030 18:28:45.061"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.757" endtime="20201030 18:28:45.061"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.756" endtime="20201030 18:28:45.062"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:45.066" level="INFO">${RESULT} = [{'diff': 5.6749999999997774e-05}, {'diff': 5.5694000000001964e-05}, {'diff': 5.566699999999883e-05}, {'diff': 5.5680000000002394e-05}, {'diff': 5.5693999999998495e-05}, {'diff': 5.569500000000144e-05...</msg>
<status status="PASS" starttime="20201030 18:28:45.063" endtime="20201030 18:28:45.066"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:45.071" level="INFO">${ACCURACY} = {'diff': [5.6749999999997774e-05, 5.5694000000001964e-05, 5.566699999999883e-05, 5.5680000000002394e-05, 5.5693999999998495e-05, 5.569500000000144e-05, 5.565299999999926e-05, 5.5693999999998495e-05, 5...</msg>
<status status="PASS" starttime="20201030 18:28:45.067" endtime="20201030 18:28:45.071"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:45.075" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201030 18:28:45.074" endtime="20201030 18:28:45.075"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:45.077" level="INFO">VALUE: [5.6749999999997774e-05, 5.5694000000001964e-05, 5.566699999999883e-05, 5.5680000000002394e-05, 5.5693999999998495e-05, 5.569500000000144e-05, 5.565299999999926e-05, 5.5693999999998495e-05, 5.562500000000012e-05, 5.56809999999984e-05, 5.5708000000001534e-05, 5.5707999999998065e-05, 5.5693999999998495e-05, 5.5693999999998495e-05, 5.569499999999797e-05, 5.56809999999984e-05, 5.5721999999997635e-05, 5.5708000000001534e-05, 5.5694000000001964e-05, 5.56809999999984e-05, 5.561100000000055e-05, 5.568100000000187e-05, 5.562500000000012e-05, 5.56809999999984e-05, 5.569499999999797e-05, 5.56670000000023e-05, 5.5693999999998495e-05, 5.5679999999998925e-05, 5.56809999999984e-05, 5.5693999999998495e-05, 5.5749999999996774e-05, 5.5679999999998925e-05, 5.5721999999997635e-05, 5.5693999999998495e-05, 5.5679999999998925e-05, 5.5707999999998065e-05, 5.569500000000144e-05, 5.5707999999998065e-05, 5.561100000000055e-05, 5.563899999999969e-05, 5.5680000000002394e-05, 5.56809999999984e-05, 5.561100000000055e-05, 5.5707999999998065e-05, 5.5693999999998495e-05, 5.566699999999883e-05, 5.56809999999984e-05, 5.5693999999998495e-05, 5.56809999999984e-05, 5.5693999999998495e-05]</msg>
<status status="PASS" starttime="20201030 18:28:45.076" endtime="20201030 18:28:45.078"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.072" endtime="20201030 18:28:45.079"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:45.082" endtime="20201030 18:28:45.102"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.081" endtime="20201030 18:28:45.102"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.080" endtime="20201030 18:28:45.103"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.725" endtime="20201030 18:28:45.103"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.724" endtime="20201030 18:28:45.103"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:45.112" endtime="20201030 18:28:45.128"></status>
</kw>
<msg timestamp="20201030 18:28:45.128" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:45.110" endtime="20201030 18:28:45.129"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:45.131" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:45.129" endtime="20201030 18:28:45.131"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:45.132" endtime="20201030 18:28:45.133"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.108" endtime="20201030 18:28:45.134"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.106" endtime="20201030 18:28:45.134"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:45.143" endtime="20201030 18:28:45.446"></status>
</kw>
<msg timestamp="20201030 18:28:45.450" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021612861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021669611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:45.141" endtime="20201030 18:28:45.450"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:45.458" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021612861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021669611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:45.451" endtime="20201030 18:28:45.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:45.459" endtime="20201030 18:28:45.461"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.137" endtime="20201030 18:28:45.461"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.135" endtime="20201030 18:28:45.462"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:45.465" level="INFO">${RESULT} = [{'diff': 5.6749999999997774e-05}, {'diff': 5.5694000000001964e-05}, {'diff': 5.5679999999998925e-05}, {'diff': 5.5680000000002394e-05}, {'diff': 5.5694000000001964e-05}, {'diff': 5.5750000000000244e-...</msg>
<status status="PASS" starttime="20201030 18:28:45.462" endtime="20201030 18:28:45.466"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:45.470" level="INFO">${ACCURACY} = {'diff': [5.6749999999997774e-05, 5.5694000000001964e-05, 5.5679999999998925e-05, 5.5680000000002394e-05, 5.5694000000001964e-05, 5.5750000000000244e-05, 5.569499999999797e-05, 5.5679999999998925e-05,...</msg>
<status status="PASS" starttime="20201030 18:28:45.466" endtime="20201030 18:28:45.470"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:45.474" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201030 18:28:45.473" endtime="20201030 18:28:45.474"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:45.477" level="INFO">VALUE: [5.6749999999997774e-05, 5.5694000000001964e-05, 5.5679999999998925e-05, 5.5680000000002394e-05, 5.5694000000001964e-05, 5.5750000000000244e-05, 5.569499999999797e-05, 5.5679999999998925e-05, 5.565299999999926e-05, 5.5679999999998925e-05, 5.56809999999984e-05, 5.568100000000187e-05, 5.5679999999998925e-05, 5.56809999999984e-05, 5.5665999999999355e-05, 5.5693999999998495e-05, 5.5694000000001964e-05, 5.5722000000001104e-05, 5.5679999999998925e-05, 5.563899999999969e-05, 5.570900000000101e-05, 5.5679999999998925e-05, 5.5722000000001104e-05, 5.570900000000101e-05, 5.566699999999883e-05, 5.5694000000001964e-05, 5.5679999999998925e-05, 5.569500000000144e-05, 5.562500000000012e-05, 5.569500000000144e-05, 5.565299999999926e-05, 5.5694000000001964e-05, 5.5694000000001964e-05, 5.569499999999797e-05, 5.5680000000002394e-05, 5.5708000000001534e-05, 5.5707999999998065e-05, 5.563899999999969e-05, 5.568100000000187e-05, 5.5763999999999814e-05, 5.5693999999998495e-05, 5.5694000000001964e-05, 5.568100000000187e-05, 5.5680000000002394e-05, 5.56809999999984e-05, 5.5708000000001534e-05, 5.56670000000023e-05, 5.5693999999998495e-05, 5.568100000000187e-05, 5.5665999999999355e-05]</msg>
<status status="PASS" starttime="20201030 18:28:45.475" endtime="20201030 18:28:45.477"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.470" endtime="20201030 18:28:45.478"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:45.482" endtime="20201030 18:28:45.501"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.480" endtime="20201030 18:28:45.502"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.479" endtime="20201030 18:28:45.502"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.104" endtime="20201030 18:28:45.502"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.103" endtime="20201030 18:28:45.502"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:45.511" endtime="20201030 18:28:45.528"></status>
</kw>
<msg timestamp="20201030 18:28:45.529" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:45.510" endtime="20201030 18:28:45.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:45.531" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:45.530" endtime="20201030 18:28:45.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:45.532" endtime="20201030 18:28:45.534"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.507" endtime="20201030 18:28:45.535"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.505" endtime="20201030 18:28:45.535"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:45.541" endtime="20201030 18:28:45.827"></status>
</kw>
<msg timestamp="20201030 18:28:45.831" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022935236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022991958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:45.540" endtime="20201030 18:28:45.831"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:45.839" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022935236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022991958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:45.832" endtime="20201030 18:28:45.839"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:45.840" endtime="20201030 18:28:45.842"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.537" endtime="20201030 18:28:45.842"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.536" endtime="20201030 18:28:45.843"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:45.846" level="INFO">${RESULT} = [{'diff': 5.6721999999998635e-05}, {'diff': 5.569500000000144e-05}, {'diff': 5.5679999999998925e-05}, {'diff': 5.568100000000187e-05}, {'diff': 5.5708000000001534e-05}, {'diff': 5.56670000000023e-05},...</msg>
<status status="PASS" starttime="20201030 18:28:45.843" endtime="20201030 18:28:45.847"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:45.850" level="INFO">${ACCURACY} = {'diff': [5.6721999999998635e-05, 5.569500000000144e-05, 5.5679999999998925e-05, 5.568100000000187e-05, 5.5708000000001534e-05, 5.56670000000023e-05, 5.569500000000144e-05, 5.5722000000001104e-05, 5.5...</msg>
<status status="PASS" starttime="20201030 18:28:45.847" endtime="20201030 18:28:45.851"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:45.855" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201030 18:28:45.854" endtime="20201030 18:28:45.855"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:45.857" level="INFO">VALUE: [5.6721999999998635e-05, 5.569500000000144e-05, 5.5679999999998925e-05, 5.568100000000187e-05, 5.5708000000001534e-05, 5.56670000000023e-05, 5.569500000000144e-05, 5.5722000000001104e-05, 5.56809999999984e-05, 5.568100000000187e-05, 5.570900000000101e-05, 5.5736000000000674e-05, 5.5680000000002394e-05, 5.569500000000144e-05, 5.570899999999754e-05, 5.568100000000187e-05, 5.5693999999998495e-05, 5.565300000000273e-05, 5.569500000000144e-05, 5.5679999999998925e-05, 5.5651999999999785e-05, 5.5694000000001964e-05, 5.568100000000187e-05, 5.5693999999998495e-05, 5.5694000000001964e-05, 5.568100000000187e-05, 5.5722000000001104e-05, 5.569500000000144e-05, 5.5722000000001104e-05, 5.5694000000001964e-05, 5.5708000000001534e-05, 5.569500000000144e-05, 5.5666000000002824e-05, 5.56809999999984e-05, 5.56809999999984e-05, 5.56809999999984e-05, 5.569499999999797e-05, 5.5722000000001104e-05, 5.5708000000001534e-05, 5.563899999999969e-05, 5.56809999999984e-05, 5.566699999999883e-05, 5.56809999999984e-05, 5.5680000000002394e-05, 5.5750000000000244e-05, 5.568100000000187e-05, 5.5665999999999355e-05, 5.569499999999797e-05, 5.566699999999883e-05, 5.568100000000187e-05]</msg>
<status status="PASS" starttime="20201030 18:28:45.856" endtime="20201030 18:28:45.859"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.851" endtime="20201030 18:28:45.859"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:45.863" endtime="20201030 18:28:45.883"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.862" endtime="20201030 18:28:45.883"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.860" endtime="20201030 18:28:45.883"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.503" endtime="20201030 18:28:45.884"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.503" endtime="20201030 18:28:45.884"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:45.892" endtime="20201030 18:28:45.909"></status>
</kw>
<msg timestamp="20201030 18:28:45.909" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:45.891" endtime="20201030 18:28:45.909"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:45.912" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:45.910" endtime="20201030 18:28:45.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:45.913" endtime="20201030 18:28:45.914"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.888" endtime="20201030 18:28:45.915"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.886" endtime="20201030 18:28:45.915"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:45.921" endtime="20201030 18:28:46.224"></status>
</kw>
<msg timestamp="20201030 18:28:46.227" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021717847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021774597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:45.920" endtime="20201030 18:28:46.227"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:46.235" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021717847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021774597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:46.228" endtime="20201030 18:28:46.236"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:46.236" endtime="20201030 18:28:46.238"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.917" endtime="20201030 18:28:46.238"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.916" endtime="20201030 18:28:46.239"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:46.243" level="INFO">${RESULT} = [{'diff': 5.6750000000001244e-05}, {'diff': 5.5693999999998495e-05}, {'diff': 5.569499999999797e-05}, {'diff': 5.5694000000001964e-05}, {'diff': 5.572299999999711e-05}, {'diff': 5.5680000000002394e-05...</msg>
<status status="PASS" starttime="20201030 18:28:46.240" endtime="20201030 18:28:46.243"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:46.248" level="INFO">${ACCURACY} = {'diff': [5.6750000000001244e-05, 5.5693999999998495e-05, 5.569499999999797e-05, 5.5694000000001964e-05, 5.572299999999711e-05, 5.5680000000002394e-05, 5.5708000000001534e-05, 5.563899999999969e-05, 5...</msg>
<status status="PASS" starttime="20201030 18:28:46.244" endtime="20201030 18:28:46.248"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:46.252" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201030 18:28:46.251" endtime="20201030 18:28:46.253"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:46.255" level="INFO">VALUE: [5.6750000000001244e-05, 5.5693999999998495e-05, 5.569499999999797e-05, 5.5694000000001964e-05, 5.572299999999711e-05, 5.5680000000002394e-05, 5.5708000000001534e-05, 5.563899999999969e-05, 5.56809999999984e-05, 5.5693999999998495e-05, 5.5679999999998925e-05, 5.5736000000000674e-05, 5.563899999999969e-05, 5.5680000000002394e-05, 5.565299999999926e-05, 5.56809999999984e-05, 5.563900000000316e-05, 5.5694000000001964e-05, 5.569499999999797e-05, 5.5679999999998925e-05, 5.5708000000001534e-05, 5.569499999999797e-05, 5.5680000000002394e-05, 5.5694000000001964e-05, 5.5694000000001964e-05, 5.569500000000144e-05, 5.5707999999998065e-05, 5.5693999999998495e-05, 5.5722000000001104e-05, 5.565299999999926e-05, 5.570899999999754e-05, 5.56809999999984e-05, 5.56809999999984e-05, 5.5708000000001534e-05, 5.5665999999999355e-05, 5.56809999999984e-05, 5.5665999999999355e-05, 5.5693999999998495e-05, 5.5693999999998495e-05, 5.5750000000000244e-05, 5.5693999999998495e-05, 5.56809999999984e-05, 5.5694000000001964e-05, 5.561100000000055e-05, 5.568100000000187e-05, 5.569500000000144e-05, 5.569500000000144e-05, 5.5694000000001964e-05, 5.566699999999883e-05, 5.56809999999984e-05]</msg>
<status status="PASS" starttime="20201030 18:28:46.253" endtime="20201030 18:28:46.255"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.249" endtime="20201030 18:28:46.256"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:46.259" endtime="20201030 18:28:46.279"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.258" endtime="20201030 18:28:46.279"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.257" endtime="20201030 18:28:46.280"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.885" endtime="20201030 18:28:46.280"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.884" endtime="20201030 18:28:46.280"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:46.289" endtime="20201030 18:28:46.305"></status>
</kw>
<msg timestamp="20201030 18:28:46.305" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:46.287" endtime="20201030 18:28:46.306"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:46.308" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:46.306" endtime="20201030 18:28:46.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:46.309" endtime="20201030 18:28:46.311"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.285" endtime="20201030 18:28:46.311"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.283" endtime="20201030 18:28:46.312"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:46.318" endtime="20201030 18:28:46.603"></status>
</kw>
<msg timestamp="20201030 18:28:46.607" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021621694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021678444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:46.316" endtime="20201030 18:28:46.607"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:46.615" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021621694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021678444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:46.608" endtime="20201030 18:28:46.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:46.616" endtime="20201030 18:28:46.617"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.314" endtime="20201030 18:28:46.618"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.312" endtime="20201030 18:28:46.618"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:46.622" level="INFO">${RESULT} = [{'diff': 5.6750000000001244e-05}, {'diff': 6.054099999999729e-05}, {'diff': 5.5735999999997204e-05}, {'diff': 5.566699999999883e-05}, {'diff': 5.5736000000000674e-05}, {'diff': 5.568100000000187e-05}...</msg>
<status status="PASS" starttime="20201030 18:28:46.619" endtime="20201030 18:28:46.623"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:46.626" level="INFO">${ACCURACY} = {'diff': [5.6750000000001244e-05, 6.054099999999729e-05, 5.5735999999997204e-05, 5.566699999999883e-05, 5.5736000000000674e-05, 5.568100000000187e-05, 5.5665999999999355e-05, 6.059699999999904e-05, 5....</msg>
<status status="PASS" starttime="20201030 18:28:46.623" endtime="20201030 18:28:46.627"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:46.631" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201030 18:28:46.630" endtime="20201030 18:28:46.631"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:46.633" level="INFO">VALUE: [5.6750000000001244e-05, 6.054099999999729e-05, 5.5735999999997204e-05, 5.566699999999883e-05, 5.5736000000000674e-05, 5.568100000000187e-05, 5.5665999999999355e-05, 6.059699999999904e-05, 5.566699999999883e-05, 5.5679999999998925e-05, 5.5651999999999785e-05, 5.566699999999883e-05, 6.0542000000000235e-05, 6.059699999999904e-05, 5.56670000000023e-05, 5.569499999999797e-05, 5.565300000000273e-05, 5.5680000000002394e-05, 5.569500000000144e-05, 5.5694000000001964e-05, 5.5665999999999355e-05, 5.56809999999984e-05, 6.0569999999999374e-05, 5.566699999999883e-05, 5.56809999999984e-05, 5.569499999999797e-05, 5.5680000000002394e-05, 5.5680000000002394e-05, 5.568100000000187e-05, 5.566699999999883e-05, 5.56809999999984e-05, 6.059699999999904e-05, 6.059699999999904e-05, 5.565299999999926e-05, 5.5693999999998495e-05, 5.5693999999998495e-05, 5.5721999999997635e-05, 6.058299999999947e-05, 5.568100000000187e-05, 5.5679999999998925e-05, 5.569500000000144e-05, 5.56809999999984e-05, 5.56809999999984e-05, 5.562500000000012e-05, 5.5694000000001964e-05, 5.565299999999926e-05, 5.559699999999751e-05, 5.5693999999998495e-05, 6.0542000000000235e-05, 5.56809999999984e-05]</msg>
<status status="PASS" starttime="20201030 18:28:46.632" endtime="20201030 18:28:46.634"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.627" endtime="20201030 18:28:46.635"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:46.638" endtime="20201030 18:28:46.658"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.637" endtime="20201030 18:28:46.658"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.636" endtime="20201030 18:28:46.658"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.281" endtime="20201030 18:28:46.659"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.281" endtime="20201030 18:28:46.659"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:46.667" endtime="20201030 18:28:46.685"></status>
</kw>
<msg timestamp="20201030 18:28:46.685" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:46.666" endtime="20201030 18:28:46.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:46.688" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:46.686" endtime="20201030 18:28:46.688"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:46.689" endtime="20201030 18:28:46.690"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.663" endtime="20201030 18:28:46.691"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.661" endtime="20201030 18:28:46.691"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:46.698" endtime="20201030 18:28:46.984"></status>
</kw>
<msg timestamp="20201030 18:28:46.987" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022624958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022686611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:46.696" endtime="20201030 18:28:46.987"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:46.995" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022624958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022686611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:46.988" endtime="20201030 18:28:46.995"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:46.996" endtime="20201030 18:28:46.998"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.694" endtime="20201030 18:28:46.998"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.692" endtime="20201030 18:28:46.999"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:47.003" level="INFO">${RESULT} = [{'diff': 6.165299999999832e-05}, {'diff': 6.059699999999904e-05}, {'diff': 6.0666000000000886e-05}, {'diff': 6.059699999999904e-05}, {'diff': 6.061100000000208e-05}, {'diff': 6.062499999999818e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:28:46.999" endtime="20201030 18:28:47.003"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:47.007" level="INFO">${ACCURACY} = {'diff': [6.165299999999832e-05, 6.059699999999904e-05, 6.0666000000000886e-05, 6.059699999999904e-05, 6.061100000000208e-05, 6.062499999999818e-05, 6.054100000000076e-05, 6.061099999999861e-05, 6.059...</msg>
<status status="PASS" starttime="20201030 18:28:47.004" endtime="20201030 18:28:47.007"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:47.011" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201030 18:28:47.010" endtime="20201030 18:28:47.012"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:47.014" level="INFO">VALUE: [6.165299999999832e-05, 6.059699999999904e-05, 6.0666000000000886e-05, 6.059699999999904e-05, 6.061100000000208e-05, 6.062499999999818e-05, 6.054100000000076e-05, 6.061099999999861e-05, 6.059700000000251e-05, 6.061100000000208e-05, 6.0583999999998944e-05, 6.0597999999998514e-05, 6.063900000000122e-05, 6.058299999999947e-05, 6.061099999999861e-05, 6.058299999999947e-05, 6.062499999999818e-05, 6.061099999999861e-05, 6.059699999999904e-05, 6.059699999999904e-05, 6.0612000000001554e-05, 6.059700000000251e-05, 6.061099999999861e-05, 6.062499999999818e-05, 6.061100000000208e-05, 6.062500000000165e-05, 6.062500000000165e-05, 6.062500000000165e-05, 6.061099999999861e-05, 6.062499999999818e-05, 6.062499999999818e-05, 6.058299999999947e-05, 6.061100000000208e-05, 6.061099999999861e-05, 6.062499999999818e-05, 6.061099999999861e-05, 6.056900000000337e-05, 6.05689999999999e-05, 6.063900000000122e-05, 6.059699999999904e-05, 6.062500000000165e-05, 6.066700000000036e-05, 6.062500000000165e-05, 6.061099999999861e-05, 6.059699999999904e-05, 6.0612000000001554e-05, 6.0597999999998514e-05, 6.0569999999999374e-05, 6.059699999999904e-05, 6.0612000000001554e-05]</msg>
<status status="PASS" starttime="20201030 18:28:47.012" endtime="20201030 18:28:47.015"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.008" endtime="20201030 18:28:47.016"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:47.019" endtime="20201030 18:28:47.039"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.018" endtime="20201030 18:28:47.039"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.017" endtime="20201030 18:28:47.040"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.660" endtime="20201030 18:28:47.040"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.659" endtime="20201030 18:28:47.040"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:47.049" endtime="20201030 18:28:47.065"></status>
</kw>
<msg timestamp="20201030 18:28:47.065" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:47.047" endtime="20201030 18:28:47.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:47.068" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:47.067" endtime="20201030 18:28:47.068"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:47.069" endtime="20201030 18:28:47.071"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.045" endtime="20201030 18:28:47.071"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.042" endtime="20201030 18:28:47.072"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:47.078" endtime="20201030 18:28:47.363"></status>
</kw>
<msg timestamp="20201030 18:28:47.366" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021657222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021718944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:47.076" endtime="20201030 18:28:47.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:47.374" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021657222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021718944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:47.367" endtime="20201030 18:28:47.375"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:47.376" endtime="20201030 18:28:47.377"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.074" endtime="20201030 18:28:47.378"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.072" endtime="20201030 18:28:47.378"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:47.382" level="INFO">${RESULT} = [{'diff': 6.172200000000017e-05}, {'diff': 6.059700000000251e-05}, {'diff': 6.062500000000165e-05}, {'diff': 6.062500000000165e-05}, {'diff': 6.0555999999999804e-05}, {'diff': 6.062499999999818e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:28:47.379" endtime="20201030 18:28:47.382"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:47.387" level="INFO">${ACCURACY} = {'diff': [6.172200000000017e-05, 6.059700000000251e-05, 6.062500000000165e-05, 6.062500000000165e-05, 6.0555999999999804e-05, 6.062499999999818e-05, 6.061100000000208e-05, 6.059699999999904e-05, 6.062...</msg>
<status status="PASS" starttime="20201030 18:28:47.383" endtime="20201030 18:28:47.387"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:47.391" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201030 18:28:47.390" endtime="20201030 18:28:47.392"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:47.394" level="INFO">VALUE: [6.172200000000017e-05, 6.059700000000251e-05, 6.062500000000165e-05, 6.062500000000165e-05, 6.0555999999999804e-05, 6.062499999999818e-05, 6.061100000000208e-05, 6.059699999999904e-05, 6.062500000000165e-05, 6.0555999999999804e-05, 6.059700000000251e-05, 6.0598000000001984e-05, 6.062499999999818e-05, 6.062499999999818e-05, 6.05689999999999e-05, 6.062500000000165e-05, 6.062500000000165e-05, 6.062499999999818e-05, 6.063900000000122e-05, 6.062500000000165e-05, 6.061100000000208e-05, 6.062500000000165e-05, 6.061100000000208e-05, 6.063899999999775e-05, 6.061099999999861e-05, 6.062500000000165e-05, 6.0612000000001554e-05, 6.061099999999861e-05, 6.0680000000000456e-05, 6.062499999999818e-05, 6.061099999999861e-05, 6.0611999999998084e-05, 6.061099999999861e-05, 6.061100000000208e-05, 6.063899999999775e-05, 6.061099999999861e-05, 6.061099999999861e-05, 6.063900000000122e-05, 6.063899999999775e-05, 6.0611999999998084e-05, 6.061099999999861e-05, 6.062499999999818e-05, 6.059699999999904e-05, 6.059699999999904e-05, 6.058299999999947e-05, 6.063899999999775e-05, 6.063900000000122e-05, 6.061099999999861e-05, 6.063900000000122e-05, 6.059699999999904e-05]</msg>
<status status="PASS" starttime="20201030 18:28:47.393" endtime="20201030 18:28:47.395"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.388" endtime="20201030 18:28:47.395"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:47.399" endtime="20201030 18:28:47.418"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.397" endtime="20201030 18:28:47.419"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.396" endtime="20201030 18:28:47.419"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.041" endtime="20201030 18:28:47.419"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.040" endtime="20201030 18:28:47.419"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:47.428" endtime="20201030 18:28:47.444"></status>
</kw>
<msg timestamp="20201030 18:28:47.445" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:47.427" endtime="20201030 18:28:47.445"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:47.447" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:47.446" endtime="20201030 18:28:47.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:47.448" endtime="20201030 18:28:47.450"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.424" endtime="20201030 18:28:47.451"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.422" endtime="20201030 18:28:47.451"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:47.457" endtime="20201030 18:28:47.744"></status>
</kw>
<msg timestamp="20201030 18:28:47.747" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021772181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021833875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:47.456" endtime="20201030 18:28:47.747"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:47.755" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021772181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021833875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:47.748" endtime="20201030 18:28:47.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:47.756" endtime="20201030 18:28:47.758"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.453" endtime="20201030 18:28:47.758"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.452" endtime="20201030 18:28:47.759"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:47.763" level="INFO">${RESULT} = [{'diff': 6.169399999999756e-05}, {'diff': 6.0583999999998944e-05}, {'diff': 6.065299999999732e-05}, {'diff': 6.062499999999818e-05}, {'diff': 6.061099999999861e-05}, {'diff': 6.061099999999861e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:28:47.760" endtime="20201030 18:28:47.763"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:47.767" level="INFO">${ACCURACY} = {'diff': [6.169399999999756e-05, 6.0583999999998944e-05, 6.065299999999732e-05, 6.062499999999818e-05, 6.061099999999861e-05, 6.061099999999861e-05, 6.062499999999818e-05, 6.062499999999818e-05, 6.065...</msg>
<status status="PASS" starttime="20201030 18:28:47.764" endtime="20201030 18:28:47.767"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:47.771" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201030 18:28:47.770" endtime="20201030 18:28:47.771"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:47.774" level="INFO">VALUE: [6.169399999999756e-05, 6.0583999999998944e-05, 6.065299999999732e-05, 6.062499999999818e-05, 6.061099999999861e-05, 6.061099999999861e-05, 6.062499999999818e-05, 6.062499999999818e-05, 6.065300000000079e-05, 6.061099999999861e-05, 6.062500000000165e-05, 6.066700000000036e-05, 6.0569999999999374e-05, 6.063900000000122e-05, 6.061099999999861e-05, 6.059699999999904e-05, 6.062499999999818e-05, 6.061099999999861e-05, 6.061099999999861e-05, 6.061100000000208e-05, 6.062500000000165e-05, 6.061099999999861e-05, 6.0612000000001554e-05, 6.063899999999775e-05, 6.062500000000165e-05, 6.061099999999861e-05, 6.063899999999775e-05, 6.062499999999818e-05, 6.0583999999998944e-05, 6.061099999999861e-05, 6.0694000000000026e-05, 6.062500000000165e-05, 6.059699999999904e-05, 6.058299999999947e-05, 6.062500000000165e-05, 6.062500000000165e-05, 6.062499999999818e-05, 6.062499999999818e-05, 6.061099999999861e-05, 6.058299999999947e-05, 6.065299999999732e-05, 6.061099999999861e-05, 6.061100000000208e-05, 6.062500000000165e-05, 6.059699999999904e-05, 6.065300000000079e-05, 6.061100000000208e-05, 6.062500000000165e-05, 6.0597999999998514e-05, 6.065300000000079e-05]</msg>
<status status="PASS" starttime="20201030 18:28:47.772" endtime="20201030 18:28:47.846"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.768" endtime="20201030 18:28:47.847"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:47.850" endtime="20201030 18:28:47.870"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.849" endtime="20201030 18:28:47.870"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.848" endtime="20201030 18:28:47.871"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.420" endtime="20201030 18:28:47.871"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.420" endtime="20201030 18:28:47.871"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:47.880" endtime="20201030 18:28:47.899"></status>
</kw>
<msg timestamp="20201030 18:28:47.900" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:47.878" endtime="20201030 18:28:47.900"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:47.902" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:47.901" endtime="20201030 18:28:47.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:47.903" endtime="20201030 18:28:47.905"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.876" endtime="20201030 18:28:47.905"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.873" endtime="20201030 18:28:47.906"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:47.912" endtime="20201030 18:28:48.198"></status>
</kw>
<msg timestamp="20201030 18:28:48.201" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025005875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025067556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:47.911" endtime="20201030 18:28:48.202"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:48.209" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025005875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025067556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:48.202" endtime="20201030 18:28:48.210"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:48.211" endtime="20201030 18:28:48.212"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.908" endtime="20201030 18:28:48.213"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.906" endtime="20201030 18:28:48.213"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:48.217" level="INFO">${RESULT} = [{'diff': 6.168100000000093e-05}, {'diff': 6.061099999999861e-05}, {'diff': 6.062499999999818e-05}, {'diff': 6.062500000000165e-05}, {'diff': 6.062499999999818e-05}, {'diff': 6.061099999999861e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:48.214" endtime="20201030 18:28:48.217"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:48.221" level="INFO">${ACCURACY} = {'diff': [6.168100000000093e-05, 6.061099999999861e-05, 6.062499999999818e-05, 6.062500000000165e-05, 6.062499999999818e-05, 6.061099999999861e-05, 6.062500000000165e-05, 6.062500000000165e-05, 6.0611...</msg>
<status status="PASS" starttime="20201030 18:28:48.218" endtime="20201030 18:28:48.221"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:48.225" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201030 18:28:48.224" endtime="20201030 18:28:48.226"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:48.228" level="INFO">VALUE: [6.168100000000093e-05, 6.061099999999861e-05, 6.062499999999818e-05, 6.062500000000165e-05, 6.062499999999818e-05, 6.061099999999861e-05, 6.062500000000165e-05, 6.062500000000165e-05, 6.061100000000208e-05, 6.061100000000208e-05, 6.061100000000208e-05, 6.061100000000208e-05, 6.062500000000165e-05, 6.061100000000208e-05, 6.054099999999729e-05, 6.0611999999998084e-05, 6.062499999999818e-05, 6.062499999999818e-05, 6.062499999999818e-05, 6.063900000000122e-05, 6.062499999999818e-05, 6.061100000000208e-05, 6.05689999999999e-05, 6.062500000000165e-05, 6.062500000000165e-05, 6.062499999999818e-05, 6.061100000000208e-05, 6.058299999999947e-05, 6.059699999999904e-05, 6.061099999999861e-05, 6.062500000000165e-05, 6.062500000000165e-05, 6.062499999999818e-05, 6.061099999999861e-05, 6.062500000000165e-05, 6.062499999999818e-05, 6.061099999999861e-05, 6.061099999999861e-05, 6.063900000000122e-05, 6.059699999999904e-05, 6.061100000000208e-05, 6.061100000000208e-05, 6.062500000000165e-05, 6.063899999999775e-05, 6.061100000000208e-05, 6.062500000000165e-05, 6.062499999999818e-05, 6.061099999999861e-05, 6.066699999999689e-05, 6.061099999999861e-05]</msg>
<status status="PASS" starttime="20201030 18:28:48.227" endtime="20201030 18:28:48.229"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.222" endtime="20201030 18:28:48.230"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:48.234" endtime="20201030 18:28:48.253"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.232" endtime="20201030 18:28:48.254"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.231" endtime="20201030 18:28:48.254"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.872" endtime="20201030 18:28:48.254"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.871" endtime="20201030 18:28:48.254"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:48.263" endtime="20201030 18:28:48.279"></status>
</kw>
<msg timestamp="20201030 18:28:48.280" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:48.261" endtime="20201030 18:28:48.280"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:48.282" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:48.281" endtime="20201030 18:28:48.283"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:48.283" endtime="20201030 18:28:48.285"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.259" endtime="20201030 18:28:48.286"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.257" endtime="20201030 18:28:48.286"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:48.292" endtime="20201030 18:28:48.578"></status>
</kw>
<msg timestamp="20201030 18:28:48.581" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021680972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021747569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:48.291" endtime="20201030 18:28:48.581"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:48.589" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021680972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021747569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:48.582" endtime="20201030 18:28:48.589"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:48.590" endtime="20201030 18:28:48.592"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.288" endtime="20201030 18:28:48.592"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.287" endtime="20201030 18:28:48.593"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:48.597" level="INFO">${RESULT} = [{'diff': 6.659700000000157e-05}, {'diff': 6.059699999999904e-05}, {'diff': 6.559700000000057e-05}, {'diff': 6.059699999999904e-05}, {'diff': 6.554200000000177e-05}, {'diff': 6.062500000000165e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:48.593" endtime="20201030 18:28:48.597"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:48.601" level="INFO">${ACCURACY} = {'diff': [6.659700000000157e-05, 6.059699999999904e-05, 6.559700000000057e-05, 6.059699999999904e-05, 6.554200000000177e-05, 6.062500000000165e-05, 6.062499999999818e-05, 6.059699999999904e-05, 6.5542...</msg>
<status status="PASS" starttime="20201030 18:28:48.597" endtime="20201030 18:28:48.602"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:48.606" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201030 18:28:48.605" endtime="20201030 18:28:48.606"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:48.608" level="INFO">VALUE: [6.659700000000157e-05, 6.059699999999904e-05, 6.559700000000057e-05, 6.059699999999904e-05, 6.554200000000177e-05, 6.062500000000165e-05, 6.062499999999818e-05, 6.059699999999904e-05, 6.554200000000177e-05, 6.554099999999882e-05, 6.548600000000002e-05, 6.0555999999999804e-05, 6.062500000000165e-05, 6.552799999999873e-05, 6.551399999999916e-05, 6.065299999999732e-05, 6.061099999999861e-05, 6.061099999999861e-05, 6.063899999999775e-05, 6.062500000000165e-05, 6.0555999999999804e-05, 6.063900000000122e-05, 6.061100000000208e-05, 6.551399999999916e-05, 6.554099999999882e-05, 6.062499999999818e-05, 6.059699999999904e-05, 6.551399999999916e-05, 6.0583999999998944e-05, 6.068099999999993e-05, 6.061099999999861e-05, 6.062499999999818e-05, 6.555599999999787e-05, 6.061099999999861e-05, 6.554200000000177e-05, 6.062499999999818e-05, 6.059699999999904e-05, 6.061100000000208e-05, 6.061100000000208e-05, 6.552799999999873e-05, 6.061099999999861e-05, 6.058299999999947e-05, 6.555600000000134e-05, 6.0555999999999804e-05, 6.059699999999904e-05, 6.061100000000208e-05, 6.554100000000229e-05, 6.0569999999999374e-05, 6.05689999999999e-05, 6.065300000000079e-05]</msg>
<status status="PASS" starttime="20201030 18:28:48.607" endtime="20201030 18:28:48.609"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.602" endtime="20201030 18:28:48.610"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:48.613" endtime="20201030 18:28:48.633"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.612" endtime="20201030 18:28:48.634"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.611" endtime="20201030 18:28:48.634"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.255" endtime="20201030 18:28:48.634"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.255" endtime="20201030 18:28:48.635"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:48.646" endtime="20201030 18:28:48.664"></status>
</kw>
<msg timestamp="20201030 18:28:48.664" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:48.644" endtime="20201030 18:28:48.664"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:48.667" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:48.665" endtime="20201030 18:28:48.667"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:48.668" endtime="20201030 18:28:48.669"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.641" endtime="20201030 18:28:48.670"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.639" endtime="20201030 18:28:48.670"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:48.677" endtime="20201030 18:28:48.963"></status>
</kw>
<msg timestamp="20201030 18:28:48.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025614778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025681361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:48.675" endtime="20201030 18:28:48.966"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:48.974" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025614778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025681361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:48.967" endtime="20201030 18:28:48.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:48.975" endtime="20201030 18:28:48.977"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.673" endtime="20201030 18:28:48.977"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.671" endtime="20201030 18:28:48.978"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:48.982" level="INFO">${RESULT} = [{'diff': 6.658299999999853e-05}, {'diff': 6.552799999999873e-05}, {'diff': 6.55280000000022e-05}, {'diff': 6.549999999999959e-05}, {'diff': 6.559700000000057e-05}, {'diff': 6.55700000000009e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:28:48.978" endtime="20201030 18:28:48.982"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:48.986" level="INFO">${ACCURACY} = {'diff': [6.658299999999853e-05, 6.552799999999873e-05, 6.55280000000022e-05, 6.549999999999959e-05, 6.559700000000057e-05, 6.55700000000009e-05, 6.55280000000022e-05, 6.55419999999983e-05, 6.55139999...</msg>
<status status="PASS" starttime="20201030 18:28:48.983" endtime="20201030 18:28:48.986"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:48.990" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201030 18:28:48.989" endtime="20201030 18:28:48.991"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:48.993" level="INFO">VALUE: [6.658299999999853e-05, 6.552799999999873e-05, 6.55280000000022e-05, 6.549999999999959e-05, 6.559700000000057e-05, 6.55700000000009e-05, 6.55280000000022e-05, 6.55419999999983e-05, 6.551399999999916e-05, 6.555599999999787e-05, 6.552799999999873e-05, 6.55280000000022e-05, 6.554099999999882e-05, 6.554099999999882e-05, 6.552799999999873e-05, 6.547199999999698e-05, 6.555499999999839e-05, 6.554099999999882e-05, 6.55280000000022e-05, 6.552799999999873e-05, 6.552700000000272e-05, 6.551400000000263e-05, 6.554200000000177e-05, 6.551399999999916e-05, 6.555599999999787e-05, 6.554099999999882e-05, 6.555499999999839e-05, 6.55419999999983e-05, 6.554200000000177e-05, 6.552799999999873e-05, 6.552799999999873e-05, 6.551400000000263e-05, 6.55280000000022e-05, 6.551400000000263e-05, 6.55419999999983e-05, 6.55419999999983e-05, 6.554099999999882e-05, 6.555500000000186e-05, 6.555600000000134e-05, 6.552799999999873e-05, 6.555499999999839e-05, 6.552799999999873e-05, 6.562499999999971e-05, 6.558400000000048e-05, 6.552799999999873e-05, 6.555500000000186e-05, 6.555500000000186e-05, 6.552799999999873e-05, 6.552799999999873e-05, 6.55280000000022e-05]</msg>
<status status="PASS" starttime="20201030 18:28:48.991" endtime="20201030 18:28:48.993"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.987" endtime="20201030 18:28:48.994"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:48.998" endtime="20201030 18:28:49.017"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.996" endtime="20201030 18:28:49.018"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.995" endtime="20201030 18:28:49.018"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.636" endtime="20201030 18:28:49.018"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.635" endtime="20201030 18:28:49.018"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:49.027" endtime="20201030 18:28:49.044"></status>
</kw>
<msg timestamp="20201030 18:28:49.045" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:49.025" endtime="20201030 18:28:49.045"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:49.047" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:49.046" endtime="20201030 18:28:49.048"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:49.048" endtime="20201030 18:28:49.050"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.023" endtime="20201030 18:28:49.051"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.021" endtime="20201030 18:28:49.051"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:49.057" endtime="20201030 18:28:49.342"></status>
</kw>
<msg timestamp="20201030 18:28:49.346" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022730056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022796625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:49.056" endtime="20201030 18:28:49.346"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:49.354" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022730056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022796625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:49.347" endtime="20201030 18:28:49.354"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:49.355" endtime="20201030 18:28:49.356"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.053" endtime="20201030 18:28:49.357"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.052" endtime="20201030 18:28:49.357"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:49.361" level="INFO">${RESULT} = [{'diff': 6.656900000000243e-05}, {'diff': 6.554099999999882e-05}, {'diff': 6.552799999999873e-05}, {'diff': 6.555499999999839e-05}, {'diff': 6.552799999999873e-05}, {'diff': 6.552799999999873e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:49.358" endtime="20201030 18:28:49.362"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:49.365" level="INFO">${ACCURACY} = {'diff': [6.656900000000243e-05, 6.554099999999882e-05, 6.552799999999873e-05, 6.555499999999839e-05, 6.552799999999873e-05, 6.552799999999873e-05, 6.552799999999873e-05, 6.555599999999787e-05, 6.5528...</msg>
<status status="PASS" starttime="20201030 18:28:49.362" endtime="20201030 18:28:49.366"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:49.370" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201030 18:28:49.369" endtime="20201030 18:28:49.370"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:49.372" level="INFO">VALUE: [6.656900000000243e-05, 6.554099999999882e-05, 6.552799999999873e-05, 6.555499999999839e-05, 6.552799999999873e-05, 6.552799999999873e-05, 6.552799999999873e-05, 6.555599999999787e-05, 6.55280000000022e-05, 6.554099999999882e-05, 6.551399999999916e-05, 6.551400000000263e-05, 6.551399999999916e-05, 6.551399999999916e-05, 6.551400000000263e-05, 6.55280000000022e-05, 6.552799999999873e-05, 6.554200000000177e-05, 6.55280000000022e-05, 6.551399999999916e-05, 6.554200000000177e-05, 6.554200000000177e-05, 6.551399999999916e-05, 6.552699999999925e-05, 6.554100000000229e-05, 6.552699999999925e-05, 6.555599999999787e-05, 6.548600000000002e-05, 6.55280000000022e-05, 6.551399999999916e-05, 6.552700000000272e-05, 6.552799999999873e-05, 6.55280000000022e-05, 6.547299999999992e-05, 6.552799999999873e-05, 6.551399999999916e-05, 6.554200000000177e-05, 6.555499999999839e-05, 6.554200000000177e-05, 6.552699999999925e-05, 6.554099999999882e-05, 6.555500000000186e-05, 6.554099999999882e-05, 6.552799999999873e-05, 6.555600000000134e-05, 6.554200000000177e-05, 6.55280000000022e-05, 6.551399999999916e-05, 6.547299999999992e-05, 6.556900000000143e-05]</msg>
<status status="PASS" starttime="20201030 18:28:49.371" endtime="20201030 18:28:49.374"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.366" endtime="20201030 18:28:49.374"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:49.378" endtime="20201030 18:28:49.397"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.377" endtime="20201030 18:28:49.398"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.375" endtime="20201030 18:28:49.398"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.019" endtime="20201030 18:28:49.399"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.019" endtime="20201030 18:28:49.399"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:49.407" endtime="20201030 18:28:49.424"></status>
</kw>
<msg timestamp="20201030 18:28:49.424" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:49.406" endtime="20201030 18:28:49.424"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:49.427" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:49.425" endtime="20201030 18:28:49.427"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:49.428" endtime="20201030 18:28:49.429"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.403" endtime="20201030 18:28:49.430"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.401" endtime="20201030 18:28:49.430"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:49.437" endtime="20201030 18:28:49.721"></status>
</kw>
<msg timestamp="20201030 18:28:49.725" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021588042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021654639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:49.435" endtime="20201030 18:28:49.725"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:49.733" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021588042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021654639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:49.726" endtime="20201030 18:28:49.733"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:49.734" endtime="20201030 18:28:49.735"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.433" endtime="20201030 18:28:49.736"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.431" endtime="20201030 18:28:49.736"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:49.740" level="INFO">${RESULT} = [{'diff': 6.65969999999981e-05}, {'diff': 6.549999999999959e-05}, {'diff': 6.549999999999959e-05}, {'diff': 6.551400000000263e-05}, {'diff': 6.551400000000263e-05}, {'diff': 6.551399999999916e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:49.737" endtime="20201030 18:28:49.740"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:49.745" level="INFO">${ACCURACY} = {'diff': [6.65969999999981e-05, 6.549999999999959e-05, 6.549999999999959e-05, 6.551400000000263e-05, 6.551400000000263e-05, 6.551399999999916e-05, 6.55280000000022e-05, 6.554200000000177e-05, 6.554200...</msg>
<status status="PASS" starttime="20201030 18:28:49.741" endtime="20201030 18:28:49.745"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:49.750" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201030 18:28:49.749" endtime="20201030 18:28:49.750"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:49.752" level="INFO">VALUE: [6.65969999999981e-05, 6.549999999999959e-05, 6.549999999999959e-05, 6.551400000000263e-05, 6.551400000000263e-05, 6.551399999999916e-05, 6.55280000000022e-05, 6.554200000000177e-05, 6.554200000000177e-05, 6.554099999999882e-05, 6.552799999999873e-05, 6.547299999999992e-05, 6.551400000000263e-05, 6.55280000000022e-05, 6.551399999999916e-05, 6.554200000000177e-05, 6.552799999999873e-05, 6.55280000000022e-05, 6.545900000000035e-05, 6.555500000000186e-05, 6.559700000000057e-05, 6.545900000000035e-05, 6.551400000000263e-05, 6.552799999999873e-05, 6.554200000000177e-05, 6.548600000000002e-05, 6.554100000000229e-05, 6.552799999999873e-05, 6.552699999999925e-05, 6.551400000000263e-05, 6.55280000000022e-05, 6.551400000000263e-05, 6.55280000000022e-05, 6.551400000000263e-05, 6.555599999999787e-05, 6.556899999999796e-05, 6.554200000000177e-05, 6.555499999999839e-05, 6.552699999999925e-05, 6.554200000000177e-05, 6.552799999999873e-05, 6.545899999999688e-05, 6.55419999999983e-05, 6.556900000000143e-05, 6.552699999999925e-05, 6.55419999999983e-05, 6.555500000000186e-05, 6.554200000000177e-05, 6.55419999999983e-05, 6.554099999999882e-05]</msg>
<status status="PASS" starttime="20201030 18:28:49.751" endtime="20201030 18:28:49.753"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.746" endtime="20201030 18:28:49.753"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:49.757" endtime="20201030 18:28:49.776"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.755" endtime="20201030 18:28:49.777"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.754" endtime="20201030 18:28:49.777"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.400" endtime="20201030 18:28:49.777"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.399" endtime="20201030 18:28:49.778"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:49.786" endtime="20201030 18:28:49.803"></status>
</kw>
<msg timestamp="20201030 18:28:49.803" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:49.785" endtime="20201030 18:28:49.804"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:49.806" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:49.804" endtime="20201030 18:28:49.806"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:49.807" endtime="20201030 18:28:49.808"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.782" endtime="20201030 18:28:49.809"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.780" endtime="20201030 18:28:49.809"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:49.816" endtime="20201030 18:28:50.102"></status>
</kw>
<msg timestamp="20201030 18:28:50.105" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021661139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02172775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:28:49.814" endtime="20201030 18:28:50.105"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:50.113" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021661139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02172775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:28:50.106" endtime="20201030 18:28:50.114"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:50.114" endtime="20201030 18:28:50.116"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.812" endtime="20201030 18:28:50.116"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.810" endtime="20201030 18:28:50.117"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:50.121" level="INFO">${RESULT} = [{'diff': 6.661100000000114e-05}, {'diff': 6.55280000000022e-05}, {'diff': 6.55280000000022e-05}, {'diff': 6.552799999999873e-05}, {'diff': 6.548600000000002e-05}, {'diff': 6.55280000000022e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 18:28:50.118" endtime="20201030 18:28:50.121"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:50.125" level="INFO">${ACCURACY} = {'diff': [6.661100000000114e-05, 6.55280000000022e-05, 6.55280000000022e-05, 6.552799999999873e-05, 6.548600000000002e-05, 6.55280000000022e-05, 6.55280000000022e-05, 6.555600000000134e-05, 6.54580000...</msg>
<status status="PASS" starttime="20201030 18:28:50.122" endtime="20201030 18:28:50.125"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:50.129" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201030 18:28:50.128" endtime="20201030 18:28:50.129"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:50.132" level="INFO">VALUE: [6.661100000000114e-05, 6.55280000000022e-05, 6.55280000000022e-05, 6.552799999999873e-05, 6.548600000000002e-05, 6.55280000000022e-05, 6.55280000000022e-05, 6.555600000000134e-05, 6.545800000000088e-05, 6.55419999999983e-05, 6.556899999999796e-05, 6.55280000000022e-05, 6.551399999999916e-05, 6.551400000000263e-05, 6.555499999999839e-05, 6.552799999999873e-05, 6.549999999999959e-05, 6.551399999999916e-05, 6.551399999999916e-05, 6.55280000000022e-05, 6.554200000000177e-05, 6.55700000000009e-05, 6.549999999999959e-05, 6.555499999999839e-05, 6.551399999999916e-05, 6.554099999999882e-05, 6.551399999999916e-05, 6.554200000000177e-05, 6.55419999999983e-05, 6.55419999999983e-05, 6.55419999999983e-05, 6.55419999999983e-05, 6.551399999999916e-05, 6.55700000000009e-05, 6.55280000000022e-05, 6.558400000000048e-05, 6.552799999999873e-05, 6.552799999999873e-05, 6.554099999999882e-05, 6.561100000000014e-05, 6.55419999999983e-05, 6.555599999999787e-05, 6.555599999999787e-05, 6.554200000000177e-05, 6.554099999999882e-05, 6.55280000000022e-05, 6.554200000000177e-05, 6.555600000000134e-05, 6.552799999999873e-05, 6.551400000000263e-05]</msg>
<status status="PASS" starttime="20201030 18:28:50.130" endtime="20201030 18:28:50.132"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.126" endtime="20201030 18:28:50.133"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:50.136" endtime="20201030 18:28:50.156"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.135" endtime="20201030 18:28:50.156"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.134" endtime="20201030 18:28:50.157"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.779" endtime="20201030 18:28:50.157"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.778" endtime="20201030 18:28:50.157"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:50.166" endtime="20201030 18:28:50.187"></status>
</kw>
<msg timestamp="20201030 18:28:50.187" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:50.164" endtime="20201030 18:28:50.187"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:50.190" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:50.188" endtime="20201030 18:28:50.190"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:50.191" endtime="20201030 18:28:50.192"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.162" endtime="20201030 18:28:50.193"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.160" endtime="20201030 18:28:50.193"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:50.200" endtime="20201030 18:28:50.485"></status>
</kw>
<msg timestamp="20201030 18:28:50.488" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022590722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022726639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:50.198" endtime="20201030 18:28:50.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:50.496" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022590722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022726639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:50.489" endtime="20201030 18:28:50.496"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:50.497" endtime="20201030 18:28:50.498"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.196" endtime="20201030 18:28:50.499"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.194" endtime="20201030 18:28:50.499"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:50.503" level="INFO">${RESULT} = [{'diff': 0.0001359169999999993}, {'diff': 0.00013552799999999934}, {'diff': 0.00013552799999999934}, {'diff': 0.00013552799999999934}, {'diff': 0.0001355280000000028}, {'diff': 0.0001355000000000002}...</msg>
<status status="PASS" starttime="20201030 18:28:50.500" endtime="20201030 18:28:50.503"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:50.507" level="INFO">${ACCURACY} = {'diff': [0.0001359169999999993, 0.00013552799999999934, 0.00013552799999999934, 0.00013552799999999934, 0.0001355280000000028, 0.0001355000000000002, 0.0001355000000000002, 0.00013548600000000063, 0....</msg>
<status status="PASS" starttime="20201030 18:28:50.504" endtime="20201030 18:28:50.507"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:50.512" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201030 18:28:50.510" endtime="20201030 18:28:50.512"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:50.514" level="INFO">VALUE: [0.0001359169999999993, 0.00013552799999999934, 0.00013552799999999934, 0.00013552799999999934, 0.0001355280000000028, 0.0001355000000000002, 0.0001355000000000002, 0.00013548600000000063, 0.0001355130000000003, 0.00013552799999999934, 0.0001355000000000002, 0.00013552699999999987, 0.00013554099999999944, 0.00013552799999999934, 0.00013552799999999934, 0.00013551399999999977, 0.0001355000000000002, 0.00013552699999999987, 0.00013552799999999934, 0.00013554099999999944, 0.0001355419999999989, 0.00013552799999999934, 0.00013551399999999977, 0.0001355130000000003, 0.0001355000000000002, 0.00013556899999999858, 0.00013544400000000192, 0.00013548600000000063, 0.00013551399999999977, 0.00013554099999999944, 0.00013554099999999944, 0.00013552799999999934, 0.0001355000000000002, 0.00013552799999999934, 0.0001355000000000002, 0.0001355280000000028, 0.0001355130000000003, 0.0001355419999999989, 0.00013551399999999977, 0.0001355419999999989, 0.00013552799999999934, 0.00013551399999999977, 0.00013551400000000324, 0.00013552799999999934, 0.00013552699999999987, 0.00013552799999999934, 0.00013551399999999977, 0.00013548600000000063, 0.00013551399999999977, 0.00013552699999999987]</msg>
<status status="PASS" starttime="20201030 18:28:50.513" endtime="20201030 18:28:50.516"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.508" endtime="20201030 18:28:50.516"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:50.520" endtime="20201030 18:28:50.539"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.518" endtime="20201030 18:28:50.540"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.517" endtime="20201030 18:28:50.540"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.158" endtime="20201030 18:28:50.540"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.158" endtime="20201030 18:28:50.541"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:50.549" endtime="20201030 18:28:50.569"></status>
</kw>
<msg timestamp="20201030 18:28:50.570" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:50.548" endtime="20201030 18:28:50.570"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:50.572" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:50.571" endtime="20201030 18:28:50.573"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:50.573" endtime="20201030 18:28:50.575"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.545" endtime="20201030 18:28:50.575"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.543" endtime="20201030 18:28:50.576"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:50.582" endtime="20201030 18:28:50.867"></status>
</kw>
<msg timestamp="20201030 18:28:50.870" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021714139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021850028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:50.581" endtime="20201030 18:28:50.871"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:50.878" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021714139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021850028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:50.871" endtime="20201030 18:28:50.879"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:50.880" endtime="20201030 18:28:50.881"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.578" endtime="20201030 18:28:50.882"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.576" endtime="20201030 18:28:50.882"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:50.886" level="INFO">${RESULT} = [{'diff': 0.00013588900000000015}, {'diff': 0.00013554200000000238}, {'diff': 0.0001355000000000002}, {'diff': 0.00013551399999999977}, {'diff': 0.00013555599999999848}, {'diff': 0.0001355000000000002...</msg>
<status status="PASS" starttime="20201030 18:28:50.883" endtime="20201030 18:28:50.887"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:50.893" level="INFO">${ACCURACY} = {'diff': [0.00013588900000000015, 0.00013554200000000238, 0.0001355000000000002, 0.00013551399999999977, 0.00013555599999999848, 0.0001355000000000002, 0.0001355419999999989, 0.0001355410000000029, 0....</msg>
<status status="PASS" starttime="20201030 18:28:50.888" endtime="20201030 18:28:50.893"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:50.899" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201030 18:28:50.898" endtime="20201030 18:28:50.900"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:50.903" level="INFO">VALUE: [0.00013588900000000015, 0.00013554200000000238, 0.0001355000000000002, 0.00013551399999999977, 0.00013555599999999848, 0.0001355000000000002, 0.0001355419999999989, 0.0001355410000000029, 0.0001355419999999989, 0.00013551400000000324, 0.00013554200000000238, 0.00013552799999999934, 0.00013544499999999793, 0.00013551399999999977, 0.00013554200000000238, 0.0001355840000000011, 0.00013554200000000238, 0.00013552799999999934, 0.00013554099999999944, 0.0001355000000000002, 0.0001355280000000028, 0.0001355000000000002, 0.00013552699999999987, 0.00013552699999999987, 0.00013551400000000324, 0.00013552799999999934, 0.00013552699999999987, 0.00013552799999999934, 0.00013558299999999815, 0.00013544499999999793, 0.00013552799999999934, 0.0001355419999999989, 0.00013552799999999934, 0.0001355130000000003, 0.00013558299999999815, 0.0001355419999999989, 0.00013551400000000324, 0.00013552799999999934, 0.00013551299999999683, 0.00013552699999999987, 0.000135554999999999, 0.0001355419999999989, 0.00013552799999999934, 0.0001355280000000028, 0.00013552699999999987, 0.00013555500000000248, 0.00013552799999999934, 0.00013552799999999934, 0.00013555600000000195, 0.00013551399999999977]</msg>
<status status="PASS" starttime="20201030 18:28:50.901" endtime="20201030 18:28:50.904"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.894" endtime="20201030 18:28:50.905"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:50.910" endtime="20201030 18:28:50.930"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.908" endtime="20201030 18:28:50.930"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.906" endtime="20201030 18:28:50.930"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.542" endtime="20201030 18:28:50.931"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.541" endtime="20201030 18:28:50.931"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:50.939" endtime="20201030 18:28:50.960"></status>
</kw>
<msg timestamp="20201030 18:28:50.960" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:50.938" endtime="20201030 18:28:50.960"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:50.963" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:50.961" endtime="20201030 18:28:50.963"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:50.964" endtime="20201030 18:28:50.965"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.935" endtime="20201030 18:28:50.966"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.933" endtime="20201030 18:28:50.966"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:50.972" endtime="20201030 18:28:51.259"></status>
</kw>
<msg timestamp="20201030 18:28:51.262" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021831111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021967028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:50.971" endtime="20201030 18:28:51.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:51.270" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021831111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021967028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:51.263" endtime="20201030 18:28:51.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:51.271" endtime="20201030 18:28:51.273"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.968" endtime="20201030 18:28:51.273"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.967" endtime="20201030 18:28:51.274"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:51.277" level="INFO">${RESULT} = [{'diff': 0.0001359169999999993}, {'diff': 0.0001355419999999989}, {'diff': 0.00013554099999999944}, {'diff': 0.00013552799999999934}, {'diff': 0.00013551399999999977}, {'diff': 0.00013551399999999977...</msg>
<status status="PASS" starttime="20201030 18:28:51.274" endtime="20201030 18:28:51.278"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:51.281" level="INFO">${ACCURACY} = {'diff': [0.0001359169999999993, 0.0001355419999999989, 0.00013554099999999944, 0.00013552799999999934, 0.00013551399999999977, 0.00013551399999999977, 0.00013551399999999977, 0.00013552799999999934, ...</msg>
<status status="PASS" starttime="20201030 18:28:51.278" endtime="20201030 18:28:51.282"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:51.286" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201030 18:28:51.285" endtime="20201030 18:28:51.286"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:51.288" level="INFO">VALUE: [0.0001359169999999993, 0.0001355419999999989, 0.00013554099999999944, 0.00013552799999999934, 0.00013551399999999977, 0.00013551399999999977, 0.00013551399999999977, 0.00013552799999999934, 0.00013551399999999977, 0.0001355130000000003, 0.00013551399999999977, 0.00013547200000000106, 0.00013551399999999977, 0.00013552799999999934, 0.00013548600000000063, 0.00013552799999999934, 0.00013552799999999934, 0.0001355419999999989, 0.00013552799999999934, 0.00013554200000000238, 0.00013551399999999977, 0.00013552699999999987, 0.00013551399999999977, 0.0001355000000000002, 0.00013552699999999987, 0.00013552799999999934, 0.00013551399999999977, 0.00013552699999999987, 0.00013552699999999987, 0.00013554200000000238, 0.00013554200000000238, 0.0001355410000000029, 0.00013551399999999977, 0.00013552799999999934, 0.00013552799999999934, 0.00013551399999999977, 0.00013552699999999987, 0.00013552799999999934, 0.00013548600000000063, 0.00013552699999999987, 0.00013548600000000063, 0.0001355970000000012, 0.00013555600000000195, 0.00013552799999999934, 0.00013551399999999977, 0.00013551399999999977, 0.00013551399999999977, 0.00013552799999999934, 0.00013555599999999848, 0.00013554099999999944]</msg>
<status status="PASS" starttime="20201030 18:28:51.287" endtime="20201030 18:28:51.289"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.282" endtime="20201030 18:28:51.289"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:51.293" endtime="20201030 18:28:51.312"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.292" endtime="20201030 18:28:51.313"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.290" endtime="20201030 18:28:51.313"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.932" endtime="20201030 18:28:51.314"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.931" endtime="20201030 18:28:51.314"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:51.322" endtime="20201030 18:28:51.346"></status>
</kw>
<msg timestamp="20201030 18:28:51.346" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:51.321" endtime="20201030 18:28:51.346"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:51.349" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:51.347" endtime="20201030 18:28:51.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:51.350" endtime="20201030 18:28:51.352"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.318" endtime="20201030 18:28:51.352"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.316" endtime="20201030 18:28:51.353"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:51.359" endtime="20201030 18:28:51.646"></status>
</kw>
<msg timestamp="20201030 18:28:51.649" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025025722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025161625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:51.357" endtime="20201030 18:28:51.649"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:51.657" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025025722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025161625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:51.650" endtime="20201030 18:28:51.658"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:51.658" endtime="20201030 18:28:51.660"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.355" endtime="20201030 18:28:51.660"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.353" endtime="20201030 18:28:51.661"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:51.665" level="INFO">${RESULT} = [{'diff': 0.00013590299999999972}, {'diff': 0.00013555600000000195}, {'diff': 0.0001355419999999989}, {'diff': 0.00013551399999999977}, {'diff': 0.00013551399999999977}, {'diff': 0.0001355139999999997...</msg>
<status status="PASS" starttime="20201030 18:28:51.662" endtime="20201030 18:28:51.665"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:51.669" level="INFO">${ACCURACY} = {'diff': [0.00013590299999999972, 0.00013555600000000195, 0.0001355419999999989, 0.00013551399999999977, 0.00013551399999999977, 0.00013551399999999977, 0.00013552799999999934, 0.00013551399999999977,...</msg>
<status status="PASS" starttime="20201030 18:28:51.666" endtime="20201030 18:28:51.669"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:51.673" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201030 18:28:51.672" endtime="20201030 18:28:51.673"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:51.675" level="INFO">VALUE: [0.00013590299999999972, 0.00013555600000000195, 0.0001355419999999989, 0.00013551399999999977, 0.00013551399999999977, 0.00013551399999999977, 0.00013552799999999934, 0.00013551399999999977, 0.00013551399999999977, 0.00013552799999999934, 0.00013554200000000238, 0.00013552799999999934, 0.00013552799999999934, 0.0001355419999999989, 0.0001355280000000028, 0.00013554099999999944, 0.0001355000000000002, 0.00013554099999999944, 0.00013554099999999944, 0.00013555500000000248, 0.0001355410000000029, 0.00013551399999999977, 0.00013552799999999934, 0.0001355000000000002, 0.00013552799999999934, 0.00013551399999999977, 0.00013551399999999977, 0.00013555599999999848, 0.0001355000000000002, 0.00013554099999999944, 0.00013558299999999815, 0.00013551399999999977, 0.00013555599999999848, 0.00013561200000000023, 0.0001355419999999989, 0.00013556900000000205, 0.0001355410000000029, 0.00013552699999999987, 0.00013554199999999544, 0.00013549999999999673, 0.00013551400000000324, 0.00013554200000000238, 0.00013554200000000238, 0.0001355280000000028, 0.0001355280000000028, 0.00013551400000000324, 0.0001355139999999963, 0.00013552799999999587, 0.00013554200000000238, 0.00013550000000000367]</msg>
<status status="PASS" starttime="20201030 18:28:51.674" endtime="20201030 18:28:51.677"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.669" endtime="20201030 18:28:51.678"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:51.681" endtime="20201030 18:28:51.701"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.680" endtime="20201030 18:28:51.701"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.678" endtime="20201030 18:28:51.702"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.315" endtime="20201030 18:28:51.702"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.314" endtime="20201030 18:28:51.702"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:51.710" endtime="20201030 18:28:51.731"></status>
</kw>
<msg timestamp="20201030 18:28:51.731" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:51.709" endtime="20201030 18:28:51.731"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:51.734" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:51.732" endtime="20201030 18:28:51.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:51.735" endtime="20201030 18:28:51.736"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.706" endtime="20201030 18:28:51.737"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.704" endtime="20201030 18:28:51.737"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:51.743" endtime="20201030 18:28:52.028"></status>
</kw>
<msg timestamp="20201030 18:28:52.031" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021597097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021733014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:51.742" endtime="20201030 18:28:52.032"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:52.039" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021597097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021733014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:52.032" endtime="20201030 18:28:52.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:52.040" endtime="20201030 18:28:52.042"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.739" endtime="20201030 18:28:52.042"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.738" endtime="20201030 18:28:52.043"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:52.047" level="INFO">${RESULT} = [{'diff': 0.0001359169999999993}, {'diff': 0.000135554999999999}, {'diff': 0.00013554099999999944}, {'diff': 0.00013554099999999944}, {'diff': 0.0001355419999999989}, {'diff': 0.0001355130000000003}, ...</msg>
<status status="PASS" starttime="20201030 18:28:52.044" endtime="20201030 18:28:52.047"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:52.052" level="INFO">${ACCURACY} = {'diff': [0.0001359169999999993, 0.000135554999999999, 0.00013554099999999944, 0.00013554099999999944, 0.0001355419999999989, 0.0001355130000000003, 0.0001355419999999989, 0.00013554099999999944, 0.00...</msg>
<status status="PASS" starttime="20201030 18:28:52.048" endtime="20201030 18:28:52.052"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:52.056" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201030 18:28:52.055" endtime="20201030 18:28:52.056"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:52.058" level="INFO">VALUE: [0.0001359169999999993, 0.000135554999999999, 0.00013554099999999944, 0.00013554099999999944, 0.0001355419999999989, 0.0001355130000000003, 0.0001355419999999989, 0.00013554099999999944, 0.00013557000000000152, 0.00013556899999999858, 0.00013555599999999848, 0.00013555500000000248, 0.00013552799999999934, 0.00013558300000000162, 0.00013552699999999987, 0.00013552799999999934, 0.00013552799999999934, 0.00013552799999999934, 0.00013555599999999848, 0.00013556899999999858, 0.00013554099999999944, 0.00013552799999999934, 0.00013555500000000248, 0.00013554099999999944, 0.0001355419999999989, 0.0001355419999999989, 0.00013554200000000238, 0.00013548600000000063, 0.00013552799999999934, 0.00013556900000000205, 0.0001355000000000002, 0.00013554200000000238, 0.0001355280000000028, 0.0001355419999999989, 0.00013551399999999977, 0.00013552799999999934, 0.00013551399999999977, 0.00013545799999999802, 0.00013555500000000248, 0.0001355419999999989, 0.00013558299999999815, 0.00013555500000000248, 0.00013556900000000205, 0.00013555599999999848, 0.0001355000000000002, 0.00013554099999999944, 0.00013555600000000195, 0.00013558300000000162, 0.00013557000000000152, 0.00013555599999999848]</msg>
<status status="PASS" starttime="20201030 18:28:52.057" endtime="20201030 18:28:52.059"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.053" endtime="20201030 18:28:52.060"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:52.063" endtime="20201030 18:28:52.083"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.062" endtime="20201030 18:28:52.083"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.061" endtime="20201030 18:28:52.084"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.703" endtime="20201030 18:28:52.084"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.702" endtime="20201030 18:28:52.084"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:52.093" endtime="20201030 18:28:53.108"></status>
</kw>
<msg timestamp="20201030 18:28:53.109" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy_timer_sleep 45', 'msg': ['sleep_accuracy_timer_sleep 45\r\n', '{"cmd":"sleep_accuracy: timer_sleep(45)"\n', 'Context before hardfault:\n'], 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:28:52.091" endtime="20201030 18:28:53.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:53.115" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy_timer_sleep 45', 'msg': ['sleep_accuracy_timer_sleep 45\r\n', '{"cmd":"sleep_accuracy: timer_sleep(45)"\n', 'Context before hardfault:\n'], 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:28:53.112" endtime="20201030 18:28:53.115"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:28:53.121" level="FAIL">'Timeout' does not contain 'Success'</msg>
<status status="FAIL" starttime="20201030 18:28:53.117" endtime="20201030 18:28:53.122"></status>
</kw>
<status status="FAIL" starttime="20201030 18:28:52.088" endtime="20201030 18:28:53.123"></status>
</kw>
<status status="FAIL" starttime="20201030 18:28:52.086" endtime="20201030 18:28:53.124"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:53.132" endtime="20201030 18:28:53.154"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.129" endtime="20201030 18:28:53.155"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.126" endtime="20201030 18:28:53.156"></status>
</kw>
<status status="FAIL" starttime="20201030 18:28:52.085" endtime="20201030 18:28:53.156"></status>
</kw>
<status status="FAIL" starttime="20201030 18:28:52.084" endtime="20201030 18:28:53.157"></status>
</kw>
<status status="FAIL" starttime="20201030 18:28:34.378" endtime="20201030 18:28:53.157"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:53.166" endtime="20201030 18:28:53.187"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.163" endtime="20201030 18:28:53.189"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.160" endtime="20201030 18:28:53.189"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="FAIL" starttime="20201030 18:28:34.311" endtime="20201030 18:28:53.190" critical="yes">'Timeout' does not contain 'Success'</status>
</test>
<status status="FAIL" starttime="20201030 18:27:54.082" endtime="20201030 18:28:53.197"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 18:28:53.254" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 18:28:53.263" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 18:28:54.485" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 18:28:53.253" endtime="20201030 18:28:54.485"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 18:28:54.488" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 18:28:54.486" endtime="20201030 18:28:54.488"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.252" endtime="20201030 18:28:54.489"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:54.492" endtime="20201030 18:28:54.772"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.489" endtime="20201030 18:28:54.773"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:54.785" endtime="20201030 18:28:54.798"></status>
</kw>
<msg timestamp="20201030 18:28:54.799" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:54.784" endtime="20201030 18:28:54.799"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:54.801" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:54.800" endtime="20201030 18:28:54.802"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:28:54.804" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:28:54.802" endtime="20201030 18:28:54.805"></status>
</kw>
<status status="FAIL" starttime="20201030 18:28:54.782" endtime="20201030 18:28:54.805"></status>
</kw>
<status status="FAIL" starttime="20201030 18:28:54.779" endtime="20201030 18:28:54.806"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.778" endtime="20201030 18:28:54.806"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:28:54.810" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:28:54.809" endtime="20201030 18:28:54.810"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.807" endtime="20201030 18:28:54.811"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.777" endtime="20201030 18:28:54.811"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.776" endtime="20201030 18:28:54.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:54.812" endtime="20201030 18:28:54.813"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.775" endtime="20201030 18:28:54.814"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:54.814" endtime="20201030 18:28:54.816"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.773" endtime="20201030 18:28:54.816"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.250" endtime="20201030 18:28:54.817"></status>
</kw>
<test id="s1-s4-t1" name="0 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:54.822" endtime="20201030 18:28:54.841"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.821" endtime="20201030 18:28:54.842"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:54.855" endtime="20201030 18:28:54.867"></status>
</kw>
<msg timestamp="20201030 18:28:54.868" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:54.853" endtime="20201030 18:28:54.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:54.870" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:54.869" endtime="20201030 18:28:54.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:28:54.873" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:28:54.872" endtime="20201030 18:28:54.874"></status>
</kw>
<status status="FAIL" starttime="20201030 18:28:54.851" endtime="20201030 18:28:54.874"></status>
</kw>
<status status="FAIL" starttime="20201030 18:28:54.848" endtime="20201030 18:28:54.875"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.847" endtime="20201030 18:28:54.875"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:28:54.879" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:28:54.878" endtime="20201030 18:28:54.880"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.876" endtime="20201030 18:28:54.880"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.846" endtime="20201030 18:28:54.880"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.846" endtime="20201030 18:28:54.880"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:54.881" endtime="20201030 18:28:54.882"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.844" endtime="20201030 18:28:54.883"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.843" endtime="20201030 18:28:54.883"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.819" endtime="20201030 18:28:54.884"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>0</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:54.892" endtime="20201030 18:29:00.992"></status>
</kw>
<msg timestamp="20201030 18:29:00.993" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:54.890" endtime="20201030 18:29:00.993"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:00.998" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:00.995" endtime="20201030 18:29:00.999"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:01.001" endtime="20201030 18:29:01.004"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.887" endtime="20201030 18:29:01.005"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.886" endtime="20201030 18:29:01.006"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:01.011" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-count': 0, 'bg-timer-interval': 20000}</msg>
<status status="PASS" starttime="20201030 18:29:01.007" endtime="20201030 18:29:01.011"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:01.019" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 18:29:01.017" endtime="20201030 18:29:01.020"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:01.024" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 18:29:01.022" endtime="20201030 18:29:01.024"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:01.013" endtime="20201030 18:29:01.025"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:01.033" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 18:29:01.031" endtime="20201030 18:29:01.034"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:01.037" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 18:29:01.035" endtime="20201030 18:29:01.038"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:01.027" endtime="20201030 18:29:01.039"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:01.047" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 18:29:01.045" endtime="20201030 18:29:01.048"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:01.051" level="INFO">VALUE: 0</msg>
<status status="PASS" starttime="20201030 18:29:01.049" endtime="20201030 18:29:01.052"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:01.040" endtime="20201030 18:29:01.053"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:01.068" endtime="20201030 18:29:01.370"></status>
</kw>
<msg timestamp="20201030 18:29:01.373" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.060893819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.160673194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:01.063" endtime="20201030 18:29:01.373"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:01.381" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.060893819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.160673194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:01.374" endtime="20201030 18:29:01.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:01.382" endtime="20201030 18:29:01.384"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:01.058" endtime="20201030 18:29:01.385"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:01.054" endtime="20201030 18:29:01.385"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 18:29:01.389" level="INFO">${FILTERED} = [{'diff': 0.09977937499999999}, {'diff': 0.099665431}, {'diff': 0.09967383399999996}, {'diff': 0.099674875}, {'diff': 0.099673666}, {'diff': 0.09967000000000004}, {'diff': 0.09967390300000001}, {'diff...</msg>
<status status="PASS" starttime="20201030 18:29:01.386" endtime="20201030 18:29:01.389"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:01.393" level="INFO">${RESULT} = {'diff': [0.09977937499999999, 0.099665431, 0.09967383399999996, 0.099674875, 0.099673666, 0.09967000000000004, 0.09967390300000001, 0.09967288800000007, 0.09966908299999999, 0.09967149999999991, 0.09...</msg>
<status status="PASS" starttime="20201030 18:29:01.390" endtime="20201030 18:29:01.393"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:01.397" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 18:29:01.396" endtime="20201030 18:29:01.397"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:01.399" level="INFO">VALUE: [0.09977937499999999, 0.099665431, 0.09967383399999996, 0.099674875, 0.099673666, 0.09967000000000004, 0.09967390300000001, 0.09967288800000007, 0.09966908299999999, 0.09967149999999991, 0.09966386100000002, 0.09967019499999985, 0.09967133300000008, 0.09966777700000007, 0.09966867999999995, 0.09967273600000004, 0.09966586100000008, 0.09966280499999991, 0.09966137499999994, 0.09966144500000018, 0.09966413899999971, 0.09966493099999996, 0.09966950000000008, 0.09966804200000023, 0.09966763899999975, 0.09967072199999993, 0.09967104200000021, 0.0996715560000001, 0.09967369399999981, 0.09966477799999973, 0.09966802699999988, 0.09967044400000002, 0.09966629100000013, 0.09967129200000002, 0.09966576400000005, 0.099666166, 0.09967077800000013, 0.09966267999999978, 0.09966708299999993, 0.09967086099999989, 0.09966836200000007, 0.09966883299999996, 0.09966384699999953, 0.09966488900000048, 0.09966695799999936, 0.09966980600000053, 0.09966598600000065, 0.0996651110000002, 0.09966743099999942, 0.09966798600000004, 0.09966590199999992]</msg>
<status status="PASS" starttime="20201030 18:29:01.398" endtime="20201030 18:29:01.399"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:01.393" endtime="20201030 18:29:01.400"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:01.403" endtime="20201030 18:29:01.423"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:01.402" endtime="20201030 18:29:01.423"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:01.401" endtime="20201030 18:29:01.424"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.884" endtime="20201030 18:29:01.424"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="PASS" starttime="20201030 18:28:54.817" endtime="20201030 18:29:01.424" critical="yes"></status>
</test>
<test id="s1-s4-t2" name="5 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:01.431" endtime="20201030 18:29:01.451"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:01.429" endtime="20201030 18:29:01.452"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:01.464" endtime="20201030 18:29:01.476"></status>
</kw>
<msg timestamp="20201030 18:29:01.477" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:01.463" endtime="20201030 18:29:01.477"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:01.479" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:01.478" endtime="20201030 18:29:01.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:29:01.483" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:29:01.480" endtime="20201030 18:29:01.483"></status>
</kw>
<status status="FAIL" starttime="20201030 18:29:01.460" endtime="20201030 18:29:01.484"></status>
</kw>
<status status="FAIL" starttime="20201030 18:29:01.458" endtime="20201030 18:29:01.484"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:01.457" endtime="20201030 18:29:01.485"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:29:01.488" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:29:01.488" endtime="20201030 18:29:01.489"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:01.485" endtime="20201030 18:29:01.489"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:01.456" endtime="20201030 18:29:01.489"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:01.455" endtime="20201030 18:29:01.489"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:01.490" endtime="20201030 18:29:01.491"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:01.454" endtime="20201030 18:29:01.492"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:01.452" endtime="20201030 18:29:01.492"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:01.428" endtime="20201030 18:29:01.493"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>5</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:01.501" endtime="20201030 18:29:07.602"></status>
</kw>
<msg timestamp="20201030 18:29:07.603" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:01.499" endtime="20201030 18:29:07.603"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:07.608" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:07.605" endtime="20201030 18:29:07.609"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:07.611" endtime="20201030 18:29:07.614"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:01.496" endtime="20201030 18:29:07.615"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:01.495" endtime="20201030 18:29:07.616"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:07.621" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-count': 5, 'bg-timer-interval': 20000}</msg>
<status status="PASS" starttime="20201030 18:29:07.617" endtime="20201030 18:29:07.621"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:07.629" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 18:29:07.627" endtime="20201030 18:29:07.630"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:07.633" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 18:29:07.631" endtime="20201030 18:29:07.634"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.622" endtime="20201030 18:29:07.635"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:07.643" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 18:29:07.641" endtime="20201030 18:29:07.644"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:07.646" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 18:29:07.645" endtime="20201030 18:29:07.646"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.636" endtime="20201030 18:29:07.646"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:07.650" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 18:29:07.649" endtime="20201030 18:29:07.651"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:07.652" level="INFO">VALUE: 5</msg>
<status status="PASS" starttime="20201030 18:29:07.651" endtime="20201030 18:29:07.653"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.647" endtime="20201030 18:29:07.653"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:07.660" endtime="20201030 18:29:07.959"></status>
</kw>
<msg timestamp="20201030 18:29:07.962" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.061410958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.161281194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:07.658" endtime="20201030 18:29:07.962"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:07.970" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.061410958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.161281194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:07.963" endtime="20201030 18:29:07.970"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:07.971" endtime="20201030 18:29:07.973"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.655" endtime="20201030 18:29:07.973"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.654" endtime="20201030 18:29:07.973"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 18:29:07.977" level="INFO">${FILTERED} = [{'diff': 0.09987023599999999}, {'diff': 0.09980886099999997}, {'diff': 0.09939086100000005}, {'diff': 0.09966052800000003}, {'diff': 0.099657194}, {'diff': 0.099660792}, {'diff': 0.09966115200000003}...</msg>
<status status="PASS" starttime="20201030 18:29:07.974" endtime="20201030 18:29:07.977"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:07.982" level="INFO">${RESULT} = {'diff': [0.09987023599999999, 0.09980886099999997, 0.09939086100000005, 0.09966052800000003, 0.099657194, 0.099660792, 0.09966115200000003, 0.09965456900000003, 0.09965247200000005, 0.099656555000000...</msg>
<status status="PASS" starttime="20201030 18:29:07.978" endtime="20201030 18:29:07.982"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:07.986" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 18:29:07.985" endtime="20201030 18:29:07.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:07.988" level="INFO">VALUE: [0.09987023599999999, 0.09980886099999997, 0.09939086100000005, 0.09966052800000003, 0.099657194, 0.099660792, 0.09966115200000003, 0.09965456900000003, 0.09965247200000005, 0.09965655500000015, 0.09965640199999992, 0.09965915300000017, 0.09966002799999996, 0.09966152799999994, 0.09966320900000003, 0.0996678339999999, 0.09966833400000019, 0.09966432000000003, 0.09966191699999993, 0.09965999999999986, 0.09965767999999997, 0.09965142999999976, 0.0996484169999996, 0.09965151400000005, 0.09966194499999981, 0.09966098599999995, 0.09966427700000002, 0.09967163899999987, 0.09966997200000005, 0.09967020900000012, 0.099665597, 0.0996787079999999, 0.09968055499999995, 0.09967624999999991, 0.09967187499999985, 0.09967213799999985, 0.09967434700000011, 0.09966472300000007, 0.09967044500000011, 0.09966723600000016, 0.09966131899999997, 0.09966930599999912, 0.09966387500000007, 0.09966786099999947, 0.0996661250000006, 0.09966636100000059, 0.09966780500000016, 0.0996638609999998, 0.09965776399999982, 0.09965648599999977, 0.09966688899999987]</msg>
<status status="PASS" starttime="20201030 18:29:07.987" endtime="20201030 18:29:07.989"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.983" endtime="20201030 18:29:07.989"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:07.993" endtime="20201030 18:29:08.012"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.991" endtime="20201030 18:29:08.013"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.990" endtime="20201030 18:29:08.013"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:01.493" endtime="20201030 18:29:08.013"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="PASS" starttime="20201030 18:29:01.426" endtime="20201030 18:29:08.014" critical="yes"></status>
</test>
<test id="s1-s4-t3" name="10 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:08.020" endtime="20201030 18:29:08.040"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.019" endtime="20201030 18:29:08.040"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:08.053" endtime="20201030 18:29:08.066"></status>
</kw>
<msg timestamp="20201030 18:29:08.067" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:08.051" endtime="20201030 18:29:08.067"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:08.069" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:08.068" endtime="20201030 18:29:08.070"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:29:08.072" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:29:08.070" endtime="20201030 18:29:08.073"></status>
</kw>
<status status="FAIL" starttime="20201030 18:29:08.049" endtime="20201030 18:29:08.073"></status>
</kw>
<status status="FAIL" starttime="20201030 18:29:08.047" endtime="20201030 18:29:08.074"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.045" endtime="20201030 18:29:08.074"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:29:08.078" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:29:08.077" endtime="20201030 18:29:08.078"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.075" endtime="20201030 18:29:08.078"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.045" endtime="20201030 18:29:08.078"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.044" endtime="20201030 18:29:08.079"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:08.079" endtime="20201030 18:29:08.081"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.043" endtime="20201030 18:29:08.081"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.041" endtime="20201030 18:29:08.082"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.017" endtime="20201030 18:29:08.082"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>10</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:08.090" endtime="20201030 18:29:14.190"></status>
</kw>
<msg timestamp="20201030 18:29:14.191" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:08.088" endtime="20201030 18:29:14.192"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:14.197" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:14.194" endtime="20201030 18:29:14.197"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:14.199" endtime="20201030 18:29:14.202"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.086" endtime="20201030 18:29:14.203"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.084" endtime="20201030 18:29:14.204"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:14.209" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-count': 10, 'bg-timer-interval': 20000}</msg>
<status status="PASS" starttime="20201030 18:29:14.206" endtime="20201030 18:29:14.209"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:14.217" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 18:29:14.215" endtime="20201030 18:29:14.218"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:14.222" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 18:29:14.220" endtime="20201030 18:29:14.222"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.211" endtime="20201030 18:29:14.223"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:14.231" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 18:29:14.229" endtime="20201030 18:29:14.232"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:14.235" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 18:29:14.233" endtime="20201030 18:29:14.236"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.225" endtime="20201030 18:29:14.237"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:14.245" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 18:29:14.243" endtime="20201030 18:29:14.246"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:14.250" level="INFO">VALUE: 10</msg>
<status status="PASS" starttime="20201030 18:29:14.248" endtime="20201030 18:29:14.251"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.238" endtime="20201030 18:29:14.252"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:14.265" endtime="20201030 18:29:14.562"></status>
</kw>
<msg timestamp="20201030 18:29:14.565" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.061280569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.161591167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:14.260" endtime="20201030 18:29:14.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:14.573" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.061280569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.161591167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:14.566" endtime="20201030 18:29:14.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:14.575" endtime="20201030 18:29:14.576"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.257" endtime="20201030 18:29:14.577"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.253" endtime="20201030 18:29:14.577"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 18:29:14.581" level="INFO">${FILTERED} = [{'diff': 0.100310598}, {'diff': 0.09914574999999998}, {'diff': 0.099660264}, {'diff': 0.09965579200000002}, {'diff': 0.09966605600000006}, {'diff': 0.09966787499999996}, {'diff': 0.09966016699999991}...</msg>
<status status="PASS" starttime="20201030 18:29:14.578" endtime="20201030 18:29:14.581"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:14.585" level="INFO">${RESULT} = {'diff': [0.100310598, 0.09914574999999998, 0.099660264, 0.09965579200000002, 0.09966605600000006, 0.09966787499999996, 0.09966016699999991, 0.09966356999999992, 0.09966413899999993, 0.099665555000000...</msg>
<status status="PASS" starttime="20201030 18:29:14.582" endtime="20201030 18:29:14.585"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:14.589" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 18:29:14.588" endtime="20201030 18:29:14.589"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:14.591" level="INFO">VALUE: [0.100310598, 0.09914574999999998, 0.099660264, 0.09965579200000002, 0.09966605600000006, 0.09966787499999996, 0.09966016699999991, 0.09966356999999992, 0.09966413899999993, 0.09966555500000007, 0.09965422199999985, 0.0996516810000001, 0.09965272200000008, 0.09965318099999987, 0.09965625, 0.09964880499999995, 0.09964858300000001, 0.09965173600000021, 0.09965341600000022, 0.09965908300000015, 0.09965372199999978, 0.09965741599999989, 0.09965968099999989, 0.09966491699999969, 0.09966361099999999, 0.09966461100000013, 0.09966632000000031, 0.0996562080000003, 0.09965936100000006, 0.09965344399999987, 0.09965470900000017, 0.09965047300000007, 0.09965852799999997, 0.0996565549999997, 0.09965705499999977, 0.09965295800000007, 0.09965268000000016, 0.09965270799999981, 0.09965555599999965, 0.09966105499999989, 0.09966411100000006, 0.09966400000000064, 0.09966705500000028, 0.09966311099999992, 0.09966434800000012, 0.09966734799999966, 0.09966644500000044, 0.09966281900000062, 0.0996532779999999, 0.09965347199999997, 0.09965797200000015]</msg>
<status status="PASS" starttime="20201030 18:29:14.590" endtime="20201030 18:29:14.592"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.586" endtime="20201030 18:29:14.592"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:14.596" endtime="20201030 18:29:14.615"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.594" endtime="20201030 18:29:14.616"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.593" endtime="20201030 18:29:14.616"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.083" endtime="20201030 18:29:14.616"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="PASS" starttime="20201030 18:29:08.015" endtime="20201030 18:29:14.617" critical="yes"></status>
</test>
<test id="s1-s4-t4" name="15 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:14.623" endtime="20201030 18:29:14.642"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.622" endtime="20201030 18:29:14.643"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:14.657" endtime="20201030 18:29:14.669"></status>
</kw>
<msg timestamp="20201030 18:29:14.670" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:14.656" endtime="20201030 18:29:14.670"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:14.672" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:14.671" endtime="20201030 18:29:14.673"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:29:14.675" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:29:14.673" endtime="20201030 18:29:14.675"></status>
</kw>
<status status="FAIL" starttime="20201030 18:29:14.653" endtime="20201030 18:29:14.676"></status>
</kw>
<status status="FAIL" starttime="20201030 18:29:14.650" endtime="20201030 18:29:14.677"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.649" endtime="20201030 18:29:14.677"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:29:14.681" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:29:14.680" endtime="20201030 18:29:14.681"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.678" endtime="20201030 18:29:14.681"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.648" endtime="20201030 18:29:14.681"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.648" endtime="20201030 18:29:14.682"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:14.682" endtime="20201030 18:29:14.684"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.646" endtime="20201030 18:29:14.684"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.644" endtime="20201030 18:29:14.685"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.620" endtime="20201030 18:29:14.685"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>15</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:14.693" endtime="20201030 18:29:20.793"></status>
</kw>
<msg timestamp="20201030 18:29:20.794" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:14.691" endtime="20201030 18:29:20.794"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:20.799" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:20.796" endtime="20201030 18:29:20.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:20.801" endtime="20201030 18:29:20.805"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.689" endtime="20201030 18:29:20.806"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.687" endtime="20201030 18:29:20.807"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:20.812" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-count': 15, 'bg-timer-interval': 20000}</msg>
<status status="PASS" starttime="20201030 18:29:20.808" endtime="20201030 18:29:20.812"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:20.820" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 18:29:20.818" endtime="20201030 18:29:20.820"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:20.824" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 18:29:20.822" endtime="20201030 18:29:20.827"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:20.813" endtime="20201030 18:29:20.828"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:20.836" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 18:29:20.834" endtime="20201030 18:29:20.837"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:20.841" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 18:29:20.839" endtime="20201030 18:29:20.842"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:20.829" endtime="20201030 18:29:20.843"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:20.851" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 18:29:20.849" endtime="20201030 18:29:20.852"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:20.854" level="INFO">VALUE: 15</msg>
<status status="PASS" starttime="20201030 18:29:20.853" endtime="20201030 18:29:20.854"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:20.844" endtime="20201030 18:29:20.855"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:20.861" endtime="20201030 18:29:21.157"></status>
</kw>
<msg timestamp="20201030 18:29:21.160" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.061437861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.162156181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:20.859" endtime="20201030 18:29:21.160"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:21.168" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.061437861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.162156181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:21.161" endtime="20201030 18:29:21.168"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:21.169" endtime="20201030 18:29:21.171"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:20.857" endtime="20201030 18:29:21.171"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:20.855" endtime="20201030 18:29:21.172"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 18:29:21.175" level="INFO">${FILTERED} = [{'diff': 0.10071832}, {'diff': 0.09985557}, {'diff': 0.09852815300000001}, {'diff': 0.09964566599999997}, {'diff': 0.09964561100000002}, {'diff': 0.099642597}, {'diff': 0.09964588899999993}, {'diff':...</msg>
<status status="PASS" starttime="20201030 18:29:21.172" endtime="20201030 18:29:21.176"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:21.180" level="INFO">${RESULT} = {'diff': [0.10071832, 0.09985557, 0.09852815300000001, 0.09964566599999997, 0.09964561100000002, 0.099642597, 0.09964588899999993, 0.09964780500000003, 0.0996517079999999, 0.09964737499999998, 0.09964...</msg>
<status status="PASS" starttime="20201030 18:29:21.176" endtime="20201030 18:29:21.180"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:21.184" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 18:29:21.183" endtime="20201030 18:29:21.184"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:21.186" level="INFO">VALUE: [0.10071832, 0.09985557, 0.09852815300000001, 0.09964566599999997, 0.09964561100000002, 0.099642597, 0.09964588899999993, 0.09964780500000003, 0.0996517079999999, 0.09964737499999998, 0.09964227700000006, 0.09963813899999985, 0.09963175000000013, 0.09963725000000001, 0.09964584799999998, 0.09965702799999998, 0.09965154099999984, 0.09964663900000015, 0.09965452800000008, 0.0996532360000002, 0.09965130600000016, 0.09965320900000041, 0.09965588900000011, 0.09965441599999991, 0.09965377799999997, 0.0996518609999999, 0.09965158299999999, 0.09965302800000009, 0.09964902799999997, 0.09964984800000032, 0.09965719500000025, 0.09965482000000003, 0.09964777800000002, 0.09965101399999998, 0.09964932000000015, 0.09964847200000015, 0.09964801400000001, 0.09965505499999994, 0.09965897200000029, 0.099653569, 0.09965402799999978, 0.09966004099999992, 0.09965909699999997, 0.09965472199999947, 0.09965155599999953, 0.0996529310000005, 0.09965166599999975, 0.09965142999999976, 0.09965793099999942, 0.09965636100000008, 0.09965245900000053]</msg>
<status status="PASS" starttime="20201030 18:29:21.185" endtime="20201030 18:29:21.187"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.181" endtime="20201030 18:29:21.187"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:21.191" endtime="20201030 18:29:21.210"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.189" endtime="20201030 18:29:21.211"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.188" endtime="20201030 18:29:21.211"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.685" endtime="20201030 18:29:21.211"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="PASS" starttime="20201030 18:29:14.618" endtime="20201030 18:29:21.212" critical="yes"></status>
</test>
<test id="s1-s4-t5" name="20 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:21.218" endtime="20201030 18:29:21.238"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.217" endtime="20201030 18:29:21.238"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:21.253" endtime="20201030 18:29:21.265"></status>
</kw>
<msg timestamp="20201030 18:29:21.266" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:21.252" endtime="20201030 18:29:21.266"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:21.268" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:21.267" endtime="20201030 18:29:21.269"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:29:21.271" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:29:21.269" endtime="20201030 18:29:21.272"></status>
</kw>
<status status="FAIL" starttime="20201030 18:29:21.249" endtime="20201030 18:29:21.272"></status>
</kw>
<status status="FAIL" starttime="20201030 18:29:21.247" endtime="20201030 18:29:21.273"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.246" endtime="20201030 18:29:21.273"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:29:21.277" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:29:21.276" endtime="20201030 18:29:21.277"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.274" endtime="20201030 18:29:21.277"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.245" endtime="20201030 18:29:21.278"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.244" endtime="20201030 18:29:21.278"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:21.278" endtime="20201030 18:29:21.280"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.242" endtime="20201030 18:29:21.280"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.239" endtime="20201030 18:29:21.281"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.215" endtime="20201030 18:29:21.281"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>20</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:21.290" endtime="20201030 18:29:27.391"></status>
</kw>
<msg timestamp="20201030 18:29:27.392" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:21.289" endtime="20201030 18:29:27.394"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:27.399" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:27.396" endtime="20201030 18:29:27.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:27.401" endtime="20201030 18:29:27.405"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.286" endtime="20201030 18:29:27.406"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.283" endtime="20201030 18:29:27.407"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:27.414" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-count': 20, 'bg-timer-interval': 20000}</msg>
<status status="PASS" starttime="20201030 18:29:27.409" endtime="20201030 18:29:27.414"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:27.425" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 18:29:27.422" endtime="20201030 18:29:27.426"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:27.431" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 18:29:27.428" endtime="20201030 18:29:27.432"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:27.416" endtime="20201030 18:29:27.434"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:27.442" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 18:29:27.440" endtime="20201030 18:29:27.443"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:27.447" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 18:29:27.445" endtime="20201030 18:29:27.447"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:27.435" endtime="20201030 18:29:27.448"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:27.456" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 18:29:27.454" endtime="20201030 18:29:27.457"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:27.460" level="INFO">VALUE: 20</msg>
<status status="PASS" starttime="20201030 18:29:27.458" endtime="20201030 18:29:27.461"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:27.450" endtime="20201030 18:29:27.462"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:27.476" endtime="20201030 18:29:27.774"></status>
</kw>
<msg timestamp="20201030 18:29:27.777" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063737528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.164939611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:27.472" endtime="20201030 18:29:27.777"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:27.785" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063737528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.164939611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:27.778" endtime="20201030 18:29:27.785"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:27.786" endtime="20201030 18:29:27.788"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:27.467" endtime="20201030 18:29:27.788"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:27.463" endtime="20201030 18:29:27.789"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 18:29:27.792" level="INFO">${FILTERED} = [{'diff': 0.10120208300000001}, {'diff': 0.09985633299999999}, {'diff': 0.098028542}, {'diff': 0.099647333}, {'diff': 0.09964398700000004}, {'diff': 0.09964597199999992}, {'diff': 0.09964687500000002}...</msg>
<status status="PASS" starttime="20201030 18:29:27.789" endtime="20201030 18:29:27.793"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:27.797" level="INFO">${RESULT} = {'diff': [0.10120208300000001, 0.09985633299999999, 0.098028542, 0.099647333, 0.09964398700000004, 0.09964597199999992, 0.09964687500000002, 0.09965019500000005, 0.09965173599999999, 0.099651194000000...</msg>
<status status="PASS" starttime="20201030 18:29:27.793" endtime="20201030 18:29:27.797"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:27.801" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 18:29:27.800" endtime="20201030 18:29:27.802"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:27.804" level="INFO">VALUE: [0.10120208300000001, 0.09985633299999999, 0.098028542, 0.099647333, 0.09964398700000004, 0.09964597199999992, 0.09964687500000002, 0.09965019500000005, 0.09965173599999999, 0.09965119400000011, 0.09964701400000009, 0.099649514, 0.09964876300000003, 0.0996478890000001, 0.09964708400000011, 0.09964707000000006, 0.09964533400000009, 0.09964129099999997, 0.09963926400000012, 0.09963676400000021, 0.09963784699999989, 0.09963636099999995, 0.09963905499999992, 0.09964276399999994, 0.0996437779999999, 0.09964680500000034, 0.09964463900000009, 0.09964374999999981, 0.09964108299999985, 0.09964191700000002, 0.0996425409999997, 0.09964681899999972, 0.09964258300000006, 0.09963776400000013, 0.09963852799999984, 0.09964465299999992, 0.09964373599999998, 0.09964436100000018, 0.09964304200000029, 0.09963973599999987, 0.09964948599999968, 0.0996486799999996, 0.09964381899999974, 0.09964670800000075, 0.09964516600000017, 0.0996507219999998, 0.0996458889999996, 0.0996482779999992, 0.09965002800000011, 0.0996497500000002, 0.09964932000000015]</msg>
<status status="PASS" starttime="20201030 18:29:27.802" endtime="20201030 18:29:27.804"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:27.798" endtime="20201030 18:29:27.804"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:27.808" endtime="20201030 18:29:27.827"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:27.806" endtime="20201030 18:29:27.828"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:27.805" endtime="20201030 18:29:27.829"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.282" endtime="20201030 18:29:27.829"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="PASS" starttime="20201030 18:29:21.213" endtime="20201030 18:29:27.829" critical="yes"></status>
</test>
<test id="s1-s4-t6" name="25 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:27.836" endtime="20201030 18:29:27.855"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:27.834" endtime="20201030 18:29:27.856"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:27.869" endtime="20201030 18:29:27.881"></status>
</kw>
<msg timestamp="20201030 18:29:27.882" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:27.868" endtime="20201030 18:29:27.882"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:27.884" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:27.883" endtime="20201030 18:29:27.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:29:27.887" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:29:27.885" endtime="20201030 18:29:27.888"></status>
</kw>
<status status="FAIL" starttime="20201030 18:29:27.864" endtime="20201030 18:29:27.888"></status>
</kw>
<status status="FAIL" starttime="20201030 18:29:27.862" endtime="20201030 18:29:27.889"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:27.861" endtime="20201030 18:29:27.889"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:29:27.893" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:29:27.892" endtime="20201030 18:29:27.893"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:27.890" endtime="20201030 18:29:27.893"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:27.860" endtime="20201030 18:29:27.894"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:27.859" endtime="20201030 18:29:27.894"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:27.894" endtime="20201030 18:29:27.896"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:27.858" endtime="20201030 18:29:27.896"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:27.856" endtime="20201030 18:29:27.897"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:27.833" endtime="20201030 18:29:27.897"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>25</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:27.905" endtime="20201030 18:29:34.005"></status>
</kw>
<msg timestamp="20201030 18:29:34.006" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:27.904" endtime="20201030 18:29:34.007"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:34.012" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:34.009" endtime="20201030 18:29:34.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:34.014" endtime="20201030 18:29:34.017"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:27.901" endtime="20201030 18:29:34.019"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:27.899" endtime="20201030 18:29:34.020"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:34.026" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-count': 25, 'bg-timer-interval': 20000}</msg>
<status status="PASS" starttime="20201030 18:29:34.021" endtime="20201030 18:29:34.026"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:34.035" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 18:29:34.033" endtime="20201030 18:29:34.036"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:34.039" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 18:29:34.037" endtime="20201030 18:29:34.040"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:34.028" endtime="20201030 18:29:34.041"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:34.049" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 18:29:34.047" endtime="20201030 18:29:34.050"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:34.054" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 18:29:34.051" endtime="20201030 18:29:34.054"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:34.043" endtime="20201030 18:29:34.055"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:34.063" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 18:29:34.061" endtime="20201030 18:29:34.064"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:34.067" level="INFO">VALUE: 25</msg>
<status status="PASS" starttime="20201030 18:29:34.065" endtime="20201030 18:29:34.068"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:34.056" endtime="20201030 18:29:34.069"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:34.085" endtime="20201030 18:29:34.384"></status>
</kw>
<msg timestamp="20201030 18:29:34.387" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.061179333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.163038319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:34.082" endtime="20201030 18:29:34.387"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:34.395" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.061179333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.163038319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:34.388" endtime="20201030 18:29:34.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:34.396" endtime="20201030 18:29:34.397"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:34.074" endtime="20201030 18:29:34.398"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:34.070" endtime="20201030 18:29:34.398"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 18:29:34.402" level="INFO">${FILTERED} = [{'diff': 0.10185898599999998}, {'diff': 0.09987343100000001}, {'diff': 0.09738749999999996}, {'diff': 0.10242790300000004}, {'diff': 0.09687812500000004}, {'diff': 0.09965144400000003}, {'diff': 0.09...</msg>
<status status="PASS" starttime="20201030 18:29:34.399" endtime="20201030 18:29:34.402"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:34.407" level="INFO">${RESULT} = {'diff': [0.10185898599999998, 0.09987343100000001, 0.09738749999999996, 0.10242790300000004, 0.09687812500000004, 0.09965144400000003, 0.09965277800000005, 0.09965257000000005, 0.09965575000000004, 0...</msg>
<status status="PASS" starttime="20201030 18:29:34.403" endtime="20201030 18:29:34.408"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:34.413" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 18:29:34.412" endtime="20201030 18:29:34.413"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:34.416" level="INFO">VALUE: [0.10185898599999998, 0.09987343100000001, 0.09738749999999996, 0.10242790300000004, 0.09687812500000004, 0.09965144400000003, 0.09965277800000005, 0.09965257000000005, 0.09965575000000004, 0.09964877800000005, 0.09965068099999996, 0.09964915200000002, 0.09964872199999997, 0.099654833, 0.0996552770000001, 0.09965854099999993, 0.09965987499999995, 0.09965979199999997, 0.099655944, 0.0996555830000001, 0.09965608300000017, 0.09965199999999985, 0.09965409700000016, 0.09964861100000011, 0.0996507219999998, 0.09965233299999987, 0.09965451400000003, 0.09965786099999985, 0.0996561800000002, 0.09965206900000023, 0.09964993, 0.0996502640000001, 0.09964936200000007, 0.09964874999999962, 0.09964865199999995, 0.09965495899999999, 0.09964719499999974, 0.09964754200000003, 0.09965126400000024, 0.09965308400000028, 0.09965034699999986, 0.09964552799999993, 0.09964532000000048, 0.09964830599999974, 0.09964573599999937, 0.09964582000000011, 0.09964691700000028, 0.09965087500000003, 0.09965024999999983, 0.09965172199999994, 0.099646291]</msg>
<status status="PASS" starttime="20201030 18:29:34.414" endtime="20201030 18:29:34.418"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:34.409" endtime="20201030 18:29:34.419"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:34.423" endtime="20201030 18:29:34.443"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:34.421" endtime="20201030 18:29:34.444"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:34.419" endtime="20201030 18:29:34.444"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:27.898" endtime="20201030 18:29:34.445"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="PASS" starttime="20201030 18:29:27.831" endtime="20201030 18:29:34.445" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 18:28:53.209" endtime="20201030 18:29:34.452"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">saml10-xpro</item>
<item name="RIOT-Version">2020.07</item>
</metadata>
<status status="FAIL" starttime="20201030 18:27:04.026" endtime="20201030 18:29:34.483"></status>
</suite>
<statistics>
<total>
<stat pass="17" fail="1">Critical Tests</stat>
<stat pass="17" fail="1">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="17" fail="1">APP_tests_xtimer_benchmarks</stat>
<stat pass="17" fail="1">BOARD_saml10-xpro</stat>
<stat pass="10" fail="0">dev</stat>
</tag>
<suite>
<stat pass="17" fail="1" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="9" fail="0" id="s1-s2" name="Timer Overhead">tests_xtimer_benchmarks.Timer Overhead</stat>
<stat pass="1" fail="1" id="s1-s3" name="Sleep Accuracy">tests_xtimer_benchmarks.Sleep Accuracy</stat>
<stat pass="6" fail="0" id="s1-s4" name="Sleep Jitter">tests_xtimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
