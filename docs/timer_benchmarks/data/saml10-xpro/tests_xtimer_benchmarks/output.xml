<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201030 15:51:06.537" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 15:51:07.111" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 15:51:07.120" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 15:51:08.270" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 15:51:07.110" endtime="20201030 15:51:08.271"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 15:51:08.274" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 15:51:08.272" endtime="20201030 15:51:08.274"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:07.109" endtime="20201030 15:51:08.274"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:08.276" endtime="20201030 15:51:08.507"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:08.275" endtime="20201030 15:51:08.508"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:08.523" endtime="20201030 15:51:08.535"></status>
</kw>
<msg timestamp="20201030 15:51:08.536" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:08.521" endtime="20201030 15:51:08.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:08.538" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:08.537" endtime="20201030 15:51:08.539"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:51:08.542" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:51:08.539" endtime="20201030 15:51:08.542"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:08.519" endtime="20201030 15:51:08.542"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:08.517" endtime="20201030 15:51:08.543"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:08.515" endtime="20201030 15:51:08.543"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:51:08.548" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:51:08.547" endtime="20201030 15:51:08.548"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:08.544" endtime="20201030 15:51:08.548"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:08.515" endtime="20201030 15:51:08.549"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:08.514" endtime="20201030 15:51:08.549"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:08.549" endtime="20201030 15:51:08.551"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:08.512" endtime="20201030 15:51:08.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:08.552" endtime="20201030 15:51:08.554"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:08.510" endtime="20201030 15:51:08.554"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:07.107" endtime="20201030 15:51:08.555"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:08.560" endtime="20201030 15:51:08.580"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:08.559" endtime="20201030 15:51:08.580"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:08.594" endtime="20201030 15:51:08.606"></status>
</kw>
<msg timestamp="20201030 15:51:08.607" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:08.592" endtime="20201030 15:51:08.607"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:08.609" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:08.608" endtime="20201030 15:51:08.609"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:51:08.612" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:51:08.610" endtime="20201030 15:51:08.612"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:08.590" endtime="20201030 15:51:08.613"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:08.587" endtime="20201030 15:51:08.613"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:08.586" endtime="20201030 15:51:08.614"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:51:08.617" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:51:08.617" endtime="20201030 15:51:08.618"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:08.615" endtime="20201030 15:51:08.618"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:08.585" endtime="20201030 15:51:08.618"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:08.584" endtime="20201030 15:51:08.618"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:08.619" endtime="20201030 15:51:08.620"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:08.583" endtime="20201030 15:51:08.621"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:08.581" endtime="20201030 15:51:08.621"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:08.558" endtime="20201030 15:51:08.622"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:08.629" endtime="20201030 15:51:08.638"></status>
</kw>
<msg timestamp="20201030 15:51:08.638" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:08.627" endtime="20201030 15:51:08.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:08.641" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:08.639" endtime="20201030 15:51:08.641"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:08.642" endtime="20201030 15:51:08.643"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:08.624" endtime="20201030 15:51:08.644"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:08.622" endtime="20201030 15:51:08.644"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:08.648" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201030 15:51:08.647" endtime="20201030 15:51:08.648"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:08.650" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201030 15:51:08.649" endtime="20201030 15:51:08.650"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:08.645" endtime="20201030 15:51:08.651"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:51:08.555" endtime="20201030 15:51:08.651" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 15:51:06.656" endtime="20201030 15:51:08.654"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 15:51:08.704" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 15:51:08.713" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 15:51:09.870" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 15:51:08.703" endtime="20201030 15:51:09.871"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 15:51:09.874" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 15:51:09.872" endtime="20201030 15:51:09.874"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:08.702" endtime="20201030 15:51:09.875"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:09.877" endtime="20201030 15:51:10.155"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:09.876" endtime="20201030 15:51:10.155"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:10.168" endtime="20201030 15:51:10.180"></status>
</kw>
<msg timestamp="20201030 15:51:10.180" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:10.166" endtime="20201030 15:51:10.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:10.183" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:10.181" endtime="20201030 15:51:10.183"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:51:10.186" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:51:10.184" endtime="20201030 15:51:10.186"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:10.164" endtime="20201030 15:51:10.187"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:10.162" endtime="20201030 15:51:10.187"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:10.160" endtime="20201030 15:51:10.188"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:51:10.191" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:51:10.191" endtime="20201030 15:51:10.192"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:10.188" endtime="20201030 15:51:10.192"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:10.159" endtime="20201030 15:51:10.192"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:10.159" endtime="20201030 15:51:10.192"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:10.193" endtime="20201030 15:51:10.194"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:10.158" endtime="20201030 15:51:10.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:10.196" endtime="20201030 15:51:10.197"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:10.156" endtime="20201030 15:51:10.198"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:08.700" endtime="20201030 15:51:10.198"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:10.204" endtime="20201030 15:51:10.224"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:10.202" endtime="20201030 15:51:10.224"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:10.237" endtime="20201030 15:51:10.249"></status>
</kw>
<msg timestamp="20201030 15:51:10.250" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:10.235" endtime="20201030 15:51:10.250"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:10.253" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:10.251" endtime="20201030 15:51:10.253"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:51:10.256" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:51:10.254" endtime="20201030 15:51:10.256"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:10.233" endtime="20201030 15:51:10.256"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:10.231" endtime="20201030 15:51:10.257"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:10.229" endtime="20201030 15:51:10.257"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:51:10.261" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:51:10.260" endtime="20201030 15:51:10.261"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:10.258" endtime="20201030 15:51:10.262"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:10.229" endtime="20201030 15:51:10.262"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:10.228" endtime="20201030 15:51:10.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:10.263" endtime="20201030 15:51:10.264"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:10.227" endtime="20201030 15:51:10.265"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:10.225" endtime="20201030 15:51:10.265"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:10.201" endtime="20201030 15:51:10.265"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:10.274" endtime="20201030 15:51:10.285"></status>
</kw>
<msg timestamp="20201030 15:51:10.285" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:10.272" endtime="20201030 15:51:10.286"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:10.288" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:10.286" endtime="20201030 15:51:10.288"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:10.289" endtime="20201030 15:51:10.290"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:10.270" endtime="20201030 15:51:10.291"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:10.268" endtime="20201030 15:51:10.291"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:10.298" endtime="20201030 15:51:10.588"></status>
</kw>
<msg timestamp="20201030 15:51:10.591" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.06026775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.060268944, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:51:10.296" endtime="20201030 15:51:10.592"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:10.599" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.06026775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.060268944, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:51:10.592" endtime="20201030 15:51:10.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:10.601" endtime="20201030 15:51:10.602"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:10.294" endtime="20201030 15:51:10.603"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:10.292" endtime="20201030 15:51:10.603"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:10.607" level="INFO">${RESULT} = [{'diff': 1.1939999999960316e-06}, {'diff': 9.59000000001764e-07}, {'diff': 9.860000000014302e-07}, {'diff': 9.999999999940612e-07}, {'diff': 1.000000000001e-06}, {'diff': 1.000000000001e-06}, {'diff'...</msg>
<status status="PASS" starttime="20201030 15:51:10.604" endtime="20201030 15:51:10.607"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:10.611" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.1939999999960316e-06, 9.59000000001764e-07, 9.860000000014302e-07, 9.999999999940612e-07, 1.000000000001e-06, 1.000000000001e-06, 1.01400000000057e-06, 9.860000000014302e-07, 1.06999999999...</msg>
<status status="PASS" starttime="20201030 15:51:10.608" endtime="20201030 15:51:10.612"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:10.616" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:51:10.615" endtime="20201030 15:51:10.616"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:10.618" level="INFO">VALUE: [1.1939999999960316e-06, 9.59000000001764e-07, 9.860000000014302e-07, 9.999999999940612e-07, 1.000000000001e-06, 1.000000000001e-06, 1.01400000000057e-06, 9.860000000014302e-07, 1.0699999999988496e-06, 1.000000000001e-06, 9.860000000014302e-07, 1.000000000001e-06, 9.999999999940612e-07, 9.72999999994395e-07, 1.01400000000057e-06, 1.068999999999376e-06, 9.860000000014302e-07, 9.860000000014302e-07, 9.859999999944913e-07, 1.000000000001e-06, 1.01400000000057e-06, 1.000000000001e-06, 1.0139999999936311e-06, 1.000000000001e-06, 1.01400000000057e-06, 1.01400000000057e-06, 1.000000000001e-06, 1.000000000001e-06, 1.0139999999936311e-06, 1.000000000001e-06, 1.000000000001e-06, 9.860000000014302e-07, 1.054999999999806e-06, 1.0139999999936311e-06, 9.58999999994825e-07, 1.000000000001e-06, 1.000000000001e-06, 1.000000000001e-06, 9.860000000014302e-07, 1.02800000000014e-06, 1.000000000001e-06, 1.000000000001e-06, 1.000000000001e-06, 1.01400000000057e-06, 9.999999999940612e-07, 1.01400000000057e-06, 1.000000000001e-06, 1.000000000001e-06, 1.000000000001e-06, 1.000000000001e-06]</msg>
<status status="PASS" starttime="20201030 15:51:10.617" endtime="20201030 15:51:10.619"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:10.612" endtime="20201030 15:51:10.620"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:10.623" endtime="20201030 15:51:10.643"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:10.622" endtime="20201030 15:51:10.644"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:10.621" endtime="20201030 15:51:10.644"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:10.267" endtime="20201030 15:51:10.645"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:10.266" endtime="20201030 15:51:10.645"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:10.655" endtime="20201030 15:51:10.666"></status>
</kw>
<msg timestamp="20201030 15:51:10.666" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:10.653" endtime="20201030 15:51:10.666"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:10.670" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:10.668" endtime="20201030 15:51:10.670"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:10.672" endtime="20201030 15:51:10.674"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:10.650" endtime="20201030 15:51:10.674"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:10.647" endtime="20201030 15:51:10.675"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:10.681" endtime="20201030 15:51:10.965"></status>
</kw>
<msg timestamp="20201030 15:51:10.968" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021872403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021873611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:10.680" endtime="20201030 15:51:10.969"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:10.977" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021872403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021873611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:10.970" endtime="20201030 15:51:10.978"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:10.979" endtime="20201030 15:51:10.981"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:10.677" endtime="20201030 15:51:10.982"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:10.675" endtime="20201030 15:51:10.983"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:10.988" level="INFO">${RESULT} = [{'diff': 1.2080000000025404e-06}, {'diff': 1.000000000001e-06}, {'diff': 1.000000000001e-06}, {'diff': 9.719999999983908e-07}, {'diff': 1.000000000001e-06}, {'diff': 1.0419999999997098e-06}, {'diff':...</msg>
<status status="PASS" starttime="20201030 15:51:10.984" endtime="20201030 15:51:10.989"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:10.995" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.2080000000025404e-06, 1.000000000001e-06, 1.000000000001e-06, 9.719999999983908e-07, 1.000000000001e-06, 1.0419999999997098e-06, 1.01400000000057e-06, 1.0559999999992797e-06, 1.01400000000...</msg>
<status status="PASS" starttime="20201030 15:51:10.990" endtime="20201030 15:51:10.995"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:11.003" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:51:11.000" endtime="20201030 15:51:11.005"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:11.008" level="INFO">VALUE: [1.2080000000025404e-06, 1.000000000001e-06, 1.000000000001e-06, 9.719999999983908e-07, 1.000000000001e-06, 1.0419999999997098e-06, 1.01400000000057e-06, 1.0559999999992797e-06, 1.01400000000057e-06, 9.59000000001764e-07, 1.0130000000010964e-06, 1.000000000001e-06, 9.43999999999251e-07, 9.860000000014302e-07, 1.01400000000057e-06, 1.000000000001e-06, 1.000000000001e-06, 1.000000000001e-06, 1.000000000001e-06, 1.01400000000057e-06, 1.01400000000057e-06, 1.054999999999806e-06, 1.000000000001e-06, 9.859999999979607e-07, 9.57999999998821e-07, 1.0130000000010964e-06, 1.0139999999971006e-06, 1.000000000001e-06, 1.000000000001e-06, 9.999999999975306e-07, 1.01400000000057e-06, 1.000000000001e-06, 1.01400000000057e-06, 1.0139999999971006e-06, 1.0409999999967667e-06, 9.859999999979607e-07, 1.0419999999997098e-06, 1.000000000001e-06, 9.310000000026242e-07, 9.309999999991547e-07, 9.860000000014302e-07, 9.869999999974344e-07, 1.01400000000057e-06, 1.054999999999806e-06, 9.999999999975306e-07, 9.589999999982945e-07, 9.449999999987246e-07, 1.02800000000014e-06, 1.01400000000057e-06, 9.999999999975306e-07]</msg>
<status status="PASS" starttime="20201030 15:51:11.007" endtime="20201030 15:51:11.009"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:10.996" endtime="20201030 15:51:11.010"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:11.015" endtime="20201030 15:51:11.035"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:11.013" endtime="20201030 15:51:11.036"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:11.011" endtime="20201030 15:51:11.037"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:10.646" endtime="20201030 15:51:11.038"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:10.645" endtime="20201030 15:51:11.038"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:11.053" endtime="20201030 15:51:11.065"></status>
</kw>
<msg timestamp="20201030 15:51:11.065" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:11.050" endtime="20201030 15:51:11.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:11.070" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:11.067" endtime="20201030 15:51:11.070"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:11.072" endtime="20201030 15:51:11.074"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:11.045" endtime="20201030 15:51:11.075"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:11.042" endtime="20201030 15:51:11.077"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:11.088" endtime="20201030 15:51:11.375"></status>
</kw>
<msg timestamp="20201030 15:51:11.378" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029288458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029289639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:11.085" endtime="20201030 15:51:11.378"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:11.387" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029288458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029289639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:11.379" endtime="20201030 15:51:11.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:11.388" endtime="20201030 15:51:11.392"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:11.081" endtime="20201030 15:51:11.392"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:11.078" endtime="20201030 15:51:11.393"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:11.398" level="INFO">${RESULT} = [{'diff': 1.1809999999994047e-06}, {'diff': 1.000000000001e-06}, {'diff': 1.01400000000057e-06}, {'diff': 1.000000000001e-06}, {'diff': 1.0139999999971006e-06}, {'diff': 9.999999999975306e-07}, {'diff...</msg>
<status status="PASS" starttime="20201030 15:51:11.394" endtime="20201030 15:51:11.399"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:11.403" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.1809999999994047e-06, 1.000000000001e-06, 1.01400000000057e-06, 1.000000000001e-06, 1.0139999999971006e-06, 9.999999999975306e-07, 1.0419999999997098e-06, 1.000000000001e-06, 1.00000000000...</msg>
<status status="PASS" starttime="20201030 15:51:11.399" endtime="20201030 15:51:11.403"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:11.408" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:51:11.407" endtime="20201030 15:51:11.409"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:11.411" level="INFO">VALUE: [1.1809999999994047e-06, 1.000000000001e-06, 1.01400000000057e-06, 1.000000000001e-06, 1.0139999999971006e-06, 9.999999999975306e-07, 1.0419999999997098e-06, 1.000000000001e-06, 1.000000000001e-06, 1.000000000001e-06, 9.729999999978645e-07, 1.000000000001e-06, 9.999999999975306e-07, 1.000000000001e-06, 9.860000000014302e-07, 1.0139999999971006e-06, 9.720000000018603e-07, 1.01400000000057e-06, 9.450000000021941e-07, 9.860000000014302e-07, 9.999999999975306e-07, 9.580000000022904e-07, 1.000000000001e-06, 1.054999999999806e-06, 9.860000000014302e-07, 1.000000000001e-06, 9.860000000014302e-07, 9.57999999998821e-07, 1.000000000001e-06, 1.000000000001e-06, 9.860000000014302e-07, 1.000000000001e-06, 1.000000000001e-06, 9.870000000009038e-07, 9.719999999983908e-07, 9.999999999975306e-07, 1.000000000001e-06, 1.0419999999997098e-06, 1.000000000001e-06, 1.000000000001e-06, 9.860000000014302e-07, 1.000000000001e-06, 1.000000000001e-06, 9.999999999975306e-07, 9.859999999979607e-07, 1.068999999999376e-06, 1.000000000001e-06, 9.719999999983908e-07, 1.000000000001e-06, 9.999999999940612e-07]</msg>
<status status="PASS" starttime="20201030 15:51:11.409" endtime="20201030 15:51:11.411"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:11.404" endtime="20201030 15:51:11.412"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:11.415" endtime="20201030 15:51:11.435"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:11.414" endtime="20201030 15:51:11.435"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:11.413" endtime="20201030 15:51:11.436"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:11.039" endtime="20201030 15:51:11.436"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:11.039" endtime="20201030 15:51:11.436"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:11.444" endtime="20201030 15:51:11.454"></status>
</kw>
<msg timestamp="20201030 15:51:11.455" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:11.442" endtime="20201030 15:51:11.455"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:11.457" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:11.456" endtime="20201030 15:51:11.457"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:11.458" endtime="20201030 15:51:11.460"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:11.440" endtime="20201030 15:51:11.461"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:11.438" endtime="20201030 15:51:11.461"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:11.468" endtime="20201030 15:51:11.752"></status>
</kw>
<msg timestamp="20201030 15:51:11.755" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018623528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018624708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:11.466" endtime="20201030 15:51:11.756"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:11.763" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018623528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018624708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:11.756" endtime="20201030 15:51:11.764"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:11.765" endtime="20201030 15:51:11.767"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:11.464" endtime="20201030 15:51:11.767"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:11.462" endtime="20201030 15:51:11.767"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:11.771" level="INFO">${RESULT} = [{'diff': 1.179999999999931e-06}, {'diff': 1.000000000001e-06}, {'diff': 1.000000000001e-06}, {'diff': 1.0560000000027492e-06}, {'diff': 9.859999999979607e-07}, {'diff': 1.0560000000027492e-06}, {'dif...</msg>
<status status="PASS" starttime="20201030 15:51:11.768" endtime="20201030 15:51:11.772"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:11.775" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.179999999999931e-06, 1.000000000001e-06, 1.000000000001e-06, 1.0560000000027492e-06, 9.859999999979607e-07, 1.0560000000027492e-06, 1.000000000001e-06, 1.000000000001e-06, 9.58000000002290...</msg>
<status status="PASS" starttime="20201030 15:51:11.772" endtime="20201030 15:51:11.776"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:11.779" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:51:11.778" endtime="20201030 15:51:11.780"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:11.782" level="INFO">VALUE: [1.179999999999931e-06, 1.000000000001e-06, 1.000000000001e-06, 1.0560000000027492e-06, 9.859999999979607e-07, 1.0560000000027492e-06, 1.000000000001e-06, 1.000000000001e-06, 9.580000000022904e-07, 9.860000000014302e-07, 1.000000000001e-06, 1.000000000001e-06, 1.0559999999992797e-06, 9.870000000009038e-07, 1.054999999999806e-06, 9.57999999998821e-07, 1.000000000001e-06, 1.000000000001e-06, 9.860000000014302e-07, 9.860000000014302e-07, 9.449999999987246e-07, 1.000000000001e-06, 9.860000000014302e-07, 1.0699999999988496e-06, 1.01400000000057e-06, 1.000000000001e-06, 9.719999999983908e-07, 1.0139999999971006e-06, 1.000000000001e-06, 1.000000000001e-06, 1.000000000001e-06, 9.999999999975306e-07, 9.859999999979607e-07, 1.000000000001e-06, 9.860000000014302e-07, 1.000000000001e-06, 1.0419999999997098e-06, 1.000000000001e-06, 1.012999999997627e-06, 9.719999999983908e-07, 1.000000000001e-06, 1.0130000000010964e-06, 1.000000000001e-06, 9.870000000009038e-07, 9.999999999975306e-07, 1.0559999999992797e-06, 9.860000000014302e-07, 9.719999999983908e-07, 1.000000000001e-06, 9.720000000018603e-07]</msg>
<status status="PASS" starttime="20201030 15:51:11.781" endtime="20201030 15:51:11.783"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:11.776" endtime="20201030 15:51:11.784"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:11.787" endtime="20201030 15:51:11.806"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:11.786" endtime="20201030 15:51:11.807"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:11.784" endtime="20201030 15:51:11.807"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:11.437" endtime="20201030 15:51:11.808"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:11.436" endtime="20201030 15:51:11.808"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:11.815" endtime="20201030 15:51:11.825"></status>
</kw>
<msg timestamp="20201030 15:51:11.826" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:11.814" endtime="20201030 15:51:11.826"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:11.828" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:11.827" endtime="20201030 15:51:11.829"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:11.829" endtime="20201030 15:51:11.831"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:11.811" endtime="20201030 15:51:11.831"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:11.810" endtime="20201030 15:51:11.832"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:11.838" endtime="20201030 15:51:12.124"></status>
</kw>
<msg timestamp="20201030 15:51:12.127" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018388375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018389556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:11.837" endtime="20201030 15:51:12.127"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:12.135" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018388375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018389556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:12.128" endtime="20201030 15:51:12.136"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:12.137" endtime="20201030 15:51:12.139"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:11.834" endtime="20201030 15:51:12.139"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:11.832" endtime="20201030 15:51:12.140"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:12.144" level="INFO">${RESULT} = [{'diff': 1.1810000000028742e-06}, {'diff': 9.999999999975306e-07}, {'diff': 9.860000000014302e-07}, {'diff': 9.59000000001764e-07}, {'diff': 1.000000000001e-06}, {'diff': 9.719999999983908e-07}, {'di...</msg>
<status status="PASS" starttime="20201030 15:51:12.140" endtime="20201030 15:51:12.144"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:12.148" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.1810000000028742e-06, 9.999999999975306e-07, 9.860000000014302e-07, 9.59000000001764e-07, 1.000000000001e-06, 9.719999999983908e-07, 1.000000000001e-06, 9.719999999983908e-07, 1.0000000000...</msg>
<status status="PASS" starttime="20201030 15:51:12.144" endtime="20201030 15:51:12.148"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:12.153" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:51:12.152" endtime="20201030 15:51:12.153"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:12.155" level="INFO">VALUE: [1.1810000000028742e-06, 9.999999999975306e-07, 9.860000000014302e-07, 9.59000000001764e-07, 1.000000000001e-06, 9.719999999983908e-07, 1.000000000001e-06, 9.719999999983908e-07, 1.000000000001e-06, 9.860000000014302e-07, 1.000000000001e-06, 9.859999999979607e-07, 9.860000000014302e-07, 1.000000000001e-06, 1.054999999999806e-06, 9.859999999979607e-07, 9.729999999978645e-07, 9.999999999975306e-07, 1.000000000001e-06, 1.0139999999971006e-06, 9.859999999979607e-07, 1.01400000000057e-06, 1.000000000001e-06, 1.02800000000014e-06, 1.01400000000057e-06, 9.860000000014302e-07, 1.000000000001e-06, 9.999999999975306e-07, 1.02800000000014e-06, 9.860000000014302e-07, 1.000000000001e-06, 9.999999999975306e-07, 9.860000000014302e-07, 9.999999999975306e-07, 1.000000000001e-06, 1.01400000000057e-06, 9.999999999975306e-07, 1.000000000001e-06, 1.000000000001e-06, 1.054999999999806e-06, 1.000000000001e-06, 1.000000000001e-06, 9.999999999975306e-07, 9.860000000014302e-07, 9.859999999979607e-07, 1.01400000000057e-06, 1.000000000001e-06, 1.000000000001e-06, 1.000000000001e-06, 9.73000000001334e-07]</msg>
<status status="PASS" starttime="20201030 15:51:12.154" endtime="20201030 15:51:12.155"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:12.149" endtime="20201030 15:51:12.156"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:12.159" endtime="20201030 15:51:12.179"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:12.158" endtime="20201030 15:51:12.179"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:12.157" endtime="20201030 15:51:12.180"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:11.809" endtime="20201030 15:51:12.180"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:11.808" endtime="20201030 15:51:12.180"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:12.188" endtime="20201030 15:51:12.198"></status>
</kw>
<msg timestamp="20201030 15:51:12.198" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:12.186" endtime="20201030 15:51:12.198"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:12.201" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:12.199" endtime="20201030 15:51:12.201"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:12.202" endtime="20201030 15:51:12.203"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:12.184" endtime="20201030 15:51:12.204"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:12.182" endtime="20201030 15:51:12.204"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:12.211" endtime="20201030 15:51:12.498"></status>
</kw>
<msg timestamp="20201030 15:51:12.501" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018328514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018329764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:12.209" endtime="20201030 15:51:12.502"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:12.509" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018328514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018329764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:12.503" endtime="20201030 15:51:12.510"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:12.511" endtime="20201030 15:51:12.512"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:12.207" endtime="20201030 15:51:12.513"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:12.205" endtime="20201030 15:51:12.513"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:12.517" level="INFO">${RESULT} = [{'diff': 1.2499999999977807e-06}, {'diff': 9.999999999975306e-07}, {'diff': 9.720000000018603e-07}, {'diff': 1.054999999999806e-06}, {'diff': 1.0139999999971006e-06}, {'diff': 1.000000000001e-06}, {'...</msg>
<status status="PASS" starttime="20201030 15:51:12.514" endtime="20201030 15:51:12.517"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:12.521" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.2499999999977807e-06, 9.999999999975306e-07, 9.720000000018603e-07, 1.054999999999806e-06, 1.0139999999971006e-06, 1.000000000001e-06, 1.000000000001e-06, 1.000000000001e-06, 9.85999999997...</msg>
<status status="PASS" starttime="20201030 15:51:12.518" endtime="20201030 15:51:12.521"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:12.525" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:51:12.524" endtime="20201030 15:51:12.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:12.528" level="INFO">VALUE: [1.2499999999977807e-06, 9.999999999975306e-07, 9.720000000018603e-07, 1.054999999999806e-06, 1.0139999999971006e-06, 1.000000000001e-06, 1.000000000001e-06, 1.000000000001e-06, 9.859999999979607e-07, 9.860000000014302e-07, 9.999999999975306e-07, 1.02800000000014e-06, 9.57999999998821e-07, 1.000000000001e-06, 1.000000000001e-06, 1.000000000001e-06, 1.01400000000057e-06, 9.73000000001334e-07, 9.720000000018603e-07, 1.000000000001e-06, 1.0699999999988496e-06, 9.999999999975306e-07, 9.589999999982945e-07, 9.59000000001764e-07, 1.000000000001e-06, 1.01400000000057e-06, 1.01400000000057e-06, 9.57999999998821e-07, 1.000000000001e-06, 1.01400000000057e-06, 1.0139999999971006e-06, 1.01400000000057e-06, 1.01400000000057e-06, 1.000000000001e-06, 9.719999999983908e-07, 1.01400000000057e-06, 9.729999999978645e-07, 1.000000000001e-06, 1.0690000000028455e-06, 1.000000000001e-06, 1.000000000001e-06, 9.859999999979607e-07, 1.054999999999806e-06, 1.000000000001e-06, 1.02800000000014e-06, 1.000000000001e-06, 9.859999999979607e-07, 9.860000000014302e-07, 9.859999999979607e-07, 1.0419999999997098e-06]</msg>
<status status="PASS" starttime="20201030 15:51:12.526" endtime="20201030 15:51:12.528"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:12.522" endtime="20201030 15:51:12.529"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:12.532" endtime="20201030 15:51:12.551"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:12.531" endtime="20201030 15:51:12.552"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:12.529" endtime="20201030 15:51:12.552"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:12.181" endtime="20201030 15:51:12.553"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:12.180" endtime="20201030 15:51:12.553"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:12.560" endtime="20201030 15:51:12.571"></status>
</kw>
<msg timestamp="20201030 15:51:12.571" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:12.559" endtime="20201030 15:51:12.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:12.574" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:12.572" endtime="20201030 15:51:12.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:12.575" endtime="20201030 15:51:12.577"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:12.556" endtime="20201030 15:51:12.577"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:12.555" endtime="20201030 15:51:12.578"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:12.584" endtime="20201030 15:51:12.870"></status>
</kw>
<msg timestamp="20201030 15:51:12.873" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018378111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018379306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:12.583" endtime="20201030 15:51:12.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:12.881" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018378111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018379306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:12.874" endtime="20201030 15:51:12.881"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:12.882" endtime="20201030 15:51:12.883"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:12.580" endtime="20201030 15:51:12.884"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:12.578" endtime="20201030 15:51:12.884"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:12.888" level="INFO">${RESULT} = [{'diff': 1.1950000000024441e-06}, {'diff': 9.860000000014302e-07}, {'diff': 1.01400000000057e-06}, {'diff': 1.000000000001e-06}, {'diff': 9.57999999998821e-07}, {'diff': 9.719999999983908e-07}, {'dif...</msg>
<status status="PASS" starttime="20201030 15:51:12.885" endtime="20201030 15:51:12.888"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:12.892" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.1950000000024441e-06, 9.860000000014302e-07, 1.01400000000057e-06, 1.000000000001e-06, 9.57999999998821e-07, 9.719999999983908e-07, 1.000000000001e-06, 9.999999999975306e-07, 1.00000000000...</msg>
<status status="PASS" starttime="20201030 15:51:12.889" endtime="20201030 15:51:12.892"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:12.897" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:51:12.895" endtime="20201030 15:51:12.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:12.899" level="INFO">VALUE: [1.1950000000024441e-06, 9.860000000014302e-07, 1.01400000000057e-06, 1.000000000001e-06, 9.57999999998821e-07, 9.719999999983908e-07, 1.000000000001e-06, 9.999999999975306e-07, 1.000000000001e-06, 9.719999999983908e-07, 9.719999999983908e-07, 1.000000000001e-06, 9.860000000014302e-07, 1.000000000001e-06, 9.860000000014302e-07, 1.068999999999376e-06, 1.000000000001e-06, 1.000000000001e-06, 1.000000000001e-06, 9.860000000014302e-07, 9.999999999975306e-07, 9.859999999979607e-07, 1.01400000000057e-06, 1.000000000001e-06, 9.999999999975306e-07, 1.054999999999806e-06, 1.02800000000014e-06, 1.000000000001e-06, 1.01400000000057e-06, 1.01400000000057e-06, 9.860000000014302e-07, 1.000000000001e-06, 1.000000000001e-06, 9.859999999979607e-07, 1.000000000001e-06, 1.000000000001e-06, 9.309999999991547e-07, 1.000000000001e-06, 1.01400000000057e-06, 9.719999999983908e-07, 1.000000000001e-06, 1.000000000001e-06, 1.000000000001e-06, 9.860000000014302e-07, 9.859999999979607e-07, 1.000000000001e-06, 1.01400000000057e-06, 9.57999999998821e-07, 9.860000000014302e-07, 1.000000000001e-06]</msg>
<status status="PASS" starttime="20201030 15:51:12.898" endtime="20201030 15:51:12.900"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:12.893" endtime="20201030 15:51:12.901"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:12.905" endtime="20201030 15:51:12.925"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:12.903" endtime="20201030 15:51:12.925"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:12.902" endtime="20201030 15:51:12.925"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:12.554" endtime="20201030 15:51:12.926"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:12.553" endtime="20201030 15:51:12.926"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:12.934" endtime="20201030 15:51:12.944"></status>
</kw>
<msg timestamp="20201030 15:51:12.944" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:12.932" endtime="20201030 15:51:12.944"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:12.947" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:12.945" endtime="20201030 15:51:12.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:12.948" endtime="20201030 15:51:12.949"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:12.929" endtime="20201030 15:51:12.950"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:12.928" endtime="20201030 15:51:12.950"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:12.957" endtime="20201030 15:51:13.243"></status>
</kw>
<msg timestamp="20201030 15:51:13.246" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018536292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018537472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:12.955" endtime="20201030 15:51:13.247"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:13.254" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018536292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018537472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:13.247" endtime="20201030 15:51:13.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:13.255" endtime="20201030 15:51:13.257"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:12.952" endtime="20201030 15:51:13.258"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:12.951" endtime="20201030 15:51:13.258"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:13.262" level="INFO">${RESULT} = [{'diff': 1.179999999999931e-06}, {'diff': 1.0270000000006663e-06}, {'diff': 1.01400000000057e-06}, {'diff': 9.43999999999251e-07}, {'diff': 1.0130000000010964e-06}, {'diff': 1.000000000001e-06}, {'di...</msg>
<status status="PASS" starttime="20201030 15:51:13.259" endtime="20201030 15:51:13.262"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:13.267" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.179999999999931e-06, 1.0270000000006663e-06, 1.01400000000057e-06, 9.43999999999251e-07, 1.0130000000010964e-06, 1.000000000001e-06, 1.01400000000057e-06, 9.999999999975306e-07, 9.86000000...</msg>
<status status="PASS" starttime="20201030 15:51:13.263" endtime="20201030 15:51:13.267"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:13.271" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:51:13.270" endtime="20201030 15:51:13.271"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:13.273" level="INFO">VALUE: [1.179999999999931e-06, 1.0270000000006663e-06, 1.01400000000057e-06, 9.43999999999251e-07, 1.0130000000010964e-06, 1.000000000001e-06, 1.01400000000057e-06, 9.999999999975306e-07, 9.860000000014302e-07, 1.000000000001e-06, 1.054999999999806e-06, 9.859999999979607e-07, 1.0559999999992797e-06, 1.000000000001e-06, 1.000000000001e-06, 9.580000000022904e-07, 9.860000000014302e-07, 1.054999999999806e-06, 1.0559999999992797e-06, 1.0139999999971006e-06, 9.720000000018603e-07, 9.859999999979607e-07, 1.000000000001e-06, 9.59000000001764e-07, 1.01400000000057e-06, 1.01400000000057e-06, 1.000000000001e-06, 1.000000000001e-06, 1.0139999999971006e-06, 9.589999999982945e-07, 9.999999999975306e-07, 9.860000000014302e-07, 1.000000000001e-06, 9.999999999975306e-07, 1.01400000000057e-06, 1.01400000000057e-06, 9.999999999975306e-07, 9.999999999975306e-07, 9.860000000014302e-07, 1.02800000000014e-06, 9.719999999983908e-07, 9.860000000014302e-07, 1.0559999999992797e-06, 1.000000000001e-06, 9.860000000014302e-07, 1.000000000001e-06, 9.999999999975306e-07, 1.000000000001e-06, 1.02800000000014e-06, 9.860000000014302e-07]</msg>
<status status="PASS" starttime="20201030 15:51:13.272" endtime="20201030 15:51:13.274"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:13.268" endtime="20201030 15:51:13.274"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:13.278" endtime="20201030 15:51:13.297"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:13.276" endtime="20201030 15:51:13.298"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:13.275" endtime="20201030 15:51:13.298"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:12.927" endtime="20201030 15:51:13.298"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:12.926" endtime="20201030 15:51:13.298"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:13.306" endtime="20201030 15:51:13.316"></status>
</kw>
<msg timestamp="20201030 15:51:13.317" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:13.305" endtime="20201030 15:51:13.317"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:13.319" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:13.318" endtime="20201030 15:51:13.319"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:13.320" endtime="20201030 15:51:13.322"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:13.302" endtime="20201030 15:51:13.322"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:13.300" endtime="20201030 15:51:13.323"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:13.329" endtime="20201030 15:51:13.615"></status>
</kw>
<msg timestamp="20201030 15:51:13.618" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018433917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018435139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:13.328" endtime="20201030 15:51:13.618"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:13.626" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018433917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018435139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:13.619" endtime="20201030 15:51:13.626"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:13.627" endtime="20201030 15:51:13.629"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:13.325" endtime="20201030 15:51:13.630"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:13.324" endtime="20201030 15:51:13.630"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:13.634" level="INFO">${RESULT} = [{'diff': 1.2219999999986408e-06}, {'diff': 1.0130000000010964e-06}, {'diff': 1.000000000001e-06}, {'diff': 9.859999999979607e-07}, {'diff': 1.000000000001e-06}, {'diff': 1.01400000000057e-06}, {'diff...</msg>
<status status="PASS" starttime="20201030 15:51:13.631" endtime="20201030 15:51:13.634"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:13.638" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.2219999999986408e-06, 1.0130000000010964e-06, 1.000000000001e-06, 9.859999999979607e-07, 1.000000000001e-06, 1.01400000000057e-06, 9.869999999974344e-07, 1.000000000001e-06, 1.000000000001...</msg>
<status status="PASS" starttime="20201030 15:51:13.635" endtime="20201030 15:51:13.638"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:13.642" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:51:13.641" endtime="20201030 15:51:13.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:13.645" level="INFO">VALUE: [1.2219999999986408e-06, 1.0130000000010964e-06, 1.000000000001e-06, 9.859999999979607e-07, 1.000000000001e-06, 1.01400000000057e-06, 9.869999999974344e-07, 1.000000000001e-06, 1.000000000001e-06, 9.999999999975306e-07, 1.000000000001e-06, 1.000000000001e-06, 1.000000000001e-06, 1.0270000000006663e-06, 1.01400000000057e-06, 1.000000000001e-06, 9.999999999975306e-07, 1.000000000001e-06, 1.000000000001e-06, 1.0270000000006663e-06, 1.000000000001e-06, 9.999999999975306e-07, 9.870000000009038e-07, 1.0139999999971006e-06, 1.01400000000057e-06, 9.860000000014302e-07, 9.999999999975306e-07, 9.719999999983908e-07, 1.000000000001e-06, 9.300000000031505e-07, 1.0699999999988496e-06, 9.589999999982945e-07, 1.000000000001e-06, 1.01400000000057e-06, 1.02800000000014e-06, 1.01400000000057e-06, 1.000000000001e-06, 9.57999999998821e-07, 1.000000000001e-06, 1.0419999999997098e-06, 1.01400000000057e-06, 1.000000000001e-06, 1.0410000000002362e-06, 1.01400000000057e-06, 9.720000000018603e-07, 1.000000000001e-06, 9.859999999979607e-07, 1.000000000001e-06, 9.859999999979607e-07, 9.299999999996811e-07]</msg>
<status status="PASS" starttime="20201030 15:51:13.644" endtime="20201030 15:51:13.645"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:13.639" endtime="20201030 15:51:13.646"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:13.649" endtime="20201030 15:51:13.669"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:13.648" endtime="20201030 15:51:13.669"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:13.647" endtime="20201030 15:51:13.669"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:13.299" endtime="20201030 15:51:13.670"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:13.299" endtime="20201030 15:51:13.670"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:13.678" endtime="20201030 15:51:13.688"></status>
</kw>
<msg timestamp="20201030 15:51:13.688" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:13.676" endtime="20201030 15:51:13.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:13.691" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:13.689" endtime="20201030 15:51:13.691"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:13.699" endtime="20201030 15:51:13.701"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:13.674" endtime="20201030 15:51:13.702"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:13.672" endtime="20201030 15:51:13.702"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:13.708" endtime="20201030 15:51:13.994"></status>
</kw>
<msg timestamp="20201030 15:51:13.997" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018318944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018320125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:13.707" endtime="20201030 15:51:13.997"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:14.005" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018318944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018320125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:13.998" endtime="20201030 15:51:14.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:14.006" endtime="20201030 15:51:14.008"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:13.704" endtime="20201030 15:51:14.008"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:13.703" endtime="20201030 15:51:14.009"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:14.013" level="INFO">${RESULT} = [{'diff': 1.1809999999994047e-06}, {'diff': 1.000000000001e-06}, {'diff': 1.0130000000010964e-06}, {'diff': 1.0419999999997098e-06}, {'diff': 9.449999999987246e-07}, {'diff': 1.01400000000057e-06}, {'...</msg>
<status status="PASS" starttime="20201030 15:51:14.009" endtime="20201030 15:51:14.013"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:14.017" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.1809999999994047e-06, 1.000000000001e-06, 1.0130000000010964e-06, 1.0419999999997098e-06, 9.449999999987246e-07, 1.01400000000057e-06, 1.000000000001e-06, 1.000000000001e-06, 9.85999999997...</msg>
<status status="PASS" starttime="20201030 15:51:14.014" endtime="20201030 15:51:14.017"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:14.021" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:51:14.020" endtime="20201030 15:51:14.021"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:14.023" level="INFO">VALUE: [1.1809999999994047e-06, 1.000000000001e-06, 1.0130000000010964e-06, 1.0419999999997098e-06, 9.449999999987246e-07, 1.01400000000057e-06, 1.000000000001e-06, 1.000000000001e-06, 9.859999999979607e-07, 9.999999999975306e-07, 9.859999999979607e-07, 1.000000000001e-06, 9.870000000009038e-07, 1.054999999999806e-06, 9.999999999975306e-07, 1.01400000000057e-06, 1.000000000001e-06, 9.860000000014302e-07, 9.999999999975306e-07, 1.000000000001e-06, 1.01400000000057e-06, 9.870000000009038e-07, 1.000000000001e-06, 1.000000000001e-06, 1.01400000000057e-06, 1.01400000000057e-06, 9.999999999975306e-07, 9.999999999975306e-07, 9.580000000022904e-07, 9.860000000014302e-07, 1.000000000001e-06, 1.02800000000014e-06, 1.000000000001e-06, 9.999999999975306e-07, 9.57999999998821e-07, 1.054999999999806e-06, 1.01400000000057e-06, 1.000000000001e-06, 9.860000000014302e-07, 1.000000000001e-06, 9.860000000014302e-07, 1.000000000001e-06, 1.000000000001e-06, 1.012999999997627e-06, 9.860000000014302e-07, 9.999999999975306e-07, 9.860000000014302e-07, 1.000000000001e-06, 1.000000000001e-06, 1.000000000001e-06]</msg>
<status status="PASS" starttime="20201030 15:51:14.022" endtime="20201030 15:51:14.024"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:14.017" endtime="20201030 15:51:14.025"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:14.028" endtime="20201030 15:51:14.048"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:14.027" endtime="20201030 15:51:14.048"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:14.026" endtime="20201030 15:51:14.048"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:13.671" endtime="20201030 15:51:14.049"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:13.670" endtime="20201030 15:51:14.049"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:14.057" endtime="20201030 15:51:14.067"></status>
</kw>
<msg timestamp="20201030 15:51:14.067" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:14.055" endtime="20201030 15:51:14.067"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:14.070" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:14.068" endtime="20201030 15:51:14.070"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:14.071" endtime="20201030 15:51:14.073"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:14.053" endtime="20201030 15:51:14.073"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:14.051" endtime="20201030 15:51:14.074"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:14.080" endtime="20201030 15:51:14.365"></status>
</kw>
<msg timestamp="20201030 15:51:14.368" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018403597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018404778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:14.078" endtime="20201030 15:51:14.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:14.376" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018403597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018404778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:14.369" endtime="20201030 15:51:14.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:14.377" endtime="20201030 15:51:14.378"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:14.076" endtime="20201030 15:51:14.379"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:14.074" endtime="20201030 15:51:14.379"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:14.383" level="INFO">${RESULT} = [{'diff': 1.1809999999994047e-06}, {'diff': 1.02800000000014e-06}, {'diff': 9.719999999983908e-07}, {'diff': 9.310000000026242e-07}, {'diff': 9.310000000026242e-07}, {'diff': 1.000000000001e-06}, {'di...</msg>
<status status="PASS" starttime="20201030 15:51:14.380" endtime="20201030 15:51:14.384"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:14.388" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.1809999999994047e-06, 1.02800000000014e-06, 9.719999999983908e-07, 9.310000000026242e-07, 9.310000000026242e-07, 1.000000000001e-06, 1.000000000001e-06, 1.000000000001e-06, 1.0419999999997...</msg>
<status status="PASS" starttime="20201030 15:51:14.384" endtime="20201030 15:51:14.388"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:14.392" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:51:14.391" endtime="20201030 15:51:14.393"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:14.395" level="INFO">VALUE: [1.1809999999994047e-06, 1.02800000000014e-06, 9.719999999983908e-07, 9.310000000026242e-07, 9.310000000026242e-07, 1.000000000001e-06, 1.000000000001e-06, 1.000000000001e-06, 1.0419999999997098e-06, 1.054999999999806e-06, 1.01400000000057e-06, 1.000000000001e-06, 1.000000000001e-06, 9.999999999975306e-07, 9.859999999979607e-07, 9.999999999975306e-07, 1.000000000001e-06, 9.719999999983908e-07, 1.000000000001e-06, 9.999999999975306e-07, 1.054999999999806e-06, 9.860000000014302e-07, 9.59000000001764e-07, 9.720000000018603e-07, 9.859999999979607e-07, 9.859999999979607e-07, 9.860000000014302e-07, 1.000000000001e-06, 1.01400000000057e-06, 1.000000000001e-06, 9.860000000014302e-07, 9.719999999983908e-07, 9.449999999987246e-07, 9.719999999983908e-07, 9.870000000009038e-07, 1.000000000001e-06, 9.860000000014302e-07, 1.000000000001e-06, 9.999999999975306e-07, 1.0419999999997098e-06, 9.309999999991547e-07, 9.999999999975306e-07, 9.859999999979607e-07, 9.860000000014302e-07, 9.860000000014302e-07, 1.01400000000057e-06, 1.000000000001e-06, 9.860000000014302e-07, 9.999999999975306e-07, 9.999999999975306e-07]</msg>
<status status="PASS" starttime="20201030 15:51:14.393" endtime="20201030 15:51:14.395"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:14.389" endtime="20201030 15:51:14.396"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:14.399" endtime="20201030 15:51:14.418"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:14.398" endtime="20201030 15:51:14.419"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:14.396" endtime="20201030 15:51:14.419"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:14.050" endtime="20201030 15:51:14.420"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:14.049" endtime="20201030 15:51:14.420"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:14.427" endtime="20201030 15:51:14.438"></status>
</kw>
<msg timestamp="20201030 15:51:14.439" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:14.426" endtime="20201030 15:51:14.439"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:14.441" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:14.440" endtime="20201030 15:51:14.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:14.442" endtime="20201030 15:51:14.444"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:14.423" endtime="20201030 15:51:14.444"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:14.422" endtime="20201030 15:51:14.445"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:14.451" endtime="20201030 15:51:14.738"></status>
</kw>
<msg timestamp="20201030 15:51:14.741" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018892653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018893847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:14.449" endtime="20201030 15:51:14.741"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:14.749" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018892653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018893847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:14.742" endtime="20201030 15:51:14.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:14.750" endtime="20201030 15:51:14.753"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:14.447" endtime="20201030 15:51:14.753"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:14.445" endtime="20201030 15:51:14.754"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:14.758" level="INFO">${RESULT} = [{'diff': 1.193999999999501e-06}, {'diff': 9.57999999998821e-07}, {'diff': 9.309999999991547e-07}, {'diff': 9.999999999975306e-07}, {'diff': 1.01400000000057e-06}, {'diff': 1.000000000001e-06}, {'diff...</msg>
<status status="PASS" starttime="20201030 15:51:14.754" endtime="20201030 15:51:14.758"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:14.762" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.193999999999501e-06, 9.57999999998821e-07, 9.309999999991547e-07, 9.999999999975306e-07, 1.01400000000057e-06, 1.000000000001e-06, 1.01400000000057e-06, 1.01400000000057e-06, 9.58000000002...</msg>
<status status="PASS" starttime="20201030 15:51:14.758" endtime="20201030 15:51:14.762"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:14.766" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:51:14.765" endtime="20201030 15:51:14.766"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:14.768" level="INFO">VALUE: [1.193999999999501e-06, 9.57999999998821e-07, 9.309999999991547e-07, 9.999999999975306e-07, 1.01400000000057e-06, 1.000000000001e-06, 1.01400000000057e-06, 1.01400000000057e-06, 9.580000000022904e-07, 9.999999999975306e-07, 9.299999999996811e-07, 1.0139999999971006e-06, 1.01400000000057e-06, 1.0419999999997098e-06, 9.999999999975306e-07, 9.999999999975306e-07, 9.999999999975306e-07, 1.000000000001e-06, 9.999999999975306e-07, 1.000000000001e-06, 9.720000000018603e-07, 1.000000000001e-06, 1.000000000001e-06, 1.000000000001e-06, 1.000000000001e-06, 1.01400000000057e-06, 1.000000000001e-06, 1.000000000001e-06, 1.000000000001e-06, 9.860000000014302e-07, 1.000000000001e-06, 1.0139999999971006e-06, 9.859999999979607e-07, 1.01400000000057e-06, 1.02800000000014e-06, 1.0269999999971968e-06, 9.859999999979607e-07, 1.000000000001e-06, 9.860000000014302e-07, 1.070000000002319e-06, 1.000000000001e-06, 1.0419999999997098e-06, 1.000000000001e-06, 1.000000000001e-06, 1.000000000001e-06, 9.860000000014302e-07, 9.999999999975306e-07, 9.999999999975306e-07, 1.000000000001e-06, 9.859999999979607e-07]</msg>
<status status="PASS" starttime="20201030 15:51:14.767" endtime="20201030 15:51:14.769"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:14.762" endtime="20201030 15:51:14.769"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:14.773" endtime="20201030 15:51:14.793"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:14.771" endtime="20201030 15:51:14.793"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:14.770" endtime="20201030 15:51:14.794"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:14.421" endtime="20201030 15:51:14.794"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:14.420" endtime="20201030 15:51:14.794"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:14.804" endtime="20201030 15:51:14.815"></status>
</kw>
<msg timestamp="20201030 15:51:14.815" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:14.802" endtime="20201030 15:51:14.816"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:14.819" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:14.817" endtime="20201030 15:51:14.820"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:14.820" endtime="20201030 15:51:14.823"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:14.798" endtime="20201030 15:51:14.824"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:14.796" endtime="20201030 15:51:14.824"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:14.831" endtime="20201030 15:51:15.117"></status>
</kw>
<msg timestamp="20201030 15:51:15.120" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021344042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021345208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:14.829" endtime="20201030 15:51:15.120"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:15.128" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021344042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021345208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:15.121" endtime="20201030 15:51:15.128"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:15.129" endtime="20201030 15:51:15.131"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:14.826" endtime="20201030 15:51:15.132"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:14.825" endtime="20201030 15:51:15.132"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:15.136" level="INFO">${RESULT} = [{'diff': 1.1660000000003612e-06}, {'diff': 9.999999999975306e-07}, {'diff': 1.0139999999971006e-06}, {'diff': 9.860000000014302e-07}, {'diff': 1.01400000000057e-06}, {'diff': 1.01400000000057e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:51:15.133" endtime="20201030 15:51:15.136"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:15.140" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.1660000000003612e-06, 9.999999999975306e-07, 1.0139999999971006e-06, 9.860000000014302e-07, 1.01400000000057e-06, 1.01400000000057e-06, 1.01400000000057e-06, 9.719999999983908e-07, 1.01400...</msg>
<status status="PASS" starttime="20201030 15:51:15.137" endtime="20201030 15:51:15.140"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:15.144" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:51:15.143" endtime="20201030 15:51:15.144"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:15.146" level="INFO">VALUE: [1.1660000000003612e-06, 9.999999999975306e-07, 1.0139999999971006e-06, 9.860000000014302e-07, 1.01400000000057e-06, 1.01400000000057e-06, 1.01400000000057e-06, 9.719999999983908e-07, 1.01400000000057e-06, 9.859999999979607e-07, 9.580000000022904e-07, 9.999999999975306e-07, 9.59000000001764e-07, 1.01400000000057e-06, 1.01400000000057e-06, 1.000000000001e-06, 9.860000000014302e-07, 1.01400000000057e-06, 9.860000000014302e-07, 1.000000000001e-06, 1.000000000001e-06, 1.000000000001e-06, 9.720000000018603e-07, 9.999999999975306e-07, 1.0139999999971006e-06, 9.859999999979607e-07, 9.450000000021941e-07, 1.0139999999971006e-06, 1.0139999999971006e-06, 9.859999999979607e-07, 9.719999999983908e-07, 1.02800000000014e-06, 1.02800000000014e-06, 9.859999999979607e-07, 1.000000000001e-06, 9.729999999978645e-07, 1.000000000001e-06, 9.870000000009038e-07, 1.000000000001e-06, 1.000000000001e-06, 9.859999999979607e-07, 1.02800000000014e-06, 1.000000000001e-06, 9.999999999975306e-07, 9.999999999975306e-07, 1.000000000001e-06, 9.859999999979607e-07, 1.000000000001e-06, 9.859999999979607e-07, 1.000000000001e-06]</msg>
<status status="PASS" starttime="20201030 15:51:15.145" endtime="20201030 15:51:15.147"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:15.141" endtime="20201030 15:51:15.148"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:15.152" endtime="20201030 15:51:15.171"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:15.150" endtime="20201030 15:51:15.172"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:15.149" endtime="20201030 15:51:15.172"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:14.795" endtime="20201030 15:51:15.172"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:14.794" endtime="20201030 15:51:15.172"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:15.181" endtime="20201030 15:51:15.191"></status>
</kw>
<msg timestamp="20201030 15:51:15.191" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:15.179" endtime="20201030 15:51:15.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:15.194" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:15.192" endtime="20201030 15:51:15.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:15.195" endtime="20201030 15:51:15.196"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:15.176" endtime="20201030 15:51:15.197"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:15.175" endtime="20201030 15:51:15.197"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:15.204" endtime="20201030 15:51:15.488"></status>
</kw>
<msg timestamp="20201030 15:51:15.492" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019108069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019109278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:15.202" endtime="20201030 15:51:15.492"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:15.499" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019108069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019109278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:15.493" endtime="20201030 15:51:15.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:15.501" endtime="20201030 15:51:15.502"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:15.199" endtime="20201030 15:51:15.503"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:15.198" endtime="20201030 15:51:15.503"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:15.507" level="INFO">${RESULT} = [{'diff': 1.209000000002014e-06}, {'diff': 1.000000000001e-06}, {'diff': 1.000000000001e-06}, {'diff': 9.719999999983908e-07}, {'diff': 1.0139999999971006e-06}, {'diff': 1.000000000001e-06}, {'diff': ...</msg>
<status status="PASS" starttime="20201030 15:51:15.504" endtime="20201030 15:51:15.507"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:15.512" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.209000000002014e-06, 1.000000000001e-06, 1.000000000001e-06, 9.719999999983908e-07, 1.0139999999971006e-06, 1.000000000001e-06, 9.449999999987246e-07, 9.720000000018603e-07, 1.014000000000...</msg>
<status status="PASS" starttime="20201030 15:51:15.508" endtime="20201030 15:51:15.512"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:15.516" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:51:15.515" endtime="20201030 15:51:15.516"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:15.518" level="INFO">VALUE: [1.209000000002014e-06, 1.000000000001e-06, 1.000000000001e-06, 9.719999999983908e-07, 1.0139999999971006e-06, 1.000000000001e-06, 9.449999999987246e-07, 9.720000000018603e-07, 1.01400000000057e-06, 9.860000000014302e-07, 1.000000000001e-06, 1.000000000001e-06, 9.999999999975306e-07, 1.0270000000006663e-06, 1.0699999999988496e-06, 1.000000000001e-06, 1.000000000001e-06, 1.0699999999988496e-06, 1.000000000001e-06, 1.0699999999988496e-06, 9.870000000009038e-07, 1.000000000001e-06, 9.869999999974344e-07, 9.860000000014302e-07, 9.859999999979607e-07, 1.000000000001e-06, 9.870000000009038e-07, 1.0419999999997098e-06, 1.01400000000057e-06, 9.860000000014302e-07, 1.070000000002319e-06, 1.000000000001e-06, 9.860000000014302e-07, 1.000000000001e-06, 9.999999999975306e-07, 1.068999999999376e-06, 9.870000000009038e-07, 1.000000000001e-06, 9.43999999999251e-07, 9.719999999983908e-07, 9.59000000001764e-07, 9.720000000018603e-07, 9.860000000014302e-07, 1.000000000001e-06, 9.999999999975306e-07, 1.0559999999992797e-06, 9.860000000014302e-07, 1.0699999999988496e-06, 1.0139999999971006e-06, 9.999999999975306e-07]</msg>
<status status="PASS" starttime="20201030 15:51:15.517" endtime="20201030 15:51:15.519"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:15.513" endtime="20201030 15:51:15.519"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:15.523" endtime="20201030 15:51:15.542"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:15.521" endtime="20201030 15:51:15.543"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:15.520" endtime="20201030 15:51:15.544"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:15.173" endtime="20201030 15:51:15.544"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:15.173" endtime="20201030 15:51:15.544"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:15.552" endtime="20201030 15:51:15.562"></status>
</kw>
<msg timestamp="20201030 15:51:15.562" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:15.550" endtime="20201030 15:51:15.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:15.565" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:15.563" endtime="20201030 15:51:15.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:15.566" endtime="20201030 15:51:15.567"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:15.548" endtime="20201030 15:51:15.568"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:15.546" endtime="20201030 15:51:15.568"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:15.575" endtime="20201030 15:51:15.864"></status>
</kw>
<msg timestamp="20201030 15:51:15.867" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018863736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018864931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:15.573" endtime="20201030 15:51:15.867"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:15.875" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018863736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018864931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:15.868" endtime="20201030 15:51:15.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:15.876" endtime="20201030 15:51:15.878"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:15.571" endtime="20201030 15:51:15.878"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:15.569" endtime="20201030 15:51:15.879"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:15.883" level="INFO">${RESULT} = [{'diff': 1.1950000000024441e-06}, {'diff': 9.57999999998821e-07}, {'diff': 9.860000000014302e-07}, {'diff': 9.860000000014302e-07}, {'diff': 1.000000000001e-06}, {'diff': 9.999999999975306e-07}, {'di...</msg>
<status status="PASS" starttime="20201030 15:51:15.879" endtime="20201030 15:51:15.883"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:15.887" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.1950000000024441e-06, 9.57999999998821e-07, 9.860000000014302e-07, 9.860000000014302e-07, 1.000000000001e-06, 9.999999999975306e-07, 9.860000000014302e-07, 9.860000000014302e-07, 1.0140000...</msg>
<status status="PASS" starttime="20201030 15:51:15.884" endtime="20201030 15:51:15.887"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:15.891" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:51:15.890" endtime="20201030 15:51:15.891"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:15.893" level="INFO">VALUE: [1.1950000000024441e-06, 9.57999999998821e-07, 9.860000000014302e-07, 9.860000000014302e-07, 1.000000000001e-06, 9.999999999975306e-07, 9.860000000014302e-07, 9.860000000014302e-07, 1.01400000000057e-06, 1.054999999999806e-06, 1.000000000001e-06, 1.01400000000057e-06, 1.01400000000057e-06, 1.000000000001e-06, 9.999999999975306e-07, 9.860000000014302e-07, 9.860000000014302e-07, 9.57999999998821e-07, 9.999999999975306e-07, 1.0419999999997098e-06, 1.054999999999806e-06, 9.43999999999251e-07, 1.000000000001e-06, 1.000000000001e-06, 1.000000000001e-06, 9.860000000014302e-07, 9.999999999975306e-07, 1.01400000000057e-06, 1.0419999999997098e-06, 1.000000000001e-06, 9.999999999975306e-07, 1.054999999999806e-06, 1.000000000001e-06, 1.01400000000057e-06, 1.000000000001e-06, 1.000000000001e-06, 9.57999999998821e-07, 1.000000000001e-06, 9.450000000021941e-07, 9.57999999998821e-07, 9.999999999975306e-07, 1.01400000000057e-06, 1.0559999999992797e-06, 9.859999999979607e-07, 9.860000000014302e-07, 1.0419999999997098e-06, 1.000000000001e-06, 1.0139999999971006e-06, 1.000000000001e-06, 9.729999999978645e-07]</msg>
<status status="PASS" starttime="20201030 15:51:15.892" endtime="20201030 15:51:15.894"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:15.887" endtime="20201030 15:51:15.894"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:15.898" endtime="20201030 15:51:15.918"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:15.897" endtime="20201030 15:51:15.918"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:15.896" endtime="20201030 15:51:15.919"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:15.545" endtime="20201030 15:51:15.919"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:15.544" endtime="20201030 15:51:15.919"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:15.929" endtime="20201030 15:51:15.939"></status>
</kw>
<msg timestamp="20201030 15:51:15.940" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:15.927" endtime="20201030 15:51:15.940"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:15.943" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:15.941" endtime="20201030 15:51:15.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:15.948" endtime="20201030 15:51:15.950"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:15.924" endtime="20201030 15:51:15.951"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:15.921" endtime="20201030 15:51:15.951"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:15.958" endtime="20201030 15:51:16.243"></status>
</kw>
<msg timestamp="20201030 15:51:16.246" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020921681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020922875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:15.957" endtime="20201030 15:51:16.246"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:16.254" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020921681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020922875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:16.247" endtime="20201030 15:51:16.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:16.255" endtime="20201030 15:51:16.256"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:15.954" endtime="20201030 15:51:16.257"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:15.952" endtime="20201030 15:51:16.257"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:16.261" level="INFO">${RESULT} = [{'diff': 1.193999999999501e-06}, {'diff': 1.000000000001e-06}, {'diff': 1.000000000001e-06}, {'diff': 1.000000000001e-06}, {'diff': 1.02800000000014e-06}, {'diff': 1.01400000000057e-06}, {'diff': 9.9...</msg>
<status status="PASS" starttime="20201030 15:51:16.258" endtime="20201030 15:51:16.262"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:16.265" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.193999999999501e-06, 1.000000000001e-06, 1.000000000001e-06, 1.000000000001e-06, 1.02800000000014e-06, 1.01400000000057e-06, 9.999999999975306e-07, 9.859999999979607e-07, 9.860000000014302...</msg>
<status status="PASS" starttime="20201030 15:51:16.262" endtime="20201030 15:51:16.266"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:16.269" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:51:16.268" endtime="20201030 15:51:16.270"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:16.272" level="INFO">VALUE: [1.193999999999501e-06, 1.000000000001e-06, 1.000000000001e-06, 1.000000000001e-06, 1.02800000000014e-06, 1.01400000000057e-06, 9.999999999975306e-07, 9.859999999979607e-07, 9.860000000014302e-07, 9.589999999982945e-07, 1.000000000001e-06, 1.000000000001e-06, 1.000000000001e-06, 1.000000000001e-06, 1.01400000000057e-06, 9.860000000014302e-07, 9.870000000009038e-07, 9.999999999975306e-07, 9.719999999983908e-07, 1.000000000001e-06, 9.860000000014302e-07, 9.999999999975306e-07, 1.000000000001e-06, 1.000000000001e-06, 9.57999999998821e-07, 9.999999999975306e-07, 9.999999999975306e-07, 1.01400000000057e-06, 1.000000000001e-06, 1.01400000000057e-06, 1.02800000000014e-06, 1.01400000000057e-06, 1.000000000001e-06, 9.720000000018603e-07, 1.000000000001e-06, 1.000000000001e-06, 9.999999999975306e-07, 9.999999999975306e-07, 9.73000000001334e-07, 1.01400000000057e-06, 1.02800000000014e-06, 1.0559999999992797e-06, 9.860000000014302e-07, 1.0139999999971006e-06, 1.02800000000014e-06, 9.860000000014302e-07, 9.870000000009038e-07, 9.57999999998821e-07, 1.000000000001e-06, 1.000000000001e-06]</msg>
<status status="PASS" starttime="20201030 15:51:16.270" endtime="20201030 15:51:16.273"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:16.266" endtime="20201030 15:51:16.274"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:16.277" endtime="20201030 15:51:16.297"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:16.276" endtime="20201030 15:51:16.297"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:16.275" endtime="20201030 15:51:16.298"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:15.920" endtime="20201030 15:51:16.298"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:15.920" endtime="20201030 15:51:16.298"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:16.306" endtime="20201030 15:51:16.316"></status>
</kw>
<msg timestamp="20201030 15:51:16.317" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:16.304" endtime="20201030 15:51:16.317"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:16.319" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:16.318" endtime="20201030 15:51:16.319"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:16.320" endtime="20201030 15:51:16.322"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:16.302" endtime="20201030 15:51:16.322"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:16.300" endtime="20201030 15:51:16.323"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:16.329" endtime="20201030 15:51:16.614"></status>
</kw>
<msg timestamp="20201030 15:51:16.617" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018782125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018783319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:16.327" endtime="20201030 15:51:16.617"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:16.625" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018782125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018783319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:16.618" endtime="20201030 15:51:16.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:16.626" endtime="20201030 15:51:16.628"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:16.325" endtime="20201030 15:51:16.628"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:16.323" endtime="20201030 15:51:16.629"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:16.633" level="INFO">${RESULT} = [{'diff': 1.193999999999501e-06}, {'diff': 9.57999999998821e-07}, {'diff': 9.859999999979607e-07}, {'diff': 1.070000000002319e-06}, {'diff': 9.57999999998821e-07}, {'diff': 1.000000000001e-06}, {'diff...</msg>
<status status="PASS" starttime="20201030 15:51:16.629" endtime="20201030 15:51:16.633"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:16.637" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.193999999999501e-06, 9.57999999998821e-07, 9.859999999979607e-07, 1.070000000002319e-06, 9.57999999998821e-07, 1.000000000001e-06, 1.0130000000010964e-06, 9.860000000014302e-07, 1.00000000...</msg>
<status status="PASS" starttime="20201030 15:51:16.634" endtime="20201030 15:51:16.638"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:16.642" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:51:16.641" endtime="20201030 15:51:16.642"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:16.644" level="INFO">VALUE: [1.193999999999501e-06, 9.57999999998821e-07, 9.859999999979607e-07, 1.070000000002319e-06, 9.57999999998821e-07, 1.000000000001e-06, 1.0130000000010964e-06, 9.860000000014302e-07, 1.000000000001e-06, 9.309999999991547e-07, 1.01400000000057e-06, 9.999999999975306e-07, 9.859999999979607e-07, 1.01400000000057e-06, 1.000000000001e-06, 9.859999999979607e-07, 1.000000000001e-06, 9.57999999998821e-07, 9.999999999975306e-07, 9.999999999975306e-07, 9.859999999979607e-07, 9.719999999983908e-07, 1.000000000001e-06, 1.0419999999997098e-06, 9.860000000014302e-07, 1.01400000000057e-06, 1.000000000001e-06, 1.01400000000057e-06, 9.73000000001334e-07, 9.999999999975306e-07, 1.000000000001e-06, 9.999999999975306e-07, 9.859999999979607e-07, 9.859999999979607e-07, 9.859999999979607e-07, 9.999999999975306e-07, 1.0130000000010964e-06, 9.999999999975306e-07, 1.000000000001e-06, 1.012999999997627e-06, 9.859999999979607e-07, 9.59000000001764e-07, 1.01400000000057e-06, 9.999999999975306e-07, 1.054999999999806e-06, 1.02800000000014e-06, 9.860000000014302e-07, 1.070000000002319e-06, 1.000000000001e-06, 1.000000000001e-06]</msg>
<status status="PASS" starttime="20201030 15:51:16.643" endtime="20201030 15:51:16.645"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:16.638" endtime="20201030 15:51:16.645"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:16.649" endtime="20201030 15:51:16.668"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:16.647" endtime="20201030 15:51:16.669"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:16.646" endtime="20201030 15:51:16.669"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:16.299" endtime="20201030 15:51:16.669"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:16.298" endtime="20201030 15:51:16.670"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:16.677" endtime="20201030 15:51:16.687"></status>
</kw>
<msg timestamp="20201030 15:51:16.688" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:16.676" endtime="20201030 15:51:16.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:16.690" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:16.689" endtime="20201030 15:51:16.691"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:16.691" endtime="20201030 15:51:16.693"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:16.673" endtime="20201030 15:51:16.693"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:16.672" endtime="20201030 15:51:16.694"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:16.700" endtime="20201030 15:51:16.986"></status>
</kw>
<msg timestamp="20201030 15:51:16.989" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018434208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018435361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:16.699" endtime="20201030 15:51:16.989"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:16.997" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018434208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018435361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:16.990" endtime="20201030 15:51:16.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:16.998" endtime="20201030 15:51:17.000"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:16.696" endtime="20201030 15:51:17.001"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:16.694" endtime="20201030 15:51:17.001"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:17.005" level="INFO">${RESULT} = [{'diff': 1.153000000000265e-06}, {'diff': 9.999999999975306e-07}, {'diff': 1.0559999999992797e-06}, {'diff': 9.720000000018603e-07}, {'diff': 9.720000000018603e-07}, {'diff': 1.01400000000057e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:51:17.002" endtime="20201030 15:51:17.006"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:17.009" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.153000000000265e-06, 9.999999999975306e-07, 1.0559999999992797e-06, 9.720000000018603e-07, 9.720000000018603e-07, 1.01400000000057e-06, 1.054999999999806e-06, 1.02800000000014e-06, 1.02800...</msg>
<status status="PASS" starttime="20201030 15:51:17.006" endtime="20201030 15:51:17.010"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:17.014" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:51:17.013" endtime="20201030 15:51:17.014"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:17.016" level="INFO">VALUE: [1.153000000000265e-06, 9.999999999975306e-07, 1.0559999999992797e-06, 9.720000000018603e-07, 9.720000000018603e-07, 1.01400000000057e-06, 1.054999999999806e-06, 1.02800000000014e-06, 1.02800000000014e-06, 9.860000000014302e-07, 1.01400000000057e-06, 9.999999999975306e-07, 9.860000000014302e-07, 9.719999999983908e-07, 1.0419999999997098e-06, 1.000000000001e-06, 9.859999999979607e-07, 9.860000000014302e-07, 1.000000000001e-06, 1.0269999999971968e-06, 9.859999999979607e-07, 1.054999999999806e-06, 1.000000000001e-06, 1.000000000001e-06, 1.000000000001e-06, 9.729999999978645e-07, 1.000000000001e-06, 9.860000000014302e-07, 9.73000000001334e-07, 9.859999999979607e-07, 9.859999999979607e-07, 9.870000000009038e-07, 1.01400000000057e-06, 9.999999999975306e-07, 9.720000000018603e-07, 9.999999999975306e-07, 1.000000000001e-06, 1.01400000000057e-06, 1.0130000000010964e-06, 1.000000000001e-06, 1.000000000001e-06, 1.000000000001e-06, 1.000000000001e-06, 9.719999999983908e-07, 9.999999999975306e-07, 1.01400000000057e-06, 9.310000000026242e-07, 1.000000000001e-06, 9.999999999975306e-07, 1.000000000001e-06]</msg>
<status status="PASS" starttime="20201030 15:51:17.015" endtime="20201030 15:51:17.017"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:17.010" endtime="20201030 15:51:17.017"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:17.021" endtime="20201030 15:51:17.040"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:17.019" endtime="20201030 15:51:17.041"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:17.018" endtime="20201030 15:51:17.041"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:16.670" endtime="20201030 15:51:17.041"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:16.670" endtime="20201030 15:51:17.042"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:17.049" endtime="20201030 15:51:17.059"></status>
</kw>
<msg timestamp="20201030 15:51:17.060" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:17.048" endtime="20201030 15:51:17.060"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:17.062" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:17.061" endtime="20201030 15:51:17.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:17.063" endtime="20201030 15:51:17.066"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:17.045" endtime="20201030 15:51:17.066"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:17.044" endtime="20201030 15:51:17.067"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:17.073" endtime="20201030 15:51:17.359"></status>
</kw>
<msg timestamp="20201030 15:51:17.362" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018428472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018429653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:17.072" endtime="20201030 15:51:17.362"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:17.370" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018428472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018429653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:17.363" endtime="20201030 15:51:17.371"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:17.371" endtime="20201030 15:51:17.373"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:17.069" endtime="20201030 15:51:17.374"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:17.067" endtime="20201030 15:51:17.374"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:17.378" level="INFO">${RESULT} = [{'diff': 1.1809999999994047e-06}, {'diff': 1.000000000001e-06}, {'diff': 1.02800000000014e-06}, {'diff': 1.0139999999971006e-06}, {'diff': 9.860000000014302e-07}, {'diff': 1.000000000001e-06}, {'diff...</msg>
<status status="PASS" starttime="20201030 15:51:17.375" endtime="20201030 15:51:17.378"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:17.382" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.1809999999994047e-06, 1.000000000001e-06, 1.02800000000014e-06, 1.0139999999971006e-06, 9.860000000014302e-07, 1.000000000001e-06, 9.999999999975306e-07, 1.000000000001e-06, 1.014000000000...</msg>
<status status="PASS" starttime="20201030 15:51:17.379" endtime="20201030 15:51:17.382"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:17.386" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:51:17.385" endtime="20201030 15:51:17.386"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:17.388" level="INFO">VALUE: [1.1809999999994047e-06, 1.000000000001e-06, 1.02800000000014e-06, 1.0139999999971006e-06, 9.860000000014302e-07, 1.000000000001e-06, 9.999999999975306e-07, 1.000000000001e-06, 1.01400000000057e-06, 1.01400000000057e-06, 9.860000000014302e-07, 1.000000000001e-06, 1.000000000001e-06, 1.01400000000057e-06, 9.999999999975306e-07, 9.719999999983908e-07, 1.000000000001e-06, 9.999999999975306e-07, 9.999999999975306e-07, 1.068999999999376e-06, 1.01400000000057e-06, 1.000000000001e-06, 1.000000000001e-06, 1.01400000000057e-06, 9.860000000014302e-07, 1.0270000000006663e-06, 1.000000000001e-06, 9.720000000018603e-07, 9.43999999999251e-07, 1.000000000001e-06, 9.859999999979607e-07, 9.999999999975306e-07, 9.999999999975306e-07, 1.000000000001e-06, 9.999999999975306e-07, 9.57999999998821e-07, 9.859999999979607e-07, 1.000000000001e-06, 1.0559999999992797e-06, 1.000000000001e-06, 9.869999999974344e-07, 1.000000000001e-06, 9.859999999979607e-07, 9.57999999998821e-07, 9.860000000014302e-07, 1.000000000001e-06, 1.000000000001e-06, 9.720000000018603e-07, 1.01400000000057e-06, 9.999999999975306e-07]</msg>
<status status="PASS" starttime="20201030 15:51:17.387" endtime="20201030 15:51:17.390"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:17.383" endtime="20201030 15:51:17.391"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:17.394" endtime="20201030 15:51:17.414"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:17.393" endtime="20201030 15:51:17.414"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:17.392" endtime="20201030 15:51:17.415"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:17.042" endtime="20201030 15:51:17.415"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:17.042" endtime="20201030 15:51:17.415"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:17.423" endtime="20201030 15:51:17.433"></status>
</kw>
<msg timestamp="20201030 15:51:17.433" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:17.421" endtime="20201030 15:51:17.434"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:17.436" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:17.434" endtime="20201030 15:51:17.436"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:17.437" endtime="20201030 15:51:17.438"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:17.419" endtime="20201030 15:51:17.439"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:17.417" endtime="20201030 15:51:17.439"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:17.446" endtime="20201030 15:51:17.732"></status>
</kw>
<msg timestamp="20201030 15:51:17.735" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018570403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018571583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:17.444" endtime="20201030 15:51:17.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:17.744" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018570403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018571583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:17.736" endtime="20201030 15:51:17.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:17.745" endtime="20201030 15:51:17.747"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:17.442" endtime="20201030 15:51:17.747"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:17.440" endtime="20201030 15:51:17.747"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:17.751" level="INFO">${RESULT} = [{'diff': 1.179999999999931e-06}, {'diff': 9.860000000014302e-07}, {'diff': 1.000000000001e-06}, {'diff': 1.0419999999997098e-06}, {'diff': 9.999999999975306e-07}, {'diff': 1.01400000000057e-06}, {'di...</msg>
<status status="PASS" starttime="20201030 15:51:17.748" endtime="20201030 15:51:17.752"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:17.756" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.179999999999931e-06, 9.860000000014302e-07, 1.000000000001e-06, 1.0419999999997098e-06, 9.999999999975306e-07, 1.01400000000057e-06, 1.000000000001e-06, 1.000000000001e-06, 1.0419999999997...</msg>
<status status="PASS" starttime="20201030 15:51:17.752" endtime="20201030 15:51:17.756"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:17.761" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:51:17.760" endtime="20201030 15:51:17.761"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:17.763" level="INFO">VALUE: [1.179999999999931e-06, 9.860000000014302e-07, 1.000000000001e-06, 1.0419999999997098e-06, 9.999999999975306e-07, 1.01400000000057e-06, 1.000000000001e-06, 1.000000000001e-06, 1.0419999999997098e-06, 1.000000000001e-06, 9.999999999975306e-07, 1.01400000000057e-06, 1.000000000001e-06, 9.860000000014302e-07, 1.000000000001e-06, 1.0419999999997098e-06, 1.000000000001e-06, 1.000000000001e-06, 1.054999999999806e-06, 1.000000000001e-06, 1.02800000000014e-06, 1.000000000001e-06, 1.01400000000057e-06, 9.860000000014302e-07, 1.0139999999971006e-06, 9.999999999975306e-07, 1.000000000001e-06, 9.720000000018603e-07, 9.860000000014302e-07, 1.0559999999992797e-06, 9.580000000022904e-07, 1.000000000001e-06, 1.0139999999971006e-06, 9.859999999979607e-07, 1.082999999998946e-06, 1.01400000000057e-06, 1.000000000001e-06, 1.0410000000002362e-06, 1.000000000001e-06, 9.43999999999251e-07, 9.57999999998821e-07, 1.000000000001e-06, 1.000000000001e-06, 9.719999999983908e-07, 9.860000000014302e-07, 9.999999999975306e-07, 9.860000000014302e-07, 1.000000000001e-06, 1.000000000001e-06, 9.999999999975306e-07]</msg>
<status status="PASS" starttime="20201030 15:51:17.762" endtime="20201030 15:51:17.764"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:17.757" endtime="20201030 15:51:17.764"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:17.768" endtime="20201030 15:51:17.787"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:17.766" endtime="20201030 15:51:17.788"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:17.765" endtime="20201030 15:51:17.788"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:17.416" endtime="20201030 15:51:17.788"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:17.415" endtime="20201030 15:51:17.789"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:10.266" endtime="20201030 15:51:17.789"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:51:10.198" endtime="20201030 15:51:17.789" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:17.796" endtime="20201030 15:51:17.817"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:17.795" endtime="20201030 15:51:17.818"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:17.845" endtime="20201030 15:51:17.863"></status>
</kw>
<msg timestamp="20201030 15:51:17.864" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:17.842" endtime="20201030 15:51:17.864"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:17.869" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:17.866" endtime="20201030 15:51:17.869"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:51:17.876" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:51:17.871" endtime="20201030 15:51:17.877"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:17.837" endtime="20201030 15:51:17.878"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:17.832" endtime="20201030 15:51:17.880"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:17.829" endtime="20201030 15:51:17.880"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:51:17.888" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:51:17.886" endtime="20201030 15:51:17.889"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:17.882" endtime="20201030 15:51:17.889"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:17.827" endtime="20201030 15:51:17.889"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:17.826" endtime="20201030 15:51:17.890"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:17.892" endtime="20201030 15:51:17.895"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:17.823" endtime="20201030 15:51:17.896"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:17.820" endtime="20201030 15:51:17.897"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:17.793" endtime="20201030 15:51:17.897"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:17.908" endtime="20201030 15:51:17.919"></status>
</kw>
<msg timestamp="20201030 15:51:17.920" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:17.907" endtime="20201030 15:51:17.920"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:17.922" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:17.921" endtime="20201030 15:51:17.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:17.924" endtime="20201030 15:51:17.925"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:17.904" endtime="20201030 15:51:17.926"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:17.903" endtime="20201030 15:51:17.926"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:17.933" endtime="20201030 15:51:18.227"></status>
</kw>
<msg timestamp="20201030 15:51:18.230" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.103289736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.103301528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:17.931" endtime="20201030 15:51:18.230"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:18.238" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.103289736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.103301528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:18.231" endtime="20201030 15:51:18.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:18.239" endtime="20201030 15:51:18.241"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:17.929" endtime="20201030 15:51:18.241"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:17.927" endtime="20201030 15:51:18.242"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:18.246" level="INFO">${RESULT} = [{'diff': 1.179200000001046e-05}, {'diff': 1.0291999999995083e-05}, {'diff': 1.0195000000004506e-05}, {'diff': 1.0222000000004172e-05}, {'diff': 1.0221999999990294e-05}, {'diff': 1.0207999999997663e-0...</msg>
<status status="PASS" starttime="20201030 15:51:18.243" endtime="20201030 15:51:18.246"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:18.251" level="INFO">${OVERHEAD} = {'diff': [1.179200000001046e-05, 1.0291999999995083e-05, 1.0195000000004506e-05, 1.0222000000004172e-05, 1.0221999999990294e-05, 1.0207999999997663e-05, 1.0249999999989434e-05, 1.0221999999990294e-05,...</msg>
<status status="PASS" starttime="20201030 15:51:18.247" endtime="20201030 15:51:18.251"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:18.255" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:18.254" endtime="20201030 15:51:18.255"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:18.257" level="INFO">VALUE: [1.179200000001046e-05, 1.0291999999995083e-05, 1.0195000000004506e-05, 1.0222000000004172e-05, 1.0221999999990294e-05, 1.0207999999997663e-05, 1.0249999999989434e-05, 1.0221999999990294e-05, 1.0208999999997137e-05, 1.0194000000005032e-05, 1.0167000000005366e-05, 1.0249999999989434e-05, 1.0207999999997663e-05, 1.0166000000005893e-05, 1.0235999999996803e-05, 1.0207999999997663e-05, 1.0221999999990294e-05, 1.0208999999997137e-05, 1.0222000000004172e-05, 1.0250000000003312e-05, 1.0222000000004172e-05, 1.0194000000005032e-05, 1.0222000000004172e-05, 1.0207999999997663e-05, 1.0222000000004172e-05, 1.0221999999990294e-05, 1.0222000000004172e-05, 1.0250000000003312e-05, 1.0207999999997663e-05, 1.0222000000004172e-05, 1.0207999999997663e-05, 1.0236000000010681e-05, 1.0222000000004172e-05, 1.0263999999995943e-05, 1.0223000000003646e-05, 1.0263999999995943e-05, 1.0223000000003646e-05, 1.0208999999997137e-05, 1.0222000000004172e-05, 1.0165999999992015e-05, 1.0222000000004172e-05, 1.0208999999997137e-05, 1.0235999999996803e-05, 1.0222999999989768e-05, 1.0222000000004172e-05, 1.0207999999997663e-05, 1.0193999999991155e-05, 1.0222000000004172e-05, 1.0166999999991488e-05, 1.0221999999990294e-05]</msg>
<status status="PASS" starttime="20201030 15:51:18.256" endtime="20201030 15:51:18.258"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:18.252" endtime="20201030 15:51:18.258"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:18.262" endtime="20201030 15:51:18.281"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:18.260" endtime="20201030 15:51:18.282"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:18.259" endtime="20201030 15:51:18.282"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:17.900" endtime="20201030 15:51:18.282"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:17.899" endtime="20201030 15:51:18.282"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:18.290" endtime="20201030 15:51:18.301"></status>
</kw>
<msg timestamp="20201030 15:51:18.302" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:18.288" endtime="20201030 15:51:18.302"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:18.304" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:18.303" endtime="20201030 15:51:18.304"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:18.305" endtime="20201030 15:51:18.307"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:18.286" endtime="20201030 15:51:18.307"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:18.284" endtime="20201030 15:51:18.308"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:18.314" endtime="20201030 15:51:18.600"></status>
</kw>
<msg timestamp="20201030 15:51:18.603" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019071597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019083375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:18.313" endtime="20201030 15:51:18.603"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:18.612" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019071597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019083375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:18.604" endtime="20201030 15:51:18.613"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:18.614" endtime="20201030 15:51:18.618"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:18.310" endtime="20201030 15:51:18.619"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:18.308" endtime="20201030 15:51:18.620"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:18.628" level="INFO">${RESULT} = [{'diff': 1.1778000000000483e-05}, {'diff': 1.0276999999999509e-05}, {'diff': 1.0222000000000703e-05}, {'diff': 1.0222000000000703e-05}, {'diff': 1.0222000000000703e-05}, {'diff': 1.0208999999997137e-...</msg>
<status status="PASS" starttime="20201030 15:51:18.621" endtime="20201030 15:51:18.628"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:18.637" level="INFO">${OVERHEAD} = {'diff': [1.1778000000000483e-05, 1.0276999999999509e-05, 1.0222000000000703e-05, 1.0222000000000703e-05, 1.0222000000000703e-05, 1.0208999999997137e-05, 1.0223000000000176e-05, 1.0222000000000703e-05...</msg>
<status status="PASS" starttime="20201030 15:51:18.630" endtime="20201030 15:51:18.637"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:18.645" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:18.643" endtime="20201030 15:51:18.646"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:18.650" level="INFO">VALUE: [1.1778000000000483e-05, 1.0276999999999509e-05, 1.0222000000000703e-05, 1.0222000000000703e-05, 1.0222000000000703e-05, 1.0208999999997137e-05, 1.0223000000000176e-05, 1.0222000000000703e-05, 1.0209000000000606e-05, 1.0221999999997233e-05, 1.0167000000001897e-05, 1.0209000000000606e-05, 1.0222000000000703e-05, 1.0181000000001467e-05, 1.0278000000002452e-05, 1.0235999999996803e-05, 1.0208999999997137e-05, 1.0209000000000606e-05, 1.0222000000000703e-05, 1.0236000000000273e-05, 1.0179999999998524e-05, 1.0222000000000703e-05, 1.0222000000000703e-05, 1.0222000000000703e-05, 1.0236000000000273e-05, 1.0222000000000703e-05, 1.0263999999999412e-05, 1.0223000000000176e-05, 1.0151999999999384e-05, 1.0236000000000273e-05, 1.0237000000003216e-05, 1.0222000000000703e-05, 1.0223000000000176e-05, 1.0277999999998982e-05, 1.0222000000000703e-05, 1.0277999999998982e-05, 1.0207999999997663e-05, 1.0222000000000703e-05, 1.0222000000000703e-05, 1.0222000000000703e-05, 1.0181000000001467e-05, 1.0222000000000703e-05, 1.0222000000000703e-05, 1.0222000000000703e-05, 1.0235999999996803e-05, 1.0249999999999843e-05, 1.0222000000000703e-05, 1.0207999999997663e-05, 1.0222000000000703e-05, 1.0223000000000176e-05]</msg>
<status status="PASS" starttime="20201030 15:51:18.647" endtime="20201030 15:51:18.651"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:18.638" endtime="20201030 15:51:18.652"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:18.659" endtime="20201030 15:51:18.681"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:18.656" endtime="20201030 15:51:18.682"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:18.654" endtime="20201030 15:51:18.683"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:18.283" endtime="20201030 15:51:18.684"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:18.283" endtime="20201030 15:51:18.684"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:18.709" endtime="20201030 15:51:18.722"></status>
</kw>
<msg timestamp="20201030 15:51:18.723" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:18.706" endtime="20201030 15:51:18.723"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:18.725" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:18.724" endtime="20201030 15:51:18.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:18.726" endtime="20201030 15:51:18.728"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:18.692" endtime="20201030 15:51:18.728"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:18.688" endtime="20201030 15:51:18.728"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:18.735" endtime="20201030 15:51:19.022"></status>
</kw>
<msg timestamp="20201030 15:51:19.025" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041913042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041924847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:18.733" endtime="20201030 15:51:19.025"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:19.033" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041913042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041924847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:19.026" endtime="20201030 15:51:19.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:19.034" endtime="20201030 15:51:19.036"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:18.731" endtime="20201030 15:51:19.037"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:18.729" endtime="20201030 15:51:19.037"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:19.041" level="INFO">${RESULT} = [{'diff': 1.1805000000003618e-05}, {'diff': 1.0250000000003312e-05}, {'diff': 1.0222000000004172e-05}, {'diff': 1.0165999999998954e-05}, {'diff': 1.0249999999996373e-05}, {'diff': 1.0207999999997663e-...</msg>
<status status="PASS" starttime="20201030 15:51:19.038" endtime="20201030 15:51:19.041"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:19.045" level="INFO">${OVERHEAD} = {'diff': [1.1805000000003618e-05, 1.0250000000003312e-05, 1.0222000000004172e-05, 1.0165999999998954e-05, 1.0249999999996373e-05, 1.0207999999997663e-05, 1.0235999999996803e-05, 1.0208000000004602e-05...</msg>
<status status="PASS" starttime="20201030 15:51:19.042" endtime="20201030 15:51:19.045"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:19.049" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:19.048" endtime="20201030 15:51:19.049"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:19.052" level="INFO">VALUE: [1.1805000000003618e-05, 1.0250000000003312e-05, 1.0222000000004172e-05, 1.0165999999998954e-05, 1.0249999999996373e-05, 1.0207999999997663e-05, 1.0235999999996803e-05, 1.0208000000004602e-05, 1.0235999999996803e-05, 1.0221999999997233e-05, 1.0235999999996803e-05, 1.0180999999997997e-05, 1.0221999999997233e-05, 1.0222999999996707e-05, 1.0237000000003216e-05, 1.0194999999997567e-05, 1.0209000000004076e-05, 1.0277000000002978e-05, 1.0223000000003646e-05, 1.0291999999995083e-05, 1.0195000000004506e-05, 1.0223000000003646e-05, 1.0208999999997137e-05, 1.0207999999997663e-05, 1.0193999999998093e-05, 1.0264000000002882e-05, 1.0193999999998093e-05, 1.0249999999996373e-05, 1.0222000000004172e-05, 1.0179999999998524e-05, 1.0221999999997233e-05, 1.0235999999996803e-05, 1.0208000000004602e-05, 1.0222999999996707e-05, 1.0208999999997137e-05, 1.0209000000004076e-05, 1.0221999999997233e-05, 1.0166999999998427e-05, 1.0236000000003742e-05, 1.0236000000003742e-05, 1.0209000000004076e-05, 1.0235999999996803e-05, 1.0209000000004076e-05, 1.0194999999997567e-05, 1.0223000000003646e-05, 1.0221999999997233e-05, 1.0221999999997233e-05, 1.0235999999996803e-05, 1.0207999999997663e-05, 1.0221999999997233e-05]</msg>
<status status="PASS" starttime="20201030 15:51:19.050" endtime="20201030 15:51:19.055"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:19.046" endtime="20201030 15:51:19.056"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:19.059" endtime="20201030 15:51:19.079"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:19.058" endtime="20201030 15:51:19.079"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:19.057" endtime="20201030 15:51:19.079"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:18.686" endtime="20201030 15:51:19.080"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:18.685" endtime="20201030 15:51:19.080"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:19.088" endtime="20201030 15:51:19.099"></status>
</kw>
<msg timestamp="20201030 15:51:19.099" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:19.086" endtime="20201030 15:51:19.099"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:19.102" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:19.100" endtime="20201030 15:51:19.102"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:19.103" endtime="20201030 15:51:19.104"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:19.084" endtime="20201030 15:51:19.105"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:19.082" endtime="20201030 15:51:19.105"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:19.112" endtime="20201030 15:51:19.398"></status>
</kw>
<msg timestamp="20201030 15:51:19.401" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019519681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019531458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:19.110" endtime="20201030 15:51:19.402"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:19.409" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019519681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019531458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:19.403" endtime="20201030 15:51:19.410"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:19.411" endtime="20201030 15:51:19.412"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:19.108" endtime="20201030 15:51:19.413"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:19.106" endtime="20201030 15:51:19.413"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:19.417" level="INFO">${RESULT} = [{'diff': 1.1777000000001009e-05}, {'diff': 1.0277999999998982e-05}, {'diff': 1.0180999999997997e-05}, {'diff': 1.0236000000000273e-05}, {'diff': 1.0208000000001133e-05}, {'diff': 1.0249999999999843e-...</msg>
<status status="PASS" starttime="20201030 15:51:19.414" endtime="20201030 15:51:19.417"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:19.423" level="INFO">${OVERHEAD} = {'diff': [1.1777000000001009e-05, 1.0277999999998982e-05, 1.0180999999997997e-05, 1.0236000000000273e-05, 1.0208000000001133e-05, 1.0249999999999843e-05, 1.0222000000000703e-05, 1.0208000000001133e-05...</msg>
<status status="PASS" starttime="20201030 15:51:19.418" endtime="20201030 15:51:19.424"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:19.432" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:19.430" endtime="20201030 15:51:19.433"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:19.437" level="INFO">VALUE: [1.1777000000001009e-05, 1.0277999999998982e-05, 1.0180999999997997e-05, 1.0236000000000273e-05, 1.0208000000001133e-05, 1.0249999999999843e-05, 1.0222000000000703e-05, 1.0208000000001133e-05, 1.0223000000000176e-05, 1.0207999999997663e-05, 1.0223000000000176e-05, 1.0222000000000703e-05, 1.0222000000000703e-05, 1.0236000000000273e-05, 1.0222000000000703e-05, 1.0236000000000273e-05, 1.0221999999997233e-05, 1.0222000000000703e-05, 1.0222000000000703e-05, 1.0236000000000273e-05, 1.0222000000000703e-05, 1.0194999999997567e-05, 1.0180000000001993e-05, 1.0223000000000176e-05, 1.0153000000002327e-05, 1.0222000000000703e-05, 1.0223000000000176e-05, 1.0222000000000703e-05, 1.0222000000000703e-05, 1.0179999999998524e-05, 1.0222000000000703e-05, 1.0221999999997233e-05, 1.0221999999997233e-05, 1.0223000000000176e-05, 1.0222000000000703e-05, 1.0193999999998093e-05, 1.0208000000001133e-05, 1.0208000000001133e-05, 1.0222000000000703e-05, 1.0221999999997233e-05, 1.0208000000001133e-05, 1.0223000000000176e-05, 1.0208000000001133e-05, 1.0180999999997997e-05, 1.0209000000000606e-05, 1.0222000000000703e-05, 1.0208000000001133e-05, 1.0222999999996707e-05, 1.0193999999998093e-05, 1.0195000000001037e-05]</msg>
<status status="PASS" starttime="20201030 15:51:19.434" endtime="20201030 15:51:19.438"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:19.425" endtime="20201030 15:51:19.439"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:19.447" endtime="20201030 15:51:19.468"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:19.444" endtime="20201030 15:51:19.470"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:19.441" endtime="20201030 15:51:19.470"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:19.081" endtime="20201030 15:51:19.471"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:19.081" endtime="20201030 15:51:19.471"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:19.489" endtime="20201030 15:51:19.504"></status>
</kw>
<msg timestamp="20201030 15:51:19.505" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:19.485" endtime="20201030 15:51:19.505"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:19.511" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:19.507" endtime="20201030 15:51:19.511"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:19.513" endtime="20201030 15:51:19.517"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:19.479" endtime="20201030 15:51:19.519"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:19.476" endtime="20201030 15:51:19.520"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:19.529" endtime="20201030 15:51:19.817"></status>
</kw>
<msg timestamp="20201030 15:51:19.820" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034395931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034407708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:19.527" endtime="20201030 15:51:19.820"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:19.828" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034395931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034407708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:19.821" endtime="20201030 15:51:19.829"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:19.830" endtime="20201030 15:51:19.832"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:19.524" endtime="20201030 15:51:19.833"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:19.521" endtime="20201030 15:51:19.833"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:19.837" level="INFO">${RESULT} = [{'diff': 1.1777000000004478e-05}, {'diff': 1.0278000000002452e-05}, {'diff': 1.0221999999997233e-05}, {'diff': 1.0250000000003312e-05}, {'diff': 1.0222000000004172e-05}, {'diff': 1.0235999999996803e-...</msg>
<status status="PASS" starttime="20201030 15:51:19.834" endtime="20201030 15:51:19.837"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:19.841" level="INFO">${OVERHEAD} = {'diff': [1.1777000000004478e-05, 1.0278000000002452e-05, 1.0221999999997233e-05, 1.0250000000003312e-05, 1.0222000000004172e-05, 1.0235999999996803e-05, 1.0208000000004602e-05, 1.0208000000004602e-05...</msg>
<status status="PASS" starttime="20201030 15:51:19.838" endtime="20201030 15:51:19.841"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:19.845" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:19.844" endtime="20201030 15:51:19.845"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:19.848" level="INFO">VALUE: [1.1777000000004478e-05, 1.0278000000002452e-05, 1.0221999999997233e-05, 1.0250000000003312e-05, 1.0222000000004172e-05, 1.0235999999996803e-05, 1.0208000000004602e-05, 1.0208000000004602e-05, 1.0236000000003742e-05, 1.0207999999997663e-05, 1.0222000000004172e-05, 1.0235999999996803e-05, 1.0249999999996373e-05, 1.0222000000004172e-05, 1.0195000000004506e-05, 1.0222000000004172e-05, 1.0222000000004172e-05, 1.0222000000004172e-05, 1.0221999999997233e-05, 1.0194999999997567e-05, 1.0208000000004602e-05, 1.0208000000004602e-05, 1.0236000000003742e-05, 1.0221999999997233e-05, 1.0193999999998093e-05, 1.0222000000004172e-05, 1.0222999999996707e-05, 1.0207999999997663e-05, 1.0221999999997233e-05, 1.0236000000003742e-05, 1.0222000000004172e-05, 1.0235999999996803e-05, 1.0207999999997663e-05, 1.0235999999996803e-05, 1.0222000000004172e-05, 1.0221999999997233e-05, 1.0208000000004602e-05, 1.0222999999996707e-05, 1.0207999999997663e-05, 1.0235999999996803e-05, 1.0250000000003312e-05, 1.0221999999997233e-05, 1.0221999999997233e-05, 1.0236000000003742e-05, 1.0193999999998093e-05, 1.0222999999996707e-05, 1.0221999999997233e-05, 1.0222000000004172e-05, 1.0207999999997663e-05, 1.0221999999997233e-05]</msg>
<status status="PASS" starttime="20201030 15:51:19.846" endtime="20201030 15:51:19.848"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:19.842" endtime="20201030 15:51:19.849"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:19.852" endtime="20201030 15:51:19.872"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:19.851" endtime="20201030 15:51:19.872"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:19.850" endtime="20201030 15:51:19.873"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:19.473" endtime="20201030 15:51:19.873"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:19.472" endtime="20201030 15:51:19.873"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:19.881" endtime="20201030 15:51:19.892"></status>
</kw>
<msg timestamp="20201030 15:51:19.892" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:19.879" endtime="20201030 15:51:19.892"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:19.895" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:19.893" endtime="20201030 15:51:19.895"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:19.896" endtime="20201030 15:51:19.903"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:19.877" endtime="20201030 15:51:19.903"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:19.875" endtime="20201030 15:51:19.904"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:19.913" endtime="20201030 15:51:20.200"></status>
</kw>
<msg timestamp="20201030 15:51:20.203" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019186736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0191985, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:51:19.911" endtime="20201030 15:51:20.203"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:20.211" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019186736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0191985, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:51:20.204" endtime="20201030 15:51:20.211"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:20.212" endtime="20201030 15:51:20.214"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:19.906" endtime="20201030 15:51:20.214"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:19.904" endtime="20201030 15:51:20.215"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:20.219" level="INFO">${RESULT} = [{'diff': 1.1764000000000913e-05}, {'diff': 1.0236000000000273e-05}, {'diff': 1.0221999999997233e-05}, {'diff': 1.0222000000000703e-05}, {'diff': 1.0222000000000703e-05}, {'diff': 1.0222000000000703e-...</msg>
<status status="PASS" starttime="20201030 15:51:20.215" endtime="20201030 15:51:20.219"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:20.223" level="INFO">${OVERHEAD} = {'diff': [1.1764000000000913e-05, 1.0236000000000273e-05, 1.0221999999997233e-05, 1.0222000000000703e-05, 1.0222000000000703e-05, 1.0222000000000703e-05, 1.0208000000001133e-05, 1.0221999999997233e-05...</msg>
<status status="PASS" starttime="20201030 15:51:20.220" endtime="20201030 15:51:20.223"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:20.227" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:20.226" endtime="20201030 15:51:20.227"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:20.229" level="INFO">VALUE: [1.1764000000000913e-05, 1.0236000000000273e-05, 1.0221999999997233e-05, 1.0222000000000703e-05, 1.0222000000000703e-05, 1.0222000000000703e-05, 1.0208000000001133e-05, 1.0221999999997233e-05, 1.0221999999997233e-05, 1.0208000000001133e-05, 1.0249999999999843e-05, 1.0222000000000703e-05, 1.0222000000000703e-05, 1.0249999999999843e-05, 1.0223000000000176e-05, 1.0209000000000606e-05, 1.0249999999999843e-05, 1.0180000000001993e-05, 1.0236000000000273e-05, 1.0236000000000273e-05, 1.0222000000000703e-05, 1.0152999999998857e-05, 1.0194999999997567e-05, 1.0222000000000703e-05, 1.0207999999997663e-05, 1.0223000000000176e-05, 1.0222000000000703e-05, 1.0221999999997233e-05, 1.0236000000000273e-05, 1.0208000000001133e-05, 1.0207999999997663e-05, 1.0207999999997663e-05, 1.0193999999998093e-05, 1.0223000000000176e-05, 1.0222000000000703e-05, 1.0249999999999843e-05, 1.0236000000000273e-05, 1.0222000000000703e-05, 1.0222000000000703e-05, 1.0180000000001993e-05, 1.0209000000000606e-05, 1.0223000000000176e-05, 1.0208000000001133e-05, 1.0276999999999509e-05, 1.0222000000000703e-05, 1.0223000000000176e-05, 1.0209000000000606e-05, 1.0152999999998857e-05, 1.0194000000001563e-05, 1.0222000000000703e-05]</msg>
<status status="PASS" starttime="20201030 15:51:20.228" endtime="20201030 15:51:20.231"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:20.224" endtime="20201030 15:51:20.232"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:20.239" endtime="20201030 15:51:20.261"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:20.236" endtime="20201030 15:51:20.262"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:20.234" endtime="20201030 15:51:20.263"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:19.874" endtime="20201030 15:51:20.264"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:19.873" endtime="20201030 15:51:20.264"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:20.280" endtime="20201030 15:51:20.295"></status>
</kw>
<msg timestamp="20201030 15:51:20.296" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:20.277" endtime="20201030 15:51:20.296"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:20.301" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:20.298" endtime="20201030 15:51:20.301"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:20.303" endtime="20201030 15:51:20.306"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:20.271" endtime="20201030 15:51:20.307"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:20.268" endtime="20201030 15:51:20.308"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:20.321" endtime="20201030 15:51:20.610"></status>
</kw>
<msg timestamp="20201030 15:51:20.613" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.032020069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032031833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:20.318" endtime="20201030 15:51:20.613"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:20.621" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.032020069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032031833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:20.614" endtime="20201030 15:51:20.622"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:20.622" endtime="20201030 15:51:20.624"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:20.313" endtime="20201030 15:51:20.625"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:20.309" endtime="20201030 15:51:20.625"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:20.629" level="INFO">${RESULT} = [{'diff': 1.1764000000004382e-05}, {'diff': 1.0292000000002022e-05}, {'diff': 1.0207999999997663e-05}, {'diff': 1.0222000000004172e-05}, {'diff': 1.0249999999996373e-05}, {'diff': 1.0222000000004172e-...</msg>
<status status="PASS" starttime="20201030 15:51:20.626" endtime="20201030 15:51:20.629"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:20.634" level="INFO">${OVERHEAD} = {'diff': [1.1764000000004382e-05, 1.0292000000002022e-05, 1.0207999999997663e-05, 1.0222000000004172e-05, 1.0249999999996373e-05, 1.0222000000004172e-05, 1.0222999999996707e-05, 1.0208000000004602e-05...</msg>
<status status="PASS" starttime="20201030 15:51:20.630" endtime="20201030 15:51:20.634"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:20.638" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:20.637" endtime="20201030 15:51:20.638"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:20.641" level="INFO">VALUE: [1.1764000000004382e-05, 1.0292000000002022e-05, 1.0207999999997663e-05, 1.0222000000004172e-05, 1.0249999999996373e-05, 1.0222000000004172e-05, 1.0222999999996707e-05, 1.0208000000004602e-05, 1.0207999999997663e-05, 1.0236000000003742e-05, 1.0221999999997233e-05, 1.0222999999996707e-05, 1.0235999999996803e-05, 1.0207999999997663e-05, 1.0209000000004076e-05, 1.0193999999998093e-05, 1.0222000000004172e-05, 1.0222000000004172e-05, 1.0207999999997663e-05, 1.0208999999997137e-05, 1.0207999999997663e-05, 1.0221999999997233e-05, 1.0264000000002882e-05, 1.0208000000004602e-05, 1.0194999999997567e-05, 1.0124999999999718e-05, 1.0221999999997233e-05, 1.0249999999996373e-05, 1.0221999999997233e-05, 1.0221999999997233e-05, 1.0223000000003646e-05, 1.0208999999997137e-05, 1.0208000000004602e-05, 1.0235999999996803e-05, 1.0264000000002882e-05, 1.0236000000003742e-05, 1.0277000000002978e-05, 1.0194000000005032e-05, 1.0235999999996803e-05, 1.0194999999997567e-05, 1.0208999999997137e-05, 1.0222000000004172e-05, 1.0236000000003742e-05, 1.0236000000003742e-05, 1.0207999999997663e-05, 1.0209000000004076e-05, 1.0249999999996373e-05, 1.0221999999997233e-05, 1.0292000000002022e-05, 1.0222000000004172e-05]</msg>
<status status="PASS" starttime="20201030 15:51:20.639" endtime="20201030 15:51:20.641"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:20.635" endtime="20201030 15:51:20.642"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:20.646" endtime="20201030 15:51:20.665"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:20.644" endtime="20201030 15:51:20.666"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:20.643" endtime="20201030 15:51:20.666"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:20.265" endtime="20201030 15:51:20.666"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:20.265" endtime="20201030 15:51:20.666"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:20.674" endtime="20201030 15:51:20.685"></status>
</kw>
<msg timestamp="20201030 15:51:20.686" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:20.673" endtime="20201030 15:51:20.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:20.688" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:20.687" endtime="20201030 15:51:20.688"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:20.689" endtime="20201030 15:51:20.691"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:20.670" endtime="20201030 15:51:20.691"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:20.668" endtime="20201030 15:51:20.692"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:20.698" endtime="20201030 15:51:20.986"></status>
</kw>
<msg timestamp="20201030 15:51:20.989" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019404903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019416625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:20.697" endtime="20201030 15:51:20.989"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:20.997" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019404903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019416625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:20.990" endtime="20201030 15:51:20.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:20.998" endtime="20201030 15:51:21.001"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:20.694" endtime="20201030 15:51:21.001"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:20.692" endtime="20201030 15:51:21.002"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:21.006" level="INFO">${RESULT} = [{'diff': 1.1721999999998733e-05}, {'diff': 1.0277999999998982e-05}, {'diff': 1.0249999999999843e-05}, {'diff': 1.0221999999997233e-05}, {'diff': 1.0235999999996803e-05}, {'diff': 1.0207999999997663e-...</msg>
<status status="PASS" starttime="20201030 15:51:21.002" endtime="20201030 15:51:21.006"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:21.010" level="INFO">${OVERHEAD} = {'diff': [1.1721999999998733e-05, 1.0277999999998982e-05, 1.0249999999999843e-05, 1.0221999999997233e-05, 1.0235999999996803e-05, 1.0207999999997663e-05, 1.0222000000000703e-05, 1.0222000000000703e-05...</msg>
<status status="PASS" starttime="20201030 15:51:21.007" endtime="20201030 15:51:21.010"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:21.016" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:21.014" endtime="20201030 15:51:21.016"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:21.018" level="INFO">VALUE: [1.1721999999998733e-05, 1.0277999999998982e-05, 1.0249999999999843e-05, 1.0221999999997233e-05, 1.0235999999996803e-05, 1.0207999999997663e-05, 1.0222000000000703e-05, 1.0222000000000703e-05, 1.0208000000001133e-05, 1.0236000000000273e-05, 1.0209000000000606e-05, 1.0277999999998982e-05, 1.0207999999997663e-05, 1.0292000000002022e-05, 1.0208000000001133e-05, 1.0209000000000606e-05, 1.0236999999999746e-05, 1.0152999999998857e-05, 1.0223000000000176e-05, 1.0194000000001563e-05, 1.0236000000000273e-05, 1.0236000000000273e-05, 1.0209000000000606e-05, 1.0276999999999509e-05, 1.0222000000000703e-05, 1.0222000000000703e-05, 1.0222000000000703e-05, 1.0209000000000606e-05, 1.0208000000001133e-05, 1.0236999999999746e-05, 1.0195000000001037e-05, 1.0222000000000703e-05, 1.0222000000000703e-05, 1.0236999999999746e-05, 1.0236000000000273e-05, 1.0194000000001563e-05, 1.0221999999997233e-05, 1.0222000000000703e-05, 1.0195000000001037e-05, 1.0223000000000176e-05, 1.0236000000000273e-05, 1.0208000000001133e-05, 1.0236000000000273e-05, 1.0291999999998552e-05, 1.0223000000000176e-05, 1.0250000000003312e-05, 1.0276999999999509e-05, 1.0194000000001563e-05, 1.0222000000000703e-05, 1.0291999999998552e-05]</msg>
<status status="PASS" starttime="20201030 15:51:21.017" endtime="20201030 15:51:21.019"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:21.011" endtime="20201030 15:51:21.020"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:21.024" endtime="20201030 15:51:21.043"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:21.022" endtime="20201030 15:51:21.044"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:21.021" endtime="20201030 15:51:21.044"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:20.667" endtime="20201030 15:51:21.045"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:20.667" endtime="20201030 15:51:21.045"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:21.053" endtime="20201030 15:51:21.063"></status>
</kw>
<msg timestamp="20201030 15:51:21.064" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:21.051" endtime="20201030 15:51:21.064"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:21.066" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:21.065" endtime="20201030 15:51:21.067"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:21.067" endtime="20201030 15:51:21.070"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:21.048" endtime="20201030 15:51:21.071"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:21.047" endtime="20201030 15:51:21.071"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:21.077" endtime="20201030 15:51:21.363"></status>
</kw>
<msg timestamp="20201030 15:51:21.366" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019393278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019405069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:21.076" endtime="20201030 15:51:21.367"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:21.375" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019393278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019405069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:21.367" endtime="20201030 15:51:21.375"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:21.376" endtime="20201030 15:51:21.377"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:21.073" endtime="20201030 15:51:21.378"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:21.072" endtime="20201030 15:51:21.378"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:21.382" level="INFO">${RESULT} = [{'diff': 1.1791000000000579e-05}, {'diff': 1.0291999999998552e-05}, {'diff': 1.0208000000001133e-05}, {'diff': 1.0222000000000703e-05}, {'diff': 1.0195000000001037e-05}, {'diff': 1.0221999999997233e-...</msg>
<status status="PASS" starttime="20201030 15:51:21.379" endtime="20201030 15:51:21.383"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:21.386" level="INFO">${OVERHEAD} = {'diff': [1.1791000000000579e-05, 1.0291999999998552e-05, 1.0208000000001133e-05, 1.0222000000000703e-05, 1.0195000000001037e-05, 1.0221999999997233e-05, 1.0222000000000703e-05, 1.0236000000000273e-05...</msg>
<status status="PASS" starttime="20201030 15:51:21.383" endtime="20201030 15:51:21.387"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:21.391" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:21.389" endtime="20201030 15:51:21.391"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:21.393" level="INFO">VALUE: [1.1791000000000579e-05, 1.0291999999998552e-05, 1.0208000000001133e-05, 1.0222000000000703e-05, 1.0195000000001037e-05, 1.0221999999997233e-05, 1.0222000000000703e-05, 1.0236000000000273e-05, 1.0221999999997233e-05, 1.0207999999997663e-05, 1.0221999999997233e-05, 1.0221999999997233e-05, 1.0209000000000606e-05, 1.0223000000000176e-05, 1.0222000000000703e-05, 1.0167000000001897e-05, 1.0152999999998857e-05, 1.0209000000000606e-05, 1.0209000000000606e-05, 1.0208000000001133e-05, 1.0222000000000703e-05, 1.0222000000000703e-05, 1.0221999999997233e-05, 1.0193999999998093e-05, 1.0223000000000176e-05, 1.0207999999997663e-05, 1.0236000000000273e-05, 1.0263999999999412e-05, 1.0194000000001563e-05, 1.0221999999997233e-05, 1.0207999999997663e-05, 1.0222000000000703e-05, 1.0207999999997663e-05, 1.0221999999997233e-05, 1.0179999999998524e-05, 1.0223000000000176e-05, 1.0222000000000703e-05, 1.0222000000000703e-05, 1.0223000000000176e-05, 1.0235999999996803e-05, 1.0208000000001133e-05, 1.0193999999998093e-05, 1.0223000000000176e-05, 1.0194000000001563e-05, 1.0221999999997233e-05, 1.0180999999997997e-05, 1.0221999999997233e-05, 1.0277999999998982e-05, 1.0222000000000703e-05, 1.0194999999997567e-05]</msg>
<status status="PASS" starttime="20201030 15:51:21.392" endtime="20201030 15:51:21.394"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:21.387" endtime="20201030 15:51:21.395"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:21.399" endtime="20201030 15:51:21.418"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:21.397" endtime="20201030 15:51:21.419"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:21.396" endtime="20201030 15:51:21.419"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:21.046" endtime="20201030 15:51:21.419"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:21.045" endtime="20201030 15:51:21.419"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:21.427" endtime="20201030 15:51:21.438"></status>
</kw>
<msg timestamp="20201030 15:51:21.438" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:21.426" endtime="20201030 15:51:21.439"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:21.441" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:21.439" endtime="20201030 15:51:21.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:21.442" endtime="20201030 15:51:21.444"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:21.423" endtime="20201030 15:51:21.444"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:21.421" endtime="20201030 15:51:21.444"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:21.451" endtime="20201030 15:51:21.738"></status>
</kw>
<msg timestamp="20201030 15:51:21.741" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019206819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019218583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:21.449" endtime="20201030 15:51:21.741"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:21.749" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019206819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019218583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:21.742" endtime="20201030 15:51:21.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:21.750" endtime="20201030 15:51:21.752"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:21.447" endtime="20201030 15:51:21.753"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:21.445" endtime="20201030 15:51:21.754"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:21.762" level="INFO">${RESULT} = [{'diff': 1.1764000000000913e-05}, {'diff': 1.0277999999998982e-05}, {'diff': 1.0222000000000703e-05}, {'diff': 1.0222000000000703e-05}, {'diff': 1.0263999999999412e-05}, {'diff': 1.0222000000000703e-...</msg>
<status status="PASS" starttime="20201030 15:51:21.756" endtime="20201030 15:51:21.763"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:21.773" level="INFO">${OVERHEAD} = {'diff': [1.1764000000000913e-05, 1.0277999999998982e-05, 1.0222000000000703e-05, 1.0222000000000703e-05, 1.0263999999999412e-05, 1.0222000000000703e-05, 1.0223000000000176e-05, 1.0209000000000606e-05...</msg>
<status status="PASS" starttime="20201030 15:51:21.764" endtime="20201030 15:51:21.773"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:21.781" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:21.779" endtime="20201030 15:51:21.782"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:21.786" level="INFO">VALUE: [1.1764000000000913e-05, 1.0277999999998982e-05, 1.0222000000000703e-05, 1.0222000000000703e-05, 1.0263999999999412e-05, 1.0222000000000703e-05, 1.0223000000000176e-05, 1.0209000000000606e-05, 1.0222000000000703e-05, 1.0236999999999746e-05, 1.0250000000003312e-05, 1.0236000000000273e-05, 1.0222000000000703e-05, 1.0223000000000176e-05, 1.0208000000001133e-05, 1.0222000000000703e-05, 1.0236999999999746e-05, 1.0222000000000703e-05, 1.0222000000000703e-05, 1.0222000000000703e-05, 1.0236000000000273e-05, 1.0222000000000703e-05, 1.0209000000000606e-05, 1.0236000000000273e-05, 1.0209000000000606e-05, 1.0236000000000273e-05, 1.0277999999998982e-05, 1.0221999999997233e-05, 1.0207999999997663e-05, 1.0208000000001133e-05, 1.0209000000000606e-05, 1.0223000000000176e-05, 1.0236000000000273e-05, 1.0207999999997663e-05, 1.0209000000000606e-05, 1.0221999999997233e-05, 1.0222000000000703e-05, 1.0222000000000703e-05, 1.0221999999997233e-05, 1.0223000000000176e-05, 1.0221999999997233e-05, 1.0207999999997663e-05, 1.0179999999998524e-05, 1.0180999999997997e-05, 1.0152999999998857e-05, 1.0223000000000176e-05, 1.0180000000001993e-05, 1.0152999999998857e-05, 1.0222000000000703e-05, 1.0222000000000703e-05]</msg>
<status status="PASS" starttime="20201030 15:51:21.784" endtime="20201030 15:51:21.788"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:21.775" endtime="20201030 15:51:21.789"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:21.796" endtime="20201030 15:51:21.818"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:21.793" endtime="20201030 15:51:21.819"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:21.791" endtime="20201030 15:51:21.820"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:21.420" endtime="20201030 15:51:21.820"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:21.420" endtime="20201030 15:51:21.821"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:21.837" endtime="20201030 15:51:21.850"></status>
</kw>
<msg timestamp="20201030 15:51:21.851" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:21.834" endtime="20201030 15:51:21.851"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:21.854" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:21.853" endtime="20201030 15:51:21.854"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:21.855" endtime="20201030 15:51:21.857"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:21.828" endtime="20201030 15:51:21.857"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:21.825" endtime="20201030 15:51:21.858"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:21.864" endtime="20201030 15:51:22.148"></status>
</kw>
<msg timestamp="20201030 15:51:22.151" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031688903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031700681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:21.862" endtime="20201030 15:51:22.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:22.159" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031688903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031700681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:22.152" endtime="20201030 15:51:22.159"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:22.160" endtime="20201030 15:51:22.163"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:21.860" endtime="20201030 15:51:22.163"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:21.858" endtime="20201030 15:51:22.164"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:22.168" level="INFO">${RESULT} = [{'diff': 1.1778000000003952e-05}, {'diff': 1.0291000000002548e-05}, {'diff': 1.0235999999996803e-05}, {'diff': 1.0208000000004602e-05}, {'diff': 1.0208999999997137e-05}, {'diff': 1.0221999999997233e-...</msg>
<status status="PASS" starttime="20201030 15:51:22.165" endtime="20201030 15:51:22.168"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:22.172" level="INFO">${OVERHEAD} = {'diff': [1.1778000000003952e-05, 1.0291000000002548e-05, 1.0235999999996803e-05, 1.0208000000004602e-05, 1.0208999999997137e-05, 1.0221999999997233e-05, 1.0207999999997663e-05, 1.0221999999997233e-05...</msg>
<status status="PASS" starttime="20201030 15:51:22.169" endtime="20201030 15:51:22.172"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:22.176" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:22.175" endtime="20201030 15:51:22.176"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:22.178" level="INFO">VALUE: [1.1778000000003952e-05, 1.0291000000002548e-05, 1.0235999999996803e-05, 1.0208000000004602e-05, 1.0208999999997137e-05, 1.0221999999997233e-05, 1.0207999999997663e-05, 1.0221999999997233e-05, 1.0208999999997137e-05, 1.0235999999996803e-05, 1.0207999999997663e-05, 1.0235999999996803e-05, 1.0207999999997663e-05, 1.0264000000002882e-05, 1.0237000000003216e-05, 1.0235999999996803e-05, 1.0235999999996803e-05, 1.0223000000003646e-05, 1.0208999999997137e-05, 1.0194999999997567e-05, 1.0249999999996373e-05, 1.0207999999997663e-05, 1.0207999999997663e-05, 1.0249999999996373e-05, 1.0221999999997233e-05, 1.0291000000002548e-05, 1.0236999999996277e-05, 1.0193999999998093e-05, 1.0235999999996803e-05, 1.0207999999997663e-05, 1.0166999999998427e-05, 1.0250000000003312e-05, 1.0207999999997663e-05, 1.0222000000004172e-05, 1.0181000000004936e-05, 1.0264000000002882e-05, 1.0222000000004172e-05, 1.0223000000003646e-05, 1.0208000000004602e-05, 1.0221999999997233e-05, 1.0235999999996803e-05, 1.0209000000004076e-05, 1.0179999999998524e-05, 1.0235999999996803e-05, 1.0222000000004172e-05, 1.0207999999997663e-05, 1.0194999999997567e-05, 1.0222000000004172e-05, 1.0208999999997137e-05, 1.0221999999997233e-05]</msg>
<status status="PASS" starttime="20201030 15:51:22.177" endtime="20201030 15:51:22.179"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:22.173" endtime="20201030 15:51:22.180"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:22.183" endtime="20201030 15:51:22.203"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:22.182" endtime="20201030 15:51:22.203"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:22.181" endtime="20201030 15:51:22.203"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:21.822" endtime="20201030 15:51:22.204"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:21.821" endtime="20201030 15:51:22.204"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:22.212" endtime="20201030 15:51:22.222"></status>
</kw>
<msg timestamp="20201030 15:51:22.223" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:22.210" endtime="20201030 15:51:22.223"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:22.225" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:22.224" endtime="20201030 15:51:22.226"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:22.226" endtime="20201030 15:51:22.229"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:22.207" endtime="20201030 15:51:22.229"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:22.206" endtime="20201030 15:51:22.230"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:22.236" endtime="20201030 15:51:22.520"></status>
</kw>
<msg timestamp="20201030 15:51:22.523" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019122569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019134333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:22.235" endtime="20201030 15:51:22.523"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:22.531" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019122569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019134333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:22.524" endtime="20201030 15:51:22.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:22.532" endtime="20201030 15:51:22.534"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:22.232" endtime="20201030 15:51:22.534"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:22.230" endtime="20201030 15:51:22.535"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:22.538" level="INFO">${RESULT} = [{'diff': 1.1764000000000913e-05}, {'diff': 1.0249999999999843e-05}, {'diff': 1.0208000000001133e-05}, {'diff': 1.0249999999999843e-05}, {'diff': 1.0222000000000703e-05}, {'diff': 1.0209000000000606e-...</msg>
<status status="PASS" starttime="20201030 15:51:22.535" endtime="20201030 15:51:22.539"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:22.543" level="INFO">${OVERHEAD} = {'diff': [1.1764000000000913e-05, 1.0249999999999843e-05, 1.0208000000001133e-05, 1.0249999999999843e-05, 1.0222000000000703e-05, 1.0209000000000606e-05, 1.0236000000000273e-05, 1.0208999999997137e-05...</msg>
<status status="PASS" starttime="20201030 15:51:22.539" endtime="20201030 15:51:22.543"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:22.547" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:22.546" endtime="20201030 15:51:22.547"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:22.549" level="INFO">VALUE: [1.1764000000000913e-05, 1.0249999999999843e-05, 1.0208000000001133e-05, 1.0249999999999843e-05, 1.0222000000000703e-05, 1.0209000000000606e-05, 1.0236000000000273e-05, 1.0208999999997137e-05, 1.0208999999997137e-05, 1.0236999999999746e-05, 1.0236000000000273e-05, 1.0222000000000703e-05, 1.0208000000001133e-05, 1.0236000000000273e-05, 1.0194000000001563e-05, 1.0222000000000703e-05, 1.0208000000001133e-05, 1.0236000000000273e-05, 1.0236000000000273e-05, 1.0277999999998982e-05, 1.0222000000000703e-05, 1.0222000000000703e-05, 1.0223000000000176e-05, 1.0221999999997233e-05, 1.0138999999999287e-05, 1.0222000000000703e-05, 1.0222000000000703e-05, 1.0277999999998982e-05, 1.0165999999998954e-05, 1.0277999999998982e-05, 1.0236000000000273e-05, 1.0236000000000273e-05, 1.0208999999997137e-05, 1.0249999999999843e-05, 1.0138999999999287e-05, 1.0222000000000703e-05, 1.0223000000000176e-05, 1.0236999999999746e-05, 1.0194999999997567e-05, 1.0195000000001037e-05, 1.0236000000000273e-05, 1.0222000000000703e-05, 1.0195000000001037e-05, 1.0236000000000273e-05, 1.0208000000001133e-05, 1.0208000000001133e-05, 1.0222000000000703e-05, 1.0207999999997663e-05, 1.0222000000000703e-05, 1.0222000000000703e-05]</msg>
<status status="PASS" starttime="20201030 15:51:22.548" endtime="20201030 15:51:22.553"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:22.543" endtime="20201030 15:51:22.553"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:22.557" endtime="20201030 15:51:22.576"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:22.555" endtime="20201030 15:51:22.577"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:22.554" endtime="20201030 15:51:22.577"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:22.205" endtime="20201030 15:51:22.577"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:22.204" endtime="20201030 15:51:22.577"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:22.585" endtime="20201030 15:51:22.596"></status>
</kw>
<msg timestamp="20201030 15:51:22.596" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:22.584" endtime="20201030 15:51:22.596"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:22.599" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:22.597" endtime="20201030 15:51:22.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:22.600" endtime="20201030 15:51:22.601"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:22.581" endtime="20201030 15:51:22.602"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:22.579" endtime="20201030 15:51:22.602"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:22.608" endtime="20201030 15:51:22.893"></status>
</kw>
<msg timestamp="20201030 15:51:22.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019142306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019154083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:22.607" endtime="20201030 15:51:22.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:22.904" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019142306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019154083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:22.897" endtime="20201030 15:51:22.905"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:22.905" endtime="20201030 15:51:22.907"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:22.605" endtime="20201030 15:51:22.907"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:22.603" endtime="20201030 15:51:22.908"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:22.912" level="INFO">${RESULT} = [{'diff': 1.177699999999754e-05}, {'diff': 1.0278000000002452e-05}, {'diff': 1.0222000000000703e-05}, {'diff': 1.0222000000000703e-05}, {'diff': 1.0207999999997663e-05}, {'diff': 1.0207999999997663e-0...</msg>
<status status="PASS" starttime="20201030 15:51:22.909" endtime="20201030 15:51:22.912"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:22.917" level="INFO">${OVERHEAD} = {'diff': [1.177699999999754e-05, 1.0278000000002452e-05, 1.0222000000000703e-05, 1.0222000000000703e-05, 1.0207999999997663e-05, 1.0207999999997663e-05, 1.0193999999998093e-05, 1.0222000000000703e-05,...</msg>
<status status="PASS" starttime="20201030 15:51:22.913" endtime="20201030 15:51:22.917"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:22.921" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:22.920" endtime="20201030 15:51:22.921"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:22.923" level="INFO">VALUE: [1.177699999999754e-05, 1.0278000000002452e-05, 1.0222000000000703e-05, 1.0222000000000703e-05, 1.0207999999997663e-05, 1.0207999999997663e-05, 1.0193999999998093e-05, 1.0222000000000703e-05, 1.0221999999997233e-05, 1.0223000000000176e-05, 1.0207999999997663e-05, 1.0138999999999287e-05, 1.0181000000001467e-05, 1.0222000000000703e-05, 1.0208999999997137e-05, 1.0221999999997233e-05, 1.0221999999997233e-05, 1.0207999999997663e-05, 1.0208999999997137e-05, 1.0208000000001133e-05, 1.0195000000001037e-05, 1.0208000000001133e-05, 1.0250000000003312e-05, 1.0208000000001133e-05, 1.0194000000001563e-05, 1.0222000000000703e-05, 1.0208000000001133e-05, 1.0222000000000703e-05, 1.0236000000000273e-05, 1.0208000000001133e-05, 1.0236000000000273e-05, 1.0222000000000703e-05, 1.0223000000000176e-05, 1.0208000000001133e-05, 1.0222000000000703e-05, 1.0222000000000703e-05, 1.0222000000000703e-05, 1.0223000000000176e-05, 1.0291999999998552e-05, 1.0223000000000176e-05, 1.0222000000000703e-05, 1.0236000000000273e-05, 1.0222000000000703e-05, 1.0278000000002452e-05, 1.0263999999999412e-05, 1.0221999999997233e-05, 1.0208999999997137e-05, 1.0236000000000273e-05, 1.0194000000001563e-05, 1.0222000000000703e-05]</msg>
<status status="PASS" starttime="20201030 15:51:22.922" endtime="20201030 15:51:22.924"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:22.918" endtime="20201030 15:51:22.924"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:22.928" endtime="20201030 15:51:22.947"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:22.927" endtime="20201030 15:51:22.948"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:22.925" endtime="20201030 15:51:22.948"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:22.578" endtime="20201030 15:51:22.949"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:22.578" endtime="20201030 15:51:22.949"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:22.956" endtime="20201030 15:51:22.967"></status>
</kw>
<msg timestamp="20201030 15:51:22.968" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:22.955" endtime="20201030 15:51:22.968"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:22.970" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:22.969" endtime="20201030 15:51:22.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:22.971" endtime="20201030 15:51:22.973"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:22.952" endtime="20201030 15:51:22.973"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:22.951" endtime="20201030 15:51:22.974"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:22.980" endtime="20201030 15:51:23.265"></status>
</kw>
<msg timestamp="20201030 15:51:23.268" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019098556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019110333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:22.979" endtime="20201030 15:51:23.268"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:23.276" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019098556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019110333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:23.269" endtime="20201030 15:51:23.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:23.277" endtime="20201030 15:51:23.280"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:22.976" endtime="20201030 15:51:23.280"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:22.974" endtime="20201030 15:51:23.281"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:23.285" level="INFO">${RESULT} = [{'diff': 1.1777000000001009e-05}, {'diff': 1.0291000000002548e-05}, {'diff': 1.0222999999996707e-05}, {'diff': 1.0222000000000703e-05}, {'diff': 1.0222000000000703e-05}, {'diff': 1.0209000000000606e-...</msg>
<status status="PASS" starttime="20201030 15:51:23.282" endtime="20201030 15:51:23.285"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:23.289" level="INFO">${OVERHEAD} = {'diff': [1.1777000000001009e-05, 1.0291000000002548e-05, 1.0222999999996707e-05, 1.0222000000000703e-05, 1.0222000000000703e-05, 1.0209000000000606e-05, 1.0222000000000703e-05, 1.0222000000000703e-05...</msg>
<status status="PASS" starttime="20201030 15:51:23.286" endtime="20201030 15:51:23.289"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:23.293" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:23.292" endtime="20201030 15:51:23.293"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:23.295" level="INFO">VALUE: [1.1777000000001009e-05, 1.0291000000002548e-05, 1.0222999999996707e-05, 1.0222000000000703e-05, 1.0222000000000703e-05, 1.0209000000000606e-05, 1.0222000000000703e-05, 1.0222000000000703e-05, 1.0223000000000176e-05, 1.0236000000000273e-05, 1.0138999999999287e-05, 1.0194000000001563e-05, 1.0208000000001133e-05, 1.0209000000000606e-05, 1.0236000000000273e-05, 1.0223000000000176e-05, 1.0223000000000176e-05, 1.0207999999997663e-05, 1.0207999999997663e-05, 1.0236000000000273e-05, 1.0222000000000703e-05, 1.0223000000000176e-05, 1.0208000000001133e-05, 1.0222000000000703e-05, 1.0249999999999843e-05, 1.0180000000001993e-05, 1.0291999999998552e-05, 1.0223000000000176e-05, 1.0222000000000703e-05, 1.0208000000001133e-05, 1.0236999999999746e-05, 1.0222000000000703e-05, 1.0195000000001037e-05, 1.0222000000000703e-05, 1.0208000000001133e-05, 1.0250000000003312e-05, 1.0263999999999412e-05, 1.0263999999999412e-05, 1.0221999999997233e-05, 1.0222000000000703e-05, 1.0194000000001563e-05, 1.0223000000000176e-05, 1.0221999999997233e-05, 1.0222000000000703e-05, 1.0222000000000703e-05, 1.0208000000001133e-05, 1.0207999999997663e-05, 1.0249999999999843e-05, 1.0208000000001133e-05, 1.0195000000001037e-05]</msg>
<status status="PASS" starttime="20201030 15:51:23.294" endtime="20201030 15:51:23.296"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:23.290" endtime="20201030 15:51:23.297"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:23.300" endtime="20201030 15:51:23.320"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:23.299" endtime="20201030 15:51:23.321"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:23.297" endtime="20201030 15:51:23.321"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:22.949" endtime="20201030 15:51:23.323"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:22.949" endtime="20201030 15:51:23.323"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:23.335" endtime="20201030 15:51:23.347"></status>
</kw>
<msg timestamp="20201030 15:51:23.347" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:23.333" endtime="20201030 15:51:23.348"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:23.350" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:23.349" endtime="20201030 15:51:23.350"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:23.351" endtime="20201030 15:51:23.354"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:23.329" endtime="20201030 15:51:23.354"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:23.326" endtime="20201030 15:51:23.355"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:23.362" endtime="20201030 15:51:23.648"></status>
</kw>
<msg timestamp="20201030 15:51:23.651" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026528569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026540375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:23.359" endtime="20201030 15:51:23.651"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:23.659" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026528569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026540375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:23.652" endtime="20201030 15:51:23.660"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:23.660" endtime="20201030 15:51:23.662"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:23.357" endtime="20201030 15:51:23.663"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:23.355" endtime="20201030 15:51:23.663"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:23.667" level="INFO">${RESULT} = [{'diff': 1.1806000000003092e-05}, {'diff': 1.0320000000001162e-05}, {'diff': 1.0249999999999843e-05}, {'diff': 1.0236000000000273e-05}, {'diff': 1.0235999999996803e-05}, {'diff': 1.0236000000000273e-...</msg>
<status status="PASS" starttime="20201030 15:51:23.664" endtime="20201030 15:51:23.667"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:23.671" level="INFO">${OVERHEAD} = {'diff': [1.1806000000003092e-05, 1.0320000000001162e-05, 1.0249999999999843e-05, 1.0236000000000273e-05, 1.0235999999996803e-05, 1.0236000000000273e-05, 1.0222000000000703e-05, 1.0222000000000703e-05...</msg>
<status status="PASS" starttime="20201030 15:51:23.668" endtime="20201030 15:51:23.671"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:23.675" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:23.674" endtime="20201030 15:51:23.676"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:23.678" level="INFO">VALUE: [1.1806000000003092e-05, 1.0320000000001162e-05, 1.0249999999999843e-05, 1.0236000000000273e-05, 1.0235999999996803e-05, 1.0236000000000273e-05, 1.0222000000000703e-05, 1.0222000000000703e-05, 1.0208000000001133e-05, 1.0222000000000703e-05, 1.0208000000001133e-05, 1.0208000000001133e-05, 1.0207999999997663e-05, 1.0221999999997233e-05, 1.0209000000000606e-05, 1.0207999999997663e-05, 1.0208999999997137e-05, 1.0207999999997663e-05, 1.0235999999996803e-05, 1.0209000000000606e-05, 1.0223000000000176e-05, 1.0223000000000176e-05, 1.0222000000000703e-05, 1.0222000000000703e-05, 1.0222000000000703e-05, 1.0165999999998954e-05, 1.0221999999997233e-05, 1.0208000000001133e-05, 1.0223000000000176e-05, 1.0209000000000606e-05, 1.0221999999997233e-05, 1.0223000000000176e-05, 1.0221999999997233e-05, 1.0194000000001563e-05, 1.0222000000000703e-05, 1.0209000000000606e-05, 1.0236000000000273e-05, 1.0264000000002882e-05, 1.0223000000000176e-05, 1.0222000000000703e-05, 1.0222000000000703e-05, 1.0208000000001133e-05, 1.0208000000001133e-05, 1.0222000000000703e-05, 1.0195000000001037e-05, 1.0222000000000703e-05, 1.0153000000002327e-05, 1.0221999999997233e-05, 1.0249999999999843e-05, 1.0194000000001563e-05]</msg>
<status status="PASS" starttime="20201030 15:51:23.676" endtime="20201030 15:51:23.679"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:23.672" endtime="20201030 15:51:23.680"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:23.683" endtime="20201030 15:51:23.703"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:23.682" endtime="20201030 15:51:23.703"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:23.681" endtime="20201030 15:51:23.704"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:23.324" endtime="20201030 15:51:23.704"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:23.324" endtime="20201030 15:51:23.704"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:23.712" endtime="20201030 15:51:23.723"></status>
</kw>
<msg timestamp="20201030 15:51:23.723" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:23.710" endtime="20201030 15:51:23.723"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:23.726" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:23.724" endtime="20201030 15:51:23.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:23.727" endtime="20201030 15:51:23.728"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:23.708" endtime="20201030 15:51:23.729"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:23.706" endtime="20201030 15:51:23.729"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:23.736" endtime="20201030 15:51:24.032"></status>
</kw>
<msg timestamp="20201030 15:51:24.039" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019225236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019236986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:23.734" endtime="20201030 15:51:24.040"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:24.057" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019225236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019236986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:24.041" endtime="20201030 15:51:24.058"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:24.060" endtime="20201030 15:51:24.063"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:23.732" endtime="20201030 15:51:24.065"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:23.730" endtime="20201030 15:51:24.066"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:24.073" level="INFO">${RESULT} = [{'diff': 1.1750000000001343e-05}, {'diff': 1.0277999999998982e-05}, {'diff': 1.0222000000000703e-05}, {'diff': 1.0249999999999843e-05}, {'diff': 1.0221999999997233e-05}, {'diff': 1.0222000000000703e-...</msg>
<status status="PASS" starttime="20201030 15:51:24.067" endtime="20201030 15:51:24.073"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:24.078" level="INFO">${OVERHEAD} = {'diff': [1.1750000000001343e-05, 1.0277999999998982e-05, 1.0222000000000703e-05, 1.0249999999999843e-05, 1.0221999999997233e-05, 1.0222000000000703e-05, 1.0208000000001133e-05, 1.0222000000000703e-05...</msg>
<status status="PASS" starttime="20201030 15:51:24.074" endtime="20201030 15:51:24.079"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:24.083" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:24.082" endtime="20201030 15:51:24.083"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:24.085" level="INFO">VALUE: [1.1750000000001343e-05, 1.0277999999998982e-05, 1.0222000000000703e-05, 1.0249999999999843e-05, 1.0221999999997233e-05, 1.0222000000000703e-05, 1.0208000000001133e-05, 1.0222000000000703e-05, 1.0222000000000703e-05, 1.0235999999996803e-05, 1.0152999999998857e-05, 1.0222000000000703e-05, 1.0209000000000606e-05, 1.0236000000000273e-05, 1.0222000000000703e-05, 1.0209000000000606e-05, 1.0222000000000703e-05, 1.0236000000000273e-05, 1.0223000000000176e-05, 1.0223000000000176e-05, 1.0223000000000176e-05, 1.0222000000000703e-05, 1.0207999999997663e-05, 1.0222000000000703e-05, 1.0222000000000703e-05, 1.0235999999996803e-05, 1.0236000000000273e-05, 1.0221999999997233e-05, 1.0208000000001133e-05, 1.0195000000001037e-05, 1.0223000000000176e-05, 1.0222000000000703e-05, 1.0222000000000703e-05, 1.0221999999997233e-05, 1.0222000000000703e-05, 1.0222000000000703e-05, 1.0236000000000273e-05, 1.0209000000000606e-05, 1.0208000000001133e-05, 1.0221999999997233e-05, 1.0209000000000606e-05, 1.0222000000000703e-05, 1.0222000000000703e-05, 1.0249999999999843e-05, 1.0208000000001133e-05, 1.0222000000000703e-05, 1.0222000000000703e-05, 1.0222000000000703e-05, 1.0236999999999746e-05, 1.0221999999997233e-05]</msg>
<status status="PASS" starttime="20201030 15:51:24.084" endtime="20201030 15:51:24.096"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.079" endtime="20201030 15:51:24.097"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:24.101" endtime="20201030 15:51:24.120"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.099" endtime="20201030 15:51:24.121"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.098" endtime="20201030 15:51:24.121"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:23.705" endtime="20201030 15:51:24.121"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:23.705" endtime="20201030 15:51:24.122"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:24.129" endtime="20201030 15:51:24.140"></status>
</kw>
<msg timestamp="20201030 15:51:24.141" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:24.128" endtime="20201030 15:51:24.141"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:24.143" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:24.142" endtime="20201030 15:51:24.143"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:24.144" endtime="20201030 15:51:24.146"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.125" endtime="20201030 15:51:24.146"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.124" endtime="20201030 15:51:24.147"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:24.153" endtime="20201030 15:51:24.440"></status>
</kw>
<msg timestamp="20201030 15:51:24.444" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019374569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019386403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:24.152" endtime="20201030 15:51:24.444"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:24.453" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019374569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019386403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:24.445" endtime="20201030 15:51:24.453"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:24.455" endtime="20201030 15:51:24.458"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.149" endtime="20201030 15:51:24.459"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.147" endtime="20201030 15:51:24.459"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:24.463" level="INFO">${RESULT} = [{'diff': 1.1833999999998762e-05}, {'diff': 1.0291999999998552e-05}, {'diff': 1.0222000000000703e-05}, {'diff': 1.0222000000000703e-05}, {'diff': 1.0236000000000273e-05}, {'diff': 1.0236000000000273e-...</msg>
<status status="PASS" starttime="20201030 15:51:24.460" endtime="20201030 15:51:24.464"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:24.468" level="INFO">${OVERHEAD} = {'diff': [1.1833999999998762e-05, 1.0291999999998552e-05, 1.0222000000000703e-05, 1.0222000000000703e-05, 1.0236000000000273e-05, 1.0236000000000273e-05, 1.0278000000002452e-05, 1.0209000000000606e-05...</msg>
<status status="PASS" starttime="20201030 15:51:24.464" endtime="20201030 15:51:24.468"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:24.472" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:24.471" endtime="20201030 15:51:24.472"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:24.474" level="INFO">VALUE: [1.1833999999998762e-05, 1.0291999999998552e-05, 1.0222000000000703e-05, 1.0222000000000703e-05, 1.0236000000000273e-05, 1.0236000000000273e-05, 1.0278000000002452e-05, 1.0209000000000606e-05, 1.0263999999999412e-05, 1.0236000000000273e-05, 1.0222000000000703e-05, 1.0193999999998093e-05, 1.0222000000000703e-05, 1.0249999999999843e-05, 1.0236000000000273e-05, 1.0193999999998093e-05, 1.0236000000000273e-05, 1.0222000000000703e-05, 1.0222000000000703e-05, 1.0222000000000703e-05, 1.0222000000000703e-05, 1.0222000000000703e-05, 1.0208000000001133e-05, 1.0236000000000273e-05, 1.0208000000001133e-05, 1.0236999999999746e-05, 1.0222000000000703e-05, 1.0193999999998093e-05, 1.0223000000000176e-05, 1.0222000000000703e-05, 1.0222000000000703e-05, 1.0222000000000703e-05, 1.0221999999997233e-05, 1.0221999999997233e-05, 1.0222000000000703e-05, 1.0222000000000703e-05, 1.0208000000001133e-05, 1.0221999999997233e-05, 1.0276999999999509e-05, 1.0262999999999939e-05, 1.0223000000000176e-05, 1.0236000000000273e-05, 1.0207999999997663e-05, 1.0208000000001133e-05, 1.0209000000000606e-05, 1.0194000000001563e-05, 1.0236000000000273e-05, 1.0193999999998093e-05, 1.0208000000001133e-05, 1.0222999999996707e-05]</msg>
<status status="PASS" starttime="20201030 15:51:24.473" endtime="20201030 15:51:24.475"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.468" endtime="20201030 15:51:24.476"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:24.479" endtime="20201030 15:51:24.499"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.478" endtime="20201030 15:51:24.499"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.477" endtime="20201030 15:51:24.500"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.122" endtime="20201030 15:51:24.500"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.122" endtime="20201030 15:51:24.500"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:24.508" endtime="20201030 15:51:24.519"></status>
</kw>
<msg timestamp="20201030 15:51:24.519" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:24.506" endtime="20201030 15:51:24.519"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:24.522" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:24.520" endtime="20201030 15:51:24.522"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:24.523" endtime="20201030 15:51:24.525"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.504" endtime="20201030 15:51:24.526"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.502" endtime="20201030 15:51:24.526"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:24.533" endtime="20201030 15:51:24.818"></status>
</kw>
<msg timestamp="20201030 15:51:24.821" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019285722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019297486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:24.531" endtime="20201030 15:51:24.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:24.829" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019285722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019297486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:24.822" endtime="20201030 15:51:24.830"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:24.831" endtime="20201030 15:51:24.832"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.528" endtime="20201030 15:51:24.833"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.527" endtime="20201030 15:51:24.833"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:24.837" level="INFO">${RESULT} = [{'diff': 1.1763999999997443e-05}, {'diff': 1.0263999999999412e-05}, {'diff': 1.0222000000000703e-05}, {'diff': 1.0195000000001037e-05}, {'diff': 1.0194000000001563e-05}, {'diff': 1.0276999999999509e-...</msg>
<status status="PASS" starttime="20201030 15:51:24.834" endtime="20201030 15:51:24.837"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:24.841" level="INFO">${OVERHEAD} = {'diff': [1.1763999999997443e-05, 1.0263999999999412e-05, 1.0222000000000703e-05, 1.0195000000001037e-05, 1.0194000000001563e-05, 1.0276999999999509e-05, 1.0221999999997233e-05, 1.0208000000001133e-05...</msg>
<status status="PASS" starttime="20201030 15:51:24.838" endtime="20201030 15:51:24.841"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:24.845" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:24.844" endtime="20201030 15:51:24.846"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:24.848" level="INFO">VALUE: [1.1763999999997443e-05, 1.0263999999999412e-05, 1.0222000000000703e-05, 1.0195000000001037e-05, 1.0194000000001563e-05, 1.0276999999999509e-05, 1.0221999999997233e-05, 1.0208000000001133e-05, 1.0209000000000606e-05, 1.0222000000000703e-05, 1.0208999999997137e-05, 1.0222000000000703e-05, 1.0276999999999509e-05, 1.0208000000001133e-05, 1.0208000000001133e-05, 1.0222000000000703e-05, 1.0249999999999843e-05, 1.0193999999998093e-05, 1.0208000000001133e-05, 1.0222000000000703e-05, 1.0236000000000273e-05, 1.0222999999996707e-05, 1.0207999999997663e-05, 1.0222000000000703e-05, 1.0223000000000176e-05, 1.0152999999998857e-05, 1.0209000000000606e-05, 1.0209000000000606e-05, 1.0209000000000606e-05, 1.0249999999999843e-05, 1.0195000000001037e-05, 1.0194000000001563e-05, 1.0236000000000273e-05, 1.0181000000001467e-05, 1.0223000000000176e-05, 1.0222000000000703e-05, 1.0221999999997233e-05, 1.0209000000000606e-05, 1.0223000000000176e-05, 1.0222000000000703e-05, 1.0222000000000703e-05, 1.0223000000000176e-05, 1.0222000000000703e-05, 1.0207999999997663e-05, 1.0236000000000273e-05, 1.0223000000000176e-05, 1.0222000000000703e-05, 1.0223000000000176e-05, 1.0165999999998954e-05, 1.0222000000000703e-05]</msg>
<status status="PASS" starttime="20201030 15:51:24.847" endtime="20201030 15:51:24.850"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.842" endtime="20201030 15:51:24.850"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:24.854" endtime="20201030 15:51:24.873"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.852" endtime="20201030 15:51:24.874"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.851" endtime="20201030 15:51:24.874"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.501" endtime="20201030 15:51:24.874"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.500" endtime="20201030 15:51:24.875"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:24.882" endtime="20201030 15:51:24.893"></status>
</kw>
<msg timestamp="20201030 15:51:24.894" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:24.881" endtime="20201030 15:51:24.894"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:24.896" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:24.895" endtime="20201030 15:51:24.896"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:24.897" endtime="20201030 15:51:24.899"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.878" endtime="20201030 15:51:24.899"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.877" endtime="20201030 15:51:24.900"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:24.906" endtime="20201030 15:51:25.192"></status>
</kw>
<msg timestamp="20201030 15:51:25.195" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019272306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019284042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:24.905" endtime="20201030 15:51:25.195"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:25.203" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019272306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019284042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:25.196" endtime="20201030 15:51:25.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:25.204" endtime="20201030 15:51:25.206"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.902" endtime="20201030 15:51:25.206"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.900" endtime="20201030 15:51:25.207"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:25.211" level="INFO">${RESULT} = [{'diff': 1.1736000000001773e-05}, {'diff': 1.0278000000002452e-05}, {'diff': 1.0222000000000703e-05}, {'diff': 1.0208000000001133e-05}, {'diff': 1.0263999999999412e-05}, {'diff': 1.0180999999997997e-...</msg>
<status status="PASS" starttime="20201030 15:51:25.208" endtime="20201030 15:51:25.211"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:25.216" level="INFO">${OVERHEAD} = {'diff': [1.1736000000001773e-05, 1.0278000000002452e-05, 1.0222000000000703e-05, 1.0208000000001133e-05, 1.0263999999999412e-05, 1.0180999999997997e-05, 1.0209000000000606e-05, 1.0221999999997233e-05...</msg>
<status status="PASS" starttime="20201030 15:51:25.212" endtime="20201030 15:51:25.216"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:25.220" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:25.219" endtime="20201030 15:51:25.220"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:25.222" level="INFO">VALUE: [1.1736000000001773e-05, 1.0278000000002452e-05, 1.0222000000000703e-05, 1.0208000000001133e-05, 1.0263999999999412e-05, 1.0180999999997997e-05, 1.0209000000000606e-05, 1.0221999999997233e-05, 1.0207999999997663e-05, 1.0236000000000273e-05, 1.0236000000000273e-05, 1.0236000000000273e-05, 1.0276999999999509e-05, 1.0277999999998982e-05, 1.0249999999999843e-05, 1.0207999999997663e-05, 1.0222000000000703e-05, 1.0236000000000273e-05, 1.0207999999997663e-05, 1.0209000000000606e-05, 1.0236000000000273e-05, 1.0138999999999287e-05, 1.0208000000001133e-05, 1.0249999999999843e-05, 1.0222000000000703e-05, 1.0249999999999843e-05, 1.0222000000000703e-05, 1.0208000000001133e-05, 1.0208000000001133e-05, 1.0223000000000176e-05, 1.0209000000000606e-05, 1.0195000000001037e-05, 1.0209000000000606e-05, 1.0223000000000176e-05, 1.0236000000000273e-05, 1.0222000000000703e-05, 1.0222000000000703e-05, 1.0263999999999412e-05, 1.0222000000000703e-05, 1.0263999999999412e-05, 1.0223000000000176e-05, 1.0207999999997663e-05, 1.0221999999997233e-05, 1.0208000000001133e-05, 1.0236000000000273e-05, 1.0208000000001133e-05, 1.0195000000001037e-05, 1.0208000000001133e-05, 1.0193999999998093e-05, 1.0236000000000273e-05]</msg>
<status status="PASS" starttime="20201030 15:51:25.221" endtime="20201030 15:51:25.223"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.217" endtime="20201030 15:51:25.224"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:25.227" endtime="20201030 15:51:25.247"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.226" endtime="20201030 15:51:25.247"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.225" endtime="20201030 15:51:25.248"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.875" endtime="20201030 15:51:25.248"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.875" endtime="20201030 15:51:25.248"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:25.256" endtime="20201030 15:51:25.267"></status>
</kw>
<msg timestamp="20201030 15:51:25.267" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:25.254" endtime="20201030 15:51:25.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:25.270" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:25.268" endtime="20201030 15:51:25.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:25.271" endtime="20201030 15:51:25.272"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.252" endtime="20201030 15:51:25.273"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.250" endtime="20201030 15:51:25.273"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:25.280" endtime="20201030 15:51:25.565"></status>
</kw>
<msg timestamp="20201030 15:51:25.568" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019249097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019260889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:25.278" endtime="20201030 15:51:25.569"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:25.577" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019249097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019260889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:25.569" endtime="20201030 15:51:25.577"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:25.578" endtime="20201030 15:51:25.580"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.276" endtime="20201030 15:51:25.581"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.274" endtime="20201030 15:51:25.581"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:25.585" level="INFO">${RESULT} = [{'diff': 1.1792000000000052e-05}, {'diff': 1.0277999999998982e-05}, {'diff': 1.0222000000000703e-05}, {'diff': 1.0249999999999843e-05}, {'diff': 1.0193999999998093e-05}, {'diff': 1.0207999999997663e-...</msg>
<status status="PASS" starttime="20201030 15:51:25.582" endtime="20201030 15:51:25.586"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:25.589" level="INFO">${OVERHEAD} = {'diff': [1.1792000000000052e-05, 1.0277999999998982e-05, 1.0222000000000703e-05, 1.0249999999999843e-05, 1.0193999999998093e-05, 1.0207999999997663e-05, 1.0152999999998857e-05, 1.0278000000002452e-05...</msg>
<status status="PASS" starttime="20201030 15:51:25.586" endtime="20201030 15:51:25.590"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:25.594" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:25.592" endtime="20201030 15:51:25.594"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:25.596" level="INFO">VALUE: [1.1792000000000052e-05, 1.0277999999998982e-05, 1.0222000000000703e-05, 1.0249999999999843e-05, 1.0193999999998093e-05, 1.0207999999997663e-05, 1.0152999999998857e-05, 1.0278000000002452e-05, 1.0208000000001133e-05, 1.0223000000000176e-05, 1.0194999999997567e-05, 1.0236000000000273e-05, 1.0165999999998954e-05, 1.0207999999997663e-05, 1.0249999999999843e-05, 1.0208000000001133e-05, 1.0221999999997233e-05, 1.0223000000000176e-05, 1.0249999999999843e-05, 1.0194000000001563e-05, 1.0207999999997663e-05, 1.0223000000000176e-05, 1.0166999999998427e-05, 1.0221999999997233e-05, 1.0222000000000703e-05, 1.0222000000000703e-05, 1.0208000000001133e-05, 1.0209000000000606e-05, 1.0222000000000703e-05, 1.0151999999999384e-05, 1.0208000000001133e-05, 1.0235999999996803e-05, 1.0236000000000273e-05, 1.0209000000000606e-05, 1.0223000000000176e-05, 1.0208000000001133e-05, 1.0194000000001563e-05, 1.0222000000000703e-05, 1.0208000000001133e-05, 1.0209000000000606e-05, 1.0207999999997663e-05, 1.0209000000000606e-05, 1.0290999999999079e-05, 1.0222000000000703e-05, 1.0222000000000703e-05, 1.0222000000000703e-05, 1.0179999999998524e-05, 1.0222000000000703e-05, 1.0222000000000703e-05, 1.0222000000000703e-05]</msg>
<status status="PASS" starttime="20201030 15:51:25.595" endtime="20201030 15:51:25.597"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.590" endtime="20201030 15:51:25.597"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:25.601" endtime="20201030 15:51:25.620"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.599" endtime="20201030 15:51:25.621"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.598" endtime="20201030 15:51:25.621"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.249" endtime="20201030 15:51:25.622"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.248" endtime="20201030 15:51:25.622"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:17.898" endtime="20201030 15:51:25.622"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:51:17.791" endtime="20201030 15:51:25.622" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:25.629" endtime="20201030 15:51:25.649"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.628" endtime="20201030 15:51:25.649"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:25.663" endtime="20201030 15:51:25.675"></status>
</kw>
<msg timestamp="20201030 15:51:25.676" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:25.661" endtime="20201030 15:51:25.676"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:25.678" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:25.677" endtime="20201030 15:51:25.678"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:51:25.681" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:51:25.679" endtime="20201030 15:51:25.681"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:25.659" endtime="20201030 15:51:25.682"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:25.656" endtime="20201030 15:51:25.683"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.654" endtime="20201030 15:51:25.683"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:51:25.687" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:51:25.686" endtime="20201030 15:51:25.687"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.684" endtime="20201030 15:51:25.687"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.654" endtime="20201030 15:51:25.687"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.653" endtime="20201030 15:51:25.688"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:25.688" endtime="20201030 15:51:25.690"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.652" endtime="20201030 15:51:25.690"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.650" endtime="20201030 15:51:25.691"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.627" endtime="20201030 15:51:25.691"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:25.699" endtime="20201030 15:51:25.719"></status>
</kw>
<msg timestamp="20201030 15:51:25.719" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:25.698" endtime="20201030 15:51:25.720"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:25.722" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:25.721" endtime="20201030 15:51:25.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:25.724" endtime="20201030 15:51:25.725"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.695" endtime="20201030 15:51:25.726"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.693" endtime="20201030 15:51:25.726"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:25.728" endtime="20201030 15:51:25.730"></status>
</kw>
<msg timestamp="20201030 15:51:25.730" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201030 15:51:25.727" endtime="20201030 15:51:25.731"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:25.734" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 15:51:25.733" endtime="20201030 15:51:25.735"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:25.736" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 15:51:25.736" endtime="20201030 15:51:25.737"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.731" endtime="20201030 15:51:25.737"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:25.744" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 15:51:25.740" endtime="20201030 15:51:25.745"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:25.747" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 15:51:25.745" endtime="20201030 15:51:25.748"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.738" endtime="20201030 15:51:25.749"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:25.757" endtime="20201030 15:51:26.047"></status>
</kw>
<msg timestamp="20201030 15:51:26.050" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062429097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.062461903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:25.755" endtime="20201030 15:51:26.050"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:26.060" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062429097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.062461903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:26.052" endtime="20201030 15:51:26.060"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:26.061" endtime="20201030 15:51:26.063"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.752" endtime="20201030 15:51:26.063"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.750" endtime="20201030 15:51:26.064"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:26.068" level="INFO">${RESULT} = [{'diff': 3.280599999999634e-05}, {'diff': 3.186100000000802e-05}, {'diff': 3.1776999999996725e-05}, {'diff': 3.183300000000888e-05}, {'diff': 3.173599999999055e-05}, {'diff': 3.1776999999996725e-05},...</msg>
<status status="PASS" starttime="20201030 15:51:26.064" endtime="20201030 15:51:26.068"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:26.073" level="INFO">${OVERHEAD} = {'diff': [3.280599999999634e-05, 3.186100000000802e-05, 3.1776999999996725e-05, 3.183300000000888e-05, 3.173599999999055e-05, 3.1776999999996725e-05, 3.176399999998969e-05, 3.170800000000529e-05, 3.17...</msg>
<status status="PASS" starttime="20201030 15:51:26.069" endtime="20201030 15:51:26.074"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:26.079" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201030 15:51:26.078" endtime="20201030 15:51:26.080"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:26.082" level="INFO">VALUE: [3.280599999999634e-05, 3.186100000000802e-05, 3.1776999999996725e-05, 3.183300000000888e-05, 3.173599999999055e-05, 3.1776999999996725e-05, 3.176399999998969e-05, 3.170800000000529e-05, 3.176400000000357e-05, 3.168000000000615e-05, 3.1778000000010076e-05, 3.1778000000010076e-05, 3.17770000000106e-05, 3.179200000000271e-05, 3.17779999999962e-05, 3.17779999999962e-05, 3.173600000000443e-05, 3.176400000000357e-05, 3.1778000000010076e-05, 3.176400000000357e-05, 3.179200000000271e-05, 3.176400000000357e-05, 3.1750000000010936e-05, 3.172199999999792e-05, 3.1750000000010936e-05, 3.17770000000106e-05, 3.1778000000010076e-05, 3.1750000000010936e-05, 3.169499999999825e-05, 3.180599999999534e-05, 3.179200000000271e-05, 3.17779999999962e-05, 3.176400000000357e-05, 3.170900000000476e-05, 3.179199999998883e-05, 3.176399999998969e-05, 3.1763000000004094e-05, 3.179200000000271e-05, 3.1778000000010076e-05, 3.172199999999792e-05, 3.17779999999962e-05, 3.17779999999962e-05, 3.1776999999996725e-05, 3.176400000000357e-05, 3.170799999999141e-05, 3.180599999999534e-05, 3.17779999999962e-05, 3.176400000000357e-05, 3.173599999999055e-05, 3.173699999999002e-05]</msg>
<status status="PASS" starttime="20201030 15:51:26.081" endtime="20201030 15:51:26.084"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.075" endtime="20201030 15:51:26.085"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:26.089" endtime="20201030 15:51:26.109"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.088" endtime="20201030 15:51:26.111"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.086" endtime="20201030 15:51:26.112"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.692" endtime="20201030 15:51:26.112"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:51:25.624" endtime="20201030 15:51:26.113" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:26.121" endtime="20201030 15:51:26.140"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.119" endtime="20201030 15:51:26.141"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:26.154" endtime="20201030 15:51:26.166"></status>
</kw>
<msg timestamp="20201030 15:51:26.167" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:26.152" endtime="20201030 15:51:26.167"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:26.170" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:26.168" endtime="20201030 15:51:26.171"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:51:26.174" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:51:26.171" endtime="20201030 15:51:26.174"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:26.149" endtime="20201030 15:51:26.176"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:26.147" endtime="20201030 15:51:26.176"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.146" endtime="20201030 15:51:26.177"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:51:26.181" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:51:26.180" endtime="20201030 15:51:26.182"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.177" endtime="20201030 15:51:26.182"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.145" endtime="20201030 15:51:26.182"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.144" endtime="20201030 15:51:26.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:26.183" endtime="20201030 15:51:26.184"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.143" endtime="20201030 15:51:26.185"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.141" endtime="20201030 15:51:26.185"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.118" endtime="20201030 15:51:26.185"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:26.200" endtime="20201030 15:51:26.451"></status>
</kw>
<msg timestamp="20201030 15:51:26.452" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:26.196" endtime="20201030 15:51:26.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:26.460" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:26.456" endtime="20201030 15:51:26.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:26.465" endtime="20201030 15:51:26.469"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.190" endtime="20201030 15:51:26.471"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.188" endtime="20201030 15:51:26.472"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:26.477" endtime="20201030 15:51:26.480"></status>
</kw>
<msg timestamp="20201030 15:51:26.481" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201030 15:51:26.474" endtime="20201030 15:51:26.481"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:26.489" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 15:51:26.487" endtime="20201030 15:51:26.490"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:26.494" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 15:51:26.492" endtime="20201030 15:51:26.494"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.482" endtime="20201030 15:51:26.495"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:26.503" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 15:51:26.501" endtime="20201030 15:51:26.504"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:26.508" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 15:51:26.506" endtime="20201030 15:51:26.508"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.497" endtime="20201030 15:51:26.509"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:26.523" endtime="20201030 15:51:26.816"></status>
</kw>
<msg timestamp="20201030 15:51:26.819" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.077313694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.077457792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:26.520" endtime="20201030 15:51:26.819"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:26.827" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.077313694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.077457792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:26.820" endtime="20201030 15:51:26.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:26.828" endtime="20201030 15:51:26.830"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.514" endtime="20201030 15:51:26.830"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.511" endtime="20201030 15:51:26.831"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:26.834" level="INFO">${RESULT} = [{'diff': 0.00014409799999999529}, {'diff': 0.0001427769999999967}, {'diff': 0.0001427920000000027}, {'diff': 0.00014280499999999585}, {'diff': 0.00014277799999999619}, {'diff': 0.00014276400000000355...</msg>
<status status="PASS" starttime="20201030 15:51:26.831" endtime="20201030 15:51:26.835"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:26.839" level="INFO">${OVERHEAD} = {'diff': [0.00014409799999999529, 0.0001427769999999967, 0.0001427920000000027, 0.00014280499999999585, 0.00014277799999999619, 0.00014276400000000355, 0.00014277799999999619, 0.00014279100000000322, ...</msg>
<status status="PASS" starttime="20201030 15:51:26.835" endtime="20201030 15:51:26.839"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:26.844" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201030 15:51:26.843" endtime="20201030 15:51:26.844"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:26.846" level="INFO">VALUE: [0.00014409799999999529, 0.0001427769999999967, 0.0001427920000000027, 0.00014280499999999585, 0.00014277799999999619, 0.00014276400000000355, 0.00014277799999999619, 0.00014279100000000322, 0.00014277799999999619, 0.0001427920000000027, 0.0001427920000000027, 0.00014279100000000322, 0.00014274999999999705, 0.00014280599999999533, 0.00014280499999999585, 0.0001427779999999823, 0.00014276400000001743, 0.00014276399999998968, 0.00014276399999998968, 0.00014279100000000322, 0.0001427920000000027, 0.00014283300000000887, 0.0001428610000000219, 0.0001427920000000027, 0.00014277800000001006, 0.00014280599999999533, 0.0001427779999999823, 0.0001427920000000027, 0.0001427629999999902, 0.00014276400000001743, 0.00014280499999999585, 0.00014277800000001006, 0.00014273600000000441, 0.00014276399999998968, 0.00014274999999999705, 0.00014279199999997494, 0.0001427779999999823, 0.0001427779999999823, 0.0001427779999999823, 0.00014277800000001006, 0.00014280599999999533, 0.00014277800000001006, 0.00014281999999998796, 0.00014277800000001006, 0.00014279100000003098, 0.00014277800000001006, 0.00014276400000001743, 0.00014276400000001743, 0.00014276400000001743, 0.0001427500000000248]</msg>
<status status="PASS" starttime="20201030 15:51:26.845" endtime="20201030 15:51:26.847"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.840" endtime="20201030 15:51:26.847"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:26.851" endtime="20201030 15:51:26.871"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.850" endtime="20201030 15:51:26.871"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.848" endtime="20201030 15:51:26.871"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.186" endtime="20201030 15:51:26.872"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:51:26.115" endtime="20201030 15:51:26.872" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:26.879" endtime="20201030 15:51:26.898"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.878" endtime="20201030 15:51:26.899"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:26.912" endtime="20201030 15:51:26.924"></status>
</kw>
<msg timestamp="20201030 15:51:26.925" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:26.910" endtime="20201030 15:51:26.925"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:26.927" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:26.926" endtime="20201030 15:51:26.928"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:51:26.931" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:51:26.928" endtime="20201030 15:51:26.932"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:26.908" endtime="20201030 15:51:26.932"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:26.905" endtime="20201030 15:51:26.933"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.904" endtime="20201030 15:51:26.933"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:51:26.937" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:51:26.936" endtime="20201030 15:51:26.937"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.934" endtime="20201030 15:51:26.937"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.903" endtime="20201030 15:51:26.938"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.903" endtime="20201030 15:51:26.938"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:26.938" endtime="20201030 15:51:26.940"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.902" endtime="20201030 15:51:26.940"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.900" endtime="20201030 15:51:26.941"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.876" endtime="20201030 15:51:26.941"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:26.949" endtime="20201030 15:51:27.786"></status>
</kw>
<msg timestamp="20201030 15:51:27.786" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:26.948" endtime="20201030 15:51:27.787"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:27.789" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:27.788" endtime="20201030 15:51:27.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:27.791" endtime="20201030 15:51:27.793"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.945" endtime="20201030 15:51:27.793"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.943" endtime="20201030 15:51:27.794"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:27.796" endtime="20201030 15:51:27.797"></status>
</kw>
<msg timestamp="20201030 15:51:27.798" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201030 15:51:27.794" endtime="20201030 15:51:27.798"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:27.802" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 15:51:27.801" endtime="20201030 15:51:27.802"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:27.804" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 15:51:27.803" endtime="20201030 15:51:27.804"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.798" endtime="20201030 15:51:27.805"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:27.808" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 15:51:27.807" endtime="20201030 15:51:27.809"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:27.810" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 15:51:27.809" endtime="20201030 15:51:27.811"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.805" endtime="20201030 15:51:27.811"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:27.818" endtime="20201030 15:51:28.108"></status>
</kw>
<msg timestamp="20201030 15:51:28.111" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.076779069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.077047736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:27.816" endtime="20201030 15:51:28.111"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:28.119" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.076779069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.077047736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:28.112" endtime="20201030 15:51:28.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:28.120" endtime="20201030 15:51:28.123"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.814" endtime="20201030 15:51:28.123"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.812" endtime="20201030 15:51:28.124"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:28.127" level="INFO">${RESULT} = [{'diff': 0.0002686670000000002}, {'diff': 0.00026176399999999767}, {'diff': 0.00026180500000000384}, {'diff': 0.00026183300000001686}, {'diff': 0.0002617910000000112}, {'diff': 0.00026181899999999647...</msg>
<status status="PASS" starttime="20201030 15:51:28.124" endtime="20201030 15:51:28.128"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:28.132" level="INFO">${OVERHEAD} = {'diff': [0.0002686670000000002, 0.00026176399999999767, 0.00026180500000000384, 0.00026183300000001686, 0.0002617910000000112, 0.00026181899999999647, 0.00026177800000001805, 0.00026180500000000384, ...</msg>
<status status="PASS" starttime="20201030 15:51:28.128" endtime="20201030 15:51:28.132"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:28.137" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201030 15:51:28.136" endtime="20201030 15:51:28.137"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:28.139" level="INFO">VALUE: [0.0002686670000000002, 0.00026176399999999767, 0.00026180500000000384, 0.00026183300000001686, 0.0002617910000000112, 0.00026181899999999647, 0.00026177800000001805, 0.00026180500000000384, 0.00026180500000000384, 0.00026181899999999647, 0.00026176399999999767, 0.00026184699999998173, 0.00026176300000002595, 0.0002617780000000458, 0.00026179200000003844, 0.00026176300000002595, 0.00026175000000000503, 0.00026176399999999767, 0.0002617770000000186, 0.00026183400000001633, 0.00026176399999999767, 0.00026179199999998293, 0.00026175000000000503, 0.00026175000000000503, 0.0002617360000000124, 0.00026176299999997044, 0.0002617779999999348, 0.00026176399999999767, 0.0002617780000000458, 0.0002617780000000458, 0.00026176399999999767, 0.0002617780000000458, 0.0002617779999999348, 0.00026176399999999767, 0.00026175000000006055, 0.0002617780000000458, 0.00026179199999998293, 0.0002617780000000458, 0.000261722999999936, 0.0002617499999999495, 0.0002617499999999495, 0.0002617910000000112, 0.0002617360000000124, 0.0002617779999999348, 0.0002617499999999495, 0.00026184699999998173, 0.00026175000000006055, 0.00026170800000002714, 0.00026176399999999767, 0.0002617499999999495]</msg>
<status status="PASS" starttime="20201030 15:51:28.138" endtime="20201030 15:51:28.140"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.133" endtime="20201030 15:51:28.141"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:28.145" endtime="20201030 15:51:28.164"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.143" endtime="20201030 15:51:28.165"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.142" endtime="20201030 15:51:28.166"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.942" endtime="20201030 15:51:28.166"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:51:26.874" endtime="20201030 15:51:28.167" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:28.175" endtime="20201030 15:51:28.195"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.173" endtime="20201030 15:51:28.195"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:28.209" endtime="20201030 15:51:28.221"></status>
</kw>
<msg timestamp="20201030 15:51:28.222" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:28.207" endtime="20201030 15:51:28.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:28.224" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:28.223" endtime="20201030 15:51:28.224"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:51:28.227" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:51:28.225" endtime="20201030 15:51:28.227"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:28.205" endtime="20201030 15:51:28.228"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:28.203" endtime="20201030 15:51:28.228"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.201" endtime="20201030 15:51:28.229"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:51:28.233" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:51:28.232" endtime="20201030 15:51:28.233"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.230" endtime="20201030 15:51:28.233"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.199" endtime="20201030 15:51:28.234"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.199" endtime="20201030 15:51:28.234"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:28.234" endtime="20201030 15:51:28.236"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.197" endtime="20201030 15:51:28.236"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.196" endtime="20201030 15:51:28.237"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.172" endtime="20201030 15:51:28.237"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:28.245" endtime="20201030 15:51:28.266"></status>
</kw>
<msg timestamp="20201030 15:51:28.267" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:28.244" endtime="20201030 15:51:28.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:28.269" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:28.268" endtime="20201030 15:51:28.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:28.271" endtime="20201030 15:51:28.272"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.241" endtime="20201030 15:51:28.273"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.239" endtime="20201030 15:51:28.273"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:28.275" endtime="20201030 15:51:28.277"></status>
</kw>
<msg timestamp="20201030 15:51:28.277" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201030 15:51:28.274" endtime="20201030 15:51:28.277"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:28.282" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 15:51:28.281" endtime="20201030 15:51:28.282"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:28.284" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 15:51:28.283" endtime="20201030 15:51:28.284"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.278" endtime="20201030 15:51:28.284"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:28.289" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 15:51:28.288" endtime="20201030 15:51:28.290"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:28.292" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 15:51:28.291" endtime="20201030 15:51:28.292"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.285" endtime="20201030 15:51:28.292"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:28.299" endtime="20201030 15:51:28.584"></status>
</kw>
<msg timestamp="20201030 15:51:28.587" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063249278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.063255222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:28.297" endtime="20201030 15:51:28.587"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:28.595" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063249278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.063255222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:28.588" endtime="20201030 15:51:28.596"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:28.597" endtime="20201030 15:51:28.598"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.295" endtime="20201030 15:51:28.599"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.293" endtime="20201030 15:51:28.599"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:28.603" level="INFO">${RESULT} = [{'diff': 5.943999999993843e-06}, {'diff': 5.834000000010109e-06}, {'diff': 5.8190000000041264e-06}, {'diff': 5.79200000000446e-06}, {'diff': 5.847000000003266e-06}, {'diff': 5.860999999995897e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:51:28.600" endtime="20201030 15:51:28.603"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:28.607" level="INFO">${OVERHEAD} = {'diff': [5.943999999993843e-06, 5.834000000010109e-06, 5.8190000000041264e-06, 5.79200000000446e-06, 5.847000000003266e-06, 5.860999999995897e-06, 5.8329999999967574e-06, 5.860999999995897e-06, 5.861...</msg>
<status status="PASS" starttime="20201030 15:51:28.604" endtime="20201030 15:51:28.607"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:28.612" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201030 15:51:28.611" endtime="20201030 15:51:28.613"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:28.615" level="INFO">VALUE: [5.943999999993843e-06, 5.834000000010109e-06, 5.8190000000041264e-06, 5.79200000000446e-06, 5.847000000003266e-06, 5.860999999995897e-06, 5.8329999999967574e-06, 5.860999999995897e-06, 5.861000000009775e-06, 5.860999999995897e-06, 5.8329999999967574e-06, 5.860999999995897e-06, 5.875000000002406e-06, 5.860999999995897e-06, 5.861999999995371e-06, 5.860999999995897e-06, 5.861000000009775e-06, 5.861000000009775e-06, 5.84800000000274e-06, 5.874999999988528e-06, 5.860999999995897e-06, 5.84800000000274e-06, 5.931000000000686e-06, 5.84800000000274e-06, 5.875000000002406e-06, 5.847000000003266e-06, 5.860999999995897e-06, 5.861000000009775e-06, 5.847000000003266e-06, 5.875000000002406e-06, 5.903000000001546e-06, 5.833000000010635e-06, 5.860999999995897e-06, 5.860999999995897e-06, 5.861000000009775e-06, 5.847000000003266e-06, 5.860999999995897e-06, 5.861000000009775e-06, 5.861999999995371e-06, 5.860999999995897e-06, 5.8329999999967574e-06, 5.875000000002406e-06, 5.860999999995897e-06, 5.84800000000274e-06, 5.847000000003266e-06, 5.860999999995897e-06, 5.847000000003266e-06, 5.847999999988862e-06, 5.818999999990249e-06, 5.84800000000274e-06]</msg>
<status status="PASS" starttime="20201030 15:51:28.614" endtime="20201030 15:51:28.616"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.608" endtime="20201030 15:51:28.616"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:28.620" endtime="20201030 15:51:28.639"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.618" endtime="20201030 15:51:28.640"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.617" endtime="20201030 15:51:28.640"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.238" endtime="20201030 15:51:28.640"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:51:28.169" endtime="20201030 15:51:28.641" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:28.648" endtime="20201030 15:51:28.667"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.646" endtime="20201030 15:51:28.668"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:28.681" endtime="20201030 15:51:28.693"></status>
</kw>
<msg timestamp="20201030 15:51:28.693" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:28.679" endtime="20201030 15:51:28.694"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:28.696" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:28.694" endtime="20201030 15:51:28.696"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:51:28.699" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:51:28.697" endtime="20201030 15:51:28.699"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:28.676" endtime="20201030 15:51:28.700"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:28.674" endtime="20201030 15:51:28.700"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.673" endtime="20201030 15:51:28.701"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:51:28.704" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:51:28.704" endtime="20201030 15:51:28.705"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.701" endtime="20201030 15:51:28.705"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.672" endtime="20201030 15:51:28.705"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.671" endtime="20201030 15:51:28.705"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:28.706" endtime="20201030 15:51:28.707"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.670" endtime="20201030 15:51:28.708"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.668" endtime="20201030 15:51:28.708"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.645" endtime="20201030 15:51:28.709"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:28.718" endtime="20201030 15:51:28.963"></status>
</kw>
<msg timestamp="20201030 15:51:28.964" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:28.717" endtime="20201030 15:51:28.964"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:28.966" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:28.965" endtime="20201030 15:51:28.967"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:28.968" endtime="20201030 15:51:28.969"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.713" endtime="20201030 15:51:28.970"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.711" endtime="20201030 15:51:28.970"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:28.973" endtime="20201030 15:51:28.974"></status>
</kw>
<msg timestamp="20201030 15:51:28.975" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201030 15:51:28.971" endtime="20201030 15:51:28.975"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:28.979" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 15:51:28.978" endtime="20201030 15:51:28.979"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:28.981" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 15:51:28.980" endtime="20201030 15:51:28.981"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.975" endtime="20201030 15:51:28.982"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:28.985" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 15:51:28.984" endtime="20201030 15:51:28.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:28.987" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 15:51:28.987" endtime="20201030 15:51:28.988"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.982" endtime="20201030 15:51:28.988"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:28.995" endtime="20201030 15:51:29.292"></status>
</kw>
<msg timestamp="20201030 15:51:29.295" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067725708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067759222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:28.993" endtime="20201030 15:51:29.295"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:29.302" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067725708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067759222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:29.296" endtime="20201030 15:51:29.303"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:29.304" endtime="20201030 15:51:29.305"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.991" endtime="20201030 15:51:29.306"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.989" endtime="20201030 15:51:29.306"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:29.310" level="INFO">${RESULT} = [{'diff': 3.351399999999838e-05}, {'diff': 3.348599999999924e-05}, {'diff': 3.347199999999273e-05}, {'diff': 3.347199999999273e-05}, {'diff': 3.344399999999359e-05}, {'diff': 3.347199999999273e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:51:29.307" endtime="20201030 15:51:29.310"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:29.315" level="INFO">${OVERHEAD} = {'diff': [3.351399999999838e-05, 3.348599999999924e-05, 3.347199999999273e-05, 3.347199999999273e-05, 3.344399999999359e-05, 3.347199999999273e-05, 3.344500000000694e-05, 3.343100000000043e-05, 3.3445...</msg>
<status status="PASS" starttime="20201030 15:51:29.311" endtime="20201030 15:51:29.315"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:29.319" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201030 15:51:29.318" endtime="20201030 15:51:29.320"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:29.322" level="INFO">VALUE: [3.351399999999838e-05, 3.348599999999924e-05, 3.347199999999273e-05, 3.347199999999273e-05, 3.344399999999359e-05, 3.347199999999273e-05, 3.344500000000694e-05, 3.343100000000043e-05, 3.344500000000694e-05, 3.345899999999957e-05, 3.34580000000001e-05, 3.34580000000001e-05, 3.345899999999957e-05, 3.3458000000013977e-05, 3.344399999999359e-05, 3.3444999999993064e-05, 3.3458999999985695e-05, 3.344399999999359e-05, 3.349999999999187e-05, 3.345799999998622e-05, 3.3458000000013977e-05, 3.3458999999985695e-05, 3.3458999999985695e-05, 3.344399999999359e-05, 3.348699999999871e-05, 3.3458000000013977e-05, 3.3444999999993064e-05, 3.3458999999985695e-05, 3.35139999999845e-05, 3.34170000000078e-05, 3.345900000001345e-05, 3.347199999997885e-05, 3.3458999999985695e-05, 3.345900000001345e-05, 3.345900000001345e-05, 3.347200000000661e-05, 3.3458000000013977e-05, 3.3388999999994784e-05, 3.345799999998622e-05, 3.3458000000013977e-05, 3.347200000000661e-05, 3.347199999997885e-05, 3.344399999999359e-05, 3.345799999998622e-05, 3.345799999998622e-05, 3.347199999997885e-05, 3.3499999999964114e-05, 3.345800000004173e-05, 3.345799999998622e-05, 3.344500000002082e-05]</msg>
<status status="PASS" starttime="20201030 15:51:29.321" endtime="20201030 15:51:29.328"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:29.316" endtime="20201030 15:51:29.329"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:29.333" endtime="20201030 15:51:29.352"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:29.331" endtime="20201030 15:51:29.353"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:29.330" endtime="20201030 15:51:29.353"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.709" endtime="20201030 15:51:29.353"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:51:28.643" endtime="20201030 15:51:29.354" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:29.360" endtime="20201030 15:51:29.381"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:29.359" endtime="20201030 15:51:29.382"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:29.396" endtime="20201030 15:51:29.410"></status>
</kw>
<msg timestamp="20201030 15:51:29.410" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:29.395" endtime="20201030 15:51:29.410"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:29.413" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:29.411" endtime="20201030 15:51:29.414"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:51:29.419" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:51:29.415" endtime="20201030 15:51:29.419"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:29.391" endtime="20201030 15:51:29.420"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:29.388" endtime="20201030 15:51:29.420"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:29.387" endtime="20201030 15:51:29.421"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:51:29.424" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:51:29.424" endtime="20201030 15:51:29.425"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:29.422" endtime="20201030 15:51:29.425"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:29.386" endtime="20201030 15:51:29.425"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:29.385" endtime="20201030 15:51:29.425"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:29.426" endtime="20201030 15:51:29.428"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:29.384" endtime="20201030 15:51:29.428"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:29.382" endtime="20201030 15:51:29.429"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:29.358" endtime="20201030 15:51:29.429"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:29.437" endtime="20201030 15:51:30.282"></status>
</kw>
<msg timestamp="20201030 15:51:30.283" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:29.436" endtime="20201030 15:51:30.283"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:30.288" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:30.285" endtime="20201030 15:51:30.289"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:30.291" endtime="20201030 15:51:30.295"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:29.433" endtime="20201030 15:51:30.296"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:29.431" endtime="20201030 15:51:30.297"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:30.301" endtime="20201030 15:51:30.304"></status>
</kw>
<msg timestamp="20201030 15:51:30.305" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201030 15:51:30.298" endtime="20201030 15:51:30.306"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:30.314" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 15:51:30.312" endtime="20201030 15:51:30.314"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:30.318" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 15:51:30.316" endtime="20201030 15:51:30.319"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.307" endtime="20201030 15:51:30.320"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:30.328" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 15:51:30.326" endtime="20201030 15:51:30.328"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:30.332" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 15:51:30.330" endtime="20201030 15:51:30.333"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.321" endtime="20201030 15:51:30.334"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:30.347" endtime="20201030 15:51:30.649"></status>
</kw>
<msg timestamp="20201030 15:51:30.652" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.084009417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.084070972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:30.344" endtime="20201030 15:51:30.652"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:30.660" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.084009417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.084070972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:30.653" endtime="20201030 15:51:30.660"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:30.661" endtime="20201030 15:51:30.662"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.339" endtime="20201030 15:51:30.663"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.335" endtime="20201030 15:51:30.663"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:30.667" level="INFO">${RESULT} = [{'diff': 6.155499999999092e-05}, {'diff': 6.147200000000685e-05}, {'diff': 6.149999999999212e-05}, {'diff': 6.147200000000685e-05}, {'diff': 6.14719999999791e-05}, {'diff': 6.150000000001987e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:51:30.664" endtime="20201030 15:51:30.667"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:30.671" level="INFO">${OVERHEAD} = {'diff': [6.155499999999092e-05, 6.147200000000685e-05, 6.149999999999212e-05, 6.147200000000685e-05, 6.14719999999791e-05, 6.150000000001987e-05, 6.148599999999949e-05, 6.151399999998475e-05, 6.14999...</msg>
<status status="PASS" starttime="20201030 15:51:30.668" endtime="20201030 15:51:30.671"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:30.676" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201030 15:51:30.675" endtime="20201030 15:51:30.676"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:30.678" level="INFO">VALUE: [6.155499999999092e-05, 6.147200000000685e-05, 6.149999999999212e-05, 6.147200000000685e-05, 6.14719999999791e-05, 6.150000000001987e-05, 6.148599999999949e-05, 6.151399999998475e-05, 6.149999999999212e-05, 6.15140000000125e-05, 6.147200000000685e-05, 6.149999999999212e-05, 6.14869999999712e-05, 6.141700000000805e-05, 6.147200000000685e-05, 6.154200000002552e-05, 6.148599999999949e-05, 6.148599999999949e-05, 6.149999999999212e-05, 6.147200000000685e-05, 6.149999999999212e-05, 6.149999999999212e-05, 6.149999999999212e-05, 6.148599999999949e-05, 6.151399999998475e-05, 6.149999999999212e-05, 6.152800000003289e-05, 6.148599999999949e-05, 6.150000000004763e-05, 6.14999999999366e-05, 6.150000000004763e-05, 6.148599999999949e-05, 6.148599999999949e-05, 6.148599999999949e-05, 6.151399999998475e-05, 6.150000000004763e-05, 6.148599999999949e-05, 6.14999999999366e-05, 6.152700000006117e-05, 6.150000000004763e-05, 6.140300000001542e-05, 6.147200000006237e-05, 6.147200000006237e-05, 6.148599999999949e-05, 6.148599999999949e-05, 6.150000000004763e-05, 6.152699999995015e-05, 6.150000000004763e-05, 6.14999999999366e-05, 6.150000000004763e-05]</msg>
<status status="PASS" starttime="20201030 15:51:30.677" endtime="20201030 15:51:30.679"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.672" endtime="20201030 15:51:30.679"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:30.683" endtime="20201030 15:51:30.702"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.682" endtime="20201030 15:51:30.703"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.680" endtime="20201030 15:51:30.703"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:29.429" endtime="20201030 15:51:30.704"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:51:29.355" endtime="20201030 15:51:30.704" critical="yes"></status>
</test>
<test id="s1-s2-t9" name="Measure Add Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:30.711" endtime="20201030 15:51:30.730"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.709" endtime="20201030 15:51:30.731"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:30.744" endtime="20201030 15:51:30.756"></status>
</kw>
<msg timestamp="20201030 15:51:30.757" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:30.743" endtime="20201030 15:51:30.757"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:30.759" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:30.758" endtime="20201030 15:51:30.760"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:51:30.762" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:51:30.761" endtime="20201030 15:51:30.763"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:30.740" endtime="20201030 15:51:30.763"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:30.738" endtime="20201030 15:51:30.764"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.736" endtime="20201030 15:51:30.764"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:51:30.768" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:51:30.767" endtime="20201030 15:51:30.768"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.765" endtime="20201030 15:51:30.768"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.735" endtime="20201030 15:51:30.769"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.734" endtime="20201030 15:51:30.769"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:30.769" endtime="20201030 15:51:30.771"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.733" endtime="20201030 15:51:30.771"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.731" endtime="20201030 15:51:30.772"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.708" endtime="20201030 15:51:30.772"></status>
</kw>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 15:51:30.775" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 15:51:30.784" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 15:51:32.045" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 15:51:30.774" endtime="20201030 15:51:32.045"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 15:51:32.048" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 15:51:32.047" endtime="20201030 15:51:32.048"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.773" endtime="20201030 15:51:32.049"></status>
</kw>
<kw name="${n} IN RANGE [ 1 | 51 ]" type="for">
<kw name="${n} = 1" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:32.059" endtime="20201030 15:51:32.066"></status>
</kw>
<msg timestamp="20201030 15:51:32.067" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:32.057" endtime="20201030 15:51:32.067"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:32.069" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:32.068" endtime="20201030 15:51:32.070"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:32.070" endtime="20201030 15:51:32.072"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.054" endtime="20201030 15:51:32.073"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.052" endtime="20201030 15:51:32.073"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:32.081" endtime="20201030 15:51:32.377"></status>
</kw>
<msg timestamp="20201030 15:51:32.380" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.909815639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.238700319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:32.078" endtime="20201030 15:51:32.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:32.390" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.909815639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.238700319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:32.382" endtime="20201030 15:51:32.390"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:32.391" endtime="20201030 15:51:32.393"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.075" endtime="20201030 15:51:32.393"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.074" endtime="20201030 15:51:32.394"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:32.398" level="INFO">${PHILIP_RES} = [{'diff': 0.32888468000000015}, {'diff': 3.4069999999886136e-05}, {'diff': 3.165299999996485e-05}, {'diff': 3.1638999999916706e-05}, {'diff': 3.1666000000152295e-05}, {'diff': 3.1638999999916706e-05},...</msg>
<status status="PASS" starttime="20201030 15:51:32.394" endtime="20201030 15:51:32.398"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:32.402" level="INFO">${RESULT} = {'diff': [0.32888468000000015, 3.4069999999886136e-05, 3.165299999996485e-05, 3.1638999999916706e-05, 3.1666000000152295e-05, 3.1638999999916706e-05, 3.162500000009061e-05, 3.1596999999994324e-05, 3.1...</msg>
<status status="PASS" starttime="20201030 15:51:32.399" endtime="20201030 15:51:32.402"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:32.406" level="INFO">NAME: 1-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:32.405" endtime="20201030 15:51:32.407"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:32.409" level="INFO">VALUE: [0.32888468000000015, 3.4069999999886136e-05, 3.165299999996485e-05, 3.1638999999916706e-05, 3.1666000000152295e-05, 3.1638999999916706e-05, 3.162500000009061e-05, 3.1596999999994324e-05, 3.165299999996485e-05, 3.165299999996485e-05, 3.167999999997839e-05, 3.1638999999916706e-05, 3.1624999999868564e-05, 3.1596999999994324e-05, 3.165299999996485e-05, 3.165299999996485e-05, 3.1666000000152295e-05, 3.162500000009061e-05, 3.1611000000042466e-05, 3.166700000001299e-05, 3.162500000009061e-05, 3.166700000001299e-05, 3.166700000001299e-05, 3.162500000009061e-05, 3.165299999996485e-05, 3.165299999996485e-05, 3.165299999996485e-05, 3.163900000013875e-05, 3.163900000013875e-05, 3.165299999996485e-05, 3.165299999996485e-05, 3.1624999999868564e-05, 3.1638999999916706e-05, 3.1638999999916706e-05, 3.165299999996485e-05, 3.1666000000152295e-05, 3.165299999996485e-05, 3.1638999999916706e-05, 3.165299999996485e-05, 3.1638999999916706e-05, 3.166700000001299e-05, 3.1624999999868564e-05, 3.166700000001299e-05, 3.1611000000042466e-05, 3.163900000013875e-05, 3.165199999988211e-05, 3.1596999999994324e-05, 3.165200000010415e-05, 3.1638999999916706e-05, 3.1666000000152295e-05, 3.165299999996485e-05]</msg>
<status status="PASS" starttime="20201030 15:51:32.407" endtime="20201030 15:51:32.409"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.403" endtime="20201030 15:51:32.410"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:32.413" endtime="20201030 15:51:32.433"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.412" endtime="20201030 15:51:32.436"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.411" endtime="20201030 15:51:32.436"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.050" endtime="20201030 15:51:32.436"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.050" endtime="20201030 15:51:32.436"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:32.448" endtime="20201030 15:51:32.457"></status>
</kw>
<msg timestamp="20201030 15:51:32.458" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:32.446" endtime="20201030 15:51:32.458"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:32.461" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:32.459" endtime="20201030 15:51:32.461"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:32.462" endtime="20201030 15:51:32.464"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.442" endtime="20201030 15:51:32.465"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.439" endtime="20201030 15:51:32.466"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:32.473" endtime="20201030 15:51:32.758"></status>
</kw>
<msg timestamp="20201030 15:51:32.761" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023946694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024005625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:32.472" endtime="20201030 15:51:32.762"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:32.770" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023946694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024005625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:32.763" endtime="20201030 15:51:32.770"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:32.771" endtime="20201030 15:51:32.772"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.469" endtime="20201030 15:51:32.773"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.467" endtime="20201030 15:51:32.773"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:32.777" level="INFO">${PHILIP_RES} = [{'diff': 5.893099999999818e-05}, {'diff': 5.6485999999997955e-05}, {'diff': 5.65549999999998e-05}, {'diff': 5.6555999999999274e-05}, {'diff': 5.658399999999841e-05}, {'diff': 5.656900000000284e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:51:32.774" endtime="20201030 15:51:32.777"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:32.781" level="INFO">${RESULT} = {'diff': [5.893099999999818e-05, 5.6485999999997955e-05, 5.65549999999998e-05, 5.6555999999999274e-05, 5.658399999999841e-05, 5.656900000000284e-05, 5.656899999999937e-05, 5.6528000000000134e-05, 5.65...</msg>
<status status="PASS" starttime="20201030 15:51:32.778" endtime="20201030 15:51:32.781"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:32.786" level="INFO">NAME: 2-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:32.785" endtime="20201030 15:51:32.787"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:32.789" level="INFO">VALUE: [5.893099999999818e-05, 5.6485999999997955e-05, 5.65549999999998e-05, 5.6555999999999274e-05, 5.658399999999841e-05, 5.656900000000284e-05, 5.656899999999937e-05, 5.6528000000000134e-05, 5.6569999999998843e-05, 5.661100000000155e-05, 5.6555999999999274e-05, 5.65549999999998e-05, 5.658400000000188e-05, 5.6555999999999274e-05, 5.6569999999998843e-05, 5.661100000000155e-05, 5.656899999999937e-05, 5.6569999999998843e-05, 5.657000000000231e-05, 5.662500000000112e-05, 5.656899999999937e-05, 5.656899999999937e-05, 5.6569999999998843e-05, 5.657000000000231e-05, 5.6486000000001424e-05, 5.656899999999937e-05, 5.658300000000241e-05, 5.656899999999937e-05, 5.6569999999998843e-05, 5.65549999999998e-05, 5.658299999999894e-05, 5.656900000000284e-05, 5.658399999999841e-05, 5.6569999999998843e-05, 5.65549999999998e-05, 5.658299999999894e-05, 5.6528000000000134e-05, 5.659699999999851e-05, 5.6500000000000994e-05, 5.6541999999999704e-05, 5.6569999999998843e-05, 5.6555999999999274e-05, 5.651300000000109e-05, 5.658300000000241e-05, 5.658399999999841e-05, 5.6555999999999274e-05, 5.662499999999765e-05, 5.65549999999998e-05, 5.658300000000241e-05, 5.6555999999999274e-05]</msg>
<status status="PASS" starttime="20201030 15:51:32.787" endtime="20201030 15:51:32.789"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.782" endtime="20201030 15:51:32.790"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:32.793" endtime="20201030 15:51:32.813"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.792" endtime="20201030 15:51:32.813"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.791" endtime="20201030 15:51:32.814"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.437" endtime="20201030 15:51:32.814"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.437" endtime="20201030 15:51:32.814"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:32.822" endtime="20201030 15:51:32.833"></status>
</kw>
<msg timestamp="20201030 15:51:32.834" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:32.821" endtime="20201030 15:51:32.834"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:32.836" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:32.835" endtime="20201030 15:51:32.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:32.837" endtime="20201030 15:51:32.839"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.818" endtime="20201030 15:51:32.839"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.817" endtime="20201030 15:51:32.839"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:32.846" endtime="20201030 15:51:33.132"></status>
</kw>
<msg timestamp="20201030 15:51:33.135" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018667472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018753736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:32.844" endtime="20201030 15:51:33.135"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:33.143" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018667472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018753736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:33.136" endtime="20201030 15:51:33.143"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:33.144" endtime="20201030 15:51:33.146"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.842" endtime="20201030 15:51:33.146"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.840" endtime="20201030 15:51:33.146"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:33.150" level="INFO">${PHILIP_RES} = [{'diff': 8.626399999999909e-05}, {'diff': 8.384700000000148e-05}, {'diff': 8.390299999999976e-05}, {'diff': 8.395799999999856e-05}, {'diff': 8.390299999999976e-05}, {'diff': 8.390299999999976e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:51:33.147" endtime="20201030 15:51:33.151"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:33.155" level="INFO">${RESULT} = {'diff': [8.626399999999909e-05, 8.384700000000148e-05, 8.390299999999976e-05, 8.395799999999856e-05, 8.390299999999976e-05, 8.390299999999976e-05, 8.390200000000028e-05, 8.395899999999804e-05, 8.3916...</msg>
<status status="PASS" starttime="20201030 15:51:33.151" endtime="20201030 15:51:33.156"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:33.160" level="INFO">NAME: 3-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:33.159" endtime="20201030 15:51:33.160"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:33.162" level="INFO">VALUE: [8.626399999999909e-05, 8.384700000000148e-05, 8.390299999999976e-05, 8.395799999999856e-05, 8.390299999999976e-05, 8.390299999999976e-05, 8.390200000000028e-05, 8.395899999999804e-05, 8.391699999999933e-05, 8.394400000000246e-05, 8.391699999999933e-05, 8.395799999999856e-05, 8.391699999999933e-05, 8.391699999999933e-05, 8.392999999999942e-05, 8.391699999999933e-05, 8.390200000000028e-05, 8.390299999999976e-05, 8.395800000000203e-05, 8.394399999999899e-05, 8.39309999999989e-05, 8.391599999999985e-05, 8.393100000000236e-05, 8.383400000000138e-05, 8.391599999999985e-05, 8.388900000000019e-05, 8.391699999999933e-05, 8.390200000000028e-05, 8.39170000000028e-05, 8.387500000000062e-05, 8.388800000000071e-05, 8.397300000000107e-05, 8.391699999999933e-05, 8.390200000000028e-05, 8.386100000000105e-05, 8.394399999999899e-05, 8.39309999999989e-05, 8.394400000000246e-05, 8.390200000000028e-05, 8.391699999999933e-05, 8.388900000000019e-05, 8.391599999999985e-05, 8.391699999999933e-05, 8.39170000000028e-05, 8.388900000000019e-05, 8.390299999999976e-05, 8.390299999999976e-05, 8.390299999999976e-05, 8.393100000000236e-05, 8.394399999999899e-05]</msg>
<status status="PASS" starttime="20201030 15:51:33.161" endtime="20201030 15:51:33.163"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.156" endtime="20201030 15:51:33.163"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:33.167" endtime="20201030 15:51:33.186"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.166" endtime="20201030 15:51:33.187"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.164" endtime="20201030 15:51:33.187"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.815" endtime="20201030 15:51:33.188"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.815" endtime="20201030 15:51:33.188"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:33.196" endtime="20201030 15:51:33.208"></status>
</kw>
<msg timestamp="20201030 15:51:33.209" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:33.195" endtime="20201030 15:51:33.209"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:33.211" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:33.210" endtime="20201030 15:51:33.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:33.212" endtime="20201030 15:51:33.214"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.192" endtime="20201030 15:51:33.215"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.190" endtime="20201030 15:51:33.215"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:33.221" endtime="20201030 15:51:33.508"></status>
</kw>
<msg timestamp="20201030 15:51:33.511" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018368917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018485042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:33.220" endtime="20201030 15:51:33.511"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:33.519" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018368917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018485042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:33.512" endtime="20201030 15:51:33.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:33.520" endtime="20201030 15:51:33.522"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.217" endtime="20201030 15:51:33.522"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.216" endtime="20201030 15:51:33.523"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:33.526" level="INFO">${PHILIP_RES} = [{'diff': 0.00011612500000000164}, {'diff': 0.00011366700000000132}, {'diff': 0.00011376400000000231}, {'diff': 0.0001137359999999997}, {'diff': 0.0001137359999999997}, {'diff': 0.00011374999999999927...</msg>
<status status="PASS" starttime="20201030 15:51:33.523" endtime="20201030 15:51:33.527"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:33.530" level="INFO">${RESULT} = {'diff': [0.00011612500000000164, 0.00011366700000000132, 0.00011376400000000231, 0.0001137359999999997, 0.0001137359999999997, 0.00011374999999999927, 0.0001137359999999997, 0.0001137359999999997, 0....</msg>
<status status="PASS" starttime="20201030 15:51:33.527" endtime="20201030 15:51:33.531"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:33.534" level="INFO">NAME: 4-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:33.533" endtime="20201030 15:51:33.535"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:33.537" level="INFO">VALUE: [0.00011612500000000164, 0.00011366700000000132, 0.00011376400000000231, 0.0001137359999999997, 0.0001137359999999997, 0.00011374999999999927, 0.0001137359999999997, 0.0001137359999999997, 0.0001137359999999997, 0.00011375000000000274, 0.00011374999999999927, 0.00011374999999999927, 0.00011374999999999927, 0.00011374999999999927, 0.00011376399999999884, 0.00011376399999999884, 0.0001137359999999997, 0.00011376399999999884, 0.00011374999999999927, 0.00011377800000000188, 0.00011374999999999927, 0.00011374999999999927, 0.00011376299999999936, 0.00011377800000000188, 0.00011376399999999884, 0.00011377800000000188, 0.00011375000000000274, 0.00011374999999999927, 0.00011374999999999927, 0.00011370800000000056, 0.00011377799999999841, 0.00011379200000000145, 0.00011370800000000056, 0.0001137359999999997, 0.0001137359999999997, 0.00011373699999999917, 0.00011374999999999927, 0.00011376399999999884, 0.00011374999999999927, 0.0001137359999999997, 0.00011376399999999884, 0.00011379199999999798, 0.00011374999999999927, 0.00011368100000000089, 0.0001137359999999997, 0.00011375000000000274, 0.00011376399999999884, 0.00011376399999999884, 0.00011374999999999927, 0.0001137359999999997]</msg>
<status status="PASS" starttime="20201030 15:51:33.536" endtime="20201030 15:51:33.538"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.531" endtime="20201030 15:51:33.538"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:33.542" endtime="20201030 15:51:33.561"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.540" endtime="20201030 15:51:33.562"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.539" endtime="20201030 15:51:33.562"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.189" endtime="20201030 15:51:33.562"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.188" endtime="20201030 15:51:33.563"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:33.571" endtime="20201030 15:51:33.586"></status>
</kw>
<msg timestamp="20201030 15:51:33.586" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:33.569" endtime="20201030 15:51:33.586"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:33.589" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:33.587" endtime="20201030 15:51:33.589"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:33.590" endtime="20201030 15:51:33.591"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.567" endtime="20201030 15:51:33.592"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.565" endtime="20201030 15:51:33.592"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:33.599" endtime="20201030 15:51:33.885"></status>
</kw>
<msg timestamp="20201030 15:51:33.888" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019167722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019316208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:33.597" endtime="20201030 15:51:33.888"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:33.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019167722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019316208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:33.889" endtime="20201030 15:51:33.896"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:33.897" endtime="20201030 15:51:33.898"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.595" endtime="20201030 15:51:33.899"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.593" endtime="20201030 15:51:33.899"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:33.903" level="INFO">${PHILIP_RES} = [{'diff': 0.00014848599999999976}, {'diff': 0.00014606900000000214}, {'diff': 0.00014609800000000076}, {'diff': 0.00014612500000000042}, {'diff': 0.00014609700000000128}, {'diff': 0.000146139}, {'diff...</msg>
<status status="PASS" starttime="20201030 15:51:33.900" endtime="20201030 15:51:33.903"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:33.907" level="INFO">${RESULT} = {'diff': [0.00014848599999999976, 0.00014606900000000214, 0.00014609800000000076, 0.00014612500000000042, 0.00014609700000000128, 0.000146139, 0.00014611100000000085, 0.00014612500000000042, 0.0001461...</msg>
<status status="PASS" starttime="20201030 15:51:33.904" endtime="20201030 15:51:33.907"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:33.911" level="INFO">NAME: 5-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:33.910" endtime="20201030 15:51:33.912"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:33.914" level="INFO">VALUE: [0.00014848599999999976, 0.00014606900000000214, 0.00014609800000000076, 0.00014612500000000042, 0.00014609700000000128, 0.000146139, 0.00014611100000000085, 0.00014612500000000042, 0.00014612500000000042, 0.00014611100000000085, 0.00014611100000000085, 0.00014611200000000032, 0.00014616599999999966, 0.000146139, 0.00014612500000000042, 0.00014612500000000042, 0.00014611099999999738, 0.00014613799999999705, 0.000146139, 0.00014615299999999956, 0.0001460969999999978, 0.00014609700000000128, 0.00014612499999999695, 0.00014611100000000085, 0.00014608299999999824, 0.00014609700000000128, 0.00014611100000000085, 0.00014609799999999729, 0.00014606900000000214, 0.00014612499999999695, 0.0001460830000000017, 0.00014611099999999738, 0.00014608299999999824, 0.00014612500000000042, 0.0001460969999999978, 0.00014611100000000085, 0.00014609799999999729, 0.0001460830000000017, 0.00014608399999999772, 0.00014606900000000214, 0.00014609800000000076, 0.00014609700000000128, 0.00014609700000000128, 0.00014611099999999738, 0.00014609700000000128, 0.0001461520000000001, 0.00014609700000000128, 0.00014611100000000085, 0.00014608299999999824, 0.00014611100000000085]</msg>
<status status="PASS" starttime="20201030 15:51:33.913" endtime="20201030 15:51:33.915"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.908" endtime="20201030 15:51:33.916"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:33.920" endtime="20201030 15:51:33.939"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.918" endtime="20201030 15:51:33.940"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.917" endtime="20201030 15:51:33.940"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.563" endtime="20201030 15:51:33.940"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.563" endtime="20201030 15:51:33.940"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:33.949" endtime="20201030 15:51:33.965"></status>
</kw>
<msg timestamp="20201030 15:51:33.965" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:33.947" endtime="20201030 15:51:33.966"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:33.968" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:33.966" endtime="20201030 15:51:33.968"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:33.969" endtime="20201030 15:51:33.970"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.945" endtime="20201030 15:51:33.971"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.943" endtime="20201030 15:51:33.971"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:33.978" endtime="20201030 15:51:34.256"></status>
</kw>
<msg timestamp="20201030 15:51:34.259" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018377333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018560625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:33.976" endtime="20201030 15:51:34.259"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:34.267" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018377333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018560625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:34.260" endtime="20201030 15:51:34.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:34.268" endtime="20201030 15:51:34.270"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.974" endtime="20201030 15:51:34.270"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.972" endtime="20201030 15:51:34.271"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:34.275" level="INFO">${PHILIP_RES} = [{'diff': 0.00018329200000000156}, {'diff': 0.0001808610000000009}, {'diff': 0.00018093099999999876}, {'diff': 0.00018092999999999929}, {'diff': 0.00018090299999999962}, {'diff': 0.0001809169999999992...</msg>
<status status="PASS" starttime="20201030 15:51:34.272" endtime="20201030 15:51:34.275"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:34.280" level="INFO">${RESULT} = {'diff': [0.00018329200000000156, 0.0001808610000000009, 0.00018093099999999876, 0.00018092999999999929, 0.00018090299999999962, 0.0001809169999999992, 0.0001809169999999992, 0.00018093099999999876, 0...</msg>
<status status="PASS" starttime="20201030 15:51:34.276" endtime="20201030 15:51:34.281"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:34.285" level="INFO">NAME: 6-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:34.284" endtime="20201030 15:51:34.285"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:34.287" level="INFO">VALUE: [0.00018329200000000156, 0.0001808610000000009, 0.00018093099999999876, 0.00018092999999999929, 0.00018090299999999962, 0.0001809169999999992, 0.0001809169999999992, 0.00018093099999999876, 0.00018093000000000276, 0.00018084699999999787, 0.00018090299999999962, 0.00018086099999999744, 0.0001809169999999992, 0.00018091599999999972, 0.0001809169999999992, 0.00018092999999999929, 0.00018093099999999876, 0.00018092999999999929, 0.00018095799999999843, 0.00018091700000000266, 0.00018093000000000276, 0.0001809450000000018, 0.00018092999999999929, 0.0001809169999999992, 0.00018092999999999929, 0.00018087500000000048, 0.00018091599999999972, 0.0001809169999999992, 0.00018093099999999876, 0.00018098600000000103, 0.00018093099999999876, 0.00018093100000000223, 0.0001810000000000006, 0.0001809169999999992, 0.00018094399999999886, 0.00018095799999999843, 0.0001809450000000018, 0.00018094400000000233, 0.00018093100000000223, 0.0001809169999999992, 0.00018092999999999929, 0.0001809169999999992, 0.0001809169999999992, 0.00018094399999999886, 0.00018091700000000266, 0.00018091700000000266, 0.00018094399999999886, 0.00018094399999999886, 0.00018091599999999972, 0.00018093099999999876]</msg>
<status status="PASS" starttime="20201030 15:51:34.286" endtime="20201030 15:51:34.288"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.281" endtime="20201030 15:51:34.288"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:34.292" endtime="20201030 15:51:34.311"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.290" endtime="20201030 15:51:34.312"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.289" endtime="20201030 15:51:34.312"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.941" endtime="20201030 15:51:34.313"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.941" endtime="20201030 15:51:34.313"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:34.321" endtime="20201030 15:51:34.339"></status>
</kw>
<msg timestamp="20201030 15:51:34.340" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:34.319" endtime="20201030 15:51:34.340"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:34.342" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:34.341" endtime="20201030 15:51:34.343"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:34.343" endtime="20201030 15:51:34.345"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.317" endtime="20201030 15:51:34.345"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.315" endtime="20201030 15:51:34.346"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:34.352" endtime="20201030 15:51:34.638"></status>
</kw>
<msg timestamp="20201030 15:51:34.641" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018334458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018555056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:34.351" endtime="20201030 15:51:34.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:34.649" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018334458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018555056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:34.642" endtime="20201030 15:51:34.649"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:34.650" endtime="20201030 15:51:34.653"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.348" endtime="20201030 15:51:34.653"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.346" endtime="20201030 15:51:34.654"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:34.658" level="INFO">${PHILIP_RES} = [{'diff': 0.00022059799999999893}, {'diff': 0.00021813899999999914}, {'diff': 0.00021819499999999742}, {'diff': 0.00021820800000000098}, {'diff': 0.00021822200000000055}, {'diff': 0.000218264000000002...</msg>
<status status="PASS" starttime="20201030 15:51:34.654" endtime="20201030 15:51:34.658"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:34.662" level="INFO">${RESULT} = {'diff': [0.00022059799999999893, 0.00021813899999999914, 0.00021819499999999742, 0.00021820800000000098, 0.00021822200000000055, 0.00021826400000000273, 0.00021820900000000046, 0.00021820800000000098...</msg>
<status status="PASS" starttime="20201030 15:51:34.658" endtime="20201030 15:51:34.662"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:34.666" level="INFO">NAME: 7-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:34.665" endtime="20201030 15:51:34.666"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:34.668" level="INFO">VALUE: [0.00022059799999999893, 0.00021813899999999914, 0.00021819499999999742, 0.00021820800000000098, 0.00021822200000000055, 0.00021826400000000273, 0.00021820900000000046, 0.00021820800000000098, 0.00021820800000000098, 0.00021827799999999883, 0.00021822200000000055, 0.00021820800000000098, 0.00021822200000000055, 0.00021827799999999883, 0.00021822200000000055, 0.00021823600000000012, 0.00021822200000000055, 0.00021823600000000012, 0.00021819399999999795, 0.00021820800000000098, 0.00021822200000000055, 0.00021823600000000012, 0.00021816600000000227, 0.00021819399999999795, 0.00021826399999999926, 0.0002181950000000009, 0.0002181950000000009, 0.00021820900000000046, 0.00021822200000000055, 0.0002182499999999997, 0.0002182369999999996, 0.00021822200000000055, 0.00021823600000000012, 0.00021822300000000003, 0.00021822199999999708, 0.00021820800000000098, 0.00021818100000000132, 0.00021820900000000046, 0.00021826399999999926, 0.0002182499999999997, 0.00021826399999999926, 0.00021819400000000141, 0.00021822199999999708, 0.00021822200000000055, 0.00021827799999999883, 0.0002182499999999997, 0.0002181950000000009, 0.00021820799999999752, 0.00021822200000000055, 0.0002182369999999996]</msg>
<status status="PASS" starttime="20201030 15:51:34.667" endtime="20201030 15:51:34.680"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.662" endtime="20201030 15:51:34.680"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:34.684" endtime="20201030 15:51:34.704"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.683" endtime="20201030 15:51:34.704"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.681" endtime="20201030 15:51:34.704"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.314" endtime="20201030 15:51:34.705"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.313" endtime="20201030 15:51:34.705"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:34.713" endtime="20201030 15:51:34.735"></status>
</kw>
<msg timestamp="20201030 15:51:34.735" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:34.712" endtime="20201030 15:51:34.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:34.737" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:34.736" endtime="20201030 15:51:34.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:34.738" endtime="20201030 15:51:34.740"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.709" endtime="20201030 15:51:34.741"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.707" endtime="20201030 15:51:34.741"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:34.747" endtime="20201030 15:51:35.031"></status>
</kw>
<msg timestamp="20201030 15:51:35.034" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0192525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019512889, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:51:34.746" endtime="20201030 15:51:35.034"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:35.042" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0192525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019512889, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:51:35.035" endtime="20201030 15:51:35.042"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:35.043" endtime="20201030 15:51:35.044"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.743" endtime="20201030 15:51:35.045"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.742" endtime="20201030 15:51:35.045"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:35.049" level="INFO">${PHILIP_RES} = [{'diff': 0.00026038899999999976}, {'diff': 0.00025794399999999953}, {'diff': 0.00025802700000000095}, {'diff': 0.0002580139999999974}, {'diff': 0.0002580280000000004}, {'diff': 0.00025808400000000217...</msg>
<status status="PASS" starttime="20201030 15:51:35.046" endtime="20201030 15:51:35.049"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:35.053" level="INFO">${RESULT} = {'diff': [0.00026038899999999976, 0.00025794399999999953, 0.00025802700000000095, 0.0002580139999999974, 0.0002580280000000004, 0.00025808400000000217, 0.00025801400000000085, 0.00025806999999999913, ...</msg>
<status status="PASS" starttime="20201030 15:51:35.050" endtime="20201030 15:51:35.053"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:35.057" level="INFO">NAME: 8-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:35.056" endtime="20201030 15:51:35.058"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:35.060" level="INFO">VALUE: [0.00026038899999999976, 0.00025794399999999953, 0.00025802700000000095, 0.0002580139999999974, 0.0002580280000000004, 0.00025808400000000217, 0.00025801400000000085, 0.00025806999999999913, 0.0002580000000000013, 0.0002580550000000001, 0.00025801400000000085, 0.00025798599999999824, 0.000258042, 0.0002580280000000004, 0.0002580550000000001, 0.0002580129999999979, 0.0002579999999999978, 0.00025801400000000085, 0.0002580280000000004, 0.000258042, 0.00025797200000000214, 0.0002580280000000004, 0.0002579999999999978, 0.00025797200000000214, 0.00025801400000000085, 0.000258042, 0.0002580280000000004, 0.000258042, 0.00025797200000000214, 0.0002579870000000012, 0.00025801400000000085, 0.00025804099999999705, 0.0002580280000000004, 0.0002579860000000017, 0.00025791699999999987, 0.000258042, 0.0002580280000000004, 0.00025802799999999695, 0.0002580280000000004, 0.00025805599999999956, 0.0002580550000000001, 0.0002580000000000013, 0.00025801400000000085, 0.0002580139999999939, 0.0002580000000000013, 0.0002580550000000001, 0.00025806899999999966, 0.0002580139999999939, 0.000258042, 0.00025806999999999913]</msg>
<status status="PASS" starttime="20201030 15:51:35.058" endtime="20201030 15:51:35.063"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.054" endtime="20201030 15:51:35.064"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:35.067" endtime="20201030 15:51:35.087"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.066" endtime="20201030 15:51:35.087"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.065" endtime="20201030 15:51:35.088"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.706" endtime="20201030 15:51:35.088"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.705" endtime="20201030 15:51:35.088"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:35.096" endtime="20201030 15:51:35.119"></status>
</kw>
<msg timestamp="20201030 15:51:35.120" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:35.095" endtime="20201030 15:51:35.120"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:35.122" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:35.121" endtime="20201030 15:51:35.123"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:35.123" endtime="20201030 15:51:35.125"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.092" endtime="20201030 15:51:35.125"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.091" endtime="20201030 15:51:35.126"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:35.132" endtime="20201030 15:51:35.418"></status>
</kw>
<msg timestamp="20201030 15:51:35.421" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0183585, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018661236, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:51:35.131" endtime="20201030 15:51:35.421"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:35.429" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0183585, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018661236, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:51:35.422" endtime="20201030 15:51:35.429"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:35.430" endtime="20201030 15:51:35.432"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.128" endtime="20201030 15:51:35.432"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.126" endtime="20201030 15:51:35.432"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:35.436" level="INFO">${PHILIP_RES} = [{'diff': 0.00030273600000000137}, {'diff': 0.00030029100000000114}, {'diff': 0.00030037499999999856}, {'diff': 0.0003004019999999982}, {'diff': 0.00030033299999999985}, {'diff': 0.0003003610000000024...</msg>
<status status="PASS" starttime="20201030 15:51:35.433" endtime="20201030 15:51:35.436"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:35.441" level="INFO">${RESULT} = {'diff': [0.00030273600000000137, 0.00030029100000000114, 0.00030037499999999856, 0.0003004019999999982, 0.00030033299999999985, 0.00030036100000000246, 0.00030031999999999975, 0.000300360999999999, 0...</msg>
<status status="PASS" starttime="20201030 15:51:35.437" endtime="20201030 15:51:35.441"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:35.445" level="INFO">NAME: 9-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:35.444" endtime="20201030 15:51:35.446"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:35.448" level="INFO">VALUE: [0.00030273600000000137, 0.00030029100000000114, 0.00030037499999999856, 0.0003004019999999982, 0.00030033299999999985, 0.00030036100000000246, 0.00030031999999999975, 0.000300360999999999, 0.00030040300000000117, 0.00030040300000000117, 0.000300360999999999, 0.0003003469999999994, 0.00030030499999999724, 0.00030033299999999985, 0.0003003189999999968, 0.0003003339999999993, 0.0003003479999999989, 0.0003003470000000029, 0.00030036100000000246, 0.0003003890000000016, 0.00030034800000000236, 0.0003003469999999994, 0.0003003479999999989, 0.0003003339999999993, 0.00030036100000000246, 0.00030031999999999975, 0.0003003479999999989, 0.00030033299999999985, 0.00030033299999999985, 0.00030038899999999813, 0.00030036100000000246, 0.0003003469999999994, 0.000300360999999999, 0.0003003469999999994, 0.0003003880000000021, 0.00030037500000000203, 0.0003003339999999993, 0.00030036100000000246, 0.000300360999999999, 0.000300360999999999, 0.00030033299999999985, 0.0003003469999999994, 0.00030034700000000636, 0.000300360999999999, 0.0003003469999999994, 0.0003003469999999994, 0.00030033299999999985, 0.0003003190000000003, 0.0003003469999999994, 0.00030033299999999985]</msg>
<status status="PASS" starttime="20201030 15:51:35.446" endtime="20201030 15:51:35.448"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.442" endtime="20201030 15:51:35.449"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:35.453" endtime="20201030 15:51:35.472"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.451" endtime="20201030 15:51:35.473"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.450" endtime="20201030 15:51:35.473"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.089" endtime="20201030 15:51:35.473"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.089" endtime="20201030 15:51:35.473"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:35.482" endtime="20201030 15:51:35.507"></status>
</kw>
<msg timestamp="20201030 15:51:35.508" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:35.480" endtime="20201030 15:51:35.508"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:35.510" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:35.509" endtime="20201030 15:51:35.511"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:35.511" endtime="20201030 15:51:35.513"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.478" endtime="20201030 15:51:35.513"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.476" endtime="20201030 15:51:35.514"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:35.520" endtime="20201030 15:51:35.805"></status>
</kw>
<msg timestamp="20201030 15:51:35.808" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018613389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018960889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:35.519" endtime="20201030 15:51:35.808"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:35.816" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018613389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018960889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:35.809" endtime="20201030 15:51:35.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:35.817" endtime="20201030 15:51:35.820"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.516" endtime="20201030 15:51:35.820"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.514" endtime="20201030 15:51:35.821"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:35.824" level="INFO">${PHILIP_RES} = [{'diff': 0.0003475000000000006}, {'diff': 0.0003450699999999994}, {'diff': 0.0003451389999999978}, {'diff': 0.00034511099999999864}, {'diff': 0.00034505599999999984}, {'diff': 0.00034513900000000125}...</msg>
<status status="PASS" starttime="20201030 15:51:35.821" endtime="20201030 15:51:35.825"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:35.828" level="INFO">${RESULT} = {'diff': [0.0003475000000000006, 0.0003450699999999994, 0.0003451389999999978, 0.00034511099999999864, 0.00034505599999999984, 0.00034513900000000125, 0.0003451379999999983, 0.00034519400000000006, 0....</msg>
<status status="PASS" starttime="20201030 15:51:35.825" endtime="20201030 15:51:35.829"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:35.833" level="INFO">NAME: 10-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:35.832" endtime="20201030 15:51:35.833"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:35.835" level="INFO">VALUE: [0.0003475000000000006, 0.0003450699999999994, 0.0003451389999999978, 0.00034511099999999864, 0.00034505599999999984, 0.00034513900000000125, 0.0003451379999999983, 0.00034519400000000006, 0.0003451249999999982, 0.0003451530000000008, 0.0003451530000000008, 0.0003451530000000008, 0.0003451249999999982, 0.0003451249999999982, 0.0003451670000000004, 0.0003451530000000008, 0.0003451250000000017, 0.0003451250000000017, 0.0003451110000000021, 0.0003451250000000017, 0.0003451250000000017, 0.0003451379999999983, 0.00034513900000000125, 0.0003451669999999969, 0.0003451800000000005, 0.0003451250000000017, 0.00034513900000000125, 0.00034509699999999907, 0.0003451530000000008, 0.0003451519999999979, 0.00034515200000000135, 0.0003451250000000017, 0.0003451110000000021, 0.0003451670000000004, 0.00034518099999999996, 0.0003451660000000009, 0.0003451660000000009, 0.0003451530000000008, 0.00034518099999999996, 0.0003451530000000008, 0.0003451250000000017, 0.0003451530000000008, 0.0003451530000000008, 0.0003451389999999943, 0.0003451530000000008, 0.0003450690000000034, 0.0003452079999999996, 0.0003451800000000005, 0.0003452079999999996, 0.0003451800000000005]</msg>
<status status="PASS" starttime="20201030 15:51:35.834" endtime="20201030 15:51:35.836"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.829" endtime="20201030 15:51:35.836"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:35.840" endtime="20201030 15:51:35.859"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.838" endtime="20201030 15:51:35.860"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.837" endtime="20201030 15:51:35.860"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.474" endtime="20201030 15:51:35.861"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.474" endtime="20201030 15:51:35.861"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:35.869" endtime="20201030 15:51:35.898"></status>
</kw>
<msg timestamp="20201030 15:51:35.898" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:35.867" endtime="20201030 15:51:35.899"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:35.901" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:35.899" endtime="20201030 15:51:35.901"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:35.902" endtime="20201030 15:51:35.903"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.865" endtime="20201030 15:51:35.904"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.863" endtime="20201030 15:51:35.904"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:35.911" endtime="20201030 15:51:36.196"></status>
</kw>
<msg timestamp="20201030 15:51:36.199" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019291375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019686167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:35.909" endtime="20201030 15:51:36.200"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:36.207" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019291375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019686167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:36.200" endtime="20201030 15:51:36.208"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:36.208" endtime="20201030 15:51:36.210"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.907" endtime="20201030 15:51:36.211"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.905" endtime="20201030 15:51:36.211"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:36.215" level="INFO">${PHILIP_RES} = [{'diff': 0.00039479200000000145}, {'diff': 0.00039237500000000036}, {'diff': 0.00039242999999999917}, {'diff': 0.0003923609999999973}, {'diff': 0.0003924159999999996}, {'diff': 0.00039241700000000254...</msg>
<status status="PASS" starttime="20201030 15:51:36.212" endtime="20201030 15:51:36.215"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:36.219" level="INFO">${RESULT} = {'diff': [0.00039479200000000145, 0.00039237500000000036, 0.00039242999999999917, 0.0003923609999999973, 0.0003924159999999996, 0.00039241700000000254, 0.00039241699999999907, 0.0003924719999999979, 0...</msg>
<status status="PASS" starttime="20201030 15:51:36.216" endtime="20201030 15:51:36.219"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:36.223" level="INFO">NAME: 11-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:36.222" endtime="20201030 15:51:36.223"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:36.225" level="INFO">VALUE: [0.00039479200000000145, 0.00039237500000000036, 0.00039242999999999917, 0.0003923609999999973, 0.0003924159999999996, 0.00039241700000000254, 0.00039241699999999907, 0.0003924719999999979, 0.0003924719999999979, 0.0003924719999999979, 0.0003924580000000018, 0.00039243099999999864, 0.00039244399999999874, 0.0003924719999999979, 0.0003924449999999982, 0.00039242999999999917, 0.00039243099999999864, 0.0003924310000000021, 0.0003924580000000018, 0.0003924730000000008, 0.00039245900000000125, 0.00039247200000000135, 0.0003924450000000017, 0.00039242999999999917, 0.0003924450000000017, 0.00039247200000000135, 0.0003924860000000009, 0.00039247299999999735, 0.0003924730000000043, 0.0003924719999999979, 0.0003924860000000044, 0.00039248599999999745, 0.00039250000000000396, 0.0003925280000000031, 0.00039248599999999745, 0.0003924720000000048, 0.0003924579999999983, 0.00039245800000000525, 0.00039243099999999864, 0.00039242999999999917, 0.00039247299999999735, 0.0003924860000000044, 0.0003924579999999983, 0.00039245800000000525, 0.00039247299999999735, 0.00039250000000000396, 0.00039241699999999907, 0.0003924449999999982, 0.0003924719999999979, 0.00039243099999999864]</msg>
<status status="PASS" starttime="20201030 15:51:36.224" endtime="20201030 15:51:36.227"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.219" endtime="20201030 15:51:36.227"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:36.231" endtime="20201030 15:51:36.250"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.229" endtime="20201030 15:51:36.251"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.228" endtime="20201030 15:51:36.251"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.862" endtime="20201030 15:51:36.252"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.861" endtime="20201030 15:51:36.252"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:36.260" endtime="20201030 15:51:36.291"></status>
</kw>
<msg timestamp="20201030 15:51:36.292" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:36.258" endtime="20201030 15:51:36.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:36.298" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:36.294" endtime="20201030 15:51:36.298"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:36.300" endtime="20201030 15:51:36.304"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.256" endtime="20201030 15:51:36.305"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.254" endtime="20201030 15:51:36.306"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:36.320" endtime="20201030 15:51:36.613"></status>
</kw>
<msg timestamp="20201030 15:51:36.616" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018466014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018910542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:36.316" endtime="20201030 15:51:36.616"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:36.623" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018466014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018910542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:36.617" endtime="20201030 15:51:36.624"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:36.625" endtime="20201030 15:51:36.626"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.311" endtime="20201030 15:51:36.627"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.307" endtime="20201030 15:51:36.627"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:36.631" level="INFO">${PHILIP_RES} = [{'diff': 0.0004445279999999996}, {'diff': 0.000442111000000002}, {'diff': 0.000442111000000002}, {'diff': 0.0004421939999999999}, {'diff': 0.00044218000000000035}, {'diff': 0.00044223599999999863}, {...</msg>
<status status="PASS" starttime="20201030 15:51:36.628" endtime="20201030 15:51:36.631"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:36.636" level="INFO">${RESULT} = {'diff': [0.0004445279999999996, 0.000442111000000002, 0.000442111000000002, 0.0004421939999999999, 0.00044218000000000035, 0.00044223599999999863, 0.0004421939999999999, 0.0004421530000000007, 0.0004...</msg>
<status status="PASS" starttime="20201030 15:51:36.632" endtime="20201030 15:51:36.636"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:36.640" level="INFO">NAME: 12-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:36.639" endtime="20201030 15:51:36.640"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:36.642" level="INFO">VALUE: [0.0004445279999999996, 0.000442111000000002, 0.000442111000000002, 0.0004421939999999999, 0.00044218000000000035, 0.00044223599999999863, 0.0004421939999999999, 0.0004421530000000007, 0.00044218000000000035, 0.0004421520000000012, 0.00044216700000000025, 0.00044220900000000243, 0.0004421530000000007, 0.0004421939999999999, 0.0004421390000000011, 0.00044209699999999894, 0.00044216700000000025, 0.0004421809999999998, 0.00044220800000000296, 0.0004422079999999995, 0.0004421939999999999, 0.0004422079999999995, 0.00044218000000000035, 0.0004421939999999999, 0.0004421529999999972, 0.00044208300000000283, 0.000442111000000002, 0.0004421249999999946, 0.00044206900000000326, 0.0004420970000000024, 0.0004421249999999946, 0.00044212500000000154, 0.0004421809999999998, 0.0004421530000000007, 0.0004421390000000011, 0.00044216700000000025, 0.0004421390000000011, 0.0004421520000000012, 0.0004421809999999998, 0.0004421390000000011, 0.0004421939999999999, 0.0004421809999999998, 0.0004421799999999934, 0.0004421660000000008, 0.00044216700000000025, 0.0004421390000000011, 0.0004422499999999982, 0.00044212500000000154, 0.0004421530000000007, 0.00044222299999999853]</msg>
<status status="PASS" starttime="20201030 15:51:36.641" endtime="20201030 15:51:36.643"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.637" endtime="20201030 15:51:36.644"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:36.647" endtime="20201030 15:51:36.667"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.646" endtime="20201030 15:51:36.667"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.645" endtime="20201030 15:51:36.668"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.253" endtime="20201030 15:51:36.668"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.252" endtime="20201030 15:51:36.668"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:36.676" endtime="20201030 15:51:36.710"></status>
</kw>
<msg timestamp="20201030 15:51:36.711" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:36.675" endtime="20201030 15:51:36.711"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:36.713" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:36.712" endtime="20201030 15:51:36.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:36.714" endtime="20201030 15:51:36.716"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.672" endtime="20201030 15:51:36.716"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.670" endtime="20201030 15:51:36.717"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:36.723" endtime="20201030 15:51:37.008"></status>
</kw>
<msg timestamp="20201030 15:51:37.011" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018465319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018962111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:36.721" endtime="20201030 15:51:37.011"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:37.019" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018465319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018962111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:37.012" endtime="20201030 15:51:37.019"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:37.020" endtime="20201030 15:51:37.023"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.719" endtime="20201030 15:51:37.023"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.717" endtime="20201030 15:51:37.024"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:37.027" level="INFO">${PHILIP_RES} = [{'diff': 0.0004967919999999994}, {'diff': 0.0004943609999999987}, {'diff': 0.0004944449999999996}, {'diff': 0.0004944860000000023}, {'diff': 0.0004943879999999984}, {'diff': 0.0004944170000000005}, {...</msg>
<status status="PASS" starttime="20201030 15:51:37.024" endtime="20201030 15:51:37.028"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:37.031" level="INFO">${RESULT} = {'diff': [0.0004967919999999994, 0.0004943609999999987, 0.0004944449999999996, 0.0004944860000000023, 0.0004943879999999984, 0.0004944170000000005, 0.0004944030000000009, 0.0004944449999999996, 0.0004...</msg>
<status status="PASS" starttime="20201030 15:51:37.028" endtime="20201030 15:51:37.032"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:37.036" level="INFO">NAME: 13-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:37.035" endtime="20201030 15:51:37.036"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:37.038" level="INFO">VALUE: [0.0004967919999999994, 0.0004943609999999987, 0.0004944449999999996, 0.0004944860000000023, 0.0004943879999999984, 0.0004944170000000005, 0.0004944030000000009, 0.0004944449999999996, 0.0004944030000000009, 0.0004944159999999975, 0.0004944579999999997, 0.0004945279999999976, 0.0004944300000000006, 0.0004943749999999983, 0.0004945270000000015, 0.000494431, 0.0004944719999999993, 0.0004944859999999988, 0.0004944719999999993, 0.0004944030000000009, 0.0004944300000000006, 0.0004944440000000001, 0.0004944450000000031, 0.000494416999999997, 0.0004944860000000023, 0.0004944439999999967, 0.0004944170000000039, 0.0004944870000000018, 0.0004944439999999967, 0.0004944860000000023, 0.0004944450000000031, 0.0004944449999999961, 0.0004944860000000023, 0.0004944580000000032, 0.000494416999999997, 0.000494430000000004, 0.0004944579999999962, 0.0004944730000000022, 0.0004944309999999966, 0.0004943749999999983, 0.0004944159999999975, 0.0004944859999999954, 0.0004944590000000026, 0.0004943609999999987, 0.000494401999999998, 0.0004944159999999975, 0.0004944439999999967, 0.0004944310000000035, 0.000494416999999997, 0.0004945140000000015]</msg>
<status status="PASS" starttime="20201030 15:51:37.037" endtime="20201030 15:51:37.039"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.032" endtime="20201030 15:51:37.039"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:37.043" endtime="20201030 15:51:37.062"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.041" endtime="20201030 15:51:37.063"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.040" endtime="20201030 15:51:37.063"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.669" endtime="20201030 15:51:37.063"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.668" endtime="20201030 15:51:37.064"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:37.072" endtime="20201030 15:51:37.110"></status>
</kw>
<msg timestamp="20201030 15:51:37.111" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:37.070" endtime="20201030 15:51:37.112"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:37.116" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:37.113" endtime="20201030 15:51:37.117"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:37.118" endtime="20201030 15:51:37.122"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.068" endtime="20201030 15:51:37.123"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.066" endtime="20201030 15:51:37.124"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:37.137" endtime="20201030 15:51:37.429"></status>
</kw>
<msg timestamp="20201030 15:51:37.432" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019301014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019852611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:37.134" endtime="20201030 15:51:37.432"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:37.440" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019301014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019852611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:37.433" endtime="20201030 15:51:37.440"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:37.441" endtime="20201030 15:51:37.443"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.128" endtime="20201030 15:51:37.443"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.125" endtime="20201030 15:51:37.444"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:37.447" level="INFO">${PHILIP_RES} = [{'diff': 0.0005515970000000009}, {'diff': 0.0005491249999999975}, {'diff': 0.0005492360000000016}, {'diff': 0.0005492080000000024}, {'diff': 0.0005491120000000009}, {'diff': 0.0005491660000000002}, {...</msg>
<status status="PASS" starttime="20201030 15:51:37.444" endtime="20201030 15:51:37.448"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:37.451" level="INFO">${RESULT} = {'diff': [0.0005515970000000009, 0.0005491249999999975, 0.0005492360000000016, 0.0005492080000000024, 0.0005491120000000009, 0.0005491660000000002, 0.0005491390000000006, 0.0005492080000000024, 0.0005...</msg>
<status status="PASS" starttime="20201030 15:51:37.448" endtime="20201030 15:51:37.452"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:37.455" level="INFO">NAME: 14-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:37.454" endtime="20201030 15:51:37.456"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:37.458" level="INFO">VALUE: [0.0005515970000000009, 0.0005491249999999975, 0.0005492360000000016, 0.0005492080000000024, 0.0005491120000000009, 0.0005491660000000002, 0.0005491390000000006, 0.0005492080000000024, 0.0005492080000000024, 0.0005491949999999989, 0.0005491660000000002, 0.0005492090000000019, 0.0005491669999999997, 0.0005491949999999989, 0.0005491660000000002, 0.0005491530000000001, 0.0005491669999999997, 0.0005491940000000028, 0.0005491660000000002, 0.0005492080000000024, 0.0005491800000000033, 0.0005490970000000053, 0.0005491810000000028, 0.0005491800000000033, 0.0005491659999999968, 0.0005491529999999967, 0.0005491529999999967, 0.0005491249999999975, 0.0005491659999999968, 0.000549208999999995, 0.0005492230000000015, 0.0005491660000000037, 0.0005492360000000016, 0.0005492079999999955, 0.0005491809999999958, 0.0005492080000000024, 0.0005492360000000016, 0.0005492080000000024, 0.000549222000000002, 0.0005492500000000011, 0.0005492230000000015, 0.0005491950000000023, 0.0005491389999999971, 0.0005491939999999959, 0.000549221999999995, 0.000549222000000002, 0.0005491950000000023, 0.0005492080000000024, 0.0005492639999999938, 0.0005492360000000016]</msg>
<status status="PASS" starttime="20201030 15:51:37.457" endtime="20201030 15:51:37.459"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.452" endtime="20201030 15:51:37.460"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:37.464" endtime="20201030 15:51:37.483"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.462" endtime="20201030 15:51:37.484"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.461" endtime="20201030 15:51:37.484"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.064" endtime="20201030 15:51:37.484"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.064" endtime="20201030 15:51:37.484"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:37.492" endtime="20201030 15:51:37.532"></status>
</kw>
<msg timestamp="20201030 15:51:37.533" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:37.491" endtime="20201030 15:51:37.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:37.535" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:37.534" endtime="20201030 15:51:37.536"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:37.536" endtime="20201030 15:51:37.538"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.488" endtime="20201030 15:51:37.538"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.487" endtime="20201030 15:51:37.539"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:37.545" endtime="20201030 15:51:37.830"></status>
</kw>
<msg timestamp="20201030 15:51:37.834" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018512042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019120875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:37.544" endtime="20201030 15:51:37.834"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:37.842" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018512042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019120875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:37.835" endtime="20201030 15:51:37.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:37.843" endtime="20201030 15:51:37.845"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.541" endtime="20201030 15:51:37.846"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.539" endtime="20201030 15:51:37.846"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:37.851" level="INFO">${PHILIP_RES} = [{'diff': 0.0006088329999999996}, {'diff': 0.0006064170000000015}, {'diff': 0.0006064999999999994}, {'diff': 0.0006065690000000012}, {'diff': 0.0006065140000000024}, {'diff': 0.000606513999999999}, {'...</msg>
<status status="PASS" starttime="20201030 15:51:37.847" endtime="20201030 15:51:37.851"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:37.856" level="INFO">${RESULT} = {'diff': [0.0006088329999999996, 0.0006064170000000015, 0.0006064999999999994, 0.0006065690000000012, 0.0006065140000000024, 0.000606513999999999, 0.0006065979999999999, 0.0006065269999999991, 0.00060...</msg>
<status status="PASS" starttime="20201030 15:51:37.852" endtime="20201030 15:51:37.857"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:37.861" level="INFO">NAME: 15-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:37.860" endtime="20201030 15:51:37.861"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:37.863" level="INFO">VALUE: [0.0006088329999999996, 0.0006064170000000015, 0.0006064999999999994, 0.0006065690000000012, 0.0006065140000000024, 0.000606513999999999, 0.0006065979999999999, 0.0006065269999999991, 0.0006064999999999994, 0.0006064999999999994, 0.0006065970000000004, 0.0006065560000000011, 0.0006065279999999985, 0.0006065420000000016, 0.0006065269999999991, 0.0006064999999999994, 0.0006064999999999994, 0.0006064869999999993, 0.000606513999999999, 0.0006064860000000033, 0.0006064579999999972, 0.0006065140000000024, 0.0006065000000000029, 0.0006064999999999959, 0.0006065279999999951, 0.0006065140000000024, 0.0006064869999999958, 0.0006064579999999972, 0.000606528000000002, 0.0006065139999999955, 0.0006065690000000012, 0.000606528000000002, 0.0006064719999999968, 0.000606528000000002, 0.0006064860000000033, 0.0006064860000000033, 0.0006065140000000024, 0.0006065420000000016, 0.0006065560000000011, 0.000606528000000002, 0.0006065830000000008, 0.0006064310000000045, 0.000606416999999998, 0.0006064590000000036, 0.0006064309999999976, 0.0006064170000000049, 0.0006064720000000037, 0.0006064439999999977, 0.0006064580000000042, 0.0006064999999999959]</msg>
<status status="PASS" starttime="20201030 15:51:37.862" endtime="20201030 15:51:37.864"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.857" endtime="20201030 15:51:37.864"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:37.868" endtime="20201030 15:51:37.887"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.867" endtime="20201030 15:51:37.888"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.865" endtime="20201030 15:51:37.888"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.485" endtime="20201030 15:51:37.889"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.485" endtime="20201030 15:51:37.889"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:37.897" endtime="20201030 15:51:37.941"></status>
</kw>
<msg timestamp="20201030 15:51:37.942" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:37.896" endtime="20201030 15:51:37.942"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:37.947" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:37.944" endtime="20201030 15:51:37.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:37.949" endtime="20201030 15:51:37.952"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.893" endtime="20201030 15:51:37.953"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.891" endtime="20201030 15:51:37.954"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:37.968" endtime="20201030 15:51:38.259"></status>
</kw>
<msg timestamp="20201030 15:51:38.262" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018612181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019280722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:37.965" endtime="20201030 15:51:38.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:38.270" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018612181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019280722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:38.263" endtime="20201030 15:51:38.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:38.271" endtime="20201030 15:51:38.274"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.959" endtime="20201030 15:51:38.274"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.956" endtime="20201030 15:51:38.275"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:38.278" level="INFO">${PHILIP_RES} = [{'diff': 0.0006685410000000017}, {'diff': 0.0006661669999999988}, {'diff': 0.0006661670000000022}, {'diff': 0.0006661530000000027}, {'diff': 0.0006661529999999992}, {'diff': 0.0006661389999999996}, {...</msg>
<status status="PASS" starttime="20201030 15:51:38.275" endtime="20201030 15:51:38.278"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:38.282" level="INFO">${RESULT} = {'diff': [0.0006685410000000017, 0.0006661669999999988, 0.0006661670000000022, 0.0006661530000000027, 0.0006661529999999992, 0.0006661389999999996, 0.0006661669999999988, 0.0006661799999999989, 0.0006...</msg>
<status status="PASS" starttime="20201030 15:51:38.279" endtime="20201030 15:51:38.282"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:38.286" level="INFO">NAME: 16-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:38.285" endtime="20201030 15:51:38.287"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:38.289" level="INFO">VALUE: [0.0006685410000000017, 0.0006661669999999988, 0.0006661670000000022, 0.0006661530000000027, 0.0006661529999999992, 0.0006661389999999996, 0.0006661669999999988, 0.0006661799999999989, 0.0006662500000000002, 0.0006662500000000002, 0.0006662500000000002, 0.0006662360000000006, 0.000666207999999998, 0.0006662919999999989, 0.0006662500000000002, 0.0006662779999999993, 0.0006662080000000015, 0.0006662080000000015, 0.0006662370000000001, 0.0006662500000000002, 0.0006662080000000015, 0.000666110999999997, 0.0006661810000000018, 0.0006661940000000019, 0.0006662360000000006, 0.0006661940000000019, 0.0006661670000000022, 0.0006661940000000019, 0.000666222000000001, 0.0006662360000000006, 0.0006661530000000027, 0.0006661670000000022, 0.0006662080000000015, 0.0006662090000000009, 0.0006661670000000022, 0.0006661530000000027, 0.0006661390000000031, 0.0006661940000000019, 0.0006661660000000028, 0.0006661669999999953, 0.0006661810000000018, 0.0006662080000000015, 0.0006662779999999993, 0.0006662500000000002, 0.0006662360000000006, 0.0006662639999999997, 0.0006662230000000005, 0.0006661800000000023, 0.0006661660000000028, 0.0006661520000000032]</msg>
<status status="PASS" starttime="20201030 15:51:38.287" endtime="20201030 15:51:38.289"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.283" endtime="20201030 15:51:38.290"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:38.294" endtime="20201030 15:51:38.313"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.292" endtime="20201030 15:51:38.314"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.291" endtime="20201030 15:51:38.314"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.890" endtime="20201030 15:51:38.314"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.889" endtime="20201030 15:51:38.314"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:38.322" endtime="20201030 15:51:38.370"></status>
</kw>
<msg timestamp="20201030 15:51:38.370" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:38.321" endtime="20201030 15:51:38.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:38.373" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:38.372" endtime="20201030 15:51:38.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:38.374" endtime="20201030 15:51:38.376"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.318" endtime="20201030 15:51:38.376"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.317" endtime="20201030 15:51:38.376"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:38.383" endtime="20201030 15:51:38.668"></status>
</kw>
<msg timestamp="20201030 15:51:38.671" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019266417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019997292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:38.381" endtime="20201030 15:51:38.671"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:38.679" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019266417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019997292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:38.672" endtime="20201030 15:51:38.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:38.680" endtime="20201030 15:51:38.681"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.379" endtime="20201030 15:51:38.682"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.377" endtime="20201030 15:51:38.682"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:38.686" level="INFO">${PHILIP_RES} = [{'diff': 0.0007308749999999989}, {'diff': 0.0007284309999999981}, {'diff': 0.0007285550000000023}, {'diff': 0.0007284300000000021}, {'diff': 0.0007284720000000008}, {'diff': 0.0007284580000000013}, {...</msg>
<status status="PASS" starttime="20201030 15:51:38.683" endtime="20201030 15:51:38.686"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:38.690" level="INFO">${RESULT} = {'diff': [0.0007308749999999989, 0.0007284309999999981, 0.0007285550000000023, 0.0007284300000000021, 0.0007284720000000008, 0.0007284580000000013, 0.0007285, 0.0007284860000000004, 0.0007285, 0.00072...</msg>
<status status="PASS" starttime="20201030 15:51:38.687" endtime="20201030 15:51:38.690"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:38.694" level="INFO">NAME: 17-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:38.693" endtime="20201030 15:51:38.695"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:38.697" level="INFO">VALUE: [0.0007308749999999989, 0.0007284309999999981, 0.0007285550000000023, 0.0007284300000000021, 0.0007284720000000008, 0.0007284580000000013, 0.0007285, 0.0007284860000000004, 0.0007285, 0.0007285280000000026, 0.0007284720000000008, 0.0007284860000000004, 0.0007284860000000004, 0.0007284439999999982, 0.0007284300000000021, 0.0007285279999999991, 0.0007285279999999991, 0.0007284580000000013, 0.0007285139999999996, 0.0007285139999999996, 0.0007285279999999991, 0.0007284720000000008, 0.0007284310000000016, 0.0007285969999999975, 0.0007285279999999991, 0.0007285829999999979, 0.0007285409999999992, 0.0007285279999999991, 0.0007285, 0.0007284299999999952, 0.0007285970000000044, 0.0007285, 0.0007284299999999952, 0.0007285139999999996, 0.0007285279999999991, 0.0007284860000000004, 0.0007284860000000004, 0.0007284300000000021, 0.0007285419999999987, 0.0007284860000000004, 0.0007284590000000007, 0.0007284860000000004, 0.000728597999999997, 0.0007284579999999943, 0.0007284169999999951, 0.0007284590000000007, 0.0007285, 0.0007285419999999987, 0.0007285549999999988, 0.0007284590000000007]</msg>
<status status="PASS" starttime="20201030 15:51:38.695" endtime="20201030 15:51:38.700"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.691" endtime="20201030 15:51:38.701"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:38.705" endtime="20201030 15:51:38.724"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.703" endtime="20201030 15:51:38.724"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.702" endtime="20201030 15:51:38.725"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.315" endtime="20201030 15:51:38.725"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.315" endtime="20201030 15:51:38.725"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:38.733" endtime="20201030 15:51:38.784"></status>
</kw>
<msg timestamp="20201030 15:51:38.785" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:38.732" endtime="20201030 15:51:38.785"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:38.790" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:38.787" endtime="20201030 15:51:38.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:38.792" endtime="20201030 15:51:38.796"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.729" endtime="20201030 15:51:38.797"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.727" endtime="20201030 15:51:38.798"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:38.811" endtime="20201030 15:51:39.101"></status>
</kw>
<msg timestamp="20201030 15:51:39.104" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018429139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019224639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:38.808" endtime="20201030 15:51:39.105"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:39.112" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018429139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019224639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:39.105" endtime="20201030 15:51:39.113"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:39.113" endtime="20201030 15:51:39.115"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.802" endtime="20201030 15:51:39.115"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.799" endtime="20201030 15:51:39.116"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:39.120" level="INFO">${PHILIP_RES} = [{'diff': 0.0007955000000000011}, {'diff': 0.0007931109999999991}, {'diff': 0.0007931390000000017}, {'diff': 0.0007930969999999996}, {'diff': 0.0007930969999999996}, {'diff': 0.0007931249999999987}, {...</msg>
<status status="PASS" starttime="20201030 15:51:39.117" endtime="20201030 15:51:39.120"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:39.124" level="INFO">${RESULT} = {'diff': [0.0007955000000000011, 0.0007931109999999991, 0.0007931390000000017, 0.0007930969999999996, 0.0007930969999999996, 0.0007931249999999987, 0.0007931109999999991, 0.0007931390000000017, 0.0007...</msg>
<status status="PASS" starttime="20201030 15:51:39.121" endtime="20201030 15:51:39.125"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:39.129" level="INFO">NAME: 18-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:39.128" endtime="20201030 15:51:39.129"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:39.131" level="INFO">VALUE: [0.0007955000000000011, 0.0007931109999999991, 0.0007931390000000017, 0.0007930969999999996, 0.0007930969999999996, 0.0007931249999999987, 0.0007931109999999991, 0.0007931390000000017, 0.0007931250000000022, 0.0007931390000000017, 0.0007931530000000013, 0.0007931389999999983, 0.0007931670000000009, 0.0007931249999999987, 0.0007931940000000005, 0.0007931529999999978, 0.000793180999999997, 0.0007931250000000056, 0.0007931249999999987, 0.0007931670000000043, 0.000793180999999997, 0.0007931529999999978, 0.000793209000000003, 0.0007932080000000036, 0.0007931799999999975, 0.0007931659999999979, 0.0007931249999999987, 0.0007931109999999991, 0.0007931249999999987, 0.0007930140000000016, 0.0007931110000000061, 0.0007930969999999996, 0.0007931109999999991, 0.0007930410000000013, 0.0007931389999999983, 0.0007931529999999978, 0.0007931110000000061, 0.0007930690000000004, 0.000793194000000004, 0.0007931799999999975, 0.0007931669999999974, 0.0007931670000000043, 0.0007931530000000048, 0.0007931389999999983, 0.0007931659999999979, 0.000793083, 0.0007930690000000004, 0.0007930969999999996, 0.0007931109999999991, 0.0007931250000000056]</msg>
<status status="PASS" starttime="20201030 15:51:39.130" endtime="20201030 15:51:39.132"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.125" endtime="20201030 15:51:39.132"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:39.136" endtime="20201030 15:51:39.155"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.134" endtime="20201030 15:51:39.156"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.133" endtime="20201030 15:51:39.156"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.726" endtime="20201030 15:51:39.156"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.726" endtime="20201030 15:51:39.157"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:39.165" endtime="20201030 15:51:39.218"></status>
</kw>
<msg timestamp="20201030 15:51:39.219" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:39.163" endtime="20201030 15:51:39.219"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:39.221" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:39.220" endtime="20201030 15:51:39.222"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:39.222" endtime="20201030 15:51:39.224"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.161" endtime="20201030 15:51:39.224"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.159" endtime="20201030 15:51:39.225"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:39.231" endtime="20201030 15:51:39.518"></status>
</kw>
<msg timestamp="20201030 15:51:39.521" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018471125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019333944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:39.230" endtime="20201030 15:51:39.521"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:39.529" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018471125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019333944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:39.522" endtime="20201030 15:51:39.529"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:39.530" endtime="20201030 15:51:39.532"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.227" endtime="20201030 15:51:39.533"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.225" endtime="20201030 15:51:39.533"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:39.537" level="INFO">${PHILIP_RES} = [{'diff': 0.0008628189999999973}, {'diff': 0.0008604029999999992}, {'diff': 0.000860472000000001}, {'diff': 0.0008604169999999987}, {'diff': 0.0008604299999999988}, {'diff': 0.0008604860000000006}, {'...</msg>
<status status="PASS" starttime="20201030 15:51:39.534" endtime="20201030 15:51:39.537"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:39.541" level="INFO">${RESULT} = {'diff': [0.0008628189999999973, 0.0008604029999999992, 0.000860472000000001, 0.0008604169999999987, 0.0008604299999999988, 0.0008604860000000006, 0.0008605000000000002, 0.0008604309999999983, 0.00086...</msg>
<status status="PASS" starttime="20201030 15:51:39.538" endtime="20201030 15:51:39.541"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:39.545" level="INFO">NAME: 19-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:39.544" endtime="20201030 15:51:39.546"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:39.548" level="INFO">VALUE: [0.0008628189999999973, 0.0008604029999999992, 0.000860472000000001, 0.0008604169999999987, 0.0008604299999999988, 0.0008604860000000006, 0.0008605000000000002, 0.0008604309999999983, 0.0008604439999999984, 0.0008603889999999996, 0.0008604719999999975, 0.0008604860000000006, 0.0008603889999999996, 0.0008603610000000005, 0.0008603619999999965, 0.0008603610000000039, 0.0008603750000000035, 0.0008604169999999953, 0.0008603189999999983, 0.0008603610000000039, 0.0008604029999999957, 0.0008603750000000035, 0.000860360999999997, 0.0008603890000000031, 0.0008603890000000031, 0.0008603189999999983, 0.0008603469999999974, 0.0008604450000000013, 0.0008604169999999953, 0.0008603190000000052, 0.0008603750000000035, 0.0008604169999999953, 0.0008605000000000002, 0.0008604310000000018, 0.0008604019999999962, 0.0008603469999999974, 0.0008602500000000068, 0.0008603340000000043, 0.0008603329999999978, 0.0008604170000000022, 0.0008604300000000023, 0.0008604590000000009, 0.0008604450000000013, 0.0008604300000000023, 0.0008603749999999966, 0.0008604170000000022, 0.0008604160000000027, 0.0008602919999999986, 0.00086036099999999, 0.0008603890000000031]</msg>
<status status="PASS" starttime="20201030 15:51:39.546" endtime="20201030 15:51:39.548"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.542" endtime="20201030 15:51:39.549"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:39.553" endtime="20201030 15:51:39.573"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.551" endtime="20201030 15:51:39.574"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.550" endtime="20201030 15:51:39.575"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.157" endtime="20201030 15:51:39.576"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.157" endtime="20201030 15:51:39.576"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:39.593" endtime="20201030 15:51:39.654"></status>
</kw>
<msg timestamp="20201030 15:51:39.655" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:39.590" endtime="20201030 15:51:39.655"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:39.660" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:39.657" endtime="20201030 15:51:39.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:39.662" endtime="20201030 15:51:39.665"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.585" endtime="20201030 15:51:39.667"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.581" endtime="20201030 15:51:39.668"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:39.681" endtime="20201030 15:51:39.976"></status>
</kw>
<msg timestamp="20201030 15:51:39.979" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.032921944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033854444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:39.678" endtime="20201030 15:51:39.979"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:39.987" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.032921944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033854444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:39.980" endtime="20201030 15:51:39.987"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:39.988" endtime="20201030 15:51:39.989"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.672" endtime="20201030 15:51:39.990"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.669" endtime="20201030 15:51:39.990"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:39.994" level="INFO">${PHILIP_RES} = [{'diff': 0.0009324999999999958}, {'diff': 0.0009300139999999998}, {'diff': 0.0009300269999999999}, {'diff': 0.0009301110000000043}, {'diff': 0.0009300130000000004}, {'diff': 0.0009300139999999998}, {...</msg>
<status status="PASS" starttime="20201030 15:51:39.991" endtime="20201030 15:51:39.994"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:39.998" level="INFO">${RESULT} = {'diff': [0.0009324999999999958, 0.0009300139999999998, 0.0009300269999999999, 0.0009301110000000043, 0.0009300130000000004, 0.0009300139999999998, 0.0009299720000000011, 0.0009299860000000007, 0.0009...</msg>
<status status="PASS" starttime="20201030 15:51:39.995" endtime="20201030 15:51:39.998"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:40.002" level="INFO">NAME: 20-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:40.001" endtime="20201030 15:51:40.003"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:40.005" level="INFO">VALUE: [0.0009324999999999958, 0.0009300139999999998, 0.0009300269999999999, 0.0009301110000000043, 0.0009300130000000004, 0.0009300139999999998, 0.0009299720000000011, 0.0009299860000000007, 0.0009300000000000003, 0.0009299859999999938, 0.0009299579999999946, 0.0009299720000000011, 0.0009300559999999986, 0.0009299860000000007, 0.0009300139999999998, 0.0009300829999999982, 0.000930041999999999, 0.0009300969999999978, 0.0009300000000000003, 0.0009300279999999994, 0.0009300000000000003, 0.0009301109999999974, 0.0009300560000000055, 0.0009300559999999986, 0.0009300139999999998, 0.0009300549999999991, 0.000930041999999999, 0.0009300409999999995, 0.0009300829999999982, 0.0009300420000000059, 0.0009300690000000056, 0.0009301389999999965, 0.0009301250000000039, 0.0009300829999999982, 0.0009301250000000039, 0.0009300840000000116, 0.0009300699999999912, 0.0009300700000000051, 0.0009300130000000073, 0.0009301250000000039, 0.0009300139999999929, 0.0009300139999999929, 0.0009300269999999999, 0.0009300839999999977, 0.0009301110000000112, 0.0009300139999999929, 0.0009300410000000064, 0.0009300700000000051, 0.0009301389999999965, 0.0009301109999999974]</msg>
<status status="PASS" starttime="20201030 15:51:40.003" endtime="20201030 15:51:40.006"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.999" endtime="20201030 15:51:40.007"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:40.011" endtime="20201030 15:51:40.030"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.009" endtime="20201030 15:51:40.031"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.008" endtime="20201030 15:51:40.031"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.578" endtime="20201030 15:51:40.031"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.577" endtime="20201030 15:51:40.031"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:40.039" endtime="20201030 15:51:40.101"></status>
</kw>
<msg timestamp="20201030 15:51:40.101" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:40.038" endtime="20201030 15:51:40.101"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:40.104" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:40.102" endtime="20201030 15:51:40.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:40.105" endtime="20201030 15:51:40.106"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.035" endtime="20201030 15:51:40.107"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.034" endtime="20201030 15:51:40.107"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:40.113" endtime="20201030 15:51:40.399"></status>
</kw>
<msg timestamp="20201030 15:51:40.402" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018447611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019452208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:40.112" endtime="20201030 15:51:40.402"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:40.409" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018447611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019452208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:40.403" endtime="20201030 15:51:40.410"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:40.411" endtime="20201030 15:51:40.412"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.109" endtime="20201030 15:51:40.413"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.108" endtime="20201030 15:51:40.413"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:40.417" level="INFO">${PHILIP_RES} = [{'diff': 0.0010045969999999994}, {'diff': 0.0010020979999999999}, {'diff': 0.0010021519999999992}, {'diff': 0.0010021529999999987}, {'diff': 0.0010022090000000004}, {'diff': 0.0010021799999999983}, {...</msg>
<status status="PASS" starttime="20201030 15:51:40.414" endtime="20201030 15:51:40.417"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:40.422" level="INFO">${RESULT} = {'diff': [0.0010045969999999994, 0.0010020979999999999, 0.0010021519999999992, 0.0010021529999999987, 0.0010022090000000004, 0.0010021799999999983, 0.0010021810000000013, 0.0010021670000000017, 0.0010...</msg>
<status status="PASS" starttime="20201030 15:51:40.418" endtime="20201030 15:51:40.422"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:40.426" level="INFO">NAME: 21-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:40.425" endtime="20201030 15:51:40.426"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:40.428" level="INFO">VALUE: [0.0010045969999999994, 0.0010020979999999999, 0.0010021519999999992, 0.0010021529999999987, 0.0010022090000000004, 0.0010021799999999983, 0.0010021810000000013, 0.0010021670000000017, 0.0010021950000000009, 0.0010021249999999995, 0.0010021810000000013, 0.0010021529999999987, 0.001002111, 0.0010021669999999983, 0.0010021810000000048, 0.0010021949999999974, 0.0010021529999999987, 0.0010022920000000018, 0.0010021670000000052, 0.0010021670000000052, 0.001002209000000004, 0.0010021659999999988, 0.001002111, 0.0010020970000000004, 0.0010020970000000004, 0.0010021529999999987, 0.0010022080000000044, 0.0010021950000000043, 0.0010021950000000043, 0.0010022080000000044, 0.001002193999999998, 0.0010022359999999966, 0.0010021809999999978, 0.0010021669999999983, 0.0010022639999999958, 0.001002193999999998, 0.0010021669999999983, 0.0010022640000000027, 0.0010021250000000065, 0.001002193999999998, 0.0010021249999999926, 0.0010020970000000073, 0.0010021250000000065, 0.0010021249999999926, 0.0010021669999999983, 0.0010021659999999988, 0.0010021659999999988, 0.001002111, 0.0010021249999999926, 0.0010021389999999991]</msg>
<status status="PASS" starttime="20201030 15:51:40.427" endtime="20201030 15:51:40.429"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.423" endtime="20201030 15:51:40.430"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:40.433" endtime="20201030 15:51:40.453"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.432" endtime="20201030 15:51:40.453"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.431" endtime="20201030 15:51:40.454"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.032" endtime="20201030 15:51:40.454"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.032" endtime="20201030 15:51:40.454"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:40.462" endtime="20201030 15:51:40.528"></status>
</kw>
<msg timestamp="20201030 15:51:40.529" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:40.461" endtime="20201030 15:51:40.530"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:40.534" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:40.532" endtime="20201030 15:51:40.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:40.537" endtime="20201030 15:51:40.540"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.458" endtime="20201030 15:51:40.541"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.456" endtime="20201030 15:51:40.542"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:40.555" endtime="20201030 15:51:40.846"></status>
</kw>
<msg timestamp="20201030 15:51:40.849" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018534389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019613681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:40.552" endtime="20201030 15:51:40.849"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:40.856" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018534389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019613681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:40.850" endtime="20201030 15:51:40.857"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:40.857" endtime="20201030 15:51:40.859"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.547" endtime="20201030 15:51:40.860"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.543" endtime="20201030 15:51:40.860"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:40.864" level="INFO">${PHILIP_RES} = [{'diff': 0.0010792920000000025}, {'diff': 0.0010768480000000018}, {'diff': 0.0010770550000000004}, {'diff': 0.0010769160000000007}, {'diff': 0.0010770140000000011}, {'diff': 0.001076986000000002}, {'...</msg>
<status status="PASS" starttime="20201030 15:51:40.861" endtime="20201030 15:51:40.864"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:40.868" level="INFO">${RESULT} = {'diff': [0.0010792920000000025, 0.0010768480000000018, 0.0010770550000000004, 0.0010769160000000007, 0.0010770140000000011, 0.001076986000000002, 0.0010770559999999998, 0.001076971999999999, 0.001077...</msg>
<status status="PASS" starttime="20201030 15:51:40.865" endtime="20201030 15:51:40.868"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:40.872" level="INFO">NAME: 22-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:40.871" endtime="20201030 15:51:40.872"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:40.874" level="INFO">VALUE: [0.0010792920000000025, 0.0010768480000000018, 0.0010770550000000004, 0.0010769160000000007, 0.0010770140000000011, 0.001076986000000002, 0.0010770559999999998, 0.001076971999999999, 0.0010770420000000003, 0.0010770420000000003, 0.0010770140000000011, 0.0010770420000000003, 0.0010770420000000003, 0.001076874999999998, 0.0010769720000000024, 0.0010769170000000036, 0.0010769440000000033, 0.0010769169999999967, 0.0010769439999999963, 0.001076903000000004, 0.001076792, 0.0010768189999999997, 0.0010768609999999984, 0.0010768199999999992, 0.0010768059999999996, 0.0010768329999999993, 0.001076792, 0.0010768189999999997, 0.0010768609999999984, 0.0010769159999999972, 0.0010768469999999988, 0.0010768339999999987, 0.0010768329999999993, 0.0010767360000000017, 0.0010769029999999971, 0.0010769720000000024, 0.0010768609999999984, 0.0010769169999999967, 0.0010768609999999984, 0.001076846999999992, 0.001076957999999989, 0.0010769170000000106, 0.0010768619999999979, 0.0010769300000000037, 0.001076972999999995, 0.0010769029999999902, 0.001076875000000005, 0.001076972999999995, 0.0010769019999999907, 0.0010769310000000032]</msg>
<status status="PASS" starttime="20201030 15:51:40.873" endtime="20201030 15:51:40.875"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.868" endtime="20201030 15:51:40.876"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:40.879" endtime="20201030 15:51:40.899"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.878" endtime="20201030 15:51:40.899"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.877" endtime="20201030 15:51:40.900"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.455" endtime="20201030 15:51:40.900"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.454" endtime="20201030 15:51:40.900"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:40.908" endtime="20201030 15:51:40.978"></status>
</kw>
<msg timestamp="20201030 15:51:40.979" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:40.907" endtime="20201030 15:51:40.979"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:40.982" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:40.980" endtime="20201030 15:51:40.982"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:40.983" endtime="20201030 15:51:40.984"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.904" endtime="20201030 15:51:40.985"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.902" endtime="20201030 15:51:40.985"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:40.991" endtime="20201030 15:51:41.277"></status>
</kw>
<msg timestamp="20201030 15:51:41.280" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019566222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020722736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:40.990" endtime="20201030 15:51:41.280"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:41.287" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019566222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020722736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:41.281" endtime="20201030 15:51:41.288"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:41.289" endtime="20201030 15:51:41.293"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.987" endtime="20201030 15:51:41.294"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.986" endtime="20201030 15:51:41.295"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:41.305" level="INFO">${PHILIP_RES} = [{'diff': 0.0011565139999999974}, {'diff': 0.0011542080000000003}, {'diff': 0.001154139000000002}, {'diff': 0.0011541950000000002}, {'diff': 0.001154249999999999}, {'diff': 0.0011540560000000005}, {'d...</msg>
<status status="PASS" starttime="20201030 15:51:41.297" endtime="20201030 15:51:41.305"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:41.315" level="INFO">${RESULT} = {'diff': [0.0011565139999999974, 0.0011542080000000003, 0.001154139000000002, 0.0011541950000000002, 0.001154249999999999, 0.0011540560000000005, 0.0011541810000000007, 0.001154152000000002, 0.0011540...</msg>
<status status="PASS" starttime="20201030 15:51:41.307" endtime="20201030 15:51:41.315"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:41.325" level="INFO">NAME: 23-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:41.322" endtime="20201030 15:51:41.325"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:41.331" level="INFO">VALUE: [0.0011565139999999974, 0.0011542080000000003, 0.001154139000000002, 0.0011541950000000002, 0.001154249999999999, 0.0011540560000000005, 0.0011541810000000007, 0.001154152000000002, 0.001154042000000001, 0.0011540689999999972, 0.0011541799999999977, 0.0011541389999999985, 0.0011541659999999981, 0.0011541389999999985, 0.0011541109999999993, 0.0011541519999999986, 0.0011541669999999976, 0.001154166000000005, 0.0011541799999999977, 0.0011542769999999952, 0.0011541799999999977, 0.0011541669999999976, 0.0011542500000000025, 0.001154264000000002, 0.0011541659999999981, 0.0011541810000000041, 0.001154152999999998, 0.0011542629999999957, 0.0011542780000000016, 0.0011542230000000028, 0.0011542079999999968, 0.0011542079999999968, 0.0011541799999999977, 0.0011541940000000042, 0.0011541659999999981, 0.0011541949999999968, 0.0011541109999999993, 0.0011541669999999976, 0.0011541669999999976, 0.001154236000000003, 0.0011541810000000041, 0.001154235999999989, 0.0011541939999999973, 0.0011541810000000041, 0.001154153000000005, 0.0011541250000000058, 0.001154153000000005, 0.0011540970000000067, 0.0011540969999999928, 0.0011540690000000076]</msg>
<status status="PASS" starttime="20201030 15:51:41.327" endtime="20201030 15:51:41.334"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.317" endtime="20201030 15:51:41.336"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:41.343" endtime="20201030 15:51:41.365"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.340" endtime="20201030 15:51:41.366"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.338" endtime="20201030 15:51:41.367"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.901" endtime="20201030 15:51:41.367"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.900" endtime="20201030 15:51:41.368"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:41.385" endtime="20201030 15:51:41.461"></status>
</kw>
<msg timestamp="20201030 15:51:41.461" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:41.382" endtime="20201030 15:51:41.461"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:41.463" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:41.462" endtime="20201030 15:51:41.464"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:41.464" endtime="20201030 15:51:41.466"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.377" endtime="20201030 15:51:41.467"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.373" endtime="20201030 15:51:41.467"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:41.473" endtime="20201030 15:51:41.760"></status>
</kw>
<msg timestamp="20201030 15:51:41.763" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.032370708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033606736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:41.472" endtime="20201030 15:51:41.763"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:41.770" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.032370708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033606736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:41.764" endtime="20201030 15:51:41.771"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:41.772" endtime="20201030 15:51:41.773"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.469" endtime="20201030 15:51:41.774"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.468" endtime="20201030 15:51:41.774"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:41.778" level="INFO">${PHILIP_RES} = [{'diff': 0.0012360280000000001}, {'diff': 0.0012336390000000017}, {'diff': 0.0012336390000000017}, {'diff': 0.0012337359999999992}, {'diff': 0.0012336810000000004}, {'diff': 0.0012336940000000005}, {...</msg>
<status status="PASS" starttime="20201030 15:51:41.775" endtime="20201030 15:51:41.778"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:41.783" level="INFO">${RESULT} = {'diff': [0.0012360280000000001, 0.0012336390000000017, 0.0012336390000000017, 0.0012337359999999992, 0.0012336810000000004, 0.0012336940000000005, 0.0012336800000000009, 0.0012337359999999992, 0.0012...</msg>
<status status="PASS" starttime="20201030 15:51:41.779" endtime="20201030 15:51:41.783"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:41.787" level="INFO">NAME: 24-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:41.786" endtime="20201030 15:51:41.787"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:41.789" level="INFO">VALUE: [0.0012360280000000001, 0.0012336390000000017, 0.0012336390000000017, 0.0012337359999999992, 0.0012336810000000004, 0.0012336940000000005, 0.0012336800000000009, 0.0012337359999999992, 0.001233625000000002, 0.001233625000000002, 0.0012336390000000017, 0.001233708, 0.0012336810000000004, 0.0012337640000000052, 0.001233791000000005, 0.0012336940000000005, 0.0012337779999999979, 0.0012336110000000025, 0.0012335830000000034, 0.0012335549999999973, 0.0012336800000000009, 0.0012336660000000013, 0.0012335980000000024, 0.001233583999999996, 0.0012335840000000098, 0.0012336530000000012, 0.0012337089999999995, 0.0012336660000000083, 0.001233708, 0.0012336800000000009, 0.0012335980000000024, 0.0012337919999999974, 0.0012336950000000069, 0.0012337359999999992, 0.001233777999999991, 0.0012336659999999944, 0.0012337500000000057, 0.001233708, 0.001233708, 0.0012337359999999992, 0.0012337089999999995, 0.0012337359999999992, 0.0012336800000000009, 0.001233679999999987, 0.0012337919999999974, 0.0012337089999999995, 0.0012336810000000004, 0.0012336810000000004, 0.0012337780000000048, 0.0012337640000000122]</msg>
<status status="PASS" starttime="20201030 15:51:41.788" endtime="20201030 15:51:41.790"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.784" endtime="20201030 15:51:41.791"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:41.794" endtime="20201030 15:51:41.814"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.793" endtime="20201030 15:51:41.814"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.792" endtime="20201030 15:51:41.815"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.370" endtime="20201030 15:51:41.815"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.369" endtime="20201030 15:51:41.815"></status>
</kw>
<kw name="${n} = 25" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:41.823" endtime="20201030 15:51:41.901"></status>
</kw>
<msg timestamp="20201030 15:51:41.902" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:41.822" endtime="20201030 15:51:41.902"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:41.904" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:41.903" endtime="20201030 15:51:41.905"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:41.905" endtime="20201030 15:51:41.907"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.819" endtime="20201030 15:51:41.908"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.817" endtime="20201030 15:51:41.908"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:41.914" endtime="20201030 15:51:42.218"></status>
</kw>
<msg timestamp="20201030 15:51:42.221" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018640958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019959139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:41.913" endtime="20201030 15:51:42.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:42.229" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018640958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019959139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:42.223" endtime="20201030 15:51:42.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:42.230" endtime="20201030 15:51:42.232"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.910" endtime="20201030 15:51:42.232"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.909" endtime="20201030 15:51:42.233"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:42.237" level="INFO">${PHILIP_RES} = [{'diff': 0.0013181810000000016}, {'diff': 0.0013158189999999993}, {'diff': 0.0013159169999999998}, {'diff': 0.0013159030000000002}, {'diff': 0.0013159160000000003}, {'diff': 0.0013159299999999999}, {...</msg>
<status status="PASS" starttime="20201030 15:51:42.234" endtime="20201030 15:51:42.237"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:42.241" level="INFO">${RESULT} = {'diff': [0.0013181810000000016, 0.0013158189999999993, 0.0013159169999999998, 0.0013159030000000002, 0.0013159160000000003, 0.0013159299999999999, 0.0013159030000000002, 0.0013158189999999993, 0.0013...</msg>
<status status="PASS" starttime="20201030 15:51:42.238" endtime="20201030 15:51:42.241"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:42.245" level="INFO">NAME: 25-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:42.244" endtime="20201030 15:51:42.245"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:42.247" level="INFO">VALUE: [0.0013181810000000016, 0.0013158189999999993, 0.0013159169999999998, 0.0013159030000000002, 0.0013159160000000003, 0.0013159299999999999, 0.0013159030000000002, 0.0013158189999999993, 0.0013158890000000006, 0.0013159309999999994, 0.0013159169999999998, 0.0013158890000000006, 0.001315875000000001, 0.0013158329999999954, 0.001315875000000001, 0.0013159030000000002, 0.0013159999999999977, 0.0013159309999999994, 0.0013158609999999946, 0.001315875000000001, 0.0013159160000000003, 0.0013158340000000018, 0.001315944999999999, 0.0013159719999999986, 0.0013159170000000067, 0.0013159020000000007, 0.0013159030000000002, 0.001315957999999999, 0.0013159030000000002, 0.001315958000000006, 0.001315875000000001, 0.0013158340000000018, 0.0013158050000000032, 0.001315846999999995, 0.0013158340000000018, 0.0013157919999999962, 0.0013157919999999962, 0.0013158330000000024, 0.0013157220000000053, 0.0013158470000000089, 0.0013158189999999959, 0.0013159029999999933, 0.001315846999999995, 0.0013158050000000032, 0.0013157919999999962, 0.001315763999999997, 0.0013158329999999885, 0.0013158479999999945, 0.0013158330000000024, 0.001315777000000004]</msg>
<status status="PASS" starttime="20201030 15:51:42.246" endtime="20201030 15:51:42.248"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:42.241" endtime="20201030 15:51:42.249"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:42.252" endtime="20201030 15:51:42.272"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:42.251" endtime="20201030 15:51:42.272"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:42.249" endtime="20201030 15:51:42.273"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.816" endtime="20201030 15:51:42.273"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.815" endtime="20201030 15:51:42.273"></status>
</kw>
<kw name="${n} = 26" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:42.281" endtime="20201030 15:51:42.365"></status>
</kw>
<msg timestamp="20201030 15:51:42.365" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:42.280" endtime="20201030 15:51:42.365"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:42.368" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:42.366" endtime="20201030 15:51:42.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:42.369" endtime="20201030 15:51:42.370"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:42.277" endtime="20201030 15:51:42.371"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:42.275" endtime="20201030 15:51:42.371"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:42.378" endtime="20201030 15:51:42.664"></status>
</kw>
<msg timestamp="20201030 15:51:42.667" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019568903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020971847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:42.376" endtime="20201030 15:51:42.667"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:42.674" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019568903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020971847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:42.668" endtime="20201030 15:51:42.675"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:42.675" endtime="20201030 15:51:42.677"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:42.374" endtime="20201030 15:51:42.677"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:42.372" endtime="20201030 15:51:42.678"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:42.682" level="INFO">${PHILIP_RES} = [{'diff': 0.0014029439999999997}, {'diff': 0.0014005139999999985}, {'diff': 0.0014005560000000007}, {'diff': 0.0014005839999999999}, {'diff': 0.0014006529999999982}, {'diff': 0.0014006670000000013}, {...</msg>
<status status="PASS" starttime="20201030 15:51:42.679" endtime="20201030 15:51:42.682"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:42.686" level="INFO">${RESULT} = {'diff': [0.0014029439999999997, 0.0014005139999999985, 0.0014005560000000007, 0.0014005839999999999, 0.0014006529999999982, 0.0014006670000000013, 0.0014006529999999982, 0.0014006810000000008, 0.0014...</msg>
<status status="PASS" starttime="20201030 15:51:42.683" endtime="20201030 15:51:42.686"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:42.690" level="INFO">NAME: 26-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:42.689" endtime="20201030 15:51:42.690"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:42.692" level="INFO">VALUE: [0.0014029439999999997, 0.0014005139999999985, 0.0014005560000000007, 0.0014005839999999999, 0.0014006529999999982, 0.0014006670000000013, 0.0014006529999999982, 0.0014006810000000008, 0.0014006670000000013, 0.0014006249999999956, 0.0014006250000000026, 0.0014005549999999978, 0.0014006530000000017, 0.0014005840000000033, 0.001400582999999997, 0.001400527999999998, 0.0014006250000000026, 0.0014006249999999956, 0.0014005970000000034, 0.0014006249999999956, 0.001400611000000003, 0.0014006670000000013, 0.0014006249999999956, 0.0014005560000000042, 0.001400582999999997, 0.0014005690000000043, 0.0014006249999999956, 0.0014006389999999952, 0.0014006389999999952, 0.001400582999999997, 0.001400598000000003, 0.0014004719999999998, 0.0014006249999999887, 0.0014006660000000087, 0.0014006950000000074, 0.0014005269999999986, 0.0014007780000000053, 0.0014007230000000065, 0.0014007219999999931, 0.0014006940000000079, 0.00140061100000001, 0.0014006659999999949, 0.0014006670000000082, 0.0014005970000000034, 0.0014005700000000038, 0.0014006950000000074, 0.0014006810000000008, 0.0014006389999999952, 0.0014006389999999952, 0.0014007359999999996]</msg>
<status status="PASS" starttime="20201030 15:51:42.691" endtime="20201030 15:51:42.696"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:42.687" endtime="20201030 15:51:42.697"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:42.701" endtime="20201030 15:51:42.720"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:42.699" endtime="20201030 15:51:42.721"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:42.698" endtime="20201030 15:51:42.721"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:42.274" endtime="20201030 15:51:42.721"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:42.273" endtime="20201030 15:51:42.721"></status>
</kw>
<kw name="${n} = 27" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:42.730" endtime="20201030 15:51:42.817"></status>
</kw>
<msg timestamp="20201030 15:51:42.817" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:42.728" endtime="20201030 15:51:42.817"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:42.820" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:42.818" endtime="20201030 15:51:42.820"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:42.821" endtime="20201030 15:51:42.822"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:42.726" endtime="20201030 15:51:42.823"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:42.724" endtime="20201030 15:51:42.823"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:42.830" endtime="20201030 15:51:43.132"></status>
</kw>
<msg timestamp="20201030 15:51:43.135" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018613903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020104153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:42.828" endtime="20201030 15:51:43.135"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:43.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018613903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020104153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:43.136" endtime="20201030 15:51:43.143"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:43.143" endtime="20201030 15:51:43.145"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:42.826" endtime="20201030 15:51:43.146"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:42.824" endtime="20201030 15:51:43.146"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:43.150" level="INFO">${PHILIP_RES} = [{'diff': 0.0014902499999999985}, {'diff': 0.001487833000000001}, {'diff': 0.0014879029999999988}, {'diff': 0.001487945000000001}, {'diff': 0.0014880549999999985}, {'diff': 0.001487958999999997}, {'di...</msg>
<status status="PASS" starttime="20201030 15:51:43.147" endtime="20201030 15:51:43.150"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:43.155" level="INFO">${RESULT} = {'diff': [0.0014902499999999985, 0.001487833000000001, 0.0014879029999999988, 0.001487945000000001, 0.0014880549999999985, 0.001487958999999997, 0.0014879859999999967, 0.0014878190000000013, 0.0014878...</msg>
<status status="PASS" starttime="20201030 15:51:43.151" endtime="20201030 15:51:43.155"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:43.159" level="INFO">NAME: 27-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:43.158" endtime="20201030 15:51:43.159"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:43.162" level="INFO">VALUE: [0.0014902499999999985, 0.001487833000000001, 0.0014879029999999988, 0.001487945000000001, 0.0014880549999999985, 0.001487958999999997, 0.0014879859999999967, 0.0014878190000000013, 0.0014878340000000004, 0.0014878470000000005, 0.0014878060000000012, 0.0014877220000000038, 0.0014877640000000025, 0.001487861, 0.0014878340000000004, 0.0014877910000000022, 0.0014877229999999964, 0.0014878469999999935, 0.0014878060000000012, 0.0014879299999999984, 0.0014878340000000004, 0.001487833000000001, 0.0014877639999999956, 0.0014878060000000012, 0.0014878190000000013, 0.0014878059999999943, 0.0014877359999999965, 0.0014876800000000051, 0.0014878890000000061, 0.0014878059999999943, 0.0014878470000000005, 0.0014878749999999996, 0.001487861000000007, 0.0014878879999999928, 0.001487943999999991, 0.0014878749999999996, 0.0014878889999999922, 0.0014878049999999948, 0.0014878200000000008, 0.001487832999999994, 0.001487778000000009, 0.001487860999999993, 0.0014878749999999996, 0.001487832999999994, 0.0014878049999999948, 0.0014878049999999948, 0.00148775000000001, 0.0014877910000000022, 0.0014878749999999996, 0.0014878190000000013]</msg>
<status status="PASS" starttime="20201030 15:51:43.160" endtime="20201030 15:51:43.162"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:43.156" endtime="20201030 15:51:43.163"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:43.166" endtime="20201030 15:51:43.186"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:43.165" endtime="20201030 15:51:43.186"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:43.164" endtime="20201030 15:51:43.187"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:42.722" endtime="20201030 15:51:43.187"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:42.722" endtime="20201030 15:51:43.187"></status>
</kw>
<kw name="${n} = 28" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:43.195" endtime="20201030 15:51:43.287"></status>
</kw>
<msg timestamp="20201030 15:51:43.288" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:43.194" endtime="20201030 15:51:43.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:43.290" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:43.289" endtime="20201030 15:51:43.291"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:43.291" endtime="20201030 15:51:43.293"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:43.191" endtime="20201030 15:51:43.293"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:43.189" endtime="20201030 15:51:43.294"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:43.300" endtime="20201030 15:51:43.590"></status>
</kw>
<msg timestamp="20201030 15:51:43.594" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018606097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020186028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:43.299" endtime="20201030 15:51:43.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:43.602" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018606097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020186028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:43.595" endtime="20201030 15:51:43.602"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:43.603" endtime="20201030 15:51:43.605"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:43.296" endtime="20201030 15:51:43.605"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:43.294" endtime="20201030 15:51:43.606"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:43.609" level="INFO">${PHILIP_RES} = [{'diff': 0.0015799310000000032}, {'diff': 0.001577514000000002}, {'diff': 0.001577597}, {'diff': 0.001577597}, {'diff': 0.001577611999999999}, {'diff': 0.0015774439999999973}, {'diff': 0.001577542000...</msg>
<status status="PASS" starttime="20201030 15:51:43.606" endtime="20201030 15:51:43.609"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:43.613" level="INFO">${RESULT} = {'diff': [0.0015799310000000032, 0.001577514000000002, 0.001577597, 0.001577597, 0.001577611999999999, 0.0015774439999999973, 0.0015775420000000012, 0.0015775000000000025, 0.001577485999999996, 0.0015...</msg>
<status status="PASS" starttime="20201030 15:51:43.610" endtime="20201030 15:51:43.614"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:43.618" level="INFO">NAME: 28-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:43.617" endtime="20201030 15:51:43.618"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:43.620" level="INFO">VALUE: [0.0015799310000000032, 0.001577514000000002, 0.001577597, 0.001577597, 0.001577611999999999, 0.0015774439999999973, 0.0015775420000000012, 0.0015775000000000025, 0.001577485999999996, 0.0015775280000000017, 0.0015774309999999972, 0.0015775560000000008, 0.0015775000000000025, 0.0015774720000000034, 0.001577514000000002, 0.0015774720000000034, 0.0015774869999999955, 0.001577486000000003, 0.0015776529999999983, 0.001577597, 0.0015775410000000017, 0.0015775559999999939, 0.001577584, 0.0015775700000000004, 0.0015775830000000005, 0.001577584, 0.001577597, 0.001577597, 0.001577486000000003, 0.0015775829999999935, 0.0015776380000000062, 0.0015776529999999983, 0.001577583999999993, 0.0015776809999999974, 0.0015776809999999974, 0.0015776940000000045, 0.0015775560000000077, 0.0015775000000000095, 0.0015774449999999968, 0.0015775420000000012, 0.0015775550000000083, 0.0015775549999999944, 0.001577486000000003, 0.0015774300000000047, 0.001577597, 0.0015775420000000012, 0.0015776810000000113, 0.001577514000000002, 0.0015776249999999992, 0.0015775560000000077]</msg>
<status status="PASS" starttime="20201030 15:51:43.619" endtime="20201030 15:51:43.621"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:43.614" endtime="20201030 15:51:43.621"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:43.625" endtime="20201030 15:51:43.644"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:43.623" endtime="20201030 15:51:43.645"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:43.622" endtime="20201030 15:51:43.645"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:43.188" endtime="20201030 15:51:43.646"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:43.188" endtime="20201030 15:51:43.646"></status>
</kw>
<kw name="${n} = 29" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:43.654" endtime="20201030 15:51:43.753"></status>
</kw>
<msg timestamp="20201030 15:51:43.754" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:43.653" endtime="20201030 15:51:43.755"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:43.759" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:43.756" endtime="20201030 15:51:43.760"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:43.762" endtime="20201030 15:51:43.765"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:43.650" endtime="20201030 15:51:43.766"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:43.648" endtime="20201030 15:51:43.767"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:43.780" endtime="20201030 15:51:44.074"></status>
</kw>
<msg timestamp="20201030 15:51:44.077" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0196705, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021342431, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:51:43.777" endtime="20201030 15:51:44.077"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:44.085" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0196705, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021342431, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:51:44.078" endtime="20201030 15:51:44.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:44.086" endtime="20201030 15:51:44.088"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:43.772" endtime="20201030 15:51:44.088"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:43.768" endtime="20201030 15:51:44.089"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:44.092" level="INFO">${PHILIP_RES} = [{'diff': 0.001671930999999998}, {'diff': 0.001669707999999999}, {'diff': 0.0016696799999999998}, {'diff': 0.001669819000000003}, {'diff': 0.0016696530000000001}, {'diff': 0.0016696390000000005}, {'di...</msg>
<status status="PASS" starttime="20201030 15:51:44.089" endtime="20201030 15:51:44.093"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:44.096" level="INFO">${RESULT} = {'diff': [0.001671930999999998, 0.001669707999999999, 0.0016696799999999998, 0.001669819000000003, 0.0016696530000000001, 0.0016696390000000005, 0.0016695279999999965, 0.0016695970000000018, 0.0016694...</msg>
<status status="PASS" starttime="20201030 15:51:44.093" endtime="20201030 15:51:44.097"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:44.101" level="INFO">NAME: 29-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:44.100" endtime="20201030 15:51:44.101"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:44.103" level="INFO">VALUE: [0.001671930999999998, 0.001669707999999999, 0.0016696799999999998, 0.001669819000000003, 0.0016696530000000001, 0.0016696390000000005, 0.0016695279999999965, 0.0016695970000000018, 0.0016694719999999982, 0.001669430999999999, 0.0016695280000000035, 0.0016694589999999981, 0.001669625000000001, 0.0016695279999999965, 0.0016696669999999997, 0.0016696530000000001, 0.0016696110000000014, 0.0016695700000000022, 0.0016695559999999957, 0.0016696110000000014, 0.0016696809999999992, 0.0016696390000000005, 0.0016697219999999985, 0.0016696939999999993, 0.0016697090000000053, 0.00166954200000001, 0.0016696669999999997, 0.001669736000000005, 0.0016696949999999988, 0.0016695689999999958, 0.0016697369999999906, 0.001669653000000007, 0.001669707999999992, 0.0016697499999999976, 0.0016697220000000124, 0.0016698060000000098, 0.0016695830000000023, 0.0016696390000000005, 0.0016696939999999993, 0.0016697910000000038, 0.0016698049999999964, 0.0016698480000000016, 0.0016697640000000041, 0.0016697920000000033, 0.0016697220000000124, 0.001669833999999995, 0.0016697500000000115, 0.0016698060000000098, 0.0016697779999999968, 0.0016698329999999956]</msg>
<status status="PASS" starttime="20201030 15:51:44.102" endtime="20201030 15:51:44.105"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.097" endtime="20201030 15:51:44.105"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:44.109" endtime="20201030 15:51:44.128"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.107" endtime="20201030 15:51:44.129"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.106" endtime="20201030 15:51:44.129"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:43.647" endtime="20201030 15:51:44.129"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:43.646" endtime="20201030 15:51:44.129"></status>
</kw>
<kw name="${n} = 30" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:44.138" endtime="20201030 15:51:44.240"></status>
</kw>
<msg timestamp="20201030 15:51:44.240" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:44.136" endtime="20201030 15:51:44.240"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:44.243" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:44.241" endtime="20201030 15:51:44.243"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:44.244" endtime="20201030 15:51:44.245"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.134" endtime="20201030 15:51:44.246"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.132" endtime="20201030 15:51:44.246"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:44.252" endtime="20201030 15:51:44.548"></status>
</kw>
<msg timestamp="20201030 15:51:44.554" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0187315, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020498222, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:51:44.251" endtime="20201030 15:51:44.555"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:44.571" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0187315, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020498222, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:51:44.557" endtime="20201030 15:51:44.572"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:44.574" endtime="20201030 15:51:44.577"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.248" endtime="20201030 15:51:44.578"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.247" endtime="20201030 15:51:44.579"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:44.587" level="INFO">${PHILIP_RES} = [{'diff': 0.0017667219999999983}, {'diff': 0.0017642779999999976}, {'diff': 0.0017643469999999994}, {'diff': 0.0017642640000000015}, {'diff': 0.0017643200000000032}, {'diff': 0.001764263000000002}, {'...</msg>
<status status="PASS" starttime="20201030 15:51:44.581" endtime="20201030 15:51:44.588"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:44.598" level="INFO">${RESULT} = {'diff': [0.0017667219999999983, 0.0017642779999999976, 0.0017643469999999994, 0.0017642640000000015, 0.0017643200000000032, 0.001764263000000002, 0.0017643609999999955, 0.0017644450000000034, 0.00176...</msg>
<status status="PASS" starttime="20201030 15:51:44.589" endtime="20201030 15:51:44.598"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:44.607" level="INFO">NAME: 30-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:44.605" endtime="20201030 15:51:44.607"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:44.612" level="INFO">VALUE: [0.0017667219999999983, 0.0017642779999999976, 0.0017643469999999994, 0.0017642640000000015, 0.0017643200000000032, 0.001764263000000002, 0.0017643609999999955, 0.0017644450000000034, 0.001764443999999997, 0.001764250000000002, 0.001764278000000001, 0.0017643049999999938, 0.0017643469999999994, 0.0017644030000000047, 0.0017643329999999999, 0.0017644309999999969, 0.0017643879999999987, 0.0017644310000000038, 0.0017644860000000026, 0.0017644169999999973, 0.0017643190000000003, 0.0017643889999999982, 0.0017644310000000038, 0.0017644590000000099, 0.0017644299999999974, 0.001764472000000003, 0.0017643749999999986, 0.001764360999999992, 0.0017643889999999912, 0.0017645410000000084, 0.0017644309999999969, 0.0017644590000000099, 0.0017643050000000077, 0.0017643199999999998, 0.0017644310000000107, 0.0017643469999999994, 0.0017644579999999965, 0.0017644299999999974, 0.0017643190000000003, 0.0017645409999999945, 0.0017645280000000013, 0.001764555000000001, 0.0017643190000000003, 0.001764332999999993, 0.0017644309999999969, 0.0017643190000000003, 0.001764389000000005, 0.001764332999999993, 0.0017644030000000116, 0.0017644859999999957]</msg>
<status status="PASS" starttime="20201030 15:51:44.609" endtime="20201030 15:51:44.613"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.599" endtime="20201030 15:51:44.614"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:44.622" endtime="20201030 15:51:44.642"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.619" endtime="20201030 15:51:44.642"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.616" endtime="20201030 15:51:44.643"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.130" endtime="20201030 15:51:44.643"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.130" endtime="20201030 15:51:44.643"></status>
</kw>
<kw name="${n} = 31" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:44.651" endtime="20201030 15:51:44.758"></status>
</kw>
<msg timestamp="20201030 15:51:44.759" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:44.650" endtime="20201030 15:51:44.759"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:44.761" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:44.760" endtime="20201030 15:51:44.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:44.762" endtime="20201030 15:51:44.764"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.647" endtime="20201030 15:51:44.765"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.645" endtime="20201030 15:51:44.765"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:44.771" endtime="20201030 15:51:45.060"></status>
</kw>
<msg timestamp="20201030 15:51:45.063" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018606986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020470667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:44.770" endtime="20201030 15:51:45.064"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:45.071" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018606986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020470667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:45.064" endtime="20201030 15:51:45.071"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:45.072" endtime="20201030 15:51:45.074"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.767" endtime="20201030 15:51:45.074"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.766" endtime="20201030 15:51:45.075"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:45.078" level="INFO">${PHILIP_RES} = [{'diff': 0.0018636810000000024}, {'diff': 0.001861306}, {'diff': 0.0018613749999999984}, {'diff': 0.0018615279999999977}, {'diff': 0.001861388999999998}, {'diff': 0.0018614999999999986}, {'diff': 0.0...</msg>
<status status="PASS" starttime="20201030 15:51:45.075" endtime="20201030 15:51:45.079"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:45.082" level="INFO">${RESULT} = {'diff': [0.0018636810000000024, 0.001861306, 0.0018613749999999984, 0.0018615279999999977, 0.001861388999999998, 0.0018614999999999986, 0.001861417000000004, 0.0018614449999999963, 0.0018614029999999...</msg>
<status status="PASS" starttime="20201030 15:51:45.079" endtime="20201030 15:51:45.083"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:45.087" level="INFO">NAME: 31-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:45.086" endtime="20201030 15:51:45.087"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:45.089" level="INFO">VALUE: [0.0018636810000000024, 0.001861306, 0.0018613749999999984, 0.0018615279999999977, 0.001861388999999998, 0.0018614999999999986, 0.001861417000000004, 0.0018614449999999963, 0.0018614029999999976, 0.001861500000000002, 0.0018613329999999997, 0.001861472000000003, 0.0018614860000000025, 0.0018614580000000033, 0.0018615140000000016, 0.0018613879999999985, 0.001861583, 0.0018615140000000016, 0.0018614439999999968, 0.0018614439999999968, 0.0018614580000000033, 0.0018612919999999936, 0.001861277999999994, 0.0018613749999999984, 0.0018614029999999976, 0.0018615139999999947, 0.0018614580000000103, 0.001861389000000005, 0.0018614439999999899, 0.0018614579999999964, 0.0018615140000000086, 0.0018614859999999955, 0.0018614309999999967, 0.001861583, 0.0018615270000000017, 0.0018615280000000012, 0.0018615700000000068, 0.0018615279999999873, 0.0018615140000000086, 0.0018617219999999962, 0.0018616389999999983, 0.001861500000000002, 0.0018615270000000017, 0.0018615419999999938, 0.0018615700000000068, 0.0018614160000000046, 0.0018614859999999955, 0.0018614309999999967, 0.0018614999999999882, 0.0018615139999999947]</msg>
<status status="PASS" starttime="20201030 15:51:45.088" endtime="20201030 15:51:45.090"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.083" endtime="20201030 15:51:45.090"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:45.094" endtime="20201030 15:51:45.113"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.093" endtime="20201030 15:51:45.114"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.091" endtime="20201030 15:51:45.114"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.644" endtime="20201030 15:51:45.115"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.643" endtime="20201030 15:51:45.115"></status>
</kw>
<kw name="${n} = 32" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:45.123" endtime="20201030 15:51:45.236"></status>
</kw>
<msg timestamp="20201030 15:51:45.236" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:45.122" endtime="20201030 15:51:45.237"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:45.239" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:45.238" endtime="20201030 15:51:45.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:45.240" endtime="20201030 15:51:45.242"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.119" endtime="20201030 15:51:45.242"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.117" endtime="20201030 15:51:45.243"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:45.249" endtime="20201030 15:51:45.553"></status>
</kw>
<msg timestamp="20201030 15:51:45.556" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019509014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021472556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:45.247" endtime="20201030 15:51:45.556"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:45.563" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019509014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021472556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:45.557" endtime="20201030 15:51:45.564"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:45.564" endtime="20201030 15:51:45.566"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.245" endtime="20201030 15:51:45.567"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.243" endtime="20201030 15:51:45.567"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:45.571" level="INFO">${PHILIP_RES} = [{'diff': 0.0019635419999999987}, {'diff': 0.001960972000000002}, {'diff': 0.001961153}, {'diff': 0.001961084000000002}, {'diff': 0.0019611110000000015}, {'diff': 0.001961138999999997}, {'diff': 0.001...</msg>
<status status="PASS" starttime="20201030 15:51:45.568" endtime="20201030 15:51:45.572"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:45.576" level="INFO">${RESULT} = {'diff': [0.0019635419999999987, 0.001960972000000002, 0.001961153, 0.001961084000000002, 0.0019611110000000015, 0.001961138999999997, 0.001961153, 0.0019611669999999998, 0.0019611390000000006, 0.0019...</msg>
<status status="PASS" starttime="20201030 15:51:45.572" endtime="20201030 15:51:45.577"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:45.581" level="INFO">NAME: 32-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:45.580" endtime="20201030 15:51:45.581"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:45.583" level="INFO">VALUE: [0.0019635419999999987, 0.001960972000000002, 0.001961153, 0.001961084000000002, 0.0019611110000000015, 0.001961138999999997, 0.001961153, 0.0019611669999999998, 0.0019611390000000006, 0.001961124999999994, 0.001961042000000003, 0.0019611940000000064, 0.0019611810000000063, 0.001961014000000004, 0.0019609719999999983, 0.001960985999999998, 0.001960875000000001, 0.001960820000000002, 0.0019609579999999988, 0.001961026999999997, 0.001961151999999994, 0.0019611660000000003, 0.001960985999999998, 0.0019609579999999988, 0.0019609720000000053, 0.0019611390000000006, 0.0019609720000000053, 0.001961055000000003, 0.001961112000000001, 0.0019611390000000006, 0.001961124999999994, 0.001961096999999995, 0.0019609580000000126, 0.0019612090000000054, 0.001961194999999999, 0.0019610560000000027, 0.001961055000000003, 0.0019611529999999933, 0.001961096999999995, 0.0019609449999999917, 0.001960985999999998, 0.0019611110000000015, 0.0019611939999999994, 0.0019611529999999933, 0.00196104200000001, 0.0019609719999999914, 0.0019609169999999926, 0.0019610280000000035, 0.0019607779999999964, 0.0019609170000000065]</msg>
<status status="PASS" starttime="20201030 15:51:45.582" endtime="20201030 15:51:45.585"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.577" endtime="20201030 15:51:45.585"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:45.589" endtime="20201030 15:51:45.608"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.587" endtime="20201030 15:51:45.609"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.586" endtime="20201030 15:51:45.609"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.116" endtime="20201030 15:51:45.610"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.115" endtime="20201030 15:51:45.610"></status>
</kw>
<kw name="${n} = 33" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:45.618" endtime="20201030 15:51:45.735"></status>
</kw>
<msg timestamp="20201030 15:51:45.736" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:45.617" endtime="20201030 15:51:45.736"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:45.738" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:45.737" endtime="20201030 15:51:45.739"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:45.739" endtime="20201030 15:51:45.741"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.614" endtime="20201030 15:51:45.742"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.612" endtime="20201030 15:51:45.742"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:45.748" endtime="20201030 15:51:46.037"></status>
</kw>
<msg timestamp="20201030 15:51:46.041" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018765458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020830917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:45.747" endtime="20201030 15:51:46.041"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:46.049" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018765458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020830917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:46.042" endtime="20201030 15:51:46.049"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:46.051" endtime="20201030 15:51:46.052"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.744" endtime="20201030 15:51:46.053"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.743" endtime="20201030 15:51:46.054"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:46.058" level="INFO">${PHILIP_RES} = [{'diff': 0.002065459000000002}, {'diff': 0.0020631800000000013}, {'diff': 0.0020631950000000003}, {'diff': 0.002063264000000002}, {'diff': 0.0020632080000000004}, {'diff': 0.0020630830000000003}, {'d...</msg>
<status status="PASS" starttime="20201030 15:51:46.055" endtime="20201030 15:51:46.058"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:46.063" level="INFO">${RESULT} = {'diff': [0.002065459000000002, 0.0020631800000000013, 0.0020631950000000003, 0.002063264000000002, 0.0020632080000000004, 0.0020630830000000003, 0.0020631809999999973, 0.0020632219999999965, 0.002063...</msg>
<status status="PASS" starttime="20201030 15:51:46.059" endtime="20201030 15:51:46.063"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:46.067" level="INFO">NAME: 33-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:46.066" endtime="20201030 15:51:46.068"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:46.070" level="INFO">VALUE: [0.002065459000000002, 0.0020631800000000013, 0.0020631950000000003, 0.002063264000000002, 0.0020632080000000004, 0.0020630830000000003, 0.0020631809999999973, 0.0020632219999999965, 0.002063097, 0.002063235999999996, 0.0020631809999999973, 0.002063291000000002, 0.0020631670000000046, 0.0020631669999999977, 0.0020630980000000063, 0.002063124999999999, 0.002063027000000002, 0.002063264000000002, 0.002063319000000001, 0.0020631809999999973, 0.0020631390000000055, 0.0020632780000000017, 0.0020631940000000043, 0.0020631670000000046, 0.0020631670000000046, 0.002063124999999999, 0.0020631670000000046, 0.0020632219999999896, 0.0020631809999999973, 0.0020629999999999954, 0.002063013999999988, 0.0020629860000000028, 0.0020630690000000007, 0.0020631809999999973, 0.002063263999999995, 0.002063124999999999, 0.0020631809999999973, 0.0020631109999999925, 0.0020631669999999908, 0.002063235999999996, 0.0020631940000000043, 0.002063264000000009, 0.0020631940000000043, 0.0020632499999999887, 0.0020633050000000014, 0.002063306000000001, 0.0020632500000000026, 0.0020632639999999813, 0.002063235999999996, 0.002063179999999998]</msg>
<status status="PASS" starttime="20201030 15:51:46.068" endtime="20201030 15:51:46.071"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.064" endtime="20201030 15:51:46.071"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:46.075" endtime="20201030 15:51:46.094"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.073" endtime="20201030 15:51:46.095"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.072" endtime="20201030 15:51:46.095"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.611" endtime="20201030 15:51:46.095"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.610" endtime="20201030 15:51:46.096"></status>
</kw>
<kw name="${n} = 34" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:46.104" endtime="20201030 15:51:46.229"></status>
</kw>
<msg timestamp="20201030 15:51:46.230" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:46.102" endtime="20201030 15:51:46.231"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:46.236" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:46.233" endtime="20201030 15:51:46.237"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:46.239" endtime="20201030 15:51:46.243"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.100" endtime="20201030 15:51:46.244"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.098" endtime="20201030 15:51:46.246"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:46.262" endtime="20201030 15:51:46.594"></status>
</kw>
<msg timestamp="20201030 15:51:46.597" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018862806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021032861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:46.259" endtime="20201030 15:51:46.597"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:46.604" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018862806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021032861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:46.598" endtime="20201030 15:51:46.604"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:46.605" endtime="20201030 15:51:46.607"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.252" endtime="20201030 15:51:46.607"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.247" endtime="20201030 15:51:46.608"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:46.612" level="INFO">${PHILIP_RES} = [{'diff': 0.0021700550000000006}, {'diff': 0.0021676379999999995}, {'diff': 0.0021675420000000015}, {'diff': 0.0021673750000000026}, {'diff': 0.002167584}, {'diff': 0.0021678610000000036}, {'diff': 0....</msg>
<status status="PASS" starttime="20201030 15:51:46.609" endtime="20201030 15:51:46.612"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:46.615" level="INFO">${RESULT} = {'diff': [0.0021700550000000006, 0.0021676379999999995, 0.0021675420000000015, 0.0021673750000000026, 0.002167584, 0.0021678610000000036, 0.0021677639999999956, 0.0021676119999999993, 0.00216788899999...</msg>
<status status="PASS" starttime="20201030 15:51:46.613" endtime="20201030 15:51:46.616"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:46.620" level="INFO">NAME: 34-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:46.619" endtime="20201030 15:51:46.620"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:46.622" level="INFO">VALUE: [0.0021700550000000006, 0.0021676379999999995, 0.0021675420000000015, 0.0021673750000000026, 0.002167584, 0.0021678610000000036, 0.0021677639999999956, 0.0021676119999999993, 0.0021678889999999992, 0.002167722000000004, 0.002167820000000001, 0.0021676809999999977, 0.0021677640000000026, 0.002167611, 0.002167721999999997, 0.0021677229999999964, 0.002167638999999999, 0.0021677360000000034, 0.0021676940000000047, 0.0021676799999999913, 0.002167889000000006, 0.002167820000000001, 0.0021676949999999973, 0.002167611, 0.002167666999999998, 0.002167611, 0.0021675830000000007, 0.002167597000000007, 0.002167667000000012, 0.0021678059999999943, 0.0021678059999999943, 0.002167958999999997, 0.002167820000000001, 0.002167721999999997, 0.0021677079999999904, 0.0021677360000000034, 0.0021677769999999957, 0.0021677359999999896, 0.002167832999999994, 0.002167749999999996, 0.0021678339999999935, 0.0021678470000000005, 0.002167749999999996, 0.0021678749999999997, 0.0021679299999999985, 0.0021677909999999884, 0.002167778000000009, 0.0021677360000000034, 0.002167750000000024, 0.0021677920000000017]</msg>
<status status="PASS" starttime="20201030 15:51:46.621" endtime="20201030 15:51:46.623"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.616" endtime="20201030 15:51:46.623"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:46.627" endtime="20201030 15:51:46.647"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.626" endtime="20201030 15:51:46.647"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.624" endtime="20201030 15:51:46.647"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.096" endtime="20201030 15:51:46.648"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.096" endtime="20201030 15:51:46.648"></status>
</kw>
<kw name="${n} = 35" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:46.656" endtime="20201030 15:51:46.786"></status>
</kw>
<msg timestamp="20201030 15:51:46.786" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:46.655" endtime="20201030 15:51:46.786"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:46.789" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:46.787" endtime="20201030 15:51:46.789"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:46.790" endtime="20201030 15:51:46.791"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.652" endtime="20201030 15:51:46.792"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.650" endtime="20201030 15:51:46.792"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:46.798" endtime="20201030 15:51:47.098"></status>
</kw>
<msg timestamp="20201030 15:51:47.104" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019600014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021877597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:46.797" endtime="20201030 15:51:47.105"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:47.121" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019600014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021877597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:47.107" endtime="20201030 15:51:47.122"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:47.124" endtime="20201030 15:51:47.127"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.794" endtime="20201030 15:51:47.128"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.793" endtime="20201030 15:51:47.129"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:47.137" level="INFO">${PHILIP_RES} = [{'diff': 0.0022775829999999997}, {'diff': 0.0022749999999999992}, {'diff': 0.0022748609999999996}, {'diff': 0.0022748189999999974}, {'diff': 0.002274847}, {'diff': 0.0022749580000000005}, {'diff': 0....</msg>
<status status="PASS" starttime="20201030 15:51:47.131" endtime="20201030 15:51:47.137"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:47.145" level="INFO">${RESULT} = {'diff': [0.0022775829999999997, 0.0022749999999999992, 0.0022748609999999996, 0.0022748189999999974, 0.002274847, 0.0022749580000000005, 0.0022749170000000013, 0.0022750970000000037, 0.00227484699999...</msg>
<status status="PASS" starttime="20201030 15:51:47.139" endtime="20201030 15:51:47.146"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:47.153" level="INFO">NAME: 35-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:47.152" endtime="20201030 15:51:47.154"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:47.156" level="INFO">VALUE: [0.0022775829999999997, 0.0022749999999999992, 0.0022748609999999996, 0.0022748189999999974, 0.002274847, 0.0022749580000000005, 0.0022749170000000013, 0.0022750970000000037, 0.0022748469999999965, 0.0022747359999999994, 0.002274916000000002, 0.0022749580000000005, 0.002275124999999996, 0.002275013999999999, 0.0022749859999999997, 0.0022749859999999997, 0.0022750969999999968, 0.0022749859999999997, 0.002274931000000008, 0.002274902999999995, 0.0022748059999999903, 0.002274944000000001, 0.0022747639999999986, 0.0022748749999999957, 0.0022750140000000058, 0.002274833000000004, 0.002275026999999999, 0.0022749999999999992, 0.0022747919999999977, 0.002274749999999992, 0.0022747919999999977, 0.0022747909999999982, 0.0022748469999999965, 0.00227483299999999, 0.002274833000000004, 0.002274944000000001, 0.0022748889999999883, 0.002274889000000002, 0.0022749170000000013, 0.002274889000000002, 0.002274861000000003, 0.0022749030000000087, 0.002274916000000002, 0.0022747919999999977, 0.0022747640000000124, 0.002274902999999995, 0.002274860999999989, 0.002275013999999992, 0.002275054999999998, 0.0022751109999999963]</msg>
<status status="PASS" starttime="20201030 15:51:47.155" endtime="20201030 15:51:47.160"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.147" endtime="20201030 15:51:47.160"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:47.164" endtime="20201030 15:51:47.183"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.163" endtime="20201030 15:51:47.184"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.161" endtime="20201030 15:51:47.184"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.649" endtime="20201030 15:51:47.185"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.648" endtime="20201030 15:51:47.185"></status>
</kw>
<kw name="${n} = 36" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:47.193" endtime="20201030 15:51:47.327"></status>
</kw>
<msg timestamp="20201030 15:51:47.328" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:47.192" endtime="20201030 15:51:47.328"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:47.330" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:47.329" endtime="20201030 15:51:47.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:47.331" endtime="20201030 15:51:47.333"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.189" endtime="20201030 15:51:47.333"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.187" endtime="20201030 15:51:47.334"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:47.340" endtime="20201030 15:51:47.630"></status>
</kw>
<msg timestamp="20201030 15:51:47.633" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018614431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021001278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:47.339" endtime="20201030 15:51:47.633"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:47.640" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018614431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021001278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:47.634" endtime="20201030 15:51:47.641"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:47.642" endtime="20201030 15:51:47.643"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.336" endtime="20201030 15:51:47.644"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.334" endtime="20201030 15:51:47.644"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:47.648" level="INFO">${PHILIP_RES} = [{'diff': 0.002386847000000001}, {'diff': 0.0023842919999999997}, {'diff': 0.002384403}, {'diff': 0.002384375000000001}, {'diff': 0.0023844589999999985}, {'diff': 0.002384403}, {'diff': 0.002384472000...</msg>
<status status="PASS" starttime="20201030 15:51:47.645" endtime="20201030 15:51:47.648"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:47.653" level="INFO">${RESULT} = {'diff': [0.002386847000000001, 0.0023842919999999997, 0.002384403, 0.002384375000000001, 0.0023844589999999985, 0.002384403, 0.0023844720000000055, 0.0023844439999999995, 0.002384375000000001, 0.0023...</msg>
<status status="PASS" starttime="20201030 15:51:47.649" endtime="20201030 15:51:47.653"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:47.657" level="INFO">NAME: 36-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:47.656" endtime="20201030 15:51:47.657"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:47.659" level="INFO">VALUE: [0.002386847000000001, 0.0023842919999999997, 0.002384403, 0.002384375000000001, 0.0023844589999999985, 0.002384403, 0.0023844720000000055, 0.0023844439999999995, 0.002384375000000001, 0.002384403, 0.0023844309999999994, 0.0023842779999999966, 0.0023843890000000006, 0.0023845000000000047, 0.0023843060000000027, 0.0023842500000000044, 0.002384292000000003, 0.002384486000000005, 0.00238454099999999, 0.0023844439999999995, 0.002384486000000005, 0.002384527999999997, 0.0023844999999999977, 0.0023844439999999995, 0.0023844999999999977, 0.0023846250000000013, 0.002384541000000004, 0.0023847920000000106, 0.002384486000000005, 0.0023846940000000066, 0.0023847769999999907, 0.0023846250000000013, 0.0023844999999999977, 0.0023846110000000087, 0.0023845829999999957, 0.002384401999999994, 0.0023844310000000063, 0.0023846530000000005, 0.0023844310000000063, 0.002384417, 0.002384527999999997, 0.0023845700000000164, 0.0023845000000000116, 0.002384403000000007, 0.0023844020000000077, 0.0023845829999999957, 0.0023844859999999912, 0.00238468, 0.002384569000000003, 0.002384374999999994]</msg>
<status status="PASS" starttime="20201030 15:51:47.658" endtime="20201030 15:51:47.660"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.654" endtime="20201030 15:51:47.661"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:47.664" endtime="20201030 15:51:47.684"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.663" endtime="20201030 15:51:47.684"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.662" endtime="20201030 15:51:47.685"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.186" endtime="20201030 15:51:47.685"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.185" endtime="20201030 15:51:47.685"></status>
</kw>
<kw name="${n} = 37" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:47.693" endtime="20201030 15:51:47.833"></status>
</kw>
<msg timestamp="20201030 15:51:47.834" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:47.692" endtime="20201030 15:51:47.834"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:47.836" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:47.835" endtime="20201030 15:51:47.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:47.837" endtime="20201030 15:51:47.839"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.689" endtime="20201030 15:51:47.840"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.687" endtime="20201030 15:51:47.840"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:47.846" endtime="20201030 15:51:48.154"></status>
</kw>
<msg timestamp="20201030 15:51:48.157" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018692903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021192069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:47.845" endtime="20201030 15:51:48.157"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:48.164" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018692903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021192069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:48.158" endtime="20201030 15:51:48.165"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:48.165" endtime="20201030 15:51:48.167"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.842" endtime="20201030 15:51:48.168"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.841" endtime="20201030 15:51:48.168"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:48.172" level="INFO">${PHILIP_RES} = [{'diff': 0.0024991660000000006}, {'diff': 0.0024965969999999997}, {'diff': 0.0024966810000000006}, {'diff': 0.002496652999999998}, {'diff': 0.0024966249999999954}, {'diff': 0.0024966529999999945}, {'...</msg>
<status status="PASS" starttime="20201030 15:51:48.169" endtime="20201030 15:51:48.172"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:48.176" level="INFO">${RESULT} = {'diff': [0.0024991660000000006, 0.0024965969999999997, 0.0024966810000000006, 0.002496652999999998, 0.0024966249999999954, 0.0024966529999999945, 0.0024965140000000052, 0.0024966120000000022, 0.00249...</msg>
<status status="PASS" starttime="20201030 15:51:48.173" endtime="20201030 15:51:48.176"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:48.180" level="INFO">NAME: 37-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:48.179" endtime="20201030 15:51:48.180"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:48.182" level="INFO">VALUE: [0.0024991660000000006, 0.0024965969999999997, 0.0024966810000000006, 0.002496652999999998, 0.0024966249999999954, 0.0024966529999999945, 0.0024965140000000052, 0.0024966120000000022, 0.0024965969999999962, 0.0024965700000000035, 0.0024965829999999967, 0.0024966250000000023, 0.002496639000000002, 0.0024964999999999987, 0.002496556000000004, 0.002496695, 0.002496708999999993, 0.002496667000000008, 0.0024965420000000044, 0.0024966250000000023, 0.0024968190000000112, 0.0024966659999999946, 0.0024966799999999872, 0.0024965969999999893, 0.0024966250000000023, 0.0024965980000000026, 0.002496569000000004, 0.0024965270000000123, 0.0024966530000000015, 0.0024969029999999948, 0.002496750000000006, 0.0024967089999999997, 0.002496861000000003, 0.0024968469999999965, 0.002496806000000004, 0.002496804999999991, 0.002496638999999995, 0.002496804999999991, 0.0024966530000000015, 0.0024964719999999857, 0.0024965549999999836, 0.002496569000000004, 0.0024966949999999932, 0.002496721999999979, 0.0024966810000000006, 0.0024967220000000068, 0.0024965700000000035, 0.002496833000000004, 0.0024965829999999967, 0.002496555999999983]</msg>
<status status="PASS" starttime="20201030 15:51:48.181" endtime="20201030 15:51:48.183"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.176" endtime="20201030 15:51:48.184"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:48.187" endtime="20201030 15:51:48.207"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.186" endtime="20201030 15:51:48.207"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.185" endtime="20201030 15:51:48.208"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.686" endtime="20201030 15:51:48.208"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.685" endtime="20201030 15:51:48.208"></status>
</kw>
<kw name="${n} = 38" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:48.216" endtime="20201030 15:51:48.363"></status>
</kw>
<msg timestamp="20201030 15:51:48.364" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:48.215" endtime="20201030 15:51:48.364"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:48.366" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:48.365" endtime="20201030 15:51:48.366"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:48.367" endtime="20201030 15:51:48.369"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.212" endtime="20201030 15:51:48.369"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.210" endtime="20201030 15:51:48.370"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:48.376" endtime="20201030 15:51:48.668"></status>
</kw>
<msg timestamp="20201030 15:51:48.674" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019457431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022070694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:48.375" endtime="20201030 15:51:48.675"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:48.691" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019457431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022070694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:48.677" endtime="20201030 15:51:48.692"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:48.694" endtime="20201030 15:51:48.697"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.372" endtime="20201030 15:51:48.698"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.370" endtime="20201030 15:51:48.699"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:48.707" level="INFO">${PHILIP_RES} = [{'diff': 0.0026132629999999976}, {'diff': 0.0026107219999999993}, {'diff': 0.002610985999999999}, {'diff': 0.002611042000000001}, {'diff': 0.0026111389999999984}, {'diff': 0.0026111519999999985}, {'d...</msg>
<status status="PASS" starttime="20201030 15:51:48.701" endtime="20201030 15:51:48.708"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:48.716" level="INFO">${RESULT} = {'diff': [0.0026132629999999976, 0.0026107219999999993, 0.002610985999999999, 0.002611042000000001, 0.0026111389999999984, 0.0026111519999999985, 0.002611180999999997, 0.002610888999999998, 0.00261093...</msg>
<status status="PASS" starttime="20201030 15:51:48.709" endtime="20201030 15:51:48.716"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:48.724" level="INFO">NAME: 38-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:48.722" endtime="20201030 15:51:48.725"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:48.729" level="INFO">VALUE: [0.0026132629999999976, 0.0026107219999999993, 0.002610985999999999, 0.002611042000000001, 0.0026111389999999984, 0.0026111519999999985, 0.002611180999999997, 0.002610888999999998, 0.002610930999999997, 0.0026108750000000056, 0.002611000000000002, 0.002610889000000005, 0.0026108060000000002, 0.002610833, 0.002610972000000003, 0.0026109729999999956, 0.002611055000000001, 0.0026110839999999996, 0.002611124999999992, 0.002611124999999992, 0.002611083, 0.0026110280000000013, 0.0026109580000000104, 0.002611000000000002, 0.00261095900000001, 0.002610944000000004, 0.002611069999999993, 0.0026110140000000087, 0.002610944000000004, 0.0026111389999999984, 0.0026111109999999993, 0.0026112090000000032, 0.0026112499999999955, 0.002611236000000003, 0.0026112780000000085, 0.002611153000000005, 0.0026111389999999984, 0.002611124999999992, 0.0026112080000000037, 0.0026113889999999917, 0.0026112090000000032, 0.0026112500000000094, 0.0026111109999999993, 0.002610972000000017, 0.002611042000000008, 0.0026110970000000067, 0.0026110140000000226, 0.002611124999999992, 0.002611153000000005, 0.002611124999999992]</msg>
<status status="PASS" starttime="20201030 15:51:48.727" endtime="20201030 15:51:48.732"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.717" endtime="20201030 15:51:48.734"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:48.741" endtime="20201030 15:51:48.763"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.738" endtime="20201030 15:51:48.764"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.736" endtime="20201030 15:51:48.765"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.209" endtime="20201030 15:51:48.766"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.208" endtime="20201030 15:51:48.766"></status>
</kw>
<kw name="${n} = 39" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:48.777" endtime="20201030 15:51:48.929"></status>
</kw>
<msg timestamp="20201030 15:51:48.930" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:48.775" endtime="20201030 15:51:48.930"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:48.932" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:48.931" endtime="20201030 15:51:48.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:48.933" endtime="20201030 15:51:48.935"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.773" endtime="20201030 15:51:48.935"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.771" endtime="20201030 15:51:48.936"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:48.942" endtime="20201030 15:51:49.232"></status>
</kw>
<msg timestamp="20201030 15:51:49.235" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024561319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027291917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:48.941" endtime="20201030 15:51:49.235"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:49.242" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024561319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027291917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:49.236" endtime="20201030 15:51:49.243"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:49.244" endtime="20201030 15:51:49.245"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.938" endtime="20201030 15:51:49.246"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.936" endtime="20201030 15:51:49.246"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:49.250" level="INFO">${PHILIP_RES} = [{'diff': 0.0027305979999999973}, {'diff': 0.0027284170000000003}, {'diff': 0.0027284449999999995}, {'diff': 0.0027283479999999985}, {'diff': 0.002728181000000003}, {'diff': 0.0027282920000000002}, {'...</msg>
<status status="PASS" starttime="20201030 15:51:49.247" endtime="20201030 15:51:49.250"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:49.255" level="INFO">${RESULT} = {'diff': [0.0027305979999999973, 0.0027284170000000003, 0.0027284449999999995, 0.0027283479999999985, 0.002728181000000003, 0.0027282920000000002, 0.002727958999999995, 0.002728125000000005, 0.0027280...</msg>
<status status="PASS" starttime="20201030 15:51:49.251" endtime="20201030 15:51:49.255"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:49.259" level="INFO">NAME: 39-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:49.258" endtime="20201030 15:51:49.259"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:49.261" level="INFO">VALUE: [0.0027305979999999973, 0.0027284170000000003, 0.0027284449999999995, 0.0027283479999999985, 0.002728181000000003, 0.0027282920000000002, 0.002727958999999995, 0.002728125000000005, 0.0027280560000000065, 0.002728069999999999, 0.0027280979999999982, 0.002728070000000006, 0.002728014000000001, 0.002728069999999999, 0.0027280279999999935, 0.002728264000000008, 0.002728223000000002, 0.002728153000000011, 0.002728207999999996, 0.002728124999999998, 0.0027281670000000036, 0.002728124999999998, 0.0027280969999999988, 0.002727931000000003, 0.0027280280000000073, 0.002728000000000008, 0.002728069999999999, 0.0027280979999999982, 0.002728236000000009, 0.002728318999999993, 0.0027280969999999988, 0.002728153000000011, 0.002728207999999996, 0.0027281950000000027, 0.002728235999999995, 0.0027283060000000137, 0.002728194999999989, 0.002728209000000009, 0.002728223000000002, 0.002728124999999998, 0.0027281389999999905, 0.002727985999999988, 0.0027281110000000053, 0.0027281110000000053, 0.0027284020000000186, 0.0027283329999999995, 0.0027280829999999923, 0.0027279869999999873, 0.002728000000000008, 0.0027281670000000036]</msg>
<status status="PASS" starttime="20201030 15:51:49.260" endtime="20201030 15:51:49.262"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:49.256" endtime="20201030 15:51:49.263"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:49.266" endtime="20201030 15:51:49.286"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:49.265" endtime="20201030 15:51:49.286"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:49.264" endtime="20201030 15:51:49.287"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.768" endtime="20201030 15:51:49.287"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.767" endtime="20201030 15:51:49.287"></status>
</kw>
<kw name="${n} = 40" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:49.295" endtime="20201030 15:51:49.454"></status>
</kw>
<msg timestamp="20201030 15:51:49.454" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:49.294" endtime="20201030 15:51:49.454"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:49.457" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:49.455" endtime="20201030 15:51:49.457"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:49.458" endtime="20201030 15:51:49.459"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:49.291" endtime="20201030 15:51:49.460"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:49.289" endtime="20201030 15:51:49.460"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:49.467" endtime="20201030 15:51:49.785"></status>
</kw>
<msg timestamp="20201030 15:51:49.788" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018631014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021481333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:49.465" endtime="20201030 15:51:49.788"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:49.796" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018631014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021481333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:49.789" endtime="20201030 15:51:49.797"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:49.798" endtime="20201030 15:51:49.799"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:49.463" endtime="20201030 15:51:49.800"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:49.461" endtime="20201030 15:51:49.800"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:49.805" level="INFO">${PHILIP_RES} = [{'diff': 0.002850318999999997}, {'diff': 0.002847805000000002}, {'diff': 0.002847902999999999}, {'diff': 0.002847902999999999}, {'diff': 0.0028479310000000015}, {'diff': 0.002848042000000002}, {'diff...</msg>
<status status="PASS" starttime="20201030 15:51:49.801" endtime="20201030 15:51:49.805"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:49.809" level="INFO">${RESULT} = {'diff': [0.002850318999999997, 0.002847805000000002, 0.002847902999999999, 0.002847902999999999, 0.0028479310000000015, 0.002848042000000002, 0.002848152999999999, 0.002847861, 0.002847972000000004, ...</msg>
<status status="PASS" starttime="20201030 15:51:49.806" endtime="20201030 15:51:49.809"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:49.814" level="INFO">NAME: 40-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:49.813" endtime="20201030 15:51:49.815"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:49.817" level="INFO">VALUE: [0.002850318999999997, 0.002847805000000002, 0.002847902999999999, 0.002847902999999999, 0.0028479310000000015, 0.002848042000000002, 0.002848152999999999, 0.002847861, 0.002847972000000004, 0.0028479579999999977, 0.0028478889999999993, 0.0028478749999999997, 0.002847972000000004, 0.0028478190000000014, 0.0028478059999999944, 0.002847944000000005, 0.0028481110000000004, 0.002848027000000003, 0.002847916000000006, 0.002848013999999996, 0.002847861000000007, 0.0028477359999999896, 0.0028478889999999923, 0.002847985999999997, 0.0028478889999999923, 0.002847972000000004, 0.0028480830000000013, 0.002848125000000007, 0.0028480000000000033, 0.0028480560000000016, 0.002847985999999997, 0.0028480689999999947, 0.002847861000000007, 0.002847832999999994, 0.0028479299999999985, 0.002847943999999991, 0.002847943999999991, 0.0028480409999999956, 0.0028480840000000007, 0.002847972000000004, 0.0028480409999999956, 0.002848181000000005, 0.002848209000000018, 0.0028481389999999995, 0.00284788900000002, 0.0028479860000000246, 0.002848138, 0.0028479299999999985, 0.002848013999999982, 0.002848125000000007]</msg>
<status status="PASS" starttime="20201030 15:51:49.815" endtime="20201030 15:51:49.826"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:49.810" endtime="20201030 15:51:49.827"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:49.831" endtime="20201030 15:51:49.850"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:49.829" endtime="20201030 15:51:49.851"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:49.828" endtime="20201030 15:51:49.851"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:49.288" endtime="20201030 15:51:49.851"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:49.287" endtime="20201030 15:51:49.852"></status>
</kw>
<kw name="${n} = 41" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:49.860" endtime="20201030 15:51:50.026"></status>
</kw>
<msg timestamp="20201030 15:51:50.026" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:49.858" endtime="20201030 15:51:50.026"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:50.029" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:50.027" endtime="20201030 15:51:50.029"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:50.030" endtime="20201030 15:51:50.031"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:49.856" endtime="20201030 15:51:50.032"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:49.854" endtime="20201030 15:51:50.032"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:50.039" endtime="20201030 15:51:50.341"></status>
</kw>
<msg timestamp="20201030 15:51:50.347" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019532236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022505014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:50.037" endtime="20201030 15:51:50.348"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:50.364" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019532236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022505014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:50.350" endtime="20201030 15:51:50.365"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:50.366" endtime="20201030 15:51:50.370"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.035" endtime="20201030 15:51:50.371"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.033" endtime="20201030 15:51:50.372"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:50.380" level="INFO">${PHILIP_RES} = [{'diff': 0.002972777999999999}, {'diff': 0.0029701810000000023}, {'diff': 0.002970083999999998}, {'diff': 0.0029702360000000046}, {'diff': 0.0029702500000000007}, {'diff': 0.002970401999999997}, {'di...</msg>
<status status="PASS" starttime="20201030 15:51:50.373" endtime="20201030 15:51:50.380"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:50.385" level="INFO">${RESULT} = {'diff': [0.002972777999999999, 0.0029701810000000023, 0.002970083999999998, 0.0029702360000000046, 0.0029702500000000007, 0.002970401999999997, 0.0029704860000000013, 0.002970388999999997, 0.00297051...</msg>
<status status="PASS" starttime="20201030 15:51:50.382" endtime="20201030 15:51:50.386"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:50.390" level="INFO">NAME: 41-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:50.389" endtime="20201030 15:51:50.390"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:50.392" level="INFO">VALUE: [0.002972777999999999, 0.0029701810000000023, 0.002970083999999998, 0.0029702360000000046, 0.0029702500000000007, 0.002970401999999997, 0.0029704860000000013, 0.002970388999999997, 0.0029705140000000005, 0.0029704159999999966, 0.002970582999999999, 0.002970401999999997, 0.0029704030000000034, 0.002970347000000005, 0.0029703330000000056, 0.0029702499999999937, 0.002970333999999991, 0.0029702090000000014, 0.0029702090000000014, 0.0029702220000000085, 0.002969986000000008, 0.002969986000000008, 0.00297012499999999, 0.00297016600000001, 0.002970360999999991, 0.002970291, 0.0029701939999999954, 0.002970236000000001, 0.0029702220000000085, 0.0029703479999999977, 0.0029701810000000023, 0.002970375000000011, 0.002970346999999998, 0.0029703469999999843, 0.0029700549999999992, 0.002970194999999981, 0.002970195000000009, 0.002969959000000022, 0.002970096999999977, 0.0029699019999999965, 0.002969791999999999, 0.002969652000000017, 0.00296972199999998, 0.002969693999999995, 0.0029698890000000033, 0.002969916000000017, 0.002969944000000002, 0.0029696800000000023, 0.0029698609999999903, 0.002970013999999993]</msg>
<status status="PASS" starttime="20201030 15:51:50.391" endtime="20201030 15:51:50.394"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.386" endtime="20201030 15:51:50.394"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:50.398" endtime="20201030 15:51:50.418"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.397" endtime="20201030 15:51:50.419"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.395" endtime="20201030 15:51:50.419"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:49.853" endtime="20201030 15:51:50.420"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:49.852" endtime="20201030 15:51:50.420"></status>
</kw>
<kw name="${n} = 42" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:50.429" endtime="20201030 15:51:50.600"></status>
</kw>
<msg timestamp="20201030 15:51:50.601" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:50.427" endtime="20201030 15:51:50.601"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:50.603" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:50.602" endtime="20201030 15:51:50.603"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:50.604" endtime="20201030 15:51:50.606"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.425" endtime="20201030 15:51:50.606"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.423" endtime="20201030 15:51:50.607"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:50.613" endtime="20201030 15:51:50.904"></status>
</kw>
<msg timestamp="20201030 15:51:50.907" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020404458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023501306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:50.612" endtime="20201030 15:51:50.907"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:50.914" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020404458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023501306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:50.908" endtime="20201030 15:51:50.915"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:50.916" endtime="20201030 15:51:50.917"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.609" endtime="20201030 15:51:50.918"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.607" endtime="20201030 15:51:50.918"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:50.922" level="INFO">${PHILIP_RES} = [{'diff': 0.0030968479999999993}, {'diff': 0.0030946529999999993}, {'diff': 0.0030945830000000014}, {'diff': 0.003094625}, {'diff': 0.0030946530000000028}, {'diff': 0.0030947360000000007}, {'diff': 0....</msg>
<status status="PASS" starttime="20201030 15:51:50.919" endtime="20201030 15:51:50.922"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:50.927" level="INFO">${RESULT} = {'diff': [0.0030968479999999993, 0.0030946529999999993, 0.0030945830000000014, 0.003094625, 0.0030946530000000028, 0.0030947360000000007, 0.0030943329999999977, 0.0030942499999999998, 0.00309441700000...</msg>
<status status="PASS" starttime="20201030 15:51:50.923" endtime="20201030 15:51:50.927"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:50.931" level="INFO">NAME: 42-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:50.930" endtime="20201030 15:51:50.931"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:50.933" level="INFO">VALUE: [0.0030968479999999993, 0.0030946529999999993, 0.0030945830000000014, 0.003094625, 0.0030946530000000028, 0.0030947360000000007, 0.0030943329999999977, 0.0030942499999999998, 0.003094417000000002, 0.0030944030000000025, 0.0030946950000000015, 0.003094610999999997, 0.003094583000000005, 0.00309466600000001, 0.003094610999999997, 0.003094681000000002, 0.0030946669999999954, 0.0030946950000000084, 0.0030948610000000043, 0.003094931000000009, 0.003094985999999994, 0.0030947360000000007, 0.003094709000000001, 0.0030947079999999877, 0.003094804999999992, 0.0030946389999999963, 0.003094610999999997, 0.003094791999999999, 0.0030946530000000028, 0.0030946670000000093, 0.003094833000000005, 0.003094681000000002, 0.0030943479999999968, 0.0030945550000000266, 0.0030948059999999777, 0.003094791999999985, 0.0030947230000000214, 0.0030947080000000016, 0.003094721999999994, 0.0030947770000000208, 0.003094735999999987, 0.0030947909999999856, 0.003094569999999991, 0.0030946530000000028, 0.0030945840000000113, 0.003094694000000009, 0.0030946660000000237, 0.0030946250000000175, 0.0030945840000000113, 0.003094389000000003]</msg>
<status status="PASS" starttime="20201030 15:51:50.932" endtime="20201030 15:51:50.934"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.927" endtime="20201030 15:51:50.935"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:50.938" endtime="20201030 15:51:50.958"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.937" endtime="20201030 15:51:50.958"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.936" endtime="20201030 15:51:50.958"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.421" endtime="20201030 15:51:50.959"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.421" endtime="20201030 15:51:50.959"></status>
</kw>
<kw name="${n} = 43" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:50.967" endtime="20201030 15:51:51.147"></status>
</kw>
<msg timestamp="20201030 15:51:51.148" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:50.966" endtime="20201030 15:51:51.148"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:51.153" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:51.150" endtime="20201030 15:51:51.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:51.155" endtime="20201030 15:51:51.158"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.963" endtime="20201030 15:51:51.159"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.961" endtime="20201030 15:51:51.160"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:51.174" endtime="20201030 15:51:51.486"></status>
</kw>
<msg timestamp="20201030 15:51:51.489" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018585333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02180925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:51:51.171" endtime="20201030 15:51:51.489"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:51.496" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018585333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02180925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:51:51.490" endtime="20201030 15:51:51.497"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:51.497" endtime="20201030 15:51:51.499"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.165" endtime="20201030 15:51:51.500"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.162" endtime="20201030 15:51:51.500"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:51.504" level="INFO">${PHILIP_RES} = [{'diff': 0.0032239169999999998}, {'diff': 0.0032215280000000013}, {'diff': 0.003221583}, {'diff': 0.0032214030000000046}, {'diff': 0.003221471999999996}, {'diff': 0.003221472000000003}, {'diff': 0.00...</msg>
<status status="PASS" starttime="20201030 15:51:51.501" endtime="20201030 15:51:51.504"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:51.508" level="INFO">${RESULT} = {'diff': [0.0032239169999999998, 0.0032215280000000013, 0.003221583, 0.0032214030000000046, 0.003221471999999996, 0.003221472000000003, 0.003221500000000002, 0.0032214450000000033, 0.00322141700000000...</msg>
<status status="PASS" starttime="20201030 15:51:51.505" endtime="20201030 15:51:51.508"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:51.512" level="INFO">NAME: 43-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:51.511" endtime="20201030 15:51:51.512"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:51.514" level="INFO">VALUE: [0.0032239169999999998, 0.0032215280000000013, 0.003221583, 0.0032214030000000046, 0.003221471999999996, 0.003221472000000003, 0.003221500000000002, 0.0032214450000000033, 0.003221417000000004, 0.0032213469999999994, 0.0032213749999999985, 0.003221458999999996, 0.003221583000000007, 0.0032217080000000037, 0.0032214449999999895, 0.003221500000000002, 0.003221555000000001, 0.0032215140000000086, 0.003221472000000003, 0.003221417000000004, 0.0032214580000000104, 0.0032215689999999936, 0.003221486999999995, 0.0032215139999999948, 0.0032216250000000057, 0.003221693999999997, 0.0032217499999999955, 0.003221500000000002, 0.0032217630000000025, 0.0032218610000000064, 0.0032217499999999955, 0.003221583, 0.003221500000000016, 0.003221554999999987, 0.0032215140000000086, 0.0032217769999999812, 0.0032218340000000067, 0.003221875000000013, 0.003221792000000001, 0.0032218890000000056, 0.003221693999999997, 0.003221652999999991, 0.0032215970000000205, 0.0032215280000000013, 0.003221736000000003, 0.00322145900000001, 0.003221764000000016, 0.0032216250000000057, 0.003221583, 0.0032215689999999797]</msg>
<status status="PASS" starttime="20201030 15:51:51.513" endtime="20201030 15:51:51.515"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.508" endtime="20201030 15:51:51.516"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:51.519" endtime="20201030 15:51:51.538"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.518" endtime="20201030 15:51:51.539"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.516" endtime="20201030 15:51:51.539"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.960" endtime="20201030 15:51:51.540"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.959" endtime="20201030 15:51:51.540"></status>
</kw>
<kw name="${n} = 44" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:51.548" endtime="20201030 15:51:51.734"></status>
</kw>
<msg timestamp="20201030 15:51:51.734" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:51.547" endtime="20201030 15:51:51.734"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:51.737" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:51.735" endtime="20201030 15:51:51.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:51.738" endtime="20201030 15:51:51.739"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.544" endtime="20201030 15:51:51.740"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.542" endtime="20201030 15:51:51.740"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:51.747" endtime="20201030 15:51:52.046"></status>
</kw>
<msg timestamp="20201030 15:51:52.052" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019513417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022866583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:51.745" endtime="20201030 15:51:52.053"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:52.069" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019513417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022866583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:52.055" endtime="20201030 15:51:52.070"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:52.072" endtime="20201030 15:51:52.075"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.742" endtime="20201030 15:51:52.076"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.741" endtime="20201030 15:51:52.077"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:52.085" level="INFO">${PHILIP_RES} = [{'diff': 0.0033531659999999977}, {'diff': 0.0033508190000000014}, {'diff': 0.003351070000000001}, {'diff': 0.0033508889999999993}, {'diff': 0.0033508060000000048}, {'diff': 0.0033508329999999975}, {'...</msg>
<status status="PASS" starttime="20201030 15:51:52.079" endtime="20201030 15:51:52.086"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:52.094" level="INFO">${RESULT} = {'diff': [0.0033531659999999977, 0.0033508190000000014, 0.003351070000000001, 0.0033508889999999993, 0.0033508060000000048, 0.0033508329999999975, 0.0033509440000000015, 0.0033508329999999975, 0.00335...</msg>
<status status="PASS" starttime="20201030 15:51:52.087" endtime="20201030 15:51:52.094"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:52.102" level="INFO">NAME: 44-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:52.101" endtime="20201030 15:51:52.103"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:52.105" level="INFO">VALUE: [0.0033531659999999977, 0.0033508190000000014, 0.003351070000000001, 0.0033508889999999993, 0.0033508060000000048, 0.0033508329999999975, 0.0033509440000000015, 0.0033508329999999975, 0.0033508060000000048, 0.0033509160000000024, 0.0033509860000000002, 0.003351028000000006, 0.0033511249999999965, 0.0033507779999999987, 0.0033508049999999984, 0.0033509439999999946, 0.00335088800000001, 0.0033511249999999965, 0.003350958000000001, 0.0033509590000000006, 0.003350888999999996, 0.003350958000000001, 0.003350888999999996, 0.003350818999999991, 0.0033509030000000023, 0.0033508329999999975, 0.003350958000000001, 0.0033510420000000124, 0.0033510270000000064, 0.003351208999999994, 0.0033510830000000047, 0.0033509159999999816, 0.0033509029999999884, 0.0033509439999999946, 0.0033509860000000002, 0.003351028000000006, 0.0033508610000000105, 0.003350847000000018, 0.0033509439999999946, 0.0033508609999999828, 0.0033508609999999828, 0.0033510140000000133, 0.003351180999999981, 0.0033510549999999917, 0.003351222000000015, 0.003350944999999994, 0.0033510419999999985, 0.003351208000000022, 0.0033511940000000018, 0.003351056000000019]</msg>
<status status="PASS" starttime="20201030 15:51:52.104" endtime="20201030 15:51:52.109"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.095" endtime="20201030 15:51:52.110"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:52.113" endtime="20201030 15:51:52.133"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.112" endtime="20201030 15:51:52.133"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.111" endtime="20201030 15:51:52.134"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.541" endtime="20201030 15:51:52.134"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.540" endtime="20201030 15:51:52.134"></status>
</kw>
<kw name="${n} = 45" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:52.142" endtime="20201030 15:51:52.334"></status>
</kw>
<msg timestamp="20201030 15:51:52.334" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:52.141" endtime="20201030 15:51:52.334"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:52.337" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:52.335" endtime="20201030 15:51:52.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:52.338" endtime="20201030 15:51:52.339"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.138" endtime="20201030 15:51:52.340"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.136" endtime="20201030 15:51:52.340"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:52.347" endtime="20201030 15:51:52.637"></status>
</kw>
<msg timestamp="20201030 15:51:52.640" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018673986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0221585, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:51:52.345" endtime="20201030 15:51:52.640"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:52.648" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018673986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0221585, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:51:52.641" endtime="20201030 15:51:52.648"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:52.649" endtime="20201030 15:51:52.650"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.343" endtime="20201030 15:51:52.651"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.341" endtime="20201030 15:51:52.651"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:52.655" level="INFO">${PHILIP_RES} = [{'diff': 0.003484514000000001}, {'diff': 0.0034824720000000003}, {'diff': 0.003482638999999999}, {'diff': 0.0034826529999999987}, {'diff': 0.003482777999999999}, {'diff': 0.003482596999999997}, {'dif...</msg>
<status status="PASS" starttime="20201030 15:51:52.652" endtime="20201030 15:51:52.655"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:52.660" level="INFO">${RESULT} = {'diff': [0.003484514000000001, 0.0034824720000000003, 0.003482638999999999, 0.0034826529999999987, 0.003482777999999999, 0.003482596999999997, 0.0034824999999999995, 0.0034825559999999978, 0.00348269...</msg>
<status status="PASS" starttime="20201030 15:51:52.656" endtime="20201030 15:51:52.660"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:52.664" level="INFO">NAME: 45-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:52.663" endtime="20201030 15:51:52.665"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:52.667" level="INFO">VALUE: [0.003484514000000001, 0.0034824720000000003, 0.003482638999999999, 0.0034826529999999987, 0.003482777999999999, 0.003482596999999997, 0.0034824999999999995, 0.0034825559999999978, 0.0034826939999999945, 0.0034826390000000026, 0.0034826390000000026, 0.003482597000000004, 0.0034826389999999957, 0.0034826389999999957, 0.003482402999999995, 0.0034826109999999966, 0.0034826110000000104, 0.0034826940000000084, 0.0034825279999999986, 0.0034824999999999995, 0.003482568999999991, 0.0034825549999999983, 0.0034828330000000046, 0.0034824999999999995, 0.003482834000000004, 0.0034826390000000096, 0.003482374999999996, 0.0034825699999999904, 0.0034825279999999986, 0.0034826520000000027, 0.0034825279999999847, 0.003482625000000017, 0.0034826670000000226, 0.003482542000000005, 0.0034826809999999875, 0.003482723000000021, 0.003482638999999982, 0.0034826659999999954, 0.003482818999999998, 0.0034827780000000197, 0.003482806000000005, 0.0034827639999999993, 0.003482945000000015, 0.00348283399999999, 0.003482847000000011, 0.0034828199999999976, 0.003482666999999995, 0.0034828610000000038, 0.003482749999999979, 0.0034825829999999836]</msg>
<status status="PASS" starttime="20201030 15:51:52.665" endtime="20201030 15:51:52.667"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.661" endtime="20201030 15:51:52.668"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:52.672" endtime="20201030 15:51:52.691"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.670" endtime="20201030 15:51:52.692"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.669" endtime="20201030 15:51:52.692"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.135" endtime="20201030 15:51:52.692"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.134" endtime="20201030 15:51:52.692"></status>
</kw>
<kw name="${n} = 46" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:52.701" endtime="20201030 15:51:52.900"></status>
</kw>
<msg timestamp="20201030 15:51:52.901" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:52.699" endtime="20201030 15:51:52.901"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:52.906" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:52.903" endtime="20201030 15:51:52.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:52.908" endtime="20201030 15:51:52.912"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.697" endtime="20201030 15:51:52.913"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.695" endtime="20201030 15:51:52.914"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:52.927" endtime="20201030 15:51:53.233"></status>
</kw>
<msg timestamp="20201030 15:51:53.236" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018714889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022334111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:52.924" endtime="20201030 15:51:53.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:53.244" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018714889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022334111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:53.237" endtime="20201030 15:51:53.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:53.245" endtime="20201030 15:51:53.246"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.918" endtime="20201030 15:51:53.247"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.915" endtime="20201030 15:51:53.247"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:53.251" level="INFO">${PHILIP_RES} = [{'diff': 0.003619222000000002}, {'diff': 0.003616708999999999}, {'diff': 0.0036165560000000034}, {'diff': 0.0036166120000000017}, {'diff': 0.0036168190000000003}, {'diff': 0.003616791000000001}, {'di...</msg>
<status status="PASS" starttime="20201030 15:51:53.248" endtime="20201030 15:51:53.251"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:53.255" level="INFO">${RESULT} = {'diff': [0.003619222000000002, 0.003616708999999999, 0.0036165560000000034, 0.0036166120000000017, 0.0036168190000000003, 0.003616791000000001, 0.0036168469999999994, 0.0036170280000000013, 0.0036170...</msg>
<status status="PASS" starttime="20201030 15:51:53.252" endtime="20201030 15:51:53.255"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:53.259" level="INFO">NAME: 46-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:53.258" endtime="20201030 15:51:53.259"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:53.262" level="INFO">VALUE: [0.003619222000000002, 0.003616708999999999, 0.0036165560000000034, 0.0036166120000000017, 0.0036168190000000003, 0.003616791000000001, 0.0036168469999999994, 0.0036170280000000013, 0.0036170140000000017, 0.0036165699999999995, 0.003616569, 0.003616457999999996, 0.003616541000000001, 0.003616638999999991, 0.0036168189999999933, 0.0036168469999999925, 0.0036168619999999985, 0.003616943999999997, 0.0036168619999999985, 0.003616750000000002, 0.0036169169999999973, 0.0036167079999999963, 0.0036168189999999933, 0.003616902000000005, 0.0036165550000000074, 0.003616651999999998, 0.003616569, 0.003616610999999992, 0.0036164720000000095, 0.0036166940000000036, 0.0036167360000000093, 0.003616889000000012, 0.003616695000000003, 0.003616750000000002, 0.0036166810000000105, 0.0036165979999999986, 0.003616569000000014, 0.003616639000000005, 0.0036165420000000004, 0.0036164029999999903, 0.0036165549999999935, 0.0036164439999999964, 0.003616320000000006, 0.003616625000000012, 0.0036167079999999963, 0.0036167639999999945, 0.003616902000000005, 0.0036171939999999903, 0.0036169450000000103, 0.003616860999999999]</msg>
<status status="PASS" starttime="20201030 15:51:53.260" endtime="20201030 15:51:53.262"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.256" endtime="20201030 15:51:53.263"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:53.266" endtime="20201030 15:51:53.286"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.265" endtime="20201030 15:51:53.286"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.264" endtime="20201030 15:51:53.287"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.693" endtime="20201030 15:51:53.287"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.693" endtime="20201030 15:51:53.287"></status>
</kw>
<kw name="${n} = 47" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:53.295" endtime="20201030 15:51:53.502"></status>
</kw>
<msg timestamp="20201030 15:51:53.502" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:53.294" endtime="20201030 15:51:53.503"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:53.505" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:53.503" endtime="20201030 15:51:53.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:53.506" endtime="20201030 15:51:53.507"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.291" endtime="20201030 15:51:53.508"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.289" endtime="20201030 15:51:53.508"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:53.515" endtime="20201030 15:51:53.822"></status>
</kw>
<msg timestamp="20201030 15:51:53.828" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019507806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023264306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:53.513" endtime="20201030 15:51:53.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:53.844" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019507806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023264306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:53.830" endtime="20201030 15:51:53.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:53.845" endtime="20201030 15:51:53.846"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.511" endtime="20201030 15:51:53.847"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.509" endtime="20201030 15:51:53.847"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:53.851" level="INFO">${PHILIP_RES} = [{'diff': 0.0037564999999999994}, {'diff': 0.003753819999999998}, {'diff': 0.0037538880000000004}, {'diff': 0.0037540000000000004}, {'diff': 0.0037540000000000004}, {'diff': 0.0037542779999999998}, {'...</msg>
<status status="PASS" starttime="20201030 15:51:53.848" endtime="20201030 15:51:53.851"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:53.855" level="INFO">${RESULT} = {'diff': [0.0037564999999999994, 0.003753819999999998, 0.0037538880000000004, 0.0037540000000000004, 0.0037540000000000004, 0.0037542779999999998, 0.003754305999999999, 0.003754070000000005, 0.0037540...</msg>
<status status="PASS" starttime="20201030 15:51:53.852" endtime="20201030 15:51:53.855"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:53.859" level="INFO">NAME: 47-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:53.858" endtime="20201030 15:51:53.860"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:53.862" level="INFO">VALUE: [0.0037564999999999994, 0.003753819999999998, 0.0037538880000000004, 0.0037540000000000004, 0.0037540000000000004, 0.0037542779999999998, 0.003754305999999999, 0.003754070000000005, 0.0037540130000000005, 0.003754388999999997, 0.003754014000000007, 0.0037541940000000024, 0.0037544160000000104, 0.003754305999999999, 0.003754444999999995, 0.0037541389999999897, 0.003754014, 0.003753931000000002, 0.0037540689999999988, 0.0037539580000000017, 0.0037543609999999977, 0.003754347000000005, 0.003754235999999994, 0.003754305999999999, 0.003754264000000007, 0.003754333999999998, 0.0037544030000000034, 0.0037543750000000042, 0.0037542220000000015, 0.0037542779999999998, 0.0037544860000000013, 0.0037545270000000075, 0.00375441700000001, 0.003754473000000008, 0.0037542779999999998, 0.003754055000000006, 0.0037540829999999914, 0.003754306000000013, 0.0037541390000000174, 0.0037543879999999974, 0.003754388999999997, 0.003754333999999998, 0.0037544729999999804, 0.0037540419999999852, 0.0037542220000000015, 0.0037544729999999804, 0.003754444999999995, 0.0037545419999999996, 0.0037545830000000058, 0.0037544310000000025]</msg>
<status status="PASS" starttime="20201030 15:51:53.860" endtime="20201030 15:51:53.863"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.856" endtime="20201030 15:51:53.864"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:53.867" endtime="20201030 15:51:53.887"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.866" endtime="20201030 15:51:53.887"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.865" endtime="20201030 15:51:53.888"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.288" endtime="20201030 15:51:53.888"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.287" endtime="20201030 15:51:53.888"></status>
</kw>
<kw name="${n} = 48" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:53.897" endtime="20201030 15:51:54.109"></status>
</kw>
<msg timestamp="20201030 15:51:54.110" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:53.895" endtime="20201030 15:51:54.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:54.112" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:54.111" endtime="20201030 15:51:54.113"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:54.113" endtime="20201030 15:51:54.115"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.893" endtime="20201030 15:51:54.115"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.891" endtime="20201030 15:51:54.116"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:54.122" endtime="20201030 15:51:54.413"></status>
</kw>
<msg timestamp="20201030 15:51:54.416" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018701403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022597597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:54.121" endtime="20201030 15:51:54.416"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:54.423" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018701403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022597597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:54.417" endtime="20201030 15:51:54.424"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:54.424" endtime="20201030 15:51:54.426"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.118" endtime="20201030 15:51:54.427"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.116" endtime="20201030 15:51:54.427"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:54.431" level="INFO">${PHILIP_RES} = [{'diff': 0.003896194000000002}, {'diff': 0.003893542}, {'diff': 0.0038934580000000024}, {'diff': 0.003893389000000004}, {'diff': 0.0038934730000000015}, {'diff': 0.0038938199999999992}, {'diff': 0.00...</msg>
<status status="PASS" starttime="20201030 15:51:54.428" endtime="20201030 15:51:54.431"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:54.436" level="INFO">${RESULT} = {'diff': [0.003896194000000002, 0.003893542, 0.0038934580000000024, 0.003893389000000004, 0.0038934730000000015, 0.0038938199999999992, 0.0038940270000000013, 0.0038941529999999974, 0.003894069, 0.003...</msg>
<status status="PASS" starttime="20201030 15:51:54.432" endtime="20201030 15:51:54.436"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:54.440" level="INFO">NAME: 48-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:54.439" endtime="20201030 15:51:54.440"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:54.442" level="INFO">VALUE: [0.003896194000000002, 0.003893542, 0.0038934580000000024, 0.003893389000000004, 0.0038934730000000015, 0.0038938199999999992, 0.0038940270000000013, 0.0038941529999999974, 0.003894069, 0.003894056, 0.0038942359999999954, 0.0038941110000000057, 0.0038941109999999918, 0.0038940979999999986, 0.0038943750000000055, 0.0038940829999999926, 0.0038943050000000007, 0.0038943749999999916, 0.003894194999999989, 0.003894096999999999, 0.003894223000000002, 0.0038943879999999986, 0.003894096999999999, 0.003894083999999992, 0.003893805, 0.0038942359999999815, 0.00389434700000002, 0.0038941939999999897, 0.003894042000000014, 0.003894056000000007, 0.003894014000000001, 0.003894042000000014, 0.0038941660000000045, 0.0038942220000000027, 0.0038939590000000024, 0.003894138999999991, 0.0038940549999999796, 0.0038940000000000086, 0.003894360999999985, 0.0038941390000000187, 0.0038942639999999806, 0.003894166999999976, 0.003893792000000007, 0.003894097000000013, 0.0038942359999999954, 0.0038941940000000175, 0.003894138000000019, 0.0038941249999999983, 0.0038940280000000216, 0.003894278000000001]</msg>
<status status="PASS" starttime="20201030 15:51:54.441" endtime="20201030 15:51:54.443"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.436" endtime="20201030 15:51:54.444"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:54.447" endtime="20201030 15:51:54.467"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.446" endtime="20201030 15:51:54.467"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.445" endtime="20201030 15:51:54.468"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.889" endtime="20201030 15:51:54.468"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.889" endtime="20201030 15:51:54.468"></status>
</kw>
<kw name="${n} = 49" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:54.476" endtime="20201030 15:51:54.697"></status>
</kw>
<msg timestamp="20201030 15:51:54.698" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:54.475" endtime="20201030 15:51:54.699"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:54.704" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:54.701" endtime="20201030 15:51:54.704"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:54.706" endtime="20201030 15:51:54.709"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.472" endtime="20201030 15:51:54.710"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.470" endtime="20201030 15:51:54.711"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:54.725" endtime="20201030 15:51:55.023"></status>
</kw>
<msg timestamp="20201030 15:51:55.026" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018657028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022695542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:54.722" endtime="20201030 15:51:55.026"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:55.034" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018657028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022695542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:55.027" endtime="20201030 15:51:55.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:55.035" endtime="20201030 15:51:55.036"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.716" endtime="20201030 15:51:55.037"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.712" endtime="20201030 15:51:55.037"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:55.041" level="INFO">${PHILIP_RES} = [{'diff': 0.004038514}, {'diff': 0.004036346999999999}, {'diff': 0.004036306000000003}, {'diff': 0.004036209000000006}, {'diff': 0.004036249999999998}, {'diff': 0.004036221999999999}, {'diff': 0.00403...</msg>
<status status="PASS" starttime="20201030 15:51:55.038" endtime="20201030 15:51:55.041"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:55.045" level="INFO">${RESULT} = {'diff': [0.004038514, 0.004036346999999999, 0.004036306000000003, 0.004036209000000006, 0.004036249999999998, 0.004036221999999999, 0.004036388000000002, 0.004036277999999997, 0.004036139000000001, 0...</msg>
<status status="PASS" starttime="20201030 15:51:55.042" endtime="20201030 15:51:55.045"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:55.049" level="INFO">NAME: 49-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:55.048" endtime="20201030 15:51:55.050"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:55.052" level="INFO">VALUE: [0.004038514, 0.004036346999999999, 0.004036306000000003, 0.004036209000000006, 0.004036249999999998, 0.004036221999999999, 0.004036388000000002, 0.004036277999999997, 0.004036139000000001, 0.0040363340000000025, 0.004036667000000001, 0.004036499999999998, 0.004036486000000006, 0.004036375000000009, 0.004036181, 0.004036389000000001, 0.004036278000000004, 0.004036055999999996, 0.004036263999999998, 0.004036263999999998, 0.004036278000000004, 0.004036138999999994, 0.004036306000000003, 0.004036362000000002, 0.004036263999999998, 0.004036209000000013, 0.004036306000000017, 0.004036249999999991, 0.004036347999999995, 0.004036249999999991, 0.004036389000000001, 0.004036445, 0.004036346999999996, 0.004036444, 0.004036249999999991, 0.004036193999999993, 0.004036388000000002, 0.004036222000000006, 0.004036194999999992, 0.004036014000000004, 0.0040360420000000174, 0.004036014000000004, 0.004035929999999993, 0.0040361250000000015, 0.004036249999999991, 0.004036333000000003, 0.004036597000000003, 0.004036542000000004, 0.004036084000000023, 0.004036167000000007]</msg>
<status status="PASS" starttime="20201030 15:51:55.050" endtime="20201030 15:51:55.052"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.046" endtime="20201030 15:51:55.053"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:55.057" endtime="20201030 15:51:55.076"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.055" endtime="20201030 15:51:55.077"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.054" endtime="20201030 15:51:55.077"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.469" endtime="20201030 15:51:55.077"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.468" endtime="20201030 15:51:55.077"></status>
</kw>
<kw name="${n} = 50" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:55.086" endtime="20201030 15:51:55.314"></status>
</kw>
<msg timestamp="20201030 15:51:55.315" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:55.084" endtime="20201030 15:51:55.315"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:55.317" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:55.316" endtime="20201030 15:51:55.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:55.318" endtime="20201030 15:51:55.320"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.082" endtime="20201030 15:51:55.320"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.080" endtime="20201030 15:51:55.321"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:55.327" endtime="20201030 15:51:55.634"></status>
</kw>
<msg timestamp="20201030 15:51:55.637" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019569306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023752458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:55.326" endtime="20201030 15:51:55.637"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:55.644" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019569306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023752458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:55.638" endtime="20201030 15:51:55.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:55.645" endtime="20201030 15:51:55.647"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.323" endtime="20201030 15:51:55.648"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.321" endtime="20201030 15:51:55.648"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:55.652" level="INFO">${PHILIP_RES} = [{'diff': 0.004183151999999999}, {'diff': 0.0041805559999999985}, {'diff': 0.004180861000000001}, {'diff': 0.004180792000000003}, {'diff': 0.004180944999999998}, {'diff': 0.004180889}, {'diff': 0.0041...</msg>
<status status="PASS" starttime="20201030 15:51:55.649" endtime="20201030 15:51:55.652"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:55.656" level="INFO">${RESULT} = {'diff': [0.004183151999999999, 0.0041805559999999985, 0.004180861000000001, 0.004180792000000003, 0.004180944999999998, 0.004180889, 0.004180818999999995, 0.004181013999999997, 0.004180750000000004, ...</msg>
<status status="PASS" starttime="20201030 15:51:55.653" endtime="20201030 15:51:55.656"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:55.660" level="INFO">NAME: 50-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:55.659" endtime="20201030 15:51:55.661"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:55.663" level="INFO">VALUE: [0.004183151999999999, 0.0041805559999999985, 0.004180861000000001, 0.004180792000000003, 0.004180944999999998, 0.004180889, 0.004180818999999995, 0.004181013999999997, 0.004180750000000004, 0.004180638999999993, 0.004180444000000005, 0.00418047299999999, 0.004180486000000011, 0.004180568999999995, 0.004180666999999999, 0.004180820000000002, 0.004180749999999997, 0.004180639, 0.004180485999999997, 0.004180584000000001, 0.004180445000000005, 0.004180639, 0.004180653000000006, 0.004180541999999995, 0.004180568999999995, 0.004180611000000001, 0.004180806000000009, 0.004180527999999989, 0.004180639000000014, 0.00418068000000002, 0.004180402999999999, 0.004180457999999998, 0.004180444000000005, 0.004180444999999977, 0.004180708999999977, 0.004180445000000005, 0.004180486000000011, 0.004180639000000014, 0.004180445000000005, 0.004180431000000012, 0.0041808750000000006, 0.004180639000000014, 0.004180653000000006, 0.0041805419999999816, 0.004180723000000025, 0.004180625000000021, 0.004180402, 0.004180597000000008, 0.004180624999999993, 0.004180582999999988]</msg>
<status status="PASS" starttime="20201030 15:51:55.662" endtime="20201030 15:51:55.665"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.657" endtime="20201030 15:51:55.665"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:55.669" endtime="20201030 15:51:55.689"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.668" endtime="20201030 15:51:55.690"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.666" endtime="20201030 15:51:55.690"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.078" endtime="20201030 15:51:55.690"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.078" endtime="20201030 15:51:55.690"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.049" endtime="20201030 15:51:55.691"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:51:30.706" endtime="20201030 15:51:55.691" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 15:51:08.658" endtime="20201030 15:51:55.700"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 15:51:55.770" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 15:51:55.779" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 15:51:56.962" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 15:51:55.769" endtime="20201030 15:51:56.963"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 15:51:56.965" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 15:51:56.964" endtime="20201030 15:51:56.966"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.768" endtime="20201030 15:51:56.966"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:56.968" endtime="20201030 15:51:57.189"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:56.967" endtime="20201030 15:51:57.190"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:57.214" endtime="20201030 15:51:57.226"></status>
</kw>
<msg timestamp="20201030 15:51:57.227" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:57.212" endtime="20201030 15:51:57.227"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:57.229" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:57.228" endtime="20201030 15:51:57.230"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:51:57.233" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:51:57.231" endtime="20201030 15:51:57.233"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:57.207" endtime="20201030 15:51:57.234"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:57.203" endtime="20201030 15:51:57.234"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.200" endtime="20201030 15:51:57.234"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:51:57.238" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:51:57.237" endtime="20201030 15:51:57.240"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.235" endtime="20201030 15:51:57.240"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.198" endtime="20201030 15:51:57.240"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.197" endtime="20201030 15:51:57.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:57.241" endtime="20201030 15:51:57.243"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.194" endtime="20201030 15:51:57.243"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:57.244" endtime="20201030 15:51:57.245"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.191" endtime="20201030 15:51:57.246"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.766" endtime="20201030 15:51:57.246"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:57.252" endtime="20201030 15:51:57.272"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.251" endtime="20201030 15:51:57.272"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:57.285" endtime="20201030 15:51:57.297"></status>
</kw>
<msg timestamp="20201030 15:51:57.298" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:57.284" endtime="20201030 15:51:57.298"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:57.300" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:57.299" endtime="20201030 15:51:57.301"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:51:57.303" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:51:57.301" endtime="20201030 15:51:57.304"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:57.281" endtime="20201030 15:51:57.304"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:57.279" endtime="20201030 15:51:57.305"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.277" endtime="20201030 15:51:57.305"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:51:57.309" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:51:57.308" endtime="20201030 15:51:57.309"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.306" endtime="20201030 15:51:57.309"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.277" endtime="20201030 15:51:57.309"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.276" endtime="20201030 15:51:57.310"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:57.310" endtime="20201030 15:51:57.312"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.275" endtime="20201030 15:51:57.312"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.273" endtime="20201030 15:51:57.313"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.249" endtime="20201030 15:51:57.313"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:57.324" endtime="20201030 15:51:57.337"></status>
</kw>
<msg timestamp="20201030 15:51:57.338" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:57.322" endtime="20201030 15:51:57.338"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:57.340" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:57.339" endtime="20201030 15:51:57.341"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:57.342" endtime="20201030 15:51:57.343"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.318" endtime="20201030 15:51:57.344"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.316" endtime="20201030 15:51:57.344"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:57.351" endtime="20201030 15:51:57.639"></status>
</kw>
<msg timestamp="20201030 15:51:57.642" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063668167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.063687236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:57.349" endtime="20201030 15:51:57.643"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:57.651" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063668167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.063687236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:57.644" endtime="20201030 15:51:57.651"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:57.652" endtime="20201030 15:51:57.654"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.346" endtime="20201030 15:51:57.654"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.345" endtime="20201030 15:51:57.655"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:57.658" level="INFO">${RESULT} = [{'diff': 1.906899999999656e-05}, {'diff': 1.7985999999997615e-05}, {'diff': 1.7944000000005844e-05}, {'diff': 1.7985999999997615e-05}, {'diff': 1.7929999999999335e-05}, {'diff': 1.7943999999991966e-0...</msg>
<status status="PASS" starttime="20201030 15:51:57.655" endtime="20201030 15:51:57.659"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:51:57.663" level="INFO">${ACCURACY} = {'diff': [1.906899999999656e-05, 1.7985999999997615e-05, 1.7944000000005844e-05, 1.7985999999997615e-05, 1.7929999999999335e-05, 1.7943999999991966e-05, 1.7929999999999335e-05, 1.7945000000005318e-05,...</msg>
<status status="PASS" starttime="20201030 15:51:57.659" endtime="20201030 15:51:57.663"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:57.668" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201030 15:51:57.667" endtime="20201030 15:51:57.668"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:57.671" level="INFO">VALUE: [1.906899999999656e-05, 1.7985999999997615e-05, 1.7944000000005844e-05, 1.7985999999997615e-05, 1.7929999999999335e-05, 1.7943999999991966e-05, 1.7929999999999335e-05, 1.7945000000005318e-05, 1.7945000000005318e-05, 1.793099999999881e-05, 1.7985999999997615e-05, 1.7944000000005844e-05, 1.7945000000005318e-05, 1.7957999999998475e-05, 1.7944000000005844e-05, 1.7943999999991966e-05, 1.793099999999881e-05, 1.795899999999795e-05, 1.7917000000006178e-05, 1.790299999999967e-05, 1.795899999999795e-05, 1.7945000000005318e-05, 1.793099999999881e-05, 1.7945000000005318e-05, 1.7971999999991106e-05, 1.790299999999967e-05, 1.793099999999881e-05, 1.793099999999881e-05, 1.790299999999967e-05, 1.7999999999990246e-05, 1.7958000000012353e-05, 1.8000000000004124e-05, 1.8000000000004124e-05, 1.793099999999881e-05, 1.7957999999998475e-05, 1.7944000000005844e-05, 1.7944000000005844e-05, 1.7944000000005844e-05, 1.793099999999881e-05, 1.793099999999881e-05, 1.7943999999991966e-05, 1.7944000000005844e-05, 1.7973000000004458e-05, 1.7945000000005318e-05, 1.7945000000005318e-05, 1.7944000000005844e-05, 1.7944000000005844e-05, 1.7943999999991966e-05, 1.7943999999991966e-05, 1.7944000000005844e-05]</msg>
<status status="PASS" starttime="20201030 15:51:57.669" endtime="20201030 15:51:57.671"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.664" endtime="20201030 15:51:57.671"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:57.675" endtime="20201030 15:51:57.694"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.673" endtime="20201030 15:51:57.695"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.672" endtime="20201030 15:51:57.695"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.315" endtime="20201030 15:51:57.696"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.314" endtime="20201030 15:51:57.696"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:57.705" endtime="20201030 15:51:57.719"></status>
</kw>
<msg timestamp="20201030 15:51:57.719" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:57.704" endtime="20201030 15:51:57.720"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:57.722" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:57.720" endtime="20201030 15:51:57.722"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:57.723" endtime="20201030 15:51:57.724"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.701" endtime="20201030 15:51:57.725"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.699" endtime="20201030 15:51:57.725"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:57.732" endtime="20201030 15:51:58.016"></status>
</kw>
<msg timestamp="20201030 15:51:58.019" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022272056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022291139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:57.731" endtime="20201030 15:51:58.019"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:58.027" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022272056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022291139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:58.020" endtime="20201030 15:51:58.028"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:58.028" endtime="20201030 15:51:58.030"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.728" endtime="20201030 15:51:58.031"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.726" endtime="20201030 15:51:58.031"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:58.035" level="INFO">${RESULT} = [{'diff': 1.908300000000307e-05}, {'diff': 1.7943999999998905e-05}, {'diff': 1.7944000000002375e-05}, {'diff': 1.795899999999795e-05}, {'diff': 1.786100000000096e-05}, {'diff': 1.7943999999998905e-05}...</msg>
<status status="PASS" starttime="20201030 15:51:58.032" endtime="20201030 15:51:58.035"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:51:58.040" level="INFO">${ACCURACY} = {'diff': [1.908300000000307e-05, 1.7943999999998905e-05, 1.7944000000002375e-05, 1.795899999999795e-05, 1.786100000000096e-05, 1.7943999999998905e-05, 1.7944000000002375e-05, 1.7957999999998475e-05, 1...</msg>
<status status="PASS" starttime="20201030 15:51:58.036" endtime="20201030 15:51:58.041"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:58.045" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201030 15:51:58.044" endtime="20201030 15:51:58.045"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:58.047" level="INFO">VALUE: [1.908300000000307e-05, 1.7943999999998905e-05, 1.7944000000002375e-05, 1.795899999999795e-05, 1.786100000000096e-05, 1.7943999999998905e-05, 1.7944000000002375e-05, 1.7957999999998475e-05, 1.793099999999881e-05, 1.7986000000001084e-05, 1.7944000000002375e-05, 1.7930000000002805e-05, 1.7959000000001418e-05, 1.794499999999838e-05, 1.795899999999795e-05, 1.7958000000001945e-05, 1.7986000000001084e-05, 1.7943999999998905e-05, 1.793100000000228e-05, 1.7957999999998475e-05, 1.794499999999838e-05, 1.790299999999967e-05, 1.791699999999924e-05, 1.7957999999998475e-05, 1.794500000000185e-05, 1.794500000000185e-05, 1.8000000000000654e-05, 1.786100000000096e-05, 1.793100000000228e-05, 1.7929999999999335e-05, 1.7957999999998475e-05, 1.7944000000002375e-05, 1.794500000000185e-05, 1.794499999999838e-05, 1.7888000000000626e-05, 1.7943999999998905e-05, 1.8014000000000224e-05, 1.7943999999998905e-05, 1.794500000000185e-05, 1.790299999999967e-05, 1.7929999999999335e-05, 1.7972000000001515e-05, 1.7943999999998905e-05, 1.7943999999998905e-05, 1.793100000000228e-05, 1.793099999999881e-05, 1.787500000000053e-05, 1.7943999999998905e-05, 1.7958000000001945e-05, 1.7986000000001084e-05]</msg>
<status status="PASS" starttime="20201030 15:51:58.046" endtime="20201030 15:51:58.048"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:58.041" endtime="20201030 15:51:58.048"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:58.052" endtime="20201030 15:51:58.071"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:58.050" endtime="20201030 15:51:58.072"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:58.049" endtime="20201030 15:51:58.072"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.697" endtime="20201030 15:51:58.072"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.696" endtime="20201030 15:51:58.072"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:58.081" endtime="20201030 15:51:58.095"></status>
</kw>
<msg timestamp="20201030 15:51:58.095" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:58.079" endtime="20201030 15:51:58.095"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:58.097" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:58.096" endtime="20201030 15:51:58.098"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:58.099" endtime="20201030 15:51:58.101"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:58.077" endtime="20201030 15:51:58.101"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:58.075" endtime="20201030 15:51:58.102"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:58.108" endtime="20201030 15:51:58.395"></status>
</kw>
<msg timestamp="20201030 15:51:58.398" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021222111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021241167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:58.106" endtime="20201030 15:51:58.398"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:58.408" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021222111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021241167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:58.399" endtime="20201030 15:51:58.408"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:58.409" endtime="20201030 15:51:58.412"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:58.104" endtime="20201030 15:51:58.412"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:58.102" endtime="20201030 15:51:58.413"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:58.417" level="INFO">${RESULT} = [{'diff': 1.9055999999999934e-05}, {'diff': 1.7972000000001515e-05}, {'diff': 1.7944000000002375e-05}, {'diff': 1.7943999999998905e-05}, {'diff': 1.7957999999998475e-05}, {'diff': 1.794500000000185e-0...</msg>
<status status="PASS" starttime="20201030 15:51:58.414" endtime="20201030 15:51:58.418"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:51:58.423" level="INFO">${ACCURACY} = {'diff': [1.9055999999999934e-05, 1.7972000000001515e-05, 1.7944000000002375e-05, 1.7943999999998905e-05, 1.7957999999998475e-05, 1.794500000000185e-05, 1.7930000000002805e-05, 1.7957999999998475e-05,...</msg>
<status status="PASS" starttime="20201030 15:51:58.419" endtime="20201030 15:51:58.423"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:58.428" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201030 15:51:58.427" endtime="20201030 15:51:58.429"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:58.432" level="INFO">VALUE: [1.9055999999999934e-05, 1.7972000000001515e-05, 1.7944000000002375e-05, 1.7943999999998905e-05, 1.7957999999998475e-05, 1.794500000000185e-05, 1.7930000000002805e-05, 1.7957999999998475e-05, 1.7929999999999335e-05, 1.793099999999881e-05, 1.7944000000002375e-05, 1.7957999999998475e-05, 1.794500000000185e-05, 1.7957999999998475e-05, 1.7971999999998045e-05, 1.7915999999999765e-05, 1.790299999999967e-05, 1.7943999999998905e-05, 1.7958000000001945e-05, 1.793100000000228e-05, 1.7943999999998905e-05, 1.7943999999998905e-05, 1.7943999999998905e-05, 1.794500000000185e-05, 1.7959000000001418e-05, 1.7972000000001515e-05, 1.7943999999998905e-05, 1.7915999999999765e-05, 1.787500000000053e-05, 1.793100000000228e-05, 1.7943999999998905e-05, 1.794500000000185e-05, 1.7944000000002375e-05, 1.8000000000000654e-05, 1.794500000000185e-05, 1.787500000000053e-05, 1.7944000000002375e-05, 1.795899999999795e-05, 1.7985999999997615e-05, 1.7957999999998475e-05, 1.7943999999998905e-05, 1.7944000000002375e-05, 1.7929999999999335e-05, 1.7957999999998475e-05, 1.7957999999998475e-05, 1.7957999999998475e-05, 1.7944000000002375e-05, 1.7929999999999335e-05, 1.8014000000000224e-05, 1.7986000000001084e-05]</msg>
<status status="PASS" starttime="20201030 15:51:58.430" endtime="20201030 15:51:58.432"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:58.424" endtime="20201030 15:51:58.433"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:58.436" endtime="20201030 15:51:58.456"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:58.435" endtime="20201030 15:51:58.456"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:58.434" endtime="20201030 15:51:58.457"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:58.073" endtime="20201030 15:51:58.457"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:58.073" endtime="20201030 15:51:58.457"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:58.466" endtime="20201030 15:51:58.480"></status>
</kw>
<msg timestamp="20201030 15:51:58.481" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:58.464" endtime="20201030 15:51:58.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:58.484" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:58.482" endtime="20201030 15:51:58.484"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:58.485" endtime="20201030 15:51:58.486"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:58.462" endtime="20201030 15:51:58.487"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:58.459" endtime="20201030 15:51:58.487"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:58.494" endtime="20201030 15:51:58.782"></status>
</kw>
<msg timestamp="20201030 15:51:58.786" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022254667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022273708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:58.492" endtime="20201030 15:51:58.786"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:58.796" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022254667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022273708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:58.787" endtime="20201030 15:51:58.797"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:58.798" endtime="20201030 15:51:58.799"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:58.489" endtime="20201030 15:51:58.800"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:58.488" endtime="20201030 15:51:58.801"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:58.804" level="INFO">${RESULT} = [{'diff': 1.904100000000089e-05}, {'diff': 1.8027999999999794e-05}, {'diff': 1.794499999999838e-05}, {'diff': 1.7929999999999335e-05}, {'diff': 1.791699999999924e-05}, {'diff': 1.795899999999795e-05},...</msg>
<status status="PASS" starttime="20201030 15:51:58.801" endtime="20201030 15:51:58.805"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:51:58.809" level="INFO">${ACCURACY} = {'diff': [1.904100000000089e-05, 1.8027999999999794e-05, 1.794499999999838e-05, 1.7929999999999335e-05, 1.791699999999924e-05, 1.795899999999795e-05, 1.794499999999838e-05, 1.793099999999881e-05, 1.79...</msg>
<status status="PASS" starttime="20201030 15:51:58.805" endtime="20201030 15:51:58.809"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:58.813" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201030 15:51:58.812" endtime="20201030 15:51:58.813"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:58.815" level="INFO">VALUE: [1.904100000000089e-05, 1.8027999999999794e-05, 1.794499999999838e-05, 1.7929999999999335e-05, 1.791699999999924e-05, 1.795899999999795e-05, 1.794499999999838e-05, 1.793099999999881e-05, 1.7943999999998905e-05, 1.793100000000228e-05, 1.7943999999998905e-05, 1.794500000000185e-05, 1.7958000000001945e-05, 1.794499999999838e-05, 1.7943999999998905e-05, 1.7957999999998475e-05, 1.7929999999999335e-05, 1.7943999999998905e-05, 1.7958000000001945e-05, 1.794499999999838e-05, 1.7959000000001418e-05, 1.7958000000001945e-05, 1.7943999999998905e-05, 1.7929999999999335e-05, 1.7943999999998905e-05, 1.7944000000002375e-05, 1.7972000000001515e-05, 1.794500000000185e-05, 1.7943999999998905e-05, 1.793100000000228e-05, 1.7957999999998475e-05, 1.7958000000001945e-05, 1.794500000000185e-05, 1.787500000000053e-05, 1.7972000000001515e-05, 1.793100000000228e-05, 1.7944000000002375e-05, 1.7971999999998045e-05, 1.7971999999998045e-05, 1.793099999999881e-05, 1.7943999999998905e-05, 1.794499999999838e-05, 1.793099999999881e-05, 1.7943999999998905e-05, 1.793100000000228e-05, 1.794499999999838e-05, 1.794499999999838e-05, 1.790299999999967e-05, 1.793099999999881e-05, 1.794500000000185e-05]</msg>
<status status="PASS" starttime="20201030 15:51:58.814" endtime="20201030 15:51:58.817"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:58.809" endtime="20201030 15:51:58.817"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:58.821" endtime="20201030 15:51:58.840"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:58.819" endtime="20201030 15:51:58.841"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:58.818" endtime="20201030 15:51:58.841"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:58.458" endtime="20201030 15:51:58.842"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:58.457" endtime="20201030 15:51:58.842"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:58.851" endtime="20201030 15:51:58.864"></status>
</kw>
<msg timestamp="20201030 15:51:58.865" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:58.849" endtime="20201030 15:51:58.865"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:58.867" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:58.866" endtime="20201030 15:51:58.868"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:58.868" endtime="20201030 15:51:58.870"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:58.847" endtime="20201030 15:51:58.871"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:58.844" endtime="20201030 15:51:58.871"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:58.877" endtime="20201030 15:51:59.163"></status>
</kw>
<msg timestamp="20201030 15:51:59.167" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021907306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021926444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:58.876" endtime="20201030 15:51:59.167"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:59.179" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021907306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021926444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:59.168" endtime="20201030 15:51:59.180"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:59.181" endtime="20201030 15:51:59.183"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:58.873" endtime="20201030 15:51:59.184"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:58.872" endtime="20201030 15:51:59.184"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:59.191" level="INFO">${RESULT} = [{'diff': 1.9137999999998406e-05}, {'diff': 1.793099999999881e-05}, {'diff': 1.7943999999998905e-05}, {'diff': 1.7959000000001418e-05}, {'diff': 1.7958000000001945e-05}, {'diff': 1.791699999999924e-05...</msg>
<status status="PASS" starttime="20201030 15:51:59.185" endtime="20201030 15:51:59.191"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:51:59.196" level="INFO">${ACCURACY} = {'diff': [1.9137999999998406e-05, 1.793099999999881e-05, 1.7943999999998905e-05, 1.7959000000001418e-05, 1.7958000000001945e-05, 1.791699999999924e-05, 1.7971999999998045e-05, 1.794499999999838e-05, 1...</msg>
<status status="PASS" starttime="20201030 15:51:59.192" endtime="20201030 15:51:59.196"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:59.201" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201030 15:51:59.199" endtime="20201030 15:51:59.201"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:59.203" level="INFO">VALUE: [1.9137999999998406e-05, 1.793099999999881e-05, 1.7943999999998905e-05, 1.7959000000001418e-05, 1.7958000000001945e-05, 1.791699999999924e-05, 1.7971999999998045e-05, 1.794499999999838e-05, 1.7929999999999335e-05, 1.7930000000002805e-05, 1.794500000000185e-05, 1.794500000000185e-05, 2.2848000000002394e-05, 1.7958000000001945e-05, 1.7929999999999335e-05, 1.7973000000000988e-05, 1.794500000000185e-05, 1.7944000000002375e-05, 1.794500000000185e-05, 1.7944000000002375e-05, 1.7958000000001945e-05, 1.793099999999881e-05, 1.7957999999998475e-05, 1.794500000000185e-05, 1.7943999999998905e-05, 1.7986000000001084e-05, 1.793100000000228e-05, 1.7971999999998045e-05, 1.7929999999999335e-05, 1.7986000000001084e-05, 1.7943999999998905e-05, 2.287500000000206e-05, 2.29030000000012e-05, 1.7959000000001418e-05, 1.7959000000001418e-05, 1.794500000000185e-05, 1.7943999999998905e-05, 1.7958000000001945e-05, 1.7929999999999335e-05, 1.7957999999998475e-05, 1.794500000000185e-05, 1.790299999999967e-05, 1.7958000000001945e-05, 1.791699999999924e-05, 1.794500000000185e-05, 1.7930000000002805e-05, 1.7944000000002375e-05, 1.7943999999998905e-05, 1.7929999999999335e-05, 1.7943999999998905e-05]</msg>
<status status="PASS" starttime="20201030 15:51:59.202" endtime="20201030 15:51:59.203"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.197" endtime="20201030 15:51:59.204"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:59.207" endtime="20201030 15:51:59.227"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.206" endtime="20201030 15:51:59.227"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.205" endtime="20201030 15:51:59.228"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:58.843" endtime="20201030 15:51:59.228"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:58.842" endtime="20201030 15:51:59.229"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:59.237" endtime="20201030 15:51:59.251"></status>
</kw>
<msg timestamp="20201030 15:51:59.252" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:59.236" endtime="20201030 15:51:59.252"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:59.254" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:59.253" endtime="20201030 15:51:59.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:59.255" endtime="20201030 15:51:59.257"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.233" endtime="20201030 15:51:59.257"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.231" endtime="20201030 15:51:59.258"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:59.264" endtime="20201030 15:51:59.550"></status>
</kw>
<msg timestamp="20201030 15:51:59.553" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021880069, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:51:59.262" endtime="20201030 15:51:59.553"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:59.561" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021880069, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:51:59.554" endtime="20201030 15:51:59.561"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:59.562" endtime="20201030 15:51:59.564"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.260" endtime="20201030 15:51:59.564"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.258" endtime="20201030 15:51:59.565"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:59.568" level="INFO">${RESULT} = [{'diff': 1.906900000000003e-05}, {'diff': 2.287500000000206e-05}, {'diff': 2.284699999999945e-05}, {'diff': 2.287499999999859e-05}, {'diff': 2.286099999999902e-05}, {'diff': 2.2806000000000215e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:51:59.565" endtime="20201030 15:51:59.569"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:51:59.573" level="INFO">${ACCURACY} = {'diff': [1.906900000000003e-05, 2.287500000000206e-05, 2.284699999999945e-05, 2.287499999999859e-05, 2.286099999999902e-05, 2.2806000000000215e-05, 2.286099999999902e-05, 2.284700000000292e-05, 2.287...</msg>
<status status="PASS" starttime="20201030 15:51:59.569" endtime="20201030 15:51:59.573"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:59.577" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201030 15:51:59.576" endtime="20201030 15:51:59.577"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:59.579" level="INFO">VALUE: [1.906900000000003e-05, 2.287500000000206e-05, 2.284699999999945e-05, 2.287499999999859e-05, 2.286099999999902e-05, 2.2806000000000215e-05, 2.286099999999902e-05, 2.284700000000292e-05, 2.287500000000206e-05, 2.287500000000206e-05, 2.287500000000206e-05, 2.29169999999973e-05, 2.288899999999816e-05, 2.280500000000074e-05, 2.287500000000206e-05, 2.286099999999902e-05, 2.283299999999988e-05, 2.286099999999902e-05, 2.281900000000031e-05, 2.293100000000034e-05, 2.2862000000001964e-05, 2.287499999999859e-05, 2.287500000000206e-05, 2.287500000000206e-05, 2.284699999999945e-05, 2.287500000000206e-05, 2.286099999999902e-05, 2.286099999999902e-05, 2.288900000000163e-05, 2.287499999999859e-05, 2.286100000000249e-05, 2.2848000000002394e-05, 2.286099999999902e-05, 2.293100000000034e-05, 2.287499999999859e-05, 2.286099999999902e-05, 2.287499999999859e-05, 2.286099999999902e-05, 2.284700000000292e-05, 2.286099999999902e-05, 2.284699999999945e-05, 2.284700000000292e-05, 2.286099999999902e-05, 2.288899999999816e-05, 2.29030000000012e-05, 2.286099999999902e-05, 2.287499999999859e-05, 2.287499999999859e-05, 2.286099999999902e-05, 2.287500000000206e-05]</msg>
<status status="PASS" starttime="20201030 15:51:59.578" endtime="20201030 15:51:59.580"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.573" endtime="20201030 15:51:59.581"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:59.584" endtime="20201030 15:51:59.604"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.583" endtime="20201030 15:51:59.604"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.582" endtime="20201030 15:51:59.605"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.229" endtime="20201030 15:51:59.605"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.229" endtime="20201030 15:51:59.605"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:59.614" endtime="20201030 15:51:59.630"></status>
</kw>
<msg timestamp="20201030 15:51:59.631" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:59.612" endtime="20201030 15:51:59.631"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:59.634" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:59.632" endtime="20201030 15:51:59.634"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:59.635" endtime="20201030 15:51:59.639"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.610" endtime="20201030 15:51:59.640"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.608" endtime="20201030 15:51:59.640"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:59.650" endtime="20201030 15:51:59.937"></status>
</kw>
<msg timestamp="20201030 15:51:59.940" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022225194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022249194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:59.648" endtime="20201030 15:51:59.940"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:59.948" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022225194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022249194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:59.941" endtime="20201030 15:51:59.948"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:59.949" endtime="20201030 15:51:59.951"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.643" endtime="20201030 15:51:59.951"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.641" endtime="20201030 15:51:59.952"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:59.956" level="INFO">${RESULT} = [{'diff': 2.3999999999999716e-05}, {'diff': 2.287499999999859e-05}, {'diff': 2.2792000000000645e-05}, {'diff': 2.287499999999859e-05}, {'diff': 2.284700000000292e-05}, {'diff': 2.2806000000000215e-05}...</msg>
<status status="PASS" starttime="20201030 15:51:59.953" endtime="20201030 15:51:59.956"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:51:59.960" level="INFO">${ACCURACY} = {'diff': [2.3999999999999716e-05, 2.287499999999859e-05, 2.2792000000000645e-05, 2.287499999999859e-05, 2.284700000000292e-05, 2.2806000000000215e-05, 2.288899999999816e-05, 2.284700000000292e-05, 2.2...</msg>
<status status="PASS" starttime="20201030 15:51:59.957" endtime="20201030 15:51:59.960"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:59.964" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201030 15:51:59.963" endtime="20201030 15:51:59.965"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:59.967" level="INFO">VALUE: [2.3999999999999716e-05, 2.287499999999859e-05, 2.2792000000000645e-05, 2.287499999999859e-05, 2.284700000000292e-05, 2.2806000000000215e-05, 2.288899999999816e-05, 2.284700000000292e-05, 2.286099999999902e-05, 2.294499999999991e-05, 2.287499999999859e-05, 2.2930000000000866e-05, 2.287499999999859e-05, 2.284699999999945e-05, 2.290299999999773e-05, 2.2861999999998495e-05, 2.2862000000001964e-05, 2.281900000000031e-05, 2.2861999999998495e-05, 2.284699999999945e-05, 2.286099999999902e-05, 2.286100000000249e-05, 2.291700000000077e-05, 2.29030000000012e-05, 2.287499999999859e-05, 2.288900000000163e-05, 2.2847999999998925e-05, 2.2915999999997827e-05, 2.284700000000292e-05, 2.287500000000206e-05, 2.287499999999859e-05, 2.287499999999859e-05, 2.286099999999902e-05, 2.286100000000249e-05, 2.287500000000206e-05, 2.2819999999999785e-05, 2.287499999999859e-05, 2.2833999999999355e-05, 2.287499999999859e-05, 2.2848000000002394e-05, 2.286099999999902e-05, 2.288900000000163e-05, 2.286100000000249e-05, 2.287499999999859e-05, 2.287499999999859e-05, 2.287500000000206e-05, 2.283299999999988e-05, 2.287500000000206e-05, 2.286099999999902e-05, 2.286099999999902e-05]</msg>
<status status="PASS" starttime="20201030 15:51:59.965" endtime="20201030 15:51:59.968"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.961" endtime="20201030 15:51:59.969"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:59.973" endtime="20201030 15:51:59.992"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.971" endtime="20201030 15:51:59.993"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.970" endtime="20201030 15:51:59.993"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.606" endtime="20201030 15:51:59.993"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.606" endtime="20201030 15:51:59.993"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:00.002" endtime="20201030 15:52:00.016"></status>
</kw>
<msg timestamp="20201030 15:52:00.016" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:00.000" endtime="20201030 15:52:00.017"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:00.019" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:00.017" endtime="20201030 15:52:00.019"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:00.020" endtime="20201030 15:52:00.021"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.998" endtime="20201030 15:52:00.022"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.996" endtime="20201030 15:52:00.022"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:00.029" endtime="20201030 15:52:00.315"></status>
</kw>
<msg timestamp="20201030 15:52:00.318" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021441333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021465292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:00.027" endtime="20201030 15:52:00.318"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:00.326" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021441333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021465292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:00.319" endtime="20201030 15:52:00.326"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:00.327" endtime="20201030 15:52:00.329"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.025" endtime="20201030 15:52:00.329"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.023" endtime="20201030 15:52:00.330"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:00.333" level="INFO">${RESULT} = [{'diff': 2.395900000000048e-05}, {'diff': 2.286099999999902e-05}, {'diff': 2.287499999999859e-05}, {'diff': 2.295899999999948e-05}, {'diff': 2.286100000000249e-05}, {'diff': 2.280500000000074e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:00.330" endtime="20201030 15:52:00.334"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:00.338" level="INFO">${ACCURACY} = {'diff': [2.395900000000048e-05, 2.286099999999902e-05, 2.287499999999859e-05, 2.295899999999948e-05, 2.286100000000249e-05, 2.280500000000074e-05, 2.2862000000001964e-05, 2.286100000000249e-05, 2.281...</msg>
<status status="PASS" starttime="20201030 15:52:00.334" endtime="20201030 15:52:00.339"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:00.343" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201030 15:52:00.342" endtime="20201030 15:52:00.343"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:00.345" level="INFO">VALUE: [2.395900000000048e-05, 2.286099999999902e-05, 2.287499999999859e-05, 2.295899999999948e-05, 2.286100000000249e-05, 2.280500000000074e-05, 2.2862000000001964e-05, 2.286100000000249e-05, 2.281900000000031e-05, 2.2847999999998925e-05, 2.286100000000249e-05, 2.284700000000292e-05, 2.290299999999773e-05, 2.287500000000206e-05, 2.284699999999945e-05, 2.286099999999902e-05, 2.27770000000016e-05, 2.286100000000249e-05, 2.290299999999773e-05, 2.286099999999902e-05, 2.286100000000249e-05, 2.287500000000206e-05, 2.287499999999859e-05, 2.287499999999859e-05, 2.2806000000000215e-05, 2.293100000000034e-05, 2.2791999999997176e-05, 2.2929999999997397e-05, 2.288900000000163e-05, 2.287499999999859e-05, 2.286099999999902e-05, 2.287500000000206e-05, 2.288899999999816e-05, 2.284700000000292e-05, 2.287500000000206e-05, 2.284699999999945e-05, 2.2861999999998495e-05, 2.286099999999902e-05, 2.287499999999859e-05, 2.286099999999902e-05, 2.288900000000163e-05, 2.2944000000000436e-05, 2.280500000000074e-05, 2.283299999999988e-05, 2.293100000000034e-05, 2.288899999999816e-05, 2.293100000000034e-05, 2.284699999999945e-05, 2.287499999999859e-05, 2.286099999999902e-05]</msg>
<status status="PASS" starttime="20201030 15:52:00.344" endtime="20201030 15:52:00.346"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.339" endtime="20201030 15:52:00.347"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:00.350" endtime="20201030 15:52:00.370"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.349" endtime="20201030 15:52:00.370"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.348" endtime="20201030 15:52:00.371"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.994" endtime="20201030 15:52:00.371"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.994" endtime="20201030 15:52:00.371"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:00.379" endtime="20201030 15:52:00.393"></status>
</kw>
<msg timestamp="20201030 15:52:00.394" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:00.378" endtime="20201030 15:52:00.394"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:00.396" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:00.395" endtime="20201030 15:52:00.397"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:00.397" endtime="20201030 15:52:00.399"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.375" endtime="20201030 15:52:00.400"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.373" endtime="20201030 15:52:00.400"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:00.406" endtime="20201030 15:52:00.692"></status>
</kw>
<msg timestamp="20201030 15:52:00.696" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021203778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02122775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:52:00.405" endtime="20201030 15:52:00.696"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:00.704" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021203778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02122775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:52:00.697" endtime="20201030 15:52:00.704"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:00.705" endtime="20201030 15:52:00.706"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.402" endtime="20201030 15:52:00.707"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.401" endtime="20201030 15:52:00.707"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:00.711" level="INFO">${RESULT} = [{'diff': 2.3972000000000576e-05}, {'diff': 2.284699999999945e-05}, {'diff': 2.286099999999902e-05}, {'diff': 2.286099999999902e-05}, {'diff': 2.287499999999859e-05}, {'diff': 2.288900000000163e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:52:00.708" endtime="20201030 15:52:00.711"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:00.715" level="INFO">${ACCURACY} = {'diff': [2.3972000000000576e-05, 2.284699999999945e-05, 2.286099999999902e-05, 2.286099999999902e-05, 2.287499999999859e-05, 2.288900000000163e-05, 2.287499999999859e-05, 2.286099999999902e-05, 2.290...</msg>
<status status="PASS" starttime="20201030 15:52:00.712" endtime="20201030 15:52:00.715"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:00.720" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201030 15:52:00.719" endtime="20201030 15:52:00.720"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:00.722" level="INFO">VALUE: [2.3972000000000576e-05, 2.284699999999945e-05, 2.286099999999902e-05, 2.286099999999902e-05, 2.287499999999859e-05, 2.288900000000163e-05, 2.287499999999859e-05, 2.286099999999902e-05, 2.29030000000012e-05, 2.280500000000074e-05, 2.286099999999902e-05, 2.284699999999945e-05, 2.2861999999998495e-05, 2.2888000000002157e-05, 2.293100000000034e-05, 2.284699999999945e-05, 2.286099999999902e-05, 2.286099999999902e-05, 2.284699999999945e-05, 2.287500000000206e-05, 2.288900000000163e-05, 2.286099999999902e-05, 2.286100000000249e-05, 2.286100000000249e-05, 2.287500000000206e-05, 2.284699999999945e-05, 2.287499999999859e-05, 2.286099999999902e-05, 2.294499999999991e-05, 2.287500000000206e-05, 2.2848000000002394e-05, 2.287499999999859e-05, 2.286100000000249e-05, 2.286100000000249e-05, 2.284699999999945e-05, 2.287499999999859e-05, 2.284699999999945e-05, 2.284699999999945e-05, 2.287499999999859e-05, 2.286100000000249e-05, 2.2806000000000215e-05, 2.2902000000001727e-05, 2.287499999999859e-05, 2.2915999999997827e-05, 2.286099999999902e-05, 2.287499999999859e-05, 2.2862000000001964e-05, 2.286100000000249e-05, 2.287499999999859e-05, 2.2902000000001727e-05]</msg>
<status status="PASS" starttime="20201030 15:52:00.721" endtime="20201030 15:52:00.723"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.716" endtime="20201030 15:52:00.723"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:00.727" endtime="20201030 15:52:00.748"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.726" endtime="20201030 15:52:00.750"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.724" endtime="20201030 15:52:00.750"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.372" endtime="20201030 15:52:00.751"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.371" endtime="20201030 15:52:00.751"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:00.769" endtime="20201030 15:52:00.793"></status>
</kw>
<msg timestamp="20201030 15:52:00.794" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:00.766" endtime="20201030 15:52:00.795"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:00.800" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:00.797" endtime="20201030 15:52:00.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:00.802" endtime="20201030 15:52:00.805"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.761" endtime="20201030 15:52:00.806"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.756" endtime="20201030 15:52:00.807"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:00.820" endtime="20201030 15:52:01.113"></status>
</kw>
<msg timestamp="20201030 15:52:01.116" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041245778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041269764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:00.817" endtime="20201030 15:52:01.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:01.125" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041245778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041269764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:01.117" endtime="20201030 15:52:01.125"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:01.126" endtime="20201030 15:52:01.127"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.812" endtime="20201030 15:52:01.128"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.808" endtime="20201030 15:52:01.128"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:01.132" level="INFO">${RESULT} = [{'diff': 2.3986000000003616e-05}, {'diff': 2.287499999999859e-05}, {'diff': 2.290299999999773e-05}, {'diff': 2.286099999999902e-05}, {'diff': 2.287499999999859e-05}, {'diff': 2.286099999999902e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:52:01.129" endtime="20201030 15:52:01.132"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:01.136" level="INFO">${ACCURACY} = {'diff': [2.3986000000003616e-05, 2.287499999999859e-05, 2.290299999999773e-05, 2.286099999999902e-05, 2.287499999999859e-05, 2.286099999999902e-05, 2.288899999999816e-05, 2.286099999999902e-05, 2.287...</msg>
<status status="PASS" starttime="20201030 15:52:01.133" endtime="20201030 15:52:01.136"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:01.141" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201030 15:52:01.139" endtime="20201030 15:52:01.141"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:01.143" level="INFO">VALUE: [2.3986000000003616e-05, 2.287499999999859e-05, 2.290299999999773e-05, 2.286099999999902e-05, 2.287499999999859e-05, 2.286099999999902e-05, 2.288899999999816e-05, 2.286099999999902e-05, 2.287499999999859e-05, 2.286099999999902e-05, 2.287499999999859e-05, 2.286099999999902e-05, 2.284699999999945e-05, 2.288899999999816e-05, 2.286099999999902e-05, 2.7818999999998373e-05, 2.286099999999902e-05, 2.286099999999902e-05, 2.287499999999859e-05, 2.280500000000074e-05, 2.287499999999859e-05, 2.287499999999859e-05, 2.287499999999859e-05, 2.290300000000467e-05, 2.288899999999816e-05, 2.287499999999859e-05, 2.288899999999816e-05, 2.287499999999859e-05, 2.286099999999902e-05, 2.7763999999999567e-05, 2.28890000000051e-05, 2.7778000000006076e-05, 2.7777999999999137e-05, 2.287499999999859e-05, 2.287499999999859e-05, 2.280500000000074e-05, 2.286099999999902e-05, 2.288899999999816e-05, 2.7805999999998277e-05, 2.286099999999902e-05, 2.2806000000000215e-05, 2.286099999999902e-05, 2.286099999999902e-05, 2.7777999999999137e-05, 2.7777999999999137e-05, 2.7763999999999567e-05, 2.286099999999902e-05, 2.286099999999902e-05, 2.2861999999998495e-05, 2.7791999999998707e-05]</msg>
<status status="PASS" starttime="20201030 15:52:01.142" endtime="20201030 15:52:01.144"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:01.137" endtime="20201030 15:52:01.145"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:01.149" endtime="20201030 15:52:01.168"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:01.147" endtime="20201030 15:52:01.169"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:01.146" endtime="20201030 15:52:01.169"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.753" endtime="20201030 15:52:01.169"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.752" endtime="20201030 15:52:01.169"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:01.178" endtime="20201030 15:52:01.192"></status>
</kw>
<msg timestamp="20201030 15:52:01.193" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:01.176" endtime="20201030 15:52:01.193"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:01.195" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:01.194" endtime="20201030 15:52:01.196"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:01.196" endtime="20201030 15:52:01.198"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:01.174" endtime="20201030 15:52:01.198"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:01.172" endtime="20201030 15:52:01.199"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:01.205" endtime="20201030 15:52:01.492"></status>
</kw>
<msg timestamp="20201030 15:52:01.495" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021330694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021359611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:01.204" endtime="20201030 15:52:01.495"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:01.503" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021330694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021359611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:01.496" endtime="20201030 15:52:01.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:01.504" endtime="20201030 15:52:01.506"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:01.201" endtime="20201030 15:52:01.506"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:01.199" endtime="20201030 15:52:01.507"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:01.511" level="INFO">${RESULT} = [{'diff': 2.8916999999999832e-05}, {'diff': 2.7792000000002176e-05}, {'diff': 2.7804999999998803e-05}, {'diff': 2.7806000000001746e-05}, {'diff': 2.7763999999999567e-05}, {'diff': 2.7763999999999567e-...</msg>
<status status="PASS" starttime="20201030 15:52:01.507" endtime="20201030 15:52:01.511"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:01.516" level="INFO">${ACCURACY} = {'diff': [2.8916999999999832e-05, 2.7792000000002176e-05, 2.7804999999998803e-05, 2.7806000000001746e-05, 2.7763999999999567e-05, 2.7763999999999567e-05, 2.7749999999999997e-05, 2.7777999999999137e-05...</msg>
<status status="PASS" starttime="20201030 15:52:01.512" endtime="20201030 15:52:01.516"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:01.520" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201030 15:52:01.519" endtime="20201030 15:52:01.520"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:01.523" level="INFO">VALUE: [2.8916999999999832e-05, 2.7792000000002176e-05, 2.7804999999998803e-05, 2.7806000000001746e-05, 2.7763999999999567e-05, 2.7763999999999567e-05, 2.7749999999999997e-05, 2.7777999999999137e-05, 2.7777999999999137e-05, 2.7848000000000456e-05, 2.7763999999999567e-05, 2.7790999999999233e-05, 2.7806000000001746e-05, 2.7791999999998707e-05, 2.7791999999998707e-05, 2.7791000000002702e-05, 2.7832999999997943e-05, 2.7791999999998707e-05, 2.7804999999998803e-05, 2.7777999999999137e-05, 2.7792000000002176e-05, 2.7790999999999233e-05, 2.7790999999999233e-05, 2.7777999999999137e-05, 2.7791000000002702e-05, 2.7862000000000026e-05, 2.7763000000000093e-05, 2.7792000000002176e-05, 2.7792000000002176e-05, 2.7790999999999233e-05, 2.772300000000033e-05, 2.7790999999999233e-05, 2.7804999999998803e-05, 2.7818999999998373e-05, 2.7791999999998707e-05, 2.7776999999999663e-05, 2.7806000000001746e-05, 2.7791999999998707e-05, 2.7804999999998803e-05, 2.7832999999997943e-05, 2.7806000000001746e-05, 2.7805999999998277e-05, 2.7791999999998707e-05, 2.7792000000002176e-05, 2.7819999999997846e-05, 2.7792000000002176e-05, 2.7791999999998707e-05, 2.7804999999998803e-05, 2.7805000000002272e-05, 2.7805999999998277e-05]</msg>
<status status="PASS" starttime="20201030 15:52:01.521" endtime="20201030 15:52:01.523"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:01.516" endtime="20201030 15:52:01.524"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:01.527" endtime="20201030 15:52:01.547"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:01.526" endtime="20201030 15:52:01.547"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:01.525" endtime="20201030 15:52:01.548"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:01.170" endtime="20201030 15:52:01.548"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:01.170" endtime="20201030 15:52:01.548"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:01.557" endtime="20201030 15:52:01.571"></status>
</kw>
<msg timestamp="20201030 15:52:01.572" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:01.555" endtime="20201030 15:52:01.572"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:01.574" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:01.573" endtime="20201030 15:52:01.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:01.575" endtime="20201030 15:52:01.576"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:01.553" endtime="20201030 15:52:01.577"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:01.551" endtime="20201030 15:52:01.577"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:01.584" endtime="20201030 15:52:01.871"></status>
</kw>
<msg timestamp="20201030 15:52:01.874" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021495014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021523917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:01.582" endtime="20201030 15:52:01.874"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:01.882" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021495014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021523917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:01.875" endtime="20201030 15:52:01.882"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:01.883" endtime="20201030 15:52:01.885"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:01.580" endtime="20201030 15:52:01.885"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:01.578" endtime="20201030 15:52:01.886"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:01.889" level="INFO">${RESULT} = [{'diff': 2.8903000000000262e-05}, {'diff': 2.7806000000001746e-05}, {'diff': 2.7791000000002702e-05}, {'diff': 2.7763999999999567e-05}, {'diff': 2.7791000000002702e-05}, {'diff': 2.7875000000000122e-...</msg>
<status status="PASS" starttime="20201030 15:52:01.886" endtime="20201030 15:52:01.890"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:01.894" level="INFO">${ACCURACY} = {'diff': [2.8903000000000262e-05, 2.7806000000001746e-05, 2.7791000000002702e-05, 2.7763999999999567e-05, 2.7791000000002702e-05, 2.7875000000000122e-05, 2.7791999999998707e-05, 2.7805999999998277e-05...</msg>
<status status="PASS" starttime="20201030 15:52:01.890" endtime="20201030 15:52:01.894"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:01.898" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201030 15:52:01.897" endtime="20201030 15:52:01.898"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:01.901" level="INFO">VALUE: [2.8903000000000262e-05, 2.7806000000001746e-05, 2.7791000000002702e-05, 2.7763999999999567e-05, 2.7791000000002702e-05, 2.7875000000000122e-05, 2.7791999999998707e-05, 2.7805999999998277e-05, 2.7791000000002702e-05, 2.7790999999999233e-05, 2.7792000000002176e-05, 2.7791999999998707e-05, 2.7790999999999233e-05, 2.7820000000001316e-05, 2.7776999999999663e-05, 2.7777999999999137e-05, 2.7777999999999137e-05, 2.7778000000002606e-05, 2.7777999999999137e-05, 2.7792000000002176e-05, 2.7804999999998803e-05, 2.769499999999772e-05, 2.7776999999999663e-05, 2.7846999999997513e-05, 2.7791999999998707e-05, 2.7791999999998707e-05, 2.7804999999998803e-05, 2.7777999999999137e-05, 2.7777999999999137e-05, 2.7777999999999137e-05, 2.7792000000002176e-05, 2.7791000000002702e-05, 2.7804999999998803e-05, 2.7806000000001746e-05, 2.7749999999999997e-05, 2.7792000000002176e-05, 2.7777999999999137e-05, 2.7791999999998707e-05, 2.7764000000003036e-05, 2.7763000000000093e-05, 2.7749999999999997e-05, 2.7792000000002176e-05, 2.7776999999999663e-05, 2.7790999999999233e-05, 2.7791999999998707e-05, 2.7847000000000982e-05, 2.7776999999999663e-05, 2.7778000000002606e-05, 2.7792000000002176e-05, 2.7792000000002176e-05]</msg>
<status status="PASS" starttime="20201030 15:52:01.899" endtime="20201030 15:52:01.901"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:01.894" endtime="20201030 15:52:01.902"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:01.905" endtime="20201030 15:52:01.925"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:01.904" endtime="20201030 15:52:01.925"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:01.903" endtime="20201030 15:52:01.926"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:01.549" endtime="20201030 15:52:01.926"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:01.549" endtime="20201030 15:52:01.926"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:01.935" endtime="20201030 15:52:01.950"></status>
</kw>
<msg timestamp="20201030 15:52:01.950" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:01.933" endtime="20201030 15:52:01.951"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:01.953" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:01.951" endtime="20201030 15:52:01.953"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:01.954" endtime="20201030 15:52:01.955"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:01.931" endtime="20201030 15:52:01.956"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:01.928" endtime="20201030 15:52:01.956"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:01.963" endtime="20201030 15:52:02.250"></status>
</kw>
<msg timestamp="20201030 15:52:02.253" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022269681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022298583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:01.961" endtime="20201030 15:52:02.253"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:02.261" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022269681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022298583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:02.254" endtime="20201030 15:52:02.261"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:02.262" endtime="20201030 15:52:02.264"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:01.959" endtime="20201030 15:52:02.264"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:01.957" endtime="20201030 15:52:02.265"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:02.269" level="INFO">${RESULT} = [{'diff': 2.8902000000000788e-05}, {'diff': 2.7806000000001746e-05}, {'diff': 2.7805000000002272e-05}, {'diff': 2.7776999999999663e-05}, {'diff': 2.7806000000001746e-05}, {'diff': 2.7790999999999233e-...</msg>
<status status="PASS" starttime="20201030 15:52:02.265" endtime="20201030 15:52:02.269"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:02.273" level="INFO">${ACCURACY} = {'diff': [2.8902000000000788e-05, 2.7806000000001746e-05, 2.7805000000002272e-05, 2.7776999999999663e-05, 2.7806000000001746e-05, 2.7790999999999233e-05, 2.7791999999998707e-05, 2.7790999999999233e-05...</msg>
<status status="PASS" starttime="20201030 15:52:02.270" endtime="20201030 15:52:02.273"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:02.277" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201030 15:52:02.276" endtime="20201030 15:52:02.278"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:02.280" level="INFO">VALUE: [2.8902000000000788e-05, 2.7806000000001746e-05, 2.7805000000002272e-05, 2.7776999999999663e-05, 2.7806000000001746e-05, 2.7790999999999233e-05, 2.7791999999998707e-05, 2.7790999999999233e-05, 2.7791999999998707e-05, 2.7805000000002272e-05, 2.7777000000003133e-05, 2.7749999999999997e-05, 2.7790999999999233e-05, 2.7806000000001746e-05, 2.7791999999998707e-05, 2.7791999999998707e-05, 2.7806000000001746e-05, 2.7791999999998707e-05, 2.7778000000002606e-05, 2.7790999999999233e-05, 2.7819999999997846e-05, 2.7804999999998803e-05, 2.7790999999999233e-05, 2.7790999999999233e-05, 2.7804999999998803e-05, 2.7792000000002176e-05, 2.7778000000002606e-05, 2.7763999999999567e-05, 2.7804999999998803e-05, 2.7805000000002272e-05, 2.7776999999999663e-05, 2.7791999999998707e-05, 2.7791999999998707e-05, 2.7791999999998707e-05, 2.7791999999998707e-05, 2.7792000000002176e-05, 2.7790999999999233e-05, 2.7763999999999567e-05, 2.7778000000002606e-05, 2.7818999999998373e-05, 2.7791999999998707e-05, 2.7792000000002176e-05, 2.7790999999999233e-05, 2.7790999999999233e-05, 2.7790999999999233e-05, 2.7791999999998707e-05, 2.7722000000000857e-05, 2.7777999999999137e-05, 2.7776999999999663e-05, 2.7806000000001746e-05]</msg>
<status status="PASS" starttime="20201030 15:52:02.278" endtime="20201030 15:52:02.281"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.274" endtime="20201030 15:52:02.282"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:02.285" endtime="20201030 15:52:02.305"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.284" endtime="20201030 15:52:02.305"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.283" endtime="20201030 15:52:02.306"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:01.927" endtime="20201030 15:52:02.306"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:01.926" endtime="20201030 15:52:02.306"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:02.315" endtime="20201030 15:52:02.329"></status>
</kw>
<msg timestamp="20201030 15:52:02.330" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:02.313" endtime="20201030 15:52:02.330"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:02.332" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:02.331" endtime="20201030 15:52:02.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:02.333" endtime="20201030 15:52:02.335"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.311" endtime="20201030 15:52:02.335"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.308" endtime="20201030 15:52:02.336"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:02.342" endtime="20201030 15:52:02.628"></status>
</kw>
<msg timestamp="20201030 15:52:02.631" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021425639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021454583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:02.340" endtime="20201030 15:52:02.631"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:02.639" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021425639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021454583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:02.632" endtime="20201030 15:52:02.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:02.641" endtime="20201030 15:52:02.642"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.338" endtime="20201030 15:52:02.643"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.336" endtime="20201030 15:52:02.643"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:02.647" level="INFO">${RESULT} = [{'diff': 2.8943999999999498e-05}, {'diff': 2.7777999999999137e-05}, {'diff': 2.7804999999998803e-05}, {'diff': 2.7777999999999137e-05}, {'diff': 2.7832999999997943e-05}, {'diff': 2.7791999999998707e-...</msg>
<status status="PASS" starttime="20201030 15:52:02.644" endtime="20201030 15:52:02.647"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:02.652" level="INFO">${ACCURACY} = {'diff': [2.8943999999999498e-05, 2.7777999999999137e-05, 2.7804999999998803e-05, 2.7777999999999137e-05, 2.7832999999997943e-05, 2.7791999999998707e-05, 2.7792000000002176e-05, 2.7861000000000552e-05...</msg>
<status status="PASS" starttime="20201030 15:52:02.648" endtime="20201030 15:52:02.652"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:02.657" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201030 15:52:02.656" endtime="20201030 15:52:02.657"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:02.659" level="INFO">VALUE: [2.8943999999999498e-05, 2.7777999999999137e-05, 2.7804999999998803e-05, 2.7777999999999137e-05, 2.7832999999997943e-05, 2.7791999999998707e-05, 2.7792000000002176e-05, 2.7861000000000552e-05, 2.7791999999998707e-05, 2.7792000000002176e-05, 2.7777999999999137e-05, 2.7777999999999137e-05, 2.7804999999998803e-05, 2.7792000000002176e-05, 2.7790999999999233e-05, 2.7792000000002176e-05, 2.7777999999999137e-05, 2.7776999999999663e-05, 2.7763999999999567e-05, 2.7805000000002272e-05, 2.7833000000001412e-05, 2.7805999999998277e-05, 2.7735999999996958e-05, 2.7804999999998803e-05, 2.7791999999998707e-05, 2.7736000000000427e-05, 2.7804999999998803e-05, 2.7792000000002176e-05, 2.7818999999998373e-05, 2.7861000000000552e-05, 2.7791999999998707e-05, 2.7790999999999233e-05, 2.7749999999999997e-05, 2.7763999999999567e-05, 2.7790999999999233e-05, 2.7790999999999233e-05, 2.7777999999999137e-05, 2.7777999999999137e-05, 2.7763999999999567e-05, 2.7832999999997943e-05, 2.7804999999998803e-05, 2.7790999999999233e-05, 2.7804999999998803e-05, 2.7763999999999567e-05, 2.7790999999999233e-05, 2.7776999999999663e-05, 2.7791999999998707e-05, 2.7790999999999233e-05, 2.7805999999998277e-05, 2.7763000000000093e-05]</msg>
<status status="PASS" starttime="20201030 15:52:02.658" endtime="20201030 15:52:02.660"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.653" endtime="20201030 15:52:02.661"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:02.664" endtime="20201030 15:52:02.684"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.663" endtime="20201030 15:52:02.684"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.662" endtime="20201030 15:52:02.684"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.307" endtime="20201030 15:52:02.685"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.306" endtime="20201030 15:52:02.685"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:02.693" endtime="20201030 15:52:02.708"></status>
</kw>
<msg timestamp="20201030 15:52:02.708" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:02.692" endtime="20201030 15:52:02.709"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:02.711" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:02.709" endtime="20201030 15:52:02.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:02.712" endtime="20201030 15:52:02.713"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.689" endtime="20201030 15:52:02.714"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.687" endtime="20201030 15:52:02.714"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:02.721" endtime="20201030 15:52:03.007"></status>
</kw>
<msg timestamp="20201030 15:52:03.010" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021363847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02139275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:52:02.719" endtime="20201030 15:52:03.011"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:03.019" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021363847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02139275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:52:03.012" endtime="20201030 15:52:03.019"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:03.020" endtime="20201030 15:52:03.021"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.717" endtime="20201030 15:52:03.022"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.715" endtime="20201030 15:52:03.022"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:03.026" level="INFO">${RESULT} = [{'diff': 2.8903000000000262e-05}, {'diff': 2.7791999999998707e-05}, {'diff': 2.7792000000002176e-05}, {'diff': 3.269499999999925e-05}, {'diff': 3.272199999999892e-05}, {'diff': 2.7792000000002176e-05...</msg>
<status status="PASS" starttime="20201030 15:52:03.023" endtime="20201030 15:52:03.027"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:03.030" level="INFO">${ACCURACY} = {'diff': [2.8903000000000262e-05, 2.7791999999998707e-05, 2.7792000000002176e-05, 3.269499999999925e-05, 3.272199999999892e-05, 2.7792000000002176e-05, 2.7791999999998707e-05, 2.7792000000002176e-05, ...</msg>
<status status="PASS" starttime="20201030 15:52:03.027" endtime="20201030 15:52:03.031"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:03.035" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201030 15:52:03.034" endtime="20201030 15:52:03.035"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:03.037" level="INFO">VALUE: [2.8903000000000262e-05, 2.7791999999998707e-05, 2.7792000000002176e-05, 3.269499999999925e-05, 3.272199999999892e-05, 2.7792000000002176e-05, 2.7791999999998707e-05, 2.7792000000002176e-05, 2.7777999999999137e-05, 2.7777999999999137e-05, 2.7833000000001412e-05, 3.270899999999882e-05, 2.7820000000001316e-05, 2.7749999999999997e-05, 3.272200000000239e-05, 2.7790999999999233e-05, 2.7777999999999137e-05, 3.269500000000272e-05, 2.7791999999998707e-05, 2.7777999999999137e-05, 3.270799999999935e-05, 2.7722000000000857e-05, 2.7792000000002176e-05, 2.7790999999999233e-05, 2.7791999999998707e-05, 2.7776999999999663e-05, 2.7846999999997513e-05, 2.7791999999998707e-05, 3.270799999999935e-05, 3.272199999999892e-05, 3.270799999999935e-05, 2.7791999999998707e-05, 2.7791999999998707e-05, 2.7833000000001412e-05, 3.272199999999892e-05, 3.269499999999925e-05, 3.272200000000239e-05, 3.272199999999892e-05, 2.7806000000001746e-05, 2.7763000000000093e-05, 2.7792000000002176e-05, 2.7790999999999233e-05, 2.7777999999999137e-05, 2.7804999999998803e-05, 2.7806000000001746e-05, 2.7792000000002176e-05, 2.7790999999999233e-05, 2.7763999999999567e-05, 2.7791999999998707e-05, 3.272200000000239e-05]</msg>
<status status="PASS" starttime="20201030 15:52:03.036" endtime="20201030 15:52:03.038"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.031" endtime="20201030 15:52:03.038"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:03.042" endtime="20201030 15:52:03.062"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.041" endtime="20201030 15:52:03.062"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.039" endtime="20201030 15:52:03.062"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.686" endtime="20201030 15:52:03.063"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.685" endtime="20201030 15:52:03.063"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:03.071" endtime="20201030 15:52:03.087"></status>
</kw>
<msg timestamp="20201030 15:52:03.087" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:03.070" endtime="20201030 15:52:03.088"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:03.090" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:03.088" endtime="20201030 15:52:03.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:03.091" endtime="20201030 15:52:03.093"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.067" endtime="20201030 15:52:03.093"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.065" endtime="20201030 15:52:03.093"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:03.100" endtime="20201030 15:52:03.385"></status>
</kw>
<msg timestamp="20201030 15:52:03.388" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02238, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022413847, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201030 15:52:03.098" endtime="20201030 15:52:03.388"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:03.396" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02238, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022413847, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201030 15:52:03.389" endtime="20201030 15:52:03.396"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:03.397" endtime="20201030 15:52:03.399"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.096" endtime="20201030 15:52:03.399"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.094" endtime="20201030 15:52:03.400"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:03.404" level="INFO">${RESULT} = [{'diff': 3.3847000000000044e-05}, {'diff': 3.270799999999935e-05}, {'diff': 3.273599999999849e-05}, {'diff': 3.272299999999839e-05}, {'diff': 3.275000000000153e-05}, {'diff': 3.270900000000229e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:52:03.400" endtime="20201030 15:52:03.404"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:03.408" level="INFO">${ACCURACY} = {'diff': [3.3847000000000044e-05, 3.270799999999935e-05, 3.273599999999849e-05, 3.272299999999839e-05, 3.275000000000153e-05, 3.270900000000229e-05, 3.270799999999935e-05, 3.272199999999892e-05, 3.269...</msg>
<status status="PASS" starttime="20201030 15:52:03.405" endtime="20201030 15:52:03.408"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:03.412" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201030 15:52:03.411" endtime="20201030 15:52:03.412"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:03.414" level="INFO">VALUE: [3.3847000000000044e-05, 3.270799999999935e-05, 3.273599999999849e-05, 3.272299999999839e-05, 3.275000000000153e-05, 3.270900000000229e-05, 3.270799999999935e-05, 3.272199999999892e-05, 3.269499999999925e-05, 3.275000000000153e-05, 3.270799999999935e-05, 3.270799999999935e-05, 3.270900000000229e-05, 3.269399999999978e-05, 3.269499999999925e-05, 3.268000000000021e-05, 3.270799999999935e-05, 3.272200000000239e-05, 3.269499999999925e-05, 3.273599999999849e-05, 3.275000000000153e-05, 3.270799999999935e-05, 3.272199999999892e-05, 3.272300000000186e-05, 3.270799999999935e-05, 3.270799999999935e-05, 3.270800000000282e-05, 3.270799999999935e-05, 3.27640000000011e-05, 3.270900000000229e-05, 3.270800000000282e-05, 3.270899999999882e-05, 3.270799999999935e-05, 3.270900000000229e-05, 3.270799999999935e-05, 3.272200000000239e-05, 3.273599999999849e-05, 3.270900000000229e-05, 3.270899999999882e-05, 3.270900000000229e-05, 3.273599999999849e-05, 3.275000000000153e-05, 3.269499999999925e-05, 3.270799999999935e-05, 3.272199999999892e-05, 3.270799999999935e-05, 3.270799999999935e-05, 3.270799999999935e-05, 3.270799999999935e-05, 3.279199999999677e-05]</msg>
<status status="PASS" starttime="20201030 15:52:03.413" endtime="20201030 15:52:03.416"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.409" endtime="20201030 15:52:03.417"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:03.420" endtime="20201030 15:52:03.440"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.419" endtime="20201030 15:52:03.440"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.418" endtime="20201030 15:52:03.441"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.064" endtime="20201030 15:52:03.441"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.063" endtime="20201030 15:52:03.441"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:03.449" endtime="20201030 15:52:03.464"></status>
</kw>
<msg timestamp="20201030 15:52:03.465" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:03.448" endtime="20201030 15:52:03.465"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:03.467" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:03.466" endtime="20201030 15:52:03.467"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:03.468" endtime="20201030 15:52:03.470"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.445" endtime="20201030 15:52:03.470"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.443" endtime="20201030 15:52:03.471"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:03.477" endtime="20201030 15:52:03.765"></status>
</kw>
<msg timestamp="20201030 15:52:03.768" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021543333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021577111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:03.476" endtime="20201030 15:52:03.769"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:03.776" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021543333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021577111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:03.770" endtime="20201030 15:52:03.777"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:03.778" endtime="20201030 15:52:03.779"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.473" endtime="20201030 15:52:03.780"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.471" endtime="20201030 15:52:03.780"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:03.784" level="INFO">${RESULT} = [{'diff': 3.37779999999982e-05}, {'diff': 3.277800000000067e-05}, {'diff': 3.270799999999935e-05}, {'diff': 3.272199999999892e-05}, {'diff': 3.270799999999935e-05}, {'diff': 3.268000000000021e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:52:03.781" endtime="20201030 15:52:03.785"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:03.790" level="INFO">${ACCURACY} = {'diff': [3.37779999999982e-05, 3.277800000000067e-05, 3.270799999999935e-05, 3.272199999999892e-05, 3.270799999999935e-05, 3.268000000000021e-05, 3.270799999999935e-05, 3.273599999999849e-05, 3.27359...</msg>
<status status="PASS" starttime="20201030 15:52:03.785" endtime="20201030 15:52:03.790"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:03.795" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201030 15:52:03.793" endtime="20201030 15:52:03.795"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:03.797" level="INFO">VALUE: [3.37779999999982e-05, 3.277800000000067e-05, 3.270799999999935e-05, 3.272199999999892e-05, 3.270799999999935e-05, 3.268000000000021e-05, 3.270799999999935e-05, 3.273599999999849e-05, 3.273599999999849e-05, 3.272199999999892e-05, 3.2776999999997725e-05, 3.270899999999882e-05, 3.273600000000196e-05, 3.269499999999925e-05, 3.273600000000196e-05, 3.272199999999892e-05, 3.270800000000282e-05, 3.272200000000239e-05, 3.270800000000282e-05, 3.272299999999839e-05, 3.272200000000239e-05, 3.269399999999978e-05, 3.270799999999935e-05, 3.272299999999839e-05, 3.272200000000239e-05, 3.265300000000054e-05, 3.270899999999882e-05, 3.272299999999839e-05, 3.270799999999935e-05, 3.277800000000067e-05, 3.269499999999925e-05, 3.27640000000011e-05, 3.265299999999707e-05, 3.270799999999935e-05, 3.272199999999892e-05, 3.270799999999935e-05, 3.270799999999935e-05, 3.268000000000021e-05, 3.270799999999935e-05, 3.272299999999839e-05, 3.270800000000282e-05, 3.269399999999978e-05, 3.270799999999935e-05, 3.270799999999935e-05, 3.277800000000067e-05, 3.272300000000186e-05, 3.272200000000239e-05, 3.272199999999892e-05, 3.272199999999892e-05, 3.270799999999935e-05]</msg>
<status status="PASS" starttime="20201030 15:52:03.796" endtime="20201030 15:52:03.798"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.791" endtime="20201030 15:52:03.799"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:03.802" endtime="20201030 15:52:03.822"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.801" endtime="20201030 15:52:03.822"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.800" endtime="20201030 15:52:03.823"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.442" endtime="20201030 15:52:03.823"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.441" endtime="20201030 15:52:03.823"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:03.838" endtime="20201030 15:52:03.855"></status>
</kw>
<msg timestamp="20201030 15:52:03.855" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:03.835" endtime="20201030 15:52:03.856"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:03.860" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:03.857" endtime="20201030 15:52:03.861"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:03.862" endtime="20201030 15:52:03.865"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.830" endtime="20201030 15:52:03.866"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.826" endtime="20201030 15:52:03.868"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:03.878" endtime="20201030 15:52:04.167"></status>
</kw>
<msg timestamp="20201030 15:52:04.170" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029311569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029345403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:03.876" endtime="20201030 15:52:04.171"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:04.179" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029311569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029345403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:04.171" endtime="20201030 15:52:04.179"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:04.180" endtime="20201030 15:52:04.181"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.872" endtime="20201030 15:52:04.182"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.869" endtime="20201030 15:52:04.182"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:04.186" level="INFO">${RESULT} = [{'diff': 3.383399999999995e-05}, {'diff': 3.273600000000196e-05}, {'diff': 3.272200000000239e-05}, {'diff': 3.266700000000011e-05}, {'diff': 3.269399999999978e-05}, {'diff': 3.272300000000186e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:04.183" endtime="20201030 15:52:04.186"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:04.190" level="INFO">${ACCURACY} = {'diff': [3.383399999999995e-05, 3.273600000000196e-05, 3.272200000000239e-05, 3.266700000000011e-05, 3.269399999999978e-05, 3.272300000000186e-05, 3.270900000000229e-05, 3.272199999999892e-05, 3.2707...</msg>
<status status="PASS" starttime="20201030 15:52:04.187" endtime="20201030 15:52:04.191"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:04.195" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201030 15:52:04.194" endtime="20201030 15:52:04.195"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:04.197" level="INFO">VALUE: [3.383399999999995e-05, 3.273600000000196e-05, 3.272200000000239e-05, 3.266700000000011e-05, 3.269399999999978e-05, 3.272300000000186e-05, 3.270900000000229e-05, 3.272199999999892e-05, 3.270799999999935e-05, 3.270799999999935e-05, 3.269499999999925e-05, 3.272199999999892e-05, 3.272199999999892e-05, 3.270799999999935e-05, 3.268099999999968e-05, 3.270800000000282e-05, 3.266600000000064e-05, 3.270899999999882e-05, 3.270899999999882e-05, 3.26250000000014e-05, 3.270799999999935e-05, 3.269499999999925e-05, 3.270899999999882e-05, 3.272200000000239e-05, 3.272199999999892e-05, 3.270900000000229e-05, 3.273600000000196e-05, 3.270799999999935e-05, 3.272199999999892e-05, 3.270799999999935e-05, 3.270799999999935e-05, 3.272200000000239e-05, 3.272199999999892e-05, 3.268099999999968e-05, 3.270799999999935e-05, 3.276400000000457e-05, 3.269499999999925e-05, 3.27779999999972e-05, 3.272199999999892e-05, 3.270899999999882e-05, 3.272199999999892e-05, 3.270799999999935e-05, 3.272199999999892e-05, 3.272200000000586e-05, 3.272199999999892e-05, 3.270799999999935e-05, 3.269499999999925e-05, 3.27779999999972e-05, 3.272199999999892e-05, 3.269399999999978e-05]</msg>
<status status="PASS" starttime="20201030 15:52:04.196" endtime="20201030 15:52:04.198"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.191" endtime="20201030 15:52:04.198"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:04.202" endtime="20201030 15:52:04.222"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.201" endtime="20201030 15:52:04.222"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.199" endtime="20201030 15:52:04.222"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.824" endtime="20201030 15:52:04.223"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.824" endtime="20201030 15:52:04.223"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:04.231" endtime="20201030 15:52:04.249"></status>
</kw>
<msg timestamp="20201030 15:52:04.250" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:04.230" endtime="20201030 15:52:04.250"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:04.252" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:04.251" endtime="20201030 15:52:04.253"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:04.253" endtime="20201030 15:52:04.255"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.227" endtime="20201030 15:52:04.256"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.225" endtime="20201030 15:52:04.256"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:04.262" endtime="20201030 15:52:04.547"></status>
</kw>
<msg timestamp="20201030 15:52:04.550" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024626375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024660194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:04.261" endtime="20201030 15:52:04.551"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:04.559" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024626375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024660194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:04.552" endtime="20201030 15:52:04.559"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:04.560" endtime="20201030 15:52:04.562"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.258" endtime="20201030 15:52:04.562"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.257" endtime="20201030 15:52:04.562"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:04.566" level="INFO">${RESULT} = [{'diff': 3.3819000000000904e-05}, {'diff': 3.269399999999978e-05}, {'diff': 3.272300000000186e-05}, {'diff': 3.275000000000153e-05}, {'diff': 3.270799999999935e-05}, {'diff': 3.270899999999882e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:52:04.563" endtime="20201030 15:52:04.567"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:04.571" level="INFO">${ACCURACY} = {'diff': [3.3819000000000904e-05, 3.269399999999978e-05, 3.272300000000186e-05, 3.275000000000153e-05, 3.270799999999935e-05, 3.270899999999882e-05, 3.269399999999978e-05, 3.269399999999978e-05, 3.270...</msg>
<status status="PASS" starttime="20201030 15:52:04.567" endtime="20201030 15:52:04.571"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:04.575" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201030 15:52:04.574" endtime="20201030 15:52:04.575"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:04.577" level="INFO">VALUE: [3.3819000000000904e-05, 3.269399999999978e-05, 3.272300000000186e-05, 3.275000000000153e-05, 3.270799999999935e-05, 3.270899999999882e-05, 3.269399999999978e-05, 3.269399999999978e-05, 3.270799999999935e-05, 3.269399999999978e-05, 3.269499999999925e-05, 3.272200000000239e-05, 3.272199999999892e-05, 3.270799999999935e-05, 3.270900000000229e-05, 3.266700000000011e-05, 3.272299999999839e-05, 3.273600000000196e-05, 3.270800000000282e-05, 3.270799999999935e-05, 3.270799999999935e-05, 3.277800000000067e-05, 3.272200000000239e-05, 3.269499999999925e-05, 3.272199999999892e-05, 3.270799999999935e-05, 3.27640000000011e-05, 3.269499999999925e-05, 3.272199999999892e-05, 3.272200000000239e-05, 3.2776999999997725e-05, 3.272299999999839e-05, 3.273600000000196e-05, 3.275000000000153e-05, 3.269399999999978e-05, 3.272199999999892e-05, 3.270800000000282e-05, 3.272200000000239e-05, 3.275000000000153e-05, 3.272300000000186e-05, 3.269399999999978e-05, 3.277800000000067e-05, 3.270800000000282e-05, 3.272300000000186e-05, 3.269399999999978e-05, 3.272200000000239e-05, 3.266700000000011e-05, 3.270800000000282e-05, 3.270799999999935e-05, 3.270799999999935e-05]</msg>
<status status="PASS" starttime="20201030 15:52:04.576" endtime="20201030 15:52:04.579"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.571" endtime="20201030 15:52:04.579"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:04.583" endtime="20201030 15:52:04.602"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.582" endtime="20201030 15:52:04.603"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.580" endtime="20201030 15:52:04.603"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.224" endtime="20201030 15:52:04.604"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.223" endtime="20201030 15:52:04.604"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:04.612" endtime="20201030 15:52:04.627"></status>
</kw>
<msg timestamp="20201030 15:52:04.627" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:04.611" endtime="20201030 15:52:04.628"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:04.630" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:04.628" endtime="20201030 15:52:04.630"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:04.631" endtime="20201030 15:52:04.633"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.608" endtime="20201030 15:52:04.633"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.606" endtime="20201030 15:52:04.634"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:04.640" endtime="20201030 15:52:04.926"></status>
</kw>
<msg timestamp="20201030 15:52:04.929" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021436097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021469931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:04.638" endtime="20201030 15:52:04.929"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:04.937" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021436097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021469931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:04.930" endtime="20201030 15:52:04.938"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:04.938" endtime="20201030 15:52:04.940"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.636" endtime="20201030 15:52:04.941"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.634" endtime="20201030 15:52:04.941"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:04.945" level="INFO">${RESULT} = [{'diff': 3.383399999999995e-05}, {'diff': 3.268000000000021e-05}, {'diff': 3.272200000000239e-05}, {'diff': 3.7610999999999895e-05}, {'diff': 3.272200000000239e-05}, {'diff': 3.7624999999999464e-05},...</msg>
<status status="PASS" starttime="20201030 15:52:04.942" endtime="20201030 15:52:04.945"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:04.950" level="INFO">${ACCURACY} = {'diff': [3.383399999999995e-05, 3.268000000000021e-05, 3.272200000000239e-05, 3.7610999999999895e-05, 3.272200000000239e-05, 3.7624999999999464e-05, 3.269499999999925e-05, 3.268099999999968e-05, 3.76...</msg>
<status status="PASS" starttime="20201030 15:52:04.946" endtime="20201030 15:52:04.950"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:04.955" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201030 15:52:04.954" endtime="20201030 15:52:04.955"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:04.957" level="INFO">VALUE: [3.383399999999995e-05, 3.268000000000021e-05, 3.272200000000239e-05, 3.7610999999999895e-05, 3.272200000000239e-05, 3.7624999999999464e-05, 3.269499999999925e-05, 3.268099999999968e-05, 3.7638999999999034e-05, 3.272199999999892e-05, 3.276399999999763e-05, 3.7638999999999034e-05, 3.270799999999935e-05, 3.270900000000229e-05, 3.270799999999935e-05, 3.7583000000000755e-05, 3.7638999999999034e-05, 3.7638999999999034e-05, 3.273600000000196e-05, 3.272299999999839e-05, 3.272200000000239e-05, 3.270899999999882e-05, 3.269399999999978e-05, 3.7624999999999464e-05, 3.270799999999935e-05, 3.7610999999999895e-05, 3.761200000000284e-05, 3.7597000000000325e-05, 3.7624999999999464e-05, 3.270899999999882e-05, 3.270800000000282e-05, 3.270799999999935e-05, 3.268000000000021e-05, 3.270800000000282e-05, 3.7638999999999034e-05, 3.7653000000002074e-05, 3.7610999999999895e-05, 3.270799999999935e-05, 3.272300000000186e-05, 3.273599999999849e-05, 3.275000000000153e-05, 3.7639000000002504e-05, 3.269399999999978e-05, 3.272199999999892e-05, 3.270799999999935e-05, 3.7638999999999034e-05, 3.7638999999999034e-05, 3.270799999999935e-05, 3.7638999999999034e-05, 3.275000000000153e-05]</msg>
<status status="PASS" starttime="20201030 15:52:04.956" endtime="20201030 15:52:04.958"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.951" endtime="20201030 15:52:04.959"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:04.963" endtime="20201030 15:52:04.982"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.961" endtime="20201030 15:52:04.983"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.960" endtime="20201030 15:52:04.983"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.605" endtime="20201030 15:52:04.983"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.604" endtime="20201030 15:52:04.983"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:04.992" endtime="20201030 15:52:05.007"></status>
</kw>
<msg timestamp="20201030 15:52:05.008" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:04.990" endtime="20201030 15:52:05.008"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:05.011" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:05.009" endtime="20201030 15:52:05.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:05.012" endtime="20201030 15:52:05.014"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.988" endtime="20201030 15:52:05.015"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.986" endtime="20201030 15:52:05.015"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:05.023" endtime="20201030 15:52:05.309"></status>
</kw>
<msg timestamp="20201030 15:52:05.312" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021760861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021799625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:05.022" endtime="20201030 15:52:05.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:05.320" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021760861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021799625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:05.313" endtime="20201030 15:52:05.321"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:05.322" endtime="20201030 15:52:05.323"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:05.018" endtime="20201030 15:52:05.324"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:05.016" endtime="20201030 15:52:05.324"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:05.328" level="INFO">${RESULT} = [{'diff': 3.876400000000016e-05}, {'diff': 3.7639000000002504e-05}, {'diff': 3.7624999999999464e-05}, {'diff': 3.7610999999999895e-05}, {'diff': 3.7624999999999464e-05}, {'diff': 3.772199999999698e-05...</msg>
<status status="PASS" starttime="20201030 15:52:05.325" endtime="20201030 15:52:05.329"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:05.333" level="INFO">${ACCURACY} = {'diff': [3.876400000000016e-05, 3.7639000000002504e-05, 3.7624999999999464e-05, 3.7610999999999895e-05, 3.7624999999999464e-05, 3.772199999999698e-05, 3.7638999999999034e-05, 3.7583000000000755e-05, ...</msg>
<status status="PASS" starttime="20201030 15:52:05.329" endtime="20201030 15:52:05.333"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:05.337" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201030 15:52:05.336" endtime="20201030 15:52:05.337"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:05.339" level="INFO">VALUE: [3.876400000000016e-05, 3.7639000000002504e-05, 3.7624999999999464e-05, 3.7610999999999895e-05, 3.7624999999999464e-05, 3.772199999999698e-05, 3.7638999999999034e-05, 3.7583000000000755e-05, 3.7638999999999034e-05, 3.763799999999956e-05, 3.761199999999937e-05, 3.7624999999999464e-05, 3.7624999999999464e-05, 3.7582999999997285e-05, 3.7624999999999464e-05, 3.763799999999956e-05, 3.7652999999998604e-05, 3.7638999999999034e-05, 3.7638999999999034e-05, 3.763799999999956e-05, 3.7667000000001644e-05, 3.7638999999999034e-05, 3.763799999999956e-05, 3.7638999999999034e-05, 3.765199999999913e-05, 3.7624999999999464e-05, 3.769399999999784e-05, 3.7624999999999464e-05, 3.7638999999999034e-05, 3.7624999999999464e-05, 3.765199999999913e-05, 3.7638999999999034e-05, 3.763799999999956e-05, 3.7638999999999034e-05, 3.7639000000002504e-05, 3.7638999999999034e-05, 3.7597000000000325e-05, 3.765199999999913e-05, 3.7638999999999034e-05, 3.763799999999956e-05, 3.7639000000002504e-05, 3.7652999999998604e-05, 3.7638999999999034e-05, 3.7638999999999034e-05, 3.7638999999999034e-05, 3.769400000000131e-05, 3.7639000000002504e-05, 3.7610999999999895e-05, 3.7597000000000325e-05, 3.763799999999956e-05]</msg>
<status status="PASS" starttime="20201030 15:52:05.338" endtime="20201030 15:52:05.340"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:05.333" endtime="20201030 15:52:05.341"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:05.344" endtime="20201030 15:52:05.364"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:05.343" endtime="20201030 15:52:05.364"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:05.342" endtime="20201030 15:52:05.365"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.984" endtime="20201030 15:52:05.365"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.984" endtime="20201030 15:52:05.365"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:05.374" endtime="20201030 15:52:05.389"></status>
</kw>
<msg timestamp="20201030 15:52:05.390" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:05.372" endtime="20201030 15:52:05.390"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:05.393" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:05.391" endtime="20201030 15:52:05.393"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:05.394" endtime="20201030 15:52:05.395"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:05.370" endtime="20201030 15:52:05.396"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:05.368" endtime="20201030 15:52:05.396"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:05.403" endtime="20201030 15:52:05.689"></status>
</kw>
<msg timestamp="20201030 15:52:05.692" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022516514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022555333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:05.401" endtime="20201030 15:52:05.692"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:05.700" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022516514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022555333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:05.693" endtime="20201030 15:52:05.701"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:05.701" endtime="20201030 15:52:05.703"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:05.398" endtime="20201030 15:52:05.704"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:05.397" endtime="20201030 15:52:05.704"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:05.708" level="INFO">${RESULT} = [{'diff': 3.8818999999998965e-05}, {'diff': 3.75979999999998e-05}, {'diff': 3.7681000000001214e-05}, {'diff': 3.7638999999999034e-05}, {'diff': 3.7624999999999464e-05}, {'diff': 3.7652999999998604e-05...</msg>
<status status="PASS" starttime="20201030 15:52:05.705" endtime="20201030 15:52:05.708"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:05.712" level="INFO">${ACCURACY} = {'diff': [3.8818999999998965e-05, 3.75979999999998e-05, 3.7681000000001214e-05, 3.7638999999999034e-05, 3.7624999999999464e-05, 3.7652999999998604e-05, 3.7652999999998604e-05, 3.7652999999998604e-05, ...</msg>
<status status="PASS" starttime="20201030 15:52:05.709" endtime="20201030 15:52:05.712"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:05.717" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201030 15:52:05.716" endtime="20201030 15:52:05.717"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:05.719" level="INFO">VALUE: [3.8818999999998965e-05, 3.75979999999998e-05, 3.7681000000001214e-05, 3.7638999999999034e-05, 3.7624999999999464e-05, 3.7652999999998604e-05, 3.7652999999998604e-05, 3.7652999999998604e-05, 3.7652999999998604e-05, 3.7638999999999034e-05, 3.7624999999999464e-05, 3.7624999999999464e-05, 3.7624999999999464e-05, 3.7638999999999034e-05, 3.7638999999999034e-05, 3.7582999999997285e-05, 3.763799999999956e-05, 3.7624999999999464e-05, 3.76659999999987e-05, 3.7638999999999034e-05, 3.7624999999999464e-05, 3.7652999999998604e-05, 3.7639000000002504e-05, 3.7624999999999464e-05, 3.7624999999999464e-05, 3.7638999999999034e-05, 3.7624999999999464e-05, 3.7624999999999464e-05, 3.7624999999999464e-05, 3.7638999999999034e-05, 3.7638999999999034e-05, 3.7638999999999034e-05, 3.7624999999999464e-05, 3.7624999999999464e-05, 3.7639000000002504e-05, 3.7624999999999464e-05, 3.7638999999999034e-05, 3.7653000000002074e-05, 3.7624999999999464e-05, 3.7638999999999034e-05, 3.7624999999999464e-05, 3.7639000000002504e-05, 3.7638999999999034e-05, 3.7624999999999464e-05, 3.7653000000002074e-05, 3.75979999999998e-05, 3.7625000000002934e-05, 3.7624999999999464e-05, 3.7653000000002074e-05, 3.7638999999999034e-05]</msg>
<status status="PASS" starttime="20201030 15:52:05.718" endtime="20201030 15:52:05.721"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:05.713" endtime="20201030 15:52:05.721"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:05.725" endtime="20201030 15:52:05.744"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:05.723" endtime="20201030 15:52:05.745"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:05.722" endtime="20201030 15:52:05.745"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:05.366" endtime="20201030 15:52:05.745"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:05.365" endtime="20201030 15:52:05.745"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:05.754" endtime="20201030 15:52:05.769"></status>
</kw>
<msg timestamp="20201030 15:52:05.769" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:05.753" endtime="20201030 15:52:05.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:05.772" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:05.770" endtime="20201030 15:52:05.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:05.773" endtime="20201030 15:52:05.775"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:05.750" endtime="20201030 15:52:05.775"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:05.748" endtime="20201030 15:52:05.775"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:05.782" endtime="20201030 15:52:06.068"></status>
</kw>
<msg timestamp="20201030 15:52:06.071" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021506625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021545375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:05.780" endtime="20201030 15:52:06.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:06.079" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021506625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021545375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:06.072" endtime="20201030 15:52:06.080"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:06.080" endtime="20201030 15:52:06.082"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:05.778" endtime="20201030 15:52:06.083"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:05.776" endtime="20201030 15:52:06.083"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:06.087" level="INFO">${RESULT} = [{'diff': 3.874999999999712e-05}, {'diff': 3.7625000000002934e-05}, {'diff': 3.758400000000023e-05}, {'diff': 3.7653000000002074e-05}, {'diff': 3.763799999999956e-05}, {'diff': 3.7582999999997285e-05}...</msg>
<status status="PASS" starttime="20201030 15:52:06.084" endtime="20201030 15:52:06.087"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:06.093" level="INFO">${ACCURACY} = {'diff': [3.874999999999712e-05, 3.7625000000002934e-05, 3.758400000000023e-05, 3.7653000000002074e-05, 3.763799999999956e-05, 3.7582999999997285e-05, 3.7624999999999464e-05, 3.7583000000000755e-05, 3...</msg>
<status status="PASS" starttime="20201030 15:52:06.088" endtime="20201030 15:52:06.093"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:06.097" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201030 15:52:06.096" endtime="20201030 15:52:06.098"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:06.100" level="INFO">VALUE: [3.874999999999712e-05, 3.7625000000002934e-05, 3.758400000000023e-05, 3.7653000000002074e-05, 3.763799999999956e-05, 3.7582999999997285e-05, 3.7624999999999464e-05, 3.7583000000000755e-05, 3.7639000000002504e-05, 3.7624999999999464e-05, 3.7624999999999464e-05, 3.7638999999999034e-05, 3.7624999999999464e-05, 3.7638999999999034e-05, 3.7624999999999464e-05, 3.7638999999999034e-05, 3.7652999999998604e-05, 3.7667000000001644e-05, 3.7638999999999034e-05, 3.7639000000002504e-05, 3.7625000000002934e-05, 3.76659999999987e-05, 3.765199999999913e-05, 3.7625000000002934e-05, 3.76520000000026e-05, 3.772299999999992e-05, 3.76520000000026e-05, 3.7638999999999034e-05, 3.7638999999999034e-05, 3.765199999999913e-05, 3.7624999999999464e-05, 3.7653000000002074e-05, 3.7638999999999034e-05, 3.7610999999999895e-05, 3.7639000000002504e-05, 3.763799999999956e-05, 3.7653000000002074e-05, 3.7652999999998604e-05, 3.7666999999998174e-05, 3.766600000000217e-05, 3.765199999999913e-05, 3.768000000000174e-05, 3.7639000000002504e-05, 3.7568999999997715e-05, 3.7667000000001644e-05, 3.7610999999999895e-05, 3.769400000000131e-05, 3.7653000000002074e-05, 3.768000000000174e-05, 3.7652999999998604e-05]</msg>
<status status="PASS" starttime="20201030 15:52:06.099" endtime="20201030 15:52:06.101"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.094" endtime="20201030 15:52:06.102"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:06.106" endtime="20201030 15:52:06.126"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.104" endtime="20201030 15:52:06.127"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.103" endtime="20201030 15:52:06.127"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:05.746" endtime="20201030 15:52:06.128"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:05.746" endtime="20201030 15:52:06.128"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:06.138" endtime="20201030 15:52:06.153"></status>
</kw>
<msg timestamp="20201030 15:52:06.153" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:06.136" endtime="20201030 15:52:06.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:06.156" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:06.154" endtime="20201030 15:52:06.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:06.157" endtime="20201030 15:52:06.158"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.133" endtime="20201030 15:52:06.159"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.131" endtime="20201030 15:52:06.159"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:06.166" endtime="20201030 15:52:06.452"></status>
</kw>
<msg timestamp="20201030 15:52:06.455" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023503222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023541986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:06.164" endtime="20201030 15:52:06.455"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:06.463" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023503222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023541986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:06.456" endtime="20201030 15:52:06.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:06.464" endtime="20201030 15:52:06.466"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.162" endtime="20201030 15:52:06.466"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.160" endtime="20201030 15:52:06.467"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:06.471" level="INFO">${RESULT} = [{'diff': 3.876400000000016e-05}, {'diff': 3.7652999999998604e-05}, {'diff': 3.7569000000001185e-05}, {'diff': 3.7639000000002504e-05}, {'diff': 3.7638999999999034e-05}, {'diff': 3.7639000000002504e-0...</msg>
<status status="PASS" starttime="20201030 15:52:06.467" endtime="20201030 15:52:06.471"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:06.475" level="INFO">${ACCURACY} = {'diff': [3.876400000000016e-05, 3.7652999999998604e-05, 3.7569000000001185e-05, 3.7639000000002504e-05, 3.7638999999999034e-05, 3.7639000000002504e-05, 3.7667000000001644e-05, 3.765199999999913e-05, ...</msg>
<status status="PASS" starttime="20201030 15:52:06.472" endtime="20201030 15:52:06.475"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:06.479" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201030 15:52:06.478" endtime="20201030 15:52:06.480"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:06.482" level="INFO">VALUE: [3.876400000000016e-05, 3.7652999999998604e-05, 3.7569000000001185e-05, 3.7639000000002504e-05, 3.7638999999999034e-05, 3.7639000000002504e-05, 3.7667000000001644e-05, 3.765199999999913e-05, 3.763799999999956e-05, 3.7624999999999464e-05, 3.7638999999999034e-05, 3.7639000000002504e-05, 3.7639000000002504e-05, 3.7624999999999464e-05, 3.7666999999998174e-05, 3.7625000000002934e-05, 3.768000000000174e-05, 3.7652999999998604e-05, 3.7638999999999034e-05, 3.7625000000002934e-05, 3.7624999999999464e-05, 3.7624999999999464e-05, 3.7624999999999464e-05, 3.7583000000000755e-05, 3.7638999999999034e-05, 3.7624999999999464e-05, 3.7624999999999464e-05, 3.763799999999956e-05, 3.7624999999999464e-05, 3.7639000000002504e-05, 3.758400000000023e-05, 3.7667000000001644e-05, 3.7582999999997285e-05, 3.7625000000002934e-05, 3.7639000000002504e-05, 3.7638999999999034e-05, 3.7653000000002074e-05, 3.765199999999913e-05, 3.7625000000002934e-05, 3.7638999999999034e-05, 3.7624999999999464e-05, 3.7639000000002504e-05, 3.7625000000002934e-05, 3.76520000000026e-05, 3.7624999999999464e-05, 3.757000000000066e-05, 3.7638999999999034e-05, 3.7652999999998604e-05, 3.76659999999987e-05, 3.7625000000002934e-05]</msg>
<status status="PASS" starttime="20201030 15:52:06.480" endtime="20201030 15:52:06.483"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.476" endtime="20201030 15:52:06.483"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:06.487" endtime="20201030 15:52:06.506"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.485" endtime="20201030 15:52:06.507"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.484" endtime="20201030 15:52:06.507"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.129" endtime="20201030 15:52:06.507"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.128" endtime="20201030 15:52:06.508"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:06.516" endtime="20201030 15:52:06.532"></status>
</kw>
<msg timestamp="20201030 15:52:06.532" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:06.515" endtime="20201030 15:52:06.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:06.535" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:06.534" endtime="20201030 15:52:06.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:06.536" endtime="20201030 15:52:06.538"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.512" endtime="20201030 15:52:06.538"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.510" endtime="20201030 15:52:06.539"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:06.545" endtime="20201030 15:52:06.830"></status>
</kw>
<msg timestamp="20201030 15:52:06.833" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022419167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022457917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:06.543" endtime="20201030 15:52:06.834"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:06.842" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022419167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022457917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:06.835" endtime="20201030 15:52:06.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:06.843" endtime="20201030 15:52:06.845"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.541" endtime="20201030 15:52:06.845"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.539" endtime="20201030 15:52:06.846"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:06.850" level="INFO">${RESULT} = [{'diff': 3.875000000000059e-05}, {'diff': 4.254199999999958e-05}, {'diff': 3.7652999999998604e-05}, {'diff': 4.255600000000262e-05}, {'diff': 3.7638999999999034e-05}, {'diff': 3.7638999999999034e-05}...</msg>
<status status="PASS" starttime="20201030 15:52:06.847" endtime="20201030 15:52:06.850"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:06.854" level="INFO">${ACCURACY} = {'diff': [3.875000000000059e-05, 4.254199999999958e-05, 3.7652999999998604e-05, 4.255600000000262e-05, 3.7638999999999034e-05, 3.7638999999999034e-05, 4.251400000000044e-05, 3.7639000000002504e-05, 4....</msg>
<status status="PASS" starttime="20201030 15:52:06.851" endtime="20201030 15:52:06.854"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:06.858" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201030 15:52:06.857" endtime="20201030 15:52:06.859"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:06.861" level="INFO">VALUE: [3.875000000000059e-05, 4.254199999999958e-05, 3.7652999999998604e-05, 4.255600000000262e-05, 3.7638999999999034e-05, 3.7638999999999034e-05, 4.251400000000044e-05, 3.7639000000002504e-05, 4.255599999999915e-05, 4.255599999999915e-05, 3.7681000000001214e-05, 3.7652999999998604e-05, 3.7624999999999464e-05, 4.255599999999915e-05, 3.763799999999956e-05, 4.2568999999999246e-05, 3.7653000000002074e-05, 3.76520000000026e-05, 3.7624999999999464e-05, 3.7624999999999464e-05, 4.2568999999999246e-05, 3.7653000000002074e-05, 3.766600000000217e-05, 3.7653000000002074e-05, 3.7624999999999464e-05, 3.7639000000002504e-05, 3.7624999999999464e-05, 3.7638999999999034e-05, 3.7638999999999034e-05, 3.7652999999998604e-05, 4.2555000000003146e-05, 3.7624999999999464e-05, 3.7625000000002934e-05, 3.7624999999999464e-05, 3.7624999999999464e-05, 3.7638999999999034e-05, 3.761199999999937e-05, 4.255599999999915e-05, 3.7624999999999464e-05, 4.2554999999999676e-05, 4.255600000000262e-05, 4.252800000000001e-05, 3.7653000000002074e-05, 4.2541000000000107e-05, 4.2569000000002716e-05, 3.7624999999999464e-05, 3.7624999999999464e-05, 3.7639000000002504e-05, 3.7666999999998174e-05, 3.7638999999999034e-05]</msg>
<status status="PASS" starttime="20201030 15:52:06.859" endtime="20201030 15:52:06.863"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.855" endtime="20201030 15:52:06.863"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:06.867" endtime="20201030 15:52:06.886"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.865" endtime="20201030 15:52:06.887"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.864" endtime="20201030 15:52:06.887"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.508" endtime="20201030 15:52:06.887"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.508" endtime="20201030 15:52:06.887"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:06.896" endtime="20201030 15:52:06.911"></status>
</kw>
<msg timestamp="20201030 15:52:06.912" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:06.895" endtime="20201030 15:52:06.912"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:06.914" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:06.913" endtime="20201030 15:52:06.914"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:06.915" endtime="20201030 15:52:06.917"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.892" endtime="20201030 15:52:06.917"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.890" endtime="20201030 15:52:06.918"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:06.924" endtime="20201030 15:52:07.210"></status>
</kw>
<msg timestamp="20201030 15:52:07.213" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021588236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021631875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:06.923" endtime="20201030 15:52:07.213"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:07.221" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021588236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021631875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:07.214" endtime="20201030 15:52:07.221"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:07.222" endtime="20201030 15:52:07.224"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.920" endtime="20201030 15:52:07.224"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.918" endtime="20201030 15:52:07.225"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:07.228" level="INFO">${RESULT} = [{'diff': 4.3638999999998096e-05}, {'diff': 4.256999999999872e-05}, {'diff': 4.2554999999999676e-05}, {'diff': 4.2541000000000107e-05}, {'diff': 4.256999999999872e-05}, {'diff': 4.2568999999999246e-05...</msg>
<status status="PASS" starttime="20201030 15:52:07.225" endtime="20201030 15:52:07.229"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:07.233" level="INFO">${ACCURACY} = {'diff': [4.3638999999998096e-05, 4.256999999999872e-05, 4.2554999999999676e-05, 4.2541000000000107e-05, 4.256999999999872e-05, 4.2568999999999246e-05, 4.2568999999999246e-05, 4.252800000000001e-05, 4...</msg>
<status status="PASS" starttime="20201030 15:52:07.229" endtime="20201030 15:52:07.234"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:07.238" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201030 15:52:07.237" endtime="20201030 15:52:07.238"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:07.240" level="INFO">VALUE: [4.3638999999998096e-05, 4.256999999999872e-05, 4.2554999999999676e-05, 4.2541000000000107e-05, 4.256999999999872e-05, 4.2568999999999246e-05, 4.2568999999999246e-05, 4.252800000000001e-05, 4.254199999999958e-05, 4.254199999999958e-05, 4.255599999999915e-05, 4.2596999999998386e-05, 4.255599999999915e-05, 4.2569000000002716e-05, 4.2568999999999246e-05, 4.2554999999999676e-05, 4.255599999999915e-05, 4.255599999999915e-05, 4.2554999999999676e-05, 4.254199999999958e-05, 4.2554999999999676e-05, 4.2582999999998816e-05, 4.2554999999999676e-05, 4.2541000000000107e-05, 4.256999999999872e-05, 4.248599999999783e-05, 4.2583000000002286e-05, 4.2541000000000107e-05, 4.2554999999999676e-05, 4.2583000000002286e-05, 4.250000000000087e-05, 4.2527000000000537e-05, 4.2554999999999676e-05, 4.2541000000000107e-05, 4.2568999999999246e-05, 4.255600000000262e-05, 4.252800000000001e-05, 4.2597000000001856e-05, 4.2568999999999246e-05, 4.255599999999915e-05, 4.254199999999958e-05, 4.254199999999958e-05, 4.258400000000176e-05, 4.24999999999974e-05, 4.257000000000219e-05, 4.254199999999958e-05, 4.252699999999707e-05, 4.258399999999829e-05, 4.255599999999915e-05, 4.2555000000003146e-05]</msg>
<status status="PASS" starttime="20201030 15:52:07.239" endtime="20201030 15:52:07.241"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.234" endtime="20201030 15:52:07.242"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:07.245" endtime="20201030 15:52:07.265"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.244" endtime="20201030 15:52:07.265"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.243" endtime="20201030 15:52:07.266"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.888" endtime="20201030 15:52:07.266"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.888" endtime="20201030 15:52:07.266"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:07.275" endtime="20201030 15:52:07.290"></status>
</kw>
<msg timestamp="20201030 15:52:07.290" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:07.273" endtime="20201030 15:52:07.290"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:07.293" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:07.291" endtime="20201030 15:52:07.293"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:07.294" endtime="20201030 15:52:07.295"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.271" endtime="20201030 15:52:07.296"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.268" endtime="20201030 15:52:07.296"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:07.303" endtime="20201030 15:52:07.588"></status>
</kw>
<msg timestamp="20201030 15:52:07.591" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021504625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021548306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:07.301" endtime="20201030 15:52:07.592"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:07.600" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021504625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021548306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:07.593" endtime="20201030 15:52:07.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:07.601" endtime="20201030 15:52:07.602"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.299" endtime="20201030 15:52:07.603"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.297" endtime="20201030 15:52:07.603"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:07.607" level="INFO">${RESULT} = [{'diff': 4.3681000000000275e-05}, {'diff': 4.254199999999958e-05}, {'diff': 4.2596999999998386e-05}, {'diff': 4.2568999999999246e-05}, {'diff': 4.2624999999997526e-05}, {'diff': 4.255599999999915e-05...</msg>
<status status="PASS" starttime="20201030 15:52:07.604" endtime="20201030 15:52:07.607"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:07.611" level="INFO">${ACCURACY} = {'diff': [4.3681000000000275e-05, 4.254199999999958e-05, 4.2596999999998386e-05, 4.2568999999999246e-05, 4.2624999999997526e-05, 4.255599999999915e-05, 4.255599999999915e-05, 4.251399999999697e-05, 4....</msg>
<status status="PASS" starttime="20201030 15:52:07.608" endtime="20201030 15:52:07.612"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:07.616" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201030 15:52:07.615" endtime="20201030 15:52:07.616"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:07.618" level="INFO">VALUE: [4.3681000000000275e-05, 4.254199999999958e-05, 4.2596999999998386e-05, 4.2568999999999246e-05, 4.2624999999997526e-05, 4.255599999999915e-05, 4.255599999999915e-05, 4.251399999999697e-05, 4.252800000000001e-05, 4.255599999999915e-05, 4.255599999999915e-05, 4.2568999999999246e-05, 4.2527000000000537e-05, 4.258399999999829e-05, 4.251400000000044e-05, 4.250000000000087e-05, 4.2582999999998816e-05, 4.255599999999915e-05, 4.252800000000001e-05, 4.252800000000001e-05, 4.251400000000044e-05, 4.256999999999872e-05, 4.255599999999915e-05, 4.254199999999958e-05, 4.247199999999826e-05, 4.254200000000305e-05, 4.251400000000044e-05, 4.2568999999999246e-05, 4.2568999999999246e-05, 4.2568999999999246e-05, 4.2569000000002716e-05, 4.2541000000000107e-05, 4.256999999999872e-05, 4.2569000000002716e-05, 4.254199999999958e-05, 4.255599999999915e-05, 4.2541000000000107e-05, 4.258400000000176e-05, 4.255599999999915e-05, 4.2554999999999676e-05, 4.248599999999783e-05, 4.255599999999915e-05, 4.2554999999999676e-05, 4.2569000000002716e-05, 4.254200000000305e-05, 4.254199999999958e-05, 4.254199999999958e-05, 4.254199999999958e-05, 4.251400000000044e-05, 4.255599999999915e-05]</msg>
<status status="PASS" starttime="20201030 15:52:07.617" endtime="20201030 15:52:07.619"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.612" endtime="20201030 15:52:07.620"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:07.623" endtime="20201030 15:52:07.643"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.622" endtime="20201030 15:52:07.643"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.621" endtime="20201030 15:52:07.644"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.267" endtime="20201030 15:52:07.644"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.266" endtime="20201030 15:52:07.644"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:07.653" endtime="20201030 15:52:07.671"></status>
</kw>
<msg timestamp="20201030 15:52:07.671" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:07.651" endtime="20201030 15:52:07.672"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:07.674" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:07.672" endtime="20201030 15:52:07.674"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:07.675" endtime="20201030 15:52:07.677"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.648" endtime="20201030 15:52:07.677"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.646" endtime="20201030 15:52:07.677"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:07.684" endtime="20201030 15:52:07.969"></status>
</kw>
<msg timestamp="20201030 15:52:07.973" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024647208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024690903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:07.682" endtime="20201030 15:52:07.973"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:07.981" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024647208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024690903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:07.974" endtime="20201030 15:52:07.981"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:07.982" endtime="20201030 15:52:07.983"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.680" endtime="20201030 15:52:07.984"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.678" endtime="20201030 15:52:07.984"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:07.988" level="INFO">${RESULT} = [{'diff': 4.3694999999999845e-05}, {'diff': 4.2597000000001856e-05}, {'diff': 4.25129999999975e-05}, {'diff': 4.2554999999999676e-05}, {'diff': 4.254200000000305e-05}, {'diff': 4.2569000000002716e-05}...</msg>
<status status="PASS" starttime="20201030 15:52:07.985" endtime="20201030 15:52:07.988"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:07.992" level="INFO">${ACCURACY} = {'diff': [4.3694999999999845e-05, 4.2597000000001856e-05, 4.25129999999975e-05, 4.2554999999999676e-05, 4.254200000000305e-05, 4.2569000000002716e-05, 4.252800000000001e-05, 4.2597000000001856e-05, 4....</msg>
<status status="PASS" starttime="20201030 15:52:07.989" endtime="20201030 15:52:07.993"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:07.997" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201030 15:52:07.996" endtime="20201030 15:52:07.997"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:07.999" level="INFO">VALUE: [4.3694999999999845e-05, 4.2597000000001856e-05, 4.25129999999975e-05, 4.2554999999999676e-05, 4.254200000000305e-05, 4.2569000000002716e-05, 4.252800000000001e-05, 4.2597000000001856e-05, 4.2610999999997956e-05, 4.2541000000000107e-05, 4.2639000000000565e-05, 4.2638999999997096e-05, 4.2568999999999246e-05, 4.255599999999915e-05, 4.255599999999915e-05, 4.255599999999915e-05, 4.2554999999999676e-05, 4.2554999999999676e-05, 4.2541000000000107e-05, 4.247200000000173e-05, 4.255599999999915e-05, 4.254199999999958e-05, 4.2568999999999246e-05, 4.251400000000044e-05, 4.2554999999999676e-05, 4.2554999999999676e-05, 4.2610999999997956e-05, 4.2554999999999676e-05, 4.254199999999958e-05, 4.254199999999958e-05, 4.2596999999998386e-05, 4.2568999999999246e-05, 4.255599999999915e-05, 4.254199999999958e-05, 4.254200000000305e-05, 4.2554999999999676e-05, 4.247199999999826e-05, 4.2582999999998816e-05, 4.251400000000044e-05, 4.252800000000001e-05, 4.250000000000087e-05, 4.2554999999999676e-05, 4.251400000000044e-05, 4.257000000000219e-05, 4.2582999999998816e-05, 4.255600000000262e-05, 4.257000000000219e-05, 4.255600000000262e-05, 4.258399999999829e-05, 4.2554999999999676e-05]</msg>
<status status="PASS" starttime="20201030 15:52:07.998" endtime="20201030 15:52:08.001"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.993" endtime="20201030 15:52:08.002"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:08.005" endtime="20201030 15:52:08.025"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.004" endtime="20201030 15:52:08.025"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.003" endtime="20201030 15:52:08.025"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.645" endtime="20201030 15:52:08.026"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.644" endtime="20201030 15:52:08.026"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:08.034" endtime="20201030 15:52:08.049"></status>
</kw>
<msg timestamp="20201030 15:52:08.050" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:08.033" endtime="20201030 15:52:08.050"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:08.052" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:08.051" endtime="20201030 15:52:08.053"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:08.053" endtime="20201030 15:52:08.055"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.030" endtime="20201030 15:52:08.055"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.028" endtime="20201030 15:52:08.056"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:08.062" endtime="20201030 15:52:08.347"></status>
</kw>
<msg timestamp="20201030 15:52:08.350" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021400514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021444236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:08.061" endtime="20201030 15:52:08.351"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:08.358" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021400514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021444236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:08.351" endtime="20201030 15:52:08.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:08.360" endtime="20201030 15:52:08.361"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.058" endtime="20201030 15:52:08.362"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.056" endtime="20201030 15:52:08.362"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:08.366" level="INFO">${RESULT} = [{'diff': 4.372199999999951e-05}, {'diff': 4.254199999999958e-05}, {'diff': 4.2541000000000107e-05}, {'diff': 4.254199999999958e-05}, {'diff': 4.2554999999999676e-05}, {'diff': 4.255599999999915e-05},...</msg>
<status status="PASS" starttime="20201030 15:52:08.363" endtime="20201030 15:52:08.366"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:08.371" level="INFO">${ACCURACY} = {'diff': [4.372199999999951e-05, 4.254199999999958e-05, 4.2541000000000107e-05, 4.254199999999958e-05, 4.2554999999999676e-05, 4.255599999999915e-05, 4.256999999999872e-05, 4.254199999999958e-05, 4.25...</msg>
<status status="PASS" starttime="20201030 15:52:08.367" endtime="20201030 15:52:08.371"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:08.376" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201030 15:52:08.375" endtime="20201030 15:52:08.376"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:08.378" level="INFO">VALUE: [4.372199999999951e-05, 4.254199999999958e-05, 4.2541000000000107e-05, 4.254199999999958e-05, 4.2554999999999676e-05, 4.255599999999915e-05, 4.256999999999872e-05, 4.254199999999958e-05, 4.2527000000000537e-05, 4.257000000000219e-05, 4.2541000000000107e-05, 4.255599999999915e-05, 4.254199999999958e-05, 4.2541000000000107e-05, 4.256999999999872e-05, 4.2583000000002286e-05, 4.257000000000219e-05, 4.252800000000001e-05, 4.255600000000262e-05, 4.2527000000000537e-05, 4.2554999999999676e-05, 4.255600000000262e-05, 4.255599999999915e-05, 4.255599999999915e-05, 4.2554999999999676e-05, 4.254199999999958e-05, 4.254199999999958e-05, 4.2624999999997526e-05, 4.254199999999958e-05, 4.254200000000305e-05, 4.252800000000001e-05, 4.2554999999999676e-05, 4.2554999999999676e-05, 4.254199999999958e-05, 4.255599999999915e-05, 4.2554999999999676e-05, 4.2568999999999246e-05, 4.2554999999999676e-05, 4.2541000000000107e-05, 4.255599999999915e-05, 4.255599999999915e-05, 4.24860000000013e-05, 4.248599999999783e-05, 4.2554999999999676e-05, 4.255600000000262e-05, 4.254199999999958e-05, 4.259799999999786e-05, 4.256999999999872e-05, 4.2625000000000995e-05, 4.2541000000000107e-05]</msg>
<status status="PASS" starttime="20201030 15:52:08.377" endtime="20201030 15:52:08.379"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.372" endtime="20201030 15:52:08.379"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:08.383" endtime="20201030 15:52:08.402"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.382" endtime="20201030 15:52:08.403"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.380" endtime="20201030 15:52:08.403"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.027" endtime="20201030 15:52:08.404"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.026" endtime="20201030 15:52:08.404"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:08.412" endtime="20201030 15:52:08.428"></status>
</kw>
<msg timestamp="20201030 15:52:08.428" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:08.411" endtime="20201030 15:52:08.428"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:08.431" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:08.429" endtime="20201030 15:52:08.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:08.432" endtime="20201030 15:52:08.433"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.408" endtime="20201030 15:52:08.434"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.406" endtime="20201030 15:52:08.434"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:08.440" endtime="20201030 15:52:08.727"></status>
</kw>
<msg timestamp="20201030 15:52:08.730" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021612333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021655986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:08.439" endtime="20201030 15:52:08.730"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:08.738" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021612333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021655986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:08.731" endtime="20201030 15:52:08.739"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:08.739" endtime="20201030 15:52:08.741"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.436" endtime="20201030 15:52:08.742"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.435" endtime="20201030 15:52:08.742"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:08.746" level="INFO">${RESULT} = [{'diff': 4.3652999999997666e-05}, {'diff': 4.747199999999979e-05}, {'diff': 4.257000000000219e-05}, {'diff': 4.256999999999872e-05}, {'diff': 4.7458999999999696e-05}, {'diff': 4.24999999999974e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:52:08.743" endtime="20201030 15:52:08.746"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:08.750" level="INFO">${ACCURACY} = {'diff': [4.3652999999997666e-05, 4.747199999999979e-05, 4.257000000000219e-05, 4.256999999999872e-05, 4.7458999999999696e-05, 4.24999999999974e-05, 4.747199999999979e-05, 4.257000000000219e-05, 4.749...</msg>
<status status="PASS" starttime="20201030 15:52:08.747" endtime="20201030 15:52:08.750"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:08.754" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201030 15:52:08.753" endtime="20201030 15:52:08.755"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:08.757" level="INFO">VALUE: [4.3652999999997666e-05, 4.747199999999979e-05, 4.257000000000219e-05, 4.256999999999872e-05, 4.7458999999999696e-05, 4.24999999999974e-05, 4.747199999999979e-05, 4.257000000000219e-05, 4.749999999999893e-05, 4.745800000000022e-05, 4.254199999999958e-05, 4.2625000000000995e-05, 4.254199999999958e-05, 4.255599999999915e-05, 4.252800000000001e-05, 4.2583000000002286e-05, 4.255599999999915e-05, 4.255599999999915e-05, 4.747200000000326e-05, 4.2541000000000107e-05, 4.7417000000000986e-05, 4.2541000000000107e-05, 4.255599999999915e-05, 4.748599999999936e-05, 4.254199999999958e-05, 4.254199999999958e-05, 4.2554999999999676e-05, 4.2554999999999676e-05, 4.2541000000000107e-05, 4.256999999999872e-05, 4.255599999999915e-05, 4.748599999999936e-05, 4.747200000000326e-05, 4.2569000000002716e-05, 4.254199999999958e-05, 4.745800000000022e-05, 4.254199999999958e-05, 4.255599999999915e-05, 4.2554999999999676e-05, 4.2610999999997956e-05, 4.2541000000000107e-05, 4.747200000000326e-05, 4.747199999999979e-05, 4.745800000000022e-05, 4.256999999999872e-05, 4.2611000000001426e-05, 4.255599999999915e-05, 4.2554999999999676e-05, 4.254199999999958e-05, 4.255600000000262e-05]</msg>
<status status="PASS" starttime="20201030 15:52:08.755" endtime="20201030 15:52:08.758"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.751" endtime="20201030 15:52:08.758"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:08.762" endtime="20201030 15:52:08.781"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.760" endtime="20201030 15:52:08.782"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.759" endtime="20201030 15:52:08.782"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.405" endtime="20201030 15:52:08.782"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.404" endtime="20201030 15:52:08.783"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:08.791" endtime="20201030 15:52:08.807"></status>
</kw>
<msg timestamp="20201030 15:52:08.808" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:08.790" endtime="20201030 15:52:08.808"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:08.810" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:08.809" endtime="20201030 15:52:08.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:08.812" endtime="20201030 15:52:08.813"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.787" endtime="20201030 15:52:08.814"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.785" endtime="20201030 15:52:08.814"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:08.820" endtime="20201030 15:52:09.105"></status>
</kw>
<msg timestamp="20201030 15:52:09.108" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022360903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022409542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:08.819" endtime="20201030 15:52:09.108"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:09.116" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022360903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022409542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:09.109" endtime="20201030 15:52:09.117"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:09.118" endtime="20201030 15:52:09.119"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.816" endtime="20201030 15:52:09.120"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.815" endtime="20201030 15:52:09.120"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:09.124" level="INFO">${RESULT} = [{'diff': 4.863899999999963e-05}, {'diff': 4.7445000000000126e-05}, {'diff': 4.748599999999936e-05}, {'diff': 4.745800000000022e-05}, {'diff': 4.747199999999979e-05}, {'diff': 4.7472999999999266e-05},...</msg>
<status status="PASS" starttime="20201030 15:52:09.121" endtime="20201030 15:52:09.124"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:09.128" level="INFO">${ACCURACY} = {'diff': [4.863899999999963e-05, 4.7445000000000126e-05, 4.748599999999936e-05, 4.745800000000022e-05, 4.747199999999979e-05, 4.7472999999999266e-05, 4.747199999999979e-05, 4.748599999999936e-05, 4.74...</msg>
<status status="PASS" starttime="20201030 15:52:09.125" endtime="20201030 15:52:09.128"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:09.133" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201030 15:52:09.132" endtime="20201030 15:52:09.133"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:09.135" level="INFO">VALUE: [4.863899999999963e-05, 4.7445000000000126e-05, 4.748599999999936e-05, 4.745800000000022e-05, 4.747199999999979e-05, 4.7472999999999266e-05, 4.747199999999979e-05, 4.748599999999936e-05, 4.747199999999979e-05, 4.7472999999999266e-05, 4.744400000000065e-05, 4.745800000000022e-05, 4.7486999999998836e-05, 4.747199999999979e-05, 4.747199999999979e-05, 4.749999999999893e-05, 4.75000000000024e-05, 4.747199999999979e-05, 4.749999999999893e-05, 4.747199999999979e-05, 4.747199999999979e-05, 4.747199999999979e-05, 4.752799999999807e-05, 4.7458999999999696e-05, 4.749999999999893e-05, 4.748599999999936e-05, 4.748599999999936e-05, 4.748600000000283e-05, 4.748599999999936e-05, 4.747199999999979e-05, 4.748600000000283e-05, 4.75000000000024e-05, 4.745800000000022e-05, 4.745800000000022e-05, 4.741599999999804e-05, 4.749999999999893e-05, 4.748599999999936e-05, 4.7445000000000126e-05, 4.748599999999936e-05, 4.7459000000003165e-05, 4.751400000000197e-05, 4.7472999999999266e-05, 4.7417000000000986e-05, 4.745800000000022e-05, 4.748599999999936e-05, 4.745800000000022e-05, 4.7473000000002735e-05, 4.748599999999936e-05, 4.748599999999936e-05, 4.749999999999893e-05]</msg>
<status status="PASS" starttime="20201030 15:52:09.134" endtime="20201030 15:52:09.137"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.129" endtime="20201030 15:52:09.137"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:09.141" endtime="20201030 15:52:09.160"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.139" endtime="20201030 15:52:09.161"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.138" endtime="20201030 15:52:09.161"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.784" endtime="20201030 15:52:09.162"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.783" endtime="20201030 15:52:09.162"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:09.170" endtime="20201030 15:52:09.186"></status>
</kw>
<msg timestamp="20201030 15:52:09.186" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:09.169" endtime="20201030 15:52:09.186"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:09.189" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:09.187" endtime="20201030 15:52:09.189"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:09.190" endtime="20201030 15:52:09.191"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.166" endtime="20201030 15:52:09.192"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.164" endtime="20201030 15:52:09.192"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:09.199" endtime="20201030 15:52:09.484"></status>
</kw>
<msg timestamp="20201030 15:52:09.487" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021613694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021662278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:09.197" endtime="20201030 15:52:09.487"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:09.495" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021613694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021662278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:09.488" endtime="20201030 15:52:09.496"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:09.496" endtime="20201030 15:52:09.498"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.195" endtime="20201030 15:52:09.499"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.193" endtime="20201030 15:52:09.499"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:09.503" level="INFO">${RESULT} = [{'diff': 4.858400000000082e-05}, {'diff': 4.7431000000000556e-05}, {'diff': 4.745800000000022e-05}, {'diff': 4.748599999999936e-05}, {'diff': 4.7458999999999696e-05}, {'diff': 4.745800000000022e-05},...</msg>
<status status="PASS" starttime="20201030 15:52:09.500" endtime="20201030 15:52:09.503"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:09.508" level="INFO">${ACCURACY} = {'diff': [4.858400000000082e-05, 4.7431000000000556e-05, 4.745800000000022e-05, 4.748599999999936e-05, 4.7458999999999696e-05, 4.745800000000022e-05, 4.747199999999979e-05, 4.752700000000207e-05, 4.75...</msg>
<status status="PASS" starttime="20201030 15:52:09.504" endtime="20201030 15:52:09.508"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:09.513" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201030 15:52:09.511" endtime="20201030 15:52:09.513"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:09.515" level="INFO">VALUE: [4.858400000000082e-05, 4.7431000000000556e-05, 4.745800000000022e-05, 4.748599999999936e-05, 4.7458999999999696e-05, 4.745800000000022e-05, 4.747199999999979e-05, 4.752700000000207e-05, 4.751400000000197e-05, 4.749999999999893e-05, 4.748599999999936e-05, 4.75000000000024e-05, 4.75000000000024e-05, 4.747199999999979e-05, 4.748600000000283e-05, 4.7445000000000126e-05, 4.745800000000022e-05, 4.7473000000002735e-05, 4.748599999999936e-05, 4.747199999999979e-05, 4.747199999999979e-05, 4.7472999999999266e-05, 4.748599999999936e-05, 4.745800000000022e-05, 4.73879999999989e-05, 4.743000000000108e-05, 4.7431000000000556e-05, 4.748599999999936e-05, 4.743000000000108e-05, 4.748600000000283e-05, 4.749999999999893e-05, 4.748599999999936e-05, 4.7445000000000126e-05, 4.747199999999979e-05, 4.744400000000065e-05, 4.7472999999999266e-05, 4.744400000000065e-05, 4.7486999999998836e-05, 4.747199999999979e-05, 4.7417000000000986e-05, 4.7458999999999696e-05, 4.745800000000022e-05, 4.745800000000022e-05, 4.747199999999979e-05, 4.747199999999979e-05, 4.747199999999979e-05, 4.748599999999936e-05, 4.747199999999979e-05, 4.747199999999979e-05, 4.748599999999936e-05]</msg>
<status status="PASS" starttime="20201030 15:52:09.514" endtime="20201030 15:52:09.516"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.509" endtime="20201030 15:52:09.516"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:09.520" endtime="20201030 15:52:09.539"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.518" endtime="20201030 15:52:09.540"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.517" endtime="20201030 15:52:09.540"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.163" endtime="20201030 15:52:09.541"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.162" endtime="20201030 15:52:09.541"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:09.549" endtime="20201030 15:52:09.565"></status>
</kw>
<msg timestamp="20201030 15:52:09.565" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:09.548" endtime="20201030 15:52:09.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:09.567" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:09.566" endtime="20201030 15:52:09.568"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:09.569" endtime="20201030 15:52:09.570"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.545" endtime="20201030 15:52:09.571"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.543" endtime="20201030 15:52:09.571"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:09.577" endtime="20201030 15:52:09.864"></status>
</kw>
<msg timestamp="20201030 15:52:09.867" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021461764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021510375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:09.576" endtime="20201030 15:52:09.867"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:09.875" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021461764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021510375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:09.868" endtime="20201030 15:52:09.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:09.876" endtime="20201030 15:52:09.878"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.573" endtime="20201030 15:52:09.879"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.572" endtime="20201030 15:52:09.879"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:09.883" level="INFO">${RESULT} = [{'diff': 4.861100000000049e-05}, {'diff': 4.7486999999998836e-05}, {'diff': 4.748599999999936e-05}, {'diff': 4.748599999999936e-05}, {'diff': 4.754199999999764e-05}, {'diff': 4.749999999999893e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:52:09.880" endtime="20201030 15:52:09.884"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:09.888" level="INFO">${ACCURACY} = {'diff': [4.861100000000049e-05, 4.7486999999998836e-05, 4.748599999999936e-05, 4.748599999999936e-05, 4.754199999999764e-05, 4.749999999999893e-05, 4.743000000000108e-05, 4.748599999999936e-05, 4.748...</msg>
<status status="PASS" starttime="20201030 15:52:09.885" endtime="20201030 15:52:09.888"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:09.893" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201030 15:52:09.891" endtime="20201030 15:52:09.893"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:09.895" level="INFO">VALUE: [4.861100000000049e-05, 4.7486999999998836e-05, 4.748599999999936e-05, 4.748599999999936e-05, 4.754199999999764e-05, 4.749999999999893e-05, 4.743000000000108e-05, 4.748599999999936e-05, 4.748599999999936e-05, 4.75000000000024e-05, 4.748600000000283e-05, 4.748599999999936e-05, 4.7458999999999696e-05, 4.749999999999893e-05, 4.748599999999936e-05, 4.747199999999979e-05, 4.7472999999999266e-05, 4.7486999999998836e-05, 4.748599999999936e-05, 4.743000000000108e-05, 4.748599999999936e-05, 4.748599999999936e-05, 4.749999999999893e-05, 4.748599999999936e-05, 4.748600000000283e-05, 4.747200000000326e-05, 4.748599999999936e-05, 4.751400000000197e-05, 4.748600000000283e-05, 4.754200000000111e-05, 4.75139999999985e-05, 4.748599999999936e-05, 4.740299999999795e-05, 4.7486999999998836e-05, 4.743000000000108e-05, 4.749999999999893e-05, 4.748599999999936e-05, 4.748599999999936e-05, 4.747199999999979e-05, 4.745799999999675e-05, 4.748599999999936e-05, 4.748599999999936e-05, 4.748599999999936e-05, 4.7472999999999266e-05, 4.745800000000022e-05, 4.747199999999979e-05, 4.745800000000022e-05, 4.744400000000065e-05, 4.747199999999979e-05, 4.749999999999893e-05]</msg>
<status status="PASS" starttime="20201030 15:52:09.894" endtime="20201030 15:52:09.896"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.889" endtime="20201030 15:52:09.896"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:09.900" endtime="20201030 15:52:09.919"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.898" endtime="20201030 15:52:09.920"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.897" endtime="20201030 15:52:09.920"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.542" endtime="20201030 15:52:09.921"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.541" endtime="20201030 15:52:09.921"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:09.929" endtime="20201030 15:52:09.946"></status>
</kw>
<msg timestamp="20201030 15:52:09.946" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:09.928" endtime="20201030 15:52:09.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:09.948" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:09.947" endtime="20201030 15:52:09.949"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:09.950" endtime="20201030 15:52:09.951"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.925" endtime="20201030 15:52:09.952"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.923" endtime="20201030 15:52:09.952"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:09.959" endtime="20201030 15:52:10.246"></status>
</kw>
<msg timestamp="20201030 15:52:10.249" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02253025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022578875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:52:09.958" endtime="20201030 15:52:10.249"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:10.257" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02253025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022578875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:52:10.250" endtime="20201030 15:52:10.257"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:10.258" endtime="20201030 15:52:10.260"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.955" endtime="20201030 15:52:10.260"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.953" endtime="20201030 15:52:10.261"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:10.265" level="INFO">${RESULT} = [{'diff': 4.862500000000006e-05}, {'diff': 4.748599999999936e-05}, {'diff': 4.749999999999893e-05}, {'diff': 4.748599999999936e-05}, {'diff': 4.748599999999936e-05}, {'diff': 4.748599999999936e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:10.262" endtime="20201030 15:52:10.265"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:10.269" level="INFO">${ACCURACY} = {'diff': [4.862500000000006e-05, 4.748599999999936e-05, 4.749999999999893e-05, 4.748599999999936e-05, 4.748599999999936e-05, 4.748599999999936e-05, 4.748599999999936e-05, 4.754200000000111e-05, 4.7471...</msg>
<status status="PASS" starttime="20201030 15:52:10.266" endtime="20201030 15:52:10.269"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:10.273" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201030 15:52:10.272" endtime="20201030 15:52:10.274"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:10.276" level="INFO">VALUE: [4.862500000000006e-05, 4.748599999999936e-05, 4.749999999999893e-05, 4.748599999999936e-05, 4.748599999999936e-05, 4.748599999999936e-05, 4.748599999999936e-05, 4.754200000000111e-05, 4.747199999999979e-05, 4.745800000000022e-05, 4.747199999999979e-05, 4.745800000000022e-05, 4.748599999999936e-05, 4.747199999999979e-05, 4.747199999999979e-05, 4.748599999999936e-05, 4.7445000000000126e-05, 4.747199999999979e-05, 4.75000000000024e-05, 4.7472999999999266e-05, 4.745800000000022e-05, 4.747200000000326e-05, 4.749999999999893e-05, 4.749999999999893e-05, 4.749999999999893e-05, 4.748599999999936e-05, 4.749999999999893e-05, 4.748599999999936e-05, 4.748599999999936e-05, 4.748600000000283e-05, 4.747199999999979e-05, 4.745800000000022e-05, 4.749999999999893e-05, 4.748600000000283e-05, 4.747199999999979e-05, 4.7459000000003165e-05, 4.748599999999936e-05, 4.7458999999999696e-05, 4.747200000000326e-05, 4.748599999999936e-05, 4.747199999999979e-05, 4.748599999999936e-05, 4.7458999999999696e-05, 4.747199999999979e-05, 4.7487000000002305e-05, 4.745800000000022e-05, 4.747199999999979e-05, 4.747199999999979e-05, 4.7473000000002735e-05, 4.747199999999979e-05]</msg>
<status status="PASS" starttime="20201030 15:52:10.274" endtime="20201030 15:52:10.277"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.270" endtime="20201030 15:52:10.278"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:10.282" endtime="20201030 15:52:10.301"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.280" endtime="20201030 15:52:10.302"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.279" endtime="20201030 15:52:10.302"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.922" endtime="20201030 15:52:10.302"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.921" endtime="20201030 15:52:10.302"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:10.311" endtime="20201030 15:52:10.326"></status>
</kw>
<msg timestamp="20201030 15:52:10.327" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:10.309" endtime="20201030 15:52:10.327"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:10.329" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:10.328" endtime="20201030 15:52:10.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:10.330" endtime="20201030 15:52:10.332"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.307" endtime="20201030 15:52:10.333"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.305" endtime="20201030 15:52:10.333"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:10.339" endtime="20201030 15:52:10.625"></status>
</kw>
<msg timestamp="20201030 15:52:10.628" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021505389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021554028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:10.338" endtime="20201030 15:52:10.628"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:10.636" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021505389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021554028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:10.629" endtime="20201030 15:52:10.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:10.637" endtime="20201030 15:52:10.639"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.335" endtime="20201030 15:52:10.639"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.334" endtime="20201030 15:52:10.639"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:10.643" level="INFO">${RESULT} = [{'diff': 4.863899999999963e-05}, {'diff': 5.237500000000034e-05}, {'diff': 5.240299999999948e-05}, {'diff': 4.748599999999936e-05}, {'diff': 4.741600000000151e-05}, {'diff': 5.237500000000034e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:10.640" endtime="20201030 15:52:10.644"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:10.648" level="INFO">${ACCURACY} = {'diff': [4.863899999999963e-05, 5.237500000000034e-05, 5.240299999999948e-05, 4.748599999999936e-05, 4.741600000000151e-05, 5.237500000000034e-05, 4.7458999999999696e-05, 4.747199999999979e-05, 5.237...</msg>
<status status="PASS" starttime="20201030 15:52:10.644" endtime="20201030 15:52:10.649"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:10.653" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201030 15:52:10.652" endtime="20201030 15:52:10.653"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:10.655" level="INFO">VALUE: [4.863899999999963e-05, 5.237500000000034e-05, 5.240299999999948e-05, 4.748599999999936e-05, 4.741600000000151e-05, 5.237500000000034e-05, 4.7458999999999696e-05, 4.747199999999979e-05, 5.237500000000034e-05, 5.240300000000295e-05, 4.751400000000197e-05, 4.740199999999847e-05, 5.2402000000000004e-05, 4.749999999999893e-05, 4.749999999999893e-05, 4.749999999999893e-05, 5.237500000000034e-05, 4.747199999999979e-05, 4.745800000000022e-05, 4.751400000000197e-05, 4.748599999999936e-05, 4.745800000000022e-05, 5.241700000000252e-05, 4.748599999999936e-05, 4.7403000000001416e-05, 4.7487000000002305e-05, 5.238899999999991e-05, 4.747199999999979e-05, 4.747199999999979e-05, 4.749999999999893e-05, 4.747199999999979e-05, 4.7458999999999696e-05, 4.748599999999936e-05, 5.240299999999948e-05, 4.7431000000000556e-05, 4.75000000000024e-05, 5.240299999999948e-05, 5.240299999999948e-05, 4.747199999999979e-05, 5.244499999999819e-05, 5.237500000000034e-05, 4.7458999999999696e-05, 4.747199999999979e-05, 5.238899999999991e-05, 5.231900000000206e-05, 4.7473000000002735e-05, 5.240299999999948e-05, 4.747199999999979e-05, 4.745800000000022e-05, 4.747199999999979e-05]</msg>
<status status="PASS" starttime="20201030 15:52:10.654" endtime="20201030 15:52:10.656"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.649" endtime="20201030 15:52:10.657"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:10.660" endtime="20201030 15:52:10.680"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.659" endtime="20201030 15:52:10.680"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.658" endtime="20201030 15:52:10.681"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.303" endtime="20201030 15:52:10.681"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.303" endtime="20201030 15:52:10.681"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:10.690" endtime="20201030 15:52:10.705"></status>
</kw>
<msg timestamp="20201030 15:52:10.706" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:10.688" endtime="20201030 15:52:10.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:10.708" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:10.707" endtime="20201030 15:52:10.708"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:10.709" endtime="20201030 15:52:10.711"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.686" endtime="20201030 15:52:10.711"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.684" endtime="20201030 15:52:10.712"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:10.718" endtime="20201030 15:52:11.006"></status>
</kw>
<msg timestamp="20201030 15:52:11.009" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021597986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0216515, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:52:10.717" endtime="20201030 15:52:11.009"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:11.017" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021597986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0216515, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:52:11.010" endtime="20201030 15:52:11.017"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:11.018" endtime="20201030 15:52:11.020"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.714" endtime="20201030 15:52:11.020"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.712" endtime="20201030 15:52:11.021"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:11.025" level="INFO">${RESULT} = [{'diff': 5.351400000000103e-05}, {'diff': 5.2429999999999144e-05}, {'diff': 5.238899999999991e-05}, {'diff': 5.238899999999991e-05}, {'diff': 5.240299999999948e-05}, {'diff': 5.240299999999948e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:52:11.021" endtime="20201030 15:52:11.025"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:11.029" level="INFO">${ACCURACY} = {'diff': [5.351400000000103e-05, 5.2429999999999144e-05, 5.238899999999991e-05, 5.238899999999991e-05, 5.240299999999948e-05, 5.240299999999948e-05, 5.240299999999948e-05, 5.2388000000000434e-05, 5.23...</msg>
<status status="PASS" starttime="20201030 15:52:11.026" endtime="20201030 15:52:11.029"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:11.033" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201030 15:52:11.032" endtime="20201030 15:52:11.033"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:11.036" level="INFO">VALUE: [5.351400000000103e-05, 5.2429999999999144e-05, 5.238899999999991e-05, 5.238899999999991e-05, 5.240299999999948e-05, 5.240299999999948e-05, 5.240299999999948e-05, 5.2388000000000434e-05, 5.238899999999991e-05, 5.241700000000252e-05, 5.240300000000295e-05, 5.238899999999991e-05, 5.240299999999948e-05, 5.240299999999948e-05, 5.238899999999991e-05, 5.238899999999991e-05, 5.2429999999999144e-05, 5.238899999999991e-05, 5.238899999999991e-05, 5.244500000000166e-05, 5.238899999999991e-05, 5.240300000000295e-05, 5.240299999999948e-05, 5.238899999999991e-05, 5.232000000000153e-05, 5.237500000000034e-05, 5.2402000000000004e-05, 5.243099999999862e-05, 5.240300000000295e-05, 5.230500000000249e-05, 5.234699999999773e-05, 5.2388000000000434e-05, 5.237500000000034e-05, 5.2415999999999574e-05, 5.238899999999991e-05, 5.240299999999948e-05, 5.2388000000000434e-05, 5.238899999999991e-05, 5.237500000000034e-05, 5.232000000000153e-05, 5.237500000000034e-05, 5.241699999999905e-05, 5.236200000000024e-05, 5.238899999999991e-05, 5.238899999999991e-05, 5.238899999999991e-05, 5.238899999999991e-05, 5.240299999999948e-05, 5.238899999999991e-05, 5.240299999999948e-05]</msg>
<status status="PASS" starttime="20201030 15:52:11.034" endtime="20201030 15:52:11.036"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.029" endtime="20201030 15:52:11.037"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:11.040" endtime="20201030 15:52:11.060"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.039" endtime="20201030 15:52:11.061"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.038" endtime="20201030 15:52:11.061"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.682" endtime="20201030 15:52:11.061"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.681" endtime="20201030 15:52:11.061"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:11.070" endtime="20201030 15:52:11.089"></status>
</kw>
<msg timestamp="20201030 15:52:11.089" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:11.068" endtime="20201030 15:52:11.089"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:11.092" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:11.090" endtime="20201030 15:52:11.092"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:11.093" endtime="20201030 15:52:11.094"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.066" endtime="20201030 15:52:11.095"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.064" endtime="20201030 15:52:11.095"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:11.102" endtime="20201030 15:52:11.386"></status>
</kw>
<msg timestamp="20201030 15:52:11.389" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024658542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024712056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:11.100" endtime="20201030 15:52:11.390"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:11.398" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024658542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024712056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:11.391" endtime="20201030 15:52:11.398"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:11.399" endtime="20201030 15:52:11.400"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.098" endtime="20201030 15:52:11.401"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.096" endtime="20201030 15:52:11.401"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:11.405" level="INFO">${RESULT} = [{'diff': 5.351400000000103e-05}, {'diff': 5.241699999999905e-05}, {'diff': 5.240299999999948e-05}, {'diff': 5.237500000000034e-05}, {'diff': 5.2415999999999574e-05}, {'diff': 5.238899999999991e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:52:11.402" endtime="20201030 15:52:11.406"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:11.409" level="INFO">${ACCURACY} = {'diff': [5.351400000000103e-05, 5.241699999999905e-05, 5.240299999999948e-05, 5.237500000000034e-05, 5.2415999999999574e-05, 5.238899999999991e-05, 5.241700000000252e-05, 5.238899999999991e-05, 5.241...</msg>
<status status="PASS" starttime="20201030 15:52:11.406" endtime="20201030 15:52:11.410"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:11.414" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201030 15:52:11.413" endtime="20201030 15:52:11.414"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:11.416" level="INFO">VALUE: [5.351400000000103e-05, 5.241699999999905e-05, 5.240299999999948e-05, 5.237500000000034e-05, 5.2415999999999574e-05, 5.238899999999991e-05, 5.241700000000252e-05, 5.238899999999991e-05, 5.2415999999999574e-05, 5.240299999999948e-05, 5.2457999999998284e-05, 5.238899999999991e-05, 5.238899999999991e-05, 5.240299999999948e-05, 5.241700000000252e-05, 5.245899999999776e-05, 5.240299999999948e-05, 5.238899999999991e-05, 5.2388000000000434e-05, 5.238899999999991e-05, 5.240299999999948e-05, 5.236200000000024e-05, 5.238899999999991e-05, 5.2402000000000004e-05, 5.237500000000034e-05, 5.238899999999991e-05, 5.238899999999991e-05, 5.238899999999991e-05, 5.238899999999991e-05, 5.238899999999991e-05, 5.2429999999999144e-05, 5.238899999999991e-05, 5.2457999999998284e-05, 5.238899999999991e-05, 5.238899999999991e-05, 5.238899999999991e-05, 5.234800000000067e-05, 5.240300000000295e-05, 5.240299999999948e-05, 5.236200000000024e-05, 5.233300000000163e-05, 5.237500000000034e-05, 5.2402000000000004e-05, 5.240299999999948e-05, 5.241699999999905e-05, 5.240299999999948e-05, 5.2402000000000004e-05, 5.236100000000077e-05, 5.237500000000034e-05, 5.238899999999991e-05]</msg>
<status status="PASS" starttime="20201030 15:52:11.415" endtime="20201030 15:52:11.418"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.410" endtime="20201030 15:52:11.418"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:11.422" endtime="20201030 15:52:11.441"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.421" endtime="20201030 15:52:11.442"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.419" endtime="20201030 15:52:11.442"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.062" endtime="20201030 15:52:11.443"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.062" endtime="20201030 15:52:11.443"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:11.451" endtime="20201030 15:52:11.467"></status>
</kw>
<msg timestamp="20201030 15:52:11.468" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:11.450" endtime="20201030 15:52:11.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:11.470" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:11.469" endtime="20201030 15:52:11.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:11.471" endtime="20201030 15:52:11.473"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.447" endtime="20201030 15:52:11.473"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.445" endtime="20201030 15:52:11.474"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:11.480" endtime="20201030 15:52:11.765"></status>
</kw>
<msg timestamp="20201030 15:52:11.768" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021491694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021545208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:11.479" endtime="20201030 15:52:11.769"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:11.776" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021491694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021545208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:11.769" endtime="20201030 15:52:11.777"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:11.778" endtime="20201030 15:52:11.779"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.476" endtime="20201030 15:52:11.780"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.474" endtime="20201030 15:52:11.780"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:11.784" level="INFO">${RESULT} = [{'diff': 5.351400000000103e-05}, {'diff': 5.238899999999991e-05}, {'diff': 5.238899999999991e-05}, {'diff': 5.237500000000034e-05}, {'diff': 5.2415999999999574e-05}, {'diff': 5.238899999999991e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:52:11.781" endtime="20201030 15:52:11.784"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:11.789" level="INFO">${ACCURACY} = {'diff': [5.351400000000103e-05, 5.238899999999991e-05, 5.238899999999991e-05, 5.237500000000034e-05, 5.2415999999999574e-05, 5.238899999999991e-05, 5.245800000000175e-05, 5.238899999999991e-05, 5.244...</msg>
<status status="PASS" starttime="20201030 15:52:11.785" endtime="20201030 15:52:11.789"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:11.794" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201030 15:52:11.793" endtime="20201030 15:52:11.794"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:11.796" level="INFO">VALUE: [5.351400000000103e-05, 5.238899999999991e-05, 5.238899999999991e-05, 5.237500000000034e-05, 5.2415999999999574e-05, 5.238899999999991e-05, 5.245800000000175e-05, 5.238899999999991e-05, 5.244400000000218e-05, 5.237500000000034e-05, 5.241699999999905e-05, 5.237500000000034e-05, 5.2457999999998284e-05, 5.244499999999819e-05, 5.238899999999991e-05, 5.241700000000252e-05, 5.2402000000000004e-05, 5.238899999999991e-05, 5.240299999999948e-05, 5.237500000000034e-05, 5.236199999999677e-05, 5.238899999999991e-05, 5.238899999999991e-05, 5.236100000000077e-05, 5.238899999999991e-05, 5.240299999999948e-05, 5.240300000000295e-05, 5.240299999999948e-05, 5.241699999999905e-05, 5.238899999999991e-05, 5.240299999999948e-05, 5.241699999999905e-05, 5.238899999999991e-05, 5.240299999999948e-05, 5.238899999999991e-05, 5.238899999999991e-05, 5.236100000000077e-05, 5.237499999999687e-05, 5.243099999999862e-05, 5.240299999999948e-05, 5.240299999999948e-05, 5.237500000000034e-05, 5.2415999999999574e-05, 5.247200000000132e-05, 5.232000000000153e-05, 5.237500000000034e-05, 5.240299999999948e-05, 5.2430000000002613e-05, 5.238899999999991e-05, 5.238899999999991e-05]</msg>
<status status="PASS" starttime="20201030 15:52:11.795" endtime="20201030 15:52:11.797"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.790" endtime="20201030 15:52:11.797"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:11.801" endtime="20201030 15:52:11.821"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.799" endtime="20201030 15:52:11.821"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.798" endtime="20201030 15:52:11.821"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.444" endtime="20201030 15:52:11.822"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.443" endtime="20201030 15:52:11.822"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:11.830" endtime="20201030 15:52:11.846"></status>
</kw>
<msg timestamp="20201030 15:52:11.846" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:11.829" endtime="20201030 15:52:11.847"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:11.849" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:11.847" endtime="20201030 15:52:11.849"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:11.850" endtime="20201030 15:52:11.852"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.826" endtime="20201030 15:52:11.852"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.824" endtime="20201030 15:52:11.853"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:11.859" endtime="20201030 15:52:12.145"></status>
</kw>
<msg timestamp="20201030 15:52:12.148" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021482472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021536, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:52:11.857" endtime="20201030 15:52:12.148"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:12.156" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021482472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021536, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:52:12.149" endtime="20201030 15:52:12.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:12.158" endtime="20201030 15:52:12.159"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.855" endtime="20201030 15:52:12.160"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.853" endtime="20201030 15:52:12.160"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:12.164" level="INFO">${RESULT} = [{'diff': 5.35280000000006e-05}, {'diff': 5.245800000000175e-05}, {'diff': 5.238899999999991e-05}, {'diff': 5.240299999999948e-05}, {'diff': 5.238899999999991e-05}, {'diff': 5.241699999999905e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:52:12.161" endtime="20201030 15:52:12.164"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:12.168" level="INFO">${ACCURACY} = {'diff': [5.35280000000006e-05, 5.245800000000175e-05, 5.238899999999991e-05, 5.240299999999948e-05, 5.238899999999991e-05, 5.241699999999905e-05, 5.240300000000295e-05, 5.237500000000034e-05, 5.23880...</msg>
<status status="PASS" starttime="20201030 15:52:12.165" endtime="20201030 15:52:12.168"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:12.173" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201030 15:52:12.172" endtime="20201030 15:52:12.173"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:12.175" level="INFO">VALUE: [5.35280000000006e-05, 5.245800000000175e-05, 5.238899999999991e-05, 5.240299999999948e-05, 5.238899999999991e-05, 5.241699999999905e-05, 5.240300000000295e-05, 5.237500000000034e-05, 5.2388000000000434e-05, 5.238899999999991e-05, 5.2402000000000004e-05, 5.238899999999991e-05, 5.2415999999999574e-05, 5.240300000000295e-05, 5.240299999999948e-05, 5.238899999999991e-05, 5.241699999999905e-05, 5.240299999999948e-05, 5.237500000000034e-05, 5.237499999999687e-05, 5.238899999999991e-05, 5.231899999999859e-05, 5.2402000000000004e-05, 5.244400000000218e-05, 5.238899999999991e-05, 5.2402000000000004e-05, 5.240300000000295e-05, 5.240299999999948e-05, 5.2402000000000004e-05, 5.2415999999999574e-05, 5.2415999999999574e-05, 5.237500000000034e-05, 5.2415999999999574e-05, 5.244500000000166e-05, 5.240300000000295e-05, 5.240299999999948e-05, 5.237500000000034e-05, 5.240299999999948e-05, 5.2443999999998714e-05, 5.237500000000034e-05, 5.238899999999991e-05, 5.241700000000252e-05, 5.248600000000089e-05, 5.238899999999991e-05, 5.238899999999991e-05, 5.237500000000034e-05, 5.238899999999991e-05, 5.238899999999991e-05, 5.238899999999991e-05, 5.241699999999905e-05]</msg>
<status status="PASS" starttime="20201030 15:52:12.174" endtime="20201030 15:52:12.176"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.169" endtime="20201030 15:52:12.176"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:12.180" endtime="20201030 15:52:12.199"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.178" endtime="20201030 15:52:12.200"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.177" endtime="20201030 15:52:12.200"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.823" endtime="20201030 15:52:12.201"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.822" endtime="20201030 15:52:12.201"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:12.209" endtime="20201030 15:52:12.228"></status>
</kw>
<msg timestamp="20201030 15:52:12.229" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:12.208" endtime="20201030 15:52:12.229"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:12.231" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:12.230" endtime="20201030 15:52:12.232"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:12.232" endtime="20201030 15:52:12.234"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.205" endtime="20201030 15:52:12.234"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.203" endtime="20201030 15:52:12.235"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:12.241" endtime="20201030 15:52:12.526"></status>
</kw>
<msg timestamp="20201030 15:52:12.529" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022397875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022468778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:12.240" endtime="20201030 15:52:12.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:12.537" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022397875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022468778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:12.530" endtime="20201030 15:52:12.537"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:12.538" endtime="20201030 15:52:12.540"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.237" endtime="20201030 15:52:12.540"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.235" endtime="20201030 15:52:12.541"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:12.545" level="INFO">${RESULT} = [{'diff': 7.090299999999716e-05}, {'diff': 7.038900000000056e-05}, {'diff': 6.995900000000138e-05}, {'diff': 7.065300000000038e-05}, {'diff': 7.020900000000163e-05}, {'diff': 6.976399999999994e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:12.542" endtime="20201030 15:52:12.545"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:12.549" level="INFO">${ACCURACY} = {'diff': [7.090299999999716e-05, 7.038900000000056e-05, 6.995900000000138e-05, 7.065300000000038e-05, 7.020900000000163e-05, 6.976399999999994e-05, 7.062500000000124e-05, 7.033300000000228e-05, 7.0332...</msg>
<status status="PASS" starttime="20201030 15:52:12.546" endtime="20201030 15:52:12.549"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:12.553" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201030 15:52:12.552" endtime="20201030 15:52:12.554"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:12.556" level="INFO">VALUE: [7.090299999999716e-05, 7.038900000000056e-05, 6.995900000000138e-05, 7.065300000000038e-05, 7.020900000000163e-05, 6.976399999999994e-05, 7.062500000000124e-05, 7.033300000000228e-05, 7.033299999999881e-05, 7.063899999999734e-05, 7.002799999999976e-05, 7.051400000000069e-05, 6.995899999999791e-05, 7.013900000000031e-05, 6.976399999999994e-05, 7.001400000000019e-05, 7.004199999999933e-05, 7.033299999999881e-05, 7.047199999999851e-05, 7.001400000000019e-05, 7.040300000000013e-05, 6.983400000000126e-05, 7.002799999999976e-05, 7.05689999999995e-05, 7.002700000000028e-05, 7.002799999999976e-05, 7.070799999999919e-05, 6.995799999999844e-05, 7.051399999999722e-05, 6.995799999999844e-05, 7.008299999999856e-05, 7.020800000000216e-05, 7.049999999999765e-05, 7.05970000000021e-05, 7.058299999999906e-05, 7.05970000000021e-05, 7.030499999999967e-05, 6.976399999999994e-05, 6.997200000000148e-05, 7.002799999999976e-05, 7.057000000000244e-05, 6.995799999999844e-05, 6.983300000000178e-05, 7.05970000000021e-05, 7.068099999999952e-05, 6.997199999999801e-05, 6.976399999999994e-05, 7.051400000000069e-05, 6.995899999999791e-05, 7.069500000000256e-05]</msg>
<status status="PASS" starttime="20201030 15:52:12.554" endtime="20201030 15:52:12.557"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.550" endtime="20201030 15:52:12.558"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:12.562" endtime="20201030 15:52:12.581"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.560" endtime="20201030 15:52:12.582"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.559" endtime="20201030 15:52:12.582"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.202" endtime="20201030 15:52:12.582"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.201" endtime="20201030 15:52:12.582"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:12.591" endtime="20201030 15:52:12.609"></status>
</kw>
<msg timestamp="20201030 15:52:12.609" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:12.589" endtime="20201030 15:52:12.610"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:12.612" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:12.611" endtime="20201030 15:52:12.612"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:12.613" endtime="20201030 15:52:12.615"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.587" endtime="20201030 15:52:12.615"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.585" endtime="20201030 15:52:12.616"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:12.622" endtime="20201030 15:52:12.907"></status>
</kw>
<msg timestamp="20201030 15:52:12.910" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021462792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021534514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:12.620" endtime="20201030 15:52:12.910"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:12.918" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021462792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021534514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:12.911" endtime="20201030 15:52:12.919"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:12.919" endtime="20201030 15:52:12.921"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.618" endtime="20201030 15:52:12.922"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.616" endtime="20201030 15:52:12.922"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:12.927" level="INFO">${RESULT} = [{'diff': 7.172199999999976e-05}, {'diff': 7.119499999999959e-05}, {'diff': 7.095899999999891e-05}, {'diff': 7.090300000000063e-05}, {'diff': 7.169500000000009e-05}, {'diff': 7.130600000000015e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:12.923" endtime="20201030 15:52:12.927"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:12.932" level="INFO">${ACCURACY} = {'diff': [7.172199999999976e-05, 7.119499999999959e-05, 7.095899999999891e-05, 7.090300000000063e-05, 7.169500000000009e-05, 7.130600000000015e-05, 7.084800000000183e-05, 7.108399999999904e-05, 7.1694...</msg>
<status status="PASS" starttime="20201030 15:52:12.928" endtime="20201030 15:52:12.932"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:12.936" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201030 15:52:12.935" endtime="20201030 15:52:12.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:12.939" level="INFO">VALUE: [7.172199999999976e-05, 7.119499999999959e-05, 7.095899999999891e-05, 7.090300000000063e-05, 7.169500000000009e-05, 7.130600000000015e-05, 7.084800000000183e-05, 7.108399999999904e-05, 7.169400000000062e-05, 7.11109999999987e-05, 7.083299999999931e-05, 7.083299999999931e-05, 7.131900000000024e-05, 7.169400000000062e-05, 7.095799999999944e-05, 7.090300000000063e-05, 7.084800000000183e-05, 7.118000000000055e-05, 7.102800000000076e-05, 7.115300000000088e-05, 7.101400000000119e-05, 7.165299999999791e-05, 7.147199999999951e-05, 7.122199999999926e-05, 7.076300000000146e-05, 7.102700000000128e-05, 7.152700000000178e-05, 7.129099999999763e-05, 7.138900000000156e-05, 7.09170000000002e-05, 7.134699999999938e-05, 7.154200000000083e-05, 7.115299999999741e-05, 7.172299999999923e-05, 7.172199999999976e-05, 7.152799999999779e-05, 7.147199999999951e-05, 7.147199999999951e-05, 7.152800000000126e-05, 7.172199999999976e-05, 7.099999999999815e-05, 7.169399999999715e-05, 7.158300000000006e-05, 7.108399999999904e-05, 7.119400000000012e-05, 7.144400000000037e-05, 7.169400000000062e-05, 7.156999999999997e-05, 7.138899999999809e-05, 7.087500000000149e-05]</msg>
<status status="PASS" starttime="20201030 15:52:12.938" endtime="20201030 15:52:12.940"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.933" endtime="20201030 15:52:12.940"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:12.944" endtime="20201030 15:52:12.963"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.942" endtime="20201030 15:52:12.964"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.941" endtime="20201030 15:52:12.964"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.583" endtime="20201030 15:52:12.964"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.583" endtime="20201030 15:52:12.965"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:12.973" endtime="20201030 15:52:12.991"></status>
</kw>
<msg timestamp="20201030 15:52:12.992" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:12.972" endtime="20201030 15:52:12.992"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:12.994" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:12.993" endtime="20201030 15:52:12.995"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:12.995" endtime="20201030 15:52:12.997"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.969" endtime="20201030 15:52:12.998"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.967" endtime="20201030 15:52:12.998"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:13.004" endtime="20201030 15:52:13.291"></status>
</kw>
<msg timestamp="20201030 15:52:13.294" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021596889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021669319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:13.003" endtime="20201030 15:52:13.294"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:13.302" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021596889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021669319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:13.295" endtime="20201030 15:52:13.303"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:13.303" endtime="20201030 15:52:13.305"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.000" endtime="20201030 15:52:13.306"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.999" endtime="20201030 15:52:13.306"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:13.310" level="INFO">${RESULT} = [{'diff': 7.242999999999833e-05}, {'diff': 7.270800000000119e-05}, {'diff': 7.265199999999944e-05}, {'diff': 7.187499999999902e-05}, {'diff': 7.233400000000029e-05}, {'diff': 7.186099999999945e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:13.307" endtime="20201030 15:52:13.310"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:13.314" level="INFO">${ACCURACY} = {'diff': [7.242999999999833e-05, 7.270800000000119e-05, 7.265199999999944e-05, 7.187499999999902e-05, 7.233400000000029e-05, 7.186099999999945e-05, 7.265300000000238e-05, 7.186099999999945e-05, 7.1958...</msg>
<status status="PASS" starttime="20201030 15:52:13.311" endtime="20201030 15:52:13.314"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:13.318" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201030 15:52:13.317" endtime="20201030 15:52:13.319"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:13.321" level="INFO">VALUE: [7.242999999999833e-05, 7.270800000000119e-05, 7.265199999999944e-05, 7.187499999999902e-05, 7.233400000000029e-05, 7.186099999999945e-05, 7.265300000000238e-05, 7.186099999999945e-05, 7.195800000000044e-05, 7.176400000000194e-05, 7.247200000000051e-05, 7.254200000000183e-05, 7.195800000000044e-05, 7.176300000000246e-05, 7.272200000000076e-05, 7.254199999999836e-05, 7.265299999999891e-05, 7.227800000000201e-05, 7.183300000000031e-05, 7.258400000000054e-05, 7.216600000000198e-05, 7.240300000000213e-05, 7.190300000000163e-05, 7.259700000000063e-05, 7.252799999999879e-05, 7.237499999999952e-05, 7.241600000000223e-05, 7.226399999999897e-05, 7.194400000000087e-05, 7.254200000000183e-05, 7.195799999999697e-05, 7.279199999999861e-05, 7.220900000000016e-05, 7.202799999999829e-05, 7.266699999999848e-05, 7.220800000000069e-05, 7.216699999999798e-05, 7.183300000000031e-05, 7.26110000000002e-05, 7.216700000000145e-05, 7.183399999999979e-05, 7.184799999999936e-05, 7.176399999999847e-05, 7.222199999999679e-05, 7.209700000000013e-05, 7.202799999999829e-05, 7.215300000000188e-05, 7.197200000000001e-05, 7.236099999999995e-05, 7.220900000000016e-05]</msg>
<status status="PASS" starttime="20201030 15:52:13.320" endtime="20201030 15:52:13.322"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.315" endtime="20201030 15:52:13.322"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:13.326" endtime="20201030 15:52:13.345"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.324" endtime="20201030 15:52:13.346"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.323" endtime="20201030 15:52:13.346"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.966" endtime="20201030 15:52:13.346"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.965" endtime="20201030 15:52:13.347"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:13.355" endtime="20201030 15:52:13.374"></status>
</kw>
<msg timestamp="20201030 15:52:13.375" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:13.354" endtime="20201030 15:52:13.375"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:13.377" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:13.376" endtime="20201030 15:52:13.377"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:13.378" endtime="20201030 15:52:13.380"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.351" endtime="20201030 15:52:13.380"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.349" endtime="20201030 15:52:13.381"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:13.387" endtime="20201030 15:52:13.672"></status>
</kw>
<msg timestamp="20201030 15:52:13.675" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022401792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022475486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:13.386" endtime="20201030 15:52:13.675"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:13.683" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022401792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022475486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:13.676" endtime="20201030 15:52:13.684"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:13.685" endtime="20201030 15:52:13.687"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.383" endtime="20201030 15:52:13.688"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.381" endtime="20201030 15:52:13.688"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:13.693" level="INFO">${RESULT} = [{'diff': 7.369399999999915e-05}, {'diff': 7.337500000000052e-05}, {'diff': 7.333299999999834e-05}, {'diff': 7.288899999999959e-05}, {'diff': 7.288899999999959e-05}, {'diff': 7.301399999999972e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:13.689" endtime="20201030 15:52:13.694"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:13.698" level="INFO">${ACCURACY} = {'diff': [7.369399999999915e-05, 7.337500000000052e-05, 7.333299999999834e-05, 7.288899999999959e-05, 7.288899999999959e-05, 7.301399999999972e-05, 7.370800000000219e-05, 7.326399999999997e-05, 7.3292...</msg>
<status status="PASS" starttime="20201030 15:52:13.695" endtime="20201030 15:52:13.698"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:13.704" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201030 15:52:13.703" endtime="20201030 15:52:13.704"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:13.707" level="INFO">VALUE: [7.369399999999915e-05, 7.337500000000052e-05, 7.333299999999834e-05, 7.288899999999959e-05, 7.288899999999959e-05, 7.301399999999972e-05, 7.370800000000219e-05, 7.326399999999997e-05, 7.329200000000258e-05, 7.358399999999807e-05, 7.340200000000019e-05, 7.344499999999837e-05, 7.350000000000065e-05, 7.333300000000181e-05, 7.304199999999886e-05, 7.338799999999715e-05, 7.333400000000129e-05, 7.318099999999855e-05, 7.295799999999797e-05, 7.288899999999959e-05, 7.361099999999773e-05, 7.338900000000009e-05, 7.331899999999877e-05, 7.313899999999984e-05, 7.370799999999872e-05, 7.342999999999933e-05, 7.295799999999797e-05, 7.338900000000009e-05, 7.281899999999827e-05, 7.340299999999966e-05, 7.359800000000111e-05, 7.302799999999929e-05, 7.27499999999999e-05, 7.327799999999954e-05, 7.297300000000048e-05, 7.358399999999807e-05, 7.352799999999979e-05, 7.331899999999877e-05, 7.295800000000144e-05, 7.32500000000004e-05, 7.308300000000156e-05, 7.338900000000009e-05, 7.326399999999997e-05, 7.356899999999902e-05, 7.28049999999987e-05, 7.334699999999791e-05, 7.333300000000181e-05, 7.336100000000095e-05, 7.336100000000095e-05, 7.32500000000004e-05]</msg>
<status status="PASS" starttime="20201030 15:52:13.705" endtime="20201030 15:52:13.709"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.699" endtime="20201030 15:52:13.710"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:13.714" endtime="20201030 15:52:13.734"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.713" endtime="20201030 15:52:13.734"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.711" endtime="20201030 15:52:13.735"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.348" endtime="20201030 15:52:13.735"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.347" endtime="20201030 15:52:13.735"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:13.744" endtime="20201030 15:52:13.762"></status>
</kw>
<msg timestamp="20201030 15:52:13.763" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:13.742" endtime="20201030 15:52:13.763"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:13.765" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:13.764" endtime="20201030 15:52:13.765"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:13.766" endtime="20201030 15:52:13.768"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.740" endtime="20201030 15:52:13.768"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.738" endtime="20201030 15:52:13.769"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:13.775" endtime="20201030 15:52:14.060"></status>
</kw>
<msg timestamp="20201030 15:52:14.063" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021518111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021592319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:13.774" endtime="20201030 15:52:14.063"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:14.071" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021518111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021592319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:14.064" endtime="20201030 15:52:14.071"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:14.072" endtime="20201030 15:52:14.074"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.771" endtime="20201030 15:52:14.074"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.769" endtime="20201030 15:52:14.075"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:14.079" level="INFO">${RESULT} = [{'diff': 7.420799999999922e-05}, {'diff': 7.409699999999866e-05}, {'diff': 7.406899999999952e-05}, {'diff': 7.39309999999993e-05}, {'diff': 7.465300000000091e-05}, {'diff': 7.438900000000109e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:52:14.076" endtime="20201030 15:52:14.079"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:14.084" level="INFO">${ACCURACY} = {'diff': [7.420799999999922e-05, 7.409699999999866e-05, 7.406899999999952e-05, 7.39309999999993e-05, 7.465300000000091e-05, 7.438900000000109e-05, 7.445900000000241e-05, 7.451399999999775e-05, 7.46250...</msg>
<status status="PASS" starttime="20201030 15:52:14.080" endtime="20201030 15:52:14.084"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:14.088" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201030 15:52:14.087" endtime="20201030 15:52:14.088"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:14.091" level="INFO">VALUE: [7.420799999999922e-05, 7.409699999999866e-05, 7.406899999999952e-05, 7.39309999999993e-05, 7.465300000000091e-05, 7.438900000000109e-05, 7.445900000000241e-05, 7.451399999999775e-05, 7.462500000000177e-05, 7.420899999999869e-05, 7.445800000000294e-05, 7.398599999999811e-05, 7.402700000000081e-05, 7.450000000000165e-05, 7.437500000000152e-05, 7.415200000000094e-05, 7.432000000000272e-05, 7.451399999999775e-05, 7.418000000000008e-05, 7.401400000000072e-05, 7.388900000000059e-05, 7.392999999999983e-05, 7.419499999999912e-05, 7.376400000000047e-05, 7.43050000000002e-05, 7.420800000000269e-05, 7.390300000000016e-05, 7.444499999999937e-05, 7.472199999999929e-05, 7.470799999999972e-05, 7.37500000000009e-05, 7.437500000000152e-05, 7.433299999999934e-05, 7.429100000000063e-05, 7.413900000000084e-05, 7.459799999999864e-05, 7.418000000000008e-05, 7.438899999999762e-05, 7.45829999999996e-05, 7.388900000000059e-05, 7.470799999999972e-05, 7.376400000000047e-05, 7.450000000000165e-05, 7.451399999999775e-05, 7.465300000000091e-05, 7.390300000000016e-05, 7.409700000000213e-05, 7.451400000000122e-05, 7.426400000000097e-05, 7.411099999999823e-05]</msg>
<status status="PASS" starttime="20201030 15:52:14.089" endtime="20201030 15:52:14.091"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.085" endtime="20201030 15:52:14.092"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:14.096" endtime="20201030 15:52:14.115"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.094" endtime="20201030 15:52:14.116"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.093" endtime="20201030 15:52:14.116"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.736" endtime="20201030 15:52:14.116"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.736" endtime="20201030 15:52:14.116"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:14.125" endtime="20201030 15:52:14.143"></status>
</kw>
<msg timestamp="20201030 15:52:14.144" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:14.124" endtime="20201030 15:52:14.144"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:14.146" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:14.145" endtime="20201030 15:52:14.147"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:14.147" endtime="20201030 15:52:14.149"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.121" endtime="20201030 15:52:14.149"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.119" endtime="20201030 15:52:14.150"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:14.156" endtime="20201030 15:52:14.443"></status>
</kw>
<msg timestamp="20201030 15:52:14.446" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021622597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021698347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:14.155" endtime="20201030 15:52:14.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:14.454" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021622597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021698347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:14.447" endtime="20201030 15:52:14.454"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:14.455" endtime="20201030 15:52:14.457"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.152" endtime="20201030 15:52:14.457"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.150" endtime="20201030 15:52:14.458"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:14.463" level="INFO">${RESULT} = [{'diff': 7.574999999999943e-05}, {'diff': 7.487499999999855e-05}, {'diff': 7.49440000000004e-05}, {'diff': 7.516600000000151e-05}, {'diff': 7.532000000000025e-05}, {'diff': 7.551399999999875e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:52:14.458" endtime="20201030 15:52:14.464"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:14.468" level="INFO">${ACCURACY} = {'diff': [7.574999999999943e-05, 7.487499999999855e-05, 7.49440000000004e-05, 7.516600000000151e-05, 7.532000000000025e-05, 7.551399999999875e-05, 7.545800000000047e-05, 7.507e-05, 7.497199999999954e-...</msg>
<status status="PASS" starttime="20201030 15:52:14.465" endtime="20201030 15:52:14.468"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:14.473" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201030 15:52:14.472" endtime="20201030 15:52:14.473"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:14.475" level="INFO">VALUE: [7.574999999999943e-05, 7.487499999999855e-05, 7.49440000000004e-05, 7.516600000000151e-05, 7.532000000000025e-05, 7.551399999999875e-05, 7.545800000000047e-05, 7.507e-05, 7.497199999999954e-05, 7.495799999999997e-05, 7.520800000000022e-05, 7.55700000000005e-05, 7.52639999999985e-05, 7.530600000000068e-05, 7.474999999999843e-05, 7.563899999999887e-05, 7.487499999999855e-05, 7.486099999999898e-05, 7.499999999999868e-05, 7.568099999999758e-05, 7.477799999999757e-05, 7.520800000000022e-05, 7.551400000000222e-05, 7.508400000000304e-05, 7.495799999999997e-05, 7.565300000000191e-05, 7.53890000000021e-05, 7.501400000000172e-05, 7.495799999999997e-05, 7.529100000000163e-05, 7.513899999999837e-05, 7.552800000000179e-05, 7.540199999999872e-05, 7.523600000000283e-05, 7.527800000000154e-05, 7.545800000000047e-05, 7.495799999999997e-05, 7.474999999999843e-05, 7.483399999999932e-05, 7.50830000000001e-05, 7.480600000000018e-05, 7.563899999999887e-05, 7.48189999999968e-05, 7.523699999999883e-05, 7.495799999999997e-05, 7.486099999999898e-05, 7.54440000000009e-05, 7.504100000000138e-05, 7.569500000000062e-05, 7.537499999999905e-05]</msg>
<status status="PASS" starttime="20201030 15:52:14.474" endtime="20201030 15:52:14.476"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.469" endtime="20201030 15:52:14.476"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:14.480" endtime="20201030 15:52:14.499"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.478" endtime="20201030 15:52:14.500"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.477" endtime="20201030 15:52:14.500"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.117" endtime="20201030 15:52:14.501"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.117" endtime="20201030 15:52:14.501"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:14.509" endtime="20201030 15:52:14.531"></status>
</kw>
<msg timestamp="20201030 15:52:14.532" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:14.508" endtime="20201030 15:52:14.532"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:14.534" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:14.533" endtime="20201030 15:52:14.534"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:14.535" endtime="20201030 15:52:14.537"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.505" endtime="20201030 15:52:14.537"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.503" endtime="20201030 15:52:14.538"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:14.544" endtime="20201030 15:52:14.829"></status>
</kw>
<msg timestamp="20201030 15:52:14.832" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024857764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024934264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:14.542" endtime="20201030 15:52:14.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:14.840" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024857764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024934264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:14.833" endtime="20201030 15:52:14.841"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:14.842" endtime="20201030 15:52:14.843"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.540" endtime="20201030 15:52:14.844"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.538" endtime="20201030 15:52:14.844"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:14.848" level="INFO">${RESULT} = [{'diff': 7.650000000000018e-05}, {'diff': 7.634699999999744e-05}, {'diff': 7.579199999999814e-05}, {'diff': 7.677799999999957e-05}, {'diff': 7.636199999999996e-05}, {'diff': 7.59310000000013e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:52:14.845" endtime="20201030 15:52:14.848"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:14.852" level="INFO">${ACCURACY} = {'diff': [7.650000000000018e-05, 7.634699999999744e-05, 7.579199999999814e-05, 7.677799999999957e-05, 7.636199999999996e-05, 7.59310000000013e-05, 7.587499999999955e-05, 7.619400000000165e-05, 7.59300...</msg>
<status status="PASS" starttime="20201030 15:52:14.849" endtime="20201030 15:52:14.852"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:14.857" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201030 15:52:14.856" endtime="20201030 15:52:14.857"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:14.859" level="INFO">VALUE: [7.650000000000018e-05, 7.634699999999744e-05, 7.579199999999814e-05, 7.677799999999957e-05, 7.636199999999996e-05, 7.59310000000013e-05, 7.587499999999955e-05, 7.619400000000165e-05, 7.593000000000183e-05, 7.663899999999987e-05, 7.618100000000155e-05, 7.620800000000122e-05, 7.644399999999843e-05, 7.601399999999925e-05, 7.668000000000258e-05, 7.644500000000137e-05, 7.605599999999796e-05, 7.620800000000122e-05, 7.58189999999978e-05, 7.604099999999892e-05, 7.595800000000097e-05, 7.637500000000005e-05, 7.623600000000036e-05, 7.672200000000129e-05, 7.623600000000036e-05, 7.634700000000091e-05, 7.60830000000011e-05, 7.673599999999739e-05, 7.61249999999998e-05, 7.661100000000073e-05, 7.638899999999962e-05, 7.634800000000039e-05, 7.65830000000016e-05, 7.663899999999987e-05, 7.587499999999955e-05, 7.595900000000044e-05, 7.59029999999987e-05, 7.616699999999851e-05, 7.620800000000122e-05, 7.60839999999971e-05, 7.601399999999925e-05, 7.633299999999787e-05, 7.63050000000022e-05, 7.619499999999765e-05, 7.572200000000029e-05, 7.638899999999962e-05, 7.613899999999937e-05, 7.619399999999818e-05, 7.666700000000248e-05, 7.62639999999995e-05]</msg>
<status status="PASS" starttime="20201030 15:52:14.858" endtime="20201030 15:52:14.861"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.853" endtime="20201030 15:52:14.861"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:14.865" endtime="20201030 15:52:14.884"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.863" endtime="20201030 15:52:14.885"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.862" endtime="20201030 15:52:14.885"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.502" endtime="20201030 15:52:14.885"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.501" endtime="20201030 15:52:14.886"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:14.894" endtime="20201030 15:52:14.912"></status>
</kw>
<msg timestamp="20201030 15:52:14.913" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:14.893" endtime="20201030 15:52:14.913"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:14.915" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:14.914" endtime="20201030 15:52:14.916"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:14.916" endtime="20201030 15:52:14.918"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.890" endtime="20201030 15:52:14.919"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.888" endtime="20201030 15:52:14.919"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:14.925" endtime="20201030 15:52:15.212"></status>
</kw>
<msg timestamp="20201030 15:52:15.215" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021538625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021616486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:14.924" endtime="20201030 15:52:15.215"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:15.223" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021538625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021616486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:15.216" endtime="20201030 15:52:15.223"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:15.224" endtime="20201030 15:52:15.226"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.921" endtime="20201030 15:52:15.226"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.920" endtime="20201030 15:52:15.227"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:15.231" level="INFO">${RESULT} = [{'diff': 7.786100000000198e-05}, {'diff': 7.723600000000136e-05}, {'diff': 7.748599999999814e-05}, {'diff': 7.71250000000008e-05}, {'diff': 7.763900000000087e-05}, {'diff': 7.716699999999951e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:52:15.227" endtime="20201030 15:52:15.231"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:15.235" level="INFO">${ACCURACY} = {'diff': [7.786100000000198e-05, 7.723600000000136e-05, 7.748599999999814e-05, 7.71250000000008e-05, 7.763900000000087e-05, 7.716699999999951e-05, 7.686099999999751e-05, 7.733400000000182e-05, 7.71249...</msg>
<status status="PASS" starttime="20201030 15:52:15.232" endtime="20201030 15:52:15.236"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:15.240" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201030 15:52:15.239" endtime="20201030 15:52:15.240"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:15.242" level="INFO">VALUE: [7.786100000000198e-05, 7.723600000000136e-05, 7.748599999999814e-05, 7.71250000000008e-05, 7.763900000000087e-05, 7.716699999999951e-05, 7.686099999999751e-05, 7.733400000000182e-05, 7.712499999999733e-05, 7.680499999999923e-05, 7.6764e-05, 7.750000000000118e-05, 7.718099999999908e-05, 7.669500000000162e-05, 7.730499999999974e-05, 7.684800000000089e-05, 7.7457999999999e-05, 7.737499999999758e-05, 7.727800000000007e-05, 7.688900000000012e-05, 7.748599999999814e-05, 7.698600000000111e-05, 7.70969999999982e-05, 7.698600000000111e-05, 7.705499999999949e-05, 7.737499999999758e-05, 7.697300000000101e-05, 7.737500000000105e-05, 7.770799999999925e-05, 7.694500000000187e-05, 7.719399999999918e-05, 7.770899999999872e-05, 7.748600000000161e-05, 7.755499999999999e-05, 7.76380000000014e-05, 7.745800000000247e-05, 7.758299999999912e-05, 7.755599999999946e-05, 7.752800000000032e-05, 7.769499999999915e-05, 7.742999999999986e-05, 7.690200000000022e-05, 7.741699999999976e-05, 7.715299999999994e-05, 7.752700000000085e-05, 7.70969999999982e-05, 7.695800000000197e-05, 7.747199999999857e-05, 7.737499999999758e-05, 7.750000000000118e-05]</msg>
<status status="PASS" starttime="20201030 15:52:15.241" endtime="20201030 15:52:15.249"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.236" endtime="20201030 15:52:15.249"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:15.253" endtime="20201030 15:52:15.272"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.251" endtime="20201030 15:52:15.273"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.250" endtime="20201030 15:52:15.273"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.886" endtime="20201030 15:52:15.274"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.886" endtime="20201030 15:52:15.274"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:15.282" endtime="20201030 15:52:15.301"></status>
</kw>
<msg timestamp="20201030 15:52:15.301" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:15.281" endtime="20201030 15:52:15.301"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:15.304" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:15.302" endtime="20201030 15:52:15.304"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:15.305" endtime="20201030 15:52:15.306"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.278" endtime="20201030 15:52:15.307"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.276" endtime="20201030 15:52:15.307"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:15.314" endtime="20201030 15:52:15.599"></status>
</kw>
<msg timestamp="20201030 15:52:15.603" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021472528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021550931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:15.312" endtime="20201030 15:52:15.603"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:15.611" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021472528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021550931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:15.604" endtime="20201030 15:52:15.611"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:15.612" endtime="20201030 15:52:15.614"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.309" endtime="20201030 15:52:15.614"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.308" endtime="20201030 15:52:15.615"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:15.618" level="INFO">${RESULT} = [{'diff': 7.840299999999772e-05}, {'diff': 7.834699999999944e-05}, {'diff': 7.833299999999987e-05}, {'diff': 7.793099999999983e-05}, {'diff': 7.781999999999928e-05}, {'diff': 7.847199999999957e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:15.615" endtime="20201030 15:52:15.619"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:15.623" level="INFO">${ACCURACY} = {'diff': [7.840299999999772e-05, 7.834699999999944e-05, 7.833299999999987e-05, 7.793099999999983e-05, 7.781999999999928e-05, 7.847199999999957e-05, 7.806999999999953e-05, 7.849999999999871e-05, 7.8694...</msg>
<status status="PASS" starttime="20201030 15:52:15.619" endtime="20201030 15:52:15.623"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:15.627" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201030 15:52:15.626" endtime="20201030 15:52:15.627"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:15.629" level="INFO">VALUE: [7.840299999999772e-05, 7.834699999999944e-05, 7.833299999999987e-05, 7.793099999999983e-05, 7.781999999999928e-05, 7.847199999999957e-05, 7.806999999999953e-05, 7.849999999999871e-05, 7.869400000000068e-05, 7.827800000000107e-05, 7.787499999999808e-05, 7.788800000000165e-05, 7.780500000000024e-05, 7.822300000000226e-05, 7.819400000000018e-05, 7.804100000000092e-05, 7.823699999999836e-05, 7.873599999999939e-05, 7.854100000000142e-05, 7.855500000000099e-05, 7.84449999999999e-05, 7.831999999999978e-05, 7.834699999999944e-05, 7.804200000000039e-05, 7.774999999999796e-05, 7.78189999999998e-05, 7.83190000000003e-05, 7.7764000000001e-05, 7.787500000000155e-05, 7.816600000000104e-05, 7.774999999999796e-05, 7.794399999999993e-05, 7.818100000000008e-05, 7.773599999999839e-05, 7.801300000000178e-05, 7.82640000000015e-05, 7.776300000000153e-05, 7.800000000000168e-05, 7.869400000000068e-05, 7.838800000000215e-05, 7.811200000000171e-05, 7.794399999999993e-05, 7.84449999999999e-05, 7.793000000000036e-05, 7.825000000000193e-05, 7.83190000000003e-05, 7.79579999999995e-05, 7.872199999999982e-05, 7.858300000000012e-05, 7.849999999999871e-05]</msg>
<status status="PASS" starttime="20201030 15:52:15.628" endtime="20201030 15:52:15.630"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.623" endtime="20201030 15:52:15.631"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:15.634" endtime="20201030 15:52:15.654"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.633" endtime="20201030 15:52:15.654"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.632" endtime="20201030 15:52:15.655"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.275" endtime="20201030 15:52:15.655"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.274" endtime="20201030 15:52:15.655"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:15.664" endtime="20201030 15:52:15.683"></status>
</kw>
<msg timestamp="20201030 15:52:15.684" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:15.662" endtime="20201030 15:52:15.684"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:15.686" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:15.685" endtime="20201030 15:52:15.686"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:15.687" endtime="20201030 15:52:15.689"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.660" endtime="20201030 15:52:15.689"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.657" endtime="20201030 15:52:15.690"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:15.696" endtime="20201030 15:52:15.982"></status>
</kw>
<msg timestamp="20201030 15:52:15.985" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022380528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02245975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:52:15.695" endtime="20201030 15:52:15.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:15.994" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022380528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02245975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:52:15.986" endtime="20201030 15:52:15.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:15.995" endtime="20201030 15:52:15.996"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.692" endtime="20201030 15:52:15.997"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.690" endtime="20201030 15:52:15.997"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:16.001" level="INFO">${RESULT} = [{'diff': 7.922200000000032e-05}, {'diff': 7.962499999999983e-05}, {'diff': 7.938899999999915e-05}, {'diff': 7.905500000000149e-05}, {'diff': 7.930600000000121e-05}, {'diff': 7.933300000000088e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:15.998" endtime="20201030 15:52:16.002"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:16.006" level="INFO">${ACCURACY} = {'diff': [7.922200000000032e-05, 7.962499999999983e-05, 7.938899999999915e-05, 7.905500000000149e-05, 7.930600000000121e-05, 7.933300000000088e-05, 7.875000000000243e-05, 7.905600000000096e-05, 7.9374...</msg>
<status status="PASS" starttime="20201030 15:52:16.002" endtime="20201030 15:52:16.006"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:16.010" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201030 15:52:16.009" endtime="20201030 15:52:16.010"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:16.012" level="INFO">VALUE: [7.922200000000032e-05, 7.962499999999983e-05, 7.938899999999915e-05, 7.905500000000149e-05, 7.930600000000121e-05, 7.933300000000088e-05, 7.875000000000243e-05, 7.905600000000096e-05, 7.937499999999958e-05, 7.916700000000151e-05, 7.887499999999908e-05, 7.876399999999853e-05, 7.940299999999872e-05, 7.876399999999853e-05, 7.922200000000032e-05, 7.958300000000113e-05, 7.906900000000106e-05, 7.899999999999921e-05, 7.900000000000268e-05, 7.874999999999896e-05, 7.869499999999668e-05, 7.902699999999888e-05, 7.897200000000007e-05, 7.873599999999939e-05, 7.930600000000121e-05, 7.929200000000164e-05, 7.90970000000002e-05, 7.886099999999951e-05, 7.949999999999971e-05, 7.958300000000113e-05, 7.883399999999985e-05, 7.874999999999896e-05, 7.94030000000022e-05, 7.883300000000037e-05, 7.899999999999921e-05, 7.924999999999946e-05, 7.956900000000156e-05, 7.943099999999786e-05, 7.9458000000001e-05, 7.962499999999983e-05, 7.92909999999987e-05, 7.924999999999946e-05, 7.93190000000013e-05, 7.919400000000118e-05, 7.918100000000108e-05, 7.929199999999817e-05, 7.87779999999981e-05, 7.926399999999903e-05, 7.880499999999777e-05, 7.962499999999983e-05]</msg>
<status status="PASS" starttime="20201030 15:52:16.011" endtime="20201030 15:52:16.014"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.006" endtime="20201030 15:52:16.015"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:16.018" endtime="20201030 15:52:16.038"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.017" endtime="20201030 15:52:16.038"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.015" endtime="20201030 15:52:16.038"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.656" endtime="20201030 15:52:16.039"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.655" endtime="20201030 15:52:16.039"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:16.047" endtime="20201030 15:52:16.066"></status>
</kw>
<msg timestamp="20201030 15:52:16.066" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:16.046" endtime="20201030 15:52:16.067"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:16.069" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:16.068" endtime="20201030 15:52:16.069"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:16.070" endtime="20201030 15:52:16.072"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.043" endtime="20201030 15:52:16.072"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.041" endtime="20201030 15:52:16.073"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:16.079" endtime="20201030 15:52:16.364"></status>
</kw>
<msg timestamp="20201030 15:52:16.367" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021493014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021573708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:16.077" endtime="20201030 15:52:16.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:16.375" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021493014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021573708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:16.368" endtime="20201030 15:52:16.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:16.377" endtime="20201030 15:52:16.378"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.075" endtime="20201030 15:52:16.379"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.073" endtime="20201030 15:52:16.379"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:16.383" level="INFO">${RESULT} = [{'diff': 8.069399999999921e-05}, {'diff': 8.02369999999969e-05}, {'diff': 8.036100000000101e-05}, {'diff': 7.993000000000236e-05}, {'diff': 8.027699999999666e-05}, {'diff': 7.987500000000008e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:52:16.380" endtime="20201030 15:52:16.383"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:16.388" level="INFO">${ACCURACY} = {'diff': [8.069399999999921e-05, 8.02369999999969e-05, 8.036100000000101e-05, 7.993000000000236e-05, 8.027699999999666e-05, 7.987500000000008e-05, 8.034800000000092e-05, 8.06109999999978e-05, 8.041699...</msg>
<status status="PASS" starttime="20201030 15:52:16.384" endtime="20201030 15:52:16.388"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:16.393" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201030 15:52:16.392" endtime="20201030 15:52:16.393"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:16.395" level="INFO">VALUE: [8.069399999999921e-05, 8.02369999999969e-05, 8.036100000000101e-05, 7.993000000000236e-05, 8.027699999999666e-05, 7.987500000000008e-05, 8.034800000000092e-05, 8.06109999999978e-05, 8.04169999999993e-05, 8.056999999999856e-05, 8.026400000000003e-05, 7.986100000000051e-05, 8.011100000000076e-05, 8.056899999999909e-05, 7.999999999999674e-05, 7.973599999999692e-05, 8.061100000000126e-05, 7.988899999999965e-05, 8.000000000000021e-05, 8.043099999999886e-05, 8.031899999999884e-05, 8.01389999999999e-05, 8.023600000000089e-05, 8.063899999999694e-05, 8.037500000000058e-05, 7.974999999999996e-05, 7.97230000000003e-05, 8.066600000000007e-05, 7.987500000000008e-05, 8.034700000000145e-05, 7.980600000000171e-05, 8.067999999999964e-05, 8.036100000000101e-05, 8.022200000000132e-05, 8.005600000000196e-05, 7.983399999999738e-05, 8.018100000000208e-05, 7.987500000000008e-05, 8.005599999999849e-05, 7.98190000000018e-05, 8.038900000000015e-05, 8.022200000000132e-05, 7.998599999999717e-05, 7.980600000000171e-05, 8.012500000000033e-05, 8.030600000000221e-05, 8.004099999999945e-05, 8.066600000000007e-05, 8.02230000000008e-05, 8.004099999999945e-05]</msg>
<status status="PASS" starttime="20201030 15:52:16.394" endtime="20201030 15:52:16.396"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.389" endtime="20201030 15:52:16.396"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:16.400" endtime="20201030 15:52:16.419"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.399" endtime="20201030 15:52:16.420"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.397" endtime="20201030 15:52:16.420"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.040" endtime="20201030 15:52:16.421"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.039" endtime="20201030 15:52:16.421"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:16.429" endtime="20201030 15:52:16.448"></status>
</kw>
<msg timestamp="20201030 15:52:16.449" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:16.428" endtime="20201030 15:52:16.449"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:16.451" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:16.450" endtime="20201030 15:52:16.451"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:16.452" endtime="20201030 15:52:16.454"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.425" endtime="20201030 15:52:16.454"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.423" endtime="20201030 15:52:16.455"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:16.461" endtime="20201030 15:52:16.747"></status>
</kw>
<msg timestamp="20201030 15:52:16.750" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021531208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021612347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:16.459" endtime="20201030 15:52:16.750"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:16.758" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021531208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021612347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:16.751" endtime="20201030 15:52:16.759"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:16.759" endtime="20201030 15:52:16.761"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.457" endtime="20201030 15:52:16.762"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.455" endtime="20201030 15:52:16.762"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:16.766" level="INFO">${RESULT} = [{'diff': 8.11390000000009e-05}, {'diff': 8.166700000000054e-05}, {'diff': 8.087500000000108e-05}, {'diff': 8.08329999999989e-05}, {'diff': 8.136099999999855e-05}, {'diff': 8.154100000000095e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:52:16.763" endtime="20201030 15:52:16.766"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:16.770" level="INFO">${ACCURACY} = {'diff': [8.11390000000009e-05, 8.166700000000054e-05, 8.087500000000108e-05, 8.08329999999989e-05, 8.136099999999855e-05, 8.154100000000095e-05, 8.129200000000017e-05, 8.148599999999867e-05, 8.136100...</msg>
<status status="PASS" starttime="20201030 15:52:16.767" endtime="20201030 15:52:16.770"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:16.774" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201030 15:52:16.773" endtime="20201030 15:52:16.775"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:16.777" level="INFO">VALUE: [8.11390000000009e-05, 8.166700000000054e-05, 8.087500000000108e-05, 8.08329999999989e-05, 8.136099999999855e-05, 8.154100000000095e-05, 8.129200000000017e-05, 8.148599999999867e-05, 8.136100000000202e-05, 8.081999999999881e-05, 8.162500000000183e-05, 8.09580000000025e-05, 8.123599999999842e-05, 8.161100000000227e-05, 8.166700000000054e-05, 8.119399999999971e-05, 8.091600000000032e-05, 8.136100000000202e-05, 8.169400000000021e-05, 8.081999999999881e-05, 8.169400000000021e-05, 8.113899999999744e-05, 8.074999999999749e-05, 8.130599999999974e-05, 8.112500000000133e-05, 8.155500000000052e-05, 8.168100000000011e-05, 8.100000000000121e-05, 8.13329999999994e-05, 8.129200000000017e-05, 8.150000000000171e-05, 8.094499999999893e-05, 8.16529999999975e-05, 8.075000000000096e-05, 8.070799999999878e-05, 8.151400000000128e-05, 8.09450000000024e-05, 8.170899999999925e-05, 8.138899999999769e-05, 8.137499999999812e-05, 8.081999999999881e-05, 8.131999999999931e-05, 8.101400000000078e-05, 8.149999999999824e-05, 8.119399999999971e-05, 8.144499999999943e-05, 8.155599999999999e-05, 8.144400000000343e-05, 8.15979999999987e-05, 8.138900000000115e-05]</msg>
<status status="PASS" starttime="20201030 15:52:16.775" endtime="20201030 15:52:16.778"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.771" endtime="20201030 15:52:16.778"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:16.782" endtime="20201030 15:52:16.801"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.780" endtime="20201030 15:52:16.802"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.779" endtime="20201030 15:52:16.802"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.422" endtime="20201030 15:52:16.802"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.421" endtime="20201030 15:52:16.803"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:16.811" endtime="20201030 15:52:16.831"></status>
</kw>
<msg timestamp="20201030 15:52:16.831" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:16.809" endtime="20201030 15:52:16.831"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:16.834" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:16.832" endtime="20201030 15:52:16.834"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:16.835" endtime="20201030 15:52:16.836"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.807" endtime="20201030 15:52:16.837"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.805" endtime="20201030 15:52:16.837"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:16.844" endtime="20201030 15:52:17.130"></status>
</kw>
<msg timestamp="20201030 15:52:17.134" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022394681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022477542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:16.842" endtime="20201030 15:52:17.134"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:17.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022394681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022477542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:17.135" endtime="20201030 15:52:17.142"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:17.143" endtime="20201030 15:52:17.144"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.839" endtime="20201030 15:52:17.145"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.838" endtime="20201030 15:52:17.145"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:17.149" level="INFO">${RESULT} = [{'diff': 8.286100000000005e-05}, {'diff': 8.216700000000104e-05}, {'diff': 8.22910000000017e-05}, {'diff': 8.244400000000096e-05}, {'diff': 8.242999999999792e-05}, {'diff': 8.222299999999932e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:52:17.146" endtime="20201030 15:52:17.150"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:17.154" level="INFO">${ACCURACY} = {'diff': [8.286100000000005e-05, 8.216700000000104e-05, 8.22910000000017e-05, 8.244400000000096e-05, 8.242999999999792e-05, 8.222299999999932e-05, 8.200000000000221e-05, 8.181899999999687e-05, 8.21109...</msg>
<status status="PASS" starttime="20201030 15:52:17.150" endtime="20201030 15:52:17.154"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:17.158" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201030 15:52:17.157" endtime="20201030 15:52:17.158"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:17.160" level="INFO">VALUE: [8.286100000000005e-05, 8.216700000000104e-05, 8.22910000000017e-05, 8.244400000000096e-05, 8.242999999999792e-05, 8.222299999999932e-05, 8.200000000000221e-05, 8.181899999999687e-05, 8.21109999999993e-05, 8.262500000000284e-05, 8.242999999999792e-05, 8.220899999999975e-05, 8.204199999999745e-05, 8.248599999999967e-05, 8.187499999999862e-05, 8.226399999999856e-05, 8.249999999999924e-05, 8.238899999999869e-05, 8.21109999999993e-05, 8.219399999999724e-05, 8.205499999999755e-05, 8.254200000000142e-05, 8.248599999999967e-05, 8.188899999999819e-05, 8.166700000000054e-05, 8.254099999999848e-05, 8.26109999999998e-05, 8.191600000000132e-05, 8.212499999999887e-05, 8.237499999999912e-05, 8.225000000000246e-05, 8.227699999999866e-05, 8.17780000000011e-05, 8.202800000000135e-05, 8.222299999999932e-05, 8.17780000000011e-05, 8.194400000000046e-05, 8.198599999999917e-05, 8.181900000000034e-05, 8.204200000000092e-05, 8.223700000000236e-05, 8.24720000000001e-05, 8.255500000000152e-05, 8.213899999999844e-05, 8.254200000000142e-05, 8.204100000000145e-05, 8.25979999999997e-05, 8.205600000000049e-05, 8.26109999999998e-05, 8.193100000000036e-05]</msg>
<status status="PASS" starttime="20201030 15:52:17.159" endtime="20201030 15:52:17.162"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.154" endtime="20201030 15:52:17.163"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:17.166" endtime="20201030 15:52:17.186"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.165" endtime="20201030 15:52:17.186"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.164" endtime="20201030 15:52:17.186"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.803" endtime="20201030 15:52:17.187"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.803" endtime="20201030 15:52:17.187"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:17.195" endtime="20201030 15:52:17.214"></status>
</kw>
<msg timestamp="20201030 15:52:17.215" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:17.194" endtime="20201030 15:52:17.215"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:17.217" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:17.216" endtime="20201030 15:52:17.217"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:17.218" endtime="20201030 15:52:17.220"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.191" endtime="20201030 15:52:17.220"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.189" endtime="20201030 15:52:17.221"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:17.227" endtime="20201030 15:52:17.513"></status>
</kw>
<msg timestamp="20201030 15:52:17.516" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021462944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021546236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:17.225" endtime="20201030 15:52:17.516"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:17.524" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021462944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021546236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:17.517" endtime="20201030 15:52:17.524"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:17.525" endtime="20201030 15:52:17.527"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.223" endtime="20201030 15:52:17.527"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.221" endtime="20201030 15:52:17.528"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:17.531" level="INFO">${RESULT} = [{'diff': 8.32919999999987e-05}, {'diff': 8.362500000000037e-05}, {'diff': 8.286100000000005e-05}, {'diff': 8.29170000000018e-05}, {'diff': 8.284799999999995e-05}, {'diff': 8.336100000000055e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:52:17.528" endtime="20201030 15:52:17.532"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:17.536" level="INFO">${ACCURACY} = {'diff': [8.32919999999987e-05, 8.362500000000037e-05, 8.286100000000005e-05, 8.29170000000018e-05, 8.284799999999995e-05, 8.336100000000055e-05, 8.304200000000192e-05, 8.348600000000067e-05, 8.345900...</msg>
<status status="PASS" starttime="20201030 15:52:17.532" endtime="20201030 15:52:17.537"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:17.541" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201030 15:52:17.540" endtime="20201030 15:52:17.541"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:17.543" level="INFO">VALUE: [8.32919999999987e-05, 8.362500000000037e-05, 8.286100000000005e-05, 8.29170000000018e-05, 8.284799999999995e-05, 8.336100000000055e-05, 8.304200000000192e-05, 8.348600000000067e-05, 8.3459000000001e-05, 8.348600000000067e-05, 8.323600000000042e-05, 8.344399999999849e-05, 8.29309999999979e-05, 8.354200000000242e-05, 8.295800000000103e-05, 8.348600000000067e-05, 8.36110000000008e-05, 8.298600000000017e-05, 8.32919999999987e-05, 8.336100000000055e-05, 8.324999999999999e-05, 8.313899999999944e-05, 8.312499999999987e-05, 8.344499999999797e-05, 8.327799999999913e-05, 8.294499999999747e-05, 8.36110000000008e-05, 8.326399999999956e-05, 8.319399999999824e-05, 8.324999999999999e-05, 8.312499999999987e-05, 8.316699999999858e-05, 8.333400000000088e-05, 8.337500000000012e-05, 8.330600000000174e-05, 8.336100000000055e-05, 8.354199999999895e-05, 8.369500000000168e-05, 8.286100000000005e-05, 8.340199999999978e-05, 8.280500000000177e-05, 8.323600000000042e-05, 8.298600000000017e-05, 8.355600000000199e-05, 8.369500000000168e-05, 8.341699999999883e-05, 8.272200000000035e-05, 8.31110000000003e-05, 8.318000000000214e-05, 8.362500000000037e-05]</msg>
<status status="PASS" starttime="20201030 15:52:17.542" endtime="20201030 15:52:17.544"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.537" endtime="20201030 15:52:17.545"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:17.548" endtime="20201030 15:52:17.568"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.547" endtime="20201030 15:52:17.568"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.546" endtime="20201030 15:52:17.569"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.188" endtime="20201030 15:52:17.569"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.187" endtime="20201030 15:52:17.569"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:17.578" endtime="20201030 15:52:17.596"></status>
</kw>
<msg timestamp="20201030 15:52:17.597" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:17.576" endtime="20201030 15:52:17.597"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:17.599" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:17.598" endtime="20201030 15:52:17.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:17.600" endtime="20201030 15:52:17.602"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.574" endtime="20201030 15:52:17.603"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.572" endtime="20201030 15:52:17.603"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:17.609" endtime="20201030 15:52:17.896"></status>
</kw>
<msg timestamp="20201030 15:52:17.899" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021567972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021652125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:17.608" endtime="20201030 15:52:17.899"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:17.907" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021567972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021652125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:17.900" endtime="20201030 15:52:17.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:17.908" endtime="20201030 15:52:17.910"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.605" endtime="20201030 15:52:17.910"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.604" endtime="20201030 15:52:17.911"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:17.915" level="INFO">${RESULT} = [{'diff': 8.4153e-05}, {'diff': 8.454199999999995e-05}, {'diff': 8.381999999999834e-05}, {'diff': 8.46110000000018e-05}, {'diff': 8.438800000000121e-05}, {'diff': 8.41249999999974e-05}, {'diff': 8.398...</msg>
<status status="PASS" starttime="20201030 15:52:17.912" endtime="20201030 15:52:17.915"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:17.919" level="INFO">${ACCURACY} = {'diff': [8.4153e-05, 8.454199999999995e-05, 8.381999999999834e-05, 8.46110000000018e-05, 8.438800000000121e-05, 8.41249999999974e-05, 8.398600000000117e-05, 8.417999999999967e-05, 8.42919999999997e-0...</msg>
<status status="PASS" starttime="20201030 15:52:17.916" endtime="20201030 15:52:17.919"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:17.923" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201030 15:52:17.922" endtime="20201030 15:52:17.924"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:17.926" level="INFO">VALUE: [8.4153e-05, 8.454199999999995e-05, 8.381999999999834e-05, 8.46110000000018e-05, 8.438800000000121e-05, 8.41249999999974e-05, 8.398600000000117e-05, 8.417999999999967e-05, 8.42919999999997e-05, 8.444399999999949e-05, 8.454199999999995e-05, 8.442999999999992e-05, 8.430599999999927e-05, 8.466700000000008e-05, 8.46110000000018e-05, 8.462500000000137e-05, 8.42919999999997e-05, 8.404199999999945e-05, 8.39720000000016e-05, 8.444399999999949e-05, 8.386099999999758e-05, 8.417999999999967e-05, 8.366700000000254e-05, 8.422300000000132e-05, 8.416699999999958e-05, 8.4459000000002e-05, 8.419399999999924e-05, 8.402799999999988e-05, 8.466700000000008e-05, 8.431899999999937e-05, 8.413800000000096e-05, 8.381899999999887e-05, 8.404199999999945e-05, 8.458299999999919e-05, 8.44309999999994e-05, 8.404099999999998e-05, 8.397199999999813e-05, 8.455599999999952e-05, 8.398600000000117e-05, 8.393100000000236e-05, 8.377799999999963e-05, 8.455599999999952e-05, 8.448600000000167e-05, 8.424999999999752e-05, 8.468000000000017e-05, 8.431999999999884e-05, 8.375000000000049e-05, 8.455600000000299e-05, 8.436099999999808e-05, 8.372200000000135e-05]</msg>
<status status="PASS" starttime="20201030 15:52:17.924" endtime="20201030 15:52:17.926"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.920" endtime="20201030 15:52:17.927"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:17.931" endtime="20201030 15:52:17.950"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.929" endtime="20201030 15:52:17.951"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.928" endtime="20201030 15:52:17.951"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.570" endtime="20201030 15:52:17.951"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.569" endtime="20201030 15:52:17.951"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:17.960" endtime="20201030 15:52:17.982"></status>
</kw>
<msg timestamp="20201030 15:52:17.982" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:17.958" endtime="20201030 15:52:17.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:17.985" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:17.984" endtime="20201030 15:52:17.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:17.986" endtime="20201030 15:52:17.988"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.956" endtime="20201030 15:52:17.988"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.954" endtime="20201030 15:52:17.989"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:17.995" endtime="20201030 15:52:18.283"></status>
</kw>
<msg timestamp="20201030 15:52:18.286" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024632542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024717667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:17.994" endtime="20201030 15:52:18.286"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:18.294" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024632542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024717667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:18.287" endtime="20201030 15:52:18.294"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:18.295" endtime="20201030 15:52:18.297"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.991" endtime="20201030 15:52:18.297"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.989" endtime="20201030 15:52:18.298"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:18.302" level="INFO">${RESULT} = [{'diff': 8.51249999999984e-05}, {'diff': 8.49720000000026e-05}, {'diff': 8.491700000000033e-05}, {'diff': 8.56249999999989e-05}, {'diff': 8.561099999999933e-05}, {'diff': 8.568000000000117e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 15:52:18.298" endtime="20201030 15:52:18.302"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:18.306" level="INFO">${ACCURACY} = {'diff': [8.51249999999984e-05, 8.49720000000026e-05, 8.491700000000033e-05, 8.56249999999989e-05, 8.561099999999933e-05, 8.568000000000117e-05, 8.520799999999981e-05, 8.572199999999988e-05, 8.5471999...</msg>
<status status="PASS" starttime="20201030 15:52:18.303" endtime="20201030 15:52:18.306"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:18.310" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201030 15:52:18.309" endtime="20201030 15:52:18.310"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:18.313" level="INFO">VALUE: [8.51249999999984e-05, 8.49720000000026e-05, 8.491700000000033e-05, 8.56249999999989e-05, 8.561099999999933e-05, 8.568000000000117e-05, 8.520799999999981e-05, 8.572199999999988e-05, 8.547199999999963e-05, 8.523600000000242e-05, 8.565199999999856e-05, 8.488900000000119e-05, 8.556900000000062e-05, 8.536199999999855e-05, 8.561099999999933e-05, 8.54859999999992e-05, 8.513899999999797e-05, 8.56110000000028e-05, 8.526399999999809e-05, 8.508399999999916e-05, 8.569500000000022e-05, 8.477700000000116e-05, 8.549999999999877e-05, 8.481899999999987e-05, 8.494399999999999e-05, 8.523599999999895e-05, 8.476400000000106e-05, 8.54310000000004e-05, 8.502800000000088e-05, 8.504200000000045e-05, 8.52920000000007e-05, 8.49859999999987e-05, 8.53469999999995e-05, 8.509699999999926e-05, 8.527799999999766e-05, 8.554100000000148e-05, 8.476400000000106e-05, 8.559699999999976e-05, 8.492999999999695e-05, 8.552799999999791e-05, 8.477799999999716e-05, 8.568000000000117e-05, 8.548700000000214e-05, 8.470799999999931e-05, 8.531900000000037e-05, 8.551399999999834e-05, 8.505600000000002e-05, 8.552699999999844e-05, 8.502800000000088e-05, 8.506999999999959e-05]</msg>
<status status="PASS" starttime="20201030 15:52:18.311" endtime="20201030 15:52:18.314"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.307" endtime="20201030 15:52:18.315"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:18.318" endtime="20201030 15:52:18.338"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.317" endtime="20201030 15:52:18.338"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.316" endtime="20201030 15:52:18.339"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.952" endtime="20201030 15:52:18.339"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.952" endtime="20201030 15:52:18.339"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:18.348" endtime="20201030 15:52:18.366"></status>
</kw>
<msg timestamp="20201030 15:52:18.367" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:18.346" endtime="20201030 15:52:18.367"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:18.369" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:18.368" endtime="20201030 15:52:18.370"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:18.370" endtime="20201030 15:52:18.372"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.344" endtime="20201030 15:52:18.373"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.342" endtime="20201030 15:52:18.373"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:18.379" endtime="20201030 15:52:18.665"></status>
</kw>
<msg timestamp="20201030 15:52:18.668" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021380458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021467264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:18.378" endtime="20201030 15:52:18.668"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:18.676" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021380458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021467264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:18.669" endtime="20201030 15:52:18.677"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:18.678" endtime="20201030 15:52:18.679"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.375" endtime="20201030 15:52:18.680"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.374" endtime="20201030 15:52:18.680"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:18.684" level="INFO">${RESULT} = [{'diff': 8.68059999999983e-05}, {'diff': 8.59859999999997e-05}, {'diff': 8.66799999999987e-05}, {'diff': 8.604200000000145e-05}, {'diff': 8.616599999999863e-05}, {'diff': 8.58059999999973e-05}, {'dif...</msg>
<status status="PASS" starttime="20201030 15:52:18.681" endtime="20201030 15:52:18.684"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:18.689" level="INFO">${ACCURACY} = {'diff': [8.68059999999983e-05, 8.59859999999997e-05, 8.66799999999987e-05, 8.604200000000145e-05, 8.616599999999863e-05, 8.58059999999973e-05, 8.595900000000004e-05, 8.604100000000198e-05, 8.64580000...</msg>
<status status="PASS" starttime="20201030 15:52:18.685" endtime="20201030 15:52:18.689"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:18.694" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201030 15:52:18.693" endtime="20201030 15:52:18.694"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:18.696" level="INFO">VALUE: [8.68059999999983e-05, 8.59859999999997e-05, 8.66799999999987e-05, 8.604200000000145e-05, 8.616599999999863e-05, 8.58059999999973e-05, 8.595900000000004e-05, 8.604100000000198e-05, 8.645800000000106e-05, 8.592999999999795e-05, 8.623599999999995e-05, 8.636100000000008e-05, 8.583300000000044e-05, 8.605500000000155e-05, 8.618099999999768e-05, 8.655599999999805e-05, 8.636100000000008e-05, 8.590299999999829e-05, 8.636100000000008e-05, 8.618000000000167e-05, 8.572199999999988e-05, 8.587499999999915e-05, 8.626299999999962e-05, 8.66249999999999e-05, 8.629199999999823e-05, 8.64860000000002e-05, 8.631900000000137e-05, 8.59310000000009e-05, 8.608300000000069e-05, 8.586099999999958e-05, 8.64730000000001e-05, 8.668100000000165e-05, 8.579099999999826e-05, 8.5847e-05, 8.597200000000013e-05, 8.633400000000041e-05, 8.602799999999841e-05, 8.649999999999977e-05, 8.573599999999945e-05, 8.579199999999773e-05, 8.57920000000012e-05, 8.608300000000069e-05, 8.648599999999673e-05, 8.636100000000008e-05, 8.612500000000287e-05, 8.636100000000008e-05, 8.61249999999994e-05, 8.61799999999982e-05, 8.655600000000152e-05, 8.66249999999999e-05]</msg>
<status status="PASS" starttime="20201030 15:52:18.695" endtime="20201030 15:52:18.697"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.690" endtime="20201030 15:52:18.697"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:18.701" endtime="20201030 15:52:18.720"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.699" endtime="20201030 15:52:18.721"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.698" endtime="20201030 15:52:18.721"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.340" endtime="20201030 15:52:18.722"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.339" endtime="20201030 15:52:18.722"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:18.730" endtime="20201030 15:52:18.749"></status>
</kw>
<msg timestamp="20201030 15:52:18.750" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:18.729" endtime="20201030 15:52:18.750"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:18.752" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:18.751" endtime="20201030 15:52:18.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:18.753" endtime="20201030 15:52:18.755"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.726" endtime="20201030 15:52:18.755"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.724" endtime="20201030 15:52:18.756"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:18.762" endtime="20201030 15:52:19.049"></status>
</kw>
<msg timestamp="20201030 15:52:19.052" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021531208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021619, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:52:18.761" endtime="20201030 15:52:19.052"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:19.060" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021531208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021619, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:52:19.053" endtime="20201030 15:52:19.061"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:19.062" endtime="20201030 15:52:19.063"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.758" endtime="20201030 15:52:19.064"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.757" endtime="20201030 15:52:19.064"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:19.068" level="INFO">${RESULT} = [{'diff': 8.779199999999973e-05}, {'diff': 8.684699999999754e-05}, {'diff': 8.680499999999883e-05}, {'diff': 8.761100000000133e-05}, {'diff': 8.680499999999883e-05}, {'diff': 8.725000000000052e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:19.065" endtime="20201030 15:52:19.068"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:19.072" level="INFO">${ACCURACY} = {'diff': [8.779199999999973e-05, 8.684699999999754e-05, 8.680499999999883e-05, 8.761100000000133e-05, 8.680499999999883e-05, 8.725000000000052e-05, 8.704100000000298e-05, 8.755499999999958e-05, 8.7013...</msg>
<status status="PASS" starttime="20201030 15:52:19.069" endtime="20201030 15:52:19.072"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:19.077" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201030 15:52:19.076" endtime="20201030 15:52:19.077"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:19.079" level="INFO">VALUE: [8.779199999999973e-05, 8.684699999999754e-05, 8.680499999999883e-05, 8.761100000000133e-05, 8.680499999999883e-05, 8.725000000000052e-05, 8.704100000000298e-05, 8.755499999999958e-05, 8.701399999999984e-05, 8.766700000000308e-05, 8.688899999999972e-05, 8.76250000000009e-05, 8.734800000000098e-05, 8.69310000000019e-05, 8.686100000000058e-05, 8.729199999999923e-05, 8.679099999999926e-05, 8.725000000000052e-05, 8.709799999999726e-05, 8.673600000000045e-05, 8.687500000000015e-05, 8.729099999999976e-05, 8.691599999999938e-05, 8.719500000000172e-05, 8.68189999999984e-05, 8.754199999999948e-05, 8.761100000000133e-05, 8.747200000000163e-05, 8.711100000000083e-05, 8.695900000000104e-05, 8.701399999999984e-05, 8.736099999999761e-05, 8.754199999999948e-05, 8.738900000000022e-05, 8.736100000000108e-05, 8.755499999999958e-05, 8.69860000000007e-05, 8.747299999999764e-05, 8.71250000000004e-05, 8.752799999999991e-05, 8.69730000000006e-05, 8.752700000000044e-05, 8.738900000000022e-05, 8.730499999999933e-05, 8.67920000000022e-05, 8.74449999999985e-05, 8.74860000000012e-05, 8.751300000000087e-05, 8.76799999999997e-05, 8.706899999999865e-05]</msg>
<status status="PASS" starttime="20201030 15:52:19.078" endtime="20201030 15:52:19.080"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.073" endtime="20201030 15:52:19.080"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:19.084" endtime="20201030 15:52:19.104"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.083" endtime="20201030 15:52:19.104"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.081" endtime="20201030 15:52:19.104"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.723" endtime="20201030 15:52:19.105"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.722" endtime="20201030 15:52:19.105"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:19.113" endtime="20201030 15:52:19.133"></status>
</kw>
<msg timestamp="20201030 15:52:19.134" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:19.112" endtime="20201030 15:52:19.134"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:19.136" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:19.135" endtime="20201030 15:52:19.136"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:19.137" endtime="20201030 15:52:19.139"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.109" endtime="20201030 15:52:19.139"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.107" endtime="20201030 15:52:19.140"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:19.146" endtime="20201030 15:52:19.432"></status>
</kw>
<msg timestamp="20201030 15:52:19.435" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022423986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022512528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:19.145" endtime="20201030 15:52:19.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:19.443" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022423986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022512528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:19.436" endtime="20201030 15:52:19.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:19.444" endtime="20201030 15:52:19.446"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.142" endtime="20201030 15:52:19.446"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.140" endtime="20201030 15:52:19.447"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:19.451" level="INFO">${RESULT} = [{'diff': 8.854200000000048e-05}, {'diff': 8.809699999999879e-05}, {'diff': 8.787500000000115e-05}, {'diff': 8.806899999999965e-05}, {'diff': 8.834800000000198e-05}, {'diff': 8.843000000000045e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:19.447" endtime="20201030 15:52:19.451"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:19.455" level="INFO">${ACCURACY} = {'diff': [8.854200000000048e-05, 8.809699999999879e-05, 8.787500000000115e-05, 8.806899999999965e-05, 8.834800000000198e-05, 8.843000000000045e-05, 8.797199999999866e-05, 8.786099999999811e-05, 8.8542...</msg>
<status status="PASS" starttime="20201030 15:52:19.452" endtime="20201030 15:52:19.455"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:19.459" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201030 15:52:19.458" endtime="20201030 15:52:19.459"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:19.462" level="INFO">VALUE: [8.854200000000048e-05, 8.809699999999879e-05, 8.787500000000115e-05, 8.806899999999965e-05, 8.834800000000198e-05, 8.843000000000045e-05, 8.797199999999866e-05, 8.786099999999811e-05, 8.854200000000048e-05, 8.859799999999876e-05, 8.769399999999927e-05, 8.811199999999783e-05, 8.838900000000122e-05, 8.773599999999798e-05, 8.797199999999866e-05, 8.822199999999891e-05, 8.809700000000226e-05, 8.854099999999754e-05, 8.840199999999784e-05, 8.851400000000134e-05, 8.865300000000104e-05, 8.83059999999998e-05, 8.772200000000188e-05, 8.816600000000063e-05, 8.811100000000183e-05, 8.844400000000002e-05, 8.790300000000029e-05, 8.81670000000001e-05, 8.81670000000001e-05, 8.834700000000251e-05, 8.773599999999798e-05, 8.787500000000115e-05, 8.833300000000294e-05, 8.79730000000016e-05, 8.823599999999848e-05, 8.819399999999977e-05, 8.844400000000002e-05, 8.847199999999916e-05, 8.804100000000051e-05, 8.837500000000165e-05, 8.805599999999955e-05, 8.8638999999998e-05, 8.776400000000059e-05, 8.855600000000005e-05, 8.844400000000002e-05, 8.836099999999861e-05, 8.779199999999973e-05, 8.809799999999826e-05, 8.804199999999998e-05, 8.79860000000017e-05]</msg>
<status status="PASS" starttime="20201030 15:52:19.460" endtime="20201030 15:52:19.463"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.456" endtime="20201030 15:52:19.464"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:19.467" endtime="20201030 15:52:19.487"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.466" endtime="20201030 15:52:19.488"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.465" endtime="20201030 15:52:19.488"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.106" endtime="20201030 15:52:19.488"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.105" endtime="20201030 15:52:19.488"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:19.497" endtime="20201030 15:52:19.516"></status>
</kw>
<msg timestamp="20201030 15:52:19.516" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:19.495" endtime="20201030 15:52:19.516"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:19.519" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:19.517" endtime="20201030 15:52:19.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:19.520" endtime="20201030 15:52:19.521"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.493" endtime="20201030 15:52:19.522"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.491" endtime="20201030 15:52:19.522"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:19.529" endtime="20201030 15:52:19.814"></status>
</kw>
<msg timestamp="20201030 15:52:19.817" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021537986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021627194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:19.527" endtime="20201030 15:52:19.817"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:19.825" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021537986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021627194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:19.818" endtime="20201030 15:52:19.825"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:19.826" endtime="20201030 15:52:19.828"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.525" endtime="20201030 15:52:19.828"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.523" endtime="20201030 15:52:19.829"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:19.833" level="INFO">${RESULT} = [{'diff': 8.920800000000034e-05}, {'diff': 8.88190000000004e-05}, {'diff': 8.948599999999973e-05}, {'diff': 8.891700000000086e-05}, {'diff': 8.933300000000047e-05}, {'diff': 8.911099999999936e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:52:19.829" endtime="20201030 15:52:19.833"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:19.838" level="INFO">${ACCURACY} = {'diff': [8.920800000000034e-05, 8.88190000000004e-05, 8.948599999999973e-05, 8.891700000000086e-05, 8.933300000000047e-05, 8.911099999999936e-05, 8.94999999999993e-05, 8.918100000000068e-05, 8.941699...</msg>
<status status="PASS" starttime="20201030 15:52:19.834" endtime="20201030 15:52:19.838"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:19.842" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201030 15:52:19.841" endtime="20201030 15:52:19.843"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:19.845" level="INFO">VALUE: [8.920800000000034e-05, 8.88190000000004e-05, 8.948599999999973e-05, 8.891700000000086e-05, 8.933300000000047e-05, 8.911099999999936e-05, 8.94999999999993e-05, 8.918100000000068e-05, 8.941699999999789e-05, 8.954199999999801e-05, 8.934700000000004e-05, 8.879099999999779e-05, 8.897199999999966e-05, 8.890300000000129e-05, 8.884700000000301e-05, 8.923699999999896e-05, 8.891700000000086e-05, 8.89999999999988e-05, 8.898599999999923e-05, 8.969400000000127e-05, 8.905600000000055e-05, 8.940300000000179e-05, 8.886099999999911e-05, 8.887499999999868e-05, 8.891700000000086e-05, 8.890299999999782e-05, 8.886099999999911e-05, 8.912499999999893e-05, 8.917999999999773e-05, 8.923599999999948e-05, 8.929199999999776e-05, 8.966599999999866e-05, 8.897199999999966e-05, 8.904100000000151e-05, 8.877799999999769e-05, 8.877800000000116e-05, 8.922299999999939e-05, 8.920800000000034e-05, 8.96670000000016e-05, 8.945800000000059e-05, 8.879200000000073e-05, 8.947299999999964e-05, 8.936099999999961e-05, 8.897199999999966e-05, 8.93060000000008e-05, 8.918100000000068e-05, 8.941699999999789e-05, 8.886100000000258e-05, 8.929200000000123e-05, 8.905600000000055e-05]</msg>
<status status="PASS" starttime="20201030 15:52:19.843" endtime="20201030 15:52:19.845"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.839" endtime="20201030 15:52:19.846"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:19.849" endtime="20201030 15:52:19.869"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.848" endtime="20201030 15:52:19.869"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.847" endtime="20201030 15:52:19.870"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.489" endtime="20201030 15:52:19.870"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.489" endtime="20201030 15:52:19.870"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:19.879" endtime="20201030 15:52:19.898"></status>
</kw>
<msg timestamp="20201030 15:52:19.898" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:19.877" endtime="20201030 15:52:19.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:19.901" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:19.899" endtime="20201030 15:52:19.901"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:19.902" endtime="20201030 15:52:19.903"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.875" endtime="20201030 15:52:19.904"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.873" endtime="20201030 15:52:19.904"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:19.911" endtime="20201030 15:52:20.198"></status>
</kw>
<msg timestamp="20201030 15:52:20.201" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021462014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0215525, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:52:19.909" endtime="20201030 15:52:20.201"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:20.209" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021462014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0215525, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:52:20.202" endtime="20201030 15:52:20.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:20.210" endtime="20201030 15:52:20.212"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.907" endtime="20201030 15:52:20.212"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.905" endtime="20201030 15:52:20.213"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:20.217" level="INFO">${RESULT} = [{'diff': 9.048599999999726e-05}, {'diff': 9.002799999999894e-05}, {'diff': 9.001399999999937e-05}, {'diff': 8.96939999999978e-05}, {'diff': 8.984700000000054e-05}, {'diff': 8.980500000000183e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:52:20.213" endtime="20201030 15:52:20.217"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:20.221" level="INFO">${ACCURACY} = {'diff': [9.048599999999726e-05, 9.002799999999894e-05, 9.001399999999937e-05, 8.96939999999978e-05, 8.984700000000054e-05, 8.980500000000183e-05, 9.026399999999962e-05, 9.067999999999923e-05, 9.04730...</msg>
<status status="PASS" starttime="20201030 15:52:20.218" endtime="20201030 15:52:20.221"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:20.225" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201030 15:52:20.224" endtime="20201030 15:52:20.225"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:20.228" level="INFO">VALUE: [9.048599999999726e-05, 9.002799999999894e-05, 9.001399999999937e-05, 8.96939999999978e-05, 8.984700000000054e-05, 8.980500000000183e-05, 9.026399999999962e-05, 9.067999999999923e-05, 9.047300000000064e-05, 9.002799999999894e-05, 9.008299999999775e-05, 9.048600000000073e-05, 9.015299999999907e-05, 9.041699999999889e-05, 9.047200000000116e-05, 8.986100000000011e-05, 9.062500000000043e-05, 8.984699999999707e-05, 9.015300000000254e-05, 8.976399999999912e-05, 9.022200000000091e-05, 9.018100000000168e-05, 9.004199999999851e-05, 8.991699999999839e-05, 9.069500000000175e-05, 8.993100000000143e-05, 9.054099999999954e-05, 9.043100000000193e-05, 8.979099999999879e-05, 9.011100000000036e-05, 9.0639e-05, 8.983400000000044e-05, 9.045799999999812e-05, 9.01800000000022e-05, 8.990299999999882e-05, 8.977799999999869e-05, 8.984700000000054e-05, 8.991699999999839e-05, 8.991600000000238e-05, 9.047300000000064e-05, 8.986100000000011e-05, 8.986100000000011e-05, 9.043000000000245e-05, 9.016599999999916e-05, 9.059700000000129e-05, 9.065299999999957e-05, 9.056899999999868e-05, 8.995799999999762e-05, 9.020800000000134e-05, 9.040299999999932e-05]</msg>
<status status="PASS" starttime="20201030 15:52:20.226" endtime="20201030 15:52:20.228"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.222" endtime="20201030 15:52:20.229"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:20.233" endtime="20201030 15:52:20.252"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.231" endtime="20201030 15:52:20.253"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.230" endtime="20201030 15:52:20.253"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.871" endtime="20201030 15:52:20.253"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.871" endtime="20201030 15:52:20.253"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:20.262" endtime="20201030 15:52:20.282"></status>
</kw>
<msg timestamp="20201030 15:52:20.282" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:20.260" endtime="20201030 15:52:20.282"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:20.285" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:20.283" endtime="20201030 15:52:20.285"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:20.286" endtime="20201030 15:52:20.287"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.258" endtime="20201030 15:52:20.288"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.256" endtime="20201030 15:52:20.288"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:20.295" endtime="20201030 15:52:20.581"></status>
</kw>
<msg timestamp="20201030 15:52:20.584" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022395722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022487556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:20.293" endtime="20201030 15:52:20.584"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:20.592" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022395722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022487556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:20.585" endtime="20201030 15:52:20.593"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:20.593" endtime="20201030 15:52:20.595"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.291" endtime="20201030 15:52:20.595"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.289" endtime="20201030 15:52:20.596"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:20.600" level="INFO">${RESULT} = [{'diff': 9.183399999999897e-05}, {'diff': 9.10139999999969e-05}, {'diff': 9.097199999999819e-05}, {'diff': 9.140299999999685e-05}, {'diff': 9.108400000000169e-05}, {'diff': 9.1639000000001e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 15:52:20.597" endtime="20201030 15:52:20.600"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:20.604" level="INFO">${ACCURACY} = {'diff': [9.183399999999897e-05, 9.10139999999969e-05, 9.097199999999819e-05, 9.140299999999685e-05, 9.108400000000169e-05, 9.1639000000001e-05, 9.097200000000166e-05, 9.158399999999872e-05, 9.0709000...</msg>
<status status="PASS" starttime="20201030 15:52:20.601" endtime="20201030 15:52:20.604"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:20.608" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201030 15:52:20.607" endtime="20201030 15:52:20.608"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:20.611" level="INFO">VALUE: [9.183399999999897e-05, 9.10139999999969e-05, 9.097199999999819e-05, 9.140299999999685e-05, 9.108400000000169e-05, 9.1639000000001e-05, 9.097200000000166e-05, 9.158399999999872e-05, 9.070900000000132e-05, 9.101299999999743e-05, 9.079099999999979e-05, 9.165300000000057e-05, 9.1639000000001e-05, 9.119499999999878e-05, 9.074999999999708e-05, 9.137500000000118e-05, 9.157000000000262e-05, 9.102799999999994e-05, 9.16520000000011e-05, 9.115300000000007e-05, 9.140300000000032e-05, 9.086099999999764e-05, 9.158399999999872e-05, 9.08329999999985e-05, 9.086099999999764e-05, 9.105499999999961e-05, 9.162500000000143e-05, 9.088900000000025e-05, 9.151400000000087e-05, 9.070900000000132e-05, 9.070799999999837e-05, 9.152800000000044e-05, 9.098600000000123e-05, 9.154200000000001e-05, 9.077700000000022e-05, 9.088900000000025e-05, 9.083399999999797e-05, 9.145900000000207e-05, 9.104199999999951e-05, 9.125000000000105e-05, 9.10000000000008e-05, 9.158300000000272e-05, 9.115300000000007e-05, 9.172200000000241e-05, 9.091699999999939e-05, 9.130599999999933e-05, 9.079199999999926e-05, 9.156999999999915e-05, 9.108300000000222e-05, 9.14719999999987e-05]</msg>
<status status="PASS" starttime="20201030 15:52:20.609" endtime="20201030 15:52:20.612"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.605" endtime="20201030 15:52:20.613"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:20.616" endtime="20201030 15:52:20.637"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.615" endtime="20201030 15:52:20.638"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.614" endtime="20201030 15:52:20.639"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.254" endtime="20201030 15:52:20.640"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.254" endtime="20201030 15:52:20.640"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:20.658" endtime="20201030 15:52:20.679"></status>
</kw>
<msg timestamp="20201030 15:52:20.681" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:20.655" endtime="20201030 15:52:20.681"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:20.686" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:20.683" endtime="20201030 15:52:20.686"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:20.688" endtime="20201030 15:52:20.691"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.649" endtime="20201030 15:52:20.692"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.645" endtime="20201030 15:52:20.693"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:20.706" endtime="20201030 15:52:20.996"></status>
</kw>
<msg timestamp="20201030 15:52:20.999" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034834736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034927625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:20.703" endtime="20201030 15:52:20.999"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:21.007" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034834736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034927625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:21.000" endtime="20201030 15:52:21.008"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:21.008" endtime="20201030 15:52:21.010"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.698" endtime="20201030 15:52:21.011"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.694" endtime="20201030 15:52:21.011"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:21.015" level="INFO">${RESULT} = [{'diff': 9.288899999999878e-05}, {'diff': 9.220800000000334e-05}, {'diff': 9.195800000000309e-05}, {'diff': 9.262499999999896e-05}, {'diff': 9.206999999999965e-05}, {'diff': 9.190299999999735e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:21.012" endtime="20201030 15:52:21.015"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:21.020" level="INFO">${ACCURACY} = {'diff': [9.288899999999878e-05, 9.220800000000334e-05, 9.195800000000309e-05, 9.262499999999896e-05, 9.206999999999965e-05, 9.190299999999735e-05, 9.26529999999981e-05, 9.238899999999828e-05, 9.19029...</msg>
<status status="PASS" starttime="20201030 15:52:21.016" endtime="20201030 15:52:21.020"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:21.024" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201030 15:52:21.023" endtime="20201030 15:52:21.025"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:21.027" level="INFO">VALUE: [9.288899999999878e-05, 9.220800000000334e-05, 9.195800000000309e-05, 9.262499999999896e-05, 9.206999999999965e-05, 9.190299999999735e-05, 9.26529999999981e-05, 9.238899999999828e-05, 9.190299999999735e-05, 9.237499999999871e-05, 9.226399999999468e-05, 9.245900000000307e-05, 9.18199999999994e-05, 9.256900000000068e-05, 9.220900000000282e-05, 9.223600000000248e-05, 9.229200000000076e-05, 9.261199999999886e-05, 9.234699999999957e-05, 9.229100000000129e-05, 9.251400000000187e-05, 9.21659999999977e-05, 9.223599999999554e-05, 9.165300000000404e-05, 9.254200000000101e-05, 9.263899999999853e-05, 9.202800000000094e-05, 9.257000000000015e-05, 9.181899999999993e-05, 9.190300000000429e-05, 9.252699999999503e-05, 9.193100000000343e-05, 9.258300000000025e-05, 9.194399999999658e-05, 9.206900000000018e-05, 9.258300000000025e-05, 9.208400000000616e-05, 9.202700000000147e-05, 9.244499999999656e-05, 9.190299999999735e-05, 9.201400000000137e-05, 9.252800000000144e-05, 9.2027999999994e-05, 9.211199999999836e-05, 9.202699999999453e-05, 9.265300000000504e-05, 9.191699999999692e-05, 9.213899999999803e-05, 9.265300000000504e-05, 9.26529999999981e-05]</msg>
<status status="PASS" starttime="20201030 15:52:21.025" endtime="20201030 15:52:21.027"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.021" endtime="20201030 15:52:21.028"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:21.032" endtime="20201030 15:52:21.051"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.030" endtime="20201030 15:52:21.052"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.029" endtime="20201030 15:52:21.052"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.642" endtime="20201030 15:52:21.053"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.641" endtime="20201030 15:52:21.053"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:21.062" endtime="20201030 15:52:21.081"></status>
</kw>
<msg timestamp="20201030 15:52:21.081" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:21.060" endtime="20201030 15:52:21.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:21.084" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:21.082" endtime="20201030 15:52:21.084"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:21.085" endtime="20201030 15:52:21.087"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.058" endtime="20201030 15:52:21.087"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.055" endtime="20201030 15:52:21.087"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:21.094" endtime="20201030 15:52:21.380"></status>
</kw>
<msg timestamp="20201030 15:52:21.384" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022189444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022282458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:21.092" endtime="20201030 15:52:21.384"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:21.392" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022189444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022282458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:21.385" endtime="20201030 15:52:21.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:21.393" endtime="20201030 15:52:21.394"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.090" endtime="20201030 15:52:21.395"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.088" endtime="20201030 15:52:21.395"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:21.399" level="INFO">${RESULT} = [{'diff': 9.301400000000237e-05}, {'diff': 9.29720000000002e-05}, {'diff': 9.286099999999964e-05}, {'diff': 9.299999999999933e-05}, {'diff': 9.263899999999853e-05}, {'diff': 9.362499999999996e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:52:21.396" endtime="20201030 15:52:21.399"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:21.403" level="INFO">${ACCURACY} = {'diff': [9.301400000000237e-05, 9.29720000000002e-05, 9.286099999999964e-05, 9.299999999999933e-05, 9.263899999999853e-05, 9.362499999999996e-05, 9.338899999999928e-05, 9.269500000000028e-05, 9.31109...</msg>
<status status="PASS" starttime="20201030 15:52:21.400" endtime="20201030 15:52:21.404"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:21.408" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201030 15:52:21.407" endtime="20201030 15:52:21.408"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:21.410" level="INFO">VALUE: [9.301400000000237e-05, 9.29720000000002e-05, 9.286099999999964e-05, 9.299999999999933e-05, 9.263899999999853e-05, 9.362499999999996e-05, 9.338899999999928e-05, 9.269500000000028e-05, 9.311099999999989e-05, 9.331899999999796e-05, 9.35139999999994e-05, 9.3333000000001e-05, 9.355500000000211e-05, 9.326399999999915e-05, 9.288900000000225e-05, 9.3333999999997e-05, 9.337499999999971e-05, 9.319499999999731e-05, 9.290299999999835e-05, 9.31659999999987e-05, 9.319399999999783e-05, 9.319499999999731e-05, 9.305500000000161e-05, 9.358300000000125e-05, 9.326399999999915e-05, 9.344499999999756e-05, 9.3333000000001e-05, 9.268100000000071e-05, 9.28200000000004e-05, 9.286099999999964e-05, 9.270899999999985e-05, 9.30139999999989e-05, 9.352799999999897e-05, 9.35139999999994e-05, 9.272199999999994e-05, 9.333400000000047e-05, 9.276399999999865e-05, 9.276399999999865e-05, 9.315300000000207e-05, 9.313799999999955e-05, 9.29720000000002e-05, 9.301400000000237e-05, 9.320800000000087e-05, 9.354099999999907e-05, 9.344399999999808e-05, 9.320800000000087e-05, 9.28200000000004e-05, 9.309799999999979e-05, 9.270800000000037e-05, 9.26940000000008e-05]</msg>
<status status="PASS" starttime="20201030 15:52:21.409" endtime="20201030 15:52:21.411"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.404" endtime="20201030 15:52:21.412"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:21.415" endtime="20201030 15:52:21.435"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.414" endtime="20201030 15:52:21.435"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.413" endtime="20201030 15:52:21.435"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.054" endtime="20201030 15:52:21.436"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.053" endtime="20201030 15:52:21.436"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:21.449" endtime="20201030 15:52:21.477"></status>
</kw>
<msg timestamp="20201030 15:52:21.478" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:21.446" endtime="20201030 15:52:21.478"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:21.483" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:21.480" endtime="20201030 15:52:21.484"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:21.485" endtime="20201030 15:52:21.489"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.441" endtime="20201030 15:52:21.490"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.438" endtime="20201030 15:52:21.491"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:21.504" endtime="20201030 15:52:21.796"></status>
</kw>
<msg timestamp="20201030 15:52:21.799" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.032946806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033041333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:21.501" endtime="20201030 15:52:21.799"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:21.807" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.032946806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033041333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:21.800" endtime="20201030 15:52:21.808"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:21.808" endtime="20201030 15:52:21.810"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.496" endtime="20201030 15:52:21.811"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.492" endtime="20201030 15:52:21.811"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:21.815" level="INFO">${RESULT} = [{'diff': 9.452699999999703e-05}, {'diff': 9.373599999999704e-05}, {'diff': 9.397199999999772e-05}, {'diff': 9.361100000000039e-05}, {'diff': 9.465200000000062e-05}, {'diff': 9.398600000000423e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:21.812" endtime="20201030 15:52:21.815"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:21.819" level="INFO">${ACCURACY} = {'diff': [9.452699999999703e-05, 9.373599999999704e-05, 9.397199999999772e-05, 9.361100000000039e-05, 9.465200000000062e-05, 9.398600000000423e-05, 9.442999999999951e-05, 9.401400000000337e-05, 9.3930...</msg>
<status status="PASS" starttime="20201030 15:52:21.816" endtime="20201030 15:52:21.819"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:21.823" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201030 15:52:21.822" endtime="20201030 15:52:21.824"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:21.826" level="INFO">VALUE: [9.452699999999703e-05, 9.373599999999704e-05, 9.397199999999772e-05, 9.361100000000039e-05, 9.465200000000062e-05, 9.398600000000423e-05, 9.442999999999951e-05, 9.401400000000337e-05, 9.393099999999849e-05, 9.418100000000568e-05, 9.44729999999977e-05, 9.399999999999686e-05, 9.449999999999736e-05, 9.465299999999316e-05, 9.38200000000014e-05, 9.405600000000208e-05, 9.393099999999849e-05, 9.405599999999514e-05, 9.374999999999661e-05, 9.413900000000003e-05, 9.457000000000215e-05, 9.417999999999926e-05, 9.387500000000021e-05, 9.424999999999711e-05, 9.39859999999973e-05, 9.44859999999978e-05, 9.447199999999822e-05, 9.43059999999954e-05, 9.47079999999989e-05, 9.398600000000423e-05, 9.40000000000038e-05, 9.405600000000208e-05, 9.386100000000064e-05, 9.386100000000064e-05, 9.379100000000279e-05, 9.413900000000003e-05, 9.367999999999876e-05, 9.462500000000096e-05, 9.387500000000021e-05, 9.442999999999951e-05, 9.422200000000491e-05, 9.457000000000215e-05, 9.368099999999824e-05, 9.43059999999954e-05, 9.411100000000089e-05, 9.427800000000319e-05, 9.41659999999997e-05, 9.433400000000147e-05, 9.417999999999926e-05, 9.386100000000064e-05]</msg>
<status status="PASS" starttime="20201030 15:52:21.824" endtime="20201030 15:52:21.827"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.820" endtime="20201030 15:52:21.828"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:21.832" endtime="20201030 15:52:21.851"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.830" endtime="20201030 15:52:21.852"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.829" endtime="20201030 15:52:21.852"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.437" endtime="20201030 15:52:21.852"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.436" endtime="20201030 15:52:21.852"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:21.861" endtime="20201030 15:52:21.880"></status>
</kw>
<msg timestamp="20201030 15:52:21.881" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:21.859" endtime="20201030 15:52:21.881"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:21.883" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:21.882" endtime="20201030 15:52:21.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:21.884" endtime="20201030 15:52:21.886"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.857" endtime="20201030 15:52:21.886"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.855" endtime="20201030 15:52:21.887"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:21.893" endtime="20201030 15:52:22.179"></status>
</kw>
<msg timestamp="20201030 15:52:22.182" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021451625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021547431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:21.892" endtime="20201030 15:52:22.182"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:22.190" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021451625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021547431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:22.183" endtime="20201030 15:52:22.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:22.191" endtime="20201030 15:52:22.193"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.889" endtime="20201030 15:52:22.194"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.887" endtime="20201030 15:52:22.194"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:22.198" level="INFO">${RESULT} = [{'diff': 9.580600000000036e-05}, {'diff': 9.551399999999793e-05}, {'diff': 9.549999999999836e-05}, {'diff': 9.541700000000042e-05}, {'diff': 9.486099999999817e-05}, {'diff': 9.493000000000001e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:22.195" endtime="20201030 15:52:22.198"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:22.203" level="INFO">${ACCURACY} = {'diff': [9.580600000000036e-05, 9.551399999999793e-05, 9.549999999999836e-05, 9.541700000000042e-05, 9.486099999999817e-05, 9.493000000000001e-05, 9.480499999999989e-05, 9.50140000000009e-05, 9.53890...</msg>
<status status="PASS" starttime="20201030 15:52:22.199" endtime="20201030 15:52:22.203"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:22.207" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201030 15:52:22.206" endtime="20201030 15:52:22.208"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:22.210" level="INFO">VALUE: [9.580600000000036e-05, 9.551399999999793e-05, 9.549999999999836e-05, 9.541700000000042e-05, 9.486099999999817e-05, 9.493000000000001e-05, 9.480499999999989e-05, 9.50140000000009e-05, 9.538900000000128e-05, 9.499999999999786e-05, 9.470900000000185e-05, 9.524999999999811e-05, 9.511099999999842e-05, 9.461100000000139e-05, 9.46660000000002e-05, 9.493100000000296e-05, 9.519500000000278e-05, 9.518099999999974e-05, 9.505599999999961e-05, 9.513799999999809e-05, 9.494499999999906e-05, 9.526400000000115e-05, 9.487500000000121e-05, 9.562499999999849e-05, 9.544500000000303e-05, 9.468100000000271e-05, 9.468099999999924e-05, 9.512500000000146e-05, 9.46660000000002e-05, 9.562500000000196e-05, 9.537499999999824e-05, 9.53200000000029e-05, 9.523600000000201e-05, 9.54859999999988e-05, 9.483299999999903e-05, 9.494399999999958e-05, 9.469399999999933e-05, 9.544400000000008e-05, 9.490300000000035e-05, 9.526400000000115e-05, 9.468099999999924e-05, 9.498699999999777e-05, 9.477700000000075e-05, 9.481899999999946e-05, 9.508299999999928e-05, 9.46660000000002e-05, 9.488899999999731e-05, 9.554100000000107e-05, 9.497300000000167e-05, 9.551399999999793e-05]</msg>
<status status="PASS" starttime="20201030 15:52:22.208" endtime="20201030 15:52:22.211"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.204" endtime="20201030 15:52:22.211"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:22.215" endtime="20201030 15:52:22.234"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.213" endtime="20201030 15:52:22.235"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.212" endtime="20201030 15:52:22.235"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.853" endtime="20201030 15:52:22.235"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.853" endtime="20201030 15:52:22.235"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:22.244" endtime="20201030 15:52:22.263"></status>
</kw>
<msg timestamp="20201030 15:52:22.264" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:22.243" endtime="20201030 15:52:22.264"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:22.266" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:22.265" endtime="20201030 15:52:22.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:22.267" endtime="20201030 15:52:22.269"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.240" endtime="20201030 15:52:22.269"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.238" endtime="20201030 15:52:22.270"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:22.276" endtime="20201030 15:52:22.563"></status>
</kw>
<msg timestamp="20201030 15:52:22.566" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021497264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021593931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:22.275" endtime="20201030 15:52:22.566"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:22.574" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021497264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021593931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:22.567" endtime="20201030 15:52:22.575"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:22.576" endtime="20201030 15:52:22.577"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.272" endtime="20201030 15:52:22.578"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.270" endtime="20201030 15:52:22.578"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:22.582" level="INFO">${RESULT} = [{'diff': 9.666700000000167e-05}, {'diff': 9.632000000000043e-05}, {'diff': 9.661099999999992e-05}, {'diff': 9.587499999999874e-05}, {'diff': 9.630499999999792e-05}, {'diff': 9.591700000000092e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:22.579" endtime="20201030 15:52:22.582"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:22.586" level="INFO">${ACCURACY} = {'diff': [9.666700000000167e-05, 9.632000000000043e-05, 9.661099999999992e-05, 9.587499999999874e-05, 9.630499999999792e-05, 9.591700000000092e-05, 9.597199999999972e-05, 9.579200000000079e-05, 9.6096...</msg>
<status status="PASS" starttime="20201030 15:52:22.583" endtime="20201030 15:52:22.586"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:22.591" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201030 15:52:22.590" endtime="20201030 15:52:22.591"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:22.593" level="INFO">VALUE: [9.666700000000167e-05, 9.632000000000043e-05, 9.661099999999992e-05, 9.587499999999874e-05, 9.630499999999792e-05, 9.591700000000092e-05, 9.597199999999972e-05, 9.579200000000079e-05, 9.609699999999985e-05, 9.643100000000099e-05, 9.65409999999986e-05, 9.600000000000233e-05, 9.618000000000126e-05, 9.605499999999767e-05, 9.59859999999993e-05, 9.649999999999936e-05, 9.612499999999899e-05, 9.613900000000203e-05, 9.613900000000203e-05, 9.649999999999936e-05, 9.655600000000111e-05, 9.638899999999881e-05, 9.630500000000139e-05, 9.637499999999924e-05, 9.625000000000258e-05, 9.651399999999893e-05, 9.645800000000065e-05, 9.662499999999949e-05, 9.588900000000178e-05, 9.593100000000049e-05, 9.616599999999823e-05, 9.661099999999992e-05, 9.575000000000208e-05, 9.658299999999731e-05, 9.569499999999981e-05, 9.611100000000289e-05, 9.580600000000036e-05, 9.661099999999992e-05, 9.593000000000101e-05, 9.616700000000117e-05, 9.633300000000053e-05, 9.636099999999967e-05, 9.600000000000233e-05, 9.60140000000019e-05, 9.650000000000283e-05, 9.661099999999992e-05, 9.612499999999899e-05, 9.611100000000289e-05, 9.64859999999998e-05, 9.597199999999972e-05]</msg>
<status status="PASS" starttime="20201030 15:52:22.592" endtime="20201030 15:52:22.594"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.587" endtime="20201030 15:52:22.594"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:22.598" endtime="20201030 15:52:22.617"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.596" endtime="20201030 15:52:22.618"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.595" endtime="20201030 15:52:22.618"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.236" endtime="20201030 15:52:22.618"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.236" endtime="20201030 15:52:22.619"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:22.627" endtime="20201030 15:52:22.647"></status>
</kw>
<msg timestamp="20201030 15:52:22.648" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:22.626" endtime="20201030 15:52:22.648"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:22.650" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:22.649" endtime="20201030 15:52:22.651"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:22.652" endtime="20201030 15:52:22.653"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.623" endtime="20201030 15:52:22.654"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.621" endtime="20201030 15:52:22.654"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:22.660" endtime="20201030 15:52:22.946"></status>
</kw>
<msg timestamp="20201030 15:52:22.949" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022377708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022474819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:22.659" endtime="20201030 15:52:22.950"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:22.958" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022377708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022474819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:22.951" endtime="20201030 15:52:22.958"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:22.959" endtime="20201030 15:52:22.960"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.656" endtime="20201030 15:52:22.961"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.655" endtime="20201030 15:52:22.961"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:22.965" level="INFO">${RESULT} = [{'diff': 9.711100000000042e-05}, {'diff': 9.674999999999961e-05}, {'diff': 9.711100000000042e-05}, {'diff': 9.687499999999974e-05}, {'diff': 9.69860000000003e-05}, {'diff': 9.727799999999925e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:52:22.962" endtime="20201030 15:52:22.965"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:22.969" level="INFO">${ACCURACY} = {'diff': [9.711100000000042e-05, 9.674999999999961e-05, 9.711100000000042e-05, 9.687499999999974e-05, 9.69860000000003e-05, 9.727799999999925e-05, 9.754199999999907e-05, 9.687499999999974e-05, 9.71950...</msg>
<status status="PASS" starttime="20201030 15:52:22.966" endtime="20201030 15:52:22.970"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:22.974" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201030 15:52:22.973" endtime="20201030 15:52:22.974"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:22.976" level="INFO">VALUE: [9.711100000000042e-05, 9.674999999999961e-05, 9.711100000000042e-05, 9.687499999999974e-05, 9.69860000000003e-05, 9.727799999999925e-05, 9.754199999999907e-05, 9.687499999999974e-05, 9.719500000000131e-05, 9.738899999999981e-05, 9.68470000000006e-05, 9.734699999999763e-05, 9.693099999999802e-05, 9.711100000000042e-05, 9.680500000000189e-05, 9.693099999999802e-05, 9.742999999999905e-05, 9.67920000000018e-05, 9.747200000000122e-05, 9.672200000000047e-05, 9.680600000000136e-05, 9.722200000000097e-05, 9.736100000000067e-05, 9.748599999999732e-05, 9.74860000000008e-05, 9.719399999999837e-05, 9.692999999999855e-05, 9.743100000000199e-05, 9.751399999999993e-05, 9.73609999999972e-05, 9.71669999999987e-05, 9.71660000000027e-05, 9.680600000000136e-05, 9.723600000000054e-05, 9.723599999999707e-05, 9.687499999999974e-05, 9.76799999999993e-05, 9.761100000000092e-05, 9.691599999999898e-05, 9.708299999999781e-05, 9.693000000000201e-05, 9.7334000000001e-05, 9.693100000000149e-05, 9.745800000000165e-05, 9.759699999999788e-05, 9.67080000000009e-05, 9.665299999999863e-05, 9.741599999999948e-05, 9.69860000000003e-05, 9.747200000000122e-05]</msg>
<status status="PASS" starttime="20201030 15:52:22.975" endtime="20201030 15:52:22.978"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.970" endtime="20201030 15:52:22.978"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:22.982" endtime="20201030 15:52:23.002"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.981" endtime="20201030 15:52:23.002"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.979" endtime="20201030 15:52:23.002"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.620" endtime="20201030 15:52:23.003"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.619" endtime="20201030 15:52:23.003"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:23.012" endtime="20201030 15:52:23.031"></status>
</kw>
<msg timestamp="20201030 15:52:23.031" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:23.010" endtime="20201030 15:52:23.032"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:23.034" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:23.032" endtime="20201030 15:52:23.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:23.035" endtime="20201030 15:52:23.037"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.007" endtime="20201030 15:52:23.037"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.005" endtime="20201030 15:52:23.037"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:23.044" endtime="20201030 15:52:23.329"></status>
</kw>
<msg timestamp="20201030 15:52:23.332" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021592111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021690819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:23.042" endtime="20201030 15:52:23.333"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:23.341" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021592111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021690819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:23.334" endtime="20201030 15:52:23.341"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:23.342" endtime="20201030 15:52:23.343"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.040" endtime="20201030 15:52:23.344"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.038" endtime="20201030 15:52:23.344"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:23.348" level="INFO">${RESULT} = [{'diff': 9.870799999999944e-05}, {'diff': 9.79860000000013e-05}, {'diff': 9.800000000000086e-05}, {'diff': 9.783299999999856e-05}, {'diff': 9.825000000000111e-05}, {'diff': 9.824999999999764e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:52:23.345" endtime="20201030 15:52:23.348"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:23.353" level="INFO">${ACCURACY} = {'diff': [9.870799999999944e-05, 9.79860000000013e-05, 9.800000000000086e-05, 9.783299999999856e-05, 9.825000000000111e-05, 9.824999999999764e-05, 9.841699999999995e-05, 9.772200000000147e-05, 9.8028e...</msg>
<status status="PASS" starttime="20201030 15:52:23.349" endtime="20201030 15:52:23.353"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:23.358" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201030 15:52:23.357" endtime="20201030 15:52:23.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:23.360" level="INFO">VALUE: [9.870799999999944e-05, 9.79860000000013e-05, 9.800000000000086e-05, 9.783299999999856e-05, 9.825000000000111e-05, 9.824999999999764e-05, 9.841699999999995e-05, 9.772200000000147e-05, 9.8028e-05, 9.827700000000078e-05, 9.800000000000086e-05, 9.809800000000132e-05, 9.822299999999798e-05, 9.784699999999813e-05, 9.812500000000099e-05, 9.81669999999997e-05, 9.85410000000006e-05, 9.794399999999912e-05, 9.770799999999843e-05, 9.78059999999989e-05, 9.829199999999982e-05, 9.823699999999755e-05, 9.833299999999906e-05, 9.775000000000061e-05, 9.838900000000081e-05, 9.855500000000017e-05, 9.781899999999899e-05, 9.843000000000005e-05, 9.847199999999875e-05, 9.818099999999927e-05, 9.79860000000013e-05, 9.841699999999995e-05, 9.858400000000225e-05, 9.862499999999802e-05, 9.85280000000005e-05, 9.829199999999982e-05, 9.851400000000093e-05, 9.824999999999764e-05, 9.798599999999782e-05, 9.786100000000117e-05, 9.791699999999945e-05, 9.791699999999945e-05, 9.806900000000271e-05, 9.791599999999998e-05, 9.83609999999982e-05, 9.793099999999902e-05, 9.811100000000142e-05, 9.812499999999752e-05, 9.830600000000286e-05, 9.777799999999975e-05]</msg>
<status status="PASS" starttime="20201030 15:52:23.359" endtime="20201030 15:52:23.361"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.354" endtime="20201030 15:52:23.361"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:23.365" endtime="20201030 15:52:23.384"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.364" endtime="20201030 15:52:23.385"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.362" endtime="20201030 15:52:23.385"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.004" endtime="20201030 15:52:23.386"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.003" endtime="20201030 15:52:23.386"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:23.394" endtime="20201030 15:52:23.414"></status>
</kw>
<msg timestamp="20201030 15:52:23.414" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:23.393" endtime="20201030 15:52:23.415"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:23.417" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:23.415" endtime="20201030 15:52:23.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:23.418" endtime="20201030 15:52:23.419"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.390" endtime="20201030 15:52:23.420"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.388" endtime="20201030 15:52:23.420"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:23.427" endtime="20201030 15:52:23.714"></status>
</kw>
<msg timestamp="20201030 15:52:23.717" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021540069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021639931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:23.425" endtime="20201030 15:52:23.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:23.725" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021540069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021639931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:23.718" endtime="20201030 15:52:23.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:23.726" endtime="20201030 15:52:23.728"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.423" endtime="20201030 15:52:23.729"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.421" endtime="20201030 15:52:23.729"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:23.733" level="INFO">${RESULT} = [{'diff': 9.986200000000264e-05}, {'diff': 9.874999999999814e-05}, {'diff': 9.863900000000106e-05}, {'diff': 9.909699999999938e-05}, {'diff': 9.879200000000032e-05}, {'diff': 9.891600000000098e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:23.730" endtime="20201030 15:52:23.733"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:23.737" level="INFO">${ACCURACY} = {'diff': [9.986200000000264e-05, 9.874999999999814e-05, 9.863900000000106e-05, 9.909699999999938e-05, 9.879200000000032e-05, 9.891600000000098e-05, 9.90419999999971e-05, 9.912500000000199e-05, 9.91109...</msg>
<status status="PASS" starttime="20201030 15:52:23.734" endtime="20201030 15:52:23.737"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:23.742" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201030 15:52:23.741" endtime="20201030 15:52:23.742"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:23.744" level="INFO">VALUE: [9.986200000000264e-05, 9.874999999999814e-05, 9.863900000000106e-05, 9.909699999999938e-05, 9.879200000000032e-05, 9.891600000000098e-05, 9.90419999999971e-05, 9.912500000000199e-05, 9.911099999999895e-05, 9.93609999999992e-05, 9.861099999999845e-05, 9.925000000000211e-05, 9.905600000000014e-05, 9.959699999999988e-05, 9.915299999999766e-05, 9.943100000000052e-05, 9.873599999999857e-05, 9.940299999999791e-05, 9.891600000000098e-05, 9.88059999999999e-05, 9.898599999999882e-05, 9.915300000000113e-05, 9.933300000000006e-05, 9.905500000000067e-05, 9.927700000000178e-05, 9.891600000000098e-05, 9.942999999999758e-05, 9.952700000000203e-05, 9.936200000000214e-05, 9.876400000000118e-05, 9.94860000000028e-05, 9.905500000000067e-05, 9.95549999999977e-05, 9.88609999999987e-05, 9.951400000000193e-05, 9.955600000000064e-05, 9.86670000000002e-05, 9.915300000000113e-05, 9.924999999999864e-05, 9.863900000000106e-05, 9.93479999999991e-05, 9.929200000000082e-05, 9.924999999999864e-05, 9.869499999999934e-05, 9.904200000000057e-05, 9.952799999999803e-05, 9.873599999999857e-05, 9.961100000000292e-05, 9.923700000000202e-05, 9.904200000000057e-05]</msg>
<status status="PASS" starttime="20201030 15:52:23.743" endtime="20201030 15:52:23.745"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.738" endtime="20201030 15:52:23.745"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:23.749" endtime="20201030 15:52:23.768"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.747" endtime="20201030 15:52:23.769"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.746" endtime="20201030 15:52:23.769"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.387" endtime="20201030 15:52:23.769"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.386" endtime="20201030 15:52:23.770"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:23.778" endtime="20201030 15:52:23.799"></status>
</kw>
<msg timestamp="20201030 15:52:23.799" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:23.777" endtime="20201030 15:52:23.799"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:23.802" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:23.800" endtime="20201030 15:52:23.802"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:23.803" endtime="20201030 15:52:23.804"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.774" endtime="20201030 15:52:23.805"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.772" endtime="20201030 15:52:23.805"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:23.812" endtime="20201030 15:52:24.098"></status>
</kw>
<msg timestamp="20201030 15:52:24.101" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022493042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022593083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:23.810" endtime="20201030 15:52:24.101"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:24.109" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022493042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022593083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:24.102" endtime="20201030 15:52:24.109"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:24.110" endtime="20201030 15:52:24.112"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.808" endtime="20201030 15:52:24.113"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.806" endtime="20201030 15:52:24.113"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:24.117" level="INFO">${RESULT} = [{'diff': 0.00010004099999999863}, {'diff': 0.00010023600000000008}, {'diff': 0.00010059700000000088}, {'diff': 9.997299999999973e-05}, {'diff': 0.0001000419999999981}, {'diff': 9.970899999999991e-05}...</msg>
<status status="PASS" starttime="20201030 15:52:24.114" endtime="20201030 15:52:24.117"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:24.121" level="INFO">${ACCURACY} = {'diff': [0.00010004099999999863, 0.00010023600000000008, 0.00010059700000000088, 9.997299999999973e-05, 0.0001000419999999981, 9.970899999999991e-05, 0.00010005600000000114, 9.963899999999859e-05, 0....</msg>
<status status="PASS" starttime="20201030 15:52:24.118" endtime="20201030 15:52:24.121"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:24.125" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201030 15:52:24.124" endtime="20201030 15:52:24.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:24.128" level="INFO">VALUE: [0.00010004099999999863, 0.00010023600000000008, 0.00010059700000000088, 9.997299999999973e-05, 0.0001000419999999981, 9.970899999999991e-05, 0.00010005600000000114, 9.963899999999859e-05, 0.00010029200000000182, 0.00010032000000000096, 0.00010047200000000076, 0.00010048600000000033, 0.00010043099999999805, 9.976399999999871e-05, 0.00010023600000000008, 0.00010019400000000137, 9.99999999999994e-05, 0.00010008400000000028, 0.00010044500000000109, 0.00010027799999999878, 0.00010032000000000096, 0.00010029099999999888, 0.00010045800000000119, 0.00010056900000000174, 0.00010020800000000094, 0.00010002799999999853, 0.00010045800000000119, 0.00010040300000000238, 0.0001002220000000005, 0.0001000549999999982, 0.00010054099999999913, 0.00010027700000000278, 9.972300000000295e-05, 9.991700000000145e-05, 0.00010061100000000045, 0.00010009699999999691, 0.00010002799999999853, 9.9722e-05, 0.00010027800000000225, 0.00010011099999999995, 0.00010041699999999848, 9.984700000000013e-05, 0.00010048600000000033, 9.96800000000013e-05, 0.00010047200000000076, 9.998599999999983e-05, 9.995800000000069e-05, 0.00010011099999999995, 0.00010044400000000162, 0.0001004999999999999]</msg>
<status status="PASS" starttime="20201030 15:52:24.126" endtime="20201030 15:52:24.129"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.122" endtime="20201030 15:52:24.130"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:24.133" endtime="20201030 15:52:24.153"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.132" endtime="20201030 15:52:24.153"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.131" endtime="20201030 15:52:24.154"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.771" endtime="20201030 15:52:24.154"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.770" endtime="20201030 15:52:24.154"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:24.163" endtime="20201030 15:52:24.182"></status>
</kw>
<msg timestamp="20201030 15:52:24.183" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:24.161" endtime="20201030 15:52:24.183"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:24.185" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:24.184" endtime="20201030 15:52:24.185"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:24.186" endtime="20201030 15:52:24.188"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.159" endtime="20201030 15:52:24.188"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.157" endtime="20201030 15:52:24.189"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:24.195" endtime="20201030 15:52:24.481"></status>
</kw>
<msg timestamp="20201030 15:52:24.484" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021532431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021633361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:24.194" endtime="20201030 15:52:24.484"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:24.492" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021532431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021633361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:24.485" endtime="20201030 15:52:24.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:24.493" endtime="20201030 15:52:24.495"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.191" endtime="20201030 15:52:24.495"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.189" endtime="20201030 15:52:24.496"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:24.499" level="INFO">${RESULT} = [{'diff': 0.00010092999999999908}, {'diff': 0.00010159699999999841}, {'diff': 0.000101513999999997}, {'diff': 0.0001013610000000012}, {'diff': 0.00010161099999999798}, {'diff': 0.00010070899999999744}...</msg>
<status status="PASS" starttime="20201030 15:52:24.496" endtime="20201030 15:52:24.500"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:24.504" level="INFO">${ACCURACY} = {'diff': [0.00010092999999999908, 0.00010159699999999841, 0.000101513999999997, 0.0001013610000000012, 0.00010161099999999798, 0.00010070899999999744, 0.00010068100000000177, 0.00010076399999999971, 0...</msg>
<status status="PASS" starttime="20201030 15:52:24.500" endtime="20201030 15:52:24.505"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:24.509" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201030 15:52:24.508" endtime="20201030 15:52:24.509"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:24.511" level="INFO">VALUE: [0.00010092999999999908, 0.00010159699999999841, 0.000101513999999997, 0.0001013610000000012, 0.00010161099999999798, 0.00010070899999999744, 0.00010068100000000177, 0.00010076399999999971, 0.00010102799999999953, 0.00010091699999999898, 0.00010148599999999786, 0.00010130499999999945, 0.00010130499999999945, 0.00010079099999999938, 0.00010087500000000027, 0.0001006800000000023, 0.00010109700000000138, 0.0001015419999999996, 0.00010145799999999872, 0.00010073600000000058, 0.00010151400000000046, 0.00010105599999999867, 0.00010144399999999915, 0.00010065299999999916, 0.00010111099999999748, 0.00010120799999999847, 0.00010083299999999809, 0.00010133299999999859, 0.00010075000000000014, 0.00010102799999999953, 0.00010156899999999927, 0.0001009159999999995, 0.00010101399999999996, 0.00010077800000000275, 0.00010116699999999923, 0.00010129099999999988, 0.00010095900000000116, 0.00010106999999999824, 0.00010105599999999867, 0.00010163900000000059, 0.00010083299999999809, 0.00010118100000000227, 0.00010112500000000052, 0.00010156899999999927, 0.00010120800000000194, 0.0001013610000000012, 0.0001010000000000004, 0.0001011939999999989, 0.00010154100000000013, 0.0001010549999999992]</msg>
<status status="PASS" starttime="20201030 15:52:24.510" endtime="20201030 15:52:24.512"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.505" endtime="20201030 15:52:24.513"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:24.516" endtime="20201030 15:52:24.536"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.515" endtime="20201030 15:52:24.536"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.514" endtime="20201030 15:52:24.536"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.155" endtime="20201030 15:52:24.537"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.154" endtime="20201030 15:52:24.537"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:24.545" endtime="20201030 15:52:24.565"></status>
</kw>
<msg timestamp="20201030 15:52:24.566" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:24.544" endtime="20201030 15:52:24.566"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:24.568" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:24.567" endtime="20201030 15:52:24.568"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:24.569" endtime="20201030 15:52:24.571"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.541" endtime="20201030 15:52:24.571"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.539" endtime="20201030 15:52:24.572"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:24.578" endtime="20201030 15:52:24.864"></status>
</kw>
<msg timestamp="20201030 15:52:24.867" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021511597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021614167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:24.576" endtime="20201030 15:52:24.867"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:24.875" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021511597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021614167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:24.868" endtime="20201030 15:52:24.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:24.876" endtime="20201030 15:52:24.878"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.574" endtime="20201030 15:52:24.878"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.572" endtime="20201030 15:52:24.879"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:24.883" level="INFO">${RESULT} = [{'diff': 0.00010256999999999974}, {'diff': 0.00010205599999999967}, {'diff': 0.00010199999999999793}, {'diff': 0.0001021809999999998}, {'diff': 0.00010240299999999744}, {'diff': 0.0001024579999999997...</msg>
<status status="PASS" starttime="20201030 15:52:24.880" endtime="20201030 15:52:24.883"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:24.887" level="INFO">${ACCURACY} = {'diff': [0.00010256999999999974, 0.00010205599999999967, 0.00010199999999999793, 0.0001021809999999998, 0.00010240299999999744, 0.00010245799999999972, 0.00010248599999999886, 0.00010198600000000183,...</msg>
<status status="PASS" starttime="20201030 15:52:24.884" endtime="20201030 15:52:24.887"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:24.891" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201030 15:52:24.890" endtime="20201030 15:52:24.892"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:24.894" level="INFO">VALUE: [0.00010256999999999974, 0.00010205599999999967, 0.00010199999999999793, 0.0001021809999999998, 0.00010240299999999744, 0.00010245799999999972, 0.00010248599999999886, 0.00010198600000000183, 0.00010219499999999937, 0.0001021809999999998, 0.00010212500000000152, 0.00010227800000000078, 0.00010194500000000259, 0.00010266600000000126, 0.00010248599999999886, 0.00010166699999999973, 0.00010234699999999916, 0.0001025000000000019, 0.00010252799999999757, 0.00010173600000000158, 0.00010173600000000158, 0.00010184700000000213, 0.0001025550000000007, 0.00010259699999999941, 0.00010201300000000149, 0.00010263900000000159, 0.00010247199999999929, 0.00010208299999999934, 0.00010181900000000299, 0.00010252799999999757, 0.00010180599999999942, 0.00010179199999999985, 0.00010202799999999707, 0.00010213899999999762, 0.00010255499999999723, 0.00010233299999999959, 0.00010243000000000058, 0.00010202699999999759, 0.00010199999999999793, 0.00010190300000000041, 0.00010261100000000245, 0.00010249999999999843, 0.0001021809999999998, 0.00010231900000000002, 0.0001019160000000005, 0.0001023749999999983, 0.00010256900000000027, 0.00010236099999999873, 0.00010243000000000058, 0.00010198600000000183]</msg>
<status status="PASS" starttime="20201030 15:52:24.892" endtime="20201030 15:52:24.894"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.888" endtime="20201030 15:52:24.895"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:24.899" endtime="20201030 15:52:24.918"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.897" endtime="20201030 15:52:24.919"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.896" endtime="20201030 15:52:24.919"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.538" endtime="20201030 15:52:24.919"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.537" endtime="20201030 15:52:24.919"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:24.928" endtime="20201030 15:52:24.951"></status>
</kw>
<msg timestamp="20201030 15:52:24.951" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:24.926" endtime="20201030 15:52:24.952"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:24.954" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:24.952" endtime="20201030 15:52:24.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:24.955" endtime="20201030 15:52:24.956"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.924" endtime="20201030 15:52:24.957"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.922" endtime="20201030 15:52:24.957"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:24.964" endtime="20201030 15:52:25.250"></status>
</kw>
<msg timestamp="20201030 15:52:25.253" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024817986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024921458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:24.962" endtime="20201030 15:52:25.253"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:25.261" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024817986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024921458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:25.254" endtime="20201030 15:52:25.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:25.262" endtime="20201030 15:52:25.264"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.960" endtime="20201030 15:52:25.264"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.958" endtime="20201030 15:52:25.265"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:25.269" level="INFO">${RESULT} = [{'diff': 0.00010347200000000029}, {'diff': 0.00010287500000000227}, {'diff': 0.00010326399999999875}, {'diff': 0.00010343099999999758}, {'diff': 0.00010277800000000128}, {'diff': 0.000103222000000000...</msg>
<status status="PASS" starttime="20201030 15:52:25.266" endtime="20201030 15:52:25.269"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:25.273" level="INFO">${ACCURACY} = {'diff': [0.00010347200000000029, 0.00010287500000000227, 0.00010326399999999875, 0.00010343099999999758, 0.00010277800000000128, 0.00010322200000000004, 0.00010304100000000163, 0.00010304100000000163...</msg>
<status status="PASS" starttime="20201030 15:52:25.270" endtime="20201030 15:52:25.273"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:25.277" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201030 15:52:25.276" endtime="20201030 15:52:25.277"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:25.279" level="INFO">VALUE: [0.00010347200000000029, 0.00010287500000000227, 0.00010326399999999875, 0.00010343099999999758, 0.00010277800000000128, 0.00010322200000000004, 0.00010304100000000163, 0.00010304100000000163, 0.0001031810000000008, 0.00010302700000000206, 0.00010347199999999682, 0.00010365300000000216, 0.00010298599999999936, 0.00010291700000000098, 0.00010329100000000188, 0.00010359700000000041, 0.00010304100000000163, 0.000103207999999997, 0.00010291700000000098, 0.00010352800000000204, 0.00010315299999999819, 0.00010340299999999844, 0.00010326399999999875, 0.00010329200000000135, 0.00010277800000000128, 0.00010327699999999884, 0.00010284799999999913, 0.00010293100000000055, 0.00010336099999999973, 0.00010261099999999898, 0.00010286099999999923, 0.00010316599999999829, 0.00010319399999999743, 0.00010293000000000108, 0.00010325000000000265, 0.00010293000000000108, 0.00010316600000000176, 0.00010325000000000265, 0.00010302799999999807, 0.0001035420000000016, 0.00010348600000000333, 0.00010295800000000022, 0.00010298599999999936, 0.00010332000000000396, 0.00010361099999999651, 0.00010305500000000467, 0.00010347200000000029, 0.00010284699999999619, 0.0001027359999999991, 0.00010337500000000277]</msg>
<status status="PASS" starttime="20201030 15:52:25.278" endtime="20201030 15:52:25.281"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.274" endtime="20201030 15:52:25.282"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:25.285" endtime="20201030 15:52:25.305"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.284" endtime="20201030 15:52:25.305"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.283" endtime="20201030 15:52:25.306"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.920" endtime="20201030 15:52:25.306"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.920" endtime="20201030 15:52:25.306"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:25.315" endtime="20201030 15:52:25.334"></status>
</kw>
<msg timestamp="20201030 15:52:25.335" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:25.313" endtime="20201030 15:52:25.335"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:25.337" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:25.336" endtime="20201030 15:52:25.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:25.338" endtime="20201030 15:52:25.340"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.311" endtime="20201030 15:52:25.340"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.308" endtime="20201030 15:52:25.341"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:25.347" endtime="20201030 15:52:25.634"></status>
</kw>
<msg timestamp="20201030 15:52:25.637" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021444986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021549125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:25.346" endtime="20201030 15:52:25.637"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:25.645" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021444986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021549125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:25.638" endtime="20201030 15:52:25.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:25.646" endtime="20201030 15:52:25.648"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.343" endtime="20201030 15:52:25.648"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.342" endtime="20201030 15:52:25.649"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:25.653" level="INFO">${RESULT} = [{'diff': 0.00010413899999999962}, {'diff': 0.00010366699999999826}, {'diff': 0.00010420800000000147}, {'diff': 0.00010379099999999891}, {'diff': 0.00010377699999999934}, {'diff': 0.000103708000000000...</msg>
<status status="PASS" starttime="20201030 15:52:25.649" endtime="20201030 15:52:25.653"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:25.657" level="INFO">${ACCURACY} = {'diff': [0.00010413899999999962, 0.00010366699999999826, 0.00010420800000000147, 0.00010379099999999891, 0.00010377699999999934, 0.00010370800000000097, 0.00010426399999999975, 0.00010445799999999825...</msg>
<status status="PASS" starttime="20201030 15:52:25.654" endtime="20201030 15:52:25.658"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:25.662" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201030 15:52:25.661" endtime="20201030 15:52:25.662"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:25.664" level="INFO">VALUE: [0.00010413899999999962, 0.00010366699999999826, 0.00010420800000000147, 0.00010379099999999891, 0.00010377699999999934, 0.00010370800000000097, 0.00010426399999999975, 0.00010445799999999825, 0.00010366599999999879, 0.00010440299999999944, 0.00010416599999999929, 0.00010359799999999988, 0.00010391700000000198, 0.00010405499999999873, 0.00010380499999999848, 0.00010412500000000005, 0.00010440299999999944, 0.00010372200000000054, 0.00010412500000000005, 0.00010440199999999997, 0.00010454099999999966, 0.00010429199999999889, 0.00010459800000000088, 0.00010434699999999769, 0.0001042360000000006, 0.00010442999999999911, 0.00010384699999999719, 0.00010429099999999941, 0.00010377800000000229, 0.00010458400000000131, 0.00010445899999999772, 0.00010398599999999689, 0.00010393000000000208, 0.00010397200000000079, 0.00010420899999999747, 0.00010388900000000284, 0.00010416699999999876, 0.0001042360000000006, 0.00010445799999999825, 0.0001037360000000001, 0.00010430600000000192, 0.00010391700000000198, 0.00010436100000000073, 0.00010411099999999701, 0.00010444400000000215, 0.0001042360000000006, 0.0001040689999999983, 0.0001040139999999995, 0.00010397200000000079, 0.00010390199999999947]</msg>
<status status="PASS" starttime="20201030 15:52:25.663" endtime="20201030 15:52:25.669"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.658" endtime="20201030 15:52:25.670"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:25.673" endtime="20201030 15:52:25.693"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.672" endtime="20201030 15:52:25.693"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.671" endtime="20201030 15:52:25.694"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.307" endtime="20201030 15:52:25.694"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.306" endtime="20201030 15:52:25.694"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:25.703" endtime="20201030 15:52:25.722"></status>
</kw>
<msg timestamp="20201030 15:52:25.723" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:25.701" endtime="20201030 15:52:25.723"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:25.725" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:25.724" endtime="20201030 15:52:25.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:25.726" endtime="20201030 15:52:25.728"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.698" endtime="20201030 15:52:25.728"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.696" endtime="20201030 15:52:25.729"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:25.735" endtime="20201030 15:52:26.023"></status>
</kw>
<msg timestamp="20201030 15:52:26.026" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021474819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021580125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:25.734" endtime="20201030 15:52:26.026"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:26.034" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021474819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021580125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:26.027" endtime="20201030 15:52:26.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:26.035" endtime="20201030 15:52:26.036"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.731" endtime="20201030 15:52:26.037"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.729" endtime="20201030 15:52:26.037"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:26.041" level="INFO">${RESULT} = [{'diff': 0.00010530599999999946}, {'diff': 0.00010467999999999936}, {'diff': 0.00010534800000000163}, {'diff': 0.00010531999999999903}, {'diff': 0.0001052499999999977}, {'diff': 0.0001047779999999998...</msg>
<status status="PASS" starttime="20201030 15:52:26.038" endtime="20201030 15:52:26.042"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:26.045" level="INFO">${ACCURACY} = {'diff': [0.00010530599999999946, 0.00010467999999999936, 0.00010534800000000163, 0.00010531999999999903, 0.0001052499999999977, 0.00010477799999999982, 0.00010527800000000032, 0.00010543099999999958,...</msg>
<status status="PASS" starttime="20201030 15:52:26.042" endtime="20201030 15:52:26.045"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:26.050" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201030 15:52:26.049" endtime="20201030 15:52:26.050"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:26.052" level="INFO">VALUE: [0.00010530599999999946, 0.00010467999999999936, 0.00010534800000000163, 0.00010531999999999903, 0.0001052499999999977, 0.00010477799999999982, 0.00010527800000000032, 0.00010543099999999958, 0.0001055689999999998, 0.00010472199999999807, 0.00010508399999999835, 0.00010466699999999926, 0.00010520900000000194, 0.00010479199999999939, 0.0001050420000000031, 0.00010516699999999976, 0.00010555500000000023, 0.00010515200000000072, 0.00010526399999999728, 0.00010531899999999955, 0.00010527800000000032, 0.00010519399999999943, 0.00010472200000000154, 0.00010486099999999776, 0.00010544400000000315, 0.00010540300000000044, 0.0001048620000000007, 0.00010547299999999829, 0.00010505600000000268, 0.00010543099999999958, 0.00010536100000000173, 0.00010493099999999908, 0.00010536099999999826, 0.00010487499999999733, 0.00010554100000000066, 0.00010541599999999707, 0.00010529100000000041, 0.00010505499999999973, 0.0001046940000000024, 0.00010556999999999928, 0.00010554100000000066, 0.00010511100000000148, 0.00010561099999999851, 0.00010527800000000032, 0.00010516699999999976, 0.00010527800000000032, 0.00010527800000000032, 0.00010530599999999946, 0.0001048750000000008, 0.00010552700000000109]</msg>
<status status="PASS" starttime="20201030 15:52:26.051" endtime="20201030 15:52:26.053"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.046" endtime="20201030 15:52:26.053"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:26.057" endtime="20201030 15:52:26.076"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.055" endtime="20201030 15:52:26.077"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.054" endtime="20201030 15:52:26.077"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.695" endtime="20201030 15:52:26.077"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.694" endtime="20201030 15:52:26.078"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:26.087" endtime="20201030 15:52:26.108"></status>
</kw>
<msg timestamp="20201030 15:52:26.109" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:26.086" endtime="20201030 15:52:26.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:26.111" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:26.110" endtime="20201030 15:52:26.111"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:26.112" endtime="20201030 15:52:26.114"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.082" endtime="20201030 15:52:26.114"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.080" endtime="20201030 15:52:26.115"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:26.122" endtime="20201030 15:52:26.407"></status>
</kw>
<msg timestamp="20201030 15:52:26.410" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023457653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023563792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:26.120" endtime="20201030 15:52:26.411"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:26.418" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023457653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023563792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:26.411" endtime="20201030 15:52:26.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:26.419" endtime="20201030 15:52:26.421"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.117" endtime="20201030 15:52:26.422"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.115" endtime="20201030 15:52:26.422"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:26.426" level="INFO">${RESULT} = [{'diff': 0.00010613900000000162}, {'diff': 0.00010616699999999729}, {'diff': 0.00010609699999999944}, {'diff': 0.00010602800000000107}, {'diff': 0.00010598599999999889}, {'diff': 0.000106221999999999...</msg>
<status status="PASS" starttime="20201030 15:52:26.423" endtime="20201030 15:52:26.426"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:26.430" level="INFO">${ACCURACY} = {'diff': [0.00010613900000000162, 0.00010616699999999729, 0.00010609699999999944, 0.00010602800000000107, 0.00010598599999999889, 0.00010622199999999957, 0.00010658300000000037, 0.00010584699999999919...</msg>
<status status="PASS" starttime="20201030 15:52:26.427" endtime="20201030 15:52:26.430"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:26.434" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201030 15:52:26.433" endtime="20201030 15:52:26.434"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:26.436" level="INFO">VALUE: [0.00010613900000000162, 0.00010616699999999729, 0.00010609699999999944, 0.00010602800000000107, 0.00010598599999999889, 0.00010622199999999957, 0.00010658300000000037, 0.00010584699999999919, 0.00010615300000000119, 0.0001058750000000018, 0.00010562500000000155, 0.00010627800000000132, 0.00010609699999999944, 0.00010570899999999897, 0.00010576400000000125, 0.00010634699999999969, 0.0001056949999999994, 0.00010620899999999947, 0.00010658300000000037, 0.000106208, 0.00010613899999999815, 0.0001058880000000019, 0.00010602700000000159, 0.00010608299999999987, 0.00010640300000000144, 0.00010598599999999889, 0.00010659699999999994, 0.000106208, 0.00010608399999999935, 0.00010609699999999944, 0.00010584800000000213, 0.00010609699999999944, 0.0001058750000000018, 0.00010609699999999944, 0.00010615299999999772, 0.00010577800000000082, 0.00010565200000000122, 0.00010591600000000104, 0.00010593100000000008, 0.00010645799999999678, 0.00010666700000000126, 0.00010631899999999708, 0.0001057360000000021, 0.00010604200000000064, 0.00010579200000000039, 0.00010561200000000145, 0.00010588900000000137, 0.0001065279999999981, 0.00010615299999999772, 0.00010616699999999729]</msg>
<status status="PASS" starttime="20201030 15:52:26.435" endtime="20201030 15:52:26.438"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.431" endtime="20201030 15:52:26.439"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:26.442" endtime="20201030 15:52:26.462"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.441" endtime="20201030 15:52:26.462"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.440" endtime="20201030 15:52:26.463"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.079" endtime="20201030 15:52:26.463"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.078" endtime="20201030 15:52:26.463"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:26.472" endtime="20201030 15:52:26.491"></status>
</kw>
<msg timestamp="20201030 15:52:26.492" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:26.470" endtime="20201030 15:52:26.492"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:26.494" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:26.493" endtime="20201030 15:52:26.495"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:26.496" endtime="20201030 15:52:26.497"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.467" endtime="20201030 15:52:26.498"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.465" endtime="20201030 15:52:26.498"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:26.508" endtime="20201030 15:52:26.806"></status>
</kw>
<msg timestamp="20201030 15:52:26.809" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021362875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021470611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:26.505" endtime="20201030 15:52:26.809"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:26.816" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021362875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021470611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:26.810" endtime="20201030 15:52:26.817"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:26.818" endtime="20201030 15:52:26.819"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.500" endtime="20201030 15:52:26.820"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.499" endtime="20201030 15:52:26.820"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:26.824" level="INFO">${RESULT} = [{'diff': 0.00010773600000000064}, {'diff': 0.00010682000000000053}, {'diff': 0.00010736100000000026}, {'diff': 0.00010722300000000004}, {'diff': 0.00010687499999999933}, {'diff': 0.000107597000000000...</msg>
<status status="PASS" starttime="20201030 15:52:26.821" endtime="20201030 15:52:26.824"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:26.829" level="INFO">${ACCURACY} = {'diff': [0.00010773600000000064, 0.00010682000000000053, 0.00010736100000000026, 0.00010722300000000004, 0.00010687499999999933, 0.00010759700000000094, 0.00010759699999999747, 0.00010748600000000039...</msg>
<status status="PASS" starttime="20201030 15:52:26.825" endtime="20201030 15:52:26.829"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:26.833" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201030 15:52:26.832" endtime="20201030 15:52:26.834"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:26.836" level="INFO">VALUE: [0.00010773600000000064, 0.00010682000000000053, 0.00010736100000000026, 0.00010722300000000004, 0.00010687499999999933, 0.00010759700000000094, 0.00010759699999999747, 0.00010748600000000039, 0.00010751399999999953, 0.00010693000000000161, 0.0001074019999999995, 0.00010748600000000039, 0.00010733299999999765, 0.00010705499999999826, 0.00010718100000000133, 0.00010759700000000094, 0.00010668100000000083, 0.00010761100000000051, 0.00010693000000000161, 0.00010761100000000051, 0.00010711100000000001, 0.00010738900000000287, 0.00010679199999999792, 0.0001067080000000005, 0.00010747200000000082, 0.00010704199999999817, 0.0001070279999999986, 0.00010758300000000137, 0.00010744500000000115, 0.00010677699999999887, 0.0001067629999999993, 0.00010698599999999989, 0.00010715299999999872, 0.00010711100000000001, 0.00010672200000000007, 0.00010730600000000146, 0.00010741599999999907, 0.00010719399999999796, 0.00010694400000000118, 0.00010702700000000259, 0.00010668100000000083, 0.00010748699999999986, 0.0001070279999999986, 0.0001072499999999997, 0.00010712499999999958, 0.00010722200000000057, 0.00010745800000000125, 0.0001073750000000033, 0.0001068750000000028, 0.00010748600000000039]</msg>
<status status="PASS" starttime="20201030 15:52:26.834" endtime="20201030 15:52:26.836"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.830" endtime="20201030 15:52:26.837"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:26.841" endtime="20201030 15:52:26.860"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.839" endtime="20201030 15:52:26.861"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.838" endtime="20201030 15:52:26.861"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.464" endtime="20201030 15:52:26.861"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.463" endtime="20201030 15:52:26.861"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:26.870" endtime="20201030 15:52:26.890"></status>
</kw>
<msg timestamp="20201030 15:52:26.890" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:26.868" endtime="20201030 15:52:26.891"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:26.893" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:26.891" endtime="20201030 15:52:26.893"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:26.894" endtime="20201030 15:52:26.895"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.866" endtime="20201030 15:52:26.896"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.864" endtime="20201030 15:52:26.896"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:26.903" endtime="20201030 15:52:27.190"></status>
</kw>
<msg timestamp="20201030 15:52:27.193" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021382486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021491083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:26.901" endtime="20201030 15:52:27.194"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:27.201" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021382486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021491083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:27.194" endtime="20201030 15:52:27.202"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:27.202" endtime="20201030 15:52:27.204"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.899" endtime="20201030 15:52:27.204"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.897" endtime="20201030 15:52:27.205"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:27.209" level="INFO">${RESULT} = [{'diff': 0.00010859700000000194}, {'diff': 0.00010792999999999914}, {'diff': 0.00010841699999999954}, {'diff': 0.00010827799999999985}, {'diff': 0.00010858399999999838}, {'diff': 0.000108291999999999...</msg>
<status status="PASS" starttime="20201030 15:52:27.206" endtime="20201030 15:52:27.209"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:27.213" level="INFO">${ACCURACY} = {'diff': [0.00010859700000000194, 0.00010792999999999914, 0.00010841699999999954, 0.00010827799999999985, 0.00010858399999999838, 0.00010829199999999942, 0.0001082219999999981, 0.00010848599999999792,...</msg>
<status status="PASS" starttime="20201030 15:52:27.210" endtime="20201030 15:52:27.213"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:27.217" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201030 15:52:27.216" endtime="20201030 15:52:27.217"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:27.219" level="INFO">VALUE: [0.00010859700000000194, 0.00010792999999999914, 0.00010841699999999954, 0.00010827799999999985, 0.00010858399999999838, 0.00010829199999999942, 0.0001082219999999981, 0.00010848599999999792, 0.00010790299999999947, 0.00010812499999999711, 0.00010811100000000101, 0.0001078479999999972, 0.00010841699999999954, 0.00010770900000000097, 0.00010766699999999879, 0.00010829099999999994, 0.00010854199999999967, 0.00010851400000000053, 0.00010812500000000058, 0.00010793100000000208, 0.00010765199999999975, 0.00010816700000000276, 0.00010813900000000015, 0.00010812499999999711, 0.00010841600000000007, 0.00010863899999999718, 0.00010777799999999935, 0.00010833299999999865, 0.00010845800000000225, 0.0001080279999999996, 0.00010766599999999932, 0.00010766599999999932, 0.00010823600000000114, 0.00010779199999999892, 0.00010777699999999987, 0.00010781900000000205, 0.0001082500000000007, 0.00010793100000000208, 0.00010850000000000096, 0.00010766699999999879, 0.00010786100000000076, 0.00010837500000000083, 0.00010794399999999871, 0.000107902, 0.00010809800000000092, 0.00010779099999999944, 0.00010844399999999921, 0.00010833300000000212, 0.00010766699999999879, 0.00010798600000000089]</msg>
<status status="PASS" starttime="20201030 15:52:27.218" endtime="20201030 15:52:27.220"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.214" endtime="20201030 15:52:27.221"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:27.224" endtime="20201030 15:52:27.244"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.223" endtime="20201030 15:52:27.244"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.222" endtime="20201030 15:52:27.245"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.862" endtime="20201030 15:52:27.245"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.862" endtime="20201030 15:52:27.245"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:27.254" endtime="20201030 15:52:27.274"></status>
</kw>
<msg timestamp="20201030 15:52:27.275" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:27.252" endtime="20201030 15:52:27.275"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:27.277" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:27.276" endtime="20201030 15:52:27.278"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:27.278" endtime="20201030 15:52:27.280"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.250" endtime="20201030 15:52:27.281"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.247" endtime="20201030 15:52:27.281"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:27.288" endtime="20201030 15:52:27.573"></status>
</kw>
<msg timestamp="20201030 15:52:27.576" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022364792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022473958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:27.287" endtime="20201030 15:52:27.577"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:27.584" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022364792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022473958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:27.577" endtime="20201030 15:52:27.585"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:27.585" endtime="20201030 15:52:27.587"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.283" endtime="20201030 15:52:27.588"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.282" endtime="20201030 15:52:27.588"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:27.592" level="INFO">${RESULT} = [{'diff': 0.00010916599999999735}, {'diff': 0.00010941700000000054}, {'diff': 0.00010876399999999731}, {'diff': 0.0001090829999999994}, {'diff': 0.00010920799999999953}, {'diff': 0.0001090000000000014...</msg>
<status status="PASS" starttime="20201030 15:52:27.589" endtime="20201030 15:52:27.592"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:27.596" level="INFO">${ACCURACY} = {'diff': [0.00010916599999999735, 0.00010941700000000054, 0.00010876399999999731, 0.0001090829999999994, 0.00010920799999999953, 0.00010900000000000146, 0.00010952799999999763, 0.00010873600000000164,...</msg>
<status status="PASS" starttime="20201030 15:52:27.593" endtime="20201030 15:52:27.596"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:27.600" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201030 15:52:27.599" endtime="20201030 15:52:27.600"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:27.603" level="INFO">VALUE: [0.00010916599999999735, 0.00010941700000000054, 0.00010876399999999731, 0.0001090829999999994, 0.00010920799999999953, 0.00010900000000000146, 0.00010952799999999763, 0.00010873600000000164, 0.00010959800000000242, 0.00010947200000000282, 0.00010941700000000054, 0.00010952700000000162, 0.00010951400000000153, 0.00010883299999999915, 0.00010891700000000004, 0.00010884700000000219, 0.00010904100000000069, 0.00010952699999999815, 0.00010934699999999922, 0.00010936099999999879, 0.00010879100000000044, 0.00010886099999999829, 0.00010959699999999947, 0.00010890300000000047, 0.00010948599999999892, 0.00010902799999999713, 0.00010873600000000164, 0.00010866699999999979, 0.0001087219999999986, 0.0001090280000000006, 0.00010955500000000076, 0.00010934699999999922, 0.0001092219999999991, 0.00010905599999999974, 0.00010948599999999892, 0.0001093890000000014, 0.00010909799999999845, 0.00010922200000000257, 0.00010947199999999935, 0.00010883299999999915, 0.00010911099999999854, 0.00010916600000000082, 0.00010948600000000239, 0.00010873600000000164, 0.00010924999999999824, 0.00010884699999999872, 0.00010954200000000067, 0.00010927800000000085, 0.00010930499999999704, 0.00010954099999999772]</msg>
<status status="PASS" starttime="20201030 15:52:27.601" endtime="20201030 15:52:27.604"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.597" endtime="20201030 15:52:27.605"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:27.608" endtime="20201030 15:52:27.628"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.607" endtime="20201030 15:52:27.628"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.606" endtime="20201030 15:52:27.628"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.246" endtime="20201030 15:52:27.629"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.245" endtime="20201030 15:52:27.629"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:27.637" endtime="20201030 15:52:27.657"></status>
</kw>
<msg timestamp="20201030 15:52:27.658" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:27.636" endtime="20201030 15:52:27.658"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:27.660" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:27.659" endtime="20201030 15:52:27.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:27.661" endtime="20201030 15:52:27.663"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.633" endtime="20201030 15:52:27.664"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.631" endtime="20201030 15:52:27.664"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:27.670" endtime="20201030 15:52:27.956"></status>
</kw>
<msg timestamp="20201030 15:52:27.959" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021339889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021449972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:27.669" endtime="20201030 15:52:27.959"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:27.967" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021339889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021449972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:27.960" endtime="20201030 15:52:27.967"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:27.968" endtime="20201030 15:52:27.969"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.666" endtime="20201030 15:52:27.970"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.665" endtime="20201030 15:52:27.971"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:27.974" level="INFO">${RESULT} = [{'diff': 0.0001100830000000004}, {'diff': 0.00011029200000000142}, {'diff': 0.000109902999999998}, {'diff': 0.00011027799999999838}, {'diff': 0.00010984699999999972}, {'diff': 0.00010997199999999985}...</msg>
<status status="PASS" starttime="20201030 15:52:27.971" endtime="20201030 15:52:27.975"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:27.979" level="INFO">${ACCURACY} = {'diff': [0.0001100830000000004, 0.00011029200000000142, 0.000109902999999998, 0.00011027799999999838, 0.00010984699999999972, 0.00010997199999999985, 0.00011037499999999936, 0.00011045800000000078, 0...</msg>
<status status="PASS" starttime="20201030 15:52:27.975" endtime="20201030 15:52:27.979"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:27.984" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201030 15:52:27.983" endtime="20201030 15:52:27.984"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:27.986" level="INFO">VALUE: [0.0001100830000000004, 0.00011029200000000142, 0.000109902999999998, 0.00011027799999999838, 0.00010984699999999972, 0.00010997199999999985, 0.00011037499999999936, 0.00011045800000000078, 0.00011059700000000047, 0.00010963900000000165, 0.00010995799999999681, 0.00011027800000000185, 0.00011058299999999743, 0.00011058399999999691, 0.0001105419999999982, 0.00011012499999999911, 0.00011045900000000025, 0.00011036099999999979, 0.00011029099999999847, 0.0001102769999999989, 0.00011061100000000004, 0.00011047299999999982, 0.000110596999999997, 0.00011033300000000065, 0.00011029100000000194, 0.000110209, 0.00011015299999999825, 0.00011004200000000117, 0.00010977800000000135, 0.00011009699999999997, 0.00010976399999999831, 0.00011017999999999792, 0.00010977700000000187, 0.00011051399999999906, 0.00011045900000000025, 0.0001102220000000001, 0.0001098890000000019, 0.00011048599999999992, 0.00011016700000000129, 0.00010966699999999732, 0.00011032000000000056, 0.00010991699999999757, 0.00010988800000000243, 0.00011019500000000043, 0.00010984699999999972, 0.00011042999999999817, 0.00011013899999999868, 0.00010972299999999907, 0.00011009699999999997, 0.00011056899999999786]</msg>
<status status="PASS" starttime="20201030 15:52:27.985" endtime="20201030 15:52:27.987"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.980" endtime="20201030 15:52:27.987"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:27.991" endtime="20201030 15:52:28.010"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.989" endtime="20201030 15:52:28.011"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.988" endtime="20201030 15:52:28.011"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.630" endtime="20201030 15:52:28.012"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.629" endtime="20201030 15:52:28.012"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:28.020" endtime="20201030 15:52:28.040"></status>
</kw>
<msg timestamp="20201030 15:52:28.041" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:28.019" endtime="20201030 15:52:28.041"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:28.043" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:28.042" endtime="20201030 15:52:28.044"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:28.044" endtime="20201030 15:52:28.046"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.016" endtime="20201030 15:52:28.046"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.014" endtime="20201030 15:52:28.047"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:28.053" endtime="20201030 15:52:28.340"></status>
</kw>
<msg timestamp="20201030 15:52:28.343" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021607014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021718861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:28.052" endtime="20201030 15:52:28.343"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:28.351" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021607014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021718861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:28.344" endtime="20201030 15:52:28.352"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:28.352" endtime="20201030 15:52:28.354"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.049" endtime="20201030 15:52:28.354"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.047" endtime="20201030 15:52:28.355"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:28.359" level="INFO">${RESULT} = [{'diff': 0.00011184699999999825}, {'diff': 0.00011079199999999845}, {'diff': 0.00011109700000000097}, {'diff': 0.00011116700000000229}, {'diff': 0.00011073600000000017}, {'diff': 0.000111417000000002...</msg>
<status status="PASS" starttime="20201030 15:52:28.356" endtime="20201030 15:52:28.359"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:28.363" level="INFO">${ACCURACY} = {'diff': [0.00011184699999999825, 0.00011079199999999845, 0.00011109700000000097, 0.00011116700000000229, 0.00011073600000000017, 0.00011141700000000254, 0.00011126400000000328, 0.00011105599999999827...</msg>
<status status="PASS" starttime="20201030 15:52:28.360" endtime="20201030 15:52:28.363"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:28.367" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201030 15:52:28.366" endtime="20201030 15:52:28.367"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:28.369" level="INFO">VALUE: [0.00011184699999999825, 0.00011079199999999845, 0.00011109700000000097, 0.00011116700000000229, 0.00011073600000000017, 0.00011141700000000254, 0.00011126400000000328, 0.00011105599999999827, 0.00011133300000000165, 0.00011066700000000179, 0.00011116699999999882, 0.0001112220000000011, 0.00011130499999999904, 0.0001107769999999994, 0.00011161200000000052, 0.00011076399999999931, 0.00011102799999999913, 0.00011079199999999845, 0.00011133300000000165, 0.00011150000000000049, 0.00011084700000000072, 0.00011147200000000135, 0.00011099999999999999, 0.00011062499999999961, 0.00011106999999999784, 0.00011159800000000095, 0.00011070899999999703, 0.00011109700000000097, 0.00011066600000000232, 0.0001110419999999987, 0.00011109800000000045, 0.00011095900000000075, 0.00011091699999999857, 0.00011115299999999925, 0.00011066699999999832, 0.00011097300000000032, 0.00011108400000000088, 0.00011092999999999867, 0.00011147300000000082, 0.00011144500000000168, 0.00011151400000000006, 0.0001107220000000006, 0.00011102700000000312, 0.00011070800000000103, 0.0001113480000000007, 0.00011161100000000104, 0.00011150000000000049, 0.0001114029999999995, 0.00011090199999999953, 0.00011083399999999716]</msg>
<status status="PASS" starttime="20201030 15:52:28.368" endtime="20201030 15:52:28.370"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.363" endtime="20201030 15:52:28.371"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:28.374" endtime="20201030 15:52:28.394"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.373" endtime="20201030 15:52:28.394"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.372" endtime="20201030 15:52:28.395"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.013" endtime="20201030 15:52:28.395"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.012" endtime="20201030 15:52:28.395"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:28.403" endtime="20201030 15:52:28.427"></status>
</kw>
<msg timestamp="20201030 15:52:28.427" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:28.402" endtime="20201030 15:52:28.428"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:28.430" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:28.428" endtime="20201030 15:52:28.430"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:28.431" endtime="20201030 15:52:28.433"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.399" endtime="20201030 15:52:28.433"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.397" endtime="20201030 15:52:28.433"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:28.440" endtime="20201030 15:52:28.725"></status>
</kw>
<msg timestamp="20201030 15:52:28.728" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024555556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024667472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:28.438" endtime="20201030 15:52:28.728"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:28.736" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024555556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024667472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:28.729" endtime="20201030 15:52:28.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:28.737" endtime="20201030 15:52:28.739"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.436" endtime="20201030 15:52:28.739"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.434" endtime="20201030 15:52:28.740"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:28.744" level="INFO">${RESULT} = [{'diff': 0.0001119160000000001}, {'diff': 0.00011197200000000185}, {'diff': 0.00011241700000000007}, {'diff': 0.00011172199999999813}, {'diff': 0.00011173600000000117}, {'diff': 0.0001117360000000011...</msg>
<status status="PASS" starttime="20201030 15:52:28.740" endtime="20201030 15:52:28.744"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:28.748" level="INFO">${ACCURACY} = {'diff': [0.0001119160000000001, 0.00011197200000000185, 0.00011241700000000007, 0.00011172199999999813, 0.00011173600000000117, 0.00011173600000000117, 0.00011179199999999945, 0.00011225000000000124,...</msg>
<status status="PASS" starttime="20201030 15:52:28.745" endtime="20201030 15:52:28.748"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:28.752" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201030 15:52:28.751" endtime="20201030 15:52:28.752"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:28.754" level="INFO">VALUE: [0.0001119160000000001, 0.00011197200000000185, 0.00011241700000000007, 0.00011172199999999813, 0.00011173600000000117, 0.00011173600000000117, 0.00011179199999999945, 0.00011225000000000124, 0.00011165299999999975, 0.00011252700000000115, 0.0001120830000000024, 0.00011212500000000111, 0.00011252800000000063, 0.00011202800000000013, 0.00011261200000000152, 0.00011261100000000204, 0.00011166699999999932, 0.00011216700000000329, 0.0001124030000000005, 0.00011190200000000053, 0.00011215200000000078, 0.00011247200000000235, 0.00011256999999999934, 0.00011245799999999931, 0.000111903, 0.00011222199999999863, 0.00011170799999999856, 0.0001124030000000005, 0.00011262500000000161, 0.00011197199999999838, 0.00011236100000000179, 0.00011231899999999961, 0.0001117220000000016, 0.00011187500000000086, 0.00011247199999999888, 0.00011240199999999756, 0.0001122770000000009, 0.00011247200000000235, 0.00011197199999999838, 0.00011211100000000154, 0.00011209700000000544, 0.00011184699999999825, 0.00011169400000000246, 0.00011163900000000365, 0.00011172199999999466, 0.00011240299999999703, 0.00011243099999999617, 0.00011186100000000476, 0.00011215299999999678, 0.00011206899999999936]</msg>
<status status="PASS" starttime="20201030 15:52:28.753" endtime="20201030 15:52:28.756"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.748" endtime="20201030 15:52:28.756"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:28.760" endtime="20201030 15:52:28.779"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.758" endtime="20201030 15:52:28.780"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.757" endtime="20201030 15:52:28.780"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.396" endtime="20201030 15:52:28.781"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.395" endtime="20201030 15:52:28.781"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:28.789" endtime="20201030 15:52:28.809"></status>
</kw>
<msg timestamp="20201030 15:52:28.810" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:28.788" endtime="20201030 15:52:28.810"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:28.812" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:28.811" endtime="20201030 15:52:28.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:28.813" endtime="20201030 15:52:28.815"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.785" endtime="20201030 15:52:28.815"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.783" endtime="20201030 15:52:28.816"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:28.822" endtime="20201030 15:52:29.106"></status>
</kw>
<msg timestamp="20201030 15:52:29.109" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021219611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021333194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:28.821" endtime="20201030 15:52:29.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:29.117" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021219611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021333194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:29.110" endtime="20201030 15:52:29.117"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:29.118" endtime="20201030 15:52:29.120"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.818" endtime="20201030 15:52:29.120"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.816" endtime="20201030 15:52:29.121"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:29.125" level="INFO">${RESULT} = [{'diff': 0.00011358300000000043}, {'diff': 0.00011351400000000206}, {'diff': 0.00011262500000000161}, {'diff': 0.00011326400000000181}, {'diff': 0.00011308299999999993}, {'diff': 0.000112958999999999...</msg>
<status status="PASS" starttime="20201030 15:52:29.122" endtime="20201030 15:52:29.125"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:29.129" level="INFO">${ACCURACY} = {'diff': [0.00011358300000000043, 0.00011351400000000206, 0.00011262500000000161, 0.00011326400000000181, 0.00011308299999999993, 0.00011295899999999928, 0.0001130969999999995, 0.0001134030000000015, ...</msg>
<status status="PASS" starttime="20201030 15:52:29.126" endtime="20201030 15:52:29.130"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:29.134" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201030 15:52:29.133" endtime="20201030 15:52:29.134"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:29.136" level="INFO">VALUE: [0.00011358300000000043, 0.00011351400000000206, 0.00011262500000000161, 0.00011326400000000181, 0.00011308299999999993, 0.00011295899999999928, 0.0001130969999999995, 0.0001134030000000015, 0.00011301399999999809, 0.000112903000000001, 0.00011356900000000086, 0.0001127359999999987, 0.00011290200000000153, 0.00011288900000000143, 0.00011319499999999996, 0.00011331900000000061, 0.0001134030000000015, 0.00011283300000000315, 0.00011351399999999859, 0.00011341700000000107, 0.00011326399999999834, 0.00011288899999999796, 0.00011274999999999827, 0.00011262499999999814, 0.00011306900000000036, 0.00011281900000000011, 0.0001128749999999984, 0.00011281999999999959, 0.00011291700000000057, 0.00011313800000000221, 0.0001133749999999989, 0.0001127359999999987, 0.00011308299999999993, 0.00011323600000000267, 0.000112903000000001, 0.00011301400000000156, 0.0001130969999999995, 0.00011329199999999748, 0.00011349999999999902, 0.00011349999999999902, 0.00011320800000000006, 0.00011323600000000267, 0.00011290200000000153, 0.00011352799999999816, 0.00011357000000000034, 0.00011283299999999968, 0.00011312499999999864, 0.00011316700000000082, 0.0001130969999999995, 0.00011262500000000161]</msg>
<status status="PASS" starttime="20201030 15:52:29.135" endtime="20201030 15:52:29.137"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.130" endtime="20201030 15:52:29.137"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:29.141" endtime="20201030 15:52:29.161"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.140" endtime="20201030 15:52:29.161"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.138" endtime="20201030 15:52:29.162"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.782" endtime="20201030 15:52:29.162"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.781" endtime="20201030 15:52:29.162"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:29.171" endtime="20201030 15:52:29.192"></status>
</kw>
<msg timestamp="20201030 15:52:29.192" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:29.170" endtime="20201030 15:52:29.193"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:29.195" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:29.193" endtime="20201030 15:52:29.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:29.196" endtime="20201030 15:52:29.197"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.167" endtime="20201030 15:52:29.198"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.165" endtime="20201030 15:52:29.198"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:29.205" endtime="20201030 15:52:29.492"></status>
</kw>
<msg timestamp="20201030 15:52:29.495" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022623181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022737431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:29.203" endtime="20201030 15:52:29.495"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:29.502" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022623181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022737431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:29.496" endtime="20201030 15:52:29.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:29.504" endtime="20201030 15:52:29.505"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.201" endtime="20201030 15:52:29.506"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.199" endtime="20201030 15:52:29.506"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:29.510" level="INFO">${RESULT} = [{'diff': 0.00011424999999999977}, {'diff': 0.00011433299999999771}, {'diff': 0.00011424999999999977}, {'diff': 0.00011365300000000175}, {'diff': 0.0001143749999999999}, {'diff': 0.0001141390000000026...</msg>
<status status="PASS" starttime="20201030 15:52:29.507" endtime="20201030 15:52:29.510"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:29.514" level="INFO">${ACCURACY} = {'diff': [0.00011424999999999977, 0.00011433299999999771, 0.00011424999999999977, 0.00011365300000000175, 0.0001143749999999999, 0.00011413900000000268, 0.00011459799999999701, 0.00011458299999999796,...</msg>
<status status="PASS" starttime="20201030 15:52:29.511" endtime="20201030 15:52:29.514"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:29.518" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201030 15:52:29.517" endtime="20201030 15:52:29.519"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:29.521" level="INFO">VALUE: [0.00011424999999999977, 0.00011433299999999771, 0.00011424999999999977, 0.00011365300000000175, 0.0001143749999999999, 0.00011413900000000268, 0.00011459799999999701, 0.00011458299999999796, 0.00011458299999999796, 0.0001140420000000017, 0.00011377799999999841, 0.0001140970000000005, 0.00011420900000000053, 0.00011426400000000281, 0.00011413899999999921, 0.00011370800000000056, 0.00011413799999999974, 0.00011370900000000003, 0.00011369500000000046, 0.000114597000000001, 0.00011366600000000185, 0.00011445799999999784, 0.00011426399999999934, 0.00011376399999999884, 0.00011432000000000109, 0.00011415299999999878, 0.0001137359999999997, 0.00011379199999999798, 0.000114290999999999, 0.00011394400000000124, 0.00011376400000000231, 0.00011366699999999785, 0.00011366700000000132, 0.00011415199999999931, 0.00011401399999999909, 0.00011372200000000013, 0.00011380500000000154, 0.00011450000000000002, 0.00011426399999999934, 0.00011383300000000068, 0.00011388899999999896, 0.0001138749999999994, 0.00011452699999999968, 0.00011433400000000066, 0.00011374999999999927, 0.00011424999999999977, 0.00011450000000000002, 0.00011415299999999878, 0.0001142360000000002, 0.00011401399999999909]</msg>
<status status="PASS" starttime="20201030 15:52:29.519" endtime="20201030 15:52:29.522"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.515" endtime="20201030 15:52:29.522"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:29.526" endtime="20201030 15:52:29.545"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.524" endtime="20201030 15:52:29.546"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.523" endtime="20201030 15:52:29.546"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.163" endtime="20201030 15:52:29.546"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.163" endtime="20201030 15:52:29.546"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:29.555" endtime="20201030 15:52:29.576"></status>
</kw>
<msg timestamp="20201030 15:52:29.577" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:29.553" endtime="20201030 15:52:29.577"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:29.579" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:29.578" endtime="20201030 15:52:29.579"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:29.580" endtime="20201030 15:52:29.582"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.551" endtime="20201030 15:52:29.582"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.549" endtime="20201030 15:52:29.583"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:29.589" endtime="20201030 15:52:29.875"></status>
</kw>
<msg timestamp="20201030 15:52:29.878" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022384847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022500181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:29.587" endtime="20201030 15:52:29.878"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:29.887" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022384847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022500181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:29.879" endtime="20201030 15:52:29.887"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:29.888" endtime="20201030 15:52:29.890"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.585" endtime="20201030 15:52:29.890"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.583" endtime="20201030 15:52:29.891"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:29.895" level="INFO">${RESULT} = [{'diff': 0.00011533400000000166}, {'diff': 0.00011506900000000236}, {'diff': 0.00011498599999999748}, {'diff': 0.00011525000000000077}, {'diff': 0.00011511100000000107}, {'diff': 0.000115431000000002...</msg>
<status status="PASS" starttime="20201030 15:52:29.892" endtime="20201030 15:52:29.895"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:29.899" level="INFO">${ACCURACY} = {'diff': [0.00011533400000000166, 0.00011506900000000236, 0.00011498599999999748, 0.00011525000000000077, 0.00011511100000000107, 0.00011543100000000264, 0.00011516699999999935, 0.00011484699999999778...</msg>
<status status="PASS" starttime="20201030 15:52:29.896" endtime="20201030 15:52:29.899"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:29.903" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201030 15:52:29.902" endtime="20201030 15:52:29.903"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:29.905" level="INFO">VALUE: [0.00011533400000000166, 0.00011506900000000236, 0.00011498599999999748, 0.00011525000000000077, 0.00011511100000000107, 0.00011543100000000264, 0.00011516699999999935, 0.00011484699999999778, 0.00011552800000000016, 0.00011476399999999984, 0.00011509800000000098, 0.00011488899999999996, 0.00011519400000000249, 0.00011550000000000102, 0.00011558399999999844, 0.00011517999999999945, 0.00011475000000000027, 0.00011463899999999971, 0.00011551400000000059, 0.00011554100000000025, 0.0001148750000000004, 0.00011530600000000252, 0.00011506999999999837, 0.00011547199999999841, 0.00011494500000000171, 0.0001154299999999997, 0.00011470800000000156, 0.00011558300000000243, 0.00011501400000000009, 0.00011495800000000181, 0.00011484800000000073, 0.00011552800000000016, 0.00011480499999999907, 0.00011525000000000077, 0.00011477799999999941, 0.00011494500000000171, 0.00011527799999999991, 0.00011512500000000064, 0.00011500000000000052, 0.00011513900000000021, 0.00011500000000000052, 0.00011541600000000013, 0.00011534700000000175, 0.00011552800000000016, 0.00011501400000000009, 0.00011512500000000064, 0.00011525000000000077, 0.00011519399999999902, 0.00011541600000000013, 0.00011551400000000059]</msg>
<status status="PASS" starttime="20201030 15:52:29.904" endtime="20201030 15:52:29.907"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.899" endtime="20201030 15:52:29.907"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:29.911" endtime="20201030 15:52:29.931"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.910" endtime="20201030 15:52:29.931"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.908" endtime="20201030 15:52:29.931"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.547" endtime="20201030 15:52:29.932"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.547" endtime="20201030 15:52:29.932"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:29.940" endtime="20201030 15:52:29.961"></status>
</kw>
<msg timestamp="20201030 15:52:29.961" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:29.939" endtime="20201030 15:52:29.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:29.964" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:29.962" endtime="20201030 15:52:29.964"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:29.965" endtime="20201030 15:52:29.966"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.936" endtime="20201030 15:52:29.967"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.934" endtime="20201030 15:52:29.967"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:29.973" endtime="20201030 15:52:30.260"></status>
</kw>
<msg timestamp="20201030 15:52:30.264" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021310903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02142725, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:52:29.972" endtime="20201030 15:52:30.264"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:30.272" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021310903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02142725, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:52:30.265" endtime="20201030 15:52:30.272"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:30.273" endtime="20201030 15:52:30.274"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.969" endtime="20201030 15:52:30.275"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.968" endtime="20201030 15:52:30.275"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:30.279" level="INFO">${RESULT} = [{'diff': 0.00011634699999999928}, {'diff': 0.00011616700000000035}, {'diff': 0.00011577799999999694}, {'diff': 0.0001158750000000014}, {'diff': 0.00011572299999999813}, {'diff': 0.0001159719999999989...</msg>
<status status="PASS" starttime="20201030 15:52:30.276" endtime="20201030 15:52:30.279"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:30.285" level="INFO">${ACCURACY} = {'diff': [0.00011634699999999928, 0.00011616700000000035, 0.00011577799999999694, 0.0001158750000000014, 0.00011572299999999813, 0.00011597199999999891, 0.00011623599999999873, 0.0001160559999999998, ...</msg>
<status status="PASS" starttime="20201030 15:52:30.280" endtime="20201030 15:52:30.285"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:30.289" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201030 15:52:30.288" endtime="20201030 15:52:30.290"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:30.292" level="INFO">VALUE: [0.00011634699999999928, 0.00011616700000000035, 0.00011577799999999694, 0.0001158750000000014, 0.00011572299999999813, 0.00011597199999999891, 0.00011623599999999873, 0.0001160559999999998, 0.0001162360000000022, 0.00011586099999999835, 0.00011648599999999898, 0.00011608299999999946, 0.00011602700000000118, 0.00011588900000000096, 0.00011651399999999812, 0.00011647199999999941, 0.00011572199999999866, 0.00011636100000000232, 0.00011604100000000075, 0.00011584699999999878, 0.00011654200000000073, 0.00011580599999999955, 0.00011595799999999934, 0.0001157910000000005, 0.00011597199999999891, 0.0001163750000000019, 0.00011563900000000071, 0.00011599999999999805, 0.00011647199999999941, 0.00011612499999999817, 0.00011634699999999928, 0.00011638900000000146, 0.00011649999999999855, 0.00011658299999999996, 0.00011584699999999878, 0.00011620799999999959, 0.00011613900000000121, 0.00011588900000000096, 0.0001165690000000004, 0.00011597199999999891, 0.00011584700000000225, 0.00011597300000000185, 0.00011608299999999946, 0.00011602800000000066, 0.00011662499999999867, 0.00011572199999999866, 0.00011658299999999996, 0.00011620800000000306, 0.00011658399999999944, 0.00011641599999999766]</msg>
<status status="PASS" starttime="20201030 15:52:30.290" endtime="20201030 15:52:30.293"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.286" endtime="20201030 15:52:30.293"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:30.297" endtime="20201030 15:52:30.316"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.295" endtime="20201030 15:52:30.317"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.294" endtime="20201030 15:52:30.317"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.933" endtime="20201030 15:52:30.317"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.932" endtime="20201030 15:52:30.317"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:30.326" endtime="20201030 15:52:30.346"></status>
</kw>
<msg timestamp="20201030 15:52:30.347" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:30.324" endtime="20201030 15:52:30.347"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:30.349" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:30.348" endtime="20201030 15:52:30.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:30.350" endtime="20201030 15:52:30.352"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.322" endtime="20201030 15:52:30.352"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.320" endtime="20201030 15:52:30.353"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:30.359" endtime="20201030 15:52:30.645"></status>
</kw>
<msg timestamp="20201030 15:52:30.648" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021354653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021471667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:30.357" endtime="20201030 15:52:30.648"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:30.656" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021354653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021471667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:30.649" endtime="20201030 15:52:30.656"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:30.657" endtime="20201030 15:52:30.659"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.355" endtime="20201030 15:52:30.659"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.353" endtime="20201030 15:52:30.660"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:30.663" level="INFO">${RESULT} = [{'diff': 0.00011701399999999862}, {'diff': 0.00011677800000000141}, {'diff': 0.00011708300000000046}, {'diff': 0.00011665200000000181}, {'diff': 0.00011677800000000141}, {'diff': 0.000117388999999999...</msg>
<status status="PASS" starttime="20201030 15:52:30.660" endtime="20201030 15:52:30.664"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:30.667" level="INFO">${ACCURACY} = {'diff': [0.00011701399999999862, 0.00011677800000000141, 0.00011708300000000046, 0.00011665200000000181, 0.00011677800000000141, 0.000117388999999999, 0.00011752800000000216, 0.00011702699999999872, ...</msg>
<status status="PASS" starttime="20201030 15:52:30.664" endtime="20201030 15:52:30.668"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:30.672" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201030 15:52:30.671" endtime="20201030 15:52:30.672"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:30.674" level="INFO">VALUE: [0.00011701399999999862, 0.00011677800000000141, 0.00011708300000000046, 0.00011665200000000181, 0.00011677800000000141, 0.000117388999999999, 0.00011752800000000216, 0.00011702699999999872, 0.00011727699999999897, 0.00011679099999999804, 0.00011744400000000127, 0.00011754099999999879, 0.00011701400000000209, 0.00011665300000000128, 0.00011701399999999862, 0.00011666700000000085, 0.00011680600000000055, 0.00011665300000000128, 0.00011719400000000102, 0.00011727799999999844, 0.00011699999999999905, 0.00011752800000000216, 0.00011705500000000132, 0.00011698599999999948, 0.00011707000000000037, 0.00011697199999999991, 0.00011669400000000052, 0.00011672199999999966, 0.00011709700000000003, 0.00011752799999999869, 0.00011698599999999948, 0.00011758300000000096, 0.00011679200000000098, 0.00011715300000000178, 0.00011727800000000191, 0.00011670899999999956, 0.00011683300000000021, 0.00011748599999999998, 0.00011673599999999923, 0.0001170560000000008, 0.00011697199999999991, 0.00011754199999999826, 0.00011759700000000053, 0.00011754199999999826, 0.00011722200000000016, 0.00011759800000000001, 0.00011729200000000148, 0.0001167360000000027, 0.00011762499999999967, 0.00011680600000000055]</msg>
<status status="PASS" starttime="20201030 15:52:30.673" endtime="20201030 15:52:30.735"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.668" endtime="20201030 15:52:30.735"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:30.739" endtime="20201030 15:52:30.758"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.737" endtime="20201030 15:52:30.759"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.736" endtime="20201030 15:52:30.759"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.318" endtime="20201030 15:52:30.759"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.318" endtime="20201030 15:52:30.760"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:30.768" endtime="20201030 15:52:30.790"></status>
</kw>
<msg timestamp="20201030 15:52:30.790" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:30.767" endtime="20201030 15:52:30.790"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:30.793" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:30.791" endtime="20201030 15:52:30.793"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:30.794" endtime="20201030 15:52:30.795"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.764" endtime="20201030 15:52:30.796"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.762" endtime="20201030 15:52:30.796"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:30.803" endtime="20201030 15:52:31.088"></status>
</kw>
<msg timestamp="20201030 15:52:31.091" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022391875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022510278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:30.801" endtime="20201030 15:52:31.091"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:31.099" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022391875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022510278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:31.092" endtime="20201030 15:52:31.099"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:31.100" endtime="20201030 15:52:31.101"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.798" endtime="20201030 15:52:31.102"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.797" endtime="20201030 15:52:31.102"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:31.106" level="INFO">${RESULT} = [{'diff': 0.00011840300000000303}, {'diff': 0.00011859699999999807}, {'diff': 0.00011826399999999987}, {'diff': 0.00011820799999999812}, {'diff': 0.00011808400000000094}, {'diff': 0.000118334000000001...</msg>
<status status="PASS" starttime="20201030 15:52:31.103" endtime="20201030 15:52:31.106"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:31.110" level="INFO">${ACCURACY} = {'diff': [0.00011840300000000303, 0.00011859699999999807, 0.00011826399999999987, 0.00011820799999999812, 0.00011808400000000094, 0.00011833400000000119, 0.00011809699999999757, 0.00011845799999999837...</msg>
<status status="PASS" starttime="20201030 15:52:31.107" endtime="20201030 15:52:31.110"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:31.114" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201030 15:52:31.113" endtime="20201030 15:52:31.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:31.117" level="INFO">VALUE: [0.00011840300000000303, 0.00011859699999999807, 0.00011826399999999987, 0.00011820799999999812, 0.00011808400000000094, 0.00011833400000000119, 0.00011809699999999757, 0.00011845799999999837, 0.00011813899999999974, 0.00011776399999999937, 0.00011813899999999974, 0.00011851299999999718, 0.0001179170000000021, 0.00011790300000000253, 0.00011820799999999812, 0.00011804199999999876, 0.00011809700000000103, 0.0001178889999999995, 0.00011772200000000066, 0.00011804100000000275, 0.00011822200000000116, 0.00011795900000000081, 0.0001179439999999983, 0.00011808300000000146, 0.0001185829999999985, 0.00011832000000000162, 0.000118389, 0.00011808400000000094, 0.00011849999999999708, 0.00011823600000000073, 0.00011790199999999959, 0.00011820800000000159, 0.00011852799999999969, 0.00011765299999999881, 0.00011809700000000103, 0.00011823600000000073, 0.0001183049999999991, 0.00011826399999999987, 0.00011820799999999812, 0.00011784800000000026, 0.00011858399999999797, 0.00011851400000000012, 0.00011790299999999906, 0.00011845799999999837, 0.00011773600000000023, 0.0001180699999999979, 0.00011816599999999941, 0.00011809699999999757, 0.00011801399999999962, 0.00011770799999999762]</msg>
<status status="PASS" starttime="20201030 15:52:31.115" endtime="20201030 15:52:31.118"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.111" endtime="20201030 15:52:31.119"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:31.122" endtime="20201030 15:52:31.142"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.121" endtime="20201030 15:52:31.143"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.120" endtime="20201030 15:52:31.143"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.760" endtime="20201030 15:52:31.143"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.760" endtime="20201030 15:52:31.143"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:31.152" endtime="20201030 15:52:31.172"></status>
</kw>
<msg timestamp="20201030 15:52:31.173" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:31.150" endtime="20201030 15:52:31.173"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:31.175" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:31.174" endtime="20201030 15:52:31.175"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:31.176" endtime="20201030 15:52:31.178"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.148" endtime="20201030 15:52:31.178"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.146" endtime="20201030 15:52:31.179"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:31.185" endtime="20201030 15:52:31.472"></status>
</kw>
<msg timestamp="20201030 15:52:31.475" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021386819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021506653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:31.184" endtime="20201030 15:52:31.475"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:31.483" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021386819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021506653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:31.476" endtime="20201030 15:52:31.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:31.485" endtime="20201030 15:52:31.486"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.181" endtime="20201030 15:52:31.487"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.179" endtime="20201030 15:52:31.487"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:31.491" level="INFO">${RESULT} = [{'diff': 0.00011983399999999922}, {'diff': 0.00011890200000000059}, {'diff': 0.00011926400000000087}, {'diff': 0.00011940200000000109}, {'diff': 0.00011922200000000216}, {'diff': 0.000118666999999999...</msg>
<status status="PASS" starttime="20201030 15:52:31.488" endtime="20201030 15:52:31.491"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:31.496" level="INFO">${ACCURACY} = {'diff': [0.00011983399999999922, 0.00011890200000000059, 0.00011926400000000087, 0.00011940200000000109, 0.00011922200000000216, 0.00011866699999999938, 0.0001195829999999995, 0.00011909700000000203,...</msg>
<status status="PASS" starttime="20201030 15:52:31.492" endtime="20201030 15:52:31.496"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:31.500" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201030 15:52:31.499" endtime="20201030 15:52:31.501"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:31.503" level="INFO">VALUE: [0.00011983399999999922, 0.00011890200000000059, 0.00011926400000000087, 0.00011940200000000109, 0.00011922200000000216, 0.00011866699999999938, 0.0001195829999999995, 0.00011909700000000203, 0.00011909700000000203, 0.00011932000000000262, 0.00011923600000000173, 0.00011937500000000142, 0.00011906899999999943, 0.00011933299999999925, 0.0001188890000000005, 0.00011881999999999865, 0.00011954200000000026, 0.00011904199999999976, 0.0001196249999999982, 0.00011941700000000013, 0.00011919399999999955, 0.00011883400000000169, 0.00011948599999999851, 0.00011891699999999963, 0.00011909699999999857, 0.00011879100000000004, 0.00011920800000000259, 0.00011941700000000013, 0.00011933299999999925, 0.00011872199999999819, 0.00011918099999999945, 0.00011959700000000253, 0.00011883300000000221, 0.00011913800000000127, 0.00011884700000000178, 0.00011937500000000142, 0.00011893100000000267, 0.00011902800000000019, 0.00011934699999999882, 0.0001187370000000007, 0.00011877799999999994, 0.00011872199999999819, 0.00011908400000000194, 0.00011944499999999927, 0.00011947199999999894, 0.00011951399999999765, 0.00011876400000000037, 0.00011880599999999908, 0.00011877799999999994, 0.00011902800000000019]</msg>
<status status="PASS" starttime="20201030 15:52:31.502" endtime="20201030 15:52:31.504"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.497" endtime="20201030 15:52:31.504"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:31.508" endtime="20201030 15:52:31.527"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.506" endtime="20201030 15:52:31.528"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.505" endtime="20201030 15:52:31.528"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.144" endtime="20201030 15:52:31.528"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.144" endtime="20201030 15:52:31.528"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:31.537" endtime="20201030 15:52:31.557"></status>
</kw>
<msg timestamp="20201030 15:52:31.558" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:31.535" endtime="20201030 15:52:31.558"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:31.560" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:31.559" endtime="20201030 15:52:31.561"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:31.561" endtime="20201030 15:52:31.563"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.533" endtime="20201030 15:52:31.563"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.531" endtime="20201030 15:52:31.564"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:31.570" endtime="20201030 15:52:31.857"></status>
</kw>
<msg timestamp="20201030 15:52:31.860" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021376083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021496819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:31.569" endtime="20201030 15:52:31.860"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:31.868" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021376083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021496819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:31.861" endtime="20201030 15:52:31.868"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:31.869" endtime="20201030 15:52:31.871"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.566" endtime="20201030 15:52:31.871"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.564" endtime="20201030 15:52:31.871"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:31.875" level="INFO">${RESULT} = [{'diff': 0.00012073599999999976}, {'diff': 0.00011976400000000137}, {'diff': 0.00011959700000000253}, {'diff': 0.00012041599999999819}, {'diff': 0.0001197089999999991}, {'diff': 0.0001197500000000018...</msg>
<status status="PASS" starttime="20201030 15:52:31.872" endtime="20201030 15:52:31.875"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:31.879" level="INFO">${ACCURACY} = {'diff': [0.00012073599999999976, 0.00011976400000000137, 0.00011959700000000253, 0.00012041599999999819, 0.0001197089999999991, 0.0001197500000000018, 0.00011995899999999934, 0.00012044500000000027, ...</msg>
<status status="PASS" starttime="20201030 15:52:31.876" endtime="20201030 15:52:31.879"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:31.884" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201030 15:52:31.883" endtime="20201030 15:52:31.885"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:31.887" level="INFO">VALUE: [0.00012073599999999976, 0.00011976400000000137, 0.00011959700000000253, 0.00012041599999999819, 0.0001197089999999991, 0.0001197500000000018, 0.00011995899999999934, 0.00012044500000000027, 0.000120083, 0.00012041699999999766, 0.0001204440000000008, 0.0001197089999999991, 0.00012016700000000088, 0.00012052800000000169, 0.00012005499999999739, 0.00012001399999999815, 0.00012013899999999827, 0.00011969499999999952, 0.00012047199999999994, 0.00012026299999999893, 0.00011963900000000124, 0.0001200699999999999, 0.0001199310000000002, 0.00012009699999999957, 0.00012033300000000025, 0.00011987499999999846, 0.00012008400000000294, 0.00012038899999999852, 0.00011959700000000253, 0.0001196249999999982, 0.00012005500000000086, 0.00012001399999999815, 0.00012013900000000174, 0.00012038899999999852, 0.0001205830000000005, 0.00012009699999999957, 0.0001197500000000018, 0.00011984699999999932, 0.00011965299999999734, 0.00012002799999999772, 0.00011995899999999934, 0.00012020800000000012, 0.00012006900000000043, 0.00012001299999999868, 0.00011994499999999977, 0.00012056899999999746, 0.000120083, 0.00011987499999999846, 0.00012037500000000242, 0.0001198890000000015]</msg>
<status status="PASS" starttime="20201030 15:52:31.886" endtime="20201030 15:52:31.888"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.880" endtime="20201030 15:52:31.888"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:31.892" endtime="20201030 15:52:31.911"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.890" endtime="20201030 15:52:31.912"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.889" endtime="20201030 15:52:31.912"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.529" endtime="20201030 15:52:31.913"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.529" endtime="20201030 15:52:31.913"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:31.921" endtime="20201030 15:52:31.945"></status>
</kw>
<msg timestamp="20201030 15:52:31.945" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:31.920" endtime="20201030 15:52:31.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:31.948" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:31.946" endtime="20201030 15:52:31.948"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:31.949" endtime="20201030 15:52:31.951"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.917" endtime="20201030 15:52:31.951"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.915" endtime="20201030 15:52:31.952"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:31.958" endtime="20201030 15:52:32.242"></status>
</kw>
<msg timestamp="20201030 15:52:32.245" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024532861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024654389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:31.956" endtime="20201030 15:52:32.245"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:32.253" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024532861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024654389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:32.246" endtime="20201030 15:52:32.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:32.254" endtime="20201030 15:52:32.256"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.954" endtime="20201030 15:52:32.256"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.952" endtime="20201030 15:52:32.257"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:32.261" level="INFO">${RESULT} = [{'diff': 0.00012152799999999922}, {'diff': 0.00012101399999999915}, {'diff': 0.00012148600000000051}, {'diff': 0.00012063900000000224}, {'diff': 0.00012066699999999791}, {'diff': 0.000120804999999998...</msg>
<status status="PASS" starttime="20201030 15:52:32.258" endtime="20201030 15:52:32.261"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:32.265" level="INFO">${ACCURACY} = {'diff': [0.00012152799999999922, 0.00012101399999999915, 0.00012148600000000051, 0.00012063900000000224, 0.00012066699999999791, 0.00012080499999999814, 0.00012158299999999803, 0.00012082000000000065...</msg>
<status status="PASS" starttime="20201030 15:52:32.262" endtime="20201030 15:52:32.265"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:32.269" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201030 15:52:32.268" endtime="20201030 15:52:32.269"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:32.272" level="INFO">VALUE: [0.00012152799999999922, 0.00012101399999999915, 0.00012148600000000051, 0.00012063900000000224, 0.00012066699999999791, 0.00012080499999999814, 0.00012158299999999803, 0.00012082000000000065, 0.0001214579999999979, 0.00012074999999999933, 0.00012115299999999884, 0.00012111100000000014, 0.00012152799999999922, 0.00012088799999999955, 0.00012065199999999887, 0.00012119399999999808, 0.00012142999999999876, 0.0001208189999999977, 0.000121389000000003, 0.00012063900000000224, 0.00012070800000000062, 0.0001211249999999997, 0.00012111100000000014, 0.00012082000000000065, 0.00012062500000000267, 0.00012119499999999755, 0.00012141700000000213, 0.0001214029999999991, 0.00012154099999999932, 0.0001211249999999997, 0.00012063899999999877, 0.00012106900000000143, 0.00012155600000000183, 0.00012115300000000231, 0.00012130599999999811, 0.00012065299999999834, 0.00012070800000000062, 0.000121083000000001, 0.0001210969999999971, 0.00012116599999999894, 0.00012090300000000553, 0.0001214029999999991, 0.0001209449999999973, 0.00012055500000000136, 0.00012158299999999456, 0.0001215830000000015, 0.00012102800000000219, 0.00012069499999999705, 0.0001208329999999938, 0.00012120799999999765]</msg>
<status status="PASS" starttime="20201030 15:52:32.270" endtime="20201030 15:52:32.273"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.265" endtime="20201030 15:52:32.274"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:32.277" endtime="20201030 15:52:32.297"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.276" endtime="20201030 15:52:32.297"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.275" endtime="20201030 15:52:32.298"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.914" endtime="20201030 15:52:32.298"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.913" endtime="20201030 15:52:32.298"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:32.306" endtime="20201030 15:52:32.327"></status>
</kw>
<msg timestamp="20201030 15:52:32.328" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:32.305" endtime="20201030 15:52:32.328"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:32.330" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:32.329" endtime="20201030 15:52:32.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:32.331" endtime="20201030 15:52:32.333"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.302" endtime="20201030 15:52:32.333"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.300" endtime="20201030 15:52:32.334"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:32.340" endtime="20201030 15:52:32.626"></status>
</kw>
<msg timestamp="20201030 15:52:32.629" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021395764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021518236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:32.338" endtime="20201030 15:52:32.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:32.637" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021395764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021518236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:32.630" endtime="20201030 15:52:32.637"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:32.638" endtime="20201030 15:52:32.639"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.336" endtime="20201030 15:52:32.640"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.334" endtime="20201030 15:52:32.640"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:32.644" level="INFO">${RESULT} = [{'diff': 0.00012247199999999847}, {'diff': 0.00012255499999999989}, {'diff': 0.00012243099999999923}, {'diff': 0.00012199999999999711}, {'diff': 0.00012232000000000215}, {'diff': 0.000122125000000000...</msg>
<status status="PASS" starttime="20201030 15:52:32.641" endtime="20201030 15:52:32.644"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:32.649" level="INFO">${ACCURACY} = {'diff': [0.00012247199999999847, 0.00012255499999999989, 0.00012243099999999923, 0.00012199999999999711, 0.00012232000000000215, 0.0001221250000000007, 0.00012229199999999954, 0.00012233400000000172,...</msg>
<status status="PASS" starttime="20201030 15:52:32.645" endtime="20201030 15:52:32.649"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:32.653" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201030 15:52:32.652" endtime="20201030 15:52:32.654"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:32.656" level="INFO">VALUE: [0.00012247199999999847, 0.00012255499999999989, 0.00012243099999999923, 0.00012199999999999711, 0.00012232000000000215, 0.0001221250000000007, 0.00012229199999999954, 0.00012233400000000172, 0.00012170899999999762, 0.00012219399999999908, 0.00012241699999999966, 0.00012211100000000114, 0.00012213900000000028, 0.00012169399999999858, 0.00012254100000000032, 0.00012206899999999896, 0.00012165199999999987, 0.00012179099999999957, 0.00012166699999999891, 0.00012200000000000058, 0.00012186100000000089, 0.00012175000000000033, 0.0001216250000000002, 0.00012197200000000144, 0.00012236200000000086, 0.00012197200000000144, 0.0001219440000000023, 0.00012188900000000003, 0.00012186100000000089, 0.0001224449999999988, 0.00012236099999999792, 0.00012209700000000157, 0.0001222770000000005, 0.0001224999999999976, 0.0001216250000000002, 0.0001223059999999991, 0.00012179200000000251, 0.00012200000000000058, 0.00012182000000000165, 0.00012200000000000058, 0.00012236200000000086, 0.00012186100000000089, 0.00012250000000000108, 0.00012200000000000058, 0.00012198600000000101, 0.00012213900000000028, 0.00012227799999999997, 0.00012261100000000164, 0.00012161099999999717, 0.00012212499999999724]</msg>
<status status="PASS" starttime="20201030 15:52:32.654" endtime="20201030 15:52:32.656"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.650" endtime="20201030 15:52:32.657"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:32.661" endtime="20201030 15:52:32.680"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.659" endtime="20201030 15:52:32.681"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.658" endtime="20201030 15:52:32.681"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.299" endtime="20201030 15:52:32.681"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.298" endtime="20201030 15:52:32.681"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:32.691" endtime="20201030 15:52:32.712"></status>
</kw>
<msg timestamp="20201030 15:52:32.712" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:32.689" endtime="20201030 15:52:32.712"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:32.715" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:32.713" endtime="20201030 15:52:32.715"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:32.716" endtime="20201030 15:52:32.717"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.687" endtime="20201030 15:52:32.718"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.685" endtime="20201030 15:52:32.718"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:32.724" endtime="20201030 15:52:33.010"></status>
</kw>
<msg timestamp="20201030 15:52:33.013" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022528681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022652375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:32.723" endtime="20201030 15:52:33.013"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:33.021" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022528681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022652375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:33.014" endtime="20201030 15:52:33.021"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:33.022" endtime="20201030 15:52:33.023"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.720" endtime="20201030 15:52:33.024"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.719" endtime="20201030 15:52:33.024"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:33.028" level="INFO">${RESULT} = [{'diff': 0.00012369400000000058}, {'diff': 0.00012305599999999986}, {'diff': 0.00012356900000000046}, {'diff': 0.00012333299999999978}, {'diff': 0.00012351399999999818}, {'diff': 0.000122957999999999...</msg>
<status status="PASS" starttime="20201030 15:52:33.025" endtime="20201030 15:52:33.028"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:33.032" level="INFO">${ACCURACY} = {'diff': [0.00012369400000000058, 0.00012305599999999986, 0.00012356900000000046, 0.00012333299999999978, 0.00012351399999999818, 0.0001229579999999994, 0.00012322199999999922, 0.0001229449999999993, ...</msg>
<status status="PASS" starttime="20201030 15:52:33.029" endtime="20201030 15:52:33.032"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:33.036" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201030 15:52:33.036" endtime="20201030 15:52:33.037"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:33.039" level="INFO">VALUE: [0.00012369400000000058, 0.00012305599999999986, 0.00012356900000000046, 0.00012333299999999978, 0.00012351399999999818, 0.0001229579999999994, 0.00012322199999999922, 0.0001229449999999993, 0.0001233190000000002, 0.00012277800000000047, 0.00012274999999999786, 0.00012306999999999943, 0.00012315200000000137, 0.00012313900000000128, 0.00012351399999999818, 0.00012280500000000014, 0.00012262499999999774, 0.00012302800000000072, 0.00012272199999999872, 0.00012290200000000112, 0.00012329200000000054, 0.0001232220000000027, 0.00012306899999999996, 0.00012268099999999948, 0.00012270899999999862, 0.00012355499999999742, 0.00012305500000000039, 0.00012283399999999875, 0.00012282000000000265, 0.00012319400000000008, 0.00012351400000000165, 0.00012293099999999973, 0.00012273600000000176, 0.000123568999999997, 0.0001234160000000012, 0.00012290199999999765, 0.00012301399999999768, 0.0001229030000000006, 0.00012300000000000158, 0.00012344400000000033, 0.00012326399999999793, 0.00012287500000000146, 0.0001231250000000017, 0.00012352799999999775, 0.00012343000000000076, 0.00012268, 0.00012279200000000004, 0.00012301399999999768, 0.00012274999999999786, 0.00012268099999999948]</msg>
<status status="PASS" starttime="20201030 15:52:33.038" endtime="20201030 15:52:33.040"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.033" endtime="20201030 15:52:33.040"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:33.044" endtime="20201030 15:52:33.063"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.042" endtime="20201030 15:52:33.064"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.041" endtime="20201030 15:52:33.064"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.682" endtime="20201030 15:52:33.064"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.682" endtime="20201030 15:52:33.064"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:33.073" endtime="20201030 15:52:33.095"></status>
</kw>
<msg timestamp="20201030 15:52:33.095" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:33.071" endtime="20201030 15:52:33.095"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:33.097" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:33.096" endtime="20201030 15:52:33.098"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:33.099" endtime="20201030 15:52:33.100"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.069" endtime="20201030 15:52:33.101"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.067" endtime="20201030 15:52:33.101"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:33.107" endtime="20201030 15:52:33.394"></status>
</kw>
<msg timestamp="20201030 15:52:33.397" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022268014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022392444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:33.106" endtime="20201030 15:52:33.397"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:33.404" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022268014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022392444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:33.398" endtime="20201030 15:52:33.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:33.406" endtime="20201030 15:52:33.407"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.103" endtime="20201030 15:52:33.408"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.102" endtime="20201030 15:52:33.408"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:33.412" level="INFO">${RESULT} = [{'diff': 0.00012443000000000176}, {'diff': 0.00012415200000000237}, {'diff': 0.000123777999999998}, {'diff': 0.00012424999999999936}, {'diff': 0.00012383300000000028}, {'diff': 0.0001237090000000031}...</msg>
<status status="PASS" starttime="20201030 15:52:33.409" endtime="20201030 15:52:33.412"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:33.416" level="INFO">${ACCURACY} = {'diff': [0.00012443000000000176, 0.00012415200000000237, 0.000123777999999998, 0.00012424999999999936, 0.00012383300000000028, 0.0001237090000000031, 0.00012401399999999868, 0.00012445799999999743, 0...</msg>
<status status="PASS" starttime="20201030 15:52:33.413" endtime="20201030 15:52:33.416"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:33.420" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201030 15:52:33.419" endtime="20201030 15:52:33.421"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:33.423" level="INFO">VALUE: [0.00012443000000000176, 0.00012415200000000237, 0.000123777999999998, 0.00012424999999999936, 0.00012383300000000028, 0.0001237090000000031, 0.00012401399999999868, 0.00012445799999999743, 0.00012390200000000212, 0.00012457000000000093, 0.00012436099999999992, 0.0001244580000000009, 0.00012402699999999878, 0.0001241389999999988, 0.00012440299999999863, 0.00012436099999999992, 0.00012452700000000275, 0.00012424999999999936, 0.00012420900000000012, 0.00012437499999999949, 0.0001236250000000022, 0.00012387499999999899, 0.00012430499999999817, 0.0001242640000000024, 0.00012420900000000012, 0.0001244999999999996, 0.00012388899999999856, 0.0001239580000000004, 0.00012412499999999924, 0.0001238329999999968, 0.00012455499999999842, 0.00012383300000000028, 0.00012420800000000065, 0.00012383300000000028, 0.0001237640000000019, 0.00012452799999999875, 0.00012393000000000126, 0.00012386099999999942, 0.00012386099999999942, 0.000124568999999998, 0.00012406900000000096, 0.0001243190000000012, 0.0001240970000000001, 0.00012408299999999706, 0.0001237640000000019, 0.0001235969999999996, 0.00012419400000000108, 0.0001244999999999996, 0.00012419400000000108, 0.0001244450000000008]</msg>
<status status="PASS" starttime="20201030 15:52:33.421" endtime="20201030 15:52:33.424"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.417" endtime="20201030 15:52:33.425"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:33.428" endtime="20201030 15:52:33.448"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.427" endtime="20201030 15:52:33.448"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.426" endtime="20201030 15:52:33.449"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.065" endtime="20201030 15:52:33.449"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.065" endtime="20201030 15:52:33.449"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:33.458" endtime="20201030 15:52:33.478"></status>
</kw>
<msg timestamp="20201030 15:52:33.479" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:33.456" endtime="20201030 15:52:33.479"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:33.481" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:33.480" endtime="20201030 15:52:33.482"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:33.482" endtime="20201030 15:52:33.485"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.454" endtime="20201030 15:52:33.486"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.452" endtime="20201030 15:52:33.486"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:33.492" endtime="20201030 15:52:33.777"></status>
</kw>
<msg timestamp="20201030 15:52:33.780" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021344319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021469722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:33.491" endtime="20201030 15:52:33.781"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:33.788" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021344319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021469722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:33.781" endtime="20201030 15:52:33.789"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:33.790" endtime="20201030 15:52:33.791"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.488" endtime="20201030 15:52:33.792"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.487" endtime="20201030 15:52:33.792"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:33.796" level="INFO">${RESULT} = [{'diff': 0.00012540299999999963}, {'diff': 0.0001250689999999985}, {'diff': 0.0001253060000000021}, {'diff': 0.00012538900000000006}, {'diff': 0.00012476399999999943}, {'diff': 0.00012530499999999917...</msg>
<status status="PASS" starttime="20201030 15:52:33.793" endtime="20201030 15:52:33.796"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:33.801" level="INFO">${ACCURACY} = {'diff': [0.00012540299999999963, 0.0001250689999999985, 0.0001253060000000021, 0.00012538900000000006, 0.00012476399999999943, 0.00012530499999999917, 0.0001255550000000029, 0.0001248060000000016, 0....</msg>
<status status="PASS" starttime="20201030 15:52:33.797" endtime="20201030 15:52:33.801"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:33.805" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201030 15:52:33.804" endtime="20201030 15:52:33.806"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:33.808" level="INFO">VALUE: [0.00012540299999999963, 0.0001250689999999985, 0.0001253060000000021, 0.00012538900000000006, 0.00012476399999999943, 0.00012530499999999917, 0.0001255550000000029, 0.0001248060000000016, 0.00012511100000000067, 0.00012466699999999845, 0.0001250000000000001, 0.00012466600000000244, 0.00012472200000000072, 0.00012462499999999974, 0.000125084000000001, 0.0001255559999999989, 0.00012516699999999895, 0.00012487499999999999, 0.00012536099999999745, 0.0001254589999999979, 0.00012552799999999975, 0.00012516599999999947, 0.00012511100000000067, 0.00012538900000000006, 0.0001253199999999982, 0.00012536099999999745, 0.0001251800000000025, 0.0001253199999999982, 0.00012482000000000118, 0.0001251109999999972, 0.00012537500000000049, 0.00012486100000000042, 0.00012490299999999913, 0.0001255000000000006, 0.00012548600000000104, 0.00012466700000000192, 0.00012525000000000036, 0.0001255000000000006, 0.00012505499999999892, 0.00012548700000000051, 0.0001249450000000013, 0.00012519400000000208, 0.00012555499999999942, 0.0001250000000000001, 0.00012487499999999999, 0.00012537500000000049, 0.0001248329999999978, 0.00012487499999999999, 0.00012470800000000115, 0.00012467999999999854]</msg>
<status status="PASS" starttime="20201030 15:52:33.807" endtime="20201030 15:52:33.809"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.802" endtime="20201030 15:52:33.809"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:33.813" endtime="20201030 15:52:33.832"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.811" endtime="20201030 15:52:33.833"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.810" endtime="20201030 15:52:33.833"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.450" endtime="20201030 15:52:33.834"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.449" endtime="20201030 15:52:33.834"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:33.842" endtime="20201030 15:52:33.863"></status>
</kw>
<msg timestamp="20201030 15:52:33.864" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:33.841" endtime="20201030 15:52:33.864"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:33.866" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:33.865" endtime="20201030 15:52:33.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:33.867" endtime="20201030 15:52:33.869"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.838" endtime="20201030 15:52:33.869"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.836" endtime="20201030 15:52:33.870"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:33.876" endtime="20201030 15:52:34.163"></status>
</kw>
<msg timestamp="20201030 15:52:34.166" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021682639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021809208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:33.875" endtime="20201030 15:52:34.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:34.174" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021682639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021809208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:34.167" endtime="20201030 15:52:34.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:34.175" endtime="20201030 15:52:34.177"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.872" endtime="20201030 15:52:34.177"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.871" endtime="20201030 15:52:34.178"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:34.182" level="INFO">${RESULT} = [{'diff': 0.000126569}, {'diff': 0.00012602799999999678}, {'diff': 0.000126471999999999}, {'diff': 0.00012645799999999943}, {'diff': 0.00012583300000000228}, {'diff': 0.00012594400000000283}, {'diff':...</msg>
<status status="PASS" starttime="20201030 15:52:34.178" endtime="20201030 15:52:34.182"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:34.186" level="INFO">${ACCURACY} = {'diff': [0.000126569, 0.00012602799999999678, 0.000126471999999999, 0.00012645799999999943, 0.00012583300000000228, 0.00012594400000000283, 0.00012629200000000007, 0.0001260000000000011, 0.0001263610...</msg>
<status status="PASS" starttime="20201030 15:52:34.183" endtime="20201030 15:52:34.186"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:34.190" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201030 15:52:34.189" endtime="20201030 15:52:34.191"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:34.193" level="INFO">VALUE: [0.000126569, 0.00012602799999999678, 0.000126471999999999, 0.00012645799999999943, 0.00012583300000000228, 0.00012594400000000283, 0.00012629200000000007, 0.0001260000000000011, 0.00012636100000000192, 0.0001265559999999999, 0.0001265000000000016, 0.0001257230000000012, 0.00012641600000000072, 0.00012629200000000007, 0.00012598599999999807, 0.0001260559999999994, 0.00012575000000000086, 0.00012566599999999997, 0.00012622200000000222, 0.00012575000000000086, 0.00012652800000000075, 0.00012587499999999752, 0.00012651400000000118, 0.0001259299999999998, 0.0001262780000000005, 0.0001256520000000004, 0.00012648599999999857, 0.00012580499999999967, 0.0001260000000000011, 0.0001262360000000018, 0.0001258329999999988, 0.0001259580000000024, 0.00012590300000000013, 0.00012654200000000032, 0.0001262499999999979, 0.00012587500000000099, 0.00012579199999999957, 0.00012645799999999943, 0.00012645799999999943, 0.0001259169999999997, 0.00012611100000000167, 0.00012640300000000063, 0.00012570799999999868, 0.00012649999999999814, 0.00012562500000000074, 0.00012593099999999927, 0.00012636099999999845, 0.0001260559999999994, 0.00012648600000000204, 0.00012594399999999936]</msg>
<status status="PASS" starttime="20201030 15:52:34.191" endtime="20201030 15:52:34.193"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.187" endtime="20201030 15:52:34.194"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:34.198" endtime="20201030 15:52:34.217"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.196" endtime="20201030 15:52:34.218"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.195" endtime="20201030 15:52:34.218"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.835" endtime="20201030 15:52:34.218"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.834" endtime="20201030 15:52:34.218"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:34.227" endtime="20201030 15:52:34.251"></status>
</kw>
<msg timestamp="20201030 15:52:34.251" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:34.226" endtime="20201030 15:52:34.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:34.254" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:34.252" endtime="20201030 15:52:34.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:34.255" endtime="20201030 15:52:34.257"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.223" endtime="20201030 15:52:34.257"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.221" endtime="20201030 15:52:34.258"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:34.264" endtime="20201030 15:52:34.550"></status>
</kw>
<msg timestamp="20201030 15:52:34.553" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022559028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022686444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:34.263" endtime="20201030 15:52:34.553"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:34.561" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022559028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022686444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:34.554" endtime="20201030 15:52:34.561"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:34.562" endtime="20201030 15:52:34.564"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.260" endtime="20201030 15:52:34.564"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.258" endtime="20201030 15:52:34.565"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:34.568" level="INFO">${RESULT} = [{'diff': 0.00012741600000000172}, {'diff': 0.00012712499999999877}, {'diff': 0.00012686099999999895}, {'diff': 0.00012698599999999907}, {'diff': 0.0001270139999999982}, {'diff': 0.0001275269999999988...</msg>
<status status="PASS" starttime="20201030 15:52:34.565" endtime="20201030 15:52:34.569"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:34.573" level="INFO">${ACCURACY} = {'diff': [0.00012741600000000172, 0.00012712499999999877, 0.00012686099999999895, 0.00012698599999999907, 0.0001270139999999982, 0.0001275269999999988, 0.0001268329999999998, 0.00012708399999999953, 0...</msg>
<status status="PASS" starttime="20201030 15:52:34.569" endtime="20201030 15:52:34.573"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:34.577" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201030 15:52:34.576" endtime="20201030 15:52:34.577"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:34.579" level="INFO">VALUE: [0.00012741600000000172, 0.00012712499999999877, 0.00012686099999999895, 0.00012698599999999907, 0.0001270139999999982, 0.0001275269999999988, 0.0001268329999999998, 0.00012708399999999953, 0.0001270560000000004, 0.00012676399999999796, 0.00012741699999999773, 0.00012748600000000304, 0.0001269300000000008, 0.0001269170000000007, 0.00012670899999999916, 0.00012687500000000199, 0.00012731899999999727, 0.00012698699999999855, 0.0001268889999999981, 0.00012723599999999932, 0.00012706999999999996, 0.00012748599999999957, 0.00012680600000000014, 0.00012670899999999916, 0.00012699999999999864, 0.00012718100000000052, 0.00012748599999999957, 0.00012676399999999796, 0.00012662499999999827, 0.00012748600000000304, 0.0001269719999999995, 0.0001272919999999976, 0.00012722199999999975, 0.0001275000000000026, 0.00012666600000000097, 0.000126778000000001, 0.00012690300000000113, 0.00012672199999999925, 0.0001271529999999979, 0.00012692999999999732, 0.00012741699999999773, 0.00012684699999999938, 0.0001269719999999995, 0.00012749999999999914, 0.00012684699999999938, 0.0001266529999999974, 0.00012755500000000142, 0.0001272499999999989, 0.00012709699999999963, 0.00012686099999999895]</msg>
<status status="PASS" starttime="20201030 15:52:34.578" endtime="20201030 15:52:34.581"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.573" endtime="20201030 15:52:34.582"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:34.585" endtime="20201030 15:52:34.605"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.584" endtime="20201030 15:52:34.605"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.583" endtime="20201030 15:52:34.606"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.219" endtime="20201030 15:52:34.606"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.219" endtime="20201030 15:52:34.606"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:34.615" endtime="20201030 15:52:34.636"></status>
</kw>
<msg timestamp="20201030 15:52:34.636" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:34.613" endtime="20201030 15:52:34.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:34.639" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:34.637" endtime="20201030 15:52:34.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:34.640" endtime="20201030 15:52:34.641"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.611" endtime="20201030 15:52:34.642"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.609" endtime="20201030 15:52:34.642"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:34.649" endtime="20201030 15:52:34.934"></status>
</kw>
<msg timestamp="20201030 15:52:34.937" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021533889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021662569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:34.647" endtime="20201030 15:52:34.937"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:34.945" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021533889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021662569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:34.938" endtime="20201030 15:52:34.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:34.946" endtime="20201030 15:52:34.948"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.645" endtime="20201030 15:52:34.948"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.643" endtime="20201030 15:52:34.949"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:34.953" level="INFO">${RESULT} = [{'diff': 0.00012867999999999907}, {'diff': 0.0001279309999999978}, {'diff': 0.00012802700000000278}, {'diff': 0.00012784799999999985}, {'diff': 0.00012815300000000238}, {'diff': 0.0001283469999999974...</msg>
<status status="PASS" starttime="20201030 15:52:34.949" endtime="20201030 15:52:34.953"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:34.957" level="INFO">${ACCURACY} = {'diff': [0.00012867999999999907, 0.0001279309999999978, 0.00012802700000000278, 0.00012784799999999985, 0.00012815300000000238, 0.0001283469999999974, 0.0001282499999999999, 0.00012829200000000207, 0...</msg>
<status status="PASS" starttime="20201030 15:52:34.954" endtime="20201030 15:52:34.958"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:34.962" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201030 15:52:34.961" endtime="20201030 15:52:34.962"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:34.964" level="INFO">VALUE: [0.00012867999999999907, 0.0001279309999999978, 0.00012802700000000278, 0.00012784799999999985, 0.00012815300000000238, 0.0001283469999999974, 0.0001282499999999999, 0.00012829200000000207, 0.00012786099999999995, 0.00012798600000000007, 0.00012836199999999992, 0.00012795800000000093, 0.00012762499999999927, 0.00012768100000000102, 0.0001279170000000017, 0.00012836099999999698, 0.00012816699999999848, 0.00012792999999999832, 0.00012772200000000025, 0.00012766699999999798, 0.0001283330000000013, 0.0001279300000000018, 0.00012759700000000013, 0.00012823600000000032, 0.00012787499999999952, 0.00012784700000000038, 0.00012772299999999973, 0.00012798600000000007, 0.00012852799999999928, 0.0001282079999999977, 0.00012809700000000063, 0.00012836100000000045, 0.0001278330000000008, 0.0001284590000000009, 0.00012777799999999853, 0.00012772200000000025, 0.00012847300000000048, 0.00012813899999999934, 0.00012761100000000317, 0.00012765199999999893, 0.00012772200000000025, 0.00012786099999999995, 0.00012795800000000093, 0.00012809700000000063, 0.00012815199999999943, 0.00012786099999999995, 0.00012799999999999964, 0.00012809700000000063, 0.00012799999999999964, 0.00012767999999999807]</msg>
<status status="PASS" starttime="20201030 15:52:34.963" endtime="20201030 15:52:34.965"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.958" endtime="20201030 15:52:34.966"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:34.969" endtime="20201030 15:52:34.989"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.968" endtime="20201030 15:52:34.989"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.967" endtime="20201030 15:52:34.990"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.607" endtime="20201030 15:52:34.990"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.606" endtime="20201030 15:52:34.990"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:34.999" endtime="20201030 15:52:35.020"></status>
</kw>
<msg timestamp="20201030 15:52:35.020" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:34.997" endtime="20201030 15:52:35.021"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:35.023" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:35.021" endtime="20201030 15:52:35.023"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:35.024" endtime="20201030 15:52:35.025"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.995" endtime="20201030 15:52:35.026"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.993" endtime="20201030 15:52:35.026"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:35.033" endtime="20201030 15:52:35.320"></status>
</kw>
<msg timestamp="20201030 15:52:35.323" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021594306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021724083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:35.031" endtime="20201030 15:52:35.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:35.331" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021594306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021724083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:35.324" endtime="20201030 15:52:35.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:35.332" endtime="20201030 15:52:35.334"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.029" endtime="20201030 15:52:35.335"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.027" endtime="20201030 15:52:35.335"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:35.339" level="INFO">${RESULT} = [{'diff': 0.00012977700000000106}, {'diff': 0.00012877799999999953}, {'diff': 0.000129472000000002}, {'diff': 0.00012867999999999907}, {'diff': 0.00012940199999999721}, {'diff': 0.0001290140000000002}...</msg>
<status status="PASS" starttime="20201030 15:52:35.336" endtime="20201030 15:52:35.339"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:35.343" level="INFO">${ACCURACY} = {'diff': [0.00012977700000000106, 0.00012877799999999953, 0.000129472000000002, 0.00012867999999999907, 0.00012940199999999721, 0.0001290140000000002, 0.000129263000000001, 0.00012930600000000264, 0.0...</msg>
<status status="PASS" starttime="20201030 15:52:35.340" endtime="20201030 15:52:35.343"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:35.347" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201030 15:52:35.346" endtime="20201030 15:52:35.348"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:35.350" level="INFO">VALUE: [0.00012977700000000106, 0.00012877799999999953, 0.000129472000000002, 0.00012867999999999907, 0.00012940199999999721, 0.0001290140000000002, 0.000129263000000001, 0.00012930600000000264, 0.0001287919999999991, 0.00012942999999999982, 0.00012941699999999973, 0.0001287500000000004, 0.00012883299999999834, 0.00012858399999999756, 0.00012902799999999978, 0.00012866700000000245, 0.00012947199999999853, 0.00012886100000000095, 0.00012954100000000038, 0.00012897300000000098, 0.00012859700000000113, 0.00012879200000000257, 0.00012897300000000098, 0.0001290270000000003, 0.00012890299999999966, 0.00012908300000000206, 0.00012934700000000188, 0.000129472000000002, 0.00012872200000000125, 0.00012904099999999988, 0.0001289720000000015, 0.00012923600000000132, 0.0001294309999999993, 0.00012858300000000156, 0.00012866699999999898, 0.00012893100000000227, 0.00012862500000000027, 0.00012895799999999846, 0.0001287919999999991, 0.0001291110000000012, 0.00012941699999999973, 0.00012909700000000163, 0.00012916699999999948, 0.00012923600000000132, 0.00012936100000000145, 0.00012870800000000168, 0.00012954199999999985, 0.0001294439999999994, 0.00012859700000000113, 0.00012942999999999982]</msg>
<status status="PASS" starttime="20201030 15:52:35.348" endtime="20201030 15:52:35.351"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.344" endtime="20201030 15:52:35.351"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:35.355" endtime="20201030 15:52:35.374"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.353" endtime="20201030 15:52:35.375"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.352" endtime="20201030 15:52:35.375"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.991" endtime="20201030 15:52:35.376"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.990" endtime="20201030 15:52:35.376"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:35.384" endtime="20201030 15:52:35.409"></status>
</kw>
<msg timestamp="20201030 15:52:35.409" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:35.383" endtime="20201030 15:52:35.410"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:35.412" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:35.411" endtime="20201030 15:52:35.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:35.413" endtime="20201030 15:52:35.415"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.380" endtime="20201030 15:52:35.415"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.378" endtime="20201030 15:52:35.416"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:35.422" endtime="20201030 15:52:35.708"></status>
</kw>
<msg timestamp="20201030 15:52:35.711" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025057569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025187861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:35.421" endtime="20201030 15:52:35.711"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:35.719" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025057569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025187861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:35.712" endtime="20201030 15:52:35.719"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:35.720" endtime="20201030 15:52:35.722"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.418" endtime="20201030 15:52:35.722"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.416" endtime="20201030 15:52:35.723"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:35.727" level="INFO">${RESULT} = [{'diff': 0.0001302920000000006}, {'diff': 0.00013055500000000095}, {'diff': 0.0001299859999999986}, {'diff': 0.00012962500000000127}, {'diff': 0.0001298339999999988}, {'diff': 0.0001304310000000003},...</msg>
<status status="PASS" starttime="20201030 15:52:35.724" endtime="20201030 15:52:35.727"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:35.731" level="INFO">${ACCURACY} = {'diff': [0.0001302920000000006, 0.00013055500000000095, 0.0001299859999999986, 0.00012962500000000127, 0.0001298339999999988, 0.0001304310000000003, 0.0001297089999999987, 0.00012959699999999866, 0.0...</msg>
<status status="PASS" starttime="20201030 15:52:35.728" endtime="20201030 15:52:35.731"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:35.735" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201030 15:52:35.734" endtime="20201030 15:52:35.735"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:35.738" level="INFO">VALUE: [0.0001302920000000006, 0.00013055500000000095, 0.0001299859999999986, 0.00012962500000000127, 0.0001298339999999988, 0.0001304310000000003, 0.0001297089999999987, 0.00012959699999999866, 0.00013056899999999705, 0.00013008399999999906, 0.00013013900000000134, 0.00013037499999999855, 0.0001298050000000002, 0.00012969399999999964, 0.00012980499999999673, 0.00013018000000000057, 0.0001299720000000025, 0.00012963900000000084, 0.00013009799999999863, 0.00013006900000000002, 0.00013005599999999992, 0.00013051399999999824, 0.0001300140000000012, 0.00012969399999999964, 0.0001295829999999991, 0.0001297079999999992, 0.0001298339999999988, 0.00013031900000000027, 0.0001297920000000001, 0.00012970800000000268, 0.00013022199999999928, 0.00013033299999999984, 0.00013040199999999821, 0.0001305140000000017, 0.00013009799999999516, 0.00013034700000000288, 0.0001301530000000009, 0.0001303890000000016, 0.00013048600000000604, 0.00013029200000000407, 0.0001303880000000021, 0.00013013900000000134, 0.00013040300000000116, 0.00012986100000000195, 0.00013055499999999748, 0.00013034800000000235, 0.00012979199999999663, 0.00012979199999999663, 0.0001301519999999945, 0.00012980600000000314]</msg>
<status status="PASS" starttime="20201030 15:52:35.736" endtime="20201030 15:52:35.796"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.732" endtime="20201030 15:52:35.797"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:35.801" endtime="20201030 15:52:35.820"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.799" endtime="20201030 15:52:35.821"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.798" endtime="20201030 15:52:35.821"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.377" endtime="20201030 15:52:35.821"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.376" endtime="20201030 15:52:35.822"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.314" endtime="20201030 15:52:35.822"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="PASS" starttime="20201030 15:51:57.247" endtime="20201030 15:52:35.822" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:35.829" endtime="20201030 15:52:35.848"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.827" endtime="20201030 15:52:35.849"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:35.862" endtime="20201030 15:52:35.875"></status>
</kw>
<msg timestamp="20201030 15:52:35.875" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:35.861" endtime="20201030 15:52:35.875"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:35.877" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:35.876" endtime="20201030 15:52:35.878"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:52:35.881" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:52:35.879" endtime="20201030 15:52:35.881"></status>
</kw>
<status status="FAIL" starttime="20201030 15:52:35.858" endtime="20201030 15:52:35.882"></status>
</kw>
<status status="FAIL" starttime="20201030 15:52:35.855" endtime="20201030 15:52:35.882"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.854" endtime="20201030 15:52:35.882"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:52:35.886" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:52:35.885" endtime="20201030 15:52:35.887"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.883" endtime="20201030 15:52:35.887"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.853" endtime="20201030 15:52:35.887"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.853" endtime="20201030 15:52:35.887"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:35.888" endtime="20201030 15:52:35.889"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.851" endtime="20201030 15:52:35.890"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.850" endtime="20201030 15:52:35.890"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.826" endtime="20201030 15:52:35.891"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:35.901" endtime="20201030 15:52:35.916"></status>
</kw>
<msg timestamp="20201030 15:52:35.916" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:35.900" endtime="20201030 15:52:35.917"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:35.919" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:35.917" endtime="20201030 15:52:35.920"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:35.920" endtime="20201030 15:52:35.922"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.896" endtime="20201030 15:52:35.923"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.894" endtime="20201030 15:52:35.923"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:35.929" endtime="20201030 15:52:36.216"></status>
</kw>
<msg timestamp="20201030 15:52:36.219" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064988292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065020069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:35.928" endtime="20201030 15:52:36.219"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:36.227" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064988292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065020069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:36.220" endtime="20201030 15:52:36.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:36.228" endtime="20201030 15:52:36.230"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.925" endtime="20201030 15:52:36.230"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.924" endtime="20201030 15:52:36.231"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:36.235" level="INFO">${RESULT} = [{'diff': 3.1776999999996725e-05}, {'diff': 3.069499999999725e-05}, {'diff': 3.066599999999864e-05}, {'diff': 3.066699999999811e-05}, {'diff': 3.068100000000462e-05}, {'diff': 3.063899999999897e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:52:36.232" endtime="20201030 15:52:36.235"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:36.239" level="INFO">${ACCURACY} = {'diff': [3.1776999999996725e-05, 3.069499999999725e-05, 3.066599999999864e-05, 3.066699999999811e-05, 3.068100000000462e-05, 3.063899999999897e-05, 3.062500000000634e-05, 3.0652999999991604e-05, 3.06...</msg>
<status status="PASS" starttime="20201030 15:52:36.236" endtime="20201030 15:52:36.239"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:36.244" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201030 15:52:36.243" endtime="20201030 15:52:36.245"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:36.247" level="INFO">VALUE: [3.1776999999996725e-05, 3.069499999999725e-05, 3.066599999999864e-05, 3.066699999999811e-05, 3.068100000000462e-05, 3.063899999999897e-05, 3.062500000000634e-05, 3.0652999999991604e-05, 3.063899999999897e-05, 3.065300000000548e-05, 3.068100000000462e-05, 3.0652999999991604e-05, 3.066699999999811e-05, 3.0652999999991604e-05, 3.065300000000548e-05, 3.068000000000515e-05, 3.066699999999811e-05, 3.070800000000429e-05, 3.065300000000548e-05, 3.066699999999811e-05, 3.061099999999983e-05, 3.065199999999213e-05, 3.066699999999811e-05, 3.065300000000548e-05, 3.066699999999811e-05, 3.063899999999897e-05, 3.069399999999778e-05, 3.066699999999811e-05, 3.062500000000634e-05, 3.062500000000634e-05, 3.066699999999811e-05, 3.068100000000462e-05, 3.065300000000548e-05, 3.0694000000011656e-05, 3.067999999999127e-05, 3.0666000000012517e-05, 3.0652999999991604e-05, 3.061099999999983e-05, 3.066699999999811e-05, 3.066699999999811e-05, 3.063900000001285e-05, 3.069399999999778e-05, 3.068100000000462e-05, 3.065199999999213e-05, 3.065199999999213e-05, 3.066699999999811e-05, 3.065300000000548e-05, 3.06379999999995e-05, 3.0652999999991604e-05, 3.065300000000548e-05]</msg>
<status status="PASS" starttime="20201030 15:52:36.245" endtime="20201030 15:52:36.247"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.240" endtime="20201030 15:52:36.248"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:36.251" endtime="20201030 15:52:36.271"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.250" endtime="20201030 15:52:36.272"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.249" endtime="20201030 15:52:36.272"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.892" endtime="20201030 15:52:36.272"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.892" endtime="20201030 15:52:36.272"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:36.282" endtime="20201030 15:52:36.297"></status>
</kw>
<msg timestamp="20201030 15:52:36.298" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:36.280" endtime="20201030 15:52:36.298"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:36.300" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:36.299" endtime="20201030 15:52:36.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:36.301" endtime="20201030 15:52:36.303"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.277" endtime="20201030 15:52:36.303"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.275" endtime="20201030 15:52:36.304"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:36.310" endtime="20201030 15:52:36.595"></status>
</kw>
<msg timestamp="20201030 15:52:36.598" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023418694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023450486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:36.309" endtime="20201030 15:52:36.599"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:36.607" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023418694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023450486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:36.599" endtime="20201030 15:52:36.607"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:36.608" endtime="20201030 15:52:36.609"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.306" endtime="20201030 15:52:36.610"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.304" endtime="20201030 15:52:36.610"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:36.614" level="INFO">${RESULT} = [{'diff': 3.179199999999924e-05}, {'diff': 3.065299999999854e-05}, {'diff': 3.065299999999854e-05}, {'diff': 3.065299999999854e-05}, {'diff': 3.065199999999907e-05}, {'diff': 3.065299999999854e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:36.611" endtime="20201030 15:52:36.615"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:36.620" level="INFO">${ACCURACY} = {'diff': [3.179199999999924e-05, 3.065299999999854e-05, 3.065299999999854e-05, 3.065299999999854e-05, 3.065199999999907e-05, 3.065299999999854e-05, 3.066700000000158e-05, 3.066600000000211e-05, 3.0666...</msg>
<status status="PASS" starttime="20201030 15:52:36.615" endtime="20201030 15:52:36.620"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:36.624" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201030 15:52:36.623" endtime="20201030 15:52:36.624"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:36.627" level="INFO">VALUE: [3.179199999999924e-05, 3.065299999999854e-05, 3.065299999999854e-05, 3.065299999999854e-05, 3.065199999999907e-05, 3.065299999999854e-05, 3.066700000000158e-05, 3.066600000000211e-05, 3.066699999999811e-05, 3.065300000000201e-05, 3.065300000000201e-05, 3.065199999999907e-05, 3.066600000000211e-05, 3.066599999999864e-05, 3.058300000000069e-05, 3.065300000000201e-05, 3.065300000000201e-05, 3.066700000000158e-05, 3.066700000000158e-05, 3.063899999999897e-05, 3.065300000000201e-05, 3.066599999999864e-05, 3.0584000000000167e-05, 3.063900000000244e-05, 3.065300000000201e-05, 3.065300000000201e-05, 3.065299999999854e-05, 3.065200000000254e-05, 3.066700000000158e-05, 3.066699999999811e-05, 3.066700000000158e-05, 3.068099999999768e-05, 3.06249999999994e-05, 3.061099999999983e-05, 3.063899999999897e-05, 3.066700000000158e-05, 3.066699999999811e-05, 3.063899999999897e-05, 3.063899999999897e-05, 3.066699999999811e-05, 3.072199999999692e-05, 3.068100000000115e-05, 3.068100000000115e-05, 3.067999999999821e-05, 3.066600000000211e-05, 3.069399999999778e-05, 3.065199999999907e-05, 3.072299999999986e-05, 3.065299999999854e-05, 3.066700000000158e-05]</msg>
<status status="PASS" starttime="20201030 15:52:36.625" endtime="20201030 15:52:36.627"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.620" endtime="20201030 15:52:36.627"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:36.631" endtime="20201030 15:52:36.651"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.629" endtime="20201030 15:52:36.651"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.628" endtime="20201030 15:52:36.651"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.273" endtime="20201030 15:52:36.652"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.273" endtime="20201030 15:52:36.652"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:36.661" endtime="20201030 15:52:36.676"></status>
</kw>
<msg timestamp="20201030 15:52:36.676" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:36.659" endtime="20201030 15:52:36.676"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:36.679" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:36.677" endtime="20201030 15:52:36.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:36.680" endtime="20201030 15:52:36.681"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.657" endtime="20201030 15:52:36.682"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.654" endtime="20201030 15:52:36.682"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:36.689" endtime="20201030 15:52:36.975"></status>
</kw>
<msg timestamp="20201030 15:52:36.978" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022166486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022198278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:36.687" endtime="20201030 15:52:36.978"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:36.986" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022166486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022198278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:36.979" endtime="20201030 15:52:36.987"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:36.988" endtime="20201030 15:52:36.989"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.685" endtime="20201030 15:52:36.990"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.683" endtime="20201030 15:52:36.990"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:36.994" level="INFO">${RESULT} = [{'diff': 3.179199999999924e-05}, {'diff': 3.063900000000244e-05}, {'diff': 3.066700000000158e-05}, {'diff': 3.065200000000254e-05}, {'diff': 3.065199999999907e-05}, {'diff': 3.066600000000211e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:36.991" endtime="20201030 15:52:36.994"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:36.998" level="INFO">${ACCURACY} = {'diff': [3.179199999999924e-05, 3.063900000000244e-05, 3.066700000000158e-05, 3.065200000000254e-05, 3.065199999999907e-05, 3.066600000000211e-05, 3.065299999999854e-05, 3.065300000000201e-05, 3.0681...</msg>
<status status="PASS" starttime="20201030 15:52:36.995" endtime="20201030 15:52:36.999"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:37.003" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201030 15:52:37.002" endtime="20201030 15:52:37.003"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:37.005" level="INFO">VALUE: [3.179199999999924e-05, 3.063900000000244e-05, 3.066700000000158e-05, 3.065200000000254e-05, 3.065199999999907e-05, 3.066600000000211e-05, 3.065299999999854e-05, 3.065300000000201e-05, 3.068100000000115e-05, 3.068100000000115e-05, 3.066699999999811e-05, 3.068100000000115e-05, 3.066599999999864e-05, 3.066700000000158e-05, 3.061099999999983e-05, 3.065300000000201e-05, 3.06249999999994e-05, 3.065300000000201e-05, 3.065299999999854e-05, 3.066599999999864e-05, 3.066599999999864e-05, 3.063899999999897e-05, 3.063899999999897e-05, 3.065299999999854e-05, 3.065300000000201e-05, 3.065200000000254e-05, 3.066699999999811e-05, 3.066599999999864e-05, 3.065199999999907e-05, 3.066699999999811e-05, 3.065300000000201e-05, 3.068100000000115e-05, 3.069399999999778e-05, 3.066700000000158e-05, 3.065200000000254e-05, 3.066700000000158e-05, 3.06379999999995e-05, 3.067999999999821e-05, 3.065299999999854e-05, 3.074999999999953e-05, 3.066600000000211e-05, 3.066599999999864e-05, 3.065199999999907e-05, 3.065299999999854e-05, 3.065299999999854e-05, 3.069500000000072e-05, 3.068099999999768e-05, 3.065299999999854e-05, 3.066599999999864e-05, 3.066699999999811e-05]</msg>
<status status="PASS" starttime="20201030 15:52:37.004" endtime="20201030 15:52:37.006"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.999" endtime="20201030 15:52:37.006"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:37.010" endtime="20201030 15:52:37.029"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.008" endtime="20201030 15:52:37.030"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.007" endtime="20201030 15:52:37.031"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.653" endtime="20201030 15:52:37.031"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.652" endtime="20201030 15:52:37.031"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:37.041" endtime="20201030 15:52:37.055"></status>
</kw>
<msg timestamp="20201030 15:52:37.056" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:37.038" endtime="20201030 15:52:37.056"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:37.058" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:37.057" endtime="20201030 15:52:37.058"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:37.059" endtime="20201030 15:52:37.061"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.036" endtime="20201030 15:52:37.061"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.034" endtime="20201030 15:52:37.062"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:37.068" endtime="20201030 15:52:37.356"></status>
</kw>
<msg timestamp="20201030 15:52:37.359" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023229278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023261028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:37.067" endtime="20201030 15:52:37.359"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:37.367" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023229278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023261028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:37.360" endtime="20201030 15:52:37.367"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:37.368" endtime="20201030 15:52:37.370"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.064" endtime="20201030 15:52:37.370"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.062" endtime="20201030 15:52:37.371"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:37.375" level="INFO">${RESULT} = [{'diff': 3.175000000000053e-05}, {'diff': 3.065300000000201e-05}, {'diff': 3.063899999999897e-05}, {'diff': 3.065299999999854e-05}, {'diff': 3.065300000000201e-05}, {'diff': 3.065300000000201e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:37.371" endtime="20201030 15:52:37.375"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:37.379" level="INFO">${ACCURACY} = {'diff': [3.175000000000053e-05, 3.065300000000201e-05, 3.063899999999897e-05, 3.065299999999854e-05, 3.065300000000201e-05, 3.065300000000201e-05, 3.063899999999897e-05, 3.066699999999811e-05, 3.0679...</msg>
<status status="PASS" starttime="20201030 15:52:37.376" endtime="20201030 15:52:37.379"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:37.383" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201030 15:52:37.382" endtime="20201030 15:52:37.383"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:37.385" level="INFO">VALUE: [3.175000000000053e-05, 3.065300000000201e-05, 3.063899999999897e-05, 3.065299999999854e-05, 3.065300000000201e-05, 3.065300000000201e-05, 3.063899999999897e-05, 3.066699999999811e-05, 3.067999999999821e-05, 3.061099999999983e-05, 3.062500000000287e-05, 3.065299999999854e-05, 3.063899999999897e-05, 3.0584000000000167e-05, 3.065299999999854e-05, 3.067999999999821e-05, 3.068100000000115e-05, 3.070800000000082e-05, 3.063899999999897e-05, 3.065300000000201e-05, 3.063899999999897e-05, 3.065300000000201e-05, 3.065300000000201e-05, 3.066600000000211e-05, 3.068100000000115e-05, 3.062500000000287e-05, 3.06379999999995e-05, 3.063899999999897e-05, 3.066700000000158e-05, 3.065300000000201e-05, 3.066700000000158e-05, 3.063899999999897e-05, 3.069500000000072e-05, 3.066600000000211e-05, 3.065300000000201e-05, 3.065299999999854e-05, 3.06249999999994e-05, 3.066700000000158e-05, 3.065300000000201e-05, 3.0596999999996793e-05, 3.065299999999854e-05, 3.063899999999897e-05, 3.066699999999811e-05, 3.065299999999854e-05, 3.065299999999854e-05, 3.068099999999768e-05, 3.066599999999864e-05, 3.065299999999854e-05, 3.066700000000158e-05, 3.065299999999854e-05]</msg>
<status status="PASS" starttime="20201030 15:52:37.384" endtime="20201030 15:52:37.387"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.379" endtime="20201030 15:52:37.388"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:37.391" endtime="20201030 15:52:37.411"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.390" endtime="20201030 15:52:37.411"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.389" endtime="20201030 15:52:37.412"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.032" endtime="20201030 15:52:37.412"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.031" endtime="20201030 15:52:37.412"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:37.421" endtime="20201030 15:52:37.435"></status>
</kw>
<msg timestamp="20201030 15:52:37.435" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:37.419" endtime="20201030 15:52:37.436"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:37.438" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:37.436" endtime="20201030 15:52:37.438"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:37.439" endtime="20201030 15:52:37.441"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.416" endtime="20201030 15:52:37.441"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.414" endtime="20201030 15:52:37.442"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:37.448" endtime="20201030 15:52:37.733"></status>
</kw>
<msg timestamp="20201030 15:52:37.736" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021431028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021462806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:37.446" endtime="20201030 15:52:37.737"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:37.745" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021431028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021462806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:37.738" endtime="20201030 15:52:37.745"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:37.746" endtime="20201030 15:52:37.747"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.444" endtime="20201030 15:52:37.748"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.442" endtime="20201030 15:52:37.748"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:37.752" level="INFO">${RESULT} = [{'diff': 3.177799999999967e-05}, {'diff': 3.065300000000201e-05}, {'diff': 3.066599999999864e-05}, {'diff': 3.070900000000029e-05}, {'diff': 3.066700000000158e-05}, {'diff': 3.065200000000254e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:37.749" endtime="20201030 15:52:37.753"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:37.757" level="INFO">${ACCURACY} = {'diff': [3.177799999999967e-05, 3.065300000000201e-05, 3.066599999999864e-05, 3.070900000000029e-05, 3.066700000000158e-05, 3.065200000000254e-05, 3.073599999999996e-05, 3.070900000000029e-05, 3.0666...</msg>
<status status="PASS" starttime="20201030 15:52:37.753" endtime="20201030 15:52:37.757"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:37.762" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201030 15:52:37.761" endtime="20201030 15:52:37.762"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:37.764" level="INFO">VALUE: [3.177799999999967e-05, 3.065300000000201e-05, 3.066599999999864e-05, 3.070900000000029e-05, 3.066700000000158e-05, 3.065200000000254e-05, 3.073599999999996e-05, 3.070900000000029e-05, 3.066600000000211e-05, 3.066699999999811e-05, 3.066700000000158e-05, 3.068100000000115e-05, 3.063899999999897e-05, 3.063900000000244e-05, 3.065299999999854e-05, 3.068100000000115e-05, 3.065299999999854e-05, 3.063899999999897e-05, 3.066700000000158e-05, 3.061099999999983e-05, 3.065300000000201e-05, 3.065300000000201e-05, 3.061099999999983e-05, 3.066700000000158e-05, 3.0582999999997224e-05, 3.069400000000125e-05, 3.059700000000026e-05, 3.066700000000158e-05, 3.066700000000158e-05, 3.063899999999897e-05, 3.063900000000244e-05, 3.069400000000125e-05, 3.065299999999854e-05, 3.063899999999897e-05, 3.065299999999854e-05, 3.066700000000158e-05, 3.065200000000254e-05, 3.063899999999897e-05, 3.070900000000029e-05, 3.066599999999864e-05, 3.065299999999854e-05, 3.066699999999811e-05, 3.068099999999768e-05, 3.059700000000026e-05, 3.065200000000254e-05, 3.068000000000168e-05, 3.063899999999897e-05, 3.065299999999854e-05, 3.06379999999995e-05, 3.067999999999821e-05]</msg>
<status status="PASS" starttime="20201030 15:52:37.763" endtime="20201030 15:52:37.765"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.758" endtime="20201030 15:52:37.765"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:37.769" endtime="20201030 15:52:37.788"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.768" endtime="20201030 15:52:37.789"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.766" endtime="20201030 15:52:37.789"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.413" endtime="20201030 15:52:37.790"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.412" endtime="20201030 15:52:37.790"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:37.798" endtime="20201030 15:52:37.813"></status>
</kw>
<msg timestamp="20201030 15:52:37.813" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:37.797" endtime="20201030 15:52:37.813"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:37.816" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:37.814" endtime="20201030 15:52:37.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:37.817" endtime="20201030 15:52:37.818"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.794" endtime="20201030 15:52:37.819"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.792" endtime="20201030 15:52:37.819"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:37.826" endtime="20201030 15:52:38.122"></status>
</kw>
<msg timestamp="20201030 15:52:38.126" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021410597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021442431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:37.824" endtime="20201030 15:52:38.126"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:38.134" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021410597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021442431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:38.127" endtime="20201030 15:52:38.134"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:38.135" endtime="20201030 15:52:38.137"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.822" endtime="20201030 15:52:38.137"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.820" endtime="20201030 15:52:38.137"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:38.142" level="INFO">${RESULT} = [{'diff': 3.183400000000142e-05}, {'diff': 3.5582999999998755e-05}, {'diff': 3.5625000000000934e-05}, {'diff': 3.5596999999998324e-05}, {'diff': 3.558399999999823e-05}, {'diff': 3.5611000000001364e-05...</msg>
<status status="PASS" starttime="20201030 15:52:38.138" endtime="20201030 15:52:38.142"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:38.146" level="INFO">${ACCURACY} = {'diff': [3.183400000000142e-05, 3.5582999999998755e-05, 3.5625000000000934e-05, 3.5596999999998324e-05, 3.558399999999823e-05, 3.5611000000001364e-05, 3.5583000000002224e-05, 3.5569000000002654e-05, ...</msg>
<status status="PASS" starttime="20201030 15:52:38.143" endtime="20201030 15:52:38.146"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:38.150" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201030 15:52:38.149" endtime="20201030 15:52:38.150"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:38.153" level="INFO">VALUE: [3.183400000000142e-05, 3.5582999999998755e-05, 3.5625000000000934e-05, 3.5596999999998324e-05, 3.558399999999823e-05, 3.5611000000001364e-05, 3.5583000000002224e-05, 3.5569000000002654e-05, 3.5582999999998755e-05, 3.5583000000002224e-05, 3.552799999999995e-05, 3.5582999999998755e-05, 3.559800000000127e-05, 3.5625000000000934e-05, 3.555599999999909e-05, 3.5582999999998755e-05, 3.5596999999998324e-05, 3.5541000000000045e-05, 3.5582999999998755e-05, 3.5596999999998324e-05, 3.5582999999998755e-05, 3.5568999999999185e-05, 3.5611000000001364e-05, 3.554199999999952e-05, 3.556999999999866e-05, 3.5596999999998324e-05, 3.5568999999999185e-05, 3.558399999999823e-05, 3.5582999999998755e-05, 3.554200000000299e-05, 3.5582999999998755e-05, 3.55840000000017e-05, 3.555600000000256e-05, 3.5639000000000504e-05, 3.559800000000127e-05, 3.5611000000001364e-05, 3.5596999999998324e-05, 3.5527000000000475e-05, 3.55840000000017e-05, 3.5583000000002224e-05, 3.5568999999999185e-05, 3.5582999999998755e-05, 3.552799999999995e-05, 3.55840000000017e-05, 3.5582999999998755e-05, 3.5582999999998755e-05, 3.558399999999823e-05, 3.5596999999998324e-05, 3.5568999999999185e-05, 3.556999999999866e-05]</msg>
<status status="PASS" starttime="20201030 15:52:38.151" endtime="20201030 15:52:38.153"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.147" endtime="20201030 15:52:38.154"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:38.158" endtime="20201030 15:52:38.177"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.156" endtime="20201030 15:52:38.178"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.155" endtime="20201030 15:52:38.178"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.791" endtime="20201030 15:52:38.178"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.790" endtime="20201030 15:52:38.178"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:38.187" endtime="20201030 15:52:38.203"></status>
</kw>
<msg timestamp="20201030 15:52:38.203" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:38.185" endtime="20201030 15:52:38.203"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:38.205" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:38.204" endtime="20201030 15:52:38.206"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:38.206" endtime="20201030 15:52:38.208"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.183" endtime="20201030 15:52:38.209"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.181" endtime="20201030 15:52:38.209"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:38.215" endtime="20201030 15:52:38.503"></status>
</kw>
<msg timestamp="20201030 15:52:38.507" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022550569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022587278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:38.214" endtime="20201030 15:52:38.507"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:38.516" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022550569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022587278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:38.508" endtime="20201030 15:52:38.516"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:38.517" endtime="20201030 15:52:38.518"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.211" endtime="20201030 15:52:38.519"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.210" endtime="20201030 15:52:38.519"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:38.523" level="INFO">${RESULT} = [{'diff': 3.670899999999935e-05}, {'diff': 3.558399999999823e-05}, {'diff': 3.5597000000001794e-05}, {'diff': 3.557000000000213e-05}, {'diff': 3.5582999999998755e-05}, {'diff': 3.5582999999998755e-05}...</msg>
<status status="PASS" starttime="20201030 15:52:38.520" endtime="20201030 15:52:38.524"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:38.527" level="INFO">${ACCURACY} = {'diff': [3.670899999999935e-05, 3.558399999999823e-05, 3.5597000000001794e-05, 3.557000000000213e-05, 3.5582999999998755e-05, 3.5582999999998755e-05, 3.5597000000001794e-05, 3.55840000000017e-05, 3.5...</msg>
<status status="PASS" starttime="20201030 15:52:38.524" endtime="20201030 15:52:38.528"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:38.532" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201030 15:52:38.531" endtime="20201030 15:52:38.532"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:38.534" level="INFO">VALUE: [3.670899999999935e-05, 3.558399999999823e-05, 3.5597000000001794e-05, 3.557000000000213e-05, 3.5582999999998755e-05, 3.5582999999998755e-05, 3.5597000000001794e-05, 3.55840000000017e-05, 3.5583000000002224e-05, 3.556999999999866e-05, 3.5582999999998755e-05, 3.5625000000000934e-05, 3.5569000000002654e-05, 3.5582999999998755e-05, 3.5569000000002654e-05, 3.557000000000213e-05, 3.5582999999998755e-05, 3.5582999999998755e-05, 3.549999999999734e-05, 3.5597000000001794e-05, 3.5568999999999185e-05, 3.5582999999998755e-05, 3.558399999999823e-05, 3.5583000000002224e-05, 3.552799999999995e-05, 3.5582999999998755e-05, 3.5596999999998324e-05, 3.55840000000017e-05, 3.5583000000002224e-05, 3.5568999999999185e-05, 3.557000000000213e-05, 3.5569000000002654e-05, 3.5568999999999185e-05, 3.556999999999866e-05, 3.5568999999999185e-05, 3.556999999999866e-05, 3.5639000000000504e-05, 3.5597000000001794e-05, 3.5582999999998755e-05, 3.5583000000002224e-05, 3.5568999999999185e-05, 3.5596999999998324e-05, 3.5596999999998324e-05, 3.555599999999909e-05, 3.5583000000002224e-05, 3.5582999999998755e-05, 3.551400000000038e-05, 3.55840000000017e-05, 3.5568999999999185e-05, 3.5596999999998324e-05]</msg>
<status status="PASS" starttime="20201030 15:52:38.533" endtime="20201030 15:52:38.536"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.528" endtime="20201030 15:52:38.537"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:38.540" endtime="20201030 15:52:38.560"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.539" endtime="20201030 15:52:38.560"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.538" endtime="20201030 15:52:38.561"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.179" endtime="20201030 15:52:38.561"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.179" endtime="20201030 15:52:38.561"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:38.570" endtime="20201030 15:52:38.584"></status>
</kw>
<msg timestamp="20201030 15:52:38.585" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:38.568" endtime="20201030 15:52:38.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:38.587" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:38.586" endtime="20201030 15:52:38.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:38.588" endtime="20201030 15:52:38.590"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.566" endtime="20201030 15:52:38.591"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.564" endtime="20201030 15:52:38.591"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:38.597" endtime="20201030 15:52:38.887"></status>
</kw>
<msg timestamp="20201030 15:52:38.891" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021693569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02173025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:52:38.596" endtime="20201030 15:52:38.891"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:38.901" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021693569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02173025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:52:38.893" endtime="20201030 15:52:38.902"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:38.903" endtime="20201030 15:52:38.906"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.593" endtime="20201030 15:52:38.907"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.592" endtime="20201030 15:52:38.908"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:38.914" level="INFO">${RESULT} = [{'diff': 3.6681000000000213e-05}, {'diff': 3.5582999999998755e-05}, {'diff': 3.555599999999909e-05}, {'diff': 3.56659999999967e-05}, {'diff': 3.5596999999998324e-05}, {'diff': 3.5611000000001364e-05}...</msg>
<status status="PASS" starttime="20201030 15:52:38.909" endtime="20201030 15:52:38.914"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:38.924" level="INFO">${ACCURACY} = {'diff': [3.6681000000000213e-05, 3.5582999999998755e-05, 3.555599999999909e-05, 3.56659999999967e-05, 3.5596999999998324e-05, 3.5611000000001364e-05, 3.561200000000084e-05, 3.5624999999997464e-05, 3....</msg>
<status status="PASS" starttime="20201030 15:52:38.915" endtime="20201030 15:52:38.925"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:38.931" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201030 15:52:38.929" endtime="20201030 15:52:38.932"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:38.935" level="INFO">VALUE: [3.6681000000000213e-05, 3.5582999999998755e-05, 3.555599999999909e-05, 3.56659999999967e-05, 3.5596999999998324e-05, 3.5611000000001364e-05, 3.561200000000084e-05, 3.5624999999997464e-05, 3.5639000000000504e-05, 3.5583000000002224e-05, 3.5582999999998755e-05, 3.558399999999823e-05, 3.5596999999998324e-05, 3.559800000000127e-05, 3.5625000000000934e-05, 3.5582999999998755e-05, 3.5568999999999185e-05, 3.558399999999823e-05, 3.55840000000017e-05, 3.55840000000017e-05, 3.561200000000084e-05, 3.55840000000017e-05, 3.5583000000002224e-05, 3.5582999999998755e-05, 3.5596999999998324e-05, 3.559800000000127e-05, 3.5568999999999185e-05, 3.5568999999999185e-05, 3.554200000000299e-05, 3.5583000000002224e-05, 3.5583000000002224e-05, 3.5597000000001794e-05, 3.5596999999998324e-05, 3.5596999999998324e-05, 3.556999999999866e-05, 3.5582999999998755e-05, 3.555599999999909e-05, 3.559800000000127e-05, 3.5597000000001794e-05, 3.5568999999999185e-05, 3.5596999999998324e-05, 3.554199999999952e-05, 3.558399999999823e-05, 3.5568999999999185e-05, 3.55840000000017e-05, 3.55979999999978e-05, 3.5582999999998755e-05, 3.5582999999998755e-05, 3.556999999999866e-05, 3.566700000000311e-05]</msg>
<status status="PASS" starttime="20201030 15:52:38.933" endtime="20201030 15:52:38.936"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.926" endtime="20201030 15:52:38.937"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:38.943" endtime="20201030 15:52:38.963"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.940" endtime="20201030 15:52:38.964"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.938" endtime="20201030 15:52:38.965"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.562" endtime="20201030 15:52:38.965"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.562" endtime="20201030 15:52:38.965"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:38.974" endtime="20201030 15:52:38.989"></status>
</kw>
<msg timestamp="20201030 15:52:38.990" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:38.973" endtime="20201030 15:52:38.990"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:38.993" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:38.991" endtime="20201030 15:52:38.993"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:38.994" endtime="20201030 15:52:38.995"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.970" endtime="20201030 15:52:38.996"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.968" endtime="20201030 15:52:38.996"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:39.003" endtime="20201030 15:52:39.288"></status>
</kw>
<msg timestamp="20201030 15:52:39.291" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023619208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023655931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:39.001" endtime="20201030 15:52:39.292"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:39.300" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023619208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023655931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:39.293" endtime="20201030 15:52:39.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:39.301" endtime="20201030 15:52:39.303"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.999" endtime="20201030 15:52:39.303"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.997" endtime="20201030 15:52:39.303"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:39.307" level="INFO">${RESULT} = [{'diff': 3.672300000000239e-05}, {'diff': 3.5582999999998755e-05}, {'diff': 3.5568999999999185e-05}, {'diff': 3.558399999999823e-05}, {'diff': 3.5583000000002224e-05}, {'diff': 3.55840000000017e-05},...</msg>
<status status="PASS" starttime="20201030 15:52:39.304" endtime="20201030 15:52:39.308"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:39.312" level="INFO">${ACCURACY} = {'diff': [3.672300000000239e-05, 3.5582999999998755e-05, 3.5568999999999185e-05, 3.558399999999823e-05, 3.5583000000002224e-05, 3.55840000000017e-05, 3.555599999999909e-05, 3.5596999999998324e-05, 3.5...</msg>
<status status="PASS" starttime="20201030 15:52:39.308" endtime="20201030 15:52:39.312"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:39.316" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201030 15:52:39.315" endtime="20201030 15:52:39.316"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:39.319" level="INFO">VALUE: [3.672300000000239e-05, 3.5582999999998755e-05, 3.5568999999999185e-05, 3.558399999999823e-05, 3.5583000000002224e-05, 3.55840000000017e-05, 3.555599999999909e-05, 3.5596999999998324e-05, 3.55840000000017e-05, 3.556999999999866e-05, 3.5582999999998755e-05, 3.5597000000001794e-05, 3.556999999999866e-05, 3.5582999999998755e-05, 3.554199999999952e-05, 3.559800000000127e-05, 3.558399999999823e-05, 3.5583000000002224e-05, 3.556999999999866e-05, 3.5596999999998324e-05, 3.551400000000038e-05, 3.5583000000002224e-05, 3.5610999999997894e-05, 3.5582999999998755e-05, 3.5583000000002224e-05, 3.5583000000002224e-05, 3.5597000000001794e-05, 3.5583000000002224e-05, 3.554199999999952e-05, 3.558399999999823e-05, 3.5625000000000934e-05, 3.5611000000001364e-05, 3.5568999999999185e-05, 3.558399999999823e-05, 3.5582999999998755e-05, 3.5582999999998755e-05, 3.551400000000038e-05, 3.5596999999998324e-05, 3.5597000000001794e-05, 3.558399999999823e-05, 3.5582999999998755e-05, 3.5610999999997894e-05, 3.558399999999823e-05, 3.5582999999998755e-05, 3.558399999999823e-05, 3.5596999999998324e-05, 3.5582999999998755e-05, 3.5582999999998755e-05, 3.5653000000000074e-05, 3.5639000000000504e-05]</msg>
<status status="PASS" starttime="20201030 15:52:39.317" endtime="20201030 15:52:39.320"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.312" endtime="20201030 15:52:39.320"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:39.324" endtime="20201030 15:52:39.344"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.323" endtime="20201030 15:52:39.345"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.321" endtime="20201030 15:52:39.345"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.966" endtime="20201030 15:52:39.345"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.966" endtime="20201030 15:52:39.345"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:39.354" endtime="20201030 15:52:39.370"></status>
</kw>
<msg timestamp="20201030 15:52:39.370" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:39.352" endtime="20201030 15:52:39.370"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:39.373" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:39.371" endtime="20201030 15:52:39.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:39.374" endtime="20201030 15:52:39.375"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.350" endtime="20201030 15:52:39.376"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.348" endtime="20201030 15:52:39.376"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:39.383" endtime="20201030 15:52:39.668"></status>
</kw>
<msg timestamp="20201030 15:52:39.671" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022687389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022724111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:39.381" endtime="20201030 15:52:39.672"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:39.679" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022687389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022724111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:39.672" endtime="20201030 15:52:39.680"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:39.681" endtime="20201030 15:52:39.682"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.379" endtime="20201030 15:52:39.683"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.377" endtime="20201030 15:52:39.683"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:39.687" level="INFO">${RESULT} = [{'diff': 3.672200000000292e-05}, {'diff': 3.556999999999866e-05}, {'diff': 3.5582999999998755e-05}, {'diff': 3.5582999999998755e-05}, {'diff': 3.556999999999866e-05}, {'diff': 3.552799999999995e-05},...</msg>
<status status="PASS" starttime="20201030 15:52:39.684" endtime="20201030 15:52:39.687"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:39.691" level="INFO">${ACCURACY} = {'diff': [3.672200000000292e-05, 3.556999999999866e-05, 3.5582999999998755e-05, 3.5582999999998755e-05, 3.556999999999866e-05, 3.552799999999995e-05, 3.5610999999997894e-05, 3.5611000000001364e-05, 3....</msg>
<status status="PASS" starttime="20201030 15:52:39.688" endtime="20201030 15:52:39.692"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:39.696" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201030 15:52:39.695" endtime="20201030 15:52:39.696"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:39.698" level="INFO">VALUE: [3.672200000000292e-05, 3.556999999999866e-05, 3.5582999999998755e-05, 3.5582999999998755e-05, 3.556999999999866e-05, 3.552799999999995e-05, 3.5610999999997894e-05, 3.5611000000001364e-05, 3.5582999999998755e-05, 3.5666999999999643e-05, 3.5583000000002224e-05, 3.5527000000000475e-05, 3.552799999999995e-05, 3.5611000000001364e-05, 3.5583000000002224e-05, 3.559800000000127e-05, 3.555600000000256e-05, 3.5639000000000504e-05, 3.5582999999998755e-05, 3.5596999999998324e-05, 3.5625000000000934e-05, 3.55840000000017e-05, 3.5596999999998324e-05, 3.5611000000001364e-05, 3.55840000000017e-05, 3.5597000000001794e-05, 3.5541000000000045e-05, 3.5582999999998755e-05, 3.5583000000002224e-05, 3.55840000000017e-05, 3.555599999999909e-05, 3.5554999999999615e-05, 3.55840000000017e-05, 3.5610999999997894e-05, 3.5569000000002654e-05, 3.55840000000017e-05, 3.558399999999823e-05, 3.5596999999998324e-05, 3.5582999999998755e-05, 3.5596999999998324e-05, 3.5568999999999185e-05, 3.55840000000017e-05, 3.5582999999998755e-05, 3.558399999999823e-05, 3.555600000000256e-05, 3.55840000000017e-05, 3.5596999999998324e-05, 3.5555000000003084e-05, 3.5625000000000934e-05, 3.5582999999998755e-05]</msg>
<status status="PASS" starttime="20201030 15:52:39.697" endtime="20201030 15:52:39.700"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.692" endtime="20201030 15:52:39.700"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:39.704" endtime="20201030 15:52:39.723"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.702" endtime="20201030 15:52:39.724"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.701" endtime="20201030 15:52:39.724"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.346" endtime="20201030 15:52:39.725"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.346" endtime="20201030 15:52:39.725"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:39.733" endtime="20201030 15:52:39.748"></status>
</kw>
<msg timestamp="20201030 15:52:39.749" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:39.732" endtime="20201030 15:52:39.749"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:39.751" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:39.750" endtime="20201030 15:52:39.752"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:39.752" endtime="20201030 15:52:39.754"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.729" endtime="20201030 15:52:39.754"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.727" endtime="20201030 15:52:39.755"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:39.761" endtime="20201030 15:52:40.047"></status>
</kw>
<msg timestamp="20201030 15:52:40.050" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021673694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021710403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:39.760" endtime="20201030 15:52:40.050"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:40.058" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021673694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021710403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:40.051" endtime="20201030 15:52:40.058"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:40.059" endtime="20201030 15:52:40.061"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.757" endtime="20201030 15:52:40.061"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.755" endtime="20201030 15:52:40.062"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:40.066" level="INFO">${RESULT} = [{'diff': 3.670899999999935e-05}, {'diff': 4.052799999999801e-05}, {'diff': 4.050000000000234e-05}, {'diff': 4.051399999999844e-05}, {'diff': 4.049999999999887e-05}, {'diff': 4.049999999999887e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:40.062" endtime="20201030 15:52:40.066"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:40.071" level="INFO">${ACCURACY} = {'diff': [3.670899999999935e-05, 4.052799999999801e-05, 4.050000000000234e-05, 4.051399999999844e-05, 4.049999999999887e-05, 4.049999999999887e-05, 4.051399999999844e-05, 4.0487000000002243e-05, 4.051...</msg>
<status status="PASS" starttime="20201030 15:52:40.067" endtime="20201030 15:52:40.071"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:40.075" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201030 15:52:40.074" endtime="20201030 15:52:40.075"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:40.077" level="INFO">VALUE: [3.670899999999935e-05, 4.052799999999801e-05, 4.050000000000234e-05, 4.051399999999844e-05, 4.049999999999887e-05, 4.049999999999887e-05, 4.051399999999844e-05, 4.0487000000002243e-05, 4.051400000000191e-05, 4.04859999999993e-05, 4.049999999999887e-05, 4.049999999999887e-05, 4.051399999999844e-05, 4.049999999999887e-05, 4.0472999999999204e-05, 4.052799999999801e-05, 4.051399999999844e-05, 4.049999999999887e-05, 4.045800000000016e-05, 4.049999999999887e-05, 4.04859999999993e-05, 4.0583000000000286e-05, 4.049999999999887e-05, 4.050000000000234e-05, 4.049999999999887e-05, 4.051400000000191e-05, 4.051399999999844e-05, 4.049999999999887e-05, 4.051399999999844e-05, 4.051399999999844e-05, 4.04859999999993e-05, 4.049999999999887e-05, 4.0512999999998967e-05, 4.050000000000234e-05, 4.049999999999887e-05, 4.049999999999887e-05, 4.049999999999887e-05, 4.051399999999844e-05, 4.0555000000001146e-05, 4.051399999999844e-05, 4.051400000000191e-05, 4.052800000000148e-05, 4.052799999999801e-05, 4.055600000000062e-05, 4.051399999999844e-05, 4.04859999999993e-05, 4.050000000000234e-05, 4.050000000000234e-05, 4.052799999999801e-05, 4.054199999999758e-05]</msg>
<status status="PASS" starttime="20201030 15:52:40.076" endtime="20201030 15:52:40.078"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.071" endtime="20201030 15:52:40.079"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:40.082" endtime="20201030 15:52:40.102"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.081" endtime="20201030 15:52:40.103"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.080" endtime="20201030 15:52:40.104"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.726" endtime="20201030 15:52:40.104"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.725" endtime="20201030 15:52:40.104"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:40.114" endtime="20201030 15:52:40.129"></status>
</kw>
<msg timestamp="20201030 15:52:40.130" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:40.112" endtime="20201030 15:52:40.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:40.133" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:40.131" endtime="20201030 15:52:40.134"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:40.135" endtime="20201030 15:52:40.136"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.109" endtime="20201030 15:52:40.137"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.107" endtime="20201030 15:52:40.138"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:40.146" endtime="20201030 15:52:40.433"></status>
</kw>
<msg timestamp="20201030 15:52:40.436" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023731597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023773222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:40.144" endtime="20201030 15:52:40.436"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:40.444" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023731597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023773222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:40.437" endtime="20201030 15:52:40.445"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:40.446" endtime="20201030 15:52:40.447"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.140" endtime="20201030 15:52:40.448"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.138" endtime="20201030 15:52:40.448"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:40.452" level="INFO">${RESULT} = [{'diff': 4.1624999999999995e-05}, {'diff': 4.052799999999801e-05}, {'diff': 4.051399999999844e-05}, {'diff': 4.051399999999844e-05}, {'diff': 4.049999999999887e-05}, {'diff': 4.045800000000016e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:52:40.449" endtime="20201030 15:52:40.452"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:40.456" level="INFO">${ACCURACY} = {'diff': [4.1624999999999995e-05, 4.052799999999801e-05, 4.051399999999844e-05, 4.051399999999844e-05, 4.049999999999887e-05, 4.045800000000016e-05, 4.050000000000234e-05, 4.051399999999844e-05, 4.054...</msg>
<status status="PASS" starttime="20201030 15:52:40.453" endtime="20201030 15:52:40.456"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:40.461" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201030 15:52:40.460" endtime="20201030 15:52:40.461"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:40.463" level="INFO">VALUE: [4.1624999999999995e-05, 4.052799999999801e-05, 4.051399999999844e-05, 4.051399999999844e-05, 4.049999999999887e-05, 4.045800000000016e-05, 4.050000000000234e-05, 4.051399999999844e-05, 4.054200000000105e-05, 4.051399999999844e-05, 4.04859999999993e-05, 4.0431000000000494e-05, 4.049999999999887e-05, 4.0540999999998106e-05, 4.051400000000191e-05, 4.051399999999844e-05, 4.0526999999998536e-05, 4.0527000000002006e-05, 4.052800000000148e-05, 4.051400000000191e-05, 4.052800000000148e-05, 4.051399999999844e-05, 4.0596999999999855e-05, 4.052800000000148e-05, 4.0540999999998106e-05, 4.051400000000191e-05, 4.051400000000191e-05, 4.049999999999887e-05, 4.050000000000234e-05, 4.051399999999844e-05, 4.051399999999844e-05, 4.051399999999844e-05, 4.052800000000148e-05, 4.052800000000148e-05, 4.04859999999993e-05, 4.043000000000102e-05, 4.051399999999844e-05, 4.052800000000148e-05, 4.04859999999993e-05, 4.044400000000059e-05, 4.051400000000191e-05, 4.051400000000191e-05, 4.045800000000016e-05, 4.054200000000105e-05, 4.052800000000148e-05, 4.0445000000000064e-05, 4.050000000000234e-05, 4.049999999999887e-05, 4.052800000000148e-05, 4.051400000000191e-05]</msg>
<status status="PASS" starttime="20201030 15:52:40.462" endtime="20201030 15:52:40.464"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.457" endtime="20201030 15:52:40.464"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:40.468" endtime="20201030 15:52:40.487"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.467" endtime="20201030 15:52:40.488"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.465" endtime="20201030 15:52:40.488"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.105" endtime="20201030 15:52:40.489"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.105" endtime="20201030 15:52:40.489"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:40.497" endtime="20201030 15:52:40.514"></status>
</kw>
<msg timestamp="20201030 15:52:40.514" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:40.496" endtime="20201030 15:52:40.514"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:40.516" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:40.515" endtime="20201030 15:52:40.517"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:40.517" endtime="20201030 15:52:40.519"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.493" endtime="20201030 15:52:40.520"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.491" endtime="20201030 15:52:40.520"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:40.526" endtime="20201030 15:52:40.812"></status>
</kw>
<msg timestamp="20201030 15:52:40.815" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022727181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022768819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:40.525" endtime="20201030 15:52:40.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:40.823" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022727181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022768819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:40.816" endtime="20201030 15:52:40.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:40.824" endtime="20201030 15:52:40.826"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.522" endtime="20201030 15:52:40.826"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.521" endtime="20201030 15:52:40.827"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:40.831" level="INFO">${RESULT} = [{'diff': 4.163800000000009e-05}, {'diff': 4.052800000000148e-05}, {'diff': 4.051399999999844e-05}, {'diff': 4.049999999999887e-05}, {'diff': 4.051399999999844e-05}, {'diff': 4.050000000000234e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:40.828" endtime="20201030 15:52:40.831"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:40.835" level="INFO">${ACCURACY} = {'diff': [4.163800000000009e-05, 4.052800000000148e-05, 4.051399999999844e-05, 4.049999999999887e-05, 4.051399999999844e-05, 4.050000000000234e-05, 4.051399999999844e-05, 4.049999999999887e-05, 4.0499...</msg>
<status status="PASS" starttime="20201030 15:52:40.832" endtime="20201030 15:52:40.835"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:40.839" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201030 15:52:40.838" endtime="20201030 15:52:40.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:40.842" level="INFO">VALUE: [4.163800000000009e-05, 4.052800000000148e-05, 4.051399999999844e-05, 4.049999999999887e-05, 4.051399999999844e-05, 4.050000000000234e-05, 4.051399999999844e-05, 4.049999999999887e-05, 4.049999999999887e-05, 4.055599999999715e-05, 4.049999999999887e-05, 4.050000000000234e-05, 4.0526999999998536e-05, 4.0458999999999634e-05, 4.049999999999887e-05, 4.04859999999993e-05, 4.049999999999887e-05, 4.04859999999993e-05, 4.051400000000191e-05, 4.055600000000062e-05, 4.045800000000016e-05, 4.04859999999993e-05, 4.049999999999887e-05, 4.050000000000234e-05, 4.049999999999887e-05, 4.051400000000191e-05, 4.049999999999887e-05, 4.04859999999993e-05, 4.051400000000191e-05, 4.0526999999998536e-05, 4.049999999999887e-05, 4.054199999999758e-05, 4.049999999999887e-05, 4.057000000000019e-05, 4.051399999999844e-05, 4.051400000000191e-05, 4.049999999999887e-05, 4.052799999999801e-05, 4.0513000000002436e-05, 4.047199999999973e-05, 4.051399999999844e-05, 4.0487000000002243e-05, 4.048600000000277e-05, 4.051399999999844e-05, 4.051400000000191e-05, 4.051399999999844e-05, 4.0527000000002006e-05, 4.051400000000191e-05, 4.051399999999844e-05, 4.051399999999844e-05]</msg>
<status status="PASS" starttime="20201030 15:52:40.840" endtime="20201030 15:52:40.902"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.836" endtime="20201030 15:52:40.902"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:40.906" endtime="20201030 15:52:40.925"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.904" endtime="20201030 15:52:40.926"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.903" endtime="20201030 15:52:40.926"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.490" endtime="20201030 15:52:40.926"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.489" endtime="20201030 15:52:40.927"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:40.935" endtime="20201030 15:52:40.950"></status>
</kw>
<msg timestamp="20201030 15:52:40.951" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:40.934" endtime="20201030 15:52:40.951"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:40.953" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:40.952" endtime="20201030 15:52:40.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:40.954" endtime="20201030 15:52:40.956"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.931" endtime="20201030 15:52:40.956"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.929" endtime="20201030 15:52:40.957"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:40.963" endtime="20201030 15:52:41.248"></status>
</kw>
<msg timestamp="20201030 15:52:41.251" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021791153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021832778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:40.962" endtime="20201030 15:52:41.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:41.259" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021791153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021832778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:41.252" endtime="20201030 15:52:41.259"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:41.260" endtime="20201030 15:52:41.262"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.959" endtime="20201030 15:52:41.262"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.957" endtime="20201030 15:52:41.263"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:41.267" level="INFO">${RESULT} = [{'diff': 4.1624999999999995e-05}, {'diff': 4.049999999999887e-05}, {'diff': 4.051400000000191e-05}, {'diff': 4.049999999999887e-05}, {'diff': 4.054200000000105e-05}, {'diff': 4.04859999999993e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:41.263" endtime="20201030 15:52:41.267"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:41.272" level="INFO">${ACCURACY} = {'diff': [4.1624999999999995e-05, 4.049999999999887e-05, 4.051400000000191e-05, 4.049999999999887e-05, 4.054200000000105e-05, 4.04859999999993e-05, 4.050000000000234e-05, 4.054200000000105e-05, 4.0527...</msg>
<status status="PASS" starttime="20201030 15:52:41.268" endtime="20201030 15:52:41.272"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:41.276" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201030 15:52:41.275" endtime="20201030 15:52:41.276"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:41.279" level="INFO">VALUE: [4.1624999999999995e-05, 4.049999999999887e-05, 4.051400000000191e-05, 4.049999999999887e-05, 4.054200000000105e-05, 4.04859999999993e-05, 4.050000000000234e-05, 4.054200000000105e-05, 4.0527000000002006e-05, 4.054199999999758e-05, 4.049999999999887e-05, 4.048600000000277e-05, 4.051400000000191e-05, 4.051400000000191e-05, 4.04859999999993e-05, 4.052800000000148e-05, 4.051400000000191e-05, 4.048600000000277e-05, 4.052800000000148e-05, 4.050000000000234e-05, 4.0512999999998967e-05, 4.049999999999887e-05, 4.0541000000001576e-05, 4.051399999999844e-05, 4.057000000000019e-05, 4.051399999999844e-05, 4.049999999999887e-05, 4.04859999999993e-05, 4.04859999999993e-05, 4.050000000000234e-05, 4.048600000000277e-05, 4.051399999999844e-05, 4.049999999999887e-05, 4.045800000000016e-05, 4.0526999999998536e-05, 4.04859999999993e-05, 4.051400000000191e-05, 4.049999999999887e-05, 4.049999999999887e-05, 4.049999999999887e-05, 4.049999999999887e-05, 4.048600000000277e-05, 4.051400000000191e-05, 4.049999999999887e-05, 4.051400000000191e-05, 4.0555000000001146e-05, 4.051400000000191e-05, 4.051400000000191e-05, 4.0458999999999634e-05, 4.049999999999887e-05]</msg>
<status status="PASS" starttime="20201030 15:52:41.277" endtime="20201030 15:52:41.279"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.273" endtime="20201030 15:52:41.280"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:41.283" endtime="20201030 15:52:41.303"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.282" endtime="20201030 15:52:41.304"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.281" endtime="20201030 15:52:41.304"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.927" endtime="20201030 15:52:41.304"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.927" endtime="20201030 15:52:41.304"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:41.313" endtime="20201030 15:52:41.328"></status>
</kw>
<msg timestamp="20201030 15:52:41.328" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:41.311" endtime="20201030 15:52:41.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:41.331" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:41.329" endtime="20201030 15:52:41.331"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:41.332" endtime="20201030 15:52:41.334"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.309" endtime="20201030 15:52:41.334"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.307" endtime="20201030 15:52:41.335"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:41.341" endtime="20201030 15:52:41.647"></status>
</kw>
<msg timestamp="20201030 15:52:41.653" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021734986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021776611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:41.339" endtime="20201030 15:52:41.654"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:41.661" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021734986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021776611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:41.654" endtime="20201030 15:52:41.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:41.663" endtime="20201030 15:52:41.664"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.337" endtime="20201030 15:52:41.665"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.335" endtime="20201030 15:52:41.665"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:41.669" level="INFO">${RESULT} = [{'diff': 4.1624999999999995e-05}, {'diff': 4.048600000000277e-05}, {'diff': 4.049999999999887e-05}, {'diff': 4.04720000000032e-05}, {'diff': 4.049999999999887e-05}, {'diff': 4.049999999999887e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:41.666" endtime="20201030 15:52:41.669"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:41.673" level="INFO">${ACCURACY} = {'diff': [4.1624999999999995e-05, 4.048600000000277e-05, 4.049999999999887e-05, 4.04720000000032e-05, 4.049999999999887e-05, 4.049999999999887e-05, 4.051400000000191e-05, 4.051400000000191e-05, 4.0528...</msg>
<status status="PASS" starttime="20201030 15:52:41.670" endtime="20201030 15:52:41.673"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:41.678" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201030 15:52:41.677" endtime="20201030 15:52:41.678"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:41.680" level="INFO">VALUE: [4.1624999999999995e-05, 4.048600000000277e-05, 4.049999999999887e-05, 4.04720000000032e-05, 4.049999999999887e-05, 4.049999999999887e-05, 4.051400000000191e-05, 4.051400000000191e-05, 4.052800000000148e-05, 4.04859999999993e-05, 4.047199999999973e-05, 4.050000000000234e-05, 4.5402999999999416e-05, 4.050000000000234e-05, 4.044399999999712e-05, 4.049999999999887e-05, 4.04859999999993e-05, 4.049999999999887e-05, 4.054200000000105e-05, 4.054200000000105e-05, 4.0458999999999634e-05, 4.050000000000234e-05, 4.04859999999993e-05, 4.050000000000234e-05, 4.04859999999993e-05, 4.04859999999993e-05, 4.04859999999993e-05, 4.049999999999887e-05, 4.048600000000277e-05, 4.051399999999844e-05, 4.054200000000105e-05, 4.052799999999801e-05, 4.051400000000191e-05, 4.047199999999973e-05, 4.049999999999887e-05, 4.052799999999801e-05, 4.047199999999973e-05, 4.051400000000191e-05, 4.054200000000105e-05, 4.049999999999887e-05, 4.050000000000234e-05, 4.044400000000059e-05, 4.047199999999973e-05, 4.051399999999844e-05, 4.050000000000234e-05, 4.04859999999993e-05, 4.052800000000148e-05, 4.051399999999844e-05, 4.045800000000016e-05, 4.049999999999887e-05]</msg>
<status status="PASS" starttime="20201030 15:52:41.679" endtime="20201030 15:52:41.681"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.674" endtime="20201030 15:52:41.681"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:41.685" endtime="20201030 15:52:41.704"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.683" endtime="20201030 15:52:41.705"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.682" endtime="20201030 15:52:41.705"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.305" endtime="20201030 15:52:41.706"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.305" endtime="20201030 15:52:41.706"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:41.714" endtime="20201030 15:52:41.731"></status>
</kw>
<msg timestamp="20201030 15:52:41.731" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:41.713" endtime="20201030 15:52:41.731"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:41.734" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:41.732" endtime="20201030 15:52:41.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:41.735" endtime="20201030 15:52:41.736"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.710" endtime="20201030 15:52:41.737"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.708" endtime="20201030 15:52:41.737"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:41.744" endtime="20201030 15:52:42.029"></status>
</kw>
<msg timestamp="20201030 15:52:42.032" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022644792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022691319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:41.742" endtime="20201030 15:52:42.032"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:42.040" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022644792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022691319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:42.033" endtime="20201030 15:52:42.040"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:42.041" endtime="20201030 15:52:42.043"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.739" endtime="20201030 15:52:42.043"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.738" endtime="20201030 15:52:42.044"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:42.048" level="INFO">${RESULT} = [{'diff': 4.652700000000107e-05}, {'diff': 4.541600000000298e-05}, {'diff': 4.544400000000212e-05}, {'diff': 4.542999999999908e-05}, {'diff': 4.5416999999998986e-05}, {'diff': 4.5445000000001595e-05},...</msg>
<status status="PASS" starttime="20201030 15:52:42.045" endtime="20201030 15:52:42.048"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:42.052" level="INFO">${ACCURACY} = {'diff': [4.652700000000107e-05, 4.541600000000298e-05, 4.544400000000212e-05, 4.542999999999908e-05, 4.5416999999998986e-05, 4.5445000000001595e-05, 4.5403000000002885e-05, 4.545799999999822e-05, 4.5...</msg>
<status status="PASS" starttime="20201030 15:52:42.049" endtime="20201030 15:52:42.052"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:42.056" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201030 15:52:42.055" endtime="20201030 15:52:42.057"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:42.060" level="INFO">VALUE: [4.652700000000107e-05, 4.541600000000298e-05, 4.544400000000212e-05, 4.542999999999908e-05, 4.5416999999998986e-05, 4.5445000000001595e-05, 4.5403000000002885e-05, 4.545799999999822e-05, 4.5431000000002025e-05, 4.5402999999999416e-05, 4.5417000000002455e-05, 4.542999999999908e-05, 4.5417000000002455e-05, 4.542999999999908e-05, 4.547200000000126e-05, 4.5416999999998986e-05, 4.5403000000002885e-05, 4.5430999999998556e-05, 4.542999999999908e-05, 4.5388999999999846e-05, 4.545799999999822e-05, 4.541599999999951e-05, 4.5416999999998986e-05, 4.5416999999998986e-05, 4.5375000000000276e-05, 4.547199999999779e-05, 4.541599999999951e-05, 4.5430999999998556e-05, 4.55000000000004e-05, 4.5430999999998556e-05, 4.5402999999999416e-05, 4.540199999999994e-05, 4.541599999999951e-05, 4.5361000000000706e-05, 4.542999999999908e-05, 4.5416999999998986e-05, 4.543000000000255e-05, 4.5430999999998556e-05, 4.5388999999999846e-05, 4.5403000000002885e-05, 4.5402999999999416e-05, 4.5416999999998986e-05, 4.542999999999908e-05, 4.541599999999951e-05, 4.542999999999908e-05, 4.5416999999998986e-05, 4.5431000000002025e-05, 4.5416999999998986e-05, 4.5402999999999416e-05, 4.545800000000169e-05]</msg>
<status status="PASS" starttime="20201030 15:52:42.057" endtime="20201030 15:52:42.060"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.053" endtime="20201030 15:52:42.061"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:42.065" endtime="20201030 15:52:42.084"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.063" endtime="20201030 15:52:42.085"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.062" endtime="20201030 15:52:42.085"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.707" endtime="20201030 15:52:42.085"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.706" endtime="20201030 15:52:42.085"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:42.094" endtime="20201030 15:52:42.109"></status>
</kw>
<msg timestamp="20201030 15:52:42.110" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:42.092" endtime="20201030 15:52:42.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:42.112" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:42.111" endtime="20201030 15:52:42.113"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:42.113" endtime="20201030 15:52:42.115"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.090" endtime="20201030 15:52:42.115"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.088" endtime="20201030 15:52:42.116"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:42.122" endtime="20201030 15:52:42.407"></status>
</kw>
<msg timestamp="20201030 15:52:42.410" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021681111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021727653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:42.121" endtime="20201030 15:52:42.411"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:42.419" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021681111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021727653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:42.412" endtime="20201030 15:52:42.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:42.420" endtime="20201030 15:52:42.421"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.118" endtime="20201030 15:52:42.422"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.116" endtime="20201030 15:52:42.422"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:42.426" level="INFO">${RESULT} = [{'diff': 4.654200000000011e-05}, {'diff': 4.542999999999908e-05}, {'diff': 4.5430999999998556e-05}, {'diff': 4.5402999999999416e-05}, {'diff': 4.542999999999908e-05}, {'diff': 4.5417000000002455e-05}...</msg>
<status status="PASS" starttime="20201030 15:52:42.423" endtime="20201030 15:52:42.427"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:42.434" level="INFO">${ACCURACY} = {'diff': [4.654200000000011e-05, 4.542999999999908e-05, 4.5430999999998556e-05, 4.5402999999999416e-05, 4.542999999999908e-05, 4.5417000000002455e-05, 4.543000000000255e-05, 4.544400000000212e-05, 4.5...</msg>
<status status="PASS" starttime="20201030 15:52:42.427" endtime="20201030 15:52:42.434"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:42.438" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201030 15:52:42.437" endtime="20201030 15:52:42.439"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:42.441" level="INFO">VALUE: [4.654200000000011e-05, 4.542999999999908e-05, 4.5430999999998556e-05, 4.5402999999999416e-05, 4.542999999999908e-05, 4.5417000000002455e-05, 4.543000000000255e-05, 4.544400000000212e-05, 4.542999999999908e-05, 4.543000000000255e-05, 4.5473000000000735e-05, 4.541600000000298e-05, 4.5402999999999416e-05, 4.542999999999908e-05, 4.5416999999998986e-05, 4.5431000000002025e-05, 4.542999999999908e-05, 4.5430999999998556e-05, 4.5445000000001595e-05, 4.5416999999998986e-05, 4.5430999999998556e-05, 4.5445000000001595e-05, 4.5416999999998986e-05, 4.547200000000126e-05, 4.5430999999998556e-05, 4.5375000000000276e-05, 4.5416999999998986e-05, 4.543000000000255e-05, 4.55000000000004e-05, 4.5402999999999416e-05, 4.5430999999998556e-05, 4.542999999999908e-05, 4.542999999999908e-05, 4.540199999999994e-05, 4.540199999999994e-05, 4.541599999999951e-05, 4.5430999999998556e-05, 4.5416999999998986e-05, 4.5417000000002455e-05, 4.5430999999998556e-05, 4.5445000000001595e-05, 4.544400000000212e-05, 4.542999999999908e-05, 4.5459000000001165e-05, 4.5402999999999416e-05, 4.5430999999998556e-05, 4.541599999999951e-05, 4.5430999999998556e-05, 4.5403000000002885e-05, 4.5416999999998986e-05]</msg>
<status status="PASS" starttime="20201030 15:52:42.439" endtime="20201030 15:52:42.441"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.435" endtime="20201030 15:52:42.442"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:42.446" endtime="20201030 15:52:42.465"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.444" endtime="20201030 15:52:42.466"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.443" endtime="20201030 15:52:42.466"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.086" endtime="20201030 15:52:42.466"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.086" endtime="20201030 15:52:42.466"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:42.475" endtime="20201030 15:52:42.490"></status>
</kw>
<msg timestamp="20201030 15:52:42.491" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:42.473" endtime="20201030 15:52:42.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:42.494" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:42.492" endtime="20201030 15:52:42.495"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:42.496" endtime="20201030 15:52:42.498"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.471" endtime="20201030 15:52:42.498"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.469" endtime="20201030 15:52:42.499"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:42.507" endtime="20201030 15:52:42.794"></status>
</kw>
<msg timestamp="20201030 15:52:42.797" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021629153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021675681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:42.505" endtime="20201030 15:52:42.797"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:42.805" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021629153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021675681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:42.798" endtime="20201030 15:52:42.806"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:42.806" endtime="20201030 15:52:42.808"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.502" endtime="20201030 15:52:42.809"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.499" endtime="20201030 15:52:42.809"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:42.813" level="INFO">${RESULT} = [{'diff': 4.652799999999707e-05}, {'diff': 4.5444999999998126e-05}, {'diff': 4.544400000000212e-05}, {'diff': 4.5402999999999416e-05}, {'diff': 4.5402999999999416e-05}, {'diff': 4.5402999999999416e-05...</msg>
<status status="PASS" starttime="20201030 15:52:42.810" endtime="20201030 15:52:42.813"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:42.817" level="INFO">${ACCURACY} = {'diff': [4.652799999999707e-05, 4.5444999999998126e-05, 4.544400000000212e-05, 4.5402999999999416e-05, 4.5402999999999416e-05, 4.5402999999999416e-05, 4.543000000000255e-05, 4.547200000000126e-05, 4....</msg>
<status status="PASS" starttime="20201030 15:52:42.814" endtime="20201030 15:52:42.817"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:42.822" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201030 15:52:42.821" endtime="20201030 15:52:42.822"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:42.824" level="INFO">VALUE: [4.652799999999707e-05, 4.5444999999998126e-05, 4.544400000000212e-05, 4.5402999999999416e-05, 4.5402999999999416e-05, 4.5402999999999416e-05, 4.543000000000255e-05, 4.547200000000126e-05, 4.5347000000001136e-05, 4.5388999999999846e-05, 4.5444999999998126e-05, 4.5417000000002455e-05, 4.5388999999999846e-05, 4.540199999999994e-05, 4.5417000000002455e-05, 4.541599999999951e-05, 4.543000000000255e-05, 4.542999999999908e-05, 4.5430999999998556e-05, 4.5473000000000735e-05, 4.543000000000255e-05, 4.5402999999999416e-05, 4.5402999999999416e-05, 4.5417000000002455e-05, 4.5459000000001165e-05, 4.5473000000000735e-05, 4.5417000000002455e-05, 4.5430999999998556e-05, 4.541599999999951e-05, 4.541599999999951e-05, 4.540199999999994e-05, 4.5416999999998986e-05, 4.5388999999999846e-05, 4.5361000000000706e-05, 4.540199999999994e-05, 4.5431000000002025e-05, 4.5347000000001136e-05, 4.5402999999999416e-05, 4.5416999999998986e-05, 4.542999999999908e-05, 4.5430999999998556e-05, 4.543000000000255e-05, 4.542999999999908e-05, 4.5416999999998986e-05, 4.5430999999998556e-05, 4.542999999999908e-05, 4.5402999999999416e-05, 4.541599999999951e-05, 4.5403000000002885e-05, 4.540199999999994e-05]</msg>
<status status="PASS" starttime="20201030 15:52:42.823" endtime="20201030 15:52:42.825"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.818" endtime="20201030 15:52:42.825"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:42.829" endtime="20201030 15:52:42.848"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.827" endtime="20201030 15:52:42.849"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.826" endtime="20201030 15:52:42.849"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.467" endtime="20201030 15:52:42.850"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.467" endtime="20201030 15:52:42.850"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:42.858" endtime="20201030 15:52:42.875"></status>
</kw>
<msg timestamp="20201030 15:52:42.875" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:42.857" endtime="20201030 15:52:42.875"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:42.878" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:42.876" endtime="20201030 15:52:42.878"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:42.879" endtime="20201030 15:52:42.880"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.854" endtime="20201030 15:52:42.881"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.852" endtime="20201030 15:52:42.881"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:42.888" endtime="20201030 15:52:43.172"></status>
</kw>
<msg timestamp="20201030 15:52:43.175" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022591181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022637722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:42.886" endtime="20201030 15:52:43.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:43.184" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022591181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022637722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:43.177" endtime="20201030 15:52:43.184"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:43.185" endtime="20201030 15:52:43.186"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.884" endtime="20201030 15:52:43.187"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.882" endtime="20201030 15:52:43.187"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:43.191" level="INFO">${RESULT} = [{'diff': 4.654100000000064e-05}, {'diff': 4.544399999999865e-05}, {'diff': 4.542999999999908e-05}, {'diff': 4.5430999999998556e-05}, {'diff': 4.5416999999998986e-05}, {'diff': 4.542999999999908e-05},...</msg>
<status status="PASS" starttime="20201030 15:52:43.188" endtime="20201030 15:52:43.192"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:43.196" level="INFO">${ACCURACY} = {'diff': [4.654100000000064e-05, 4.544399999999865e-05, 4.542999999999908e-05, 4.5430999999998556e-05, 4.5416999999998986e-05, 4.542999999999908e-05, 4.5417000000002455e-05, 4.5417000000002455e-05, 4....</msg>
<status status="PASS" starttime="20201030 15:52:43.192" endtime="20201030 15:52:43.196"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:43.200" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201030 15:52:43.199" endtime="20201030 15:52:43.200"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:43.202" level="INFO">VALUE: [4.654100000000064e-05, 4.544399999999865e-05, 4.542999999999908e-05, 4.5430999999998556e-05, 4.5416999999998986e-05, 4.542999999999908e-05, 4.5417000000002455e-05, 4.5417000000002455e-05, 4.541599999999951e-05, 4.5375000000000276e-05, 4.5444999999998126e-05, 4.5388999999999846e-05, 4.5417000000002455e-05, 4.543000000000255e-05, 4.5417000000002455e-05, 4.5430999999998556e-05, 4.5388999999999846e-05, 4.5430999999998556e-05, 4.5402999999999416e-05, 4.544399999999865e-05, 4.542999999999908e-05, 4.541599999999951e-05, 4.5361000000000706e-05, 4.5402999999999416e-05, 4.545800000000169e-05, 4.542999999999908e-05, 4.5416999999998986e-05, 4.5388999999999846e-05, 4.542999999999908e-05, 4.5416999999998986e-05, 4.5416999999998986e-05, 4.541600000000298e-05, 4.538800000000037e-05, 4.542999999999908e-05, 4.5416999999998986e-05, 4.5430999999998556e-05, 4.544399999999865e-05, 4.547199999999779e-05, 4.542999999999908e-05, 4.542999999999908e-05, 4.540199999999994e-05, 4.5445000000001595e-05, 4.5402999999999416e-05, 4.5416999999998986e-05, 4.541599999999951e-05, 4.548599999999736e-05, 4.5402999999999416e-05, 4.544399999999865e-05, 4.541599999999951e-05, 4.541599999999951e-05]</msg>
<status status="PASS" starttime="20201030 15:52:43.201" endtime="20201030 15:52:43.204"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.196" endtime="20201030 15:52:43.205"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:43.208" endtime="20201030 15:52:43.228"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.207" endtime="20201030 15:52:43.228"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.206" endtime="20201030 15:52:43.228"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.851" endtime="20201030 15:52:43.229"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.850" endtime="20201030 15:52:43.229"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:43.237" endtime="20201030 15:52:43.253"></status>
</kw>
<msg timestamp="20201030 15:52:43.253" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:43.236" endtime="20201030 15:52:43.253"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:43.256" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:43.254" endtime="20201030 15:52:43.256"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:43.257" endtime="20201030 15:52:43.258"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.233" endtime="20201030 15:52:43.259"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.231" endtime="20201030 15:52:43.259"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:43.266" endtime="20201030 15:52:43.551"></status>
</kw>
<msg timestamp="20201030 15:52:43.554" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021679694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02172625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:52:43.264" endtime="20201030 15:52:43.554"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:43.562" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021679694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02172625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:52:43.555" endtime="20201030 15:52:43.562"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:43.563" endtime="20201030 15:52:43.565"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.262" endtime="20201030 15:52:43.565"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.260" endtime="20201030 15:52:43.566"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:43.570" level="INFO">${RESULT} = [{'diff': 4.655599999999968e-05}, {'diff': 4.540199999999994e-05}, {'diff': 4.541600000000298e-05}, {'diff': 4.5430999999998556e-05}, {'diff': 4.5417000000002455e-05}, {'diff': 4.543000000000255e-05},...</msg>
<status status="PASS" starttime="20201030 15:52:43.567" endtime="20201030 15:52:43.570"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:43.575" level="INFO">${ACCURACY} = {'diff': [4.655599999999968e-05, 4.540199999999994e-05, 4.541600000000298e-05, 4.5430999999998556e-05, 4.5417000000002455e-05, 4.543000000000255e-05, 4.545800000000169e-05, 5.03469999999992e-05, 4.541...</msg>
<status status="PASS" starttime="20201030 15:52:43.571" endtime="20201030 15:52:43.575"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:43.579" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201030 15:52:43.578" endtime="20201030 15:52:43.580"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:43.582" level="INFO">VALUE: [4.655599999999968e-05, 4.540199999999994e-05, 4.541600000000298e-05, 4.5430999999998556e-05, 4.5417000000002455e-05, 4.543000000000255e-05, 4.545800000000169e-05, 5.03469999999992e-05, 4.5416999999998986e-05, 4.5430999999998556e-05, 4.5416999999998986e-05, 5.036099999999877e-05, 4.5430999999998556e-05, 4.5431000000002025e-05, 4.544399999999865e-05, 4.5361000000000706e-05, 4.5347000000001136e-05, 5.036099999999877e-05, 4.5444999999998126e-05, 4.5430999999998556e-05, 4.5431000000002025e-05, 5.03469999999992e-05, 5.031900000000006e-05, 4.5417000000002455e-05, 4.5445000000001595e-05, 4.5402999999999416e-05, 4.548600000000083e-05, 4.547200000000126e-05, 4.5487000000000305e-05, 5.03469999999992e-05, 5.031999999999953e-05, 4.5430999999998556e-05, 4.5402999999999416e-05, 4.5444999999998126e-05, 4.5445000000001595e-05, 4.547199999999779e-05, 4.542999999999908e-05, 5.034700000000267e-05, 4.541599999999951e-05, 4.5431000000002025e-05, 4.5402999999999416e-05, 4.547199999999779e-05, 4.5417000000002455e-05, 4.545800000000169e-05, 4.542999999999908e-05, 4.5417000000002455e-05, 4.545799999999822e-05, 4.544400000000212e-05, 4.544399999999865e-05, 4.540199999999994e-05]</msg>
<status status="PASS" starttime="20201030 15:52:43.580" endtime="20201030 15:52:43.582"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.576" endtime="20201030 15:52:43.583"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:43.587" endtime="20201030 15:52:43.606"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.585" endtime="20201030 15:52:43.607"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.584" endtime="20201030 15:52:43.608"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.230" endtime="20201030 15:52:43.608"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.229" endtime="20201030 15:52:43.609"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:43.619" endtime="20201030 15:52:43.635"></status>
</kw>
<msg timestamp="20201030 15:52:43.636" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:43.617" endtime="20201030 15:52:43.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:43.638" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:43.637" endtime="20201030 15:52:43.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:43.639" endtime="20201030 15:52:43.641"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.614" endtime="20201030 15:52:43.642"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.611" endtime="20201030 15:52:43.642"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:43.648" endtime="20201030 15:52:43.935"></status>
</kw>
<msg timestamp="20201030 15:52:43.938" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025533167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025584625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:43.647" endtime="20201030 15:52:43.939"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:43.947" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025533167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025584625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:43.940" endtime="20201030 15:52:43.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:43.948" endtime="20201030 15:52:43.950"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.644" endtime="20201030 15:52:43.950"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.643" endtime="20201030 15:52:43.951"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:43.954" level="INFO">${RESULT} = [{'diff': 5.145800000000075e-05}, {'diff': 5.03469999999992e-05}, {'diff': 5.033299999999963e-05}, {'diff': 5.031999999999953e-05}, {'diff': 5.034800000000214e-05}, {'diff': 5.03339999999991e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:52:43.951" endtime="20201030 15:52:43.955"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:43.959" level="INFO">${ACCURACY} = {'diff': [5.145800000000075e-05, 5.03469999999992e-05, 5.033299999999963e-05, 5.031999999999953e-05, 5.034800000000214e-05, 5.03339999999991e-05, 5.03469999999992e-05, 5.034799999999867e-05, 5.0333999...</msg>
<status status="PASS" starttime="20201030 15:52:43.955" endtime="20201030 15:52:43.959"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:43.963" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201030 15:52:43.962" endtime="20201030 15:52:43.963"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:43.965" level="INFO">VALUE: [5.145800000000075e-05, 5.03469999999992e-05, 5.033299999999963e-05, 5.031999999999953e-05, 5.034800000000214e-05, 5.03339999999991e-05, 5.03469999999992e-05, 5.034799999999867e-05, 5.03339999999991e-05, 5.033299999999963e-05, 5.030599999999996e-05, 5.040300000000095e-05, 5.03469999999992e-05, 5.03469999999992e-05, 5.03469999999992e-05, 5.03469999999992e-05, 5.03469999999992e-05, 5.034799999999867e-05, 5.043100000000009e-05, 5.034799999999867e-05, 5.033299999999963e-05, 5.03469999999992e-05, 5.036099999999877e-05, 5.03469999999992e-05, 5.036099999999877e-05, 5.027800000000082e-05, 5.043100000000009e-05, 5.034799999999867e-05, 5.036100000000224e-05, 5.034800000000214e-05, 5.041700000000052e-05, 5.034700000000267e-05, 5.036200000000171e-05, 5.033299999999963e-05, 5.037500000000181e-05, 5.036099999999877e-05, 5.036099999999877e-05, 5.037499999999834e-05, 5.037500000000181e-05, 5.036099999999877e-05, 5.034700000000267e-05, 5.036200000000171e-05, 5.03339999999991e-05, 5.034799999999867e-05, 5.036100000000224e-05, 5.03469999999992e-05, 5.033400000000257e-05, 5.03469999999992e-05, 5.03330000000031e-05, 5.036099999999877e-05]</msg>
<status status="PASS" starttime="20201030 15:52:43.964" endtime="20201030 15:52:43.966"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.959" endtime="20201030 15:52:43.967"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:43.970" endtime="20201030 15:52:43.990"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.969" endtime="20201030 15:52:43.991"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.968" endtime="20201030 15:52:43.991"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.609" endtime="20201030 15:52:43.991"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.609" endtime="20201030 15:52:43.991"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:44.000" endtime="20201030 15:52:44.016"></status>
</kw>
<msg timestamp="20201030 15:52:44.017" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:43.998" endtime="20201030 15:52:44.017"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:44.019" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:44.018" endtime="20201030 15:52:44.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:44.020" endtime="20201030 15:52:44.022"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.996" endtime="20201030 15:52:44.023"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.994" endtime="20201030 15:52:44.023"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:44.029" endtime="20201030 15:52:44.314"></status>
</kw>
<msg timestamp="20201030 15:52:44.317" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022773931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022825417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:44.028" endtime="20201030 15:52:44.317"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:44.325" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022773931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022825417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:44.318" endtime="20201030 15:52:44.326"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:44.326" endtime="20201030 15:52:44.328"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.025" endtime="20201030 15:52:44.329"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.024" endtime="20201030 15:52:44.329"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:44.333" level="INFO">${RESULT} = [{'diff': 5.148599999999989e-05}, {'diff': 5.036099999999877e-05}, {'diff': 5.03469999999992e-05}, {'diff': 5.031900000000006e-05}, {'diff': 5.033299999999963e-05}, {'diff': 5.041700000000052e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:52:44.330" endtime="20201030 15:52:44.333"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:44.337" level="INFO">${ACCURACY} = {'diff': [5.148599999999989e-05, 5.036099999999877e-05, 5.03469999999992e-05, 5.031900000000006e-05, 5.033299999999963e-05, 5.041700000000052e-05, 5.030500000000049e-05, 5.024999999999821e-05, 5.03479...</msg>
<status status="PASS" starttime="20201030 15:52:44.334" endtime="20201030 15:52:44.337"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:44.342" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201030 15:52:44.341" endtime="20201030 15:52:44.342"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:44.344" level="INFO">VALUE: [5.148599999999989e-05, 5.036099999999877e-05, 5.03469999999992e-05, 5.031900000000006e-05, 5.033299999999963e-05, 5.041700000000052e-05, 5.030500000000049e-05, 5.024999999999821e-05, 5.034799999999867e-05, 5.03469999999992e-05, 5.036100000000224e-05, 5.038899999999791e-05, 5.03339999999991e-05, 5.03339999999991e-05, 5.036100000000224e-05, 5.036099999999877e-05, 5.0401999999998004e-05, 5.033299999999963e-05, 5.033299999999963e-05, 5.03469999999992e-05, 5.033299999999963e-05, 5.034800000000214e-05, 5.03339999999991e-05, 5.033400000000257e-05, 5.036100000000224e-05, 5.03469999999992e-05, 5.03469999999992e-05, 5.03469999999992e-05, 5.034800000000214e-05, 5.034799999999867e-05, 5.03469999999992e-05, 5.034799999999867e-05, 5.031900000000006e-05, 5.033299999999963e-05, 5.041600000000104e-05, 5.03469999999992e-05, 5.03469999999992e-05, 5.033299999999963e-05, 5.03330000000031e-05, 5.037500000000181e-05, 5.033299999999963e-05, 5.033299999999963e-05, 5.033299999999963e-05, 5.03469999999992e-05, 5.034800000000214e-05, 5.033299999999963e-05, 5.033299999999963e-05, 5.033299999999963e-05, 5.034700000000267e-05, 5.034700000000267e-05]</msg>
<status status="PASS" starttime="20201030 15:52:44.343" endtime="20201030 15:52:44.346"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.338" endtime="20201030 15:52:44.346"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:44.350" endtime="20201030 15:52:44.369"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.348" endtime="20201030 15:52:44.370"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.347" endtime="20201030 15:52:44.370"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.992" endtime="20201030 15:52:44.370"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.992" endtime="20201030 15:52:44.371"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:44.379" endtime="20201030 15:52:44.395"></status>
</kw>
<msg timestamp="20201030 15:52:44.395" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:44.378" endtime="20201030 15:52:44.396"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:44.398" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:44.397" endtime="20201030 15:52:44.398"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:44.399" endtime="20201030 15:52:44.401"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.375" endtime="20201030 15:52:44.402"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.373" endtime="20201030 15:52:44.402"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:44.409" endtime="20201030 15:52:44.695"></status>
</kw>
<msg timestamp="20201030 15:52:44.699" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021702042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021753514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:44.407" endtime="20201030 15:52:44.699"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:44.707" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021702042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021753514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:44.700" endtime="20201030 15:52:44.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:44.708" endtime="20201030 15:52:44.709"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.405" endtime="20201030 15:52:44.710"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.403" endtime="20201030 15:52:44.710"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:44.714" level="INFO">${RESULT} = [{'diff': 5.147200000000032e-05}, {'diff': 5.034799999999867e-05}, {'diff': 5.034700000000267e-05}, {'diff': 5.040300000000095e-05}, {'diff': 5.034799999999867e-05}, {'diff': 5.03469999999992e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:52:44.711" endtime="20201030 15:52:44.715"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:44.719" level="INFO">${ACCURACY} = {'diff': [5.147200000000032e-05, 5.034799999999867e-05, 5.034700000000267e-05, 5.040300000000095e-05, 5.034799999999867e-05, 5.03469999999992e-05, 5.03469999999992e-05, 5.036099999999877e-05, 5.030599...</msg>
<status status="PASS" starttime="20201030 15:52:44.715" endtime="20201030 15:52:44.719"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:44.724" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201030 15:52:44.723" endtime="20201030 15:52:44.724"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:44.726" level="INFO">VALUE: [5.147200000000032e-05, 5.034799999999867e-05, 5.034700000000267e-05, 5.040300000000095e-05, 5.034799999999867e-05, 5.03469999999992e-05, 5.03469999999992e-05, 5.036099999999877e-05, 5.030599999999996e-05, 5.036100000000224e-05, 5.03339999999991e-05, 5.029200000000039e-05, 5.03469999999992e-05, 5.03339999999991e-05, 5.026399999999778e-05, 5.033299999999963e-05, 5.036099999999877e-05, 5.033299999999963e-05, 5.031900000000006e-05, 5.030500000000049e-05, 5.029099999999745e-05, 5.03469999999992e-05, 5.033299999999963e-05, 5.033299999999963e-05, 5.036099999999877e-05, 5.033299999999963e-05, 5.030599999999996e-05, 5.033400000000257e-05, 5.03469999999992e-05, 5.036099999999877e-05, 5.03469999999992e-05, 5.040300000000095e-05, 5.036100000000224e-05, 5.03469999999992e-05, 5.036099999999877e-05, 5.031999999999953e-05, 5.036099999999877e-05, 5.0402000000001473e-05, 5.036099999999877e-05, 5.036199999999824e-05, 5.036100000000224e-05, 5.036099999999877e-05, 5.038900000000138e-05, 5.03469999999992e-05, 5.036200000000171e-05, 5.03339999999991e-05, 5.03469999999992e-05, 5.03469999999992e-05, 5.034799999999867e-05, 5.03469999999992e-05]</msg>
<status status="PASS" starttime="20201030 15:52:44.725" endtime="20201030 15:52:44.727"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.720" endtime="20201030 15:52:44.727"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:44.731" endtime="20201030 15:52:44.751"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.730" endtime="20201030 15:52:44.751"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.728" endtime="20201030 15:52:44.752"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.372" endtime="20201030 15:52:44.752"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.371" endtime="20201030 15:52:44.752"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:44.761" endtime="20201030 15:52:44.776"></status>
</kw>
<msg timestamp="20201030 15:52:44.777" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:44.759" endtime="20201030 15:52:44.777"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:44.779" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:44.778" endtime="20201030 15:52:44.779"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:44.780" endtime="20201030 15:52:44.782"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.756" endtime="20201030 15:52:44.782"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.754" endtime="20201030 15:52:44.783"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:44.789" endtime="20201030 15:52:45.075"></status>
</kw>
<msg timestamp="20201030 15:52:45.078" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021747153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021798639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:44.788" endtime="20201030 15:52:45.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:45.086" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021747153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021798639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:45.079" endtime="20201030 15:52:45.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:45.087" endtime="20201030 15:52:45.089"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.785" endtime="20201030 15:52:45.089"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.783" endtime="20201030 15:52:45.090"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:45.094" level="INFO">${RESULT} = [{'diff': 5.148599999999989e-05}, {'diff': 5.03339999999991e-05}, {'diff': 5.03339999999991e-05}, {'diff': 5.030500000000049e-05}, {'diff': 5.030599999999996e-05}, {'diff': 5.036099999999877e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:52:45.090" endtime="20201030 15:52:45.094"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:45.098" level="INFO">${ACCURACY} = {'diff': [5.148599999999989e-05, 5.03339999999991e-05, 5.03339999999991e-05, 5.030500000000049e-05, 5.030599999999996e-05, 5.036099999999877e-05, 5.033400000000257e-05, 5.038900000000138e-05, 5.040300...</msg>
<status status="PASS" starttime="20201030 15:52:45.095" endtime="20201030 15:52:45.098"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:45.102" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201030 15:52:45.101" endtime="20201030 15:52:45.103"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:45.105" level="INFO">VALUE: [5.148599999999989e-05, 5.03339999999991e-05, 5.03339999999991e-05, 5.030500000000049e-05, 5.030599999999996e-05, 5.036099999999877e-05, 5.033400000000257e-05, 5.038900000000138e-05, 5.040300000000095e-05, 5.03469999999992e-05, 5.03330000000031e-05, 5.034700000000267e-05, 5.03469999999992e-05, 5.030500000000049e-05, 5.03469999999992e-05, 5.0401999999998004e-05, 5.031900000000006e-05, 5.030599999999996e-05, 5.041699999999705e-05, 5.030500000000049e-05, 5.03469999999992e-05, 5.036099999999877e-05, 5.030599999999996e-05, 5.03339999999991e-05, 5.036099999999877e-05, 5.03469999999992e-05, 5.03469999999992e-05, 5.036099999999877e-05, 5.03469999999992e-05, 5.03469999999992e-05, 5.033299999999963e-05, 5.036099999999877e-05, 5.033299999999963e-05, 5.036100000000224e-05, 5.03469999999992e-05, 5.03469999999992e-05, 5.033299999999963e-05, 5.03469999999992e-05, 5.034700000000267e-05, 5.03469999999992e-05, 5.034799999999867e-05, 5.03469999999992e-05, 5.031900000000006e-05, 5.031999999999953e-05, 5.026400000000125e-05, 5.033299999999963e-05, 5.033299999999963e-05, 5.036100000000224e-05, 5.03469999999992e-05, 5.034799999999867e-05]</msg>
<status status="PASS" starttime="20201030 15:52:45.103" endtime="20201030 15:52:45.105"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.099" endtime="20201030 15:52:45.106"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:45.109" endtime="20201030 15:52:45.129"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.108" endtime="20201030 15:52:45.130"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.107" endtime="20201030 15:52:45.130"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.753" endtime="20201030 15:52:45.130"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.752" endtime="20201030 15:52:45.130"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:45.139" endtime="20201030 15:52:45.155"></status>
</kw>
<msg timestamp="20201030 15:52:45.156" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:45.137" endtime="20201030 15:52:45.156"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:45.158" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:45.157" endtime="20201030 15:52:45.159"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:45.159" endtime="20201030 15:52:45.161"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.135" endtime="20201030 15:52:45.162"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.133" endtime="20201030 15:52:45.162"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:45.168" endtime="20201030 15:52:45.454"></status>
</kw>
<msg timestamp="20201030 15:52:45.457" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022699458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022750931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:45.167" endtime="20201030 15:52:45.457"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:45.465" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022699458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022750931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:45.458" endtime="20201030 15:52:45.465"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:45.466" endtime="20201030 15:52:45.468"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.164" endtime="20201030 15:52:45.468"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.163" endtime="20201030 15:52:45.469"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:45.473" level="INFO">${RESULT} = [{'diff': 5.14729999999998e-05}, {'diff': 5.027800000000082e-05}, {'diff': 5.03469999999992e-05}, {'diff': 5.040300000000095e-05}, {'diff': 5.031999999999953e-05}, {'diff': 5.033299999999963e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:52:45.469" endtime="20201030 15:52:45.473"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:45.477" level="INFO">${ACCURACY} = {'diff': [5.14729999999998e-05, 5.027800000000082e-05, 5.03469999999992e-05, 5.040300000000095e-05, 5.031999999999953e-05, 5.033299999999963e-05, 5.5263999999999314e-05, 5.03469999999992e-05, 5.034800...</msg>
<status status="PASS" starttime="20201030 15:52:45.473" endtime="20201030 15:52:45.477"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:45.481" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201030 15:52:45.480" endtime="20201030 15:52:45.481"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:45.483" level="INFO">VALUE: [5.14729999999998e-05, 5.027800000000082e-05, 5.03469999999992e-05, 5.040300000000095e-05, 5.031999999999953e-05, 5.033299999999963e-05, 5.5263999999999314e-05, 5.03469999999992e-05, 5.034800000000214e-05, 5.033299999999963e-05, 5.03330000000031e-05, 5.033299999999963e-05, 5.033299999999963e-05, 5.034800000000214e-05, 5.03469999999992e-05, 5.033299999999963e-05, 5.03469999999992e-05, 5.031999999999953e-05, 5.03469999999992e-05, 5.034700000000267e-05, 5.5263999999999314e-05, 5.5263999999999314e-05, 5.03469999999992e-05, 5.03339999999991e-05, 5.034800000000214e-05, 5.5194000000001464e-05, 5.040299999999748e-05, 5.033299999999963e-05, 5.033400000000257e-05, 5.5249999999999744e-05, 5.03469999999992e-05, 5.03469999999992e-05, 5.031900000000006e-05, 5.5236000000000174e-05, 5.5263999999999314e-05, 5.031900000000006e-05, 5.03469999999992e-05, 5.529200000000192e-05, 5.03469999999992e-05, 5.527700000000288e-05, 5.033299999999963e-05, 5.526400000000278e-05, 5.036100000000224e-05, 5.036099999999877e-05, 5.034799999999867e-05, 5.036099999999877e-05, 5.03469999999992e-05, 5.03469999999992e-05, 5.5263999999999314e-05, 5.5236000000000174e-05]</msg>
<status status="PASS" starttime="20201030 15:52:45.482" endtime="20201030 15:52:45.485"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.477" endtime="20201030 15:52:45.486"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:45.489" endtime="20201030 15:52:45.509"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.488" endtime="20201030 15:52:45.509"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.487" endtime="20201030 15:52:45.510"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.131" endtime="20201030 15:52:45.510"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.131" endtime="20201030 15:52:45.510"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:45.519" endtime="20201030 15:52:45.534"></status>
</kw>
<msg timestamp="20201030 15:52:45.535" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:45.517" endtime="20201030 15:52:45.535"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:45.537" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:45.536" endtime="20201030 15:52:45.538"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:45.538" endtime="20201030 15:52:45.540"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.515" endtime="20201030 15:52:45.540"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.512" endtime="20201030 15:52:45.541"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:45.547" endtime="20201030 15:52:45.833"></status>
</kw>
<msg timestamp="20201030 15:52:45.836" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021758556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021814944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:45.546" endtime="20201030 15:52:45.837"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:45.845" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021758556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021814944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:45.838" endtime="20201030 15:52:45.845"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:45.846" endtime="20201030 15:52:45.847"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.543" endtime="20201030 15:52:45.848"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.542" endtime="20201030 15:52:45.848"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:45.853" level="INFO">${RESULT} = [{'diff': 5.6388000000000965e-05}, {'diff': 5.5235999999996704e-05}, {'diff': 5.5249999999999744e-05}, {'diff': 5.5193999999997995e-05}, {'diff': 5.5263999999999314e-05}, {'diff': 5.5277999999998884e-...</msg>
<status status="PASS" starttime="20201030 15:52:45.849" endtime="20201030 15:52:45.853"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:45.860" level="INFO">${ACCURACY} = {'diff': [5.6388000000000965e-05, 5.5235999999996704e-05, 5.5249999999999744e-05, 5.5193999999997995e-05, 5.5263999999999314e-05, 5.5277999999998884e-05, 5.5291999999998453e-05, 5.526400000000278e-05,...</msg>
<status status="PASS" starttime="20201030 15:52:45.854" endtime="20201030 15:52:45.860"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:45.865" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201030 15:52:45.864" endtime="20201030 15:52:45.865"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:45.867" level="INFO">VALUE: [5.6388000000000965e-05, 5.5235999999996704e-05, 5.5249999999999744e-05, 5.5193999999997995e-05, 5.5263999999999314e-05, 5.5277999999998884e-05, 5.5291999999998453e-05, 5.526400000000278e-05, 5.527699999999941e-05, 5.5249999999999744e-05, 5.5249999999999744e-05, 5.5263999999999314e-05, 5.526299999999984e-05, 5.526400000000278e-05, 5.526400000000278e-05, 5.5222000000000604e-05, 5.5263999999999314e-05, 5.527800000000235e-05, 5.5249999999999744e-05, 5.5263999999999314e-05, 5.5263999999999314e-05, 5.5263999999999314e-05, 5.527699999999941e-05, 5.5236000000000174e-05, 5.5249999999999744e-05, 5.5263999999999314e-05, 5.5222000000000604e-05, 5.5263999999999314e-05, 5.5263999999999314e-05, 5.5263999999999314e-05, 5.5263999999999314e-05, 5.533299999999769e-05, 5.5263999999999314e-05, 5.5263999999999314e-05, 5.534699999999726e-05, 5.526400000000278e-05, 5.526400000000278e-05, 5.5263999999999314e-05, 5.5263999999999314e-05, 5.5263999999999314e-05, 5.5277999999998884e-05, 5.522300000000008e-05, 5.5277999999998884e-05, 5.526300000000331e-05, 5.5277999999998884e-05, 5.526299999999984e-05, 5.5277999999998884e-05, 5.5249999999999744e-05, 5.5263999999999314e-05, 5.5263999999999314e-05]</msg>
<status status="PASS" starttime="20201030 15:52:45.866" endtime="20201030 15:52:45.939"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.861" endtime="20201030 15:52:45.939"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:45.943" endtime="20201030 15:52:45.963"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.942" endtime="20201030 15:52:45.963"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.941" endtime="20201030 15:52:45.964"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.511" endtime="20201030 15:52:45.964"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.510" endtime="20201030 15:52:45.964"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:45.973" endtime="20201030 15:52:45.989"></status>
</kw>
<msg timestamp="20201030 15:52:45.989" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:45.971" endtime="20201030 15:52:45.989"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:45.992" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:45.990" endtime="20201030 15:52:45.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:45.993" endtime="20201030 15:52:45.995"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.969" endtime="20201030 15:52:45.995"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.967" endtime="20201030 15:52:45.995"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:46.002" endtime="20201030 15:52:46.291"></status>
</kw>
<msg timestamp="20201030 15:52:46.294" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021977056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022033458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:46.000" endtime="20201030 15:52:46.295"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:46.303" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021977056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022033458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:46.295" endtime="20201030 15:52:46.304"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:46.305" endtime="20201030 15:52:46.307"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.998" endtime="20201030 15:52:46.307"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.996" endtime="20201030 15:52:46.308"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:46.312" level="INFO">${RESULT} = [{'diff': 5.6402000000000535e-05}, {'diff': 5.5263999999999314e-05}, {'diff': 5.5263999999999314e-05}, {'diff': 5.529099999999898e-05}, {'diff': 5.5277999999998884e-05}, {'diff': 5.530600000000149e-05...</msg>
<status status="PASS" starttime="20201030 15:52:46.308" endtime="20201030 15:52:46.312"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:46.316" level="INFO">${ACCURACY} = {'diff': [5.6402000000000535e-05, 5.5263999999999314e-05, 5.5263999999999314e-05, 5.529099999999898e-05, 5.5277999999998884e-05, 5.530600000000149e-05, 5.5249999999999744e-05, 5.5249999999999744e-05, ...</msg>
<status status="PASS" starttime="20201030 15:52:46.313" endtime="20201030 15:52:46.317"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:46.321" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201030 15:52:46.320" endtime="20201030 15:52:46.321"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:46.323" level="INFO">VALUE: [5.6402000000000535e-05, 5.5263999999999314e-05, 5.5263999999999314e-05, 5.529099999999898e-05, 5.5277999999998884e-05, 5.530600000000149e-05, 5.5249999999999744e-05, 5.5249999999999744e-05, 5.527800000000235e-05, 5.526400000000278e-05, 5.527699999999941e-05, 5.5291999999998453e-05, 5.529200000000192e-05, 5.529099999999898e-05, 5.5263999999999314e-05, 5.5277999999998884e-05, 5.5249999999999744e-05, 5.5277999999998884e-05, 5.529200000000192e-05, 5.527800000000235e-05, 5.5277999999998884e-05, 5.5277999999998884e-05, 5.5249999999999744e-05, 5.5263999999999314e-05, 5.5263999999999314e-05, 5.5263999999999314e-05, 5.527699999999941e-05, 5.5277999999998884e-05, 5.5277999999998884e-05, 5.5263999999999314e-05, 5.5277999999998884e-05, 5.529100000000245e-05, 5.5263999999999314e-05, 5.5236000000000174e-05, 5.526299999999984e-05, 5.5263999999999314e-05, 5.5263999999999314e-05, 5.527700000000288e-05, 5.527800000000235e-05, 5.5249999999999744e-05, 5.5277999999998884e-05, 5.5236000000000174e-05, 5.5277999999998884e-05, 5.5208000000001034e-05, 5.527700000000288e-05, 5.529099999999898e-05, 5.527800000000235e-05, 5.5291999999998453e-05, 5.527800000000235e-05, 5.5249999999999744e-05]</msg>
<status status="PASS" starttime="20201030 15:52:46.322" endtime="20201030 15:52:46.324"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.317" endtime="20201030 15:52:46.325"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:46.328" endtime="20201030 15:52:46.348"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.327" endtime="20201030 15:52:46.348"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.326" endtime="20201030 15:52:46.349"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.965" endtime="20201030 15:52:46.349"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.964" endtime="20201030 15:52:46.349"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:46.358" endtime="20201030 15:52:46.374"></status>
</kw>
<msg timestamp="20201030 15:52:46.375" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:46.356" endtime="20201030 15:52:46.375"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:46.377" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:46.376" endtime="20201030 15:52:46.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:46.378" endtime="20201030 15:52:46.380"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.354" endtime="20201030 15:52:46.381"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.351" endtime="20201030 15:52:46.381"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:46.388" endtime="20201030 15:52:46.674"></status>
</kw>
<msg timestamp="20201030 15:52:46.677" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022732667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022789056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:46.386" endtime="20201030 15:52:46.678"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:46.686" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022732667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022789056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:46.678" endtime="20201030 15:52:46.687"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:46.687" endtime="20201030 15:52:46.689"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.383" endtime="20201030 15:52:46.689"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.382" endtime="20201030 15:52:46.690"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:46.694" level="INFO">${RESULT} = [{'diff': 5.638899999999697e-05}, {'diff': 5.5277999999998884e-05}, {'diff': 5.527800000000235e-05}, {'diff': 5.5263999999999314e-05}, {'diff': 5.5277999999998884e-05}, {'diff': 5.534700000000073e-05}...</msg>
<status status="PASS" starttime="20201030 15:52:46.691" endtime="20201030 15:52:46.694"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:46.698" level="INFO">${ACCURACY} = {'diff': [5.638899999999697e-05, 5.5277999999998884e-05, 5.527800000000235e-05, 5.5263999999999314e-05, 5.5277999999998884e-05, 5.534700000000073e-05, 5.525000000000321e-05, 5.5249999999999744e-05, 5....</msg>
<status status="PASS" starttime="20201030 15:52:46.695" endtime="20201030 15:52:46.698"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:46.703" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201030 15:52:46.702" endtime="20201030 15:52:46.703"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:46.705" level="INFO">VALUE: [5.638899999999697e-05, 5.5277999999998884e-05, 5.527800000000235e-05, 5.5263999999999314e-05, 5.5277999999998884e-05, 5.534700000000073e-05, 5.525000000000321e-05, 5.5249999999999744e-05, 5.527800000000235e-05, 5.5263999999999314e-05, 5.5263999999999314e-05, 5.526299999999984e-05, 5.5263999999999314e-05, 5.526400000000278e-05, 5.5263999999999314e-05, 5.523699999999965e-05, 5.525000000000321e-05, 5.5249999999999744e-05, 5.526400000000278e-05, 5.5249999999999744e-05, 5.5236000000000174e-05, 5.5222000000000604e-05, 5.527699999999941e-05, 5.5249999999999744e-05, 5.529200000000192e-05, 5.530600000000149e-05, 5.5263999999999314e-05, 5.531999999999759e-05, 5.5249999999999744e-05, 5.527800000000235e-05, 5.5277999999998884e-05, 5.5249999999999744e-05, 5.5236000000000174e-05, 5.5263999999999314e-05, 5.5263999999999314e-05, 5.526400000000278e-05, 5.5263999999999314e-05, 5.5249999999999744e-05, 5.5277999999998884e-05, 5.5263999999999314e-05, 5.5249999999999744e-05, 5.5277999999998884e-05, 5.5249999999999744e-05, 5.526400000000278e-05, 5.526400000000278e-05, 5.522300000000008e-05, 5.5277999999998884e-05, 5.529099999999898e-05, 5.525000000000321e-05, 5.5249999999999744e-05]</msg>
<status status="PASS" starttime="20201030 15:52:46.704" endtime="20201030 15:52:46.707"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.699" endtime="20201030 15:52:46.707"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:46.711" endtime="20201030 15:52:46.730"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.709" endtime="20201030 15:52:46.731"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.708" endtime="20201030 15:52:46.731"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.350" endtime="20201030 15:52:46.732"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.349" endtime="20201030 15:52:46.732"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:46.740" endtime="20201030 15:52:46.756"></status>
</kw>
<msg timestamp="20201030 15:52:46.757" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:46.739" endtime="20201030 15:52:46.757"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:46.759" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:46.758" endtime="20201030 15:52:46.760"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:46.761" endtime="20201030 15:52:46.762"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.736" endtime="20201030 15:52:46.763"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.734" endtime="20201030 15:52:46.763"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:46.770" endtime="20201030 15:52:47.055"></status>
</kw>
<msg timestamp="20201030 15:52:47.058" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021858417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021914819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:46.768" endtime="20201030 15:52:47.059"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:47.067" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021858417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021914819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:47.060" endtime="20201030 15:52:47.067"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:47.068" endtime="20201030 15:52:47.070"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.766" endtime="20201030 15:52:47.070"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.764" endtime="20201030 15:52:47.071"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:47.075" level="INFO">${RESULT} = [{'diff': 5.6401999999997066e-05}, {'diff': 5.5277999999998884e-05}, {'diff': 5.5263999999999314e-05}, {'diff': 5.5263999999999314e-05}, {'diff': 5.5249999999999744e-05}, {'diff': 5.5277999999998884e-...</msg>
<status status="PASS" starttime="20201030 15:52:47.071" endtime="20201030 15:52:47.075"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:47.080" level="INFO">${ACCURACY} = {'diff': [5.6401999999997066e-05, 5.5277999999998884e-05, 5.5263999999999314e-05, 5.5263999999999314e-05, 5.5249999999999744e-05, 5.5277999999998884e-05, 5.527800000000235e-05, 5.5277999999998884e-05,...</msg>
<status status="PASS" starttime="20201030 15:52:47.075" endtime="20201030 15:52:47.080"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:47.084" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201030 15:52:47.083" endtime="20201030 15:52:47.085"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:47.087" level="INFO">VALUE: [5.6401999999997066e-05, 5.5277999999998884e-05, 5.5263999999999314e-05, 5.5263999999999314e-05, 5.5249999999999744e-05, 5.5277999999998884e-05, 5.527800000000235e-05, 5.5277999999998884e-05, 5.529200000000192e-05, 5.5249999999999744e-05, 5.5249999999999744e-05, 5.5249999999999744e-05, 5.533300000000116e-05, 5.527699999999941e-05, 5.527800000000235e-05, 5.5249999999999744e-05, 5.526400000000278e-05, 5.5193999999997995e-05, 5.527800000000235e-05, 5.5222000000000604e-05, 5.5291999999998453e-05, 5.5263999999999314e-05, 5.532000000000106e-05, 5.5277999999998884e-05, 5.527699999999941e-05, 5.527800000000235e-05, 5.529200000000192e-05, 5.529200000000192e-05, 5.5263999999999314e-05, 5.526299999999984e-05, 5.527800000000235e-05, 5.527699999999941e-05, 5.5263999999999314e-05, 5.5277999999998884e-05, 5.529100000000245e-05, 5.5263999999999314e-05, 5.527800000000235e-05, 5.5263999999999314e-05, 5.5263999999999314e-05, 5.5263999999999314e-05, 5.527800000000235e-05, 5.5277999999998884e-05, 5.527699999999941e-05, 5.527699999999941e-05, 5.5277999999998884e-05, 5.5263999999999314e-05, 5.527800000000235e-05, 5.529099999999898e-05, 5.5249999999999744e-05, 5.527699999999941e-05]</msg>
<status status="PASS" starttime="20201030 15:52:47.085" endtime="20201030 15:52:47.087"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.081" endtime="20201030 15:52:47.088"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:47.092" endtime="20201030 15:52:47.111"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.090" endtime="20201030 15:52:47.112"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.089" endtime="20201030 15:52:47.112"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.733" endtime="20201030 15:52:47.112"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.732" endtime="20201030 15:52:47.112"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:47.121" endtime="20201030 15:52:47.137"></status>
</kw>
<msg timestamp="20201030 15:52:47.138" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:47.119" endtime="20201030 15:52:47.138"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:47.140" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:47.139" endtime="20201030 15:52:47.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:47.141" endtime="20201030 15:52:47.143"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.117" endtime="20201030 15:52:47.143"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.115" endtime="20201030 15:52:47.144"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:47.150" endtime="20201030 15:52:47.441"></status>
</kw>
<msg timestamp="20201030 15:52:47.444" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021876931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021933306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:47.149" endtime="20201030 15:52:47.444"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:47.453" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021876931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021933306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:47.445" endtime="20201030 15:52:47.453"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:47.454" endtime="20201030 15:52:47.456"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.146" endtime="20201030 15:52:47.456"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.144" endtime="20201030 15:52:47.457"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:47.461" level="INFO">${RESULT} = [{'diff': 5.637500000000087e-05}, {'diff': 5.526400000000278e-05}, {'diff': 5.526299999999984e-05}, {'diff': 5.5277999999998884e-05}, {'diff': 6.0221999999998665e-05}, {'diff': 5.518100000000137e-05},...</msg>
<status status="PASS" starttime="20201030 15:52:47.457" endtime="20201030 15:52:47.461"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:47.465" level="INFO">${ACCURACY} = {'diff': [5.637500000000087e-05, 5.526400000000278e-05, 5.526299999999984e-05, 5.5277999999998884e-05, 6.0221999999998665e-05, 5.518100000000137e-05, 5.5263999999999314e-05, 5.5249999999999744e-05, 6....</msg>
<status status="PASS" starttime="20201030 15:52:47.462" endtime="20201030 15:52:47.465"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:47.469" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201030 15:52:47.468" endtime="20201030 15:52:47.469"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:47.472" level="INFO">VALUE: [5.637500000000087e-05, 5.526400000000278e-05, 5.526299999999984e-05, 5.5277999999998884e-05, 6.0221999999998665e-05, 5.518100000000137e-05, 5.5263999999999314e-05, 5.5249999999999744e-05, 6.0207999999999096e-05, 5.526299999999984e-05, 5.531900000000159e-05, 6.0138000000001246e-05, 6.0194999999999e-05, 5.526400000000278e-05, 5.526300000000331e-05, 6.018099999999943e-05, 6.016699999999986e-05, 5.5263999999999314e-05, 6.0207999999999096e-05, 5.5263999999999314e-05, 5.5249999999999744e-05, 5.5263999999999314e-05, 5.5263999999999314e-05, 6.0193999999999526e-05, 5.5222000000000604e-05, 5.5277999999998884e-05, 5.5249999999999744e-05, 5.527699999999941e-05, 5.525000000000321e-05, 6.015300000000029e-05, 6.018099999999943e-05, 6.0250000000001275e-05, 5.5277999999998884e-05, 5.5208000000001034e-05, 5.5222000000000604e-05, 5.5249999999999744e-05, 6.018099999999943e-05, 5.5208000000001034e-05, 6.019500000000247e-05, 5.5291999999998453e-05, 5.5263999999999314e-05, 5.5277999999998884e-05, 5.5277999999998884e-05, 5.5249999999999744e-05, 5.527699999999941e-05, 5.5263999999999314e-05, 5.529200000000192e-05, 5.5249999999999744e-05, 5.526400000000278e-05, 6.0193999999999526e-05]</msg>
<status status="PASS" starttime="20201030 15:52:47.470" endtime="20201030 15:52:47.472"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.465" endtime="20201030 15:52:47.473"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:47.476" endtime="20201030 15:52:47.496"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.475" endtime="20201030 15:52:47.497"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.474" endtime="20201030 15:52:47.497"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.113" endtime="20201030 15:52:47.497"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.113" endtime="20201030 15:52:47.497"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:47.506" endtime="20201030 15:52:47.523"></status>
</kw>
<msg timestamp="20201030 15:52:47.524" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:47.504" endtime="20201030 15:52:47.524"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:47.526" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:47.525" endtime="20201030 15:52:47.526"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:47.527" endtime="20201030 15:52:47.529"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.502" endtime="20201030 15:52:47.529"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.500" endtime="20201030 15:52:47.530"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:47.536" endtime="20201030 15:52:47.822"></status>
</kw>
<msg timestamp="20201030 15:52:47.825" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022877375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022938694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:47.535" endtime="20201030 15:52:47.825"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:47.833" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022877375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022938694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:47.826" endtime="20201030 15:52:47.833"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:47.834" endtime="20201030 15:52:47.836"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.532" endtime="20201030 15:52:47.836"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.530" endtime="20201030 15:52:47.837"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:47.841" level="INFO">${RESULT} = [{'diff': 6.131900000000065e-05}, {'diff': 6.018099999999943e-05}, {'diff': 6.018099999999943e-05}, {'diff': 6.0208000000002565e-05}, {'diff': 6.018099999999943e-05}, {'diff': 6.011100000000158e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:52:47.837" endtime="20201030 15:52:47.841"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:47.845" level="INFO">${ACCURACY} = {'diff': [6.131900000000065e-05, 6.018099999999943e-05, 6.018099999999943e-05, 6.0208000000002565e-05, 6.018099999999943e-05, 6.011100000000158e-05, 6.018099999999943e-05, 6.01810000000029e-05, 6.0235...</msg>
<status status="PASS" starttime="20201030 15:52:47.842" endtime="20201030 15:52:47.845"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:47.849" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201030 15:52:47.848" endtime="20201030 15:52:47.849"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:47.852" level="INFO">VALUE: [6.131900000000065e-05, 6.018099999999943e-05, 6.018099999999943e-05, 6.0208000000002565e-05, 6.018099999999943e-05, 6.011100000000158e-05, 6.018099999999943e-05, 6.01810000000029e-05, 6.0235999999998235e-05, 6.0194000000002995e-05, 6.0166000000000386e-05, 6.015300000000029e-05, 6.018099999999943e-05, 6.0193999999999526e-05, 6.016699999999986e-05, 6.0179999999999956e-05, 6.0194999999999e-05, 6.018099999999943e-05, 6.0221999999998665e-05, 6.020900000000204e-05, 6.019500000000247e-05, 6.0166000000000386e-05, 6.0152000000000816e-05, 6.01810000000029e-05, 6.0179999999999956e-05, 6.0193999999999526e-05, 6.0194999999999e-05, 6.01810000000029e-05, 6.0179999999999956e-05, 6.0179999999999956e-05, 6.0166000000000386e-05, 6.012499999999768e-05, 6.0166000000000386e-05, 6.016699999999986e-05, 6.018099999999943e-05, 6.016699999999986e-05, 6.0179999999999956e-05, 6.0194999999999e-05, 6.0179999999999956e-05, 6.0222000000002135e-05, 6.016699999999986e-05, 6.0193999999999526e-05, 6.0193999999999526e-05, 6.015300000000029e-05, 6.0194999999999e-05, 6.015299999999682e-05, 6.0194000000002995e-05, 6.0193999999999526e-05, 6.0222000000002135e-05, 6.0194000000002995e-05]</msg>
<status status="PASS" starttime="20201030 15:52:47.850" endtime="20201030 15:52:47.853"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.846" endtime="20201030 15:52:47.854"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:47.857" endtime="20201030 15:52:47.877"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.856" endtime="20201030 15:52:47.877"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.855" endtime="20201030 15:52:47.878"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.498" endtime="20201030 15:52:47.878"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.498" endtime="20201030 15:52:47.878"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:47.887" endtime="20201030 15:52:47.903"></status>
</kw>
<msg timestamp="20201030 15:52:47.903" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:47.885" endtime="20201030 15:52:47.904"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:47.906" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:47.904" endtime="20201030 15:52:47.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:47.907" endtime="20201030 15:52:47.909"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.883" endtime="20201030 15:52:47.909"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.881" endtime="20201030 15:52:47.909"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:47.916" endtime="20201030 15:52:48.213"></status>
</kw>
<msg timestamp="20201030 15:52:48.216" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021774694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021836056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:47.914" endtime="20201030 15:52:48.216"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:48.224" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021774694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021836056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:48.217" endtime="20201030 15:52:48.224"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:48.225" endtime="20201030 15:52:48.227"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.912" endtime="20201030 15:52:48.227"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.910" endtime="20201030 15:52:48.228"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:48.232" level="INFO">${RESULT} = [{'diff': 6.136199999999883e-05}, {'diff': 6.0179999999999956e-05}, {'diff': 6.0193999999999526e-05}, {'diff': 6.015300000000029e-05}, {'diff': 6.0222000000002135e-05}, {'diff': 6.0166000000000386e-05...</msg>
<status status="PASS" starttime="20201030 15:52:48.228" endtime="20201030 15:52:48.232"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:48.237" level="INFO">${ACCURACY} = {'diff': [6.136199999999883e-05, 6.0179999999999956e-05, 6.0193999999999526e-05, 6.015300000000029e-05, 6.0222000000002135e-05, 6.0166000000000386e-05, 6.016699999999986e-05, 6.0166000000000386e-05, 6...</msg>
<status status="PASS" starttime="20201030 15:52:48.233" endtime="20201030 15:52:48.237"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:48.241" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201030 15:52:48.240" endtime="20201030 15:52:48.242"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:48.244" level="INFO">VALUE: [6.136199999999883e-05, 6.0179999999999956e-05, 6.0193999999999526e-05, 6.015300000000029e-05, 6.0222000000002135e-05, 6.0166000000000386e-05, 6.016699999999986e-05, 6.0166000000000386e-05, 6.0236000000001705e-05, 6.0221999999998665e-05, 6.0193999999999526e-05, 6.0193999999999526e-05, 6.0193999999999526e-05, 6.016699999999986e-05, 6.0193999999999526e-05, 6.018099999999943e-05, 6.016699999999986e-05, 6.0207999999999096e-05, 6.0207999999999096e-05, 6.0194999999999e-05, 6.0207999999999096e-05, 6.0194999999999e-05, 6.0179999999999956e-05, 6.013900000000072e-05, 6.018099999999943e-05, 6.018099999999943e-05, 6.0207999999999096e-05, 6.016699999999986e-05, 6.0166000000000386e-05, 6.0179999999999956e-05, 6.0193999999999526e-05, 6.0193999999999526e-05, 6.016699999999986e-05, 6.018099999999943e-05, 6.0194000000002995e-05, 6.013900000000072e-05, 6.0166000000000386e-05, 6.0179999999999956e-05, 6.0208000000002565e-05, 6.0207999999999096e-05, 6.0194000000002995e-05, 6.0207999999999096e-05, 6.0179999999999956e-05, 6.0235999999998235e-05, 6.0194999999999e-05, 6.0194000000002995e-05, 6.0180000000003425e-05, 6.0193999999999526e-05, 6.0207999999999096e-05, 6.0179999999999956e-05]</msg>
<status status="PASS" starttime="20201030 15:52:48.242" endtime="20201030 15:52:48.244"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.238" endtime="20201030 15:52:48.245"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:48.248" endtime="20201030 15:52:48.268"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.247" endtime="20201030 15:52:48.269"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.246" endtime="20201030 15:52:48.269"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.879" endtime="20201030 15:52:48.269"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.878" endtime="20201030 15:52:48.269"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:48.278" endtime="20201030 15:52:48.294"></status>
</kw>
<msg timestamp="20201030 15:52:48.294" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:48.276" endtime="20201030 15:52:48.295"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:48.297" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:48.295" endtime="20201030 15:52:48.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:48.298" endtime="20201030 15:52:48.299"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.274" endtime="20201030 15:52:48.300"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.272" endtime="20201030 15:52:48.300"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:48.307" endtime="20201030 15:52:48.594"></status>
</kw>
<msg timestamp="20201030 15:52:48.598" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021688278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021749611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:48.305" endtime="20201030 15:52:48.598"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:48.606" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021688278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021749611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:48.599" endtime="20201030 15:52:48.606"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:48.607" endtime="20201030 15:52:48.609"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.303" endtime="20201030 15:52:48.609"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.301" endtime="20201030 15:52:48.610"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:48.614" level="INFO">${RESULT} = [{'diff': 6.133300000000022e-05}, {'diff': 6.0193999999999526e-05}, {'diff': 6.0208000000002565e-05}, {'diff': 6.0179999999999956e-05}, {'diff': 6.016699999999986e-05}, {'diff': 6.012499999999768e-05}...</msg>
<status status="PASS" starttime="20201030 15:52:48.610" endtime="20201030 15:52:48.614"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:48.618" level="INFO">${ACCURACY} = {'diff': [6.133300000000022e-05, 6.0193999999999526e-05, 6.0208000000002565e-05, 6.0179999999999956e-05, 6.016699999999986e-05, 6.012499999999768e-05, 6.018099999999943e-05, 6.0193999999999526e-05, 6....</msg>
<status status="PASS" starttime="20201030 15:52:48.615" endtime="20201030 15:52:48.618"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:48.622" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201030 15:52:48.621" endtime="20201030 15:52:48.622"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:48.625" level="INFO">VALUE: [6.133300000000022e-05, 6.0193999999999526e-05, 6.0208000000002565e-05, 6.0179999999999956e-05, 6.016699999999986e-05, 6.012499999999768e-05, 6.018099999999943e-05, 6.0193999999999526e-05, 6.012500000000115e-05, 6.0207999999999096e-05, 6.013900000000072e-05, 6.019500000000247e-05, 6.013900000000072e-05, 6.0179999999999956e-05, 6.0222000000002135e-05, 6.0207999999999096e-05, 6.018099999999943e-05, 6.0179999999999956e-05, 6.0151999999997346e-05, 6.015300000000029e-05, 6.016699999999986e-05, 6.0179999999999956e-05, 6.0207999999999096e-05, 6.018099999999943e-05, 6.016699999999986e-05, 6.0193999999999526e-05, 6.015300000000029e-05, 6.0194999999999e-05, 6.015300000000029e-05, 6.018099999999943e-05, 6.0179999999999956e-05, 6.0194999999999e-05, 6.0194000000002995e-05, 6.0179999999999956e-05, 6.0194000000002995e-05, 6.0193999999999526e-05, 6.0207999999999096e-05, 6.0179999999999956e-05, 6.020900000000204e-05, 6.0194999999999e-05, 6.0179999999999956e-05, 6.0179999999999956e-05, 6.015300000000029e-05, 6.016699999999986e-05, 6.016699999999986e-05, 6.0193999999999526e-05, 6.0194999999999e-05, 6.0221999999998665e-05, 6.0179999999999956e-05, 6.0166000000000386e-05]</msg>
<status status="PASS" starttime="20201030 15:52:48.623" endtime="20201030 15:52:48.625"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.618" endtime="20201030 15:52:48.626"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:48.629" endtime="20201030 15:52:48.649"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.628" endtime="20201030 15:52:48.650"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.627" endtime="20201030 15:52:48.650"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.270" endtime="20201030 15:52:48.650"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.270" endtime="20201030 15:52:48.650"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:48.659" endtime="20201030 15:52:48.676"></status>
</kw>
<msg timestamp="20201030 15:52:48.676" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:48.657" endtime="20201030 15:52:48.677"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:48.679" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:48.677" endtime="20201030 15:52:48.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:48.680" endtime="20201030 15:52:48.682"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.655" endtime="20201030 15:52:48.682"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.653" endtime="20201030 15:52:48.683"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:48.689" endtime="20201030 15:52:48.973"></status>
</kw>
<msg timestamp="20201030 15:52:48.976" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022826903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022888222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:48.687" endtime="20201030 15:52:48.977"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:48.985" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022826903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022888222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:48.977" endtime="20201030 15:52:48.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:48.986" endtime="20201030 15:52:48.987"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.685" endtime="20201030 15:52:48.988"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.683" endtime="20201030 15:52:48.988"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:48.992" level="INFO">${RESULT} = [{'diff': 6.131900000000065e-05}, {'diff': 6.018099999999943e-05}, {'diff': 6.018099999999943e-05}, {'diff': 6.018099999999943e-05}, {'diff': 6.018099999999943e-05}, {'diff': 6.0193999999999526e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:52:48.989" endtime="20201030 15:52:48.993"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:48.996" level="INFO">${ACCURACY} = {'diff': [6.131900000000065e-05, 6.018099999999943e-05, 6.018099999999943e-05, 6.018099999999943e-05, 6.018099999999943e-05, 6.0193999999999526e-05, 6.0235999999998235e-05, 6.01810000000029e-05, 6.019...</msg>
<status status="PASS" starttime="20201030 15:52:48.993" endtime="20201030 15:52:48.997"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:49.001" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201030 15:52:49.000" endtime="20201030 15:52:49.001"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:49.003" level="INFO">VALUE: [6.131900000000065e-05, 6.018099999999943e-05, 6.018099999999943e-05, 6.018099999999943e-05, 6.018099999999943e-05, 6.0193999999999526e-05, 6.0235999999998235e-05, 6.01810000000029e-05, 6.0193999999999526e-05, 6.018099999999943e-05, 6.0193999999999526e-05, 6.01810000000029e-05, 6.020899999999857e-05, 6.0179999999999956e-05, 6.0166000000000386e-05, 6.0207999999999096e-05, 6.018099999999943e-05, 6.018099999999943e-05, 6.018099999999943e-05, 6.018099999999943e-05, 6.018099999999943e-05, 6.0194999999999e-05, 6.0250000000001275e-05, 6.019500000000247e-05, 6.0236000000001705e-05, 6.0193999999999526e-05, 6.0193999999999526e-05, 6.0194999999999e-05, 6.018099999999943e-05, 6.0194999999999e-05, 6.016699999999986e-05, 6.0278000000000415e-05, 6.0179999999999956e-05, 6.020900000000204e-05, 6.016699999999986e-05, 6.0194999999999e-05, 6.0179999999999956e-05, 6.0193999999999526e-05, 6.0194999999999e-05, 6.018099999999943e-05, 6.018099999999943e-05, 6.0208000000002565e-05, 6.018099999999943e-05, 6.0165999999996916e-05, 6.0166000000000386e-05, 6.0179999999999956e-05, 6.0194000000002995e-05, 6.0179999999999956e-05, 6.0264000000000845e-05, 6.020899999999857e-05]</msg>
<status status="PASS" starttime="20201030 15:52:49.002" endtime="20201030 15:52:49.005"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.997" endtime="20201030 15:52:49.006"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:49.009" endtime="20201030 15:52:49.029"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.008" endtime="20201030 15:52:49.029"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.006" endtime="20201030 15:52:49.029"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.651" endtime="20201030 15:52:49.030"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.651" endtime="20201030 15:52:49.030"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:49.038" endtime="20201030 15:52:49.055"></status>
</kw>
<msg timestamp="20201030 15:52:49.055" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:49.037" endtime="20201030 15:52:49.055"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:49.057" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:49.056" endtime="20201030 15:52:49.058"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:49.059" endtime="20201030 15:52:49.060"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.034" endtime="20201030 15:52:49.061"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.032" endtime="20201030 15:52:49.061"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:49.068" endtime="20201030 15:52:49.352"></status>
</kw>
<msg timestamp="20201030 15:52:49.355" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021688514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021749861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:49.066" endtime="20201030 15:52:49.355"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:49.363" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021688514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021749861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:49.356" endtime="20201030 15:52:49.364"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:49.364" endtime="20201030 15:52:49.366"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.063" endtime="20201030 15:52:49.366"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.062" endtime="20201030 15:52:49.367"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:49.371" level="INFO">${RESULT} = [{'diff': 6.134699999999979e-05}, {'diff': 6.511099999999964e-05}, {'diff': 6.016699999999986e-05}, {'diff': 6.0179999999999956e-05}, {'diff': 6.01810000000029e-05}, {'diff': 6.0179999999999956e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:52:49.368" endtime="20201030 15:52:49.371"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:49.378" level="INFO">${ACCURACY} = {'diff': [6.134699999999979e-05, 6.511099999999964e-05, 6.016699999999986e-05, 6.0179999999999956e-05, 6.01810000000029e-05, 6.0179999999999956e-05, 6.0179999999999956e-05, 6.0207999999999096e-05, 6.0...</msg>
<status status="PASS" starttime="20201030 15:52:49.372" endtime="20201030 15:52:49.379"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:49.383" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201030 15:52:49.382" endtime="20201030 15:52:49.383"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:49.385" level="INFO">VALUE: [6.134699999999979e-05, 6.511099999999964e-05, 6.016699999999986e-05, 6.0179999999999956e-05, 6.01810000000029e-05, 6.0179999999999956e-05, 6.0179999999999956e-05, 6.0207999999999096e-05, 6.0194000000002995e-05, 6.0235999999998235e-05, 6.509700000000007e-05, 6.0194999999999e-05, 6.0179999999999956e-05, 6.016699999999986e-05, 6.509799999999955e-05, 6.512499999999921e-05, 6.512499999999921e-05, 6.512499999999921e-05, 6.512499999999921e-05, 6.0208000000002565e-05, 6.0193999999999526e-05, 6.0179999999999956e-05, 6.512499999999921e-05, 6.0137999999997777e-05, 6.009700000000201e-05, 6.016699999999986e-05, 6.0179999999999956e-05, 6.0207999999999096e-05, 6.0179999999999956e-05, 6.0179999999999956e-05, 6.0207999999999096e-05, 6.0194999999999e-05, 6.0207999999999096e-05, 6.012500000000115e-05, 6.511200000000258e-05, 6.509800000000301e-05, 6.512499999999921e-05, 6.0166000000000386e-05, 6.509799999999955e-05, 6.020900000000204e-05, 6.01810000000029e-05, 6.0193999999999526e-05, 6.0152000000000816e-05, 6.511200000000258e-05, 6.0179999999999956e-05, 6.0193999999999526e-05, 6.018099999999943e-05, 6.509799999999955e-05, 6.516699999999792e-05, 6.0194999999999e-05]</msg>
<status status="PASS" starttime="20201030 15:52:49.384" endtime="20201030 15:52:49.386"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.379" endtime="20201030 15:52:49.387"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:49.390" endtime="20201030 15:52:49.410"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.389" endtime="20201030 15:52:49.410"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.388" endtime="20201030 15:52:49.411"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.031" endtime="20201030 15:52:49.411"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.030" endtime="20201030 15:52:49.411"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:49.420" endtime="20201030 15:52:49.436"></status>
</kw>
<msg timestamp="20201030 15:52:49.437" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:49.418" endtime="20201030 15:52:49.437"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:49.439" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:49.438" endtime="20201030 15:52:49.439"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:49.440" endtime="20201030 15:52:49.442"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.416" endtime="20201030 15:52:49.442"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.414" endtime="20201030 15:52:49.443"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:49.449" endtime="20201030 15:52:49.779"></status>
</kw>
<msg timestamp="20201030 15:52:49.782" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021789458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021855681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:49.447" endtime="20201030 15:52:49.783"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:49.791" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021789458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021855681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:49.784" endtime="20201030 15:52:49.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:49.792" endtime="20201030 15:52:49.794"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.445" endtime="20201030 15:52:49.794"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.443" endtime="20201030 15:52:49.795"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:49.798" level="INFO">${RESULT} = [{'diff': 6.62229999999972e-05}, {'diff': 6.512499999999921e-05}, {'diff': 6.511099999999964e-05}, {'diff': 6.509700000000007e-05}, {'diff': 6.50700000000004e-05}, {'diff': 6.512499999999921e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:52:49.795" endtime="20201030 15:52:49.799"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:49.803" level="INFO">${ACCURACY} = {'diff': [6.62229999999972e-05, 6.512499999999921e-05, 6.511099999999964e-05, 6.509700000000007e-05, 6.50700000000004e-05, 6.512499999999921e-05, 6.511099999999964e-05, 6.512499999999921e-05, 6.512499...</msg>
<status status="PASS" starttime="20201030 15:52:49.799" endtime="20201030 15:52:49.803"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:49.807" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201030 15:52:49.806" endtime="20201030 15:52:49.807"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:49.809" level="INFO">VALUE: [6.62229999999972e-05, 6.512499999999921e-05, 6.511099999999964e-05, 6.509700000000007e-05, 6.50700000000004e-05, 6.512499999999921e-05, 6.511099999999964e-05, 6.512499999999921e-05, 6.512499999999921e-05, 6.506900000000093e-05, 6.511099999999964e-05, 6.513899999999878e-05, 6.512499999999921e-05, 6.509700000000007e-05, 6.511099999999964e-05, 6.511099999999964e-05, 6.511099999999964e-05, 6.511099999999964e-05, 6.512499999999921e-05, 6.513900000000225e-05, 6.512499999999921e-05, 6.513900000000225e-05, 6.511199999999912e-05, 6.511099999999964e-05, 6.509700000000007e-05, 6.504099999999832e-05, 6.513899999999878e-05, 6.511099999999964e-05, 6.511099999999964e-05, 6.512500000000268e-05, 6.505599999999737e-05, 6.505499999999789e-05, 6.511099999999964e-05, 6.512499999999921e-05, 6.513899999999878e-05, 6.511099999999964e-05, 6.511200000000258e-05, 6.505499999999789e-05, 6.509799999999955e-05, 6.512499999999921e-05, 6.512500000000268e-05, 6.509700000000007e-05, 6.513899999999878e-05, 6.513899999999878e-05, 6.512499999999921e-05, 6.511099999999964e-05, 6.505600000000084e-05, 6.511199999999912e-05, 6.509799999999955e-05, 6.511099999999964e-05]</msg>
<status status="PASS" starttime="20201030 15:52:49.808" endtime="20201030 15:52:49.810"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.803" endtime="20201030 15:52:49.811"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:49.814" endtime="20201030 15:52:49.834"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.813" endtime="20201030 15:52:49.835"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.812" endtime="20201030 15:52:49.835"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.412" endtime="20201030 15:52:49.835"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.411" endtime="20201030 15:52:49.836"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:49.844" endtime="20201030 15:52:49.861"></status>
</kw>
<msg timestamp="20201030 15:52:49.861" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:49.843" endtime="20201030 15:52:49.861"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:49.863" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:49.862" endtime="20201030 15:52:49.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:49.864" endtime="20201030 15:52:49.866"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.840" endtime="20201030 15:52:49.867"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.838" endtime="20201030 15:52:49.867"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:49.873" endtime="20201030 15:52:50.159"></status>
</kw>
<msg timestamp="20201030 15:52:50.162" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021678917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021745139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:49.872" endtime="20201030 15:52:50.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:50.170" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021678917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021745139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:50.163" endtime="20201030 15:52:50.170"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:50.171" endtime="20201030 15:52:50.173"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.869" endtime="20201030 15:52:50.173"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.868" endtime="20201030 15:52:50.174"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:50.178" level="INFO">${RESULT} = [{'diff': 6.62220000000012e-05}, {'diff': 6.509700000000007e-05}, {'diff': 6.509799999999955e-05}, {'diff': 6.509700000000007e-05}, {'diff': 6.513900000000225e-05}, {'diff': 6.511099999999964e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:52:50.174" endtime="20201030 15:52:50.178"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:50.182" level="INFO">${ACCURACY} = {'diff': [6.62220000000012e-05, 6.509700000000007e-05, 6.509799999999955e-05, 6.509700000000007e-05, 6.513900000000225e-05, 6.511099999999964e-05, 6.511099999999964e-05, 6.512499999999921e-05, 6.51249...</msg>
<status status="PASS" starttime="20201030 15:52:50.178" endtime="20201030 15:52:50.183"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:50.187" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201030 15:52:50.186" endtime="20201030 15:52:50.187"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:50.189" level="INFO">VALUE: [6.62220000000012e-05, 6.509700000000007e-05, 6.509799999999955e-05, 6.509700000000007e-05, 6.513900000000225e-05, 6.511099999999964e-05, 6.511099999999964e-05, 6.512499999999921e-05, 6.512499999999921e-05, 6.513900000000225e-05, 6.511099999999964e-05, 6.516599999999845e-05, 6.511099999999964e-05, 6.511099999999964e-05, 6.509799999999955e-05, 6.513899999999878e-05, 6.511100000000311e-05, 6.516699999999792e-05, 6.506900000000093e-05, 6.511099999999964e-05, 6.511099999999964e-05, 6.511099999999964e-05, 6.512499999999921e-05, 6.512499999999921e-05, 6.513899999999878e-05, 6.512499999999921e-05, 6.509700000000007e-05, 6.511099999999964e-05, 6.511199999999912e-05, 6.509700000000007e-05, 6.511099999999964e-05, 6.513900000000225e-05, 6.512500000000268e-05, 6.511199999999912e-05, 6.509799999999955e-05, 6.511099999999964e-05, 6.511099999999964e-05, 6.509700000000007e-05, 6.511099999999964e-05, 6.512499999999921e-05, 6.513900000000225e-05, 6.50700000000004e-05, 6.511099999999964e-05, 6.505600000000084e-05, 6.512499999999921e-05, 6.512500000000268e-05, 6.509700000000007e-05, 6.512499999999921e-05, 6.513900000000225e-05, 6.511099999999964e-05]</msg>
<status status="PASS" starttime="20201030 15:52:50.188" endtime="20201030 15:52:50.190"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.183" endtime="20201030 15:52:50.191"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:50.194" endtime="20201030 15:52:50.214"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.193" endtime="20201030 15:52:50.214"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.191" endtime="20201030 15:52:50.214"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.837" endtime="20201030 15:52:50.215"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.836" endtime="20201030 15:52:50.215"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:50.223" endtime="20201030 15:52:50.240"></status>
</kw>
<msg timestamp="20201030 15:52:50.240" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:50.222" endtime="20201030 15:52:50.240"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:50.243" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:50.241" endtime="20201030 15:52:50.243"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:50.244" endtime="20201030 15:52:50.245"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.219" endtime="20201030 15:52:50.246"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.217" endtime="20201030 15:52:50.246"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:50.253" endtime="20201030 15:52:50.540"></status>
</kw>
<msg timestamp="20201030 15:52:50.544" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021730542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021796792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:50.251" endtime="20201030 15:52:50.544"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:50.552" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021730542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021796792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:50.545" endtime="20201030 15:52:50.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:50.553" endtime="20201030 15:52:50.555"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.249" endtime="20201030 15:52:50.555"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.247" endtime="20201030 15:52:50.556"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:50.560" level="INFO">${RESULT} = [{'diff': 6.625000000000034e-05}, {'diff': 6.511099999999964e-05}, {'diff': 6.512499999999921e-05}, {'diff': 6.511099999999964e-05}, {'diff': 6.511099999999964e-05}, {'diff': 6.512500000000268e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:50.556" endtime="20201030 15:52:50.560"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:50.564" level="INFO">${ACCURACY} = {'diff': [6.625000000000034e-05, 6.511099999999964e-05, 6.512499999999921e-05, 6.511099999999964e-05, 6.511099999999964e-05, 6.512500000000268e-05, 6.508399999999998e-05, 6.509799999999955e-05, 6.5070...</msg>
<status status="PASS" starttime="20201030 15:52:50.561" endtime="20201030 15:52:50.564"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:50.568" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201030 15:52:50.567" endtime="20201030 15:52:50.569"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:50.571" level="INFO">VALUE: [6.625000000000034e-05, 6.511099999999964e-05, 6.512499999999921e-05, 6.511099999999964e-05, 6.511099999999964e-05, 6.512500000000268e-05, 6.508399999999998e-05, 6.509799999999955e-05, 6.50700000000004e-05, 6.511099999999964e-05, 6.508299999999703e-05, 6.509799999999955e-05, 6.50830000000005e-05, 6.509700000000007e-05, 6.511099999999964e-05, 6.515299999999835e-05, 6.509700000000007e-05, 6.509700000000007e-05, 6.511099999999964e-05, 6.512499999999921e-05, 6.511099999999964e-05, 6.505499999999789e-05, 6.512499999999921e-05, 6.511099999999964e-05, 6.512500000000268e-05, 6.509700000000007e-05, 6.509700000000007e-05, 6.511099999999964e-05, 6.512500000000268e-05, 6.509799999999955e-05, 6.511099999999964e-05, 6.509700000000007e-05, 6.511099999999964e-05, 6.50830000000005e-05, 6.509700000000007e-05, 6.512499999999921e-05, 6.519499999999706e-05, 6.511200000000258e-05, 6.511099999999964e-05, 6.509799999999955e-05, 6.509700000000007e-05, 6.512499999999921e-05, 6.509700000000007e-05, 6.509700000000007e-05, 6.50419999999978e-05, 6.512499999999921e-05, 6.509700000000007e-05, 6.511099999999964e-05, 6.512499999999921e-05, 6.512499999999921e-05]</msg>
<status status="PASS" starttime="20201030 15:52:50.569" endtime="20201030 15:52:50.572"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.565" endtime="20201030 15:52:50.572"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:50.576" endtime="20201030 15:52:50.595"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.574" endtime="20201030 15:52:50.596"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.573" endtime="20201030 15:52:50.596"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.216" endtime="20201030 15:52:50.596"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.215" endtime="20201030 15:52:50.596"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:50.605" endtime="20201030 15:52:50.622"></status>
</kw>
<msg timestamp="20201030 15:52:50.623" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:50.603" endtime="20201030 15:52:50.623"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:50.625" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:50.624" endtime="20201030 15:52:50.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:50.626" endtime="20201030 15:52:50.628"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.601" endtime="20201030 15:52:50.628"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.599" endtime="20201030 15:52:50.629"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:50.635" endtime="20201030 15:52:50.921"></status>
</kw>
<msg timestamp="20201030 15:52:50.924" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022547778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022614028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:50.634" endtime="20201030 15:52:50.924"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:50.932" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022547778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022614028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:50.925" endtime="20201030 15:52:50.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:50.933" endtime="20201030 15:52:50.935"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.631" endtime="20201030 15:52:50.936"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.629" endtime="20201030 15:52:50.936"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:50.940" level="INFO">${RESULT} = [{'diff': 6.625000000000034e-05}, {'diff': 6.509700000000007e-05}, {'diff': 6.508299999999703e-05}, {'diff': 6.506899999999746e-05}, {'diff': 6.509700000000007e-05}, {'diff': 6.502799999999823e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:50.937" endtime="20201030 15:52:50.940"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:50.944" level="INFO">${ACCURACY} = {'diff': [6.625000000000034e-05, 6.509700000000007e-05, 6.508299999999703e-05, 6.506899999999746e-05, 6.509700000000007e-05, 6.502799999999823e-05, 6.511099999999964e-05, 6.511099999999964e-05, 6.5110...</msg>
<status status="PASS" starttime="20201030 15:52:50.941" endtime="20201030 15:52:50.944"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:50.949" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201030 15:52:50.948" endtime="20201030 15:52:50.949"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:50.952" level="INFO">VALUE: [6.625000000000034e-05, 6.509700000000007e-05, 6.508299999999703e-05, 6.506899999999746e-05, 6.509700000000007e-05, 6.502799999999823e-05, 6.511099999999964e-05, 6.511099999999964e-05, 6.511099999999964e-05, 6.506900000000093e-05, 6.509700000000007e-05, 6.511099999999964e-05, 6.512499999999921e-05, 6.512499999999921e-05, 6.511099999999964e-05, 6.511099999999964e-05, 6.50700000000004e-05, 6.511099999999964e-05, 6.511099999999964e-05, 6.505599999999737e-05, 6.512500000000268e-05, 6.512499999999921e-05, 6.512499999999921e-05, 6.512500000000268e-05, 6.512499999999921e-05, 6.511099999999964e-05, 6.515199999999888e-05, 6.505500000000136e-05, 6.511099999999964e-05, 6.513899999999878e-05, 6.50830000000005e-05, 6.512499999999921e-05, 6.505600000000084e-05, 6.512499999999921e-05, 6.511099999999964e-05, 6.504100000000179e-05, 6.511099999999964e-05, 6.512499999999921e-05, 6.509700000000007e-05, 6.511099999999964e-05, 6.512500000000268e-05, 6.509700000000007e-05, 6.512500000000268e-05, 6.513899999999878e-05, 6.511099999999964e-05, 6.511099999999964e-05, 6.511099999999964e-05, 6.502799999999823e-05, 6.512500000000268e-05, 6.509700000000007e-05]</msg>
<status status="PASS" starttime="20201030 15:52:50.950" endtime="20201030 15:52:51.023"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.945" endtime="20201030 15:52:51.023"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:51.027" endtime="20201030 15:52:51.046"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.026" endtime="20201030 15:52:51.047"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.024" endtime="20201030 15:52:51.047"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.597" endtime="20201030 15:52:51.048"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.597" endtime="20201030 15:52:51.048"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:51.056" endtime="20201030 15:52:51.076"></status>
</kw>
<msg timestamp="20201030 15:52:51.077" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:51.055" endtime="20201030 15:52:51.077"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:51.079" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:51.078" endtime="20201030 15:52:51.079"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:51.080" endtime="20201030 15:52:51.082"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.052" endtime="20201030 15:52:51.082"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.050" endtime="20201030 15:52:51.083"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:51.089" endtime="20201030 15:52:51.374"></status>
</kw>
<msg timestamp="20201030 15:52:51.377" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021734472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021869778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:51.088" endtime="20201030 15:52:51.377"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:51.385" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021734472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021869778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:51.378" endtime="20201030 15:52:51.385"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:51.386" endtime="20201030 15:52:51.388"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.085" endtime="20201030 15:52:51.388"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.083" endtime="20201030 15:52:51.389"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:51.393" level="INFO">${RESULT} = [{'diff': 0.00013530599999999823}, {'diff': 0.00013487500000000305}, {'diff': 0.00013488899999999915}, {'diff': 0.00013487499999999958}, {'diff': 0.00013488899999999915}, {'diff': 0.000134888999999999...</msg>
<status status="PASS" starttime="20201030 15:52:51.390" endtime="20201030 15:52:51.393"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:51.397" level="INFO">${ACCURACY} = {'diff': [0.00013530599999999823, 0.00013487500000000305, 0.00013488899999999915, 0.00013487499999999958, 0.00013488899999999915, 0.00013488899999999915, 0.00013488899999999915, 0.00013490299999999872...</msg>
<status status="PASS" starttime="20201030 15:52:51.394" endtime="20201030 15:52:51.398"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:51.402" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201030 15:52:51.401" endtime="20201030 15:52:51.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:51.404" level="INFO">VALUE: [0.00013530599999999823, 0.00013487500000000305, 0.00013488899999999915, 0.00013487499999999958, 0.00013488899999999915, 0.00013488899999999915, 0.00013488899999999915, 0.00013490299999999872, 0.00013488799999999967, 0.00013487499999999958, 0.00013488899999999915, 0.0001349169999999983, 0.00013490299999999872, 0.00013488899999999915, 0.00013490299999999872, 0.00013488899999999915, 0.00013488900000000262, 0.000134861, 0.00013488899999999915, 0.0001349169999999983, 0.00013488899999999915, 0.00013490199999999924, 0.00013490299999999872, 0.00013491700000000176, 0.0001349030000000022, 0.00013495900000000047, 0.00013488799999999967, 0.00013487499999999958, 0.00013490299999999872, 0.0001349169999999983, 0.00013494499999999743, 0.00013490299999999872, 0.00013490299999999872, 0.00013486199999999948, 0.0001349169999999983, 0.00013484700000000044, 0.00013490299999999872, 0.0001349030000000022, 0.00013490299999999872, 0.00013491700000000176, 0.00013490299999999872, 0.00013488900000000262, 0.0001349030000000022, 0.00013488899999999915, 0.00013491700000000176, 0.000134958000000001, 0.00013488899999999915, 0.00013487499999999958, 0.00013492999999999838, 0.00013498600000000013]</msg>
<status status="PASS" starttime="20201030 15:52:51.403" endtime="20201030 15:52:51.405"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.398" endtime="20201030 15:52:51.406"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:51.409" endtime="20201030 15:52:51.429"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.408" endtime="20201030 15:52:51.429"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.407" endtime="20201030 15:52:51.430"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.049" endtime="20201030 15:52:51.430"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.048" endtime="20201030 15:52:51.430"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:51.439" endtime="20201030 15:52:51.458"></status>
</kw>
<msg timestamp="20201030 15:52:51.459" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:51.437" endtime="20201030 15:52:51.459"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:51.461" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:51.460" endtime="20201030 15:52:51.462"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:51.463" endtime="20201030 15:52:51.464"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.435" endtime="20201030 15:52:51.465"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.433" endtime="20201030 15:52:51.465"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:51.471" endtime="20201030 15:52:51.775"></status>
</kw>
<msg timestamp="20201030 15:52:51.778" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021664736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021800083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:51.470" endtime="20201030 15:52:51.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:51.786" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021664736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021800083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:51.779" endtime="20201030 15:52:51.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:51.787" endtime="20201030 15:52:51.789"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.467" endtime="20201030 15:52:51.789"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.466" endtime="20201030 15:52:51.790"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:51.793" level="INFO">${RESULT} = [{'diff': 0.00013534700000000094}, {'diff': 0.00013490199999999924}, {'diff': 0.00013494400000000142}, {'diff': 0.00013493100000000133}, {'diff': 0.00013491599999999881}, {'diff': 0.000134902999999998...</msg>
<status status="PASS" starttime="20201030 15:52:51.790" endtime="20201030 15:52:51.794"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:51.797" level="INFO">${ACCURACY} = {'diff': [0.00013534700000000094, 0.00013490199999999924, 0.00013494400000000142, 0.00013493100000000133, 0.00013491599999999881, 0.00013490299999999872, 0.0001349450000000009, 0.00013493100000000133,...</msg>
<status status="PASS" starttime="20201030 15:52:51.794" endtime="20201030 15:52:51.798"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:51.802" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201030 15:52:51.801" endtime="20201030 15:52:51.802"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:51.804" level="INFO">VALUE: [0.00013534700000000094, 0.00013490199999999924, 0.00013494400000000142, 0.00013493100000000133, 0.00013491599999999881, 0.00013490299999999872, 0.0001349450000000009, 0.00013493100000000133, 0.00013491700000000176, 0.00013493100000000133, 0.00013498600000000013, 0.00013493100000000133, 0.00013487499999999958, 0.00013493099999999786, 0.00013493000000000185, 0.00013493000000000185, 0.00013498600000000013, 0.00013493000000000185, 0.0001349869999999996, 0.00013493099999999786, 0.00013493000000000185, 0.00013493099999999786, 0.00013492999999999838, 0.00013493100000000133, 0.00013492999999999838, 0.0001349169999999983, 0.00013491600000000228, 0.00013490199999999924, 0.00013491700000000176, 0.00013493000000000185, 0.0001349169999999983, 0.00013491700000000176, 0.00013491700000000176, 0.00013491700000000176, 0.0001349450000000009, 0.00013491700000000176, 0.00013491700000000176, 0.00013490200000000271, 0.00013491700000000176, 0.00013493100000000133, 0.000134861, 0.00013493000000000185, 0.00013491700000000176, 0.00013490299999999872, 0.00013488899999999915, 0.0001349450000000009, 0.00013493000000000185, 0.00013491700000000176, 0.00013491700000000176, 0.00013490299999999872]</msg>
<status status="PASS" starttime="20201030 15:52:51.803" endtime="20201030 15:52:51.805"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.798" endtime="20201030 15:52:51.806"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:51.809" endtime="20201030 15:52:51.829"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.808" endtime="20201030 15:52:51.829"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.807" endtime="20201030 15:52:51.829"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.431" endtime="20201030 15:52:51.830"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.430" endtime="20201030 15:52:51.830"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:51.839" endtime="20201030 15:52:51.859"></status>
</kw>
<msg timestamp="20201030 15:52:51.860" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:51.837" endtime="20201030 15:52:51.860"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:51.862" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:51.861" endtime="20201030 15:52:51.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:51.863" endtime="20201030 15:52:51.865"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.835" endtime="20201030 15:52:51.866"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.832" endtime="20201030 15:52:51.866"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:51.872" endtime="20201030 15:52:52.158"></status>
</kw>
<msg timestamp="20201030 15:52:52.161" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022745278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022880597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:51.871" endtime="20201030 15:52:52.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:52.169" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022745278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022880597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:52.162" endtime="20201030 15:52:52.170"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:52.171" endtime="20201030 15:52:52.172"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.868" endtime="20201030 15:52:52.173"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.867" endtime="20201030 15:52:52.173"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:52.177" level="INFO">${RESULT} = [{'diff': 0.00013531899999999833}, {'diff': 0.00013491700000000176}, {'diff': 0.00013490299999999872}, {'diff': 0.0001349030000000022}, {'diff': 0.00013488899999999915}, {'diff': 0.0001348889999999991...</msg>
<status status="PASS" starttime="20201030 15:52:52.174" endtime="20201030 15:52:52.177"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:52.181" level="INFO">${ACCURACY} = {'diff': [0.00013531899999999833, 0.00013491700000000176, 0.00013490299999999872, 0.0001349030000000022, 0.00013488899999999915, 0.00013488899999999915, 0.00013488899999999915, 0.00013488899999999915,...</msg>
<status status="PASS" starttime="20201030 15:52:52.178" endtime="20201030 15:52:52.181"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:52.185" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201030 15:52:52.184" endtime="20201030 15:52:52.186"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:52.189" level="INFO">VALUE: [0.00013531899999999833, 0.00013491700000000176, 0.00013490299999999872, 0.0001349030000000022, 0.00013488899999999915, 0.00013488899999999915, 0.00013488899999999915, 0.00013488899999999915, 0.0001349030000000022, 0.00013490299999999872, 0.00013491700000000176, 0.00013487500000000305, 0.00013488899999999915, 0.0001349030000000022, 0.000134861, 0.00013487499999999958, 0.00013491600000000228, 0.00013491700000000176, 0.00013490200000000271, 0.00013491700000000176, 0.00013492999999999838, 0.00013487499999999958, 0.00013491599999999881, 0.00013493100000000133, 0.00013490299999999872, 0.00013488799999999967, 0.00013493100000000133, 0.00013491600000000228, 0.0001349030000000022, 0.0001349030000000022, 0.00013487499999999958, 0.00013487499999999958, 0.0001349030000000022, 0.00013488799999999967, 0.00013490199999999924, 0.00013491700000000176, 0.00013491599999999881, 0.000134958000000001, 0.00013491700000000176, 0.0001349169999999983, 0.00013491599999999881, 0.00013490199999999924, 0.00013490199999999924, 0.00013487499999999958, 0.00013488899999999915, 0.00013484700000000044, 0.00013492999999999838, 0.0001349169999999983, 0.00013490199999999924, 0.0001349169999999983]</msg>
<status status="PASS" starttime="20201030 15:52:52.186" endtime="20201030 15:52:52.189"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.182" endtime="20201030 15:52:52.190"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:52.194" endtime="20201030 15:52:52.213"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.192" endtime="20201030 15:52:52.214"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.191" endtime="20201030 15:52:52.214"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.831" endtime="20201030 15:52:52.214"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.830" endtime="20201030 15:52:52.214"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:52.223" endtime="20201030 15:52:52.243"></status>
</kw>
<msg timestamp="20201030 15:52:52.243" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:52.222" endtime="20201030 15:52:52.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:52.246" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:52.245" endtime="20201030 15:52:52.246"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:52.247" endtime="20201030 15:52:52.249"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.219" endtime="20201030 15:52:52.249"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.217" endtime="20201030 15:52:52.249"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:52.256" endtime="20201030 15:52:52.542"></status>
</kw>
<msg timestamp="20201030 15:52:52.545" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021889611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022024931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:52.254" endtime="20201030 15:52:52.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:52.552" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021889611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022024931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:52.546" endtime="20201030 15:52:52.553"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:52.554" endtime="20201030 15:52:52.555"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.252" endtime="20201030 15:52:52.556"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.250" endtime="20201030 15:52:52.556"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:52.560" level="INFO">${RESULT} = [{'diff': 0.00013532000000000127}, {'diff': 0.00013490299999999872}, {'diff': 0.00013487499999999958}, {'diff': 0.000134861}, {'diff': 0.0001349030000000022}, {'diff': 0.00013487499999999958}, {'diff'...</msg>
<status status="PASS" starttime="20201030 15:52:52.557" endtime="20201030 15:52:52.560"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:52.565" level="INFO">${ACCURACY} = {'diff': [0.00013532000000000127, 0.00013490299999999872, 0.00013487499999999958, 0.000134861, 0.0001349030000000022, 0.00013487499999999958, 0.000134861, 0.00013484700000000044, 0.0001349300000000018...</msg>
<status status="PASS" starttime="20201030 15:52:52.561" endtime="20201030 15:52:52.565"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:52.570" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201030 15:52:52.568" endtime="20201030 15:52:52.570"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:52.572" level="INFO">VALUE: [0.00013532000000000127, 0.00013490299999999872, 0.00013487499999999958, 0.000134861, 0.0001349030000000022, 0.00013487499999999958, 0.000134861, 0.00013484700000000044, 0.00013493000000000185, 0.0001349030000000022, 0.0001349030000000022, 0.00013488899999999915, 0.00013488799999999967, 0.000134861, 0.00013488799999999967, 0.00013488899999999915, 0.00013488899999999915, 0.00013487499999999958, 0.00013490299999999872, 0.000134861, 0.00013491700000000176, 0.00013487499999999958, 0.00013490299999999872, 0.00013487499999999958, 0.00013491599999999881, 0.00013488899999999915, 0.00013487499999999958, 0.00013488899999999915, 0.0001349030000000022, 0.00013488900000000262, 0.0001349030000000022, 0.00013488799999999967, 0.0001349030000000022, 0.00013491700000000176, 0.00013487499999999958, 0.00013490199999999924, 0.00013487499999999958, 0.00013488799999999967, 0.00013488899999999915, 0.0001349030000000022, 0.00013488899999999915, 0.00013487499999999958, 0.000134861, 0.00013494399999999795, 0.00013488899999999915, 0.000134861, 0.00013487499999999958, 0.00013487499999999958, 0.000134861, 0.0001349030000000022]</msg>
<status status="PASS" starttime="20201030 15:52:52.571" endtime="20201030 15:52:52.573"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.566" endtime="20201030 15:52:52.573"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:52.577" endtime="20201030 15:52:52.596"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.575" endtime="20201030 15:52:52.597"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.574" endtime="20201030 15:52:52.597"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.215" endtime="20201030 15:52:52.597"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.215" endtime="20201030 15:52:52.598"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:52.606" endtime="20201030 15:52:52.626"></status>
</kw>
<msg timestamp="20201030 15:52:52.627" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:52.605" endtime="20201030 15:52:52.627"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:52.629" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:52.628" endtime="20201030 15:52:52.629"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:52.630" endtime="20201030 15:52:52.632"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.602" endtime="20201030 15:52:52.632"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.600" endtime="20201030 15:52:52.633"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:52.639" endtime="20201030 15:52:52.926"></status>
</kw>
<msg timestamp="20201030 15:52:52.929" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021742417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021877764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:52.638" endtime="20201030 15:52:52.929"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:52.937" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021742417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021877764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:52.930" endtime="20201030 15:52:52.937"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:52.938" endtime="20201030 15:52:52.940"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.635" endtime="20201030 15:52:52.940"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.633" endtime="20201030 15:52:52.941"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:52.945" level="INFO">${RESULT} = [{'diff': 0.00013534700000000094}, {'diff': 0.00013490299999999872}, {'diff': 0.00013490299999999872}, {'diff': 0.00013494399999999795}, {'diff': 0.00013493100000000133}, {'diff': 0.000134944000000001...</msg>
<status status="PASS" starttime="20201030 15:52:52.941" endtime="20201030 15:52:52.945"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:52.948" level="INFO">${ACCURACY} = {'diff': [0.00013534700000000094, 0.00013490299999999872, 0.00013490299999999872, 0.00013494399999999795, 0.00013493100000000133, 0.00013494400000000142, 0.0001349030000000022, 0.000134958000000001, 0...</msg>
<status status="PASS" starttime="20201030 15:52:52.945" endtime="20201030 15:52:52.949"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:52.953" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201030 15:52:52.952" endtime="20201030 15:52:52.953"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:52.955" level="INFO">VALUE: [0.00013534700000000094, 0.00013490299999999872, 0.00013490299999999872, 0.00013494399999999795, 0.00013493100000000133, 0.00013494400000000142, 0.0001349030000000022, 0.000134958000000001, 0.0001349169999999983, 0.0001349169999999983, 0.00013491700000000176, 0.00013490299999999872, 0.00013492999999999838, 0.00013493099999999786, 0.00013490299999999872, 0.00013483300000000087, 0.0001349030000000022, 0.00013490299999999872, 0.00013491599999999881, 0.000134861, 0.00013495799999999752, 0.0001349169999999983, 0.0001349169999999983, 0.000134958000000001, 0.00013493100000000133, 0.00013488799999999967, 0.00013491599999999881, 0.00013491599999999881, 0.00013490299999999872, 0.00013487500000000305, 0.0001349030000000022, 0.00013491600000000228, 0.00013488899999999915, 0.00013491600000000228, 0.00013490200000000271, 0.00013495900000000047, 0.0001349030000000022, 0.00013488899999999915, 0.00013492999999999838, 0.00013490299999999872, 0.00013497200000000056, 0.00013492999999999838, 0.00013488899999999915, 0.00013493100000000133, 0.00013483300000000087, 0.0001349169999999983, 0.00013490199999999924, 0.00013491700000000176, 0.0001349030000000022, 0.00013491700000000176]</msg>
<status status="PASS" starttime="20201030 15:52:52.954" endtime="20201030 15:52:52.956"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.949" endtime="20201030 15:52:52.957"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:52.960" endtime="20201030 15:52:52.980"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.959" endtime="20201030 15:52:52.980"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.958" endtime="20201030 15:52:52.981"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.599" endtime="20201030 15:52:52.981"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.598" endtime="20201030 15:52:52.981"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:52.990" endtime="20201030 15:52:54.008"></status>
</kw>
<msg timestamp="20201030 15:52:54.009" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy_timer_sleep 45', 'msg': ['sleep_accuracy_timer_sleep 45\r\n', '{"cmd":"sleep_accuracy: timer_sleep(45)"\n', 'Context before hardfault:\n'], 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 15:52:52.988" endtime="20201030 15:52:54.009"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:54.011" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy_timer_sleep 45', 'msg': ['sleep_accuracy_timer_sleep 45\r\n', '{"cmd":"sleep_accuracy: timer_sleep(45)"\n', 'Context before hardfault:\n'], 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 15:52:54.010" endtime="20201030 15:52:54.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:52:54.014" level="FAIL">'Timeout' does not contain 'Success'</msg>
<status status="FAIL" starttime="20201030 15:52:54.012" endtime="20201030 15:52:54.015"></status>
</kw>
<status status="FAIL" starttime="20201030 15:52:52.986" endtime="20201030 15:52:54.015"></status>
</kw>
<status status="FAIL" starttime="20201030 15:52:52.984" endtime="20201030 15:52:54.016"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:54.019" endtime="20201030 15:52:54.039"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.018" endtime="20201030 15:52:54.039"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.017" endtime="20201030 15:52:54.040"></status>
</kw>
<status status="FAIL" starttime="20201030 15:52:52.982" endtime="20201030 15:52:54.040"></status>
</kw>
<status status="FAIL" starttime="20201030 15:52:52.981" endtime="20201030 15:52:54.040"></status>
</kw>
<status status="FAIL" starttime="20201030 15:52:35.891" endtime="20201030 15:52:54.041"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="FAIL" starttime="20201030 15:52:35.824" endtime="20201030 15:52:54.041" critical="yes">'Timeout' does not contain 'Success'</status>
</test>
<status status="FAIL" starttime="20201030 15:51:55.724" endtime="20201030 15:52:54.045"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 15:52:54.098" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 15:52:54.106" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 15:52:55.482" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 15:52:54.096" endtime="20201030 15:52:55.482"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 15:52:55.485" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 15:52:55.484" endtime="20201030 15:52:55.485"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.095" endtime="20201030 15:52:55.486"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:55.488" endtime="20201030 15:52:55.671"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.487" endtime="20201030 15:52:55.672"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:55.685" endtime="20201030 15:52:55.698"></status>
</kw>
<msg timestamp="20201030 15:52:55.699" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:55.683" endtime="20201030 15:52:55.699"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:55.701" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:55.700" endtime="20201030 15:52:55.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:52:55.704" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:52:55.702" endtime="20201030 15:52:55.705"></status>
</kw>
<status status="FAIL" starttime="20201030 15:52:55.681" endtime="20201030 15:52:55.705"></status>
</kw>
<status status="FAIL" starttime="20201030 15:52:55.678" endtime="20201030 15:52:55.706"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.677" endtime="20201030 15:52:55.706"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:52:55.710" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:52:55.709" endtime="20201030 15:52:55.710"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.707" endtime="20201030 15:52:55.711"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.676" endtime="20201030 15:52:55.711"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.676" endtime="20201030 15:52:55.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:55.712" endtime="20201030 15:52:55.713"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.674" endtime="20201030 15:52:55.714"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:55.714" endtime="20201030 15:52:55.716"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.673" endtime="20201030 15:52:55.716"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.094" endtime="20201030 15:52:55.717"></status>
</kw>
<test id="s1-s4-t1" name="0 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:55.722" endtime="20201030 15:52:55.742"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.721" endtime="20201030 15:52:55.742"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:55.755" endtime="20201030 15:52:55.768"></status>
</kw>
<msg timestamp="20201030 15:52:55.769" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:55.754" endtime="20201030 15:52:55.769"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:55.771" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:55.770" endtime="20201030 15:52:55.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:52:55.774" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:52:55.772" endtime="20201030 15:52:55.775"></status>
</kw>
<status status="FAIL" starttime="20201030 15:52:55.751" endtime="20201030 15:52:55.775"></status>
</kw>
<status status="FAIL" starttime="20201030 15:52:55.749" endtime="20201030 15:52:55.776"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.747" endtime="20201030 15:52:55.776"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:52:55.780" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:52:55.779" endtime="20201030 15:52:55.780"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.777" endtime="20201030 15:52:55.780"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.747" endtime="20201030 15:52:55.781"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.746" endtime="20201030 15:52:55.781"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:55.781" endtime="20201030 15:52:55.783"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.745" endtime="20201030 15:52:55.784"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.743" endtime="20201030 15:52:55.784"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.719" endtime="20201030 15:52:55.785"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>0</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:55.793" endtime="20201030 15:53:01.895"></status>
</kw>
<msg timestamp="20201030 15:53:01.896" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:55.791" endtime="20201030 15:53:01.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:01.902" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:01.899" endtime="20201030 15:53:01.902"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:01.904" endtime="20201030 15:53:01.907"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.789" endtime="20201030 15:53:01.908"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.787" endtime="20201030 15:53:01.909"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:01.914" level="INFO">${RESULT} = {'bg-timer-count': 0, 'bg-timer-interval': 20000, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201030 15:53:01.911" endtime="20201030 15:53:01.915"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:01.923" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 15:53:01.921" endtime="20201030 15:53:01.924"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:01.927" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 15:53:01.925" endtime="20201030 15:53:01.928"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.916" endtime="20201030 15:53:01.929"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:01.937" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 15:53:01.935" endtime="20201030 15:53:01.938"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:01.940" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 15:53:01.939" endtime="20201030 15:53:01.940"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.930" endtime="20201030 15:53:01.941"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:01.945" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 15:53:01.944" endtime="20201030 15:53:01.945"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:01.947" level="INFO">VALUE: 0</msg>
<status status="PASS" starttime="20201030 15:53:01.946" endtime="20201030 15:53:01.947"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.942" endtime="20201030 15:53:01.948"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:01.955" endtime="20201030 15:53:02.257"></status>
</kw>
<msg timestamp="20201030 15:53:02.260" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.061692194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.161496944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:01.953" endtime="20201030 15:53:02.260"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:02.268" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.061692194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.161496944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:02.261" endtime="20201030 15:53:02.268"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:02.269" endtime="20201030 15:53:02.271"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.950" endtime="20201030 15:53:02.271"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.948" endtime="20201030 15:53:02.272"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 15:53:02.276" level="INFO">${FILTERED} = [{'diff': 0.09980475}, {'diff': 0.09968379200000002}, {'diff': 0.09969791700000002}, {'diff': 0.09970204199999999}, {'diff': 0.09969911099999995}, {'diff': 0.09969644499999997}, {'diff': 0.09969320800...</msg>
<status status="PASS" starttime="20201030 15:53:02.273" endtime="20201030 15:53:02.276"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:02.280" level="INFO">${RESULT} = {'diff': [0.09980475, 0.09968379200000002, 0.09969791700000002, 0.09970204199999999, 0.09969911099999995, 0.09969644499999997, 0.09969320800000003, 0.099683611, 0.09969488900000001, 0.0996947359999999...</msg>
<status status="PASS" starttime="20201030 15:53:02.277" endtime="20201030 15:53:02.280"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:02.284" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 15:53:02.283" endtime="20201030 15:53:02.284"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:02.286" level="INFO">VALUE: [0.09980475, 0.09968379200000002, 0.09969791700000002, 0.09970204199999999, 0.09969911099999995, 0.09969644499999997, 0.09969320800000003, 0.099683611, 0.09969488900000001, 0.0996947359999999, 0.0996869869999999, 0.09968623600000015, 0.09969322200000019, 0.0996885139999999, 0.09968931999999997, 0.09969280599999997, 0.09969905599999995, 0.09969445899999996, 0.09969779199999995, 0.09969888900000012, 0.09969812500000019, 0.09969887500000008, 0.09969656900000023, 0.09969594400000004, 0.09969463899999997, 0.09969663800000017, 0.099708986, 0.09970269399999987, 0.09970811200000007, 0.09970334699999972, 0.09970187500000005, 0.09970205599999993, 0.09970287500000019, 0.09970227800000009, 0.09970247299999979, 0.09970165299999989, 0.09969686099999997, 0.09969742999999998, 0.09970716599999996, 0.09970384700000023, 0.0997021380000005, 0.09969830499999954, 0.09970341599999966, 0.0997009310000001, 0.09970374999999976, 0.09970643100000043, 0.09970411100000032, 0.09969849999999969, 0.09970409700000005, 0.09971313900000034, 0.09970551399999916]</msg>
<status status="PASS" starttime="20201030 15:53:02.285" endtime="20201030 15:53:02.286"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.280" endtime="20201030 15:53:02.287"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:02.290" endtime="20201030 15:53:02.310"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.289" endtime="20201030 15:53:02.311"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.288" endtime="20201030 15:53:02.311"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.785" endtime="20201030 15:53:02.311"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="PASS" starttime="20201030 15:52:55.717" endtime="20201030 15:53:02.312" critical="yes"></status>
</test>
<test id="s1-s4-t2" name="5 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:02.318" endtime="20201030 15:53:02.337"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.317" endtime="20201030 15:53:02.338"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:02.352" endtime="20201030 15:53:02.364"></status>
</kw>
<msg timestamp="20201030 15:53:02.365" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:02.350" endtime="20201030 15:53:02.365"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:02.367" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:02.366" endtime="20201030 15:53:02.367"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:53:02.370" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:53:02.368" endtime="20201030 15:53:02.370"></status>
</kw>
<status status="FAIL" starttime="20201030 15:53:02.348" endtime="20201030 15:53:02.371"></status>
</kw>
<status status="FAIL" starttime="20201030 15:53:02.346" endtime="20201030 15:53:02.372"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.344" endtime="20201030 15:53:02.372"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:53:02.376" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:53:02.375" endtime="20201030 15:53:02.376"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.373" endtime="20201030 15:53:02.377"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.343" endtime="20201030 15:53:02.377"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.343" endtime="20201030 15:53:02.377"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:02.378" endtime="20201030 15:53:02.379"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.341" endtime="20201030 15:53:02.380"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.339" endtime="20201030 15:53:02.380"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.315" endtime="20201030 15:53:02.380"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>5</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:02.388" endtime="20201030 15:53:08.490"></status>
</kw>
<msg timestamp="20201030 15:53:08.491" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:02.387" endtime="20201030 15:53:08.492"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:08.497" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:08.494" endtime="20201030 15:53:08.497"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:08.499" endtime="20201030 15:53:08.502"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.384" endtime="20201030 15:53:08.503"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.383" endtime="20201030 15:53:08.504"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:08.509" level="INFO">${RESULT} = {'bg-timer-count': 5, 'bg-timer-interval': 20000, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201030 15:53:08.506" endtime="20201030 15:53:08.510"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:08.520" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 15:53:08.516" endtime="20201030 15:53:08.520"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:08.524" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 15:53:08.522" endtime="20201030 15:53:08.525"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.511" endtime="20201030 15:53:08.526"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:08.534" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 15:53:08.532" endtime="20201030 15:53:08.534"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:08.538" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 15:53:08.536" endtime="20201030 15:53:08.539"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.527" endtime="20201030 15:53:08.540"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:08.548" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 15:53:08.546" endtime="20201030 15:53:08.548"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:08.552" level="INFO">VALUE: 5</msg>
<status status="PASS" starttime="20201030 15:53:08.550" endtime="20201030 15:53:08.553"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.541" endtime="20201030 15:53:08.554"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:08.567" endtime="20201030 15:53:08.872"></status>
</kw>
<msg timestamp="20201030 15:53:08.875" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.061692125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.161582347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:08.564" endtime="20201030 15:53:08.875"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:08.883" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.061692125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.161582347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:08.876" endtime="20201030 15:53:08.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:08.884" endtime="20201030 15:53:08.886"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.558" endtime="20201030 15:53:08.887"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.555" endtime="20201030 15:53:08.887"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 15:53:08.891" level="INFO">${FILTERED} = [{'diff': 0.09989022199999999}, {'diff': 0.09985765299999999}, {'diff': 0.09942282000000002}, {'diff': 0.099690681}, {'diff': 0.09968865300000002}, {'diff': 0.09968832000000005}, {'diff': 0.0996898890...</msg>
<status status="PASS" starttime="20201030 15:53:08.888" endtime="20201030 15:53:08.891"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:08.895" level="INFO">${RESULT} = {'diff': [0.09989022199999999, 0.09985765299999999, 0.09942282000000002, 0.099690681, 0.09968865300000002, 0.09968832000000005, 0.09968988900000009, 0.09969097199999999, 0.09969084699999997, 0.0996944...</msg>
<status status="PASS" starttime="20201030 15:53:08.892" endtime="20201030 15:53:08.896"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:08.900" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 15:53:08.899" endtime="20201030 15:53:08.900"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:08.902" level="INFO">VALUE: [0.09989022199999999, 0.09985765299999999, 0.09942282000000002, 0.099690681, 0.09968865300000002, 0.09968832000000005, 0.09968988900000009, 0.09969097199999999, 0.09969084699999997, 0.09969445899999996, 0.09968845799999992, 0.09968945800000006, 0.09969412500000008, 0.09968804200000014, 0.09968566600000006, 0.09969048600000008, 0.099688416, 0.09968569399999994, 0.099682834, 0.09968048600000001, 0.09968219400000011, 0.09968655599999998, 0.09969162500000017, 0.09968936100000025, 0.09969256900000012, 0.09969831900000026, 0.0996889999999997, 0.09968101400000018, 0.09968170899999995, 0.09968538899999979, 0.09969188800000017, 0.09969029099999993, 0.09968894399999995, 0.09968315299999997, 0.09968437500000027, 0.09968463899999991, 0.09968665299999957, 0.09968634700000001, 0.09968652799999989, 0.09968529100000056, 0.09968723600000029, 0.0996865549999999, 0.09968527799999993, 0.09968315199999989, 0.0996800689999997, 0.09968270800000045, 0.09968069499999999, 0.09968731900000005, 0.09968341699999961, 0.09968722200000002, 0.09969112500000055]</msg>
<status status="PASS" starttime="20201030 15:53:08.901" endtime="20201030 15:53:08.902"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.896" endtime="20201030 15:53:08.903"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:08.906" endtime="20201030 15:53:08.926"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.905" endtime="20201030 15:53:08.926"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.904" endtime="20201030 15:53:08.927"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.381" endtime="20201030 15:53:08.927"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="PASS" starttime="20201030 15:53:02.313" endtime="20201030 15:53:08.928" critical="yes"></status>
</test>
<test id="s1-s4-t3" name="10 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:08.934" endtime="20201030 15:53:08.953"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.932" endtime="20201030 15:53:08.954"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:08.967" endtime="20201030 15:53:08.979"></status>
</kw>
<msg timestamp="20201030 15:53:08.979" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:08.965" endtime="20201030 15:53:08.979"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:08.982" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:08.980" endtime="20201030 15:53:08.982"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:53:08.986" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:53:08.983" endtime="20201030 15:53:08.986"></status>
</kw>
<status status="FAIL" starttime="20201030 15:53:08.963" endtime="20201030 15:53:08.987"></status>
</kw>
<status status="FAIL" starttime="20201030 15:53:08.960" endtime="20201030 15:53:08.987"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.959" endtime="20201030 15:53:08.988"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:53:08.992" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:53:08.991" endtime="20201030 15:53:08.992"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.988" endtime="20201030 15:53:08.992"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.958" endtime="20201030 15:53:08.992"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.958" endtime="20201030 15:53:08.993"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:08.993" endtime="20201030 15:53:08.995"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.956" endtime="20201030 15:53:08.996"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.954" endtime="20201030 15:53:08.996"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.931" endtime="20201030 15:53:08.996"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>10</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:09.006" endtime="20201030 15:53:15.108"></status>
</kw>
<msg timestamp="20201030 15:53:15.109" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:09.004" endtime="20201030 15:53:15.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:15.114" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:15.111" endtime="20201030 15:53:15.115"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:15.116" endtime="20201030 15:53:15.120"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.002" endtime="20201030 15:53:15.121"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.998" endtime="20201030 15:53:15.122"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:15.127" level="INFO">${RESULT} = {'bg-timer-count': 10, 'bg-timer-interval': 20000, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201030 15:53:15.123" endtime="20201030 15:53:15.127"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:15.135" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 15:53:15.133" endtime="20201030 15:53:15.136"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:15.139" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 15:53:15.137" endtime="20201030 15:53:15.140"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.128" endtime="20201030 15:53:15.141"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:15.149" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 15:53:15.147" endtime="20201030 15:53:15.149"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:15.153" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 15:53:15.151" endtime="20201030 15:53:15.154"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.142" endtime="20201030 15:53:15.155"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:15.163" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 15:53:15.161" endtime="20201030 15:53:15.163"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:15.167" level="INFO">VALUE: 10</msg>
<status status="PASS" starttime="20201030 15:53:15.165" endtime="20201030 15:53:15.168"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.156" endtime="20201030 15:53:15.169"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:15.177" endtime="20201030 15:53:15.475"></status>
</kw>
<msg timestamp="20201030 15:53:15.478" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063644597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.163970806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:15.176" endtime="20201030 15:53:15.478"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:15.486" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063644597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.163970806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:15.479" endtime="20201030 15:53:15.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:15.487" endtime="20201030 15:53:15.488"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.173" endtime="20201030 15:53:15.489"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.171" endtime="20201030 15:53:15.489"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 15:53:15.494" level="INFO">${FILTERED} = [{'diff': 0.100326209}, {'diff': 0.09915680599999996}, {'diff': 0.09968879200000003}, {'diff': 0.09969901399999997}, {'diff': 0.09969281899999999}, {'diff': 0.09968223600000004}, {'diff': 0.0996791670...</msg>
<status status="PASS" starttime="20201030 15:53:15.490" endtime="20201030 15:53:15.495"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:15.498" level="INFO">${RESULT} = {'diff': [0.100326209, 0.09915680599999996, 0.09968879200000003, 0.09969901399999997, 0.09969281899999999, 0.09968223600000004, 0.09967916700000001, 0.09968591699999996, 0.09967811100000001, 0.0996811...</msg>
<status status="PASS" starttime="20201030 15:53:15.495" endtime="20201030 15:53:15.498"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:15.502" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 15:53:15.501" endtime="20201030 15:53:15.503"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:15.505" level="INFO">VALUE: [0.100326209, 0.09915680599999996, 0.09968879200000003, 0.09969901399999997, 0.09969281899999999, 0.09968223600000004, 0.09967916700000001, 0.09968591699999996, 0.09967811100000001, 0.09968119400000008, 0.09967927700000012, 0.099680569, 0.09968270800000001, 0.09968570799999998, 0.09968008299999997, 0.09968633400000004, 0.099689264, 0.09968504200000017, 0.09969348600000005, 0.099689417, 0.099693861, 0.09969493100000015, 0.0996936530000001, 0.09969275, 0.09968924999999995, 0.09968179200000016, 0.09968568099999997, 0.09968619499999987, 0.0996904999999999, 0.09969062500000003, 0.0996880280000001, 0.09968763899999988, 0.09968681899999998, 0.09968404200000025, 0.09968631899999991, 0.0996837359999998, 0.09967965199999984, 0.0996849860000002, 0.09968600000000016, 0.09969052799999956, 0.09968649999999979, 0.09968018000000001, 0.09967988899999991, 0.09967952799999935, 0.09967825000000019, 0.09967251400000077, 0.09967840300000042, 0.09967309700000015, 0.09966677800000046, 0.09967230600000043, 0.09967816699999954]</msg>
<status status="PASS" starttime="20201030 15:53:15.503" endtime="20201030 15:53:15.505"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.499" endtime="20201030 15:53:15.505"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:15.509" endtime="20201030 15:53:15.528"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.507" endtime="20201030 15:53:15.529"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.506" endtime="20201030 15:53:15.529"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.997" endtime="20201030 15:53:15.529"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="PASS" starttime="20201030 15:53:08.929" endtime="20201030 15:53:15.530" critical="yes"></status>
</test>
<test id="s1-s4-t4" name="15 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:15.536" endtime="20201030 15:53:15.556"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.535" endtime="20201030 15:53:15.556"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:15.570" endtime="20201030 15:53:15.583"></status>
</kw>
<msg timestamp="20201030 15:53:15.583" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:15.568" endtime="20201030 15:53:15.583"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:15.586" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:15.584" endtime="20201030 15:53:15.586"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:53:15.588" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:53:15.587" endtime="20201030 15:53:15.589"></status>
</kw>
<status status="FAIL" starttime="20201030 15:53:15.566" endtime="20201030 15:53:15.589"></status>
</kw>
<status status="FAIL" starttime="20201030 15:53:15.563" endtime="20201030 15:53:15.590"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.561" endtime="20201030 15:53:15.590"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:53:15.594" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:53:15.593" endtime="20201030 15:53:15.594"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.591" endtime="20201030 15:53:15.595"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.561" endtime="20201030 15:53:15.595"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.560" endtime="20201030 15:53:15.595"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:15.596" endtime="20201030 15:53:15.597"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.559" endtime="20201030 15:53:15.598"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.557" endtime="20201030 15:53:15.598"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.534" endtime="20201030 15:53:15.598"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>15</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:15.606" endtime="20201030 15:53:21.708"></status>
</kw>
<msg timestamp="20201030 15:53:21.709" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:15.605" endtime="20201030 15:53:21.709"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:21.714" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:21.711" endtime="20201030 15:53:21.715"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:21.716" endtime="20201030 15:53:21.719"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.602" endtime="20201030 15:53:21.720"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.600" endtime="20201030 15:53:21.721"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:21.727" level="INFO">${RESULT} = {'bg-timer-count': 15, 'bg-timer-interval': 20000, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201030 15:53:21.723" endtime="20201030 15:53:21.727"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:21.735" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 15:53:21.733" endtime="20201030 15:53:21.736"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:21.739" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 15:53:21.737" endtime="20201030 15:53:21.740"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.728" endtime="20201030 15:53:21.741"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:21.748" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 15:53:21.747" endtime="20201030 15:53:21.749"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:21.753" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 15:53:21.751" endtime="20201030 15:53:21.753"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.742" endtime="20201030 15:53:21.755"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:21.769" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 15:53:21.760" endtime="20201030 15:53:21.770"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:21.774" level="INFO">VALUE: 15</msg>
<status status="PASS" starttime="20201030 15:53:21.772" endtime="20201030 15:53:21.775"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.756" endtime="20201030 15:53:21.776"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:21.782" endtime="20201030 15:53:22.079"></status>
</kw>
<msg timestamp="20201030 15:53:22.082" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.061629986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.162356125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:21.780" endtime="20201030 15:53:22.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:22.090" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.061629986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.162356125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:22.083" endtime="20201030 15:53:22.091"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:22.091" endtime="20201030 15:53:22.093"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.778" endtime="20201030 15:53:22.093"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.776" endtime="20201030 15:53:22.094"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 15:53:22.098" level="INFO">${FILTERED} = [{'diff': 0.10072613899999999}, {'diff': 0.09985823600000002}, {'diff': 0.09853793099999997}, {'diff': 0.09967362499999999}, {'diff': 0.09966719400000001}, {'diff': 0.09966898599999996}, {'diff': 0.09...</msg>
<status status="PASS" starttime="20201030 15:53:22.095" endtime="20201030 15:53:22.098"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:22.102" level="INFO">${RESULT} = {'diff': [0.10072613899999999, 0.09985823600000002, 0.09853793099999997, 0.09967362499999999, 0.09966719400000001, 0.09966898599999996, 0.09967532000000001, 0.0996723610000001, 0.09966808299999996, 0....</msg>
<status status="PASS" starttime="20201030 15:53:22.099" endtime="20201030 15:53:22.102"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:22.106" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 15:53:22.105" endtime="20201030 15:53:22.106"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:22.109" level="INFO">VALUE: [0.10072613899999999, 0.09985823600000002, 0.09853793099999997, 0.09967362499999999, 0.09966719400000001, 0.09966898599999996, 0.09967532000000001, 0.0996723610000001, 0.09966808299999996, 0.09966692999999993, 0.09966493099999996, 0.09966041699999995, 0.09966091700000002, 0.09966563799999983, 0.0996579580000001, 0.09965863900000005, 0.09967818100000003, 0.09967872300000002, 0.09967811100000001, 0.0996784719999999, 0.09968207000000007, 0.09967545900000019, 0.09967179199999965, 0.099674555, 0.0996709440000001, 0.09967300000000012, 0.09967951399999997, 0.0996805270000003, 0.09968029199999995, 0.09968804199999992, 0.09968576400000018, 0.09968362499999994, 0.09967736100000035, 0.0996818610000001, 0.09968329200000037, 0.09968258300000032, 0.09968305599999994, 0.09968816599999997, 0.09968598600000034, 0.09968269399999974, 0.09968677800000059, 0.09968949999999932, 0.09969013900000068, 0.09968942999999975, 0.0996882639999992, 0.09969113899999993, 0.099687458, 0.09967963899999965, 0.09968605600000036, 0.09968922199999941, 0.09968988799999945]</msg>
<status status="PASS" starttime="20201030 15:53:22.107" endtime="20201030 15:53:22.109"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.103" endtime="20201030 15:53:22.110"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:22.113" endtime="20201030 15:53:22.133"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.112" endtime="20201030 15:53:22.133"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.111" endtime="20201030 15:53:22.134"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.599" endtime="20201030 15:53:22.134"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="PASS" starttime="20201030 15:53:15.531" endtime="20201030 15:53:22.135" critical="yes"></status>
</test>
<test id="s1-s4-t5" name="20 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:22.141" endtime="20201030 15:53:22.160"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.139" endtime="20201030 15:53:22.161"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:22.174" endtime="20201030 15:53:22.186"></status>
</kw>
<msg timestamp="20201030 15:53:22.187" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:22.173" endtime="20201030 15:53:22.187"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:22.189" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:22.188" endtime="20201030 15:53:22.190"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:53:22.192" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:53:22.190" endtime="20201030 15:53:22.193"></status>
</kw>
<status status="FAIL" starttime="20201030 15:53:22.170" endtime="20201030 15:53:22.193"></status>
</kw>
<status status="FAIL" starttime="20201030 15:53:22.168" endtime="20201030 15:53:22.194"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.166" endtime="20201030 15:53:22.194"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:53:22.198" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:53:22.197" endtime="20201030 15:53:22.198"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.195" endtime="20201030 15:53:22.198"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.165" endtime="20201030 15:53:22.199"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.165" endtime="20201030 15:53:22.199"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:22.199" endtime="20201030 15:53:22.201"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.163" endtime="20201030 15:53:22.202"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.162" endtime="20201030 15:53:22.202"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.138" endtime="20201030 15:53:22.202"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>20</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:22.211" endtime="20201030 15:53:28.314"></status>
</kw>
<msg timestamp="20201030 15:53:28.315" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:22.209" endtime="20201030 15:53:28.316"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:28.320" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:28.317" endtime="20201030 15:53:28.321"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:28.323" endtime="20201030 15:53:28.326"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.206" endtime="20201030 15:53:28.327"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.204" endtime="20201030 15:53:28.328"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:28.333" level="INFO">${RESULT} = {'bg-timer-count': 20, 'bg-timer-interval': 20000, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201030 15:53:28.329" endtime="20201030 15:53:28.333"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:28.341" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 15:53:28.339" endtime="20201030 15:53:28.342"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:28.346" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 15:53:28.344" endtime="20201030 15:53:28.346"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:28.335" endtime="20201030 15:53:28.347"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:28.356" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 15:53:28.353" endtime="20201030 15:53:28.357"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:28.361" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 15:53:28.358" endtime="20201030 15:53:28.361"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:28.349" endtime="20201030 15:53:28.362"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:28.370" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 15:53:28.368" endtime="20201030 15:53:28.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:28.374" level="INFO">VALUE: 20</msg>
<status status="PASS" starttime="20201030 15:53:28.373" endtime="20201030 15:53:28.375"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:28.364" endtime="20201030 15:53:28.376"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:28.390" endtime="20201030 15:53:28.693"></status>
</kw>
<msg timestamp="20201030 15:53:28.696" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062338972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.163583611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:28.386" endtime="20201030 15:53:28.696"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:28.704" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062338972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.163583611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:28.697" endtime="20201030 15:53:28.705"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:28.705" endtime="20201030 15:53:28.707"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:28.381" endtime="20201030 15:53:28.707"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:28.377" endtime="20201030 15:53:28.708"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 15:53:28.712" level="INFO">${FILTERED} = [{'diff': 0.101244639}, {'diff': 0.09989569399999998}, {'diff': 0.09806051399999999}, {'diff': 0.099686944}, {'diff': 0.09968897199999999}, {'diff': 0.09968730600000009}, {'diff': 0.09968644400000004}...</msg>
<status status="PASS" starttime="20201030 15:53:28.709" endtime="20201030 15:53:28.712"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:28.716" level="INFO">${RESULT} = {'diff': [0.101244639, 0.09989569399999998, 0.09806051399999999, 0.099686944, 0.09968897199999999, 0.09968730600000009, 0.09968644400000004, 0.09968763800000002, 0.09969240299999993, 0.099689083999999...</msg>
<status status="PASS" starttime="20201030 15:53:28.713" endtime="20201030 15:53:28.717"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:28.720" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 15:53:28.719" endtime="20201030 15:53:28.721"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:28.723" level="INFO">VALUE: [0.101244639, 0.09989569399999998, 0.09806051399999999, 0.099686944, 0.09968897199999999, 0.09968730600000009, 0.09968644400000004, 0.09968763800000002, 0.09969240299999993, 0.09968908399999987, 0.09968449999999995, 0.09968636099999983, 0.09968493, 0.09968490299999999, 0.09968325, 0.09968219399999989, 0.09967797200000006, 0.09968373600000002, 0.09968488900000017, 0.0996913749999997, 0.09968494500000036, 0.09968365300000004, 0.09968263900000007, 0.09968077800000019, 0.09968716699999991, 0.09968632, 0.09968334700000003, 0.09968148600000015, 0.09968836099999967, 0.09968693099999992, 0.09967783399999997, 0.09967273600000004, 0.09967912499999976, 0.09968505500000013, 0.09968527799999993, 0.09967811200000032, 0.099676514, 0.09968448600000013, 0.09968850000000007, 0.09969258300000039, 0.09969159799999971, 0.09968569399999971, 0.09968783299999995, 0.09969108299999974, 0.0996894579999994, 0.09968872200000067, 0.09968951400000048, 0.09969220899999964, 0.0996957639999998, 0.0996974030000004, 0.09968979200000039]</msg>
<status status="PASS" starttime="20201030 15:53:28.722" endtime="20201030 15:53:28.723"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:28.717" endtime="20201030 15:53:28.724"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:28.727" endtime="20201030 15:53:28.746"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:28.726" endtime="20201030 15:53:28.747"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:28.725" endtime="20201030 15:53:28.747"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.203" endtime="20201030 15:53:28.748"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="PASS" starttime="20201030 15:53:22.136" endtime="20201030 15:53:28.748" critical="yes"></status>
</test>
<test id="s1-s4-t6" name="25 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:28.755" endtime="20201030 15:53:28.774"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:28.754" endtime="20201030 15:53:28.775"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:28.788" endtime="20201030 15:53:28.801"></status>
</kw>
<msg timestamp="20201030 15:53:28.801" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:28.786" endtime="20201030 15:53:28.801"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:28.804" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:28.802" endtime="20201030 15:53:28.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:53:28.807" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:53:28.805" endtime="20201030 15:53:28.807"></status>
</kw>
<status status="FAIL" starttime="20201030 15:53:28.784" endtime="20201030 15:53:28.808"></status>
</kw>
<status status="FAIL" starttime="20201030 15:53:28.781" endtime="20201030 15:53:28.808"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:28.780" endtime="20201030 15:53:28.808"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:53:28.812" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:53:28.811" endtime="20201030 15:53:28.813"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:28.809" endtime="20201030 15:53:28.813"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:28.779" endtime="20201030 15:53:28.813"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:28.779" endtime="20201030 15:53:28.813"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:28.814" endtime="20201030 15:53:28.815"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:28.777" endtime="20201030 15:53:28.816"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:28.776" endtime="20201030 15:53:28.816"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:28.752" endtime="20201030 15:53:28.816"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>25</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:28.824" endtime="20201030 15:53:34.927"></status>
</kw>
<msg timestamp="20201030 15:53:34.928" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:28.823" endtime="20201030 15:53:34.928"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:34.933" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:34.930" endtime="20201030 15:53:34.934"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:34.935" endtime="20201030 15:53:34.938"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:28.820" endtime="20201030 15:53:34.939"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:28.818" endtime="20201030 15:53:34.940"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:34.945" level="INFO">${RESULT} = {'bg-timer-count': 25, 'bg-timer-interval': 20000, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201030 15:53:34.942" endtime="20201030 15:53:34.946"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:34.955" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 15:53:34.952" endtime="20201030 15:53:34.955"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:34.959" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 15:53:34.957" endtime="20201030 15:53:34.959"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:34.947" endtime="20201030 15:53:34.961"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:34.968" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 15:53:34.966" endtime="20201030 15:53:34.969"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:34.973" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 15:53:34.971" endtime="20201030 15:53:34.973"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:34.962" endtime="20201030 15:53:34.974"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:34.982" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 15:53:34.980" endtime="20201030 15:53:34.983"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:34.986" level="INFO">VALUE: 25</msg>
<status status="PASS" starttime="20201030 15:53:34.985" endtime="20201030 15:53:34.987"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:34.975" endtime="20201030 15:53:34.988"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:35.001" endtime="20201030 15:53:35.301"></status>
</kw>
<msg timestamp="20201030 15:53:35.304" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.061170639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.163079847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:34.998" endtime="20201030 15:53:35.304"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:35.312" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.061170639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.163079847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:35.305" endtime="20201030 15:53:35.312"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:35.313" endtime="20201030 15:53:35.314"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:34.993" endtime="20201030 15:53:35.315"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:34.989" endtime="20201030 15:53:35.315"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 15:53:35.319" level="INFO">${FILTERED} = [{'diff': 0.101909208}, {'diff': 0.099920597}, {'diff': 0.09739709699999999}, {'diff': 0.10247879199999999}, {'diff': 0.09690511099999999}, {'diff': 0.09968936099999992}, {'diff': 0.09968995800000002}...</msg>
<status status="PASS" starttime="20201030 15:53:35.316" endtime="20201030 15:53:35.319"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:35.323" level="INFO">${RESULT} = {'diff': [0.101909208, 0.099920597, 0.09739709699999999, 0.10247879199999999, 0.09690511099999999, 0.09968936099999992, 0.09968995800000002, 0.09969834700000002, 0.099694736, 0.09968592999999992, 0.09...</msg>
<status status="PASS" starttime="20201030 15:53:35.320" endtime="20201030 15:53:35.323"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:35.327" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 15:53:35.326" endtime="20201030 15:53:35.327"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:35.329" level="INFO">VALUE: [0.101909208, 0.099920597, 0.09739709699999999, 0.10247879199999999, 0.09690511099999999, 0.09968936099999992, 0.09968995800000002, 0.09969834700000002, 0.099694736, 0.09968592999999992, 0.09968268000000013, 0.09968162499999988, 0.09968200000000005, 0.09968192999999981, 0.09968672200000017, 0.09968804200000014, 0.099690222, 0.09968401399999993, 0.09969088900000012, 0.099689833, 0.09968668000000003, 0.09968886100000018, 0.0996860690000001, 0.09968930600000014, 0.09968613900000012, 0.09969265299999996, 0.09969120799999986, 0.09968583299999967, 0.09968936100000025, 0.09969483400000012, 0.09969313899999976, 0.09969273600000017, 0.0996925420000001, 0.09968944400000002, 0.09969594400000004, 0.09969699999999992, 0.099691639, 0.09968590300000013, 0.0996849580000001, 0.0996889030000001, 0.09969134699999938, 0.09969387499999982, 0.09969804199999999, 0.09969204099999995, 0.09969319400000032, 0.09969275, 0.09969527800000044, 0.0996943469999998, 0.09969091599999924, 0.0996949030000005, 0.09969948599999956]</msg>
<status status="PASS" starttime="20201030 15:53:35.328" endtime="20201030 15:53:35.330"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:35.324" endtime="20201030 15:53:35.330"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:35.334" endtime="20201030 15:53:35.354"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:35.332" endtime="20201030 15:53:35.354"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:35.331" endtime="20201030 15:53:35.355"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:28.817" endtime="20201030 15:53:35.355"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="PASS" starttime="20201030 15:53:28.750" endtime="20201030 15:53:35.355" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 15:52:54.053" endtime="20201030 15:53:35.362"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">saml10-xpro</item>
<item name="RIOT-Version">2020.07</item>
</metadata>
<status status="FAIL" starttime="20201030 15:51:06.540" endtime="20201030 15:53:35.394"></status>
</suite>
<statistics>
<total>
<stat pass="17" fail="1">Critical Tests</stat>
<stat pass="17" fail="1">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="17" fail="1">APP_tests_xtimer_benchmarks</stat>
<stat pass="17" fail="1">BOARD_saml10-xpro</stat>
<stat pass="10" fail="0">dev</stat>
</tag>
<suite>
<stat pass="17" fail="1" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="9" fail="0" id="s1-s2" name="Timer Overhead">tests_xtimer_benchmarks.Timer Overhead</stat>
<stat pass="1" fail="1" id="s1-s3" name="Sleep Accuracy">tests_xtimer_benchmarks.Sleep Accuracy</stat>
<stat pass="6" fail="0" id="s1-s4" name="Sleep Jitter">tests_xtimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
